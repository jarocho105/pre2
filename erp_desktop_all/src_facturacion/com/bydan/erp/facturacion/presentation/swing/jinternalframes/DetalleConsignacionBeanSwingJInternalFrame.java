/*
*AVISO LEGAL
Â© Copyright
*Este programa esta protegido por la ley de derechos de autor.
*La reproduccion o distribucion ilicita de este programa o de cualquiera de
*sus partes esta penado por la ley con severas sanciones civiles y penales,
*y seran objeto de todas las sanciones legales que correspondan.

*Su contenido no puede copiarse para fines comerciales o de otras,
*ni puede mostrarse, incluso en una version modificada, en otros sitios Web.
Solo esta permitido colocar hipervinculos al sitio web.
*/
package com.bydan.erp.facturacion.presentation.swing.jinternalframes;




import com.bydan.erp.seguridad.business.entity.Usuario;
import com.bydan.erp.seguridad.business.entity.ResumenUsuario;
import com.bydan.erp.seguridad.business.entity.Opcion;
import com.bydan.erp.seguridad.business.entity.PerfilOpcion;
import com.bydan.erp.seguridad.business.entity.PerfilCampo;
import com.bydan.erp.seguridad.business.entity.PerfilAccion;
import com.bydan.erp.seguridad.business.entity.ParametroGeneralSg;
import com.bydan.erp.seguridad.business.entity.ParametroGeneralUsuario;
import com.bydan.erp.seguridad.business.entity.Modulo;
import com.bydan.erp.seguridad.business.entity.Accion;

import com.bydan.erp.seguridad.util.SistemaParameterReturnGeneralAdditional;
import com.bydan.erp.seguridad.util.SistemaParameterReturnGeneral;


//import com.bydan.erp.seguridad.business.entity.PerfilAccion;


import com.bydan.erp.seguridad.util.SistemaConstantesFunciones;
import com.bydan.erp.seguridad.util.SistemaConstantesFuncionesAdditional;
import com.bydan.erp.seguridad.business.logic.SistemaLogicAdditional;

import com.bydan.erp.facturacion.util.DetalleConsignacionConstantesFunciones;
import com.bydan.erp.facturacion.util.DetalleConsignacionParameterReturnGeneral;
//import com.bydan.erp.facturacion.util.DetalleConsignacionParameterGeneral;
//import com.bydan.erp.facturacion.presentation.report.source.DetalleConsignacionBean;
import com.bydan.framework.erp.business.dataaccess.ConstantesSql;
import com.bydan.framework.erp.business.entity.Classe;
import com.bydan.framework.erp.business.entity.DatoGeneral;
import com.bydan.framework.erp.business.entity.GeneralEntityParameterGeneral;
import com.bydan.framework.erp.business.entity.OrderBy;
import com.bydan.framework.erp.business.entity.DatoGeneralMinimo;
import com.bydan.framework.erp.business.entity.GeneralEntity;
import com.bydan.framework.erp.business.entity.Mensajes;
import com.bydan.framework.erp.business.entity.GeneralEntityParameterReturnGeneral;
//import com.bydan.framework.erp.business.entity.MaintenanceType;
import com.bydan.framework.erp.util.MaintenanceType;
import com.bydan.framework.erp.util.FuncionesReporte;
import com.bydan.framework.erp.business.logic.DatosCliente;
import com.bydan.framework.erp.business.logic.Pagination;

import com.bydan.erp.facturacion.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.framework.erp.presentation.desktop.swing.TablaGeneralTotalModel;
import com.bydan.framework.erp.presentation.desktop.swing.TablaGeneralOrderByModel;
import com.bydan.framework.erp.presentation.desktop.swing.DateConverter;
import com.bydan.framework.erp.presentation.desktop.swing.DateConverterFromDate;
import com.bydan.framework.erp.presentation.desktop.swing.DateRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.DateEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.BooleanRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.BooleanEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.TextFieldRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.RunnableProceso;
import com.bydan.framework.erp.presentation.desktop.swing.*;
//import com.bydan.framework.erp.presentation.desktop.swing.TextFieldEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.HeaderRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.JInternalFrameBase;
import com.bydan.framework.erp.presentation.desktop.swing.FuncionesSwing;
import com.bydan.framework.erp.presentation.desktop.swing.MainJFrame;
import com.bydan.framework.erp.resources.imagenes.AuxiliarImagenes;
import com.bydan.erp.facturacion.resources.reportes.AuxiliarReportes;


import com.bydan.erp.facturacion.util.*;
import com.bydan.erp.facturacion.business.logic.*;

import com.bydan.erp.seguridad.business.logic.*;
import com.bydan.erp.contabilidad.business.logic.*;
import com.bydan.erp.inventario.business.logic.*;

//EJB

//PARAMETROS


//EJB PARAMETROS

import com.bydan.framework.erp.business.logic.*;
import com.bydan.framework.erp.util.*;

import com.bydan.erp.facturacion.business.entity.*;
//import com.bydan.framework.erp.business.entity.ConexionBeanFace;
//import com.bydan.framework.erp.business.entity.Mensajes;


import com.bydan.erp.seguridad.presentation.swing.jinternalframes.*;
import com.bydan.erp.contabilidad.presentation.swing.jinternalframes.*;
import com.bydan.erp.inventario.presentation.swing.jinternalframes.*;

import com.bydan.erp.seguridad.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.contabilidad.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.inventario.presentation.swing.jinternalframes.auxiliar.*;






import javax.imageio.ImageIO;
import java.net.NetworkInterface;
import java.net.InterfaceAddress;
import java.net.InetAddress;
import javax.naming.InitialContext;
import java.lang.Long;
import java.util.Date;
import java.util.Enumeration;
import java.util.Iterator;
import java.util.Set;
import java.util.HashSet;
import java.util.List;
import java.util.ArrayList;
import java.io.Serializable;
import java.util.Hashtable;
import java.util.Collections;
import java.io.File;
import java.io.FileInputStream;
import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.io.BufferedReader;
import java.io.FileReader;
import java.util.HashMap;
import java.util.Map;
import java.io.PrintWriter;
import java.sql.SQLException;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.transform.stream.StreamSource;

import org.xml.sax.EntityResolver;
import org.xml.sax.InputSource;
import org.xml.sax.SAXException;

import org.w3c.dom.Document;
import org.w3c.dom.Document;
import org.w3c.dom.NodeList;
import org.w3c.dom.Node;
import org.w3c.dom.Element;

import org.apache.poi.hssf.usermodel.HSSFCell;
import org.apache.poi.hssf.usermodel.HSSFRow;
import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellStyle;
import org.apache.poi.ss.usermodel.IndexedColors;
import org.apache.poi.ss.util.CellRangeAddress;

import javax.xml.transform.Transformer;
import javax.xml.transform.TransformerFactory;
import javax.xml.transform.dom.DOMSource;
import javax.xml.transform.stream.StreamResult;


import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JRRuntimeException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.engine.export.JRHtmlExporter;
import net.sf.jasperreports.j2ee.servlets.BaseHttpServlet;
import net.sf.jasperreports.engine.JRExporterParameter;
import net.sf.jasperreports.engine.data.JRBeanArrayDataSource;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import net.sf.jasperreports.view.JasperViewer;

import org.apache.log4j.Logger;

import com.bydan.framework.erp.business.entity.Reporte;


//VALIDACION
import org.hibernate.validator.ClassValidator;
import org.hibernate.validator.InvalidValue;

import net.sf.jasperreports.engine.JREmptyDataSource;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperExportManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperPrintManager;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.JasperRunManager;
import net.sf.jasperreports.engine.export.JExcelApiExporter;
import net.sf.jasperreports.engine.export.JRCsvExporter;
import net.sf.jasperreports.engine.export.JRRtfExporter;
import net.sf.jasperreports.engine.export.JRXlsExporter;
import net.sf.jasperreports.engine.export.JRXlsExporterParameter;
import net.sf.jasperreports.engine.util.JRSaver;
import net.sf.jasperreports.engine.xml.JRXmlWriter;


import com.bydan.erp.facturacion.presentation.web.jsf.sessionbean.*;

import java.util.EventObject;
import javax.swing.*;
import javax.swing.border.Border;
import javax.swing.border.TitledBorder;
import javax.swing.border.EmptyBorder;
import javax.swing.event.*;
import javax.swing.table.AbstractTableModel;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.TableColumn;
import javax.swing.table.TableCellEditor;
import javax.swing.table.TableCellRenderer;
import java.awt.*;
import java.awt.event.*;

import org.jdesktop.beansbinding.Binding.SyncFailure;
import org.jdesktop.beansbinding.BindingListener;
import org.jdesktop.beansbinding.Bindings;
import org.jdesktop.beansbinding.BeanProperty;
import org.jdesktop.beansbinding.ELProperty;
import org.jdesktop.beansbinding.AutoBinding.UpdateStrategy;
import org.jdesktop.beansbinding.PropertyStateEvent;
import org.jdesktop.swingbinding.JComboBoxBinding;
import org.jdesktop.swingbinding.SwingBindings;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeEvent;

import com.toedter.calendar.JDateChooser;


import com.bydan.erp.seguridad.business.entity.*;
import com.bydan.erp.contabilidad.business.entity.*;
import com.bydan.erp.inventario.business.entity.*;
import com.bydan.erp.seguridad.util.*;
import com.bydan.erp.contabilidad.util.*;
import com.bydan.erp.inventario.util.*;
import com.bydan.erp.seguridad.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.contabilidad.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.inventario.presentation.web.jsf.sessionbean.*;


@SuppressWarnings("unused")
public class DetalleConsignacionBeanSwingJInternalFrame extends DetalleConsignacionJInternalFrame implements WindowListener,WindowFocusListener
{				
	
	public static final long serialVersionUID = 1L;
	
	public static Logger logger = Logger.getLogger(DetalleConsignacionBeanSwingJInternalFrame.class);  
	
	public static ClassValidator<DetalleConsignacion> detalleconsignacionValidator = new ClassValidator<DetalleConsignacion>(DetalleConsignacion.class);
	
	public InvalidValue[] invalidValues=null;
		

	//Ejb Foreign Keys
	
	public DetalleConsignacion detalleconsignacion;	
	public DetalleConsignacion detalleconsignacionAux;
	public DetalleConsignacion detalleconsignacionAnterior;//USADO PARA MANEJAR FOCUS GAINED,LOST
	public DetalleConsignacion detalleconsignacionTotales;
	public Long idDetalleConsignacionActual;
	public Long iIdNuevoDetalleConsignacion=0L;
	public int rowIndexActual=0;
	
	
	
	
	public String sFinalQueryComboEmpresa="";

	public List<Empresa> empresasForeignKey;

	public List<Empresa> getempresasForeignKey() {
		return empresasForeignKey;
	}

	public void setempresasForeignKey(List<Empresa> empresasForeignKey) {
		this.empresasForeignKey = empresasForeignKey;
	}

	//OBJETO FK ACTUAL
	public Empresa empresaForeignKey;

	public Empresa getempresaForeignKey() {
		return empresaForeignKey;
	}

	public void setempresaForeignKey(Empresa empresaForeignKey) {
		this.empresaForeignKey = empresaForeignKey;
	}

	public String sFinalQueryComboSucursal="";

	public List<Sucursal> sucursalsForeignKey;

	public List<Sucursal> getsucursalsForeignKey() {
		return sucursalsForeignKey;
	}

	public void setsucursalsForeignKey(List<Sucursal> sucursalsForeignKey) {
		this.sucursalsForeignKey = sucursalsForeignKey;
	}

	//OBJETO FK ACTUAL
	public Sucursal sucursalForeignKey;

	public Sucursal getsucursalForeignKey() {
		return sucursalForeignKey;
	}

	public void setsucursalForeignKey(Sucursal sucursalForeignKey) {
		this.sucursalForeignKey = sucursalForeignKey;
	}

	public String sFinalQueryComboEjercicio="";

	public List<Ejercicio> ejerciciosForeignKey;

	public List<Ejercicio> getejerciciosForeignKey() {
		return ejerciciosForeignKey;
	}

	public void setejerciciosForeignKey(List<Ejercicio> ejerciciosForeignKey) {
		this.ejerciciosForeignKey = ejerciciosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Ejercicio ejercicioForeignKey;

	public Ejercicio getejercicioForeignKey() {
		return ejercicioForeignKey;
	}

	public void setejercicioForeignKey(Ejercicio ejercicioForeignKey) {
		this.ejercicioForeignKey = ejercicioForeignKey;
	}

	public String sFinalQueryComboPeriodo="";

	public List<Periodo> periodosForeignKey;

	public List<Periodo> getperiodosForeignKey() {
		return periodosForeignKey;
	}

	public void setperiodosForeignKey(List<Periodo> periodosForeignKey) {
		this.periodosForeignKey = periodosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Periodo periodoForeignKey;

	public Periodo getperiodoForeignKey() {
		return periodoForeignKey;
	}

	public void setperiodoForeignKey(Periodo periodoForeignKey) {
		this.periodoForeignKey = periodoForeignKey;
	}

	public String sFinalQueryComboAnio="";

	public List<Anio> aniosForeignKey;

	public List<Anio> getaniosForeignKey() {
		return aniosForeignKey;
	}

	public void setaniosForeignKey(List<Anio> aniosForeignKey) {
		this.aniosForeignKey = aniosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Anio anioForeignKey;

	public Anio getanioForeignKey() {
		return anioForeignKey;
	}

	public void setanioForeignKey(Anio anioForeignKey) {
		this.anioForeignKey = anioForeignKey;
	}

	public String sFinalQueryComboMes="";

	public List<Mes> messForeignKey;

	public List<Mes> getmessForeignKey() {
		return messForeignKey;
	}

	public void setmessForeignKey(List<Mes> messForeignKey) {
		this.messForeignKey = messForeignKey;
	}

	//OBJETO FK ACTUAL
	public Mes mesForeignKey;

	public Mes getmesForeignKey() {
		return mesForeignKey;
	}

	public void setmesForeignKey(Mes mesForeignKey) {
		this.mesForeignKey = mesForeignKey;
	}

	public String sFinalQueryComboConsignacion="";

	public List<Consignacion> consignacionsForeignKey;

	public List<Consignacion> getconsignacionsForeignKey() {
		return consignacionsForeignKey;
	}

	public void setconsignacionsForeignKey(List<Consignacion> consignacionsForeignKey) {
		this.consignacionsForeignKey = consignacionsForeignKey;
	}

	//OBJETO FK ACTUAL
	public Consignacion consignacionForeignKey;

	public Consignacion getconsignacionForeignKey() {
		return consignacionForeignKey;
	}

	public void setconsignacionForeignKey(Consignacion consignacionForeignKey) {
		this.consignacionForeignKey = consignacionForeignKey;
	}

	public String sFinalQueryComboProducto="";

	public List<Producto> productosForeignKey;

	public List<Producto> getproductosForeignKey() {
		return productosForeignKey;
	}

	public void setproductosForeignKey(List<Producto> productosForeignKey) {
		this.productosForeignKey = productosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Producto productoForeignKey;

	public Producto getproductoForeignKey() {
		return productoForeignKey;
	}

	public void setproductoForeignKey(Producto productoForeignKey) {
		this.productoForeignKey = productoForeignKey;
	}

	public String sFinalQueryComboBodega="";

	public List<Bodega> bodegasForeignKey;

	public List<Bodega> getbodegasForeignKey() {
		return bodegasForeignKey;
	}

	public void setbodegasForeignKey(List<Bodega> bodegasForeignKey) {
		this.bodegasForeignKey = bodegasForeignKey;
	}

	//OBJETO FK ACTUAL
	public Bodega bodegaForeignKey;

	public Bodega getbodegaForeignKey() {
		return bodegaForeignKey;
	}

	public void setbodegaForeignKey(Bodega bodegaForeignKey) {
		this.bodegaForeignKey = bodegaForeignKey;
	}

	public String sFinalQueryComboUnidad="";

	public List<Unidad> unidadsForeignKey;

	public List<Unidad> getunidadsForeignKey() {
		return unidadsForeignKey;
	}

	public void setunidadsForeignKey(List<Unidad> unidadsForeignKey) {
		this.unidadsForeignKey = unidadsForeignKey;
	}

	//OBJETO FK ACTUAL
	public Unidad unidadForeignKey;

	public Unidad getunidadForeignKey() {
		return unidadForeignKey;
	}

	public void setunidadForeignKey(Unidad unidadForeignKey) {
		this.unidadForeignKey = unidadForeignKey;
	}

	public String sFinalQueryComboEstadoDetallePedido="";

	public List<EstadoDetallePedido> estadodetallepedidosForeignKey;

	public List<EstadoDetallePedido> getestadodetallepedidosForeignKey() {
		return estadodetallepedidosForeignKey;
	}

	public void setestadodetallepedidosForeignKey(List<EstadoDetallePedido> estadodetallepedidosForeignKey) {
		this.estadodetallepedidosForeignKey = estadodetallepedidosForeignKey;
	}

	//OBJETO FK ACTUAL
	public EstadoDetallePedido estadodetallepedidoForeignKey;

	public EstadoDetallePedido getestadodetallepedidoForeignKey() {
		return estadodetallepedidoForeignKey;
	}

	public void setestadodetallepedidoForeignKey(EstadoDetallePedido estadodetallepedidoForeignKey) {
		this.estadodetallepedidoForeignKey = estadodetallepedidoForeignKey;
	}

		
	
	
	
	//BUSQUEDA INTERNA FK
	public Long idProductoActual=0L;

	public Long getidProductoActual() {
		return idProductoActual;
	}

	public void setidProductoActual(Long idProductoActual) {
		this.idProductoActual= idProductoActual;
	}
	
	
	
	
	//FALTA:PARA BUSQUEDAS POR CAMPO EN FORMULARIO
	public String sFinalQueryGeneral="";
	public Boolean isEntroOnLoad=false;
	public Boolean isErrorGuardar=false;
	
	public Boolean isGuardarCambiosEnLote=false;
	public Boolean isCargarCombosDependencia=false;
	public Boolean isSeleccionarTodos=false;
	public Boolean isSeleccionados=false;
	public Boolean conGraficoReporte=false;
	
	public Boolean isPostAccionNuevo=false;
	public Boolean isPostAccionSinCerrar=false;
	public Boolean isPostAccionSinMensaje=false;
	
	
	public Boolean esControlTabla=false;
	
	public Boolean isPermisoTodoDetalleConsignacion;
	public Boolean isPermisoNuevoDetalleConsignacion;
	public Boolean isPermisoActualizarDetalleConsignacion;
	public Boolean isPermisoActualizarOriginalDetalleConsignacion;
	public Boolean isPermisoEliminarDetalleConsignacion;
	public Boolean isPermisoGuardarCambiosDetalleConsignacion;
	public Boolean isPermisoConsultaDetalleConsignacion;
	public Boolean isPermisoBusquedaDetalleConsignacion;
	public Boolean isPermisoReporteDetalleConsignacion;
	public Boolean isPermisoPaginacionMedioDetalleConsignacion;
	public Boolean isPermisoPaginacionAltoDetalleConsignacion;
	public Boolean isPermisoPaginacionTodoDetalleConsignacion;
	public Boolean isPermisoCopiarDetalleConsignacion;
	public Boolean isPermisoVerFormDetalleConsignacion;
	public Boolean isPermisoDuplicarDetalleConsignacion;
	public Boolean isPermisoOrdenDetalleConsignacion;
	
	
	public ArrayList<DatoGeneral> arrDatoGeneral;
	public ArrayList<String> arrDatoGeneralNo;
	ArrayList<Classe> classesActual=new ArrayList<Classe>();
	
	public List<Accion> accions;	
	public List<Accion> accionsFormulario;
	
	
	public ArrayList<DatoGeneralMinimo> arrDatoGeneralMinimos;
	
	public ArrayList<Reporte> tiposArchivosReportes;
	public ArrayList<Reporte> tiposArchivosReportesDinamico;
	public ArrayList<Reporte> tiposReportes;
	public ArrayList<Reporte> tiposReportesDinamico;
	public ArrayList<Reporte> tiposGraficosReportes;
	public ArrayList<Reporte> tiposPaginacion;
	public ArrayList<Reporte> tiposRelaciones;
	public ArrayList<Reporte> tiposAcciones;
	public ArrayList<Reporte> tiposAccionesFormulario;
	public ArrayList<Reporte> tiposSeleccionar;
	
	public ArrayList<Reporte> tiposColumnasSelect;
	public ArrayList<Reporte> tiposRelacionesSelect;
	
	
	public Integer iNumeroPaginacion;
	public Integer iNumeroPaginacionPagina;
	public Pagination pagination;
	public DatosCliente datosCliente;
	public DatosDeep datosDeep;
	public String sTipoArchivoReporte="";
	public String sTipoArchivoReporteDinamico="";
	public String sTipoReporte="";
	public String sTipoReporteDinamico="";
	public String sTipoGraficoReporte="";
	public String sTipoPaginacion="";
	public String sTipoRelacion="";
	public String sTipoAccion="";
	public String sTipoAccionFormulario="";
	public String sTipoSeleccionar="";	
	public String sDetalleReporte="";
	public Boolean isMostrarNumeroPaginacion;
	public String sTipoReporteExtra="";
	public String sValorCampoGeneral="";
	public Boolean esReporteDinamico=false;
	public Boolean esReporteAccionProceso=false;
	public Boolean esRecargarFks=false;
	public String sPathReporteDinamico="";
	
	public DetalleConsignacionParameterReturnGeneral detalleconsignacionReturnGeneral;
	public DetalleConsignacionParameterReturnGeneral detalleconsignacionParameterGeneral;
	
	 	
	public JasperPrint jasperPrint = null;
	
	public Long lIdUsuarioSesion=0L;				
	
	public Boolean isEsNuevoDetalleConsignacion=false;
	public Boolean esParaAccionDesdeFormularioDetalleConsignacion=false;
	public Boolean isEsMantenimientoRelacionesRelacionadoUnico=false;
	public Boolean isEsMantenimientoRelaciones=false;
	public Boolean isEsMantenimientoRelacionado=false;	
	public Boolean isContieneImagenes=false;
		
	//public Boolean conTotales=false; //Viene heredado de JInternalFrameBase
	//public Boolean esParaBusquedaForeignKey=false;
	
	
	protected DetalleConsignacionSessionBeanAdditional detalleconsignacionSessionBeanAdditional=null;
	
	public DetalleConsignacionSessionBeanAdditional getDetalleConsignacionSessionBeanAdditional() {
		return this.detalleconsignacionSessionBeanAdditional;
	}
	
	public void setDetalleConsignacionSessionBeanAdditional(DetalleConsignacionSessionBeanAdditional detalleconsignacionSessionBeanAdditional) {
		try {
			this.detalleconsignacionSessionBeanAdditional=detalleconsignacionSessionBeanAdditional;
		} catch(Exception e) {
			;
		}
	}
	
	
	
	
	protected DetalleConsignacionBeanSwingJInternalFrameAdditional detalleconsignacionBeanSwingJInternalFrameAdditional=null;
	//public class DetalleConsignacionBeanSwingJInternalFrame
	
	public DetalleConsignacionBeanSwingJInternalFrameAdditional getDetalleConsignacionBeanSwingJInternalFrameAdditional() {
		return this.detalleconsignacionBeanSwingJInternalFrameAdditional;
	}
	
	public void setDetalleConsignacionBeanSwingJInternalFrameAdditional(DetalleConsignacionBeanSwingJInternalFrameAdditional detalleconsignacionBeanSwingJInternalFrameAdditional) {
		try {
			this.detalleconsignacionBeanSwingJInternalFrameAdditional=detalleconsignacionBeanSwingJInternalFrameAdditional;
		} catch(Exception e) {
			;
		}
	}
	
	
	
	
	//ESTA EN PADRE
	
	//public DetalleConsignacionLogic detalleconsignacionLogic;
	public SistemaLogicAdditional sistemaLogicAdditional;
	
	
	public DetalleConsignacion detalleconsignacionBean;
	public DetalleConsignacionConstantesFunciones detalleconsignacionConstantesFunciones;
	//public DetalleConsignacionParameterReturnGeneral detalleconsignacionReturnGeneral;
	
	//FK
	
	public EmpresaLogic empresaLogic;
	public SucursalLogic sucursalLogic;
	public EjercicioLogic ejercicioLogic;
	public PeriodoLogic periodoLogic;
	public AnioLogic anioLogic;
	public MesLogic mesLogic;
	public ConsignacionLogic consignacionLogic;
	public ProductoLogic productoLogic;
	public BodegaLogic bodegaLogic;
	public UnidadLogic unidadLogic;
	public EstadoDetallePedidoLogic estadodetallepedidoLogic;
	
	//PARAMETROS
	
	
	//public List<DetalleConsignacion> detalleconsignacions;	
	//public List<DetalleConsignacion> detalleconsignacionsEliminados;
	//public List<DetalleConsignacion> detalleconsignacionsAux;
	
	public String sAccionMantenimiento="";
	public String sAccionBusqueda="";
	public String sAccionAdicional="";
	public String sUltimaBusqueda="";
	
	public Mensaje mensaje;
	
	
	public String sVisibilidadTablaBusquedas="";					
	public String sVisibilidadTablaElementos="";	
	public String sVisibilidadTablaAcciones="";			
	
	public Boolean isVisibilidadCeldaNuevoDetalleConsignacion=false;
	public Boolean isVisibilidadCeldaDuplicarDetalleConsignacion=true;
	public Boolean isVisibilidadCeldaCopiarDetalleConsignacion=true;
	public Boolean isVisibilidadCeldaVerFormDetalleConsignacion=true;
	public Boolean isVisibilidadCeldaOrdenDetalleConsignacion=true;
	public Boolean isVisibilidadCeldaNuevoRelacionesDetalleConsignacion=false;
	public Boolean isVisibilidadCeldaModificarDetalleConsignacion=false;
	public Boolean isVisibilidadCeldaActualizarDetalleConsignacion=false;
	public Boolean isVisibilidadCeldaEliminarDetalleConsignacion=false;
	public Boolean isVisibilidadCeldaCancelarDetalleConsignacion=false;
	public Boolean isVisibilidadCeldaGuardarDetalleConsignacion=false;	
	public Boolean isVisibilidadCeldaGuardarCambiosDetalleConsignacion=false;	
	
	
	public Boolean isVisibilidadFK_IdAnio=false;
	public Boolean isVisibilidadFK_IdBodega=false;
	public Boolean isVisibilidadFK_IdConsignacion=false;
	public Boolean isVisibilidadFK_IdEjercicio=false;
	public Boolean isVisibilidadFK_IdEmpresa=false;
	public Boolean isVisibilidadFK_IdEstadoDetallePedido=false;
	public Boolean isVisibilidadFK_IdMes=false;
	public Boolean isVisibilidadFK_IdPeriodo=false;
	public Boolean isVisibilidadFK_IdProducto=false;
	public Boolean isVisibilidadFK_IdSucursal=false;
	public Boolean isVisibilidadFK_IdUnidad=false;
	
	public Long getiIdNuevoDetalleConsignacion() {
		return this.iIdNuevoDetalleConsignacion;
	}

	public void setiIdNuevoDetalleConsignacion(Long iIdNuevoDetalleConsignacion) {
		this.iIdNuevoDetalleConsignacion = iIdNuevoDetalleConsignacion;
	}
	
	public Long getidDetalleConsignacionActual() {
		return this.idDetalleConsignacionActual;
	}

	public void setidDetalleConsignacionActual(Long idDetalleConsignacionActual) {
		this.idDetalleConsignacionActual = idDetalleConsignacionActual;
	}
	
	public int getrowIndexActual() {
		return this.rowIndexActual;
	}

	public void setrowIndexActual(int rowIndexActual) {
		this.rowIndexActual=rowIndexActual;
	}
	
	
	public DetalleConsignacion getdetalleconsignacion() {
		return this.detalleconsignacion;
	}

	public void setdetalleconsignacion(DetalleConsignacion detalleconsignacion) {
		this.detalleconsignacion = detalleconsignacion;
	}
	
	public DetalleConsignacion getdetalleconsignacionAux() {
		return this.detalleconsignacionAux;
	}

	public void setdetalleconsignacionAux(DetalleConsignacion detalleconsignacionAux) {
		this.detalleconsignacionAux = detalleconsignacionAux;
	}				
	
	public DetalleConsignacion getdetalleconsignacionAnterior() {
		return this.detalleconsignacionAnterior;
	}

	public void setdetalleconsignacionAnterior(DetalleConsignacion detalleconsignacionAnterior) {
		this.detalleconsignacionAnterior = detalleconsignacionAnterior;
	}	
	
	public DetalleConsignacion getdetalleconsignacionTotales() {
		return this.detalleconsignacionTotales;
	}

	public void setdetalleconsignacionTotales(DetalleConsignacion detalleconsignacionTotales) {
		this.detalleconsignacionTotales = detalleconsignacionTotales;
	}	
	
	public DetalleConsignacion getdetalleconsignacionBean() {
		return this.detalleconsignacionBean;
	}

	public void setdetalleconsignacionBean(DetalleConsignacion detalleconsignacionBean) {
		this.detalleconsignacionBean = detalleconsignacionBean;
	}	
	
	public DetalleConsignacionParameterReturnGeneral getdetalleconsignacionReturnGeneral() {
		return this.detalleconsignacionReturnGeneral;
	}

	public void setdetalleconsignacionReturnGeneral(DetalleConsignacionParameterReturnGeneral detalleconsignacionReturnGeneral) {
		this.detalleconsignacionReturnGeneral = detalleconsignacionReturnGeneral;
	}	
	
	
	public Long id_anioFK_IdAnio=null;

	public Long getid_anioFK_IdAnio() {
		return this.id_anioFK_IdAnio;
	}

	public void setid_anioFK_IdAnio(Long id_anioFK_IdAnio) {
		this.id_anioFK_IdAnio = id_anioFK_IdAnio;
	}

	public Long id_bodegaFK_IdBodega=-1L;

	public Long getid_bodegaFK_IdBodega() {
		return this.id_bodegaFK_IdBodega;
	}

	public void setid_bodegaFK_IdBodega(Long id_bodegaFK_IdBodega) {
		this.id_bodegaFK_IdBodega = id_bodegaFK_IdBodega;
	}

	public Long id_consignacionFK_IdConsignacion=-1L;

	public Long getid_consignacionFK_IdConsignacion() {
		return this.id_consignacionFK_IdConsignacion;
	}

	public void setid_consignacionFK_IdConsignacion(Long id_consignacionFK_IdConsignacion) {
		this.id_consignacionFK_IdConsignacion = id_consignacionFK_IdConsignacion;
	}

	public Long id_ejercicioFK_IdEjercicio=-1L;

	public Long getid_ejercicioFK_IdEjercicio() {
		return this.id_ejercicioFK_IdEjercicio;
	}

	public void setid_ejercicioFK_IdEjercicio(Long id_ejercicioFK_IdEjercicio) {
		this.id_ejercicioFK_IdEjercicio = id_ejercicioFK_IdEjercicio;
	}

	public Long id_empresaFK_IdEmpresa=-1L;

	public Long getid_empresaFK_IdEmpresa() {
		return this.id_empresaFK_IdEmpresa;
	}

	public void setid_empresaFK_IdEmpresa(Long id_empresaFK_IdEmpresa) {
		this.id_empresaFK_IdEmpresa = id_empresaFK_IdEmpresa;
	}

	public Long id_estado_detalle_pedidoFK_IdEstadoDetallePedido=-1L;

	public Long getid_estado_detalle_pedidoFK_IdEstadoDetallePedido() {
		return this.id_estado_detalle_pedidoFK_IdEstadoDetallePedido;
	}

	public void setid_estado_detalle_pedidoFK_IdEstadoDetallePedido(Long id_estado_detalle_pedidoFK_IdEstadoDetallePedido) {
		this.id_estado_detalle_pedidoFK_IdEstadoDetallePedido = id_estado_detalle_pedidoFK_IdEstadoDetallePedido;
	}

	public Long id_mesFK_IdMes=null;

	public Long getid_mesFK_IdMes() {
		return this.id_mesFK_IdMes;
	}

	public void setid_mesFK_IdMes(Long id_mesFK_IdMes) {
		this.id_mesFK_IdMes = id_mesFK_IdMes;
	}

	public Long id_periodoFK_IdPeriodo=-1L;

	public Long getid_periodoFK_IdPeriodo() {
		return this.id_periodoFK_IdPeriodo;
	}

	public void setid_periodoFK_IdPeriodo(Long id_periodoFK_IdPeriodo) {
		this.id_periodoFK_IdPeriodo = id_periodoFK_IdPeriodo;
	}

	public Long id_productoFK_IdProducto=-1L;

	public Long getid_productoFK_IdProducto() {
		return this.id_productoFK_IdProducto;
	}

	public void setid_productoFK_IdProducto(Long id_productoFK_IdProducto) {
		this.id_productoFK_IdProducto = id_productoFK_IdProducto;
	}

	public Long id_sucursalFK_IdSucursal=-1L;

	public Long getid_sucursalFK_IdSucursal() {
		return this.id_sucursalFK_IdSucursal;
	}

	public void setid_sucursalFK_IdSucursal(Long id_sucursalFK_IdSucursal) {
		this.id_sucursalFK_IdSucursal = id_sucursalFK_IdSucursal;
	}

	public Long id_unidadFK_IdUnidad=-1L;

	public Long getid_unidadFK_IdUnidad() {
		return this.id_unidadFK_IdUnidad;
	}

	public void setid_unidadFK_IdUnidad(Long id_unidadFK_IdUnidad) {
		this.id_unidadFK_IdUnidad = id_unidadFK_IdUnidad;
	}

		
	
	//ELEMENTOS TABLAS PARAMETOS
	
	
	
	
	
	
	//ELEMENTOS TABLAS PARAMETOS_FIN
	
	
	public DetalleConsignacionLogic getDetalleConsignacionLogic()	{		
		return detalleconsignacionLogic;
	}

	public void setDetalleConsignacionLogic(DetalleConsignacionLogic detalleconsignacionLogic) {
		this.detalleconsignacionLogic = detalleconsignacionLogic;
	}
	
	
	public void setsFinalQueryGeneral(String sFinalQueryGeneral) {
		this.sFinalQueryGeneral=sFinalQueryGeneral;
	}
	
	public String getsFinalQueryGeneral() {
		return this.sFinalQueryGeneral;
	}
		
	public Boolean getIsGuardarCambiosEnLote() {
		return isGuardarCambiosEnLote;
	}

	public void setIsGuardarCambiosEnLote(Boolean isGuardarCambiosEnLote) {
		this.isGuardarCambiosEnLote = isGuardarCambiosEnLote;
	}
	
	public Boolean getIsCargarCombosDependencia() {
		return isCargarCombosDependencia;
	}

	public void setIsCargarCombosDependencia(Boolean isCargarCombosDependencia) {
		this.isCargarCombosDependencia = isCargarCombosDependencia;
	}
	
	public Boolean getIsEsNuevoDetalleConsignacion() {
		return isEsNuevoDetalleConsignacion;
	}

	public void setIsEsNuevoDetalleConsignacion(Boolean isEsNuevoDetalleConsignacion) {
		this.isEsNuevoDetalleConsignacion = isEsNuevoDetalleConsignacion;
	}

	public Boolean getEsParaAccionDesdeFormularioDetalleConsignacion() {
		return esParaAccionDesdeFormularioDetalleConsignacion;
	}
	
	public void setEsParaAccionDesdeFormularioDetalleConsignacion(Boolean esParaAccionDesdeFormularioDetalleConsignacion) {
		this.esParaAccionDesdeFormularioDetalleConsignacion = esParaAccionDesdeFormularioDetalleConsignacion;
	}
	
	public Boolean getIsEsMantenimientoRelacionesRelacionadoUnico() {
		return isEsMantenimientoRelacionesRelacionadoUnico;
	}

	public void setIsEsMantenimientoRelacionesRelacionadoUnico(Boolean isEsMantenimientoRelacionesRelacionadoUnico) {
		this.isEsMantenimientoRelacionesRelacionadoUnico = isEsMantenimientoRelacionesRelacionadoUnico;
	}

	public Boolean getIsEsMantenimientoRelaciones() {
		return isEsMantenimientoRelaciones;
	}

	public void setIsEsMantenimientoRelaciones(Boolean isEsMantenimientoRelaciones) {
		this.isEsMantenimientoRelaciones = isEsMantenimientoRelaciones;
	}

	public Boolean getIsEsMantenimientoRelacionado() {
		return isEsMantenimientoRelacionado;
	}

	public void setIsEsMantenimientoRelacionado(Boolean isEsMantenimientoRelacionado) {
		this.isEsMantenimientoRelacionado = isEsMantenimientoRelacionado;
	}

	public Boolean getesParaBusquedaForeignKey() {
		return esParaBusquedaForeignKey;
	}

	public void setesParaBusquedaForeignKey(Boolean esParaBusquedaForeignKey) {
		this.esParaBusquedaForeignKey = esParaBusquedaForeignKey;
	}

	public Boolean getIsContieneImagenes() {
		return isContieneImagenes;
	}

	public void setIsContieneImagenes(Boolean isContieneImagenes) {
		this.isContieneImagenes = isContieneImagenes;
	}		
	
	
	public void cargarCombosEmpresasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.empresasForeignKey=new ArrayList<Empresa>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			EmpresaLogic empresaLogic=new EmpresaLogic();

			//empresaLogic.getEmpresaDataAccess().setIsForForeingKeyData(true);

			if(this.detalleconsignacionSessionBean==null) {
				this.detalleconsignacionSessionBean=new DetalleConsignacionSessionBean();
			}

			if(!this.detalleconsignacionSessionBean.getisBusquedaDesdeForeignKeySesionEmpresa()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//empresaLogic.getEmpresaDataAccess().setIsForForeingKeyData(true);

					empresaLogic.getTodosEmpresasWithConnection(sFinalQuery,new Pagination());

					this.empresasForeignKey=empresaLogic.getEmpresas();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaEmpresa(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					empresaLogic.getEntityWithConnection(detalleconsignacionSessionBean.getlidEmpresaActual());
					this.empresasForeignKey.add(empresaLogic.getEmpresa());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosSucursalsForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.sucursalsForeignKey=new ArrayList<Sucursal>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			SucursalLogic sucursalLogic=new SucursalLogic();

			//sucursalLogic.getSucursalDataAccess().setIsForForeingKeyData(true);

			if(this.detalleconsignacionSessionBean==null) {
				this.detalleconsignacionSessionBean=new DetalleConsignacionSessionBean();
			}

			if(!this.detalleconsignacionSessionBean.getisBusquedaDesdeForeignKeySesionSucursal()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//sucursalLogic.getSucursalDataAccess().setIsForForeingKeyData(true);

					sucursalLogic.getTodosSucursalsWithConnection(sFinalQuery,new Pagination());

					this.sucursalsForeignKey=sucursalLogic.getSucursals();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaSucursal(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					sucursalLogic.getEntityWithConnection(detalleconsignacionSessionBean.getlidSucursalActual());
					this.sucursalsForeignKey.add(sucursalLogic.getSucursal());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosEjerciciosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.ejerciciosForeignKey=new ArrayList<Ejercicio>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			EjercicioLogic ejercicioLogic=new EjercicioLogic();

			//ejercicioLogic.getEjercicioDataAccess().setIsForForeingKeyData(true);

			if(this.detalleconsignacionSessionBean==null) {
				this.detalleconsignacionSessionBean=new DetalleConsignacionSessionBean();
			}

			if(!this.detalleconsignacionSessionBean.getisBusquedaDesdeForeignKeySesionEjercicio()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//ejercicioLogic.getEjercicioDataAccess().setIsForForeingKeyData(true);

					ejercicioLogic.getTodosEjerciciosWithConnection(sFinalQuery,new Pagination());

					this.ejerciciosForeignKey=ejercicioLogic.getEjercicios();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaEjercicio(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					ejercicioLogic.getEntityWithConnection(detalleconsignacionSessionBean.getlidEjercicioActual());
					this.ejerciciosForeignKey.add(ejercicioLogic.getEjercicio());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosPeriodosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.periodosForeignKey=new ArrayList<Periodo>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			PeriodoLogic periodoLogic=new PeriodoLogic();

			//periodoLogic.getPeriodoDataAccess().setIsForForeingKeyData(true);

			if(this.detalleconsignacionSessionBean==null) {
				this.detalleconsignacionSessionBean=new DetalleConsignacionSessionBean();
			}

			if(!this.detalleconsignacionSessionBean.getisBusquedaDesdeForeignKeySesionPeriodo()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//periodoLogic.getPeriodoDataAccess().setIsForForeingKeyData(true);

					periodoLogic.getTodosPeriodosWithConnection(sFinalQuery,new Pagination());

					this.periodosForeignKey=periodoLogic.getPeriodos();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaPeriodo(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					periodoLogic.getEntityWithConnection(detalleconsignacionSessionBean.getlidPeriodoActual());
					this.periodosForeignKey.add(periodoLogic.getPeriodo());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosAniosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.aniosForeignKey=new ArrayList<Anio>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			AnioLogic anioLogic=new AnioLogic();

			//anioLogic.getAnioDataAccess().setIsForForeingKeyData(true);

			if(this.detalleconsignacionSessionBean==null) {
				this.detalleconsignacionSessionBean=new DetalleConsignacionSessionBean();
			}

			if(!this.detalleconsignacionSessionBean.getisBusquedaDesdeForeignKeySesionAnio()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//anioLogic.getAnioDataAccess().setIsForForeingKeyData(true);

					anioLogic.getTodosAniosWithConnection(sFinalQuery,new Pagination());

					this.aniosForeignKey=anioLogic.getAnios();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaAnio(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					anioLogic.getEntityWithConnection(detalleconsignacionSessionBean.getlidAnioActual());
					this.aniosForeignKey.add(anioLogic.getAnio());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosMessForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.messForeignKey=new ArrayList<Mes>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			MesLogic mesLogic=new MesLogic();

			//mesLogic.getMesDataAccess().setIsForForeingKeyData(true);

			if(this.detalleconsignacionSessionBean==null) {
				this.detalleconsignacionSessionBean=new DetalleConsignacionSessionBean();
			}

			if(!this.detalleconsignacionSessionBean.getisBusquedaDesdeForeignKeySesionMes()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//mesLogic.getMesDataAccess().setIsForForeingKeyData(true);

					mesLogic.getTodosMessWithConnection(sFinalQuery,new Pagination());

					this.messForeignKey=mesLogic.getMess();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaMes(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					mesLogic.getEntityWithConnection(detalleconsignacionSessionBean.getlidMesActual());
					this.messForeignKey.add(mesLogic.getMes());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosConsignacionsForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.consignacionsForeignKey=new ArrayList<Consignacion>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			ConsignacionLogic consignacionLogic=new ConsignacionLogic();

			//consignacionLogic.getConsignacionDataAccess().setIsForForeingKeyData(true);

			if(this.detalleconsignacionSessionBean==null) {
				this.detalleconsignacionSessionBean=new DetalleConsignacionSessionBean();
			}

			if(!this.detalleconsignacionSessionBean.getisBusquedaDesdeForeignKeySesionConsignacion()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//consignacionLogic.getConsignacionDataAccess().setIsForForeingKeyData(true);

					consignacionLogic.getTodosConsignacionsWithConnection(sFinalQuery,new Pagination());

					this.consignacionsForeignKey=consignacionLogic.getConsignacions();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaConsignacion(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					consignacionLogic.getEntityWithConnection(detalleconsignacionSessionBean.getlidConsignacionActual());
					this.consignacionsForeignKey.add(consignacionLogic.getConsignacion());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosProductosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.productosForeignKey=new ArrayList<Producto>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			ProductoLogic productoLogic=new ProductoLogic();

			//productoLogic.getProductoDataAccess().setIsForForeingKeyData(true);

			if(this.detalleconsignacionSessionBean==null) {
				this.detalleconsignacionSessionBean=new DetalleConsignacionSessionBean();
			}

			if(!this.detalleconsignacionSessionBean.getisBusquedaDesdeForeignKeySesionProducto()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//productoLogic.getProductoDataAccess().setIsForForeingKeyData(true);

					productoLogic.getTodosProductosWithConnection(sFinalQuery,new Pagination());

					this.productosForeignKey=productoLogic.getProductos();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaProducto(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					productoLogic.getEntityWithConnection(detalleconsignacionSessionBean.getlidProductoActual());
					this.productosForeignKey.add(productoLogic.getProducto());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosBodegasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.bodegasForeignKey=new ArrayList<Bodega>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			BodegaLogic bodegaLogic=new BodegaLogic();

			//bodegaLogic.getBodegaDataAccess().setIsForForeingKeyData(true);

			if(this.detalleconsignacionSessionBean==null) {
				this.detalleconsignacionSessionBean=new DetalleConsignacionSessionBean();
			}

			if(!this.detalleconsignacionSessionBean.getisBusquedaDesdeForeignKeySesionBodega()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//bodegaLogic.getBodegaDataAccess().setIsForForeingKeyData(true);

					bodegaLogic.getTodosBodegasWithConnection(sFinalQuery,new Pagination());

					this.bodegasForeignKey=bodegaLogic.getBodegas();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaBodega(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					bodegaLogic.getEntityWithConnection(detalleconsignacionSessionBean.getlidBodegaActual());
					this.bodegasForeignKey.add(bodegaLogic.getBodega());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosUnidadsForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.unidadsForeignKey=new ArrayList<Unidad>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			UnidadLogic unidadLogic=new UnidadLogic();

			//unidadLogic.getUnidadDataAccess().setIsForForeingKeyData(true);

			if(this.detalleconsignacionSessionBean==null) {
				this.detalleconsignacionSessionBean=new DetalleConsignacionSessionBean();
			}

			if(!this.detalleconsignacionSessionBean.getisBusquedaDesdeForeignKeySesionUnidad()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//unidadLogic.getUnidadDataAccess().setIsForForeingKeyData(true);

					unidadLogic.getTodosUnidadsWithConnection(sFinalQuery,new Pagination());

					this.unidadsForeignKey=unidadLogic.getUnidads();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaUnidad(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					unidadLogic.getEntityWithConnection(detalleconsignacionSessionBean.getlidUnidadActual());
					this.unidadsForeignKey.add(unidadLogic.getUnidad());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosEstadoDetallePedidosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.estadodetallepedidosForeignKey=new ArrayList<EstadoDetallePedido>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			EstadoDetallePedidoLogic estadodetallepedidoLogic=new EstadoDetallePedidoLogic();

			//estadodetallepedidoLogic.getEstadoDetallePedidoDataAccess().setIsForForeingKeyData(true);

			if(this.detalleconsignacionSessionBean==null) {
				this.detalleconsignacionSessionBean=new DetalleConsignacionSessionBean();
			}

			if(!this.detalleconsignacionSessionBean.getisBusquedaDesdeForeignKeySesionEstadoDetallePedido()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//estadodetallepedidoLogic.getEstadoDetallePedidoDataAccess().setIsForForeingKeyData(true);

					estadodetallepedidoLogic.getTodosEstadoDetallePedidosWithConnection(sFinalQuery,new Pagination());

					this.estadodetallepedidosForeignKey=estadodetallepedidoLogic.getEstadoDetallePedidos();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaEstadoDetallePedido(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					estadodetallepedidoLogic.getEntityWithConnection(detalleconsignacionSessionBean.getlidEstadoDetallePedidoActual());
					this.estadodetallepedidosForeignKey.add(estadodetallepedidoLogic.getEstadoDetallePedido());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	
	
	public void setActualEmpresaForeignKey(Long idEmpresaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Empresa  empresaTemp=null;

			for(Empresa empresaAux:empresasForeignKey) {
				if(empresaAux.getId()!=null && empresaAux.getId().equals(idEmpresaSeleccionado)) {
					empresaTemp=empresaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(empresaTemp!=null) {

					if(this.detalleconsignacion!=null) {
						this.detalleconsignacion.setEmpresa(empresaTemp);
					}

					if(this.jInternalFrameDetalleFormDetalleConsignacion!=null) {
						this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_empresaDetalleConsignacion.setSelectedItem(empresaTemp);
					}
				} else {
					//jComboBoxid_empresaDetalleConsignacion.setSelectedItem(empresaTemp);
					if(this.jInternalFrameDetalleFormDetalleConsignacion!=null) {
						if(this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_empresaDetalleConsignacion.getItemCount()>0) {
							this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_empresaDetalleConsignacion.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualEmpresaForeignKeyDescripcion(Long idEmpresaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Empresa  empresaTemp=null;

			for(Empresa empresaAux:empresasForeignKey) {
				if(empresaAux.getId()!=null && empresaAux.getId().equals(idEmpresaSeleccionado)) {
					empresaTemp=empresaAux;
					break;
				}
			}


			sDescripcion=EmpresaConstantesFunciones.getEmpresaDescripcion(empresaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualEmpresaForeignKeyGenerico(Long idEmpresaSeleccionado,JComboBox jComboBoxid_empresaDetalleConsignacionGenerico)throws Exception
	{
		try
		{
			Empresa  empresaTemp=null;

			for(Empresa empresaAux:empresasForeignKey) {
				if(empresaAux.getId()!=null && empresaAux.getId().equals(idEmpresaSeleccionado)) {
					empresaTemp=empresaAux;
					break;
				}
			}

			if(empresaTemp!=null) {
				jComboBoxid_empresaDetalleConsignacionGenerico.setSelectedItem(empresaTemp);
			} else {
				if(jComboBoxid_empresaDetalleConsignacionGenerico!=null && jComboBoxid_empresaDetalleConsignacionGenerico.getItemCount()>0) {
					jComboBoxid_empresaDetalleConsignacionGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualSucursalForeignKey(Long idSucursalSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Sucursal  sucursalTemp=null;

			for(Sucursal sucursalAux:sucursalsForeignKey) {
				if(sucursalAux.getId()!=null && sucursalAux.getId().equals(idSucursalSeleccionado)) {
					sucursalTemp=sucursalAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(sucursalTemp!=null) {

					if(this.detalleconsignacion!=null) {
						this.detalleconsignacion.setSucursal(sucursalTemp);
					}

					if(this.jInternalFrameDetalleFormDetalleConsignacion!=null) {
						this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_sucursalDetalleConsignacion.setSelectedItem(sucursalTemp);
					}
				} else {
					//jComboBoxid_sucursalDetalleConsignacion.setSelectedItem(sucursalTemp);
					if(this.jInternalFrameDetalleFormDetalleConsignacion!=null) {
						if(this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_sucursalDetalleConsignacion.getItemCount()>0) {
							this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_sucursalDetalleConsignacion.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualSucursalForeignKeyDescripcion(Long idSucursalSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Sucursal  sucursalTemp=null;

			for(Sucursal sucursalAux:sucursalsForeignKey) {
				if(sucursalAux.getId()!=null && sucursalAux.getId().equals(idSucursalSeleccionado)) {
					sucursalTemp=sucursalAux;
					break;
				}
			}


			sDescripcion=SucursalConstantesFunciones.getSucursalDescripcion(sucursalTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualSucursalForeignKeyGenerico(Long idSucursalSeleccionado,JComboBox jComboBoxid_sucursalDetalleConsignacionGenerico)throws Exception
	{
		try
		{
			Sucursal  sucursalTemp=null;

			for(Sucursal sucursalAux:sucursalsForeignKey) {
				if(sucursalAux.getId()!=null && sucursalAux.getId().equals(idSucursalSeleccionado)) {
					sucursalTemp=sucursalAux;
					break;
				}
			}

			if(sucursalTemp!=null) {
				jComboBoxid_sucursalDetalleConsignacionGenerico.setSelectedItem(sucursalTemp);
			} else {
				if(jComboBoxid_sucursalDetalleConsignacionGenerico!=null && jComboBoxid_sucursalDetalleConsignacionGenerico.getItemCount()>0) {
					jComboBoxid_sucursalDetalleConsignacionGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualEjercicioForeignKey(Long idEjercicioSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Ejercicio  ejercicioTemp=null;

			for(Ejercicio ejercicioAux:ejerciciosForeignKey) {
				if(ejercicioAux.getId()!=null && ejercicioAux.getId().equals(idEjercicioSeleccionado)) {
					ejercicioTemp=ejercicioAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(ejercicioTemp!=null) {

					if(this.detalleconsignacion!=null) {
						this.detalleconsignacion.setEjercicio(ejercicioTemp);
					}

					if(this.jInternalFrameDetalleFormDetalleConsignacion!=null) {
						this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_ejercicioDetalleConsignacion.setSelectedItem(ejercicioTemp);
					}
				} else {
					//jComboBoxid_ejercicioDetalleConsignacion.setSelectedItem(ejercicioTemp);
					if(this.jInternalFrameDetalleFormDetalleConsignacion!=null) {
						if(this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_ejercicioDetalleConsignacion.getItemCount()>0) {
							this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_ejercicioDetalleConsignacion.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualEjercicioForeignKeyDescripcion(Long idEjercicioSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Ejercicio  ejercicioTemp=null;

			for(Ejercicio ejercicioAux:ejerciciosForeignKey) {
				if(ejercicioAux.getId()!=null && ejercicioAux.getId().equals(idEjercicioSeleccionado)) {
					ejercicioTemp=ejercicioAux;
					break;
				}
			}


			sDescripcion=EjercicioConstantesFunciones.getEjercicioDescripcion(ejercicioTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualEjercicioForeignKeyGenerico(Long idEjercicioSeleccionado,JComboBox jComboBoxid_ejercicioDetalleConsignacionGenerico)throws Exception
	{
		try
		{
			Ejercicio  ejercicioTemp=null;

			for(Ejercicio ejercicioAux:ejerciciosForeignKey) {
				if(ejercicioAux.getId()!=null && ejercicioAux.getId().equals(idEjercicioSeleccionado)) {
					ejercicioTemp=ejercicioAux;
					break;
				}
			}

			if(ejercicioTemp!=null) {
				jComboBoxid_ejercicioDetalleConsignacionGenerico.setSelectedItem(ejercicioTemp);
			} else {
				if(jComboBoxid_ejercicioDetalleConsignacionGenerico!=null && jComboBoxid_ejercicioDetalleConsignacionGenerico.getItemCount()>0) {
					jComboBoxid_ejercicioDetalleConsignacionGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualPeriodoForeignKey(Long idPeriodoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Periodo  periodoTemp=null;

			for(Periodo periodoAux:periodosForeignKey) {
				if(periodoAux.getId()!=null && periodoAux.getId().equals(idPeriodoSeleccionado)) {
					periodoTemp=periodoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(periodoTemp!=null) {

					if(this.detalleconsignacion!=null) {
						this.detalleconsignacion.setPeriodo(periodoTemp);
					}

					if(this.jInternalFrameDetalleFormDetalleConsignacion!=null) {
						this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_periodoDetalleConsignacion.setSelectedItem(periodoTemp);
					}
				} else {
					//jComboBoxid_periodoDetalleConsignacion.setSelectedItem(periodoTemp);
					if(this.jInternalFrameDetalleFormDetalleConsignacion!=null) {
						if(this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_periodoDetalleConsignacion.getItemCount()>0) {
							this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_periodoDetalleConsignacion.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualPeriodoForeignKeyDescripcion(Long idPeriodoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Periodo  periodoTemp=null;

			for(Periodo periodoAux:periodosForeignKey) {
				if(periodoAux.getId()!=null && periodoAux.getId().equals(idPeriodoSeleccionado)) {
					periodoTemp=periodoAux;
					break;
				}
			}


			sDescripcion=PeriodoConstantesFunciones.getPeriodoDescripcion(periodoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualPeriodoForeignKeyGenerico(Long idPeriodoSeleccionado,JComboBox jComboBoxid_periodoDetalleConsignacionGenerico)throws Exception
	{
		try
		{
			Periodo  periodoTemp=null;

			for(Periodo periodoAux:periodosForeignKey) {
				if(periodoAux.getId()!=null && periodoAux.getId().equals(idPeriodoSeleccionado)) {
					periodoTemp=periodoAux;
					break;
				}
			}

			if(periodoTemp!=null) {
				jComboBoxid_periodoDetalleConsignacionGenerico.setSelectedItem(periodoTemp);
			} else {
				if(jComboBoxid_periodoDetalleConsignacionGenerico!=null && jComboBoxid_periodoDetalleConsignacionGenerico.getItemCount()>0) {
					jComboBoxid_periodoDetalleConsignacionGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualAnioForeignKey(Long idAnioSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Anio  anioTemp=null;

			for(Anio anioAux:aniosForeignKey) {
				if(anioAux.getId()!=null && anioAux.getId().equals(idAnioSeleccionado)) {
					anioTemp=anioAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(anioTemp!=null) {

					if(this.detalleconsignacion!=null) {
						this.detalleconsignacion.setAnio(anioTemp);
					}

					if(this.jInternalFrameDetalleFormDetalleConsignacion!=null) {
						this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_anioDetalleConsignacion.setSelectedItem(anioTemp);
					}
				} else {
					//jComboBoxid_anioDetalleConsignacion.setSelectedItem(anioTemp);
					if(this.jInternalFrameDetalleFormDetalleConsignacion!=null) {
						if(this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_anioDetalleConsignacion.getItemCount()>0) {
							this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_anioDetalleConsignacion.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualAnioForeignKeyDescripcion(Long idAnioSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Anio  anioTemp=null;

			for(Anio anioAux:aniosForeignKey) {
				if(anioAux.getId()!=null && anioAux.getId().equals(idAnioSeleccionado)) {
					anioTemp=anioAux;
					break;
				}
			}


			sDescripcion=AnioConstantesFunciones.getAnioDescripcion(anioTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualAnioForeignKeyGenerico(Long idAnioSeleccionado,JComboBox jComboBoxid_anioDetalleConsignacionGenerico)throws Exception
	{
		try
		{
			Anio  anioTemp=null;

			for(Anio anioAux:aniosForeignKey) {
				if(anioAux.getId()!=null && anioAux.getId().equals(idAnioSeleccionado)) {
					anioTemp=anioAux;
					break;
				}
			}

			if(anioTemp!=null) {
				jComboBoxid_anioDetalleConsignacionGenerico.setSelectedItem(anioTemp);
			} else {
				if(jComboBoxid_anioDetalleConsignacionGenerico!=null && jComboBoxid_anioDetalleConsignacionGenerico.getItemCount()>0) {
					jComboBoxid_anioDetalleConsignacionGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualMesForeignKey(Long idMesSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Mes  mesTemp=null;

			for(Mes mesAux:messForeignKey) {
				if(mesAux.getId()!=null && mesAux.getId().equals(idMesSeleccionado)) {
					mesTemp=mesAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(mesTemp!=null) {

					if(this.detalleconsignacion!=null) {
						this.detalleconsignacion.setMes(mesTemp);
					}

					if(this.jInternalFrameDetalleFormDetalleConsignacion!=null) {
						this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_mesDetalleConsignacion.setSelectedItem(mesTemp);
					}
				} else {
					//jComboBoxid_mesDetalleConsignacion.setSelectedItem(mesTemp);
					if(this.jInternalFrameDetalleFormDetalleConsignacion!=null) {
						if(this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_mesDetalleConsignacion.getItemCount()>0) {
							this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_mesDetalleConsignacion.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualMesForeignKeyDescripcion(Long idMesSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Mes  mesTemp=null;

			for(Mes mesAux:messForeignKey) {
				if(mesAux.getId()!=null && mesAux.getId().equals(idMesSeleccionado)) {
					mesTemp=mesAux;
					break;
				}
			}


			sDescripcion=MesConstantesFunciones.getMesDescripcion(mesTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualMesForeignKeyGenerico(Long idMesSeleccionado,JComboBox jComboBoxid_mesDetalleConsignacionGenerico)throws Exception
	{
		try
		{
			Mes  mesTemp=null;

			for(Mes mesAux:messForeignKey) {
				if(mesAux.getId()!=null && mesAux.getId().equals(idMesSeleccionado)) {
					mesTemp=mesAux;
					break;
				}
			}

			if(mesTemp!=null) {
				jComboBoxid_mesDetalleConsignacionGenerico.setSelectedItem(mesTemp);
			} else {
				if(jComboBoxid_mesDetalleConsignacionGenerico!=null && jComboBoxid_mesDetalleConsignacionGenerico.getItemCount()>0) {
					jComboBoxid_mesDetalleConsignacionGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualConsignacionForeignKey(Long idConsignacionSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Consignacion  consignacionTemp=null;

			for(Consignacion consignacionAux:consignacionsForeignKey) {
				if(consignacionAux.getId()!=null && consignacionAux.getId().equals(idConsignacionSeleccionado)) {
					consignacionTemp=consignacionAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(consignacionTemp!=null) {

					if(this.detalleconsignacion!=null) {
						this.detalleconsignacion.setConsignacion(consignacionTemp);
					}

					if(this.jInternalFrameDetalleFormDetalleConsignacion!=null) {
						this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_consignacionDetalleConsignacion.setSelectedItem(consignacionTemp);
					}
				} else {
					//jComboBoxid_consignacionDetalleConsignacion.setSelectedItem(consignacionTemp);
					if(this.jInternalFrameDetalleFormDetalleConsignacion!=null) {
						if(this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_consignacionDetalleConsignacion.getItemCount()>0) {
							this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_consignacionDetalleConsignacion.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdConsignacion") || sFormularioTipoBusqueda.equals("Todos")){
					if(consignacionTemp!=null && jComboBoxid_consignacionFK_IdConsignacionDetalleConsignacion!=null) {
						jComboBoxid_consignacionFK_IdConsignacionDetalleConsignacion.setSelectedItem(consignacionTemp);
					} else {
						if(jComboBoxid_consignacionFK_IdConsignacionDetalleConsignacion!=null) {
							//jComboBoxid_consignacionFK_IdConsignacionDetalleConsignacion.setSelectedItem(consignacionTemp);
							if(jComboBoxid_consignacionFK_IdConsignacionDetalleConsignacion.getItemCount()>0) {
								jComboBoxid_consignacionFK_IdConsignacionDetalleConsignacion.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualConsignacionForeignKeyDescripcion(Long idConsignacionSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Consignacion  consignacionTemp=null;

			for(Consignacion consignacionAux:consignacionsForeignKey) {
				if(consignacionAux.getId()!=null && consignacionAux.getId().equals(idConsignacionSeleccionado)) {
					consignacionTemp=consignacionAux;
					break;
				}
			}


			sDescripcion=ConsignacionConstantesFunciones.getConsignacionDescripcion(consignacionTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualConsignacionForeignKeyGenerico(Long idConsignacionSeleccionado,JComboBox jComboBoxid_consignacionDetalleConsignacionGenerico)throws Exception
	{
		try
		{
			Consignacion  consignacionTemp=null;

			for(Consignacion consignacionAux:consignacionsForeignKey) {
				if(consignacionAux.getId()!=null && consignacionAux.getId().equals(idConsignacionSeleccionado)) {
					consignacionTemp=consignacionAux;
					break;
				}
			}

			if(consignacionTemp!=null) {
				jComboBoxid_consignacionDetalleConsignacionGenerico.setSelectedItem(consignacionTemp);
			} else {
				if(jComboBoxid_consignacionDetalleConsignacionGenerico!=null && jComboBoxid_consignacionDetalleConsignacionGenerico.getItemCount()>0) {
					jComboBoxid_consignacionDetalleConsignacionGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualProductoForeignKey(Long idProductoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Producto  productoTemp=null;

			for(Producto productoAux:productosForeignKey) {
				if(productoAux.getId()!=null && productoAux.getId().equals(idProductoSeleccionado)) {
					productoTemp=productoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(productoTemp!=null) {

					if(this.detalleconsignacion!=null) {
						this.detalleconsignacion.setProducto(productoTemp);
					}

					if(this.jInternalFrameDetalleFormDetalleConsignacion!=null) {
						this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_productoDetalleConsignacion.setSelectedItem(productoTemp);
					}
				} else {
					//jComboBoxid_productoDetalleConsignacion.setSelectedItem(productoTemp);
					if(this.jInternalFrameDetalleFormDetalleConsignacion!=null) {
						if(this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_productoDetalleConsignacion.getItemCount()>0) {
							this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_productoDetalleConsignacion.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdProducto") || sFormularioTipoBusqueda.equals("Todos")){
					if(productoTemp!=null && jComboBoxid_productoFK_IdProductoDetalleConsignacion!=null) {
						jComboBoxid_productoFK_IdProductoDetalleConsignacion.setSelectedItem(productoTemp);
					} else {
						if(jComboBoxid_productoFK_IdProductoDetalleConsignacion!=null) {
							//jComboBoxid_productoFK_IdProductoDetalleConsignacion.setSelectedItem(productoTemp);
							if(jComboBoxid_productoFK_IdProductoDetalleConsignacion.getItemCount()>0) {
								jComboBoxid_productoFK_IdProductoDetalleConsignacion.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualProductoForeignKeyDescripcion(Long idProductoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Producto  productoTemp=null;

			for(Producto productoAux:productosForeignKey) {
				if(productoAux.getId()!=null && productoAux.getId().equals(idProductoSeleccionado)) {
					productoTemp=productoAux;
					break;
				}
			}


			sDescripcion=ProductoConstantesFunciones.getProductoDescripcion(productoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualProductoForeignKeyGenerico(Long idProductoSeleccionado,JComboBox jComboBoxid_productoDetalleConsignacionGenerico)throws Exception
	{
		try
		{
			Producto  productoTemp=null;

			for(Producto productoAux:productosForeignKey) {
				if(productoAux.getId()!=null && productoAux.getId().equals(idProductoSeleccionado)) {
					productoTemp=productoAux;
					break;
				}
			}

			if(productoTemp!=null) {
				jComboBoxid_productoDetalleConsignacionGenerico.setSelectedItem(productoTemp);
			} else {
				if(jComboBoxid_productoDetalleConsignacionGenerico!=null && jComboBoxid_productoDetalleConsignacionGenerico.getItemCount()>0) {
					jComboBoxid_productoDetalleConsignacionGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualBodegaForeignKey(Long idBodegaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Bodega  bodegaTemp=null;

			for(Bodega bodegaAux:bodegasForeignKey) {
				if(bodegaAux.getId()!=null && bodegaAux.getId().equals(idBodegaSeleccionado)) {
					bodegaTemp=bodegaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(bodegaTemp!=null) {

					if(this.detalleconsignacion!=null) {
						this.detalleconsignacion.setBodega(bodegaTemp);
					}

					if(this.jInternalFrameDetalleFormDetalleConsignacion!=null) {
						this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_bodegaDetalleConsignacion.setSelectedItem(bodegaTemp);
					}
				} else {
					//jComboBoxid_bodegaDetalleConsignacion.setSelectedItem(bodegaTemp);
					if(this.jInternalFrameDetalleFormDetalleConsignacion!=null) {
						if(this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_bodegaDetalleConsignacion.getItemCount()>0) {
							this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_bodegaDetalleConsignacion.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdBodega") || sFormularioTipoBusqueda.equals("Todos")){
					if(bodegaTemp!=null && jComboBoxid_bodegaFK_IdBodegaDetalleConsignacion!=null) {
						jComboBoxid_bodegaFK_IdBodegaDetalleConsignacion.setSelectedItem(bodegaTemp);
					} else {
						if(jComboBoxid_bodegaFK_IdBodegaDetalleConsignacion!=null) {
							//jComboBoxid_bodegaFK_IdBodegaDetalleConsignacion.setSelectedItem(bodegaTemp);
							if(jComboBoxid_bodegaFK_IdBodegaDetalleConsignacion.getItemCount()>0) {
								jComboBoxid_bodegaFK_IdBodegaDetalleConsignacion.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualBodegaForeignKeyDescripcion(Long idBodegaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Bodega  bodegaTemp=null;

			for(Bodega bodegaAux:bodegasForeignKey) {
				if(bodegaAux.getId()!=null && bodegaAux.getId().equals(idBodegaSeleccionado)) {
					bodegaTemp=bodegaAux;
					break;
				}
			}


			sDescripcion=BodegaConstantesFunciones.getBodegaDescripcion(bodegaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualBodegaForeignKeyGenerico(Long idBodegaSeleccionado,JComboBox jComboBoxid_bodegaDetalleConsignacionGenerico)throws Exception
	{
		try
		{
			Bodega  bodegaTemp=null;

			for(Bodega bodegaAux:bodegasForeignKey) {
				if(bodegaAux.getId()!=null && bodegaAux.getId().equals(idBodegaSeleccionado)) {
					bodegaTemp=bodegaAux;
					break;
				}
			}

			if(bodegaTemp!=null) {
				jComboBoxid_bodegaDetalleConsignacionGenerico.setSelectedItem(bodegaTemp);
			} else {
				if(jComboBoxid_bodegaDetalleConsignacionGenerico!=null && jComboBoxid_bodegaDetalleConsignacionGenerico.getItemCount()>0) {
					jComboBoxid_bodegaDetalleConsignacionGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualUnidadForeignKey(Long idUnidadSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Unidad  unidadTemp=null;

			for(Unidad unidadAux:unidadsForeignKey) {
				if(unidadAux.getId()!=null && unidadAux.getId().equals(idUnidadSeleccionado)) {
					unidadTemp=unidadAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(unidadTemp!=null) {

					if(this.detalleconsignacion!=null) {
						this.detalleconsignacion.setUnidad(unidadTemp);
					}

					if(this.jInternalFrameDetalleFormDetalleConsignacion!=null) {
						this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_unidadDetalleConsignacion.setSelectedItem(unidadTemp);
					}
				} else {
					//jComboBoxid_unidadDetalleConsignacion.setSelectedItem(unidadTemp);
					if(this.jInternalFrameDetalleFormDetalleConsignacion!=null) {
						if(this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_unidadDetalleConsignacion.getItemCount()>0) {
							this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_unidadDetalleConsignacion.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdUnidad") || sFormularioTipoBusqueda.equals("Todos")){
					if(unidadTemp!=null && jComboBoxid_unidadFK_IdUnidadDetalleConsignacion!=null) {
						jComboBoxid_unidadFK_IdUnidadDetalleConsignacion.setSelectedItem(unidadTemp);
					} else {
						if(jComboBoxid_unidadFK_IdUnidadDetalleConsignacion!=null) {
							//jComboBoxid_unidadFK_IdUnidadDetalleConsignacion.setSelectedItem(unidadTemp);
							if(jComboBoxid_unidadFK_IdUnidadDetalleConsignacion.getItemCount()>0) {
								jComboBoxid_unidadFK_IdUnidadDetalleConsignacion.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualUnidadForeignKeyDescripcion(Long idUnidadSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Unidad  unidadTemp=null;

			for(Unidad unidadAux:unidadsForeignKey) {
				if(unidadAux.getId()!=null && unidadAux.getId().equals(idUnidadSeleccionado)) {
					unidadTemp=unidadAux;
					break;
				}
			}


			sDescripcion=UnidadConstantesFunciones.getUnidadDescripcion(unidadTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualUnidadForeignKeyGenerico(Long idUnidadSeleccionado,JComboBox jComboBoxid_unidadDetalleConsignacionGenerico)throws Exception
	{
		try
		{
			Unidad  unidadTemp=null;

			for(Unidad unidadAux:unidadsForeignKey) {
				if(unidadAux.getId()!=null && unidadAux.getId().equals(idUnidadSeleccionado)) {
					unidadTemp=unidadAux;
					break;
				}
			}

			if(unidadTemp!=null) {
				jComboBoxid_unidadDetalleConsignacionGenerico.setSelectedItem(unidadTemp);
			} else {
				if(jComboBoxid_unidadDetalleConsignacionGenerico!=null && jComboBoxid_unidadDetalleConsignacionGenerico.getItemCount()>0) {
					jComboBoxid_unidadDetalleConsignacionGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualEstadoDetallePedidoForeignKey(Long idEstadoDetallePedidoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			EstadoDetallePedido  estadodetallepedidoTemp=null;

			for(EstadoDetallePedido estadodetallepedidoAux:estadodetallepedidosForeignKey) {
				if(estadodetallepedidoAux.getId()!=null && estadodetallepedidoAux.getId().equals(idEstadoDetallePedidoSeleccionado)) {
					estadodetallepedidoTemp=estadodetallepedidoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(estadodetallepedidoTemp!=null) {

					if(this.detalleconsignacion!=null) {
						this.detalleconsignacion.setEstadoDetallePedido(estadodetallepedidoTemp);
					}

					if(this.jInternalFrameDetalleFormDetalleConsignacion!=null) {
						this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_estado_detalle_pedidoDetalleConsignacion.setSelectedItem(estadodetallepedidoTemp);
					}
				} else {
					//jComboBoxid_estado_detalle_pedidoDetalleConsignacion.setSelectedItem(estadodetallepedidoTemp);
					if(this.jInternalFrameDetalleFormDetalleConsignacion!=null) {
						if(this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_estado_detalle_pedidoDetalleConsignacion.getItemCount()>0) {
							this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_estado_detalle_pedidoDetalleConsignacion.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdEstadoDetallePedido") || sFormularioTipoBusqueda.equals("Todos")){
					if(estadodetallepedidoTemp!=null && jComboBoxid_estado_detalle_pedidoFK_IdEstadoDetallePedidoDetalleConsignacion!=null) {
						jComboBoxid_estado_detalle_pedidoFK_IdEstadoDetallePedidoDetalleConsignacion.setSelectedItem(estadodetallepedidoTemp);
					} else {
						if(jComboBoxid_estado_detalle_pedidoFK_IdEstadoDetallePedidoDetalleConsignacion!=null) {
							//jComboBoxid_estado_detalle_pedidoFK_IdEstadoDetallePedidoDetalleConsignacion.setSelectedItem(estadodetallepedidoTemp);
							if(jComboBoxid_estado_detalle_pedidoFK_IdEstadoDetallePedidoDetalleConsignacion.getItemCount()>0) {
								jComboBoxid_estado_detalle_pedidoFK_IdEstadoDetallePedidoDetalleConsignacion.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualEstadoDetallePedidoForeignKeyDescripcion(Long idEstadoDetallePedidoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			EstadoDetallePedido  estadodetallepedidoTemp=null;

			for(EstadoDetallePedido estadodetallepedidoAux:estadodetallepedidosForeignKey) {
				if(estadodetallepedidoAux.getId()!=null && estadodetallepedidoAux.getId().equals(idEstadoDetallePedidoSeleccionado)) {
					estadodetallepedidoTemp=estadodetallepedidoAux;
					break;
				}
			}


			sDescripcion=EstadoDetallePedidoConstantesFunciones.getEstadoDetallePedidoDescripcion(estadodetallepedidoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualEstadoDetallePedidoForeignKeyGenerico(Long idEstadoDetallePedidoSeleccionado,JComboBox jComboBoxid_estado_detalle_pedidoDetalleConsignacionGenerico)throws Exception
	{
		try
		{
			EstadoDetallePedido  estadodetallepedidoTemp=null;

			for(EstadoDetallePedido estadodetallepedidoAux:estadodetallepedidosForeignKey) {
				if(estadodetallepedidoAux.getId()!=null && estadodetallepedidoAux.getId().equals(idEstadoDetallePedidoSeleccionado)) {
					estadodetallepedidoTemp=estadodetallepedidoAux;
					break;
				}
			}

			if(estadodetallepedidoTemp!=null) {
				jComboBoxid_estado_detalle_pedidoDetalleConsignacionGenerico.setSelectedItem(estadodetallepedidoTemp);
			} else {
				if(jComboBoxid_estado_detalle_pedidoDetalleConsignacionGenerico!=null && jComboBoxid_estado_detalle_pedidoDetalleConsignacionGenerico.getItemCount()>0) {
					jComboBoxid_estado_detalle_pedidoDetalleConsignacionGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	
	
	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarEmpresaForeignKey(DetalleConsignacion detalleconsignacion,JComboBox jComboBoxid_empresaDetalleConsignacionGenerico)throws Exception
	{
		try
		{
			Empresa  empresaAux=new Empresa();

			if(jComboBoxid_empresaDetalleConsignacionGenerico==null) {
				empresaAux=(Empresa)this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_empresaDetalleConsignacion.getSelectedItem();
			} else {
				empresaAux=(Empresa)jComboBoxid_empresaDetalleConsignacionGenerico.getSelectedItem();
			}

			if(empresaAux!=null && empresaAux.getId()!=null) {
				detalleconsignacion.setid_empresa(empresaAux.getId());
				detalleconsignacion.setempresa_descripcion(DetalleConsignacionConstantesFunciones.getEmpresaDescripcion(empresaAux));
				detalleconsignacion.setEmpresa(empresaAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarSucursalForeignKey(DetalleConsignacion detalleconsignacion,JComboBox jComboBoxid_sucursalDetalleConsignacionGenerico)throws Exception
	{
		try
		{
			Sucursal  sucursalAux=new Sucursal();

			if(jComboBoxid_sucursalDetalleConsignacionGenerico==null) {
				sucursalAux=(Sucursal)this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_sucursalDetalleConsignacion.getSelectedItem();
			} else {
				sucursalAux=(Sucursal)jComboBoxid_sucursalDetalleConsignacionGenerico.getSelectedItem();
			}

			if(sucursalAux!=null && sucursalAux.getId()!=null) {
				detalleconsignacion.setid_sucursal(sucursalAux.getId());
				detalleconsignacion.setsucursal_descripcion(DetalleConsignacionConstantesFunciones.getSucursalDescripcion(sucursalAux));
				detalleconsignacion.setSucursal(sucursalAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarEjercicioForeignKey(DetalleConsignacion detalleconsignacion,JComboBox jComboBoxid_ejercicioDetalleConsignacionGenerico)throws Exception
	{
		try
		{
			Ejercicio  ejercicioAux=new Ejercicio();

			if(jComboBoxid_ejercicioDetalleConsignacionGenerico==null) {
				ejercicioAux=(Ejercicio)this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_ejercicioDetalleConsignacion.getSelectedItem();
			} else {
				ejercicioAux=(Ejercicio)jComboBoxid_ejercicioDetalleConsignacionGenerico.getSelectedItem();
			}

			if(ejercicioAux!=null && ejercicioAux.getId()!=null) {
				detalleconsignacion.setid_ejercicio(ejercicioAux.getId());
				detalleconsignacion.setejercicio_descripcion(DetalleConsignacionConstantesFunciones.getEjercicioDescripcion(ejercicioAux));
				detalleconsignacion.setEjercicio(ejercicioAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarPeriodoForeignKey(DetalleConsignacion detalleconsignacion,JComboBox jComboBoxid_periodoDetalleConsignacionGenerico)throws Exception
	{
		try
		{
			Periodo  periodoAux=new Periodo();

			if(jComboBoxid_periodoDetalleConsignacionGenerico==null) {
				periodoAux=(Periodo)this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_periodoDetalleConsignacion.getSelectedItem();
			} else {
				periodoAux=(Periodo)jComboBoxid_periodoDetalleConsignacionGenerico.getSelectedItem();
			}

			if(periodoAux!=null && periodoAux.getId()!=null) {
				if(periodoAux.getid_estado_periodo().equals(0L)) {
					throw new Exception("Periodo INACTIVO, NO PUEDE GUARDAR LA INFORMACION CONSULTE CON EL ADMINISTRADOR");
				}

				detalleconsignacion.setid_periodo(periodoAux.getId());
				detalleconsignacion.setperiodo_descripcion(DetalleConsignacionConstantesFunciones.getPeriodoDescripcion(periodoAux));
				detalleconsignacion.setPeriodo(periodoAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarAnioForeignKey(DetalleConsignacion detalleconsignacion,JComboBox jComboBoxid_anioDetalleConsignacionGenerico)throws Exception
	{
		try
		{
			Anio  anioAux=new Anio();

			if(jComboBoxid_anioDetalleConsignacionGenerico==null) {
				anioAux=(Anio)this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_anioDetalleConsignacion.getSelectedItem();
			} else {
				anioAux=(Anio)jComboBoxid_anioDetalleConsignacionGenerico.getSelectedItem();
			}

			if(anioAux!=null) {
				detalleconsignacion.setid_anio(anioAux.getId());
				detalleconsignacion.setanio_descripcion(DetalleConsignacionConstantesFunciones.getAnioDescripcion(anioAux));
				detalleconsignacion.setAnio(anioAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarMesForeignKey(DetalleConsignacion detalleconsignacion,JComboBox jComboBoxid_mesDetalleConsignacionGenerico)throws Exception
	{
		try
		{
			Mes  mesAux=new Mes();

			if(jComboBoxid_mesDetalleConsignacionGenerico==null) {
				mesAux=(Mes)this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_mesDetalleConsignacion.getSelectedItem();
			} else {
				mesAux=(Mes)jComboBoxid_mesDetalleConsignacionGenerico.getSelectedItem();
			}

			if(mesAux!=null) {
				detalleconsignacion.setid_mes(mesAux.getId());
				detalleconsignacion.setmes_descripcion(DetalleConsignacionConstantesFunciones.getMesDescripcion(mesAux));
				detalleconsignacion.setMes(mesAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarConsignacionForeignKey(DetalleConsignacion detalleconsignacion,JComboBox jComboBoxid_consignacionDetalleConsignacionGenerico)throws Exception
	{
		try
		{
			Consignacion  consignacionAux=new Consignacion();

			if(jComboBoxid_consignacionDetalleConsignacionGenerico==null) {
				consignacionAux=(Consignacion)this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_consignacionDetalleConsignacion.getSelectedItem();
			} else {
				consignacionAux=(Consignacion)jComboBoxid_consignacionDetalleConsignacionGenerico.getSelectedItem();
			}

			if(consignacionAux!=null && consignacionAux.getId()!=null) {
				detalleconsignacion.setid_consignacion(consignacionAux.getId());
				detalleconsignacion.setconsignacion_descripcion(DetalleConsignacionConstantesFunciones.getConsignacionDescripcion(consignacionAux));
				detalleconsignacion.setConsignacion(consignacionAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarProductoForeignKey(DetalleConsignacion detalleconsignacion,JComboBox jComboBoxid_productoDetalleConsignacionGenerico)throws Exception
	{
		try
		{
			Producto  productoAux=new Producto();

			if(jComboBoxid_productoDetalleConsignacionGenerico==null) {
				productoAux=(Producto)this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_productoDetalleConsignacion.getSelectedItem();
			} else {
				productoAux=(Producto)jComboBoxid_productoDetalleConsignacionGenerico.getSelectedItem();
			}

			if(productoAux!=null && productoAux.getId()!=null) {
				detalleconsignacion.setid_producto(productoAux.getId());
				detalleconsignacion.setproducto_descripcion(DetalleConsignacionConstantesFunciones.getProductoDescripcion(productoAux));
				detalleconsignacion.setProducto(productoAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarBodegaForeignKey(DetalleConsignacion detalleconsignacion,JComboBox jComboBoxid_bodegaDetalleConsignacionGenerico)throws Exception
	{
		try
		{
			Bodega  bodegaAux=new Bodega();

			if(jComboBoxid_bodegaDetalleConsignacionGenerico==null) {
				bodegaAux=(Bodega)this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_bodegaDetalleConsignacion.getSelectedItem();
			} else {
				bodegaAux=(Bodega)jComboBoxid_bodegaDetalleConsignacionGenerico.getSelectedItem();
			}

			if(bodegaAux!=null && bodegaAux.getId()!=null) {
				detalleconsignacion.setid_bodega(bodegaAux.getId());
				detalleconsignacion.setbodega_descripcion(DetalleConsignacionConstantesFunciones.getBodegaDescripcion(bodegaAux));
				detalleconsignacion.setBodega(bodegaAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarUnidadForeignKey(DetalleConsignacion detalleconsignacion,JComboBox jComboBoxid_unidadDetalleConsignacionGenerico)throws Exception
	{
		try
		{
			Unidad  unidadAux=new Unidad();

			if(jComboBoxid_unidadDetalleConsignacionGenerico==null) {
				unidadAux=(Unidad)this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_unidadDetalleConsignacion.getSelectedItem();
			} else {
				unidadAux=(Unidad)jComboBoxid_unidadDetalleConsignacionGenerico.getSelectedItem();
			}

			if(unidadAux!=null && unidadAux.getId()!=null) {
				detalleconsignacion.setid_unidad(unidadAux.getId());
				detalleconsignacion.setunidad_descripcion(DetalleConsignacionConstantesFunciones.getUnidadDescripcion(unidadAux));
				detalleconsignacion.setUnidad(unidadAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarEstadoDetallePedidoForeignKey(DetalleConsignacion detalleconsignacion,JComboBox jComboBoxid_estado_detalle_pedidoDetalleConsignacionGenerico)throws Exception
	{
		try
		{
			EstadoDetallePedido  estadodetallepedidoAux=new EstadoDetallePedido();

			if(jComboBoxid_estado_detalle_pedidoDetalleConsignacionGenerico==null) {
				estadodetallepedidoAux=(EstadoDetallePedido)this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_estado_detalle_pedidoDetalleConsignacion.getSelectedItem();
			} else {
				estadodetallepedidoAux=(EstadoDetallePedido)jComboBoxid_estado_detalle_pedidoDetalleConsignacionGenerico.getSelectedItem();
			}

			if(estadodetallepedidoAux!=null && estadodetallepedidoAux.getId()!=null) {
				detalleconsignacion.setid_estado_detalle_pedido(estadodetallepedidoAux.getId());
				detalleconsignacion.setestadodetallepedido_descripcion(DetalleConsignacionConstantesFunciones.getEstadoDetallePedidoDescripcion(estadodetallepedidoAux));
				detalleconsignacion.setEstadoDetallePedido(estadodetallepedidoAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	
	


		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameEmpresasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingEmpresa=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!DetalleConsignacionJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormDetalleConsignacion!=null) { 
							this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_empresaDetalleConsignacion.removeAllItems();

							for(Empresa empresa:this.empresasForeignKey) {
								this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_empresaDetalleConsignacion.addItem(empresa);
							}
						}
					}

					if(this.jInternalFrameDetalleFormDetalleConsignacion!=null) { 
					}

					if(!DetalleConsignacionJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameSucursalsForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingSucursal=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!DetalleConsignacionJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormDetalleConsignacion!=null) { 
							this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_sucursalDetalleConsignacion.removeAllItems();

							for(Sucursal sucursal:this.sucursalsForeignKey) {
								this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_sucursalDetalleConsignacion.addItem(sucursal);
							}
						}
					}

					if(this.jInternalFrameDetalleFormDetalleConsignacion!=null) { 
					}

					if(!DetalleConsignacionJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameEjerciciosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingEjercicio=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!DetalleConsignacionJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormDetalleConsignacion!=null) { 
							this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_ejercicioDetalleConsignacion.removeAllItems();

							for(Ejercicio ejercicio:this.ejerciciosForeignKey) {
								this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_ejercicioDetalleConsignacion.addItem(ejercicio);
							}
						}
					}

					if(this.jInternalFrameDetalleFormDetalleConsignacion!=null) { 
					}

					if(!DetalleConsignacionJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFramePeriodosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingPeriodo=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!DetalleConsignacionJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormDetalleConsignacion!=null) { 
							this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_periodoDetalleConsignacion.removeAllItems();

							for(Periodo periodo:this.periodosForeignKey) {
								this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_periodoDetalleConsignacion.addItem(periodo);
							}
						}
					}

					if(this.jInternalFrameDetalleFormDetalleConsignacion!=null) { 
					}

					if(!DetalleConsignacionJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameAniosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingAnio=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!DetalleConsignacionJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormDetalleConsignacion!=null) { 
							this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_anioDetalleConsignacion.removeAllItems();

							for(Anio anio:this.aniosForeignKey) {
								this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_anioDetalleConsignacion.addItem(anio);
							}
						}
					}

					if(this.jInternalFrameDetalleFormDetalleConsignacion!=null) { 
					}

					if(!DetalleConsignacionJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameMessForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingMes=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!DetalleConsignacionJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormDetalleConsignacion!=null) { 
							this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_mesDetalleConsignacion.removeAllItems();

							for(Mes mes:this.messForeignKey) {
								this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_mesDetalleConsignacion.addItem(mes);
							}
						}
					}

					if(this.jInternalFrameDetalleFormDetalleConsignacion!=null) { 
					}

					if(!DetalleConsignacionJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameConsignacionsForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingConsignacion=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!DetalleConsignacionJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormDetalleConsignacion!=null) { 
							this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_consignacionDetalleConsignacion.removeAllItems();

							for(Consignacion consignacion:this.consignacionsForeignKey) {
								this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_consignacionDetalleConsignacion.addItem(consignacion);
							}
						}
					}

					if(this.jInternalFrameDetalleFormDetalleConsignacion!=null) { 
					}

					if(!DetalleConsignacionJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdConsignacion") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!DetalleConsignacionJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_consignacionFK_IdConsignacionDetalleConsignacion.removeAllItems();

							for(Consignacion consignacion:this.consignacionsForeignKey) {
								this.jComboBoxid_consignacionFK_IdConsignacionDetalleConsignacion.addItem(consignacion);
							}
						}

						if(!DetalleConsignacionJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameProductosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingProducto=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!DetalleConsignacionJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormDetalleConsignacion!=null) { 
							this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_productoDetalleConsignacion.removeAllItems();

							for(Producto producto:this.productosForeignKey) {
								this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_productoDetalleConsignacion.addItem(producto);
							}
						}
					}

					if(this.jInternalFrameDetalleFormDetalleConsignacion!=null) { 
					}

					if(!DetalleConsignacionJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdProducto") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!DetalleConsignacionJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_productoFK_IdProductoDetalleConsignacion.removeAllItems();

							for(Producto producto:this.productosForeignKey) {
								this.jComboBoxid_productoFK_IdProductoDetalleConsignacion.addItem(producto);
							}
						}

						if(!DetalleConsignacionJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameBodegasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingBodega=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!DetalleConsignacionJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormDetalleConsignacion!=null) { 
							this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_bodegaDetalleConsignacion.removeAllItems();

							for(Bodega bodega:this.bodegasForeignKey) {
								this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_bodegaDetalleConsignacion.addItem(bodega);
							}
						}
					}

					if(this.jInternalFrameDetalleFormDetalleConsignacion!=null) { 
					}

					if(!DetalleConsignacionJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdBodega") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!DetalleConsignacionJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_bodegaFK_IdBodegaDetalleConsignacion.removeAllItems();

							for(Bodega bodega:this.bodegasForeignKey) {
								this.jComboBoxid_bodegaFK_IdBodegaDetalleConsignacion.addItem(bodega);
							}
						}

						if(!DetalleConsignacionJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameUnidadsForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingUnidad=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!DetalleConsignacionJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormDetalleConsignacion!=null) { 
							this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_unidadDetalleConsignacion.removeAllItems();

							for(Unidad unidad:this.unidadsForeignKey) {
								this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_unidadDetalleConsignacion.addItem(unidad);
							}
						}
					}

					if(this.jInternalFrameDetalleFormDetalleConsignacion!=null) { 
					}

					if(!DetalleConsignacionJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdUnidad") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!DetalleConsignacionJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_unidadFK_IdUnidadDetalleConsignacion.removeAllItems();

							for(Unidad unidad:this.unidadsForeignKey) {
								this.jComboBoxid_unidadFK_IdUnidadDetalleConsignacion.addItem(unidad);
							}
						}

						if(!DetalleConsignacionJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameEstadoDetallePedidosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingEstadoDetallePedido=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!DetalleConsignacionJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormDetalleConsignacion!=null) { 
							this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_estado_detalle_pedidoDetalleConsignacion.removeAllItems();

							for(EstadoDetallePedido estadodetallepedido:this.estadodetallepedidosForeignKey) {
								this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_estado_detalle_pedidoDetalleConsignacion.addItem(estadodetallepedido);
							}
						}
					}

					if(this.jInternalFrameDetalleFormDetalleConsignacion!=null) { 
					}

					if(!DetalleConsignacionJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdEstadoDetallePedido") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!DetalleConsignacionJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_estado_detalle_pedidoFK_IdEstadoDetallePedidoDetalleConsignacion.removeAllItems();

							for(EstadoDetallePedido estadodetallepedido:this.estadodetallepedidosForeignKey) {
								this.jComboBoxid_estado_detalle_pedidoFK_IdEstadoDetallePedidoDetalleConsignacion.addItem(estadodetallepedido);
							}
						}

						if(!DetalleConsignacionJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

	


		public void setSelectedItemCombosFrameEmpresaForeignKey(Empresa empresa,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormDetalleConsignacion!=null) {
							this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_empresaDetalleConsignacion.setSelectedItem(empresa);
						}
					} else {
						if(this.jInternalFrameDetalleFormDetalleConsignacion!=null) {
							this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_empresaDetalleConsignacion.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameSucursalForeignKey(Sucursal sucursal,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormDetalleConsignacion!=null) {
							this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_sucursalDetalleConsignacion.setSelectedItem(sucursal);
						}
					} else {
						if(this.jInternalFrameDetalleFormDetalleConsignacion!=null) {
							this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_sucursalDetalleConsignacion.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameEjercicioForeignKey(Ejercicio ejercicio,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormDetalleConsignacion!=null) {
							this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_ejercicioDetalleConsignacion.setSelectedItem(ejercicio);
						}
					} else {
						if(this.jInternalFrameDetalleFormDetalleConsignacion!=null) {
							this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_ejercicioDetalleConsignacion.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFramePeriodoForeignKey(Periodo periodo,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormDetalleConsignacion!=null) {
							this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_periodoDetalleConsignacion.setSelectedItem(periodo);
						}
					} else {
						if(this.jInternalFrameDetalleFormDetalleConsignacion!=null) {
							this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_periodoDetalleConsignacion.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameAnioForeignKey(Anio anio,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormDetalleConsignacion!=null) {
							this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_anioDetalleConsignacion.setSelectedItem(anio);
						}
					} else {
						if(this.jInternalFrameDetalleFormDetalleConsignacion!=null) {
							this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_anioDetalleConsignacion.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameMesForeignKey(Mes mes,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormDetalleConsignacion!=null) {
							this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_mesDetalleConsignacion.setSelectedItem(mes);
						}
					} else {
						if(this.jInternalFrameDetalleFormDetalleConsignacion!=null) {
							this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_mesDetalleConsignacion.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameConsignacionForeignKey(Consignacion consignacion,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormDetalleConsignacion!=null) {
							this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_consignacionDetalleConsignacion.setSelectedItem(consignacion);
						}
					} else {
						if(this.jInternalFrameDetalleFormDetalleConsignacion!=null) {
							this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_consignacionDetalleConsignacion.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_consignacionFK_IdConsignacionDetalleConsignacion.setSelectedItem(consignacion);
						} else {
							this.jComboBoxid_consignacionFK_IdConsignacionDetalleConsignacion.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameProductoForeignKey(Producto producto,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormDetalleConsignacion!=null) {
							this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_productoDetalleConsignacion.setSelectedItem(producto);
						}
					} else {
						if(this.jInternalFrameDetalleFormDetalleConsignacion!=null) {
							this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_productoDetalleConsignacion.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_productoFK_IdProductoDetalleConsignacion.setSelectedItem(producto);
						} else {
							this.jComboBoxid_productoFK_IdProductoDetalleConsignacion.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameBodegaForeignKey(Bodega bodega,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormDetalleConsignacion!=null) {
							this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_bodegaDetalleConsignacion.setSelectedItem(bodega);
						}
					} else {
						if(this.jInternalFrameDetalleFormDetalleConsignacion!=null) {
							this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_bodegaDetalleConsignacion.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_bodegaFK_IdBodegaDetalleConsignacion.setSelectedItem(bodega);
						} else {
							this.jComboBoxid_bodegaFK_IdBodegaDetalleConsignacion.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameUnidadForeignKey(Unidad unidad,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormDetalleConsignacion!=null) {
							this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_unidadDetalleConsignacion.setSelectedItem(unidad);
						}
					} else {
						if(this.jInternalFrameDetalleFormDetalleConsignacion!=null) {
							this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_unidadDetalleConsignacion.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_unidadFK_IdUnidadDetalleConsignacion.setSelectedItem(unidad);
						} else {
							this.jComboBoxid_unidadFK_IdUnidadDetalleConsignacion.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameEstadoDetallePedidoForeignKey(EstadoDetallePedido estadodetallepedido,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormDetalleConsignacion!=null) {
							this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_estado_detalle_pedidoDetalleConsignacion.setSelectedItem(estadodetallepedido);
						}
					} else {
						if(this.jInternalFrameDetalleFormDetalleConsignacion!=null) {
							this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_estado_detalle_pedidoDetalleConsignacion.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_estado_detalle_pedidoFK_IdEstadoDetallePedidoDetalleConsignacion.setSelectedItem(estadodetallepedido);
						} else {
							this.jComboBoxid_estado_detalle_pedidoFK_IdEstadoDetallePedidoDetalleConsignacion.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

	


	
	public void refrescarForeignKeysDescripcionesDetalleConsignacion() throws Exception {
		//SI FUNCIONA DEEPLOAD ESTO VA AL ULTIMO
		if(Constantes.ISUSAEJBLOGICLAYER) {
			DetalleConsignacionConstantesFunciones.refrescarForeignKeysDescripcionesDetalleConsignacion(this.detalleconsignacionLogic.getDetalleConsignacions());
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			DetalleConsignacionConstantesFunciones.refrescarForeignKeysDescripcionesDetalleConsignacion(this.detalleconsignacions);
		}
		
		/*
		ArrayList<Classe> classes=new ArrayList<Classe>();
		
		classes.add(new Classe(Empresa.class));
		classes.add(new Classe(Sucursal.class));
		classes.add(new Classe(Ejercicio.class));
		classes.add(new Classe(Periodo.class));
		classes.add(new Classe(Anio.class));
		classes.add(new Classe(Mes.class));
		classes.add(new Classe(Consignacion.class));
		classes.add(new Classe(Producto.class));
		classes.add(new Classe(Bodega.class));
		classes.add(new Classe(Unidad.class));
		classes.add(new Classe(EstadoDetallePedido.class));
			
		if(Constantes.ISUSAEJBLOGICLAYER) {
			//USA LOS OBJETOS DE LOGIC DIRECTAMENTE
			//detalleconsignacionLogic.setDetalleConsignacions(this.detalleconsignacions);
			detalleconsignacionLogic.deepLoadsWithConnection(false, DeepLoadType.INCLUDE, classes,"");
	
		} else if(Constantes.ISUSAEJBREMOTE) {
		} else if(Constantes.ISUSAEJBHOME) {
		}
		*/				
	}	
	
	
	
	public Integer getiNumeroPaginacion() {
		return iNumeroPaginacion;
	}

	public void setiNumeroPaginacion(Integer iNumeroPaginacion) {
		this.iNumeroPaginacion= iNumeroPaginacion;
	}
	
	public Integer getiNumeroPaginacionPagina() {
		return iNumeroPaginacionPagina;
	}

	public void setiNumeroPaginacionPagina(Integer iNumeroPaginacionPagina) {
		this.iNumeroPaginacionPagina= iNumeroPaginacionPagina;
	}
	
	
	public Boolean getIsSeleccionarTodos() {
		return this.isSeleccionarTodos;
	}

	public void setIsSeleccionarTodos(Boolean isSeleccionarTodos) {
		this.isSeleccionarTodos= isSeleccionarTodos;
	}
	
	public Boolean getEsControlTabla() {
		return this.esControlTabla;
	}

	public void setEsControlTabla(Boolean esControlTabla) {
		this.esControlTabla= esControlTabla;
	}
	
	public Boolean getIsSeleccionados() {
		return this.isSeleccionados;
	}

	public void setIsSeleccionados(Boolean isSeleccionados) {
		this.isSeleccionados= isSeleccionados;
	}
	
	public Boolean getIsPostAccionNuevo() {
		return this.isPostAccionNuevo;
	}

	public void setIsPostAccionNuevo(Boolean isPostAccionNuevo) {
		this.isPostAccionNuevo= isPostAccionNuevo;
	}
	
	public Boolean getIsPostAccionSinCerrar() {
		return this.isPostAccionSinCerrar;
	}

	public void setIsPostAccionSinCerrar(Boolean isPostAccionSinCerrar) {
		this.isPostAccionSinCerrar= isPostAccionSinCerrar;
	}
	
	public Boolean getIsPostAccionSinMensaje() {
		return this.isPostAccionSinMensaje;
	}

	public void setIsPostAccionSinMensaje(Boolean isPostAccionSinMensaje) {
		this.isPostAccionSinMensaje= isPostAccionSinMensaje;
	}
	
	public Boolean getConGraficoReporte() {
		return this.conGraficoReporte;
	}

	public void setConGraficoReporte(Boolean conGraficoReporte) {
		this.conGraficoReporte= conGraficoReporte;
	}
	
	
	public ArrayList<Reporte> gettiposArchivosReportes() {
		return this.tiposArchivosReportes;
	}
	
	public void settiposArchivosReportes(ArrayList<Reporte> tiposArchivosReportes) {
		this.tiposArchivosReportes = tiposArchivosReportes;
	}
	
	//TIPOS ARCHIVOS DINAMICOS
	public ArrayList<Reporte> gettiposArchivosReportesDinamico() {
		return this.tiposArchivosReportesDinamico;
	}
	
	public void settiposArchivosReportesDinamico(ArrayList<Reporte> tiposArchivosReportesDinamico) {
		this.tiposArchivosReportesDinamico = tiposArchivosReportesDinamico;
	}
	
	//TIPOS REPORTES
	public ArrayList<Reporte> gettiposReportes() {
		return this.tiposReportes;
	}
	
	public void settiposReportes(ArrayList<Reporte> tiposReportes) {
		this.tiposReportes = tiposReportes;
	}
	
	//TIPOS REPORTES
	public ArrayList<Reporte> gettiposReportesDinamico() {
		return this.tiposReportesDinamico;
	}
	
	public void settiposReportesDinamico(ArrayList<Reporte> tiposReportesDinamico) {
		this.tiposReportesDinamico = tiposReportesDinamico;
	}
	
	//TIPOS GRAFICOS REPORTES
	public ArrayList<Reporte> gettiposGraficosReportes() {
		return this.tiposGraficosReportes;
	}
	
	public void settiposGraficosReportes(ArrayList<Reporte> tiposGraficosReportes) {
		this.tiposGraficosReportes = tiposGraficosReportes;
	}
	
	public ArrayList<Reporte> gettiposPaginacion() {
		return this.tiposPaginacion;
	}
	
	public void settiposPaginacion(ArrayList<Reporte> tiposPaginacion) {
		this.tiposPaginacion = tiposPaginacion;
	}
	
	public ArrayList<Reporte> gettiposRelaciones() {
		return this.tiposRelaciones;
	}
	
	public void settiposRelaciones(ArrayList<Reporte> tiposRelaciones) {
		this.tiposRelaciones= tiposRelaciones;
	}
	
	public ArrayList<Reporte> gettiposAcciones() {
		return this.tiposAcciones;
	}
	
	public void settiposAcciones(ArrayList<Reporte> tiposAcciones) {
		this.tiposAcciones = tiposAcciones;
	}
	
	public ArrayList<Reporte> gettiposAccionesFormulario() {
		return this.tiposAccionesFormulario;
	}
	
	public void settiposAccionesFormulario(ArrayList<Reporte> tiposAccionesFormulario) {
		this.tiposAccionesFormulario = tiposAccionesFormulario;
	}
	
	public ArrayList<Reporte> gettiposSeleccionar() {
		return this.tiposSeleccionar;
	}
	
	public void settiposSeleccionar(ArrayList<Reporte> tiposSeleccionar) {
		this.tiposSeleccionar = tiposSeleccionar;
	}
	
	public ArrayList<Reporte> gettiposColumnasSelect() {
		return this.tiposColumnasSelect;
	}
	
	public void settiposColumnasSelect(ArrayList<Reporte> tiposColumnasSelect) {
		this.tiposColumnasSelect = tiposColumnasSelect;
	}
		
	public ArrayList<Reporte> gettiposRelacionesSelect() {
		return this.tiposRelacionesSelect;
	}
	
	public void settiposRelacionesSelect(ArrayList<Reporte> tiposRelacionesSelect) {
		this.tiposRelacionesSelect = tiposRelacionesSelect;
	}
	
	public Long getIIdUsuarioSesion() {
		return lIdUsuarioSesion;
	}

	public void setIIdUsuarioSesion(Long lIdUsuarioSesion) {
		this.lIdUsuarioSesion = lIdUsuarioSesion;
	}
	
	
	public List<Accion> getAccions() {
		return this.accions;
	}

	public void setAccions(List<Accion> accions) {
		this.accions = accions;
	}
	
	public List<Accion> getAccionsFormulario() {
		return this.accionsFormulario;
	}

	public void setAccionsFormulario(List<Accion> accionsFormulario) {
		this.accionsFormulario = accionsFormulario;
	}
	
	public String getsAccionMantenimiento() {
		return sAccionMantenimiento;
	}

	public void setsAccionMantenimiento(String sAccionMantenimiento) {
		this.sAccionMantenimiento = sAccionMantenimiento;
	}

	public String getsAccionBusqueda() {
		return sAccionBusqueda;
	}

	public void setsAccionBusqueda(String sAccionBusqueda) {
		this.sAccionBusqueda = sAccionBusqueda;
	}

	public String getsAccionAdicional() {
		return sAccionAdicional;
	}

	public void setsAccionAdicional(String sAccionAdicional) {
		this.sAccionAdicional = sAccionAdicional;
	}

	public String getsUltimaBusqueda() {
		return sUltimaBusqueda;
	}

	public void setsUltimaBusqueda(String sUltimaBusqueda) {
		this.sUltimaBusqueda = sUltimaBusqueda;
	}
	
	public String getsTipoArchivoReporte() {
		return sTipoArchivoReporte;
	}

	public void setsTipoArchivoReporte(String sTipoArchivoReporte) {
		this.sTipoArchivoReporte = sTipoArchivoReporte;
	}
	
	public String getsTipoArchivoReporteDinamico() {
		return sTipoArchivoReporteDinamico;
	}

	public void setsTipoArchivoReporteDinamico(String sTipoArchivoReporteDinamico) {
		this.sTipoArchivoReporteDinamico = sTipoArchivoReporteDinamico;
	}
	
	public String getsTipoReporte() {
		return sTipoReporte;
	}

	public void setsTipoReporte(String sTipoReporte) {
		this.sTipoReporte = sTipoReporte;
	}
	
	public String getsTipoReporteDinamico() {
		return sTipoReporteDinamico;
	}

	public void setsTipoReporteDinamico(String sTipoReporteDinamico) {
		this.sTipoReporteDinamico = sTipoReporteDinamico;
	}
	
	public String getsTipoGraficoReporte() {
		return sTipoGraficoReporte;
	}

	public void setsTipoGraficoReporte(String sTipoGraficoReporte) {
		this.sTipoGraficoReporte = sTipoGraficoReporte;
	}
	
	public String getsTipoPaginacion() {
		return sTipoPaginacion;
	}

	public void setsTipoPaginacion(String sTipoPaginacion) {
		this.sTipoPaginacion = sTipoPaginacion;
	}
	
	public String getsTipoRelacion() {
		return sTipoRelacion;
	}

	public void setsTipoRelacion(String sTipoRelacion) {
		this.sTipoRelacion = sTipoRelacion;
	}
	
	public String getsTipoAccion() {
		return sTipoAccion;
	}

	public void setsTipoAccion(String sTipoAccion) {
		this.sTipoAccion = sTipoAccion;
	}
	
	public String getsTipoAccionFormulario() {
		return sTipoAccionFormulario;
	}

	public void setsTipoAccionFormulario(String sTipoAccionFormulario) {
		this.sTipoAccionFormulario = sTipoAccionFormulario;
	}
	
	public String getsTipoSeleccionar() {
		return sTipoSeleccionar;
	}

	public void setsTipoSeleccionar(String sTipoSeleccionar) {
		this.sTipoSeleccionar = sTipoSeleccionar;
	}
	
	public String getsValorCampoGeneral() {
		return sValorCampoGeneral;
	}

	public void setsValorCampoGeneral(String sValorCampoGeneral) {
		this.sValorCampoGeneral = sValorCampoGeneral;
	}			

	public String getsDetalleReporte() {
		return sDetalleReporte;
	}

	public void setsDetalleReporte(String sDetalleReporte) {
		this.sDetalleReporte = sDetalleReporte;
	}
	
	
	public String getsTipoReporteExtra() {
		return sTipoReporteExtra;
	}

	public void setsTipoReporteExtra(String sTipoReporteExtra) {
		this.sTipoReporteExtra = sTipoReporteExtra;
	}
	
	public Boolean getesReporteDinamico() {
		return esReporteDinamico;
	}	
	
	public void setesReporteDinamico(Boolean esReporteDinamico) {
		this.esReporteDinamico = esReporteDinamico;
	}
	
	public Boolean getesRecargarFks() {
		return esRecargarFks;
	}	
	
	public void setesRecargarFks(Boolean esRecargarFks) {
		this.esRecargarFks = esRecargarFks;
	}
	
	public Boolean getesReporteAccionProceso() {
		return esReporteAccionProceso;
	}	
	
	public void setesReporteAccionProceso(Boolean esReporteAccionProceso) {
		this.esReporteAccionProceso= esReporteAccionProceso;
	}
		
	public DetalleConsignacionParameterReturnGeneral getDetalleConsignacionParameterGeneral() {
		return this.detalleconsignacionParameterGeneral;
	}
	
	public void setDetalleConsignacionParameterGeneral(DetalleConsignacionParameterReturnGeneral detalleconsignacionParameterGeneral) {
		this.detalleconsignacionParameterGeneral = detalleconsignacionParameterGeneral;
	}
	
	public String getsPathReporteDinamico() {
		return sPathReporteDinamico;
	}

	public void setsPathReporteDinamico(String sPathReporteDinamico) {
		this.sPathReporteDinamico = sPathReporteDinamico;
	}
		
	public Boolean getisMostrarNumeroPaginacion() {
		return isMostrarNumeroPaginacion;
	}

	public void setisMostrarNumeroPaginacion(Boolean isMostrarNumeroPaginacion) {
		this.isMostrarNumeroPaginacion = isMostrarNumeroPaginacion;
	}
	
	public Mensaje getMensaje() {
		return mensaje;
	}

	public void setMensaje(Mensaje mensaje) {
		this.mensaje = mensaje;
	}
	
	public Boolean getIsPermisoTodoDetalleConsignacion() {
		return isPermisoTodoDetalleConsignacion;
	}

	public void setIsPermisoTodoDetalleConsignacion(Boolean isPermisoTodoDetalleConsignacion) {
		this.isPermisoTodoDetalleConsignacion = isPermisoTodoDetalleConsignacion;
	}

	public Boolean getIsPermisoNuevoDetalleConsignacion() {
		return isPermisoNuevoDetalleConsignacion;
	}

	public void setIsPermisoNuevoDetalleConsignacion(Boolean isPermisoNuevoDetalleConsignacion) {
		this.isPermisoNuevoDetalleConsignacion = isPermisoNuevoDetalleConsignacion;
	}

	public Boolean getIsPermisoActualizarDetalleConsignacion() {
		return isPermisoActualizarDetalleConsignacion;
	}

	public void setIsPermisoActualizarDetalleConsignacion(Boolean isPermisoActualizarDetalleConsignacion) {
		this.isPermisoActualizarDetalleConsignacion = isPermisoActualizarDetalleConsignacion;
	}

	public Boolean getIsPermisoEliminarDetalleConsignacion() {
		return isPermisoEliminarDetalleConsignacion;
	}

	public void setIsPermisoEliminarDetalleConsignacion(Boolean isPermisoEliminarDetalleConsignacion) {
		this.isPermisoEliminarDetalleConsignacion = isPermisoEliminarDetalleConsignacion;
	}

	public Boolean getIsPermisoGuardarCambiosDetalleConsignacion() {
		return isPermisoGuardarCambiosDetalleConsignacion;
	}

	public void setIsPermisoGuardarCambiosDetalleConsignacion(Boolean isPermisoGuardarCambiosDetalleConsignacion) {
		this.isPermisoGuardarCambiosDetalleConsignacion = isPermisoGuardarCambiosDetalleConsignacion;
	}
	
	public Boolean getIsPermisoConsultaDetalleConsignacion() {
		return isPermisoConsultaDetalleConsignacion;
	}

	public void setIsPermisoConsultaDetalleConsignacion(Boolean isPermisoConsultaDetalleConsignacion) {
		this.isPermisoConsultaDetalleConsignacion = isPermisoConsultaDetalleConsignacion;
	}

	public Boolean getIsPermisoBusquedaDetalleConsignacion() {
		return isPermisoBusquedaDetalleConsignacion;
	}

	public void setIsPermisoBusquedaDetalleConsignacion(Boolean isPermisoBusquedaDetalleConsignacion) {
		this.isPermisoBusquedaDetalleConsignacion = isPermisoBusquedaDetalleConsignacion;
	}

	public Boolean getIsPermisoReporteDetalleConsignacion() {
		return isPermisoReporteDetalleConsignacion;
	}

	public void setIsPermisoReporteDetalleConsignacion(Boolean isPermisoReporteDetalleConsignacion) {
		this.isPermisoReporteDetalleConsignacion = isPermisoReporteDetalleConsignacion;
	}
	
	public Boolean getIsPermisoPaginacionMedioDetalleConsignacion() {
		return isPermisoPaginacionMedioDetalleConsignacion;
	}

	public void setIsPermisoPaginacionMedioDetalleConsignacion(Boolean isPermisoPaginacionMedioDetalleConsignacion) {
		this.isPermisoPaginacionMedioDetalleConsignacion = isPermisoPaginacionMedioDetalleConsignacion;
	}
	
	public Boolean getIsPermisoPaginacionTodoDetalleConsignacion() {
		return isPermisoPaginacionTodoDetalleConsignacion;
	}

	public void setIsPermisoPaginacionTodoDetalleConsignacion(Boolean isPermisoPaginacionTodoDetalleConsignacion) {
		this.isPermisoPaginacionTodoDetalleConsignacion = isPermisoPaginacionTodoDetalleConsignacion;
	}
	
	public Boolean getIsPermisoPaginacionAltoDetalleConsignacion() {
		return isPermisoPaginacionAltoDetalleConsignacion;
	}

	public void setIsPermisoPaginacionAltoDetalleConsignacion(Boolean isPermisoPaginacionAltoDetalleConsignacion) {
		this.isPermisoPaginacionAltoDetalleConsignacion = isPermisoPaginacionAltoDetalleConsignacion;
	}
	
	public Boolean getIsPermisoCopiarDetalleConsignacion() {
		return isPermisoCopiarDetalleConsignacion;
	}

	public void setIsPermisoCopiarDetalleConsignacion(Boolean isPermisoCopiarDetalleConsignacion) {
		this.isPermisoCopiarDetalleConsignacion = isPermisoCopiarDetalleConsignacion;
	}
	
	public Boolean getIsPermisoVerFormDetalleConsignacion() {
		return isPermisoVerFormDetalleConsignacion;
	}

	public void setIsPermisoVerFormDetalleConsignacion(Boolean isPermisoVerFormDetalleConsignacion) {
		this.isPermisoVerFormDetalleConsignacion = isPermisoVerFormDetalleConsignacion;
	}
	
	public Boolean getIsPermisoDuplicarDetalleConsignacion() {
		return isPermisoDuplicarDetalleConsignacion;
	}

	public void setIsPermisoDuplicarDetalleConsignacion(Boolean isPermisoDuplicarDetalleConsignacion) {
		this.isPermisoDuplicarDetalleConsignacion = isPermisoDuplicarDetalleConsignacion;
	}
	
	public Boolean getIsPermisoOrdenDetalleConsignacion() {
		return isPermisoOrdenDetalleConsignacion;
	}

	public void setIsPermisoOrdenDetalleConsignacion(Boolean isPermisoOrdenDetalleConsignacion) {
		this.isPermisoOrdenDetalleConsignacion = isPermisoOrdenDetalleConsignacion;
	}
	
	public String getsVisibilidadTablaBusquedas() {
		return sVisibilidadTablaBusquedas;
	}

	public void setsVisibilidadTablaBusquedas(String sVisibilidadTablaBusquedas) {
		this.sVisibilidadTablaBusquedas = sVisibilidadTablaBusquedas;
	}
	
	public String getsVisibilidadTablaElementos() {
		return sVisibilidadTablaElementos;
	}

	public void setsVisibilidadTablaElementos(String sVisibilidadTablaElementos) {
		this.sVisibilidadTablaElementos = sVisibilidadTablaElementos;
	}

	public String getsVisibilidadTablaAcciones() {
		return sVisibilidadTablaAcciones;
	}

	public void setsVisibilidadTablaAcciones(String sVisibilidadTablaAcciones) {
		this.sVisibilidadTablaAcciones = sVisibilidadTablaAcciones;
	}
	
	public Boolean getIsVisibilidadCeldaNuevoDetalleConsignacion() {
		return isVisibilidadCeldaNuevoDetalleConsignacion;
	}

	public void setIsVisibilidadCeldaNuevoDetalleConsignacion(Boolean isVisibilidadCeldaNuevoDetalleConsignacion) {
		this.isVisibilidadCeldaNuevoDetalleConsignacion = isVisibilidadCeldaNuevoDetalleConsignacion;
	}
	
	public Boolean getIsVisibilidadCeldaDuplicarDetalleConsignacion() {
		return isVisibilidadCeldaDuplicarDetalleConsignacion;
	}

	public void setIsVisibilidadCeldaDuplicarDetalleConsignacion(Boolean isVisibilidadCeldaDuplicarDetalleConsignacion) {
		this.isVisibilidadCeldaDuplicarDetalleConsignacion = isVisibilidadCeldaDuplicarDetalleConsignacion;
	}
	
	public Boolean getIsVisibilidadCeldaCopiarDetalleConsignacion() {
		return isVisibilidadCeldaCopiarDetalleConsignacion;
	}

	public void setIsVisibilidadCeldaCopiarDetalleConsignacion(Boolean isVisibilidadCeldaCopiarDetalleConsignacion) {
		this.isVisibilidadCeldaCopiarDetalleConsignacion = isVisibilidadCeldaCopiarDetalleConsignacion;
	}
	
	public Boolean getIsVisibilidadCeldaVerFormDetalleConsignacion() {
		return isVisibilidadCeldaVerFormDetalleConsignacion;
	}

	public void setIsVisibilidadCeldaVerFormDetalleConsignacion(Boolean isVisibilidadCeldaVerFormDetalleConsignacion) {
		this.isVisibilidadCeldaVerFormDetalleConsignacion = isVisibilidadCeldaVerFormDetalleConsignacion;
	}
	
	public Boolean getIsVisibilidadCeldaOrdenDetalleConsignacion() {
		return isVisibilidadCeldaOrdenDetalleConsignacion;
	}

	public void setIsVisibilidadCeldaOrdenDetalleConsignacion(Boolean isVisibilidadCeldaOrdenDetalleConsignacion) {
		this.isVisibilidadCeldaOrdenDetalleConsignacion = isVisibilidadCeldaOrdenDetalleConsignacion;
	}
	
	public Boolean getIsVisibilidadCeldaNuevoRelacionesDetalleConsignacion() {
		return isVisibilidadCeldaNuevoRelacionesDetalleConsignacion;
	}

	public void setIsVisibilidadCeldaNuevoRelacionesDetalleConsignacion(Boolean isVisibilidadCeldaNuevoRelacionesDetalleConsignacion) {
		this.isVisibilidadCeldaNuevoRelacionesDetalleConsignacion = isVisibilidadCeldaNuevoRelacionesDetalleConsignacion;
	}
	
	public Boolean getIsVisibilidadCeldaModificarDetalleConsignacion() {
		return isVisibilidadCeldaModificarDetalleConsignacion;
	}

	public void setIsVisibilidadCeldaModificarDetalleConsignacion(Boolean isVisibilidadCeldaModificarDetalleConsignacion) {
		this.isVisibilidadCeldaModificarDetalleConsignacion = isVisibilidadCeldaModificarDetalleConsignacion;
	}
	
	public Boolean getIsVisibilidadCeldaActualizarDetalleConsignacion() {
		return isVisibilidadCeldaActualizarDetalleConsignacion;
	}

	public void setIsVisibilidadCeldaActualizarDetalleConsignacion(Boolean isVisibilidadCeldaActualizarDetalleConsignacion) {
		this.isVisibilidadCeldaActualizarDetalleConsignacion = isVisibilidadCeldaActualizarDetalleConsignacion;
	}

	public Boolean getIsVisibilidadCeldaEliminarDetalleConsignacion() {
		return isVisibilidadCeldaEliminarDetalleConsignacion;
	}

	public void setIsVisibilidadCeldaEliminarDetalleConsignacion(Boolean isVisibilidadCeldaEliminarDetalleConsignacion) {
		this.isVisibilidadCeldaEliminarDetalleConsignacion = isVisibilidadCeldaEliminarDetalleConsignacion;
	}

	public Boolean getIsVisibilidadCeldaCancelarDetalleConsignacion() {
		return isVisibilidadCeldaCancelarDetalleConsignacion;
	}

	public void setIsVisibilidadCeldaCancelarDetalleConsignacion(Boolean isVisibilidadCeldaCancelarDetalleConsignacion) {
		this.isVisibilidadCeldaCancelarDetalleConsignacion = isVisibilidadCeldaCancelarDetalleConsignacion;
	}

	public Boolean getIsVisibilidadCeldaGuardarDetalleConsignacion() {
		return isVisibilidadCeldaGuardarDetalleConsignacion;
	}

	public void setIsVisibilidadCeldaGuardarDetalleConsignacion(Boolean isVisibilidadCeldaGuardarDetalleConsignacion) {
		this.isVisibilidadCeldaGuardarDetalleConsignacion = isVisibilidadCeldaGuardarDetalleConsignacion;
	}
	
	public Boolean getIsVisibilidadCeldaGuardarCambiosDetalleConsignacion() {
		return isVisibilidadCeldaGuardarCambiosDetalleConsignacion;
	}

	public void setIsVisibilidadCeldaGuardarCambiosDetalleConsignacion(Boolean isVisibilidadCeldaGuardarCambiosDetalleConsignacion) {
		this.isVisibilidadCeldaGuardarCambiosDetalleConsignacion = isVisibilidadCeldaGuardarCambiosDetalleConsignacion;
	}
		
	public DetalleConsignacionSessionBean getdetalleconsignacionSessionBean() {
		return this.detalleconsignacionSessionBean;
	}
	
	public void setdetalleconsignacionSessionBean(DetalleConsignacionSessionBean detalleconsignacionSessionBean) {
		this.detalleconsignacionSessionBean=detalleconsignacionSessionBean;
	}
	
	
	public Boolean getisVisibilidadFK_IdAnio() {
		return this.isVisibilidadFK_IdAnio;
	}

	public void setisVisibilidadFK_IdAnio(Boolean isVisibilidadFK_IdAnio) {
		this.isVisibilidadFK_IdAnio=isVisibilidadFK_IdAnio;
	}

	public Boolean getisVisibilidadFK_IdBodega() {
		return this.isVisibilidadFK_IdBodega;
	}

	public void setisVisibilidadFK_IdBodega(Boolean isVisibilidadFK_IdBodega) {
		this.isVisibilidadFK_IdBodega=isVisibilidadFK_IdBodega;
	}

	public Boolean getisVisibilidadFK_IdConsignacion() {
		return this.isVisibilidadFK_IdConsignacion;
	}

	public void setisVisibilidadFK_IdConsignacion(Boolean isVisibilidadFK_IdConsignacion) {
		this.isVisibilidadFK_IdConsignacion=isVisibilidadFK_IdConsignacion;
	}

	public Boolean getisVisibilidadFK_IdEjercicio() {
		return this.isVisibilidadFK_IdEjercicio;
	}

	public void setisVisibilidadFK_IdEjercicio(Boolean isVisibilidadFK_IdEjercicio) {
		this.isVisibilidadFK_IdEjercicio=isVisibilidadFK_IdEjercicio;
	}

	public Boolean getisVisibilidadFK_IdEmpresa() {
		return this.isVisibilidadFK_IdEmpresa;
	}

	public void setisVisibilidadFK_IdEmpresa(Boolean isVisibilidadFK_IdEmpresa) {
		this.isVisibilidadFK_IdEmpresa=isVisibilidadFK_IdEmpresa;
	}

	public Boolean getisVisibilidadFK_IdEstadoDetallePedido() {
		return this.isVisibilidadFK_IdEstadoDetallePedido;
	}

	public void setisVisibilidadFK_IdEstadoDetallePedido(Boolean isVisibilidadFK_IdEstadoDetallePedido) {
		this.isVisibilidadFK_IdEstadoDetallePedido=isVisibilidadFK_IdEstadoDetallePedido;
	}

	public Boolean getisVisibilidadFK_IdMes() {
		return this.isVisibilidadFK_IdMes;
	}

	public void setisVisibilidadFK_IdMes(Boolean isVisibilidadFK_IdMes) {
		this.isVisibilidadFK_IdMes=isVisibilidadFK_IdMes;
	}

	public Boolean getisVisibilidadFK_IdPeriodo() {
		return this.isVisibilidadFK_IdPeriodo;
	}

	public void setisVisibilidadFK_IdPeriodo(Boolean isVisibilidadFK_IdPeriodo) {
		this.isVisibilidadFK_IdPeriodo=isVisibilidadFK_IdPeriodo;
	}

	public Boolean getisVisibilidadFK_IdProducto() {
		return this.isVisibilidadFK_IdProducto;
	}

	public void setisVisibilidadFK_IdProducto(Boolean isVisibilidadFK_IdProducto) {
		this.isVisibilidadFK_IdProducto=isVisibilidadFK_IdProducto;
	}

	public Boolean getisVisibilidadFK_IdSucursal() {
		return this.isVisibilidadFK_IdSucursal;
	}

	public void setisVisibilidadFK_IdSucursal(Boolean isVisibilidadFK_IdSucursal) {
		this.isVisibilidadFK_IdSucursal=isVisibilidadFK_IdSucursal;
	}

	public Boolean getisVisibilidadFK_IdUnidad() {
		return this.isVisibilidadFK_IdUnidad;
	}

	public void setisVisibilidadFK_IdUnidad(Boolean isVisibilidadFK_IdUnidad) {
		this.isVisibilidadFK_IdUnidad=isVisibilidadFK_IdUnidad;
	}

	
	
	public void setVariablesFormularioToObjetoActualForeignKeysDetalleConsignacion(DetalleConsignacion detalleconsignacion)throws Exception {
		try {
			
				this.setActualParaGuardarEmpresaForeignKey(detalleconsignacion,null);
				this.setActualParaGuardarSucursalForeignKey(detalleconsignacion,null);
				this.setActualParaGuardarEjercicioForeignKey(detalleconsignacion,null);
				this.setActualParaGuardarPeriodoForeignKey(detalleconsignacion,null);
				this.setActualParaGuardarAnioForeignKey(detalleconsignacion,null);
				this.setActualParaGuardarMesForeignKey(detalleconsignacion,null);
				this.setActualParaGuardarConsignacionForeignKey(detalleconsignacion,null);
				this.setActualParaGuardarProductoForeignKey(detalleconsignacion,null);
				this.setActualParaGuardarBodegaForeignKey(detalleconsignacion,null);
				this.setActualParaGuardarUnidadForeignKey(detalleconsignacion,null);
				this.setActualParaGuardarEstadoDetallePedidoForeignKey(detalleconsignacion,null);
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void cargarLicenciaCliente(DatosCliente datosCliente) throws Exception {
		Boolean existe=false;
			
		try {
				InputStream reportFile=null;
				
				String sPath=this.parametroGeneralUsuario.getpath_exportar()+"erp_bydan/license/license.xml";
				
				reportFile = new FileInputStream(sPath);
				
				Document documentBuilder=null;
				
				if(this.constantes2.DOCUMENT_BUILDER==null) {
					documentBuilder=Funciones2.parseXml(reportFile);
				} else {
					documentBuilder=this.constantes2.DOCUMENT_BUILDER;
				}
				
				//GlobalSeguridad.readXml(documentBuilder);
				
				String sNamePCServerLicencia="";
				String sClaveSistemaLicencia="";
				Date dFechaServerLicencia=null;
				
				//CARGAR ELEMENTOS DE LICENCIA
				NodeList nodeList = documentBuilder.getElementsByTagName("Licencia");
				
				for (int iIndice = 0; iIndice < nodeList.getLength(); iIndice++) {
					Node node = nodeList.item(iIndice);
				
					if (node.getNodeType() == Node.ELEMENT_NODE) {
						Element element = (Element) node;
						 
						sNamePCServerLicencia=element.getElementsByTagName("NombrePc").item(0).getTextContent();
						sClaveSistemaLicencia=element.getElementsByTagName("ClaveSistema").item(0).getTextContent();
						
						existe=true;
						break;
					}
				}														
			
				
			if(existe) {
				datosCliente.setsClaveSistema(sClaveSistemaLicencia);
				
				if(!datosCliente.getsNamePCServer().equals(sNamePCServerLicencia)
					&& !datosCliente.getsNamePCServer().equals("")) {
					
					datosCliente.setsNamePCServer(sNamePCServerLicencia);
				}
			} else {
				throw new Exception("NO EXISTE LICENCIA O NO ESTA BIEN FORMADO");
			}
		} catch(Exception e) {
			throw new Exception("NO EXISTE LICENCIA O NO ESTA BIEN FORMADO");
		}						
	}
	
	public void cargarDatosCliente() throws Exception {
		String sPrimerMacAddress="";		
		String sHostName="";		 
		String sHostIp="";		  
		String sHostUser="";
		
		
		sPrimerMacAddress=FuncionesNetwork.getPrimerMacAddress();		
		sHostName=FuncionesNetwork.getHostName();		 
		sHostIp=FuncionesNetwork.getHostIp();		  
		sHostUser=FuncionesNetwork.getHostUser();
		
		
		this.datosCliente=new DatosCliente();
		if(lIdUsuarioSesion!=null){datosCliente.setIdUsuario(this.lIdUsuarioSesion);}
		
		//SERVIDOR WEB Y TALVEZ SERVIDOR SWING WINDOWS
		this.datosCliente.setsUsuarioPCServer(sHostUser);
		this.datosCliente.setsNamePCServer(sHostName);
		this.datosCliente.setsIPPCServer(sHostIp);
		this.datosCliente.setsMacAddressPCServer(sPrimerMacAddress);
			
			//CLIENTE SWING WINDOWS
			this.datosCliente.setIsClienteWeb(false);
			
			this.datosCliente.setsUsuarioPC(sHostUser);
			this.datosCliente.setsNamePC(sHostName);
			this.datosCliente.setsIPPC(sHostIp);
			this.datosCliente.setsMacAddressPC(sPrimerMacAddress);	
			
			
			//this.cargarLicenciaCliente(this.datosCliente);
			
	}
	
	public void bugActualizarReferenciaActual(DetalleConsignacion detalleconsignacion,DetalleConsignacion detalleconsignacionAux) throws Exception {
		//ARCHITECTURE		
		//EL ID NEGATIVO GUARDADO EN ORIGINAL SIRVE PARA VERIFICAR Y ACTUALIZAR EL REGISTRO NUEVO (ID,VERSIONROW)
		this.setCamposBaseDesdeOriginalDetalleConsignacion(detalleconsignacion);
					
		//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
		detalleconsignacionAux.setId(detalleconsignacion.getId());
		detalleconsignacionAux.setVersionRow(detalleconsignacion.getVersionRow());					
	}
	
	public void ejecutarMantenimiento(MaintenanceType maintenanceType)throws Exception {	
		try	{								
			
			//this.startProcessDetalleConsignacion();
		
			int intSelectedRow = this.jTableDatosDetalleConsignacion.getSelectedRow();	       
			
			//PUEDE SER -1 CUANDO SE ELIMINA EN GUARDAR CAMBIOS
			if(intSelectedRow>=0 && maintenanceType!=MaintenanceType.GUARDARCAMBIOS) {
				//SE PIEDE INDICE SELECTED CON FILA TOTALES, ASEGURARSE QUE OBJETO ACTUAL ESTE EN FORMULARIO
					
				//ARCHITECTURE
				
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleconsignacion =(DetalleConsignacion) this.detalleconsignacionLogic.getDetalleConsignacions().toArray()[this.jTableDatosDetalleConsignacion.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
					this.detalleconsignacion =(DetalleConsignacion) this.detalleconsignacions.toArray()[this.jTableDatosDetalleConsignacion.convertRowIndexToModel(intSelectedRow)];
				}
				
				//ARCHITECTURE
				
				if(DetalleConsignacionJInternalFrame.ISBINDING_MANUAL_TABLA) {
					//this.setVariablesFormularioToObjetoActualDetalleConsignacion(this.detalleconsignacion,true);
				}
				
				this.setVariablesFormularioToObjetoActualForeignKeysDetalleConsignacion(this.detalleconsignacion);
			}
			
			//LUEGO DE TRAER DATOS CORRESPONDIENTES QUE COINCIDA LISTA TABLA QUITO FILA TOTALES
			if(this.conTotales) {
				//MEJOR LO DEJO, SI EXISTE EXCEPCION SE PIEDE FILA TOTALES Y ORDEN INDICE FILA ACTUAL
				//this.quitarFilaTotales();
			}
			
			this.cargarDatosCliente();
			
			this.datosDeep=new DatosDeep();
			
			//SE CAMBIA ESTADOS CON ERROR, ENTONCES SE EJECUTA ANTES
			//this.invalidValues = detalleconsignacionValidator.getInvalidValues(this.detalleconsignacion);
			
			//if(this.invalidValues==null || this.invalidValues.length<=0) {
			
			detalleconsignacionLogic.setDatosCliente(datosCliente);
			detalleconsignacionLogic.setIsConDeep(false);
			
			if(maintenanceType==MaintenanceType.NUEVO) {
				detalleconsignacionAux=new  DetalleConsignacion();
				
				detalleconsignacionAux.setIsNew(true);
				detalleconsignacionAux.setIsChanged(true);
				
				detalleconsignacionAux.setDetalleConsignacionOriginal(this.detalleconsignacion);
				
				detalleconsignacionAux.setId(this.detalleconsignacion.getId());	
				detalleconsignacionAux.setVersionRow(this.detalleconsignacion.getVersionRow());	
				detalleconsignacionAux.setid_empresa(this.detalleconsignacion.getid_empresa());	
				detalleconsignacionAux.setid_sucursal(this.detalleconsignacion.getid_sucursal());	
				detalleconsignacionAux.setid_ejercicio(this.detalleconsignacion.getid_ejercicio());	
				detalleconsignacionAux.setid_periodo(this.detalleconsignacion.getid_periodo());	
				detalleconsignacionAux.setid_anio(this.detalleconsignacion.getid_anio());	
				detalleconsignacionAux.setid_mes(this.detalleconsignacion.getid_mes());	
				detalleconsignacionAux.setid_consignacion(this.detalleconsignacion.getid_consignacion());	
				detalleconsignacionAux.setid_producto(this.detalleconsignacion.getid_producto());	
				detalleconsignacionAux.setid_bodega(this.detalleconsignacion.getid_bodega());	
				detalleconsignacionAux.setid_unidad(this.detalleconsignacion.getid_unidad());	
				detalleconsignacionAux.setid_estado_detalle_pedido(this.detalleconsignacion.getid_estado_detalle_pedido());	
				detalleconsignacionAux.setcantidad(this.detalleconsignacion.getcantidad());	
				detalleconsignacionAux.setprecio(this.detalleconsignacion.getprecio());	
				detalleconsignacionAux.setdescuento_porcentaje(this.detalleconsignacion.getdescuento_porcentaje());	
				detalleconsignacionAux.setdescuento_valor(this.detalleconsignacion.getdescuento_valor());	
				detalleconsignacionAux.setiva(this.detalleconsignacion.getiva());	
				detalleconsignacionAux.settotal(this.detalleconsignacion.gettotal());	
				detalleconsignacionAux.setice(this.detalleconsignacion.getice());	
				detalleconsignacionAux.setcosto(this.detalleconsignacion.getcosto());	
				detalleconsignacionAux.setutilidad(this.detalleconsignacion.getutilidad());	
								
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//NO ENTENDIBLE PORQUE PONER
					//if(this.detalleconsignacionSessionBean.getEstaModoGuardarRelaciones() 
					//	|| this.detalleconsignacionSessionBean.getEsGuardarRelacionado())	{
						actualizarLista(detalleconsignacionAux,detalleconsignacionLogic.getDetalleConsignacions());
					//}
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(detalleconsignacionAux,detalleconsignacions);
				}
				//ARCHITECTURE
				
				if(!isGuardarCambiosEnLote  && !this.detalleconsignacionSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.detalleconsignacionSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						detalleconsignacionLogic.saveDetalleConsignacions();//WithConnection
						//detalleconsignacionLogic.getSetVersionRowDetalleConsignacions();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE		
					
					//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
					this.bugActualizarReferenciaActual(this.detalleconsignacion,detalleconsignacionAux);
					
					this.refrescarForeignKeysDescripcionesDetalleConsignacion();
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					if(this.detalleconsignacionSessionBean.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
						}
						//ARCHITECTURE	
						
						if(!this.detalleconsignacionSessionBean.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE
												
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								detalleconsignacionLogic.saveDetalleConsignacionRelaciones(detalleconsignacionAux);//WithConnection
								//detalleconsignacionLogic.getSetVersionRowDetalleConsignacions();//WithConnection
							} else if(Constantes.ISUSAEJBREMOTE) {
							} else if(Constantes.ISUSAEJBHOME) {
							}
							//ARCHITECTURE
							
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							this.bugActualizarReferenciaActual(this.detalleconsignacion,detalleconsignacionAux);
					
					
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE	
						} else {
							
							
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								if(this.detalleconsignacionSessionBean.getEstaModoGuardarRelaciones() 
									|| this.detalleconsignacionSessionBean.getEsGuardarRelacionado())	{
									actualizarLista(detalleconsignacionAux,detalleconsignacionLogic.getDetalleConsignacions());
								}
							} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
								actualizarLista(detalleconsignacionAux,detalleconsignacions);
							}
							//ARCHITECTURE
							
							//AQUI EL ID NEGATIVO ES EL ID BUSCADO, YA QUE NO SE GENERA OTRO EN LA DB POR INGRESAR UNO NUEVO
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							//this.bugActualizarReferenciaActual(this.detalleconsignacion,detalleconsignacionAux);												
						}
					}
				}
			} else if(maintenanceType==MaintenanceType.ACTUALIZAR) {
				detalleconsignacionAux=new  DetalleConsignacion();
				
				//PUEDE QUE SE ACTUALIZE ALGUN REGISTRO NUEVO
				if(!this.detalleconsignacionSessionBean.getEsGuardarRelacionado() 
					|| (this.detalleconsignacionSessionBean.getEsGuardarRelacionado() && this.detalleconsignacion.getId()>=0)) {
						
					detalleconsignacionAux.setIsNew(false);
				}
				
				detalleconsignacionAux.setIsDeleted(false);
			
				detalleconsignacionAux.setId(this.detalleconsignacion.getId());	
				detalleconsignacionAux.setVersionRow(this.detalleconsignacion.getVersionRow());	
				detalleconsignacionAux.setid_empresa(this.detalleconsignacion.getid_empresa());	
				detalleconsignacionAux.setid_sucursal(this.detalleconsignacion.getid_sucursal());	
				detalleconsignacionAux.setid_ejercicio(this.detalleconsignacion.getid_ejercicio());	
				detalleconsignacionAux.setid_periodo(this.detalleconsignacion.getid_periodo());	
				detalleconsignacionAux.setid_anio(this.detalleconsignacion.getid_anio());	
				detalleconsignacionAux.setid_mes(this.detalleconsignacion.getid_mes());	
				detalleconsignacionAux.setid_consignacion(this.detalleconsignacion.getid_consignacion());	
				detalleconsignacionAux.setid_producto(this.detalleconsignacion.getid_producto());	
				detalleconsignacionAux.setid_bodega(this.detalleconsignacion.getid_bodega());	
				detalleconsignacionAux.setid_unidad(this.detalleconsignacion.getid_unidad());	
				detalleconsignacionAux.setid_estado_detalle_pedido(this.detalleconsignacion.getid_estado_detalle_pedido());	
				detalleconsignacionAux.setcantidad(this.detalleconsignacion.getcantidad());	
				detalleconsignacionAux.setprecio(this.detalleconsignacion.getprecio());	
				detalleconsignacionAux.setdescuento_porcentaje(this.detalleconsignacion.getdescuento_porcentaje());	
				detalleconsignacionAux.setdescuento_valor(this.detalleconsignacion.getdescuento_valor());	
				detalleconsignacionAux.setiva(this.detalleconsignacion.getiva());	
				detalleconsignacionAux.settotal(this.detalleconsignacion.gettotal());	
				detalleconsignacionAux.setice(this.detalleconsignacion.getice());	
				detalleconsignacionAux.setcosto(this.detalleconsignacion.getcosto());	
				detalleconsignacionAux.setutilidad(this.detalleconsignacion.getutilidad());	
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					actualizarLista(detalleconsignacionAux,detalleconsignacionLogic.getDetalleConsignacions());
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(detalleconsignacionAux,detalleconsignacions);
				}
				//ARCHITECTURE
				
				if(!isGuardarCambiosEnLote && !this.detalleconsignacionSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.detalleconsignacionSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						detalleconsignacionLogic.saveDetalleConsignacions();//WithConnection
						//detalleconsignacionLogic.getSetVersionRowDetalleConsignacions();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}	
					//ARCHITECTURE
					
					//TALVEZ ESTA DEMAS POR SER UPDATE
					//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
					this.bugActualizarReferenciaActual(this.detalleconsignacion,detalleconsignacionAux);
					
					this.refrescarForeignKeysDescripcionesDetalleConsignacion();
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					if(this.detalleconsignacionSessionBean.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
						}
						//ARCHITECTURE
						
						if(!this.detalleconsignacionSessionBean.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								detalleconsignacionLogic.saveDetalleConsignacionRelaciones(detalleconsignacionAux);//WithConnection
								//detalleconsignacionLogic.getSetVersionRowDetalleConsignacions();//WithConnection
							} else if(Constantes.ISUSAEJBREMOTE) {
							} else if(Constantes.ISUSAEJBHOME) {
							}
							//ARCHITECTURE
							
							//TALVEZ ESTA DEMAS POR SER UPDATE
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							this.bugActualizarReferenciaActual(this.detalleconsignacion,detalleconsignacionAux);
					
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE
						} else {
							
							
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								if(this.detalleconsignacionSessionBean.getEstaModoGuardarRelaciones() 
									|| this.detalleconsignacionSessionBean.getEsGuardarRelacionado())	{
									actualizarLista(detalleconsignacionAux,detalleconsignacionLogic.getDetalleConsignacions());
								}
							} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
								actualizarLista(detalleconsignacionAux,detalleconsignacions);
							}
							//ARCHITECTURE
							
							//AQUI EL ID NEGATIVO ES EL ID BUSCADO, YA QUE NO SE GENERA OTRO EN LA DB POR INGRESAR UNO NUEVO							
							//TALVEZ ESTA DEMAS POR SER UPDATE
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							//this.bugActualizarReferenciaActual(this.detalleconsignacion,detalleconsignacionAux);
					
						}
					}
				}				
			} else if(maintenanceType==MaintenanceType.ELIMINAR) {
				detalleconsignacionAux=new  DetalleConsignacion();
				
				detalleconsignacionAux.setIsNew(false);
				detalleconsignacionAux.setIsChanged(false);
				
				detalleconsignacionAux.setIsDeleted(true);
				
				detalleconsignacionAux.setId(this.detalleconsignacion.getId());	
				detalleconsignacionAux.setVersionRow(this.detalleconsignacion.getVersionRow());	
				detalleconsignacionAux.setid_empresa(this.detalleconsignacion.getid_empresa());	
				detalleconsignacionAux.setid_sucursal(this.detalleconsignacion.getid_sucursal());	
				detalleconsignacionAux.setid_ejercicio(this.detalleconsignacion.getid_ejercicio());	
				detalleconsignacionAux.setid_periodo(this.detalleconsignacion.getid_periodo());	
				detalleconsignacionAux.setid_anio(this.detalleconsignacion.getid_anio());	
				detalleconsignacionAux.setid_mes(this.detalleconsignacion.getid_mes());	
				detalleconsignacionAux.setid_consignacion(this.detalleconsignacion.getid_consignacion());	
				detalleconsignacionAux.setid_producto(this.detalleconsignacion.getid_producto());	
				detalleconsignacionAux.setid_bodega(this.detalleconsignacion.getid_bodega());	
				detalleconsignacionAux.setid_unidad(this.detalleconsignacion.getid_unidad());	
				detalleconsignacionAux.setid_estado_detalle_pedido(this.detalleconsignacion.getid_estado_detalle_pedido());	
				detalleconsignacionAux.setcantidad(this.detalleconsignacion.getcantidad());	
				detalleconsignacionAux.setprecio(this.detalleconsignacion.getprecio());	
				detalleconsignacionAux.setdescuento_porcentaje(this.detalleconsignacion.getdescuento_porcentaje());	
				detalleconsignacionAux.setdescuento_valor(this.detalleconsignacion.getdescuento_valor());	
				detalleconsignacionAux.setiva(this.detalleconsignacion.getiva());	
				detalleconsignacionAux.settotal(this.detalleconsignacion.gettotal());	
				detalleconsignacionAux.setice(this.detalleconsignacion.getice());	
				detalleconsignacionAux.setcosto(this.detalleconsignacion.getcosto());	
				detalleconsignacionAux.setutilidad(this.detalleconsignacion.getutilidad());	
				
				if(this.detalleconsignacionSessionBean.getEsGuardarRelacionado()) {
					//ELEMENTO ACTUAL NO SE HA INGRESADO AL SISTEMA, NO SE PUEDE ELIMINAR ALGO QUE NO EXISTE
					if(this.detalleconsignacionAux.getId()>=0) {	
						this.detalleconsignacionsEliminados.add(detalleconsignacionAux);											
					}
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					actualizarLista(detalleconsignacionAux,detalleconsignacionLogic.getDetalleConsignacions());
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(detalleconsignacionAux,detalleconsignacions);
				}
				//ARCHITECTURE
				
				
				if(!isGuardarCambiosEnLote && !this.detalleconsignacionSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.detalleconsignacionSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						detalleconsignacionLogic.saveDetalleConsignacions();//WithConnection
						//detalleconsignacionLogic.getSetVersionRowDetalleConsignacions();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}	
					//ARCHITECTURE
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					if(this.detalleconsignacionSessionBean.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
						}
						//ARCHITECTURE
						
						
						if(!this.detalleconsignacionSessionBean.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								detalleconsignacionLogic.saveDetalleConsignacionRelaciones(detalleconsignacionAux);//WithConnection
								//detalleconsignacionLogic.getSetVersionRowDetalleConsignacions();//WithConnection
							} else if(Constantes.ISUSAEJBREMOTE) {
							} else if(Constantes.ISUSAEJBHOME) {
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE
						}
					}  else {
							
						
								
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							if(this.detalleconsignacionSessionBean.getEstaModoGuardarRelaciones() 
								|| this.detalleconsignacionSessionBean.getEsGuardarRelacionado())	{
								actualizarLista(detalleconsignacionAux,detalleconsignacionLogic.getDetalleConsignacions());
							}
						} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
							actualizarLista(detalleconsignacionAux,detalleconsignacions);
						}
						//ARCHITECTURE
					}
				}				
			} else if(maintenanceType==MaintenanceType.GUARDARCAMBIOS) {		
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleconsignacionLogic.getDetalleConsignacions().addAll(this.detalleconsignacionsEliminados);
					
					detalleconsignacionLogic.saveDetalleConsignacions();//WithConnection
					//detalleconsignacionLogic.getSetVersionRowDetalleConsignacions();//WithConnection
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}	
				//ARCHITECTURE
				this.refrescarForeignKeysDescripcionesDetalleConsignacion();
				
				this.detalleconsignacionsEliminados= new ArrayList<DetalleConsignacion>();		
			}
			
			if(this.detalleconsignacionSessionBean.getEsGuardarRelacionado()) {
				 this.crearFilaTotales();
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.arrDatoGeneralTotales=DetalleConsignacionConstantesFunciones.getTotalesListaDetalleConsignacion(detalleconsignacionLogic.getDetalleConsignacions());							
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
				this.arrDatoGeneralTotales=DetalleConsignacionConstantesFunciones.getTotalesListaDetalleConsignacion(this.detalleconsignacions);
			}
			
									
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.detalleconsignacionSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				if(!this.isPostAccionSinMensaje) {
					JOptionPane.showMessageDialog(this,"Detalle Consignacion GUARDADO CORRECTAMENTE","MANTENIMIENTO DE Detalle Consignacion",JOptionPane.INFORMATION_MESSAGE);
					if(maintenanceType==MaintenanceType.NUEVO || maintenanceType==MaintenanceType.ACTUALIZAR) {
						//CUANDO ES NUEVO SE PIERDE REFERENCIA NO SE PORQUE
						this.detalleconsignacion=detalleconsignacionAux;
					}
				}
			}
			
			this.isErrorGuardar=false;
			
			this.inicializarInvalidValues();
		/*
		} else {
			this.mostrarInvalidValues();	
		}
		*/
			
		} catch(Exception e) {
			this.isErrorGuardar=true;
			
			this.crearFilaTotales();
			
			throw e;
		} finally {
      		//this.finishProcessDetalleConsignacion();
      	}
		
	}	
	
	public void actualizarRelaciones(DetalleConsignacion detalleconsignacionLocal) throws Exception {
		
		if(this.detalleconsignacionSessionBean.getConGuardarRelaciones()) {			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
			
			
			} else {
				
			}
		}
	}
	
	public void actualizarRelacionFkPadreActual(DetalleConsignacion detalleconsignacionLocal) throws Exception {	
		if(this.detalleconsignacionSessionBean.getEsGuardarRelacionado()) {			
			
		
			if(this.jInternalFrameParent.getClass().equals(EmpresaDetalleFormJInternalFrame.class)) {
				EmpresaBeanSwingJInternalFrame empresaBeanSwingJInternalFrameLocal=(EmpresaBeanSwingJInternalFrame) ((EmpresaDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				empresaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoEmpresa(empresaBeanSwingJInternalFrameLocal.getempresa(),true);
				empresaBeanSwingJInternalFrameLocal.actualizarLista(empresaBeanSwingJInternalFrameLocal.empresa,this.empresasForeignKey);

				empresaBeanSwingJInternalFrameLocal.actualizarRelaciones(empresaBeanSwingJInternalFrameLocal.empresa);

				detalleconsignacionLocal.setEmpresa(empresaBeanSwingJInternalFrameLocal.empresa);

				this.addItemDefectoCombosForeignKeyEmpresa();
				this.cargarCombosFrameEmpresasForeignKey("Formulario");
				this.setActualEmpresaForeignKey(empresaBeanSwingJInternalFrameLocal.empresa.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(SucursalDetalleFormJInternalFrame.class)) {
				SucursalBeanSwingJInternalFrame sucursalBeanSwingJInternalFrameLocal=(SucursalBeanSwingJInternalFrame) ((SucursalDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				sucursalBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoSucursal(sucursalBeanSwingJInternalFrameLocal.getsucursal(),true);
				sucursalBeanSwingJInternalFrameLocal.actualizarLista(sucursalBeanSwingJInternalFrameLocal.sucursal,this.sucursalsForeignKey);

				sucursalBeanSwingJInternalFrameLocal.actualizarRelaciones(sucursalBeanSwingJInternalFrameLocal.sucursal);

				detalleconsignacionLocal.setSucursal(sucursalBeanSwingJInternalFrameLocal.sucursal);

				this.addItemDefectoCombosForeignKeySucursal();
				this.cargarCombosFrameSucursalsForeignKey("Formulario");
				this.setActualSucursalForeignKey(sucursalBeanSwingJInternalFrameLocal.sucursal.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(EjercicioDetalleFormJInternalFrame.class)) {
				EjercicioBeanSwingJInternalFrame ejercicioBeanSwingJInternalFrameLocal=(EjercicioBeanSwingJInternalFrame) ((EjercicioDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				ejercicioBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoEjercicio(ejercicioBeanSwingJInternalFrameLocal.getejercicio(),true);
				ejercicioBeanSwingJInternalFrameLocal.actualizarLista(ejercicioBeanSwingJInternalFrameLocal.ejercicio,this.ejerciciosForeignKey);

				ejercicioBeanSwingJInternalFrameLocal.actualizarRelaciones(ejercicioBeanSwingJInternalFrameLocal.ejercicio);

				detalleconsignacionLocal.setEjercicio(ejercicioBeanSwingJInternalFrameLocal.ejercicio);

				this.addItemDefectoCombosForeignKeyEjercicio();
				this.cargarCombosFrameEjerciciosForeignKey("Formulario");
				this.setActualEjercicioForeignKey(ejercicioBeanSwingJInternalFrameLocal.ejercicio.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(PeriodoDetalleFormJInternalFrame.class)) {
				PeriodoBeanSwingJInternalFrame periodoBeanSwingJInternalFrameLocal=(PeriodoBeanSwingJInternalFrame) ((PeriodoDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				periodoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoPeriodo(periodoBeanSwingJInternalFrameLocal.getperiodo(),true);
				periodoBeanSwingJInternalFrameLocal.actualizarLista(periodoBeanSwingJInternalFrameLocal.periodo,this.periodosForeignKey);

				periodoBeanSwingJInternalFrameLocal.actualizarRelaciones(periodoBeanSwingJInternalFrameLocal.periodo);

				detalleconsignacionLocal.setPeriodo(periodoBeanSwingJInternalFrameLocal.periodo);

				this.addItemDefectoCombosForeignKeyPeriodo();
				this.cargarCombosFramePeriodosForeignKey("Formulario");
				this.setActualPeriodoForeignKey(periodoBeanSwingJInternalFrameLocal.periodo.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(AnioDetalleFormJInternalFrame.class)) {
				AnioBeanSwingJInternalFrame anioBeanSwingJInternalFrameLocal=(AnioBeanSwingJInternalFrame) ((AnioDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				anioBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoAnio(anioBeanSwingJInternalFrameLocal.getanio(),true);
				anioBeanSwingJInternalFrameLocal.actualizarLista(anioBeanSwingJInternalFrameLocal.anio,this.aniosForeignKey);

				anioBeanSwingJInternalFrameLocal.actualizarRelaciones(anioBeanSwingJInternalFrameLocal.anio);

				detalleconsignacionLocal.setAnio(anioBeanSwingJInternalFrameLocal.anio);

				this.addItemDefectoCombosForeignKeyAnio();
				this.cargarCombosFrameAniosForeignKey("Formulario");
				this.setActualAnioForeignKey(anioBeanSwingJInternalFrameLocal.anio.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(MesDetalleFormJInternalFrame.class)) {
				MesBeanSwingJInternalFrame mesBeanSwingJInternalFrameLocal=(MesBeanSwingJInternalFrame) ((MesDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				mesBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoMes(mesBeanSwingJInternalFrameLocal.getmes(),true);
				mesBeanSwingJInternalFrameLocal.actualizarLista(mesBeanSwingJInternalFrameLocal.mes,this.messForeignKey);

				mesBeanSwingJInternalFrameLocal.actualizarRelaciones(mesBeanSwingJInternalFrameLocal.mes);

				detalleconsignacionLocal.setMes(mesBeanSwingJInternalFrameLocal.mes);

				this.addItemDefectoCombosForeignKeyMes();
				this.cargarCombosFrameMessForeignKey("Formulario");
				this.setActualMesForeignKey(mesBeanSwingJInternalFrameLocal.mes.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(ConsignacionDetalleFormJInternalFrame.class)) {
				ConsignacionBeanSwingJInternalFrame consignacionBeanSwingJInternalFrameLocal=(ConsignacionBeanSwingJInternalFrame) ((ConsignacionDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				consignacionBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoConsignacion(consignacionBeanSwingJInternalFrameLocal.getconsignacion(),true);
				consignacionBeanSwingJInternalFrameLocal.actualizarLista(consignacionBeanSwingJInternalFrameLocal.consignacion,this.consignacionsForeignKey);

				consignacionBeanSwingJInternalFrameLocal.actualizarRelaciones(consignacionBeanSwingJInternalFrameLocal.consignacion);

				detalleconsignacionLocal.setConsignacion(consignacionBeanSwingJInternalFrameLocal.consignacion);

				this.addItemDefectoCombosForeignKeyConsignacion();
				this.cargarCombosFrameConsignacionsForeignKey("Formulario");
				this.setActualConsignacionForeignKey(consignacionBeanSwingJInternalFrameLocal.consignacion.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(ProductoDetalleFormJInternalFrame.class)) {
				ProductoBeanSwingJInternalFrame productoBeanSwingJInternalFrameLocal=(ProductoBeanSwingJInternalFrame) ((ProductoDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				productoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoProducto(productoBeanSwingJInternalFrameLocal.getproducto(),true);
				productoBeanSwingJInternalFrameLocal.actualizarLista(productoBeanSwingJInternalFrameLocal.producto,this.productosForeignKey);

				productoBeanSwingJInternalFrameLocal.actualizarRelaciones(productoBeanSwingJInternalFrameLocal.producto);

				detalleconsignacionLocal.setProducto(productoBeanSwingJInternalFrameLocal.producto);

				this.addItemDefectoCombosForeignKeyProducto();
				this.cargarCombosFrameProductosForeignKey("Formulario");
				this.setActualProductoForeignKey(productoBeanSwingJInternalFrameLocal.producto.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(BodegaDetalleFormJInternalFrame.class)) {
				BodegaBeanSwingJInternalFrame bodegaBeanSwingJInternalFrameLocal=(BodegaBeanSwingJInternalFrame) ((BodegaDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				bodegaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoBodega(bodegaBeanSwingJInternalFrameLocal.getbodega(),true);
				bodegaBeanSwingJInternalFrameLocal.actualizarLista(bodegaBeanSwingJInternalFrameLocal.bodega,this.bodegasForeignKey);

				bodegaBeanSwingJInternalFrameLocal.actualizarRelaciones(bodegaBeanSwingJInternalFrameLocal.bodega);

				detalleconsignacionLocal.setBodega(bodegaBeanSwingJInternalFrameLocal.bodega);

				this.addItemDefectoCombosForeignKeyBodega();
				this.cargarCombosFrameBodegasForeignKey("Formulario");
				this.setActualBodegaForeignKey(bodegaBeanSwingJInternalFrameLocal.bodega.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(UnidadDetalleFormJInternalFrame.class)) {
				UnidadBeanSwingJInternalFrame unidadBeanSwingJInternalFrameLocal=(UnidadBeanSwingJInternalFrame) ((UnidadDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				unidadBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoUnidad(unidadBeanSwingJInternalFrameLocal.getunidad(),true);
				unidadBeanSwingJInternalFrameLocal.actualizarLista(unidadBeanSwingJInternalFrameLocal.unidad,this.unidadsForeignKey);

				unidadBeanSwingJInternalFrameLocal.actualizarRelaciones(unidadBeanSwingJInternalFrameLocal.unidad);

				detalleconsignacionLocal.setUnidad(unidadBeanSwingJInternalFrameLocal.unidad);

				this.addItemDefectoCombosForeignKeyUnidad();
				this.cargarCombosFrameUnidadsForeignKey("Formulario");
				this.setActualUnidadForeignKey(unidadBeanSwingJInternalFrameLocal.unidad.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(EstadoDetallePedidoDetalleFormJInternalFrame.class)) {
				EstadoDetallePedidoBeanSwingJInternalFrame estadodetallepedidoBeanSwingJInternalFrameLocal=(EstadoDetallePedidoBeanSwingJInternalFrame) ((EstadoDetallePedidoDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				estadodetallepedidoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoEstadoDetallePedido(estadodetallepedidoBeanSwingJInternalFrameLocal.getestadodetallepedido(),true);
				estadodetallepedidoBeanSwingJInternalFrameLocal.actualizarLista(estadodetallepedidoBeanSwingJInternalFrameLocal.estadodetallepedido,this.estadodetallepedidosForeignKey);

				estadodetallepedidoBeanSwingJInternalFrameLocal.actualizarRelaciones(estadodetallepedidoBeanSwingJInternalFrameLocal.estadodetallepedido);

				detalleconsignacionLocal.setEstadoDetallePedido(estadodetallepedidoBeanSwingJInternalFrameLocal.estadodetallepedido);

				this.addItemDefectoCombosForeignKeyEstadoDetallePedido();
				this.cargarCombosFrameEstadoDetallePedidosForeignKey("Formulario");
				this.setActualEstadoDetallePedidoForeignKey(estadodetallepedidoBeanSwingJInternalFrameLocal.estadodetallepedido.getId(),false,"Formulario");
			}
		
		}
	}
	
	public Boolean validarDetalleConsignacionActual() throws Exception {
		Boolean estaValidado=false;
		this.inicializarInvalidValues();
		
		/*
		int intSelectedRow = this.jTableDatosDetalleConsignacion.getSelectedRow();
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.detalleconsignacion =(DetalleConsignacion) this.detalleconsignacionLogic.getDetalleConsignacions().toArray()[this.jTableDatosDetalleConsignacion.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
			this.detalleconsignacion =(DetalleConsignacion) this.detalleconsignacions.toArray()[this.jTableDatosDetalleConsignacion.convertRowIndexToModel(intSelectedRow)];
		}
		//ARCHITECTURE
		*/
		
		this.invalidValues = detalleconsignacionValidator.getInvalidValues(this.detalleconsignacion);
					
		if(this.invalidValues==null || this.invalidValues.length<=0) {
			estaValidado=true;
		} else {
			this.mostrarInvalidValues();	
		}
		
		return estaValidado;
	}
	
	public void actualizarLista(DetalleConsignacion detalleconsignacion,List<DetalleConsignacion> detalleconsignacions) throws Exception {
		try	{		
			DetalleConsignacionConstantesFunciones.actualizarLista(detalleconsignacion,detalleconsignacions,this.detalleconsignacionSessionBean.getEsGuardarRelacionado());		
		} catch(Exception e) {
			throw e;
		}
	}		
	
	public void actualizarSelectedLista(DetalleConsignacion detalleconsignacion,List<DetalleConsignacion> detalleconsignacions) throws Exception {
		try	{			
			DetalleConsignacionConstantesFunciones.actualizarSelectedLista(detalleconsignacion,detalleconsignacions);
		} catch(Exception e) {
			throw e;
		}
	}	
	
	public Boolean tieneElementosSeleccionados() throws Exception {
		Boolean tiene=false;
		
		List<DetalleConsignacion> detalleconsignacionsLocal=null;
		
		try	{			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				detalleconsignacionsLocal=this.detalleconsignacionLogic.getDetalleConsignacions();
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
				detalleconsignacionsLocal=this.detalleconsignacions;
			}
			//ARCHITECTURE
		
			for(DetalleConsignacion detalleconsignacionLocal:detalleconsignacionsLocal) {
				if(this.permiteMantenimiento(detalleconsignacionLocal) && detalleconsignacionLocal.getIsSelected()) {
					tiene=true;
					break;
				}
			}
		} catch(Exception e) {
			throw e;
		}
		
		return tiene;
	}			
	
	public void mostrarInvalidValues() throws Exception {
		String sMensaje="";
				
		for (InvalidValue invalidValue : this.invalidValues) {
			sMensaje+="\r\n"+DetalleConsignacionConstantesFunciones.getDetalleConsignacionLabelDesdeNombre(invalidValue.getPropertyName())+"->"+invalidValue.getMessage();
			
			//MOSTRAR CAMPOS INVALIDOS
			if(invalidValue.getPropertyName().equals(DetalleConsignacionConstantesFunciones.IDEMPRESA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleConsignacion.jLabelid_empresaDetalleConsignacion,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleConsignacionConstantesFunciones.IDSUCURSAL)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleConsignacion.jLabelid_sucursalDetalleConsignacion,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleConsignacionConstantesFunciones.IDEJERCICIO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleConsignacion.jLabelid_ejercicioDetalleConsignacion,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleConsignacionConstantesFunciones.IDPERIODO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleConsignacion.jLabelid_periodoDetalleConsignacion,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleConsignacionConstantesFunciones.IDANIO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleConsignacion.jLabelid_anioDetalleConsignacion,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleConsignacionConstantesFunciones.IDMES)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleConsignacion.jLabelid_mesDetalleConsignacion,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleConsignacionConstantesFunciones.IDCONSIGNACION)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleConsignacion.jLabelid_consignacionDetalleConsignacion,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleConsignacionConstantesFunciones.IDPRODUCTO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleConsignacion.jLabelid_productoDetalleConsignacion,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleConsignacionConstantesFunciones.IDBODEGA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleConsignacion.jLabelid_bodegaDetalleConsignacion,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleConsignacionConstantesFunciones.IDUNIDAD)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleConsignacion.jLabelid_unidadDetalleConsignacion,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleConsignacionConstantesFunciones.IDESTADODETALLEPEDIDO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleConsignacion.jLabelid_estado_detalle_pedidoDetalleConsignacion,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleConsignacionConstantesFunciones.CANTIDAD)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleConsignacion.jLabelcantidadDetalleConsignacion,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleConsignacionConstantesFunciones.PRECIO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleConsignacion.jLabelprecioDetalleConsignacion,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleConsignacionConstantesFunciones.DESCUENTOPORCENTAJE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleConsignacion.jLabeldescuento_porcentajeDetalleConsignacion,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleConsignacionConstantesFunciones.DESCUENTOVALOR)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleConsignacion.jLabeldescuento_valorDetalleConsignacion,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleConsignacionConstantesFunciones.IVA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleConsignacion.jLabelivaDetalleConsignacion,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleConsignacionConstantesFunciones.TOTAL)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleConsignacion.jLabeltotalDetalleConsignacion,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleConsignacionConstantesFunciones.ICE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleConsignacion.jLabeliceDetalleConsignacion,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleConsignacionConstantesFunciones.COSTO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleConsignacion.jLabelcostoDetalleConsignacion,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleConsignacionConstantesFunciones.UTILIDAD)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleConsignacion.jLabelutilidadDetalleConsignacion,invalidValue.getMessage());}
        }
		
		
		if(!sMensaje.equals("")) {
			//JOptionPane.showMessageDialog(this,sMensaje,"VALIDACION ",JOptionPane.ERROR_MESSAGE);
			throw new Exception(sMensaje);			
		}
		
		/*
		System.out.println(invalidValue);
        System.out.println("message=" + invalidValue.getMessage());
        System.out.println("propertyName=" + invalidValue.getPropertyName());
        System.out.println("propertyPath=" + invalidValue.getPropertyPath());
        System.out.println("value=" + invalidValue.getValue());
        */
	}		
	
	public void inicializarInvalidValues() throws Exception {
		String sMensaje="";	
		
		if(this.jInternalFrameDetalleFormDetalleConsignacion!=null) {
		
		//MOSTRAR CAMPOS INVALIDOS
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleConsignacion.jLabelid_empresaDetalleConsignacion,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleConsignacion.jLabelid_sucursalDetalleConsignacion,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleConsignacion.jLabelid_ejercicioDetalleConsignacion,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleConsignacion.jLabelid_periodoDetalleConsignacion,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleConsignacion.jLabelid_anioDetalleConsignacion,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleConsignacion.jLabelid_mesDetalleConsignacion,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleConsignacion.jLabelid_consignacionDetalleConsignacion,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleConsignacion.jLabelid_productoDetalleConsignacion,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleConsignacion.jLabelid_bodegaDetalleConsignacion,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleConsignacion.jLabelid_unidadDetalleConsignacion,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleConsignacion.jLabelid_estado_detalle_pedidoDetalleConsignacion,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleConsignacion.jLabelcantidadDetalleConsignacion,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleConsignacion.jLabelprecioDetalleConsignacion,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleConsignacion.jLabeldescuento_porcentajeDetalleConsignacion,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleConsignacion.jLabeldescuento_valorDetalleConsignacion,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleConsignacion.jLabelivaDetalleConsignacion,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleConsignacion.jLabeltotalDetalleConsignacion,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleConsignacion.jLabeliceDetalleConsignacion,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleConsignacion.jLabelcostoDetalleConsignacion,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleConsignacion.jLabelutilidadDetalleConsignacion,"");
		
		}
	}
	
	
	
	public void actualizarObjetoPadreFk(String sTipo)  throws Exception {
		if(sTipo.equals("XXXAuxiliar")) {
		
		}
		
	}
	
	public void nuevoPreparar() throws Exception {
		this.nuevoPreparar(false);
	}
	
	public void nuevoPreparar(Boolean esNuevoGuardarCambios) throws Exception {
		this.iIdNuevoDetalleConsignacion--;	
		
		
		this.detalleconsignacionAux=new DetalleConsignacion();
		
		this.detalleconsignacionAux.setId(this.iIdNuevoDetalleConsignacion);
		this.detalleconsignacionAux.setIsChanged(true);
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.detalleconsignacionLogic.getDetalleConsignacions().add(this.detalleconsignacionAux);
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			this.detalleconsignacions.add(this.detalleconsignacionAux);
		}
		//ARCHITECTURE
		
		this.detalleconsignacion=this.detalleconsignacionAux;
		
		if(DetalleConsignacionJInternalFrame.ISBINDING_MANUAL_TABLA) {
			this.setVariablesObjetoActualToFormularioDetalleConsignacion(this.detalleconsignacion);
			this.setVariablesObjetoActualToFormularioForeignKeyDetalleConsignacion(this.detalleconsignacion);
		}
				
		//this.setDefaultControlesDetalleConsignacion();
		
		this.inicializarInvalidValues();
				
		//SELECCIONA ITEM DEFECTO-->SET O SELECTED INDEX
		this.setItemDefectoCombosForeignKeyDetalleConsignacion();
		
		
		//INICIALIZA VARIABLES COMBOS GLOBALES A FORMULARIO(ParametroGeneralUsuario)
		this.setVariablesGlobalesCombosForeignKeyDetalleConsignacion();
		
		//INICIALIZA VARIABLES COMBOS GLOBALES AUXILIARES A FORMULARIO(Anio,Mes)
		//this.setVariablesGlobalesAuxiliaresCombosForeignKeyDetalleConsignacion();
		
		//SI TIENE FOREIGN KEY CON CAMPO esDefecto=true, SE ACTUALIZA A OBJETO ACTUAL
		this.setVariablesForeignKeyObjetoBeanDefectoActualToObjetoActualDetalleConsignacion(this.detalleconsignacionBean,this.detalleconsignacion,false,false);
		
		//ACTUALIZA VALORES PARA EL OBJETO ACTUAL ANTES DE ENVIARLO A ACTUALIZAR
		this.setVariablesFormularioToObjetoActualForeignKeysDetalleConsignacion(this.detalleconsignacion);
				
		ArrayList<Classe> classes=new ArrayList<Classe>();
		
		if(this.jInternalFrameParent!=null) {
			this.jInternalFrameParent.actualizarObjetoPadreFk(DetalleConsignacionConstantesFunciones.CLASSNAME);
		}	
		
		
		if(this.detalleconsignacionSessionBean.getConGuardarRelaciones()) {
			classes=DetalleConsignacionConstantesFunciones.getClassesRelationshipsOfDetalleConsignacion(new ArrayList<Classe>(),DeepLoadType.NONE);
		}
		
		this.classesActual=new ArrayList<Classe>();
		this.classesActual.addAll(classes);
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {						
			this.detalleconsignacionReturnGeneral=detalleconsignacionLogic.procesarEventosDetalleConsignacionsWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,EventoGlobalTipo.FORM_RECARGAR,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.detalleconsignacionLogic.getDetalleConsignacions(),this.detalleconsignacion,this.detalleconsignacionParameterGeneral,this.isEsNuevoDetalleConsignacion,classes);//this.detalleconsignacionLogic.getDetalleConsignacion()
						
		} else if(Constantes.ISUSAEJBREMOTE) {
						
		} else if(Constantes.ISUSAEJBHOME) {
		}
		//ARCHITECTURE
		
		//ACTUALIZA VARIABLES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
		//this.setVariablesObjetoReturnGeneralToBeanDetalleConsignacion(this.detalleconsignacionReturnGeneral,this.detalleconsignacionBean,false);
		
		if(this.detalleconsignacionReturnGeneral.getConRecargarPropiedades()) {
			//INICIALIZA VARIABLES COMBOS NORMALES (FK)
			this.setVariablesObjetoActualToFormularioForeignKeyDetalleConsignacion(this.detalleconsignacionReturnGeneral.getDetalleConsignacion());
			
			//INICIALIZA VARIABLES NORMALES A FORMULARIO(SIN FK)
			this.setVariablesObjetoActualToFormularioDetalleConsignacion(this.detalleconsignacionReturnGeneral.getDetalleConsignacion());
		}
		
		if(this.detalleconsignacionReturnGeneral.getConRecargarRelaciones()) {
			//INICIALIZA VARIABLES RELACIONES A FORMULARIO
			this.setVariablesRelacionesObjetoActualToFormularioDetalleConsignacion(this.detalleconsignacionReturnGeneral.getDetalleConsignacion(),classes);//this.detalleconsignacionBean);	
		}
			
		//ACTUALIZA VARIABLES FORMULARIO A OBJETO ACTUAL (PARA NUEVO TABLA O GUARDAR CAMBIOS
		if(esNuevoGuardarCambios) {
			this.setVariablesFormularioToObjetoActualDetalleConsignacion(this.detalleconsignacion,false);
		}
		
		//INICIALIZA VARIABLES COMBOS DEFAULT DEL PROYECTO(|DEFAULT para FK)
		//this.setVariablesDefaultCombosForeignKeyDetalleConsignacion();
		
		//INICIALIZA VARIABLES COMBOS PARAMETRO DEL PROYECTO(|VALORPARAM Era para ParametroModulo, ahora en logic)
		//this.setVariablesParametroCombosForeignKeyDetalleConsignacion();						
		
		if(!esNuevoGuardarCambios) {
			//INICIALIZA VARIABLES POR OPCION MENU
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			DetalleConsignacionBeanSwingJInternalFrameAdditional.RecargarFormDetalleConsignacion(this,"NUEVO_PREPARAR","",this.arrDatoGeneral);
		
			//NO FUNCIONA BINDINGS			
			this.inicializarActualizarBindingDetalleConsignacion(false);
						
			if(detalleconsignacionSessionBean.getConGuardarRelaciones()) {
				//DEBERIA YA ESTAR CARGADO LOS COMBOS Y SI SE NECESITA ALGO MAS SE DEBE CREAR FUNCION LIMITADA
				//SI DEBE TRAER Y RESETEAR TABLA
								
			}
				
			//SI ES MANUAL
			if(DetalleConsignacionJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualDetalleConsignacion();
			}
			
			this.actualizarVisualTableDatosDetalleConsignacion();
			
			this.jTableDatosDetalleConsignacion.setRowSelectionInterval(this.getIndiceNuevoDetalleConsignacion(), this.getIndiceNuevoDetalleConsignacion());
			
			this.seleccionarFilaTablaDetalleConsignacionActual();
						
			this.actualizarEstadoCeldasBotonesDetalleConsignacion("a", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
		
		}		
	}
	
	public void habilitarDeshabilitarControlesDetalleConsignacion(Boolean isHabilitar) throws Exception {
		
		this.jInternalFrameDetalleFormDetalleConsignacion.jTextFieldcantidadDetalleConsignacion.setEnabled(isHabilitar && this.detalleconsignacionConstantesFunciones.activarcantidadDetalleConsignacion);
		this.jInternalFrameDetalleFormDetalleConsignacion.jTextFieldprecioDetalleConsignacion.setEnabled(isHabilitar && this.detalleconsignacionConstantesFunciones.activarprecioDetalleConsignacion);
		this.jInternalFrameDetalleFormDetalleConsignacion.jTextFielddescuento_porcentajeDetalleConsignacion.setEnabled(isHabilitar && this.detalleconsignacionConstantesFunciones.activardescuento_porcentajeDetalleConsignacion);
		this.jInternalFrameDetalleFormDetalleConsignacion.jTextFielddescuento_valorDetalleConsignacion.setEnabled(isHabilitar && this.detalleconsignacionConstantesFunciones.activardescuento_valorDetalleConsignacion);
		this.jInternalFrameDetalleFormDetalleConsignacion.jTextFieldivaDetalleConsignacion.setEnabled(isHabilitar && this.detalleconsignacionConstantesFunciones.activarivaDetalleConsignacion);
		this.jInternalFrameDetalleFormDetalleConsignacion.jTextFieldtotalDetalleConsignacion.setEnabled(isHabilitar && this.detalleconsignacionConstantesFunciones.activartotalDetalleConsignacion);//
		this.jInternalFrameDetalleFormDetalleConsignacion.jTextFieldiceDetalleConsignacion.setEnabled(isHabilitar && this.detalleconsignacionConstantesFunciones.activariceDetalleConsignacion);//
		this.jInternalFrameDetalleFormDetalleConsignacion.jTextFieldcostoDetalleConsignacion.setEnabled(isHabilitar && this.detalleconsignacionConstantesFunciones.activarcostoDetalleConsignacion);//
		this.jInternalFrameDetalleFormDetalleConsignacion.jTextFieldutilidadDetalleConsignacion.setEnabled(isHabilitar && this.detalleconsignacionConstantesFunciones.activarutilidadDetalleConsignacion);	
		//
		this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_empresaDetalleConsignacion.setEnabled(isHabilitar && this.detalleconsignacionConstantesFunciones.activarid_empresaDetalleConsignacion);//
		this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_sucursalDetalleConsignacion.setEnabled(isHabilitar && this.detalleconsignacionConstantesFunciones.activarid_sucursalDetalleConsignacion);//
		this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_ejercicioDetalleConsignacion.setEnabled(isHabilitar && this.detalleconsignacionConstantesFunciones.activarid_ejercicioDetalleConsignacion);//
		this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_periodoDetalleConsignacion.setEnabled(isHabilitar && this.detalleconsignacionConstantesFunciones.activarid_periodoDetalleConsignacion);//
		this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_anioDetalleConsignacion.setEnabled(isHabilitar && this.detalleconsignacionConstantesFunciones.activarid_anioDetalleConsignacion);//
		this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_mesDetalleConsignacion.setEnabled(isHabilitar && this.detalleconsignacionConstantesFunciones.activarid_mesDetalleConsignacion);
		this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_consignacionDetalleConsignacion.setEnabled(isHabilitar && this.detalleconsignacionConstantesFunciones.activarid_consignacionDetalleConsignacion);
		this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_productoDetalleConsignacion.setEnabled(isHabilitar && this.detalleconsignacionConstantesFunciones.activarid_productoDetalleConsignacion);
		this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_bodegaDetalleConsignacion.setEnabled(isHabilitar && this.detalleconsignacionConstantesFunciones.activarid_bodegaDetalleConsignacion);
		this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_unidadDetalleConsignacion.setEnabled(isHabilitar && this.detalleconsignacionConstantesFunciones.activarid_unidadDetalleConsignacion);
		this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_estado_detalle_pedidoDetalleConsignacion.setEnabled(isHabilitar && this.detalleconsignacionConstantesFunciones.activarid_estado_detalle_pedidoDetalleConsignacion);
	};
	
	public void setDefaultControlesDetalleConsignacion() throws Exception {
			
	};
	
	
	public void habilitarDeshabilitarTipoMantenimientoDetalleConsignacion(Boolean esRelaciones) throws Exception {
		if(esRelaciones) {
			//this.detalleconsignacionSessionBean.setConGuardarRelaciones(true);			
			this.detalleconsignacionSessionBean.setEstaModoGuardarRelaciones(true);				
			this.jInternalFrameDetalleFormDetalleConsignacion.jTabbedPaneRelacionesDetalleConsignacion.setVisible(true);
			
					
		} else {
			//this.detalleconsignacionSessionBean.setConGuardarRelaciones(false);			
			this.detalleconsignacionSessionBean.setEstaModoGuardarRelaciones(false);						
			this.jInternalFrameDetalleFormDetalleConsignacion.jTabbedPaneRelacionesDetalleConsignacion.setVisible(false);
			
			
		}
	};
	
	public int getIndiceNuevoDetalleConsignacion() throws Exception {
		int iIndice=0;
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(DetalleConsignacion detalleconsignacionAux:this.detalleconsignacionLogic.getDetalleConsignacions()) {
				if(detalleconsignacionAux.getId().equals(this.iIdNuevoDetalleConsignacion)) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(DetalleConsignacion detalleconsignacionAux:this.detalleconsignacions) {
				if(detalleconsignacionAux.getId().equals(this.iIdNuevoDetalleConsignacion)) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
			iIndice=iIndice-1;
		}
		
		return iIndice;
	}
	
	public int getIndiceActualDetalleConsignacion(DetalleConsignacion detalleconsignacion,Integer iIndiceActual) throws Exception {
		Integer iIndice=0;
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(DetalleConsignacion detalleconsignacionAux:this.detalleconsignacionLogic.getDetalleConsignacions()) {
				if(detalleconsignacionAux.getId().equals(detalleconsignacion.getId())) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(DetalleConsignacion detalleconsignacionAux:this.detalleconsignacions) {
				if(detalleconsignacionAux.getId().equals(detalleconsignacion.getId())) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
			iIndice=iIndiceActual;
		}
		
		return iIndice;
	}
	
	public void setCamposBaseDesdeOriginalDetalleConsignacion(DetalleConsignacion detalleconsignacionOriginal) throws Exception {
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(DetalleConsignacion detalleconsignacionAux:this.detalleconsignacionLogic.getDetalleConsignacions()) {
				if(detalleconsignacionAux.getDetalleConsignacionOriginal().getId().equals(detalleconsignacionOriginal.getId())) {
					existe=true;
					detalleconsignacionOriginal.setId(detalleconsignacionAux.getId());
					detalleconsignacionOriginal.setVersionRow(detalleconsignacionAux.getVersionRow());
					break;
				}
				
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(DetalleConsignacion detalleconsignacionAux:this.detalleconsignacions) {
				if(detalleconsignacionAux.getDetalleConsignacionOriginal().getId().equals(detalleconsignacionOriginal.getId())) {
					existe=true;
					detalleconsignacionOriginal.setId(detalleconsignacionAux.getId());
					detalleconsignacionOriginal.setVersionRow(detalleconsignacionAux.getVersionRow());
					break;
				}				
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
		}
	}
	
	public void cancelarNuevosDetalleConsignacion(Boolean esParaCancelar) throws Exception {
		detalleconsignacionsAux=new ArrayList<DetalleConsignacion>();
		detalleconsignacionAux=new DetalleConsignacion();
		
		if(!this.detalleconsignacionSessionBean.getEsGuardarRelacionado()) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				for(DetalleConsignacion detalleconsignacionAux:this.detalleconsignacionLogic.getDetalleConsignacions()) {
					if(detalleconsignacionAux.getId()<0) {
						detalleconsignacionsAux.add(detalleconsignacionAux);
					}		
				}
				this.iIdNuevoDetalleConsignacion=0L;
				this.detalleconsignacionLogic.getDetalleConsignacions().removeAll(detalleconsignacionsAux);
					
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(DetalleConsignacion detalleconsignacionAux:this.detalleconsignacions) {
					if(detalleconsignacionAux.getId()<0) {
						detalleconsignacionsAux.add(detalleconsignacionAux);
					}		
				}
				this.iIdNuevoDetalleConsignacion=0L;
				this.detalleconsignacions.removeAll(detalleconsignacionsAux);
			}	
		} else {			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				if(esParaCancelar && this.isEsNuevoDetalleConsignacion 
					&& this.detalleconsignacionLogic.getDetalleConsignacions().size()>0
					) {
					detalleconsignacionAux=this.detalleconsignacionLogic.getDetalleConsignacions().get(this.detalleconsignacionLogic.getDetalleConsignacions().size() - 1);
				
					if(detalleconsignacionAux.getId()<0) {
						this.detalleconsignacionLogic.getDetalleConsignacions().remove(detalleconsignacionAux);
					}
				}
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				if(esParaCancelar && this.isEsNuevoDetalleConsignacion && this.detalleconsignacions.size()>0) {
					detalleconsignacionAux=this.detalleconsignacions.get(this.detalleconsignacions.size() - 1);
				
					if(detalleconsignacionAux.getId()<0) {
						this.detalleconsignacions.remove(detalleconsignacionAux);
					}
				}
			}	
		}
	}
	
	public void cancelarNuevoDetalleConsignacion(Boolean esParaCancelar) throws Exception {
		if(Constantes.ISUSAEJBLOGICLAYER) {
			if(detalleconsignacion.getId()<0) {
				this.detalleconsignacionLogic.getDetalleConsignacions().remove(this.detalleconsignacion);
			}					
		} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
			if(detalleconsignacion.getId()<0) {
				this.detalleconsignacions.remove(this.detalleconsignacion);
			}
		}			
	}
	
	public void setEstadosInicialesDetalleConsignacion(List<DetalleConsignacion> detalleconsignacionsAux) throws Exception {
		DetalleConsignacionConstantesFunciones.setEstadosInicialesDetalleConsignacion(detalleconsignacionsAux);
	}
	
	public void setEstadosInicialesDetalleConsignacion(DetalleConsignacion detalleconsignacionAux) throws Exception {
		DetalleConsignacionConstantesFunciones.setEstadosInicialesDetalleConsignacion(detalleconsignacionAux);		
	}
	
	public void nuevo() throws Exception {
		try	{
			//ESTA VALIDADO EN FUNCION ACTUALIZAR
			//if(this.validarDetalleConsignacionActual()) {
				this.ejecutarMantenimiento(MaintenanceType.NUEVO);
				
				this.actualizarEstadoCeldasBotonesDetalleConsignacion("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
				
			//}
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,DetalleConsignacionConstantesFunciones.CLASSNAME);
		}
	}
	
	public void actualizar() throws Exception {
		try	{
			if(this.validarDetalleConsignacionActual()) {
				if(!this.isEsNuevoDetalleConsignacion) {
					this.ejecutarMantenimiento(MaintenanceType.ACTUALIZAR);
					
					this.actualizarEstadoCeldasBotonesDetalleConsignacion("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
					
				} else {					
					this.nuevo();
					this.isEsNuevoDetalleConsignacion=false;
				}
				
				//SE CANCELA AL FINAL DEL PROCESO JBUTTONACTUALIZAR
				//this.cancelar(false);
			}		
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,DetalleConsignacionConstantesFunciones.CLASSNAME);
		}
	}
	
	public void eliminar() throws Exception {
		try	{	
			if(this.validarDetalleConsignacionActual()) {
				if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE ELIMINAR EL/LA Detalle Consignacion ?", "MANTENIMIENTO DE Detalle Consignacion", JOptionPane.OK_CANCEL_OPTION) == 0) {
					this.ejecutarMantenimiento(MaintenanceType.ELIMINAR);			
					this.actualizarEstadoCeldasBotonesDetalleConsignacion("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
				}
			
			}
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,DetalleConsignacionConstantesFunciones.CLASSNAME);
		}
	}
	
	public void guardarCambios() throws Exception {
		try	{
			this.ejecutarMantenimiento(MaintenanceType.GUARDARCAMBIOS);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleConsignacionConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarAsignar(DetalleConsignacion detalleconsignacion) throws Exception {
		DetalleConsignacionConstantesFunciones.seleccionarAsignar(this.detalleconsignacion,detalleconsignacion);
	}
	
	public void seleccionar() throws Exception {
		try	{
			//ACTUALIZO EL PERMISO ACTUALIZAR CON EL PERMISO ACTUALIZAR ORIGINAL ESTE PERMISO SE UTILIZA PARA EL NUEVO TAMBIEN
			this.isPermisoActualizarDetalleConsignacion=this.isPermisoActualizarOriginalDetalleConsignacion;
			
			
			this.seleccionarAsignar(detalleconsignacion);
			
			

			idProductoActual=detalleconsignacion.getid_producto();
			this.seleccionarProductoActual();
			
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			DetalleConsignacionConstantesFunciones.quitarEspaciosDetalleConsignacion(this.detalleconsignacion,this.arrDatoGeneral);
			
			
			this.actualizarEstadoCeldasBotonesDetalleConsignacion("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleConsignacionConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarBusqueda(Long id) throws Exception {
		try	{
			this.detalleconsignacionSessionBean.setsFuncionBusquedaRapida(this.detalleconsignacionSessionBean.getsFuncionBusquedaRapida().replace("TO_REPLACE", id.toString()));
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleConsignacionConstantesFunciones.CLASSNAME);
		}
	}
	
	
	//BUSQUEDA INTERNA FK
	public void seleccionarProductoActual() throws Exception {
		try	{
			Producto productoAux=new Producto();

			if(this.idProductoActual != null && this.idProductoActual>0) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					productoLogic.getEntityWithConnection(this.idProductoActual);
					productoAux= productoLogic.getProducto();
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE

				productosForeignKey=new ArrayList<Producto>();
				productosForeignKey.add(productoAux);
			}

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}
	
	public void cancelar() throws Exception {
		this.cancelar(true);
	}
	
	public void cancelar(Boolean esParaCancelar) throws Exception {
		try {
														
			
			//SE UTILIZA COLUMNA ELIMINAR EN TABLA
			if(this.isEsNuevoDetalleConsignacion) {
				//NO CANCELA TODOS NUEVOS POR FUNCIONALIDAD GUARDAR CAMBIOS
				//this.cancelarNuevosDetalleConsignacion(esParaCancelar);				
				this.cancelarNuevoDetalleConsignacion(esParaCancelar);								
			}
			
			this.detalleconsignacion=new DetalleConsignacion();
			
			this.inicializarDetalleConsignacion();
			
			this.actualizarEstadoCeldasBotonesDetalleConsignacion("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleConsignacionConstantesFunciones.CLASSNAME);
		}
	}
	
	public void inicializarDetalleConsignacion() throws Exception {
		try {
			DetalleConsignacionConstantesFunciones.inicializarDetalleConsignacion(this.detalleconsignacion);
			
			} catch(Exception e) {
			throw e;
		}
	}
	
	public void anteriores()throws Exception {
		try	{
			//this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina-this.iNumeroPaginacion;
			
			if(this.iNumeroPaginacionPagina-this.iNumeroPaginacion<this.iNumeroPaginacion) {
				this.iNumeroPaginacionPagina=0;		
			} else {
				this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina-this.iNumeroPaginacion;
			}
			
			this.procesarBusqueda(this.sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleConsignacionConstantesFunciones.CLASSNAME);
		}
	}
	
	public void siguientes()throws Exception {
		try	{			
			if(this.detalleconsignacionLogic.getDetalleConsignacions().size()>0) {
					
				this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina+this.iNumeroPaginacion;
			}
				
			this.procesarBusqueda(this.sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleConsignacionConstantesFunciones.CLASSNAME);
		}
	}		
	
	public void generarReporteDetalleConsignacions(String sAccionBusqueda,List<DetalleConsignacion> detalleconsignacionsParaReportes) throws Exception {
		//HttpSession httpSession = httpServletRequest.getSession();
		Long iIdUsuarioSesion=0L;	
		
		
		if(usuarioActual==null) {
			this.usuarioActual=new Usuario();
		}
		
		iIdUsuarioSesion=usuarioActual.getId();
		
		String sPathReportes="";
		
		InputStream reportFile=null;
		InputStream imageFile=null;
			
		imageFile=AuxiliarImagenes.class.getResourceAsStream("LogoReporte.jpg");			
				
		
		String sPathReporteFinal="";
		
		if(!esReporteAccionProceso) {
			if(!this.sTipoReporte.equals("RELACIONES")) {//!isEsReporteRelaciones
				if(!this.esReporteDinamico) {
					sPathReporteFinal="DetalleConsignacion"+this.sTipoReporteExtra+"Design.jasper";
					reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);	
				} else {
					sPathReporteFinal=this.sPathReporteDinamico;
					reportFile = new FileInputStream(sPathReporteFinal);
				}
			} else {
				sPathReporteFinal="DetalleConsignacionMasterRelaciones"+this.sTipoReporteExtra+"Design.jasper";
				reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);
				//sPathReportes=reportFile.getPath().replace("DetalleConsignacionMasterRelacionesDesign.jasper", "");
			}
		} else {
				sPathReporteFinal="DetalleConsignacion"+this.sTipoReporteExtra+"Design.jasper";
				reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);	
		}
		
		if(reportFile==null) {
			throw new JRRuntimeException(sPathReporteFinal+" no existe");
		}
		
		String sUsuario="";
		
		if(usuarioActual!=null) {
			sUsuario=usuarioActual.getuser_name();
		}
		
		Map<String, Object> parameters = new HashMap<String, Object>();
		parameters.put("usuario", sUsuario);
		
		parameters.put("titulo", Funciones.GetTituloSistemaReporte(this.parametroGeneralSg,this.moduloActual,this.usuarioActual));
		parameters.put("subtitulo", "Reporte De  Detalle Consignacions");		
		parameters.put("busquedapor", DetalleConsignacionConstantesFunciones.getNombreIndice(sAccionBusqueda)+sDetalleReporte);
		
		
		if(this.sTipoReporte.equals("RELACIONES")) {//isEsReporteRelaciones
			parameters.put("SUBREPORT_DIR", sPathReportes);
		}
		
		parameters.put("con_grafico", this.conGraficoReporte);
		
		JasperReport jasperReport = (JasperReport)JRLoader.loadObject(reportFile);
				
		this.cargarDatosCliente();
		
		ArrayList<Classe> classes=new ArrayList<Classe>();		
		
		if(this.sTipoReporte.equals("RELACIONES")) {//isEsReporteRelaciones
			
			
		} else {
			//FK DEBERIA TRAERSE DE ANTEMANO
			
		}
								
		
		//CLASSES PARA REPORTES OBJETOS RELACIONADOS
		if(!this.sTipoReporte.equals("RELACIONES")) {//!isEsReporteRelaciones
			classes=new ArrayList<Classe>();
		}
		
		JRBeanArrayDataSource jrbeanArrayDataSourceDetalleConsignacion=null;
		
		if(this.sTipoReporteExtra!=null && !this.sTipoReporteExtra.equals("")) {
			DetalleConsignacionConstantesFunciones.S_TIPOREPORTE_EXTRA=this.sTipoReporteExtra;
		} else {
			DetalleConsignacionConstantesFunciones.S_TIPOREPORTE_EXTRA="";
		}
		
		jrbeanArrayDataSourceDetalleConsignacion=new JRBeanArrayDataSource(DetalleConsignacionJInternalFrame.TraerDetalleConsignacionBeans(detalleconsignacionsParaReportes,classes).toArray());
		
		jasperPrint = JasperFillManager.fillReport(jasperReport,parameters,jrbeanArrayDataSourceDetalleConsignacion);
				
		
		String sPathDest=Constantes.SUNIDAD_ARCHIVOS+":/"+Constantes.SCONTEXTSERVER+"/"+DetalleConsignacionConstantesFunciones.SCHEMA+"/reportes";
		
		File filePathDest = new File(sPathDest);
		
		if(!filePathDest.exists()) {
			filePathDest.mkdirs();				
		}
				
		String sDestFileName=sPathDest+"/"+DetalleConsignacionConstantesFunciones.CLASSNAME;
				
		if(this.sTipoArchivoReporte=="VISUALIZAR") {
			JasperViewer jasperViewer = new JasperViewer(jasperPrint,false) ;
			jasperViewer.setVisible(true) ; 

		} else if(this.sTipoArchivoReporte=="HTML"||this.sTipoArchivoReporte=="PDF"||this.sTipoArchivoReporte=="XML") {	
			//JasperFillManager.fillReportToFile(reportFile.getAbsolutePath(),parameters, new JRBeanArrayDataSource(DetalleConsignacionBean.TraerDetalleConsignacionBeans(detalleconsignacionsParaReportes).toArray()));
							
			if(this.sTipoArchivoReporte=="HTML") {
				sDestFileName+=".html";
				JasperExportManager.exportReportToHtmlFile(jasperPrint,sDestFileName);
					
			} else if(this.sTipoArchivoReporte=="PDF") {
				sDestFileName+=".pdf";
				JasperExportManager.exportReportToPdfFile(jasperPrint,sDestFileName);
			} else {
				sDestFileName+=".xml";
				JasperExportManager.exportReportToXmlFile(jasperPrint,sDestFileName, false);
			}	
			
		} else if(this.sTipoArchivoReporte=="WORD"||this.sTipoArchivoReporte=="EXCEL") {
				
			if(this.sTipoArchivoReporte=="WORD") {
				sDestFileName+=".rtf";
					
				JRRtfExporter exporter = new JRRtfExporter();
		
				exporter.setParameter(JRExporterParameter.JASPER_PRINT, jasperPrint);
				exporter.setParameter(JRExporterParameter.OUTPUT_FILE_NAME, sDestFileName);
		
				exporter.exportReport();
				
			} else	{
				sDestFileName+=".xls";
					
				JRXlsExporter exporterXls = new JRXlsExporter();
		
				exporterXls.setParameter(JRExporterParameter.JASPER_PRINT, jasperPrint);
				exporterXls.setParameter(JRExporterParameter.OUTPUT_FILE_NAME, sDestFileName);
				exporterXls.setParameter(JRXlsExporterParameter.IS_ONE_PAGE_PER_SHEET, Boolean.TRUE);
		
				exporterXls.exportReport();
			}
			
		} else if(this.sTipoArchivoReporte=="EXCEL2"||this.sTipoArchivoReporte=="EXCEL2_2") {
			//sDestFileName+=".xlsx";
			
			if(this.sTipoReporte.equals("NORMAL")) {
				this.generarExcelReporteDetalleConsignacions(sAccionBusqueda,sTipoArchivoReporte,detalleconsignacionsParaReportes);
			
			} else if(this.sTipoReporte.equals("FORMULARIO")){
				this.generarExcelReporteVerticalDetalleConsignacions(sAccionBusqueda,sTipoArchivoReporte,detalleconsignacionsParaReportes,false);
			
			} else if(this.sTipoReporte.equals("DINAMICO")){
				
				if(this.sTipoReporteDinamico.equals("NORMAL")) {
					
					this.jButtonGenerarExcelReporteDinamicoDetalleConsignacionActionPerformed(null);
					//this.generarExcelReporteDetalleConsignacions(sAccionBusqueda,sTipoArchivoReporte,detalleconsignacionsParaReportes);
					
				
				} else if(this.sTipoReporteDinamico.equals("FORMULARIO")){
					this.generarExcelReporteVerticalDetalleConsignacions(sAccionBusqueda,sTipoArchivoReporte,detalleconsignacionsParaReportes,true);
				
				} else if(this.sTipoReporteDinamico.equals("RELACIONES")){
					this.generarExcelReporteRelacionesDetalleConsignacions(sAccionBusqueda,sTipoArchivoReporte,detalleconsignacionsParaReportes,true);
				}
				
			} else if(this.sTipoReporte.equals("RELACIONES")){
				this.generarExcelReporteRelacionesDetalleConsignacions(sAccionBusqueda,sTipoArchivoReporte,detalleconsignacionsParaReportes,false);
			}
		}
		
		if(this.sTipoArchivoReporte=="HTML"||this.sTipoArchivoReporte=="PDF"||this.sTipoArchivoReporte=="XML"||this.sTipoArchivoReporte=="WORD"||this.sTipoArchivoReporte=="EXCEL") {				
			JOptionPane.showMessageDialog(this,"REPORTE "+sDestFileName+" GENERADO SATISFACTORIAMENTE","REPORTES ",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReporteDetalleConsignacions(String sAccionBusqueda,String sTipoArchivoReporte,List<DetalleConsignacion> detalleconsignacionsParaReportes) throws Exception {
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"detalleconsignacion";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("DetalleConsignacions");
         
        int iRow = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		this.generarExcelReporteHeaderDetalleConsignacion("NORMAL",row,workbook);
		
		CellStyle cellStyleData = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataAux=null;
		
		int i=0;
		
      	for(DetalleConsignacion detalleconsignacion : detalleconsignacionsParaReportes) {            
			row = sheet.createRow(iRow++);
			iCell = 0;
			
			cellStyleDataAux=null;
			
			if(i%2==0) {
				cellStyleDataAux=cellStyleData;
			}
			
			DetalleConsignacionConstantesFunciones.generarExcelReporteDataDetalleConsignacion("NORMAL",row,workbook,detalleconsignacion,cellStyleDataAux);
		
			
			/*
            Cell cell0 = row.createCell(0);
            cell0.setCellValue(country.getName());
            Cell cell1 = row.createCell(1);
            cell1.setCellValue(country.getShortCode());
			*/
			
			i++;
        }
        
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.detalleconsignacionSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Detalle Consignacion",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReporteHeaderDetalleConsignacion(String sTipo,Row row,Workbook workbook) {
		
		DetalleConsignacionConstantesFunciones.generarExcelReporteHeaderDetalleConsignacion(sTipo,row,workbook);
		
		/*
		Cell cell=null;
		int iCell=0;
		
		CellStyle cellStyle = workbook.createCellStyle();
		cellStyle.setFillBackgroundColor(IndexedColors.GREEN.getIndex());
		cellStyle.setFillPattern(CellStyle.ALIGN_FILL);
		*/
		
	}
	
	public void generarExcelReporteVerticalDetalleConsignacions(String sAccionBusqueda,String sTipoArchivoReporte,List<DetalleConsignacion> detalleconsignacionsParaReportes,Boolean paraDinamico) throws Exception {
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"detalleconsignacion_vertical";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("DetalleConsignacions");
         
        int iRow = 0;
		int iRowLast = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		CellStyle cellStyle = Funciones2.getStyleTitulo(workbook,"ZEBRA");;
		
		CellStyle cellStyleTitulo = Funciones2.getStyleTitulo(workbook,"PRINCIPAL_VERTICAL");
		
		
		for(DetalleConsignacion detalleconsignacion : detalleconsignacionsParaReportes) {
			row = sheet.createRow(iRow++);
			iRowLast=iRow - 1;
			
			cell = row.createCell(0);
			cell.setCellValue(DetalleConsignacionConstantesFunciones.getDetalleConsignacionDescripcion(detalleconsignacion));
			cell.setCellStyle(cellStyleTitulo);
			
			sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,0,2));			
	
			


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleConsignacionConstantesFunciones.LABEL_IDEMPRESA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleConsignacionConstantesFunciones.LABEL_IDEMPRESA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detalleconsignacion.getempresa_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleConsignacionConstantesFunciones.LABEL_IDSUCURSAL))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleConsignacionConstantesFunciones.LABEL_IDSUCURSAL);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detalleconsignacion.getsucursal_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleConsignacionConstantesFunciones.LABEL_IDEJERCICIO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleConsignacionConstantesFunciones.LABEL_IDEJERCICIO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detalleconsignacion.getejercicio_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleConsignacionConstantesFunciones.LABEL_IDPERIODO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleConsignacionConstantesFunciones.LABEL_IDPERIODO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detalleconsignacion.getperiodo_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleConsignacionConstantesFunciones.LABEL_IDANIO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleConsignacionConstantesFunciones.LABEL_IDANIO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detalleconsignacion.getanio_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleConsignacionConstantesFunciones.LABEL_IDMES))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleConsignacionConstantesFunciones.LABEL_IDMES);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detalleconsignacion.getmes_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleConsignacionConstantesFunciones.LABEL_IDCONSIGNACION))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleConsignacionConstantesFunciones.LABEL_IDCONSIGNACION);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detalleconsignacion.getconsignacion_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleConsignacionConstantesFunciones.LABEL_IDPRODUCTO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleConsignacionConstantesFunciones.LABEL_IDPRODUCTO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detalleconsignacion.getproducto_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleConsignacionConstantesFunciones.LABEL_IDBODEGA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleConsignacionConstantesFunciones.LABEL_IDBODEGA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detalleconsignacion.getbodega_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleConsignacionConstantesFunciones.LABEL_IDUNIDAD))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleConsignacionConstantesFunciones.LABEL_IDUNIDAD);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detalleconsignacion.getunidad_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleConsignacionConstantesFunciones.LABEL_IDESTADODETALLEPEDIDO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleConsignacionConstantesFunciones.LABEL_IDESTADODETALLEPEDIDO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detalleconsignacion.getestadodetallepedido_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleConsignacionConstantesFunciones.LABEL_CANTIDAD))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleConsignacionConstantesFunciones.LABEL_CANTIDAD);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detalleconsignacion.getcantidad());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleConsignacionConstantesFunciones.LABEL_PRECIO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleConsignacionConstantesFunciones.LABEL_PRECIO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detalleconsignacion.getprecio());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleConsignacionConstantesFunciones.LABEL_DESCUENTOPORCENTAJE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleConsignacionConstantesFunciones.LABEL_DESCUENTOPORCENTAJE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detalleconsignacion.getdescuento_porcentaje());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleConsignacionConstantesFunciones.LABEL_DESCUENTOVALOR))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleConsignacionConstantesFunciones.LABEL_DESCUENTOVALOR);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detalleconsignacion.getdescuento_valor());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleConsignacionConstantesFunciones.LABEL_IVA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleConsignacionConstantesFunciones.LABEL_IVA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detalleconsignacion.getiva());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleConsignacionConstantesFunciones.LABEL_TOTAL))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleConsignacionConstantesFunciones.LABEL_TOTAL);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detalleconsignacion.gettotal());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleConsignacionConstantesFunciones.LABEL_ICE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleConsignacionConstantesFunciones.LABEL_ICE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detalleconsignacion.getice());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleConsignacionConstantesFunciones.LABEL_COSTO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleConsignacionConstantesFunciones.LABEL_COSTO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detalleconsignacion.getcosto());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleConsignacionConstantesFunciones.LABEL_UTILIDAD))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleConsignacionConstantesFunciones.LABEL_UTILIDAD);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detalleconsignacion.getutilidad());


			}						
        }
        
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.detalleconsignacionSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Detalle Consignacion",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReporteRelacionesDetalleConsignacions(String sAccionBusqueda,String sTipoArchivoReporte,List<DetalleConsignacion> detalleconsignacionsParaReportes,Boolean paraDinamico) throws Exception {
		
		ArrayList<Classe> classes=new ArrayList<Classe>();
		List<DetalleConsignacion> detalleconsignacionsRespaldo=null;
		
		classes=DetalleConsignacionConstantesFunciones.getClassesRelationshipsOfDetalleConsignacion(new ArrayList<Classe>(),DeepLoadType.NONE,false);
					
		this.datosDeep=new DatosDeep();
		
		this.datosDeep.setIsDeep(false);
		this.datosDeep.setDeepLoadType(DeepLoadType.INCLUDE);
		this.datosDeep.setClases(classes);
			
		this.datosCliente.setDatosDeepParametros(false, DeepLoadType.INCLUDE, classes, "");
		this.datosCliente.setIsConDeep(true);	
		this.datosCliente.setIsConExportar(false);
		
						
		this.detalleconsignacionLogic.setDatosCliente(this.datosCliente);
		this.detalleconsignacionLogic.setDatosDeep(this.datosDeep);
		this.detalleconsignacionLogic.setIsConDeep(true);
		
		detalleconsignacionsRespaldo=this.detalleconsignacionLogic.getDetalleConsignacions();
		
		this.detalleconsignacionLogic.setDetalleConsignacions(detalleconsignacionsParaReportes);	
		this.detalleconsignacionLogic.deepLoadsWithConnection(false, DeepLoadType.INCLUDE, classes,"");
		
		detalleconsignacionsParaReportes=this.detalleconsignacionLogic.getDetalleConsignacions();
		this.detalleconsignacionLogic.setDetalleConsignacions(detalleconsignacionsRespaldo);
		
		
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"detalleconsignacion_relacion";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("DetalleConsignacions");
         
        int iRow = 0;
		int iRowLast = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		this.generarExcelReporteHeaderDetalleConsignacion("NORMAL",row,workbook);
		
		int i=0;
		int i2=0;
		
		CellStyle cellStyleData = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataTitulo = Funciones2.getStyleTitulo(workbook,"PRINCIPAL");
		CellStyle cellStyleDataZebra = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataAux =null;
		CellStyle cellStyleDataAuxHijo =null;
		
		for(DetalleConsignacion detalleconsignacion : detalleconsignacionsParaReportes) {			
			if(i!=0) {
				row = sheet.createRow(iRow++);				
				this.generarExcelReporteHeaderDetalleConsignacion("NORMAL",row,workbook);
			}
			
			cellStyleDataAux=null;
			
			if(i%2==0) {
				//cellStyleDataAux=cellStyleData;
			}
			
			row = sheet.createRow(iRow++);						
			DetalleConsignacionConstantesFunciones.generarExcelReporteDataDetalleConsignacion("NORMAL",row,workbook,detalleconsignacion,cellStyleDataAux);
		
			
			
			
			i++;
        }
        
		/*
		row = sheet.createRow(iRow++);
		iRowLast=iRow - 1;
			
		cell = row.createCell(0);
		cell.setCellValue(DetalleConsignacionConstantesFunciones.getDetalleConsignacionDescripcion(detalleconsignacion));
		cell.setCellStyle(cellStyleTitulo);
			
		sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,0,2));			
		*/
		
			
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.detalleconsignacionSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Detalle Consignacion",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	
	public Boolean existeColumnaReporteDinamico(String sColumna) {
		Boolean existe=false;
		
		Reporte reporte=new Reporte();
		
		
		for(int index:this.jInternalFrameReporteDinamicoDetalleConsignacion.getjListColumnasSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoDetalleConsignacion.getjListColumnasSelectReporte().getModel().getElementAt(index);
			
			if(sColumna.equals(reporte.getsCodigo())) {
				existe=true;
				break;
			}
		
		}
		
		
		return existe;
	}
	
	public Boolean existeRelacionReporteDinamico(String sColumna) {
		Boolean existe=false;
		
		Reporte reporte=new Reporte();
		
		
		for(int index:this.jInternalFrameReporteDinamicoDetalleConsignacion.getjListRelacionesSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoDetalleConsignacion.getjListRelacionesSelectReporte().getModel().getElementAt(index);
			
			if(sColumna.equals(reporte.getsCodigo())) {
				existe=true;
				break;
			}
		
		}
		
		
		return existe;
	}
	
	public void startProcessDetalleConsignacion() throws Exception {		
		this.startProcessDetalleConsignacion(true);
	}
	
	public void startProcessDetalleConsignacion(Boolean conSplash) throws Exception {		
		//FuncionesSwing.enableDisablePanels(false,this.jTabbedPaneBusquedasDetalleConsignacion ,this.jPanelParametrosReportesDetalleConsignacion, this.jScrollPanelDatosDetalleConsignacion,this.jPanelPaginacionDetalleConsignacion, this.jScrollPanelDatosEdicionDetalleConsignacion, this.jPanelAccionesDetalleConsignacion,this.jPanelAccionesFormularioDetalleConsignacion,this.jmenuBarDetalleConsignacion,this.jmenuBarDetalleDetalleConsignacion,this.jTtoolBarDetalleConsignacion,this.jTtoolBarDetalleDetalleConsignacion);		
		
		final JTabbedPane jTabbedPaneBusquedasDetalleConsignacion=this.jTabbedPaneBusquedasDetalleConsignacion; 
		
		final JPanel jPanelParametrosReportesDetalleConsignacion=this.jPanelParametrosReportesDetalleConsignacion;
		//final JScrollPane jScrollPanelDatosDetalleConsignacion=this.jScrollPanelDatosDetalleConsignacion;
		final JTable jTableDatosDetalleConsignacion=this.jTableDatosDetalleConsignacion;		
		final JPanel jPanelPaginacionDetalleConsignacion=this.jPanelPaginacionDetalleConsignacion;
		//final JScrollPane jScrollPanelDatosEdicionDetalleConsignacion=this.jScrollPanelDatosEdicionDetalleConsignacion;
		final JPanel jPanelAccionesDetalleConsignacion=this.jPanelAccionesDetalleConsignacion;
		
		JPanel jPanelCamposAuxiliarDetalleConsignacion=new JPanelMe();
		JPanel jPanelAccionesFormularioAuxiliarDetalleConsignacion=new JPanelMe();
		
		if(this.jInternalFrameDetalleFormDetalleConsignacion!=null) {
			jPanelCamposAuxiliarDetalleConsignacion=this.jInternalFrameDetalleFormDetalleConsignacion.jPanelCamposDetalleConsignacion;
			jPanelAccionesFormularioAuxiliarDetalleConsignacion=this.jInternalFrameDetalleFormDetalleConsignacion.jPanelAccionesFormularioDetalleConsignacion;
		}
		
		final JPanel jPanelCamposDetalleConsignacion=jPanelCamposAuxiliarDetalleConsignacion;
		final JPanel jPanelAccionesFormularioDetalleConsignacion=jPanelAccionesFormularioAuxiliarDetalleConsignacion;
		
		
		final JMenuBar jmenuBarDetalleConsignacion=this.jmenuBarDetalleConsignacion;
		final JToolBar jTtoolBarDetalleConsignacion=this.jTtoolBarDetalleConsignacion;		
		
		
		JMenuBar jmenuBarDetalleAuxiliarDetalleConsignacion=new JMenuBar();
		JToolBar jTtoolBarDetalleAuxiliarDetalleConsignacion=new JToolBar();		
		
		if(this.jInternalFrameDetalleFormDetalleConsignacion!=null) {
			jmenuBarDetalleAuxiliarDetalleConsignacion=this.jInternalFrameDetalleFormDetalleConsignacion.jmenuBarDetalleDetalleConsignacion;
			jTtoolBarDetalleAuxiliarDetalleConsignacion=this.jInternalFrameDetalleFormDetalleConsignacion.jTtoolBarDetalleDetalleConsignacion;
		}
		
		final JMenuBar jmenuBarDetalleDetalleConsignacion=jmenuBarDetalleAuxiliarDetalleConsignacion;
		final JToolBar jTtoolBarDetalleDetalleConsignacion=jTtoolBarDetalleAuxiliarDetalleConsignacion;		
		
		
		
		
		
		if(Constantes2.CON_PROCESO_HILO) {
			Thread threadRunnableProcess;
			ProcessRunnable processRunnable;
			
			processRunnable=new ProcessRunnable();
			
			processRunnable.setsTipo("START");
			processRunnable.setDesktop(jDesktopPane);
			processRunnable.setModuloActual(moduloActual);
			processRunnable.setModuloUsuarioSeleccionado(moduloActual);
			processRunnable.setOpcionActual(opcionActual);
			processRunnable.setParametroGeneralSg(parametroGeneralSg);
			processRunnable.setParametroGeneralUsuario(parametroGeneralUsuario);
			processRunnable.setResumenUsuarioActual(resumenUsuarioActual);
			processRunnable.setUsuarioActual(usuarioActual);
			
			processRunnable.jTabbedPaneBusquedas=jTabbedPaneBusquedasDetalleConsignacion;
			processRunnable.jPanelParametrosReportes=jPanelParametrosReportesDetalleConsignacion;
			processRunnable.jTableDatos=jTableDatosDetalleConsignacion;
			processRunnable.jPanelCampos=jPanelCamposDetalleConsignacion;
			processRunnable.jPanelPaginacion=jPanelPaginacionDetalleConsignacion;
			processRunnable.jPanelAcciones=jPanelAccionesDetalleConsignacion;
			processRunnable.jPanelAccionesFormulario=jPanelAccionesFormularioDetalleConsignacion;
			
			
			processRunnable.jmenuBar=jmenuBarDetalleConsignacion;
			processRunnable.jmenuBarDetalle=jmenuBarDetalleDetalleConsignacion;
			processRunnable.jTtoolBar=jTtoolBarDetalleConsignacion;
			processRunnable.jTtoolBarDetalle=jTtoolBarDetalleDetalleConsignacion;
			processRunnable.jInternalFrameBase=this;
			
			//processRunnable.CargarObjetosRendimientoCriticoModuloInventario();
			
			
			threadRunnableProcess=new Thread(processRunnable);//.start();
					
			threadRunnableProcess.start();
			
		} else {
			FuncionesSwing.enableDisablePanels(false,jTabbedPaneBusquedasDetalleConsignacion ,jPanelParametrosReportesDetalleConsignacion,jTableDatosDetalleConsignacion, /*jScrollPanelDatosDetalleConsignacion,*/jPanelCamposDetalleConsignacion,jPanelPaginacionDetalleConsignacion, /*jScrollPanelDatosEdicionDetalleConsignacion,*/ jPanelAccionesDetalleConsignacion,jPanelAccionesFormularioDetalleConsignacion,jmenuBarDetalleConsignacion,jmenuBarDetalleDetalleConsignacion,jTtoolBarDetalleConsignacion,jTtoolBarDetalleDetalleConsignacion);
		
			startProcess();//this.
		}
						
		/*
		if(conSplash) {
			SwingUtilities.invokeLater(new Runnable() {
			      public void run() {
			    	  try {
							FuncionesSwing.enableDisablePanels(false,jTabbedPaneBusquedasDetalleConsignacion ,jPanelParametrosReportesDetalleConsignacion, jScrollPanelDatosDetalleConsignacion,jPanelPaginacionDetalleConsignacion, jScrollPanelDatosEdicionDetalleConsignacion, jPanelAccionesDetalleConsignacion,jPanelAccionesFormularioDetalleConsignacion,jmenuBarDetalleConsignacion,jmenuBarDetalleDetalleConsignacion,jTtoolBarDetalleConsignacion,jTtoolBarDetalleDetalleConsignacion);
						
							startProcess();//this.
							
						} catch (Exception e) {
							// TODO Auto-generated catch block
							e.printStackTrace();
						}
			      }
			});
		}
		*/
	}
	
	public void finishProcessDetalleConsignacion() {// throws Exception 
		this.finishProcessDetalleConsignacion(true);
	}
	
	public void finishProcessDetalleConsignacion(Boolean conSplash) {// throws Exception 
		//FuncionesSwing.enableDisablePanels(true,this.jTabbedPaneBusquedasDetalleConsignacion ,this.jPanelParametrosReportesDetalleConsignacion, this.jScrollPanelDatosDetalleConsignacion,this.jPanelPaginacionDetalleConsignacion, this.jScrollPanelDatosEdicionDetalleConsignacion, this.jPanelAccionesDetalleConsignacion,this.jPanelAccionesFormularioDetalleConsignacion,this.jmenuBarDetalleConsignacion,this.jmenuBarDetalleDetalleConsignacion,this.jTtoolBarDetalleConsignacion,this.jTtoolBarDetalleDetalleConsignacion);		
		
		final JTabbedPane jTabbedPaneBusquedasDetalleConsignacion=this.jTabbedPaneBusquedasDetalleConsignacion; 
		
		final JPanel jPanelParametrosReportesDetalleConsignacion=this.jPanelParametrosReportesDetalleConsignacion;
		//final JScrollPane jScrollPanelDatosDetalleConsignacion=this.jScrollPanelDatosDetalleConsignacion;
		final JTable jTableDatosDetalleConsignacion=this.jTableDatosDetalleConsignacion;		
		final JPanel jPanelPaginacionDetalleConsignacion=this.jPanelPaginacionDetalleConsignacion;
		//final JScrollPane jScrollPanelDatosEdicionDetalleConsignacion=this.jScrollPanelDatosEdicionDetalleConsignacion;
		final JPanel jPanelAccionesDetalleConsignacion=this.jPanelAccionesDetalleConsignacion;
		
		JPanel jPanelCamposAuxiliarDetalleConsignacion=new JPanel();
		JPanel jPanelAccionesFormularioAuxiliarDetalleConsignacion=new JPanel();
		
		if(this.jInternalFrameDetalleFormDetalleConsignacion!=null) {
			jPanelCamposAuxiliarDetalleConsignacion=this.jInternalFrameDetalleFormDetalleConsignacion.jPanelCamposDetalleConsignacion;
			jPanelAccionesFormularioAuxiliarDetalleConsignacion=this.jInternalFrameDetalleFormDetalleConsignacion.jPanelAccionesFormularioDetalleConsignacion;
		}
		
		final JPanel jPanelCamposDetalleConsignacion=jPanelCamposAuxiliarDetalleConsignacion;
		final JPanel jPanelAccionesFormularioDetalleConsignacion=jPanelAccionesFormularioAuxiliarDetalleConsignacion;
		
		
		final JMenuBar jmenuBarDetalleConsignacion=this.jmenuBarDetalleConsignacion;		
		final JToolBar jTtoolBarDetalleConsignacion=this.jTtoolBarDetalleConsignacion;
				
		JMenuBar jmenuBarDetalleAuxiliarDetalleConsignacion=new JMenuBar();
		JToolBar jTtoolBarDetalleAuxiliarDetalleConsignacion=new JToolBar();
		
		if(this.jInternalFrameDetalleFormDetalleConsignacion!=null) {
			jmenuBarDetalleAuxiliarDetalleConsignacion=this.jInternalFrameDetalleFormDetalleConsignacion.jmenuBarDetalleDetalleConsignacion;
			jTtoolBarDetalleAuxiliarDetalleConsignacion=this.jInternalFrameDetalleFormDetalleConsignacion.jTtoolBarDetalleDetalleConsignacion;		
		}
		
		final JMenuBar jmenuBarDetalleDetalleConsignacion=jmenuBarDetalleAuxiliarDetalleConsignacion;
		final JToolBar jTtoolBarDetalleDetalleConsignacion=jTtoolBarDetalleAuxiliarDetalleConsignacion;
		
		
		
		if(Constantes2.CON_PROCESO_HILO) {
			Thread threadRunnableProcess;
			ProcessRunnable processRunnable;
			
			processRunnable=new ProcessRunnable();
			
			processRunnable.setsTipo("END");
			processRunnable.setDesktop(jDesktopPane);
			processRunnable.setModuloActual(moduloActual);
			processRunnable.setModuloUsuarioSeleccionado(moduloActual);
			processRunnable.setOpcionActual(opcionActual);
			processRunnable.setParametroGeneralSg(parametroGeneralSg);
			processRunnable.setParametroGeneralUsuario(parametroGeneralUsuario);
			processRunnable.setResumenUsuarioActual(resumenUsuarioActual);
			processRunnable.setUsuarioActual(usuarioActual);
			
			processRunnable.jTabbedPaneBusquedas=jTabbedPaneBusquedasDetalleConsignacion;
			processRunnable.jPanelParametrosReportes=jPanelParametrosReportesDetalleConsignacion;
			processRunnable.jTableDatos=jTableDatosDetalleConsignacion;
			processRunnable.jPanelCampos=jPanelCamposDetalleConsignacion;
			processRunnable.jPanelPaginacion=jPanelPaginacionDetalleConsignacion;
			processRunnable.jPanelAcciones=jPanelAccionesDetalleConsignacion;
			processRunnable.jPanelAccionesFormulario=jPanelAccionesFormularioDetalleConsignacion;
			
			
			processRunnable.jmenuBar=jmenuBarDetalleConsignacion;
			processRunnable.jmenuBarDetalle=jmenuBarDetalleDetalleConsignacion;
			processRunnable.jTtoolBar=jTtoolBarDetalleConsignacion;
			processRunnable.jTtoolBarDetalle=jTtoolBarDetalleDetalleConsignacion;
			processRunnable.jInternalFrameBase=this;
			
			//processRunnable.CargarObjetosRendimientoCriticoModuloInventario();
			
			
			threadRunnableProcess=new Thread(processRunnable);//.start();
					
			threadRunnableProcess.start();
			
		} else {
			if(conSplash) {
				SwingUtilities.invokeLater(new RunnableProceso(true,this,jTabbedPaneBusquedasDetalleConsignacion ,jPanelParametrosReportesDetalleConsignacion, jTableDatosDetalleConsignacion,/*jScrollPanelDatosDetalleConsignacion,*/jPanelCamposDetalleConsignacion,jPanelPaginacionDetalleConsignacion, /*jScrollPanelDatosEdicionDetalleConsignacion,*/ jPanelAccionesDetalleConsignacion,jPanelAccionesFormularioDetalleConsignacion,jmenuBarDetalleConsignacion,jmenuBarDetalleDetalleConsignacion,jTtoolBarDetalleConsignacion,jTtoolBarDetalleDetalleConsignacion));
			}
		}						
	}
	
	/*
	public void habilitarDeshabilitarControlesDetalleConsignacion(Boolean esHabilitar,Boolean conDetalle) {
		this.habilitarDeshabilitarToolBarDetalleConsignacion(esHabilitar,conDetalle);
		this.habilitarDeshabilitarMenuDetalleConsignacion(esHabilitar,conDetalle);
	}
	
	public void habilitarDeshabilitarToolBarDetalleConsignacion(Boolean esHabilitar,Boolean conDetalle) {
		FuncionesSwing.enableDisableComponents(this.jTtoolBarDetalleConsignacion,esHabilitar,1,1);
		
		if(conDetalle) {
			FuncionesSwing.enableDisableComponents(this.jTtoolBarDetalleDetalleConsignacion,esHabilitar,1,1);
		}
	}
	
	public void habilitarDeshabilitarMenuDetalleConsignacion(Boolean esHabilitar,Boolean conDetalle) {
		FuncionesSwing.enableDisableComponents(this.jmenuBarDetalleConsignacion,esHabilitar,1,1);
		
		if(conDetalle) {
			FuncionesSwing.enableDisableComponents(this.jmenuBarDetalleDetalleConsignacion,esHabilitar,1,1);
		}
	}
	*/
	
	
	
	public void procesarBusqueda(String sAccionBusqueda) throws Exception {		
		String  finalQueryPaginacion=this.detalleconsignacionConstantesFunciones.getsFinalQueryDetalleConsignacion();
		String  finalQueryPaginacionTodos=this.detalleconsignacionConstantesFunciones.getsFinalQueryDetalleConsignacion();
		
		Boolean esBusqueda=false;
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		if(!sAccionBusqueda.equals("Todos"))	{
			esBusqueda=true;
		}
		
		this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
		this.arrDatoGeneralNo= new  ArrayList<String>();
		
		ArrayList<String> arrColumnasGlobalesNo=DetalleConsignacionConstantesFunciones.getArrayColumnasGlobalesNoDetalleConsignacion(this.arrDatoGeneral);
		ArrayList<String> arrColumnasGlobales=DetalleConsignacionConstantesFunciones.getArrayColumnasGlobalesDetalleConsignacion(this.arrDatoGeneral,arrColumnasGlobalesNo);
		
			
		String  finalQueryGlobal="";
		
		finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,!esBusqueda,esBusqueda,arrColumnasGlobales,DetalleConsignacionConstantesFunciones.TABLENAME);
		
		String sOrderBy="";
		
		
		sOrderBy=Funciones2.getFinalQueryOrderBy(this.arrOrderBy);
		
		
		if(!sOrderBy.equals("")) {			
			finalQueryPaginacion=sOrderBy;
			finalQueryPaginacionTodos=sOrderBy;
		}
		
		
		//INICIALIZA ELIMINADOS
		this.detalleconsignacionsEliminados= new ArrayList<DetalleConsignacion>();
		
		if(!this.isEntroOnLoad) {
			this.onLoad();
		}/* else {
			this.isEntroOnLoad=false;
		}*/
		
		
		
				
		try	{		
			
			//this.startProcessDetalleConsignacion();
		
				///*DetalleConsignacionSessionBean*/this.detalleconsignacionSessionBean=new DetalleConsignacionSessionBean();
			
			if(this.detalleconsignacionSessionBean==null) {
				this.detalleconsignacionSessionBean=new DetalleConsignacionSessionBean();
			}
			
			//ACTUALIZA EL TAMANIO DE PAGINACION DESDE EL COMBO
			if(this.sTipoPaginacion!=null && !this.sTipoPaginacion.equals("")) {
				if(!this.sTipoPaginacion.equals("TODOS")) {
					this.iNumeroPaginacion=Integer.parseInt(this.sTipoPaginacion);
				} else {
					this.iNumeroPaginacion=-1;
					this.iNumeroPaginacionPagina=-1;
				}
			} else {
				if(this.iNumeroPaginacion==null || (this.iNumeroPaginacion!=null && this.iNumeroPaginacion<=0)) {
					this.iNumeroPaginacion=DetalleConsignacionConstantesFunciones.INUMEROPAGINACION;
				}
			}
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);
			
			this.cargarDatosCliente();
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			classes=DetalleConsignacionConstantesFunciones.getClassesForeignKeysOfDetalleConsignacion(new ArrayList<Classe>(),DeepLoadType.NONE);
			
		
			this.datosDeep=new DatosDeep();
			this.datosDeep.setIsDeep(false);
			this.datosDeep.setDeepLoadType(DeepLoadType.INCLUDE);
			this.datosDeep.setClases(classes);
			
			this.datosCliente.setDatosDeepParametros(false, DeepLoadType.INCLUDE, classes, "");
			this.datosCliente.setIsConDeep(true);
			
			if(false) {//this.conExportar
				this.datosCliente.setIsConExportar(true);
				this.datosCliente.setDatosExportarParametros(Funciones2.getTipoExportar(this.parametroGeneralUsuario),this.parametroGeneralUsuario.getcon_exportar_cabecera(),Funciones2.getTipoDelimiter(this.parametroGeneralUsuario),this.parametroGeneralUsuario.getpath_exportar()+"/detalleconsignacion."+Funciones2.getTipoExtensionArchivoExportar(this.parametroGeneralUsuario));
			} else {
				this.datosCliente.setIsConExportar(false);
			}
			
			detalleconsignacionsAux= new ArrayList<DetalleConsignacion>();
			
				
			detalleconsignacionLogic.setDatosCliente(this.datosCliente);
			detalleconsignacionLogic.setDatosDeep(this.datosDeep);
			detalleconsignacionLogic.setIsConDeep(true);
			
			
			detalleconsignacionLogic.getDetalleConsignacionDataAccess().setIsForForeingsKeysDataRelationships(true);
			
			if(sAccionBusqueda.equals("Todos") || sAccionBusqueda.equals("Query"))	{	
				if(sAccionBusqueda.equals("Todos")) {
					//FALTA:PARA BUSQUEDAS POR CAMPO EN FORMULARIO
					//this.sFinalQueryGeneral="";
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacionTodos );
					
					detalleconsignacionLogic.getTodosDetalleConsignacions(finalQueryGlobal,pagination);
					
					//detalleconsignacionLogic.getTodosDetalleConsignacionsWithConnection(finalQueryGlobal,pagination);										
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
				
				if(detalleconsignacionLogic.getDetalleConsignacions()==null|| detalleconsignacionLogic.getDetalleConsignacions().size()==0)	{
					
				
				}
				
				if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(-1);
						this.pagination.setiMaxResults(-1);
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							detalleconsignacionsAux= new ArrayList<DetalleConsignacion>();
							detalleconsignacionsAux.addAll(detalleconsignacionLogic.getDetalleConsignacions());						
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detalleconsignacionsAux= new ArrayList<DetalleConsignacion>();
							detalleconsignacionsAux.addAll(detalleconsignacions);
						}
						//ARCHITECTURE
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							detalleconsignacionLogic.getTodosDetalleConsignacions(finalQueryGlobal+"",this.pagination);												
							
							//detalleconsignacionLogic.getTodosDetalleConsignacionsWithConnection(finalQueryGlobal+"",this.pagination);												
						} else if(Constantes.ISUSAEJBREMOTE) {
						} else if(Constantes.ISUSAEJBHOME) {
						}
						//ARCHITECTURE
						
					}
					
					this.generarReporteDetalleConsignacions("Todos",detalleconsignacionLogic.getDetalleConsignacions() );
					
					if(false) {//isMostrarTodosResultadosReporte						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							detalleconsignacionLogic.setDetalleConsignacions(new ArrayList<DetalleConsignacion>());					
							detalleconsignacionLogic.getDetalleConsignacions().addAll(detalleconsignacionsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detalleconsignacions=new ArrayList<DetalleConsignacion>();
							detalleconsignacions.addAll(detalleconsignacionsAux);
						}
						//ARCHITECTURE
						
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);														
					}
				}
			}
			else if(sAccionBusqueda.equals("PorId")) {
				Long idDetalleConsignacion=0L;
				
				if(this.idActual!=null && this.idActual!=0L) {
					idDetalleConsignacion=this.idActual;
				
				} else if(this.idDetalleConsignacionActual!=null && this.idDetalleConsignacionActual!=0L) {
					idDetalleConsignacion=idDetalleConsignacionActual;
				}
				
					
				this.sDetalleReporte=DetalleConsignacionConstantesFunciones.getDetalleIndicePorId(idDetalleConsignacion);
				
				this.detalleconsignacions=new ArrayList<DetalleConsignacion>();
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {					
					detalleconsignacionLogic.getEntity(idDetalleConsignacion);
					
					//detalleconsignacionLogic.getEntityWithConnection(idDetalleConsignacion);
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
								
				if(Constantes.ISUSAEJBLOGICLAYER) {
					detalleconsignacionLogic.setDetalleConsignacions(new ArrayList<DetalleConsignacion>());
					detalleconsignacionLogic.getDetalleConsignacions().add(detalleconsignacionLogic.getDetalleConsignacion());
				
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detalleconsignacions=new ArrayList<DetalleConsignacion>();
					this.detalleconsignacions.add(detalleconsignacion);
				}
				
				if(detalleconsignacionLogic.getDetalleConsignacion()==null)	{
					
				
				}			
			}
			
		
			else if(sAccionBusqueda.equals("FK_IdBodega")) {
				this.sDetalleReporte=DetalleConsignacionConstantesFunciones.getDetalleIndiceFK_IdBodega(id_bodegaFK_IdBodega);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					detalleconsignacionLogic.getDetalleConsignacionsFK_IdBodega(finalQueryGlobal,pagination,id_bodegaFK_IdBodega);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetalleConsignacionConstantesFunciones.getDetalleIndiceFK_IdBodega(id_bodegaFK_IdBodega);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetalleConsignacionConstantesFunciones.getDetalleIndiceFK_IdBodega(id_bodegaFK_IdBodega);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=detalleconsignacionLogic.getDetalleConsignacions()==null||detalleconsignacionLogic.getDetalleConsignacions().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=detalleconsignacions==null|| detalleconsignacions.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						detalleconsignacionsAux=new ArrayList<DetalleConsignacion>();
						detalleconsignacionsAux.addAll(detalleconsignacionLogic.getDetalleConsignacions());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detalleconsignacionsAux=new ArrayList<DetalleConsignacion>();
							detalleconsignacionsAux.addAll(detalleconsignacions);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							detalleconsignacionLogic.getDetalleConsignacionsFK_IdBodega(finalQueryGlobal,pagination,id_bodegaFK_IdBodega);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetalleConsignacionConstantesFunciones.getDetalleIndiceFK_IdBodega(id_bodegaFK_IdBodega);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetalleConsignacionConstantesFunciones.getDetalleIndiceFK_IdBodega(id_bodegaFK_IdBodega);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteDetalleConsignacions("FK_IdBodega",detalleconsignacionLogic.getDetalleConsignacions());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteDetalleConsignacions("FK_IdBodega",detalleconsignacions);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						detalleconsignacionLogic.setDetalleConsignacions(new ArrayList<DetalleConsignacion>());
						detalleconsignacionLogic.getDetalleConsignacions().addAll(detalleconsignacionsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detalleconsignacions=new ArrayList<DetalleConsignacion>();
							detalleconsignacions.addAll(detalleconsignacionsAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdConsignacion")) {
				this.sDetalleReporte=DetalleConsignacionConstantesFunciones.getDetalleIndiceFK_IdConsignacion(id_consignacionFK_IdConsignacion);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					detalleconsignacionLogic.getDetalleConsignacionsFK_IdConsignacion(finalQueryGlobal,pagination,id_consignacionFK_IdConsignacion);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetalleConsignacionConstantesFunciones.getDetalleIndiceFK_IdConsignacion(id_consignacionFK_IdConsignacion);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetalleConsignacionConstantesFunciones.getDetalleIndiceFK_IdConsignacion(id_consignacionFK_IdConsignacion);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=detalleconsignacionLogic.getDetalleConsignacions()==null||detalleconsignacionLogic.getDetalleConsignacions().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=detalleconsignacions==null|| detalleconsignacions.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						detalleconsignacionsAux=new ArrayList<DetalleConsignacion>();
						detalleconsignacionsAux.addAll(detalleconsignacionLogic.getDetalleConsignacions());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detalleconsignacionsAux=new ArrayList<DetalleConsignacion>();
							detalleconsignacionsAux.addAll(detalleconsignacions);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							detalleconsignacionLogic.getDetalleConsignacionsFK_IdConsignacion(finalQueryGlobal,pagination,id_consignacionFK_IdConsignacion);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetalleConsignacionConstantesFunciones.getDetalleIndiceFK_IdConsignacion(id_consignacionFK_IdConsignacion);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetalleConsignacionConstantesFunciones.getDetalleIndiceFK_IdConsignacion(id_consignacionFK_IdConsignacion);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteDetalleConsignacions("FK_IdConsignacion",detalleconsignacionLogic.getDetalleConsignacions());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteDetalleConsignacions("FK_IdConsignacion",detalleconsignacions);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						detalleconsignacionLogic.setDetalleConsignacions(new ArrayList<DetalleConsignacion>());
						detalleconsignacionLogic.getDetalleConsignacions().addAll(detalleconsignacionsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detalleconsignacions=new ArrayList<DetalleConsignacion>();
							detalleconsignacions.addAll(detalleconsignacionsAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdEjercicio")) {
				this.sDetalleReporte=DetalleConsignacionConstantesFunciones.getDetalleIndiceFK_IdEjercicio(id_ejercicioFK_IdEjercicio);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					detalleconsignacionLogic.getDetalleConsignacionsFK_IdEjercicio(finalQueryGlobal,pagination,id_ejercicioFK_IdEjercicio);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetalleConsignacionConstantesFunciones.getDetalleIndiceFK_IdEjercicio(id_ejercicioFK_IdEjercicio);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetalleConsignacionConstantesFunciones.getDetalleIndiceFK_IdEjercicio(id_ejercicioFK_IdEjercicio);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=detalleconsignacionLogic.getDetalleConsignacions()==null||detalleconsignacionLogic.getDetalleConsignacions().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=detalleconsignacions==null|| detalleconsignacions.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						detalleconsignacionsAux=new ArrayList<DetalleConsignacion>();
						detalleconsignacionsAux.addAll(detalleconsignacionLogic.getDetalleConsignacions());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detalleconsignacionsAux=new ArrayList<DetalleConsignacion>();
							detalleconsignacionsAux.addAll(detalleconsignacions);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							detalleconsignacionLogic.getDetalleConsignacionsFK_IdEjercicio(finalQueryGlobal,pagination,id_ejercicioFK_IdEjercicio);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetalleConsignacionConstantesFunciones.getDetalleIndiceFK_IdEjercicio(id_ejercicioFK_IdEjercicio);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetalleConsignacionConstantesFunciones.getDetalleIndiceFK_IdEjercicio(id_ejercicioFK_IdEjercicio);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteDetalleConsignacions("FK_IdEjercicio",detalleconsignacionLogic.getDetalleConsignacions());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteDetalleConsignacions("FK_IdEjercicio",detalleconsignacions);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						detalleconsignacionLogic.setDetalleConsignacions(new ArrayList<DetalleConsignacion>());
						detalleconsignacionLogic.getDetalleConsignacions().addAll(detalleconsignacionsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detalleconsignacions=new ArrayList<DetalleConsignacion>();
							detalleconsignacions.addAll(detalleconsignacionsAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdEmpresa")) {
				this.sDetalleReporte=DetalleConsignacionConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					detalleconsignacionLogic.getDetalleConsignacionsFK_IdEmpresa(finalQueryGlobal,pagination,id_empresaFK_IdEmpresa);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetalleConsignacionConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetalleConsignacionConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=detalleconsignacionLogic.getDetalleConsignacions()==null||detalleconsignacionLogic.getDetalleConsignacions().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=detalleconsignacions==null|| detalleconsignacions.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						detalleconsignacionsAux=new ArrayList<DetalleConsignacion>();
						detalleconsignacionsAux.addAll(detalleconsignacionLogic.getDetalleConsignacions());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detalleconsignacionsAux=new ArrayList<DetalleConsignacion>();
							detalleconsignacionsAux.addAll(detalleconsignacions);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							detalleconsignacionLogic.getDetalleConsignacionsFK_IdEmpresa(finalQueryGlobal,pagination,id_empresaFK_IdEmpresa);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetalleConsignacionConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetalleConsignacionConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteDetalleConsignacions("FK_IdEmpresa",detalleconsignacionLogic.getDetalleConsignacions());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteDetalleConsignacions("FK_IdEmpresa",detalleconsignacions);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						detalleconsignacionLogic.setDetalleConsignacions(new ArrayList<DetalleConsignacion>());
						detalleconsignacionLogic.getDetalleConsignacions().addAll(detalleconsignacionsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detalleconsignacions=new ArrayList<DetalleConsignacion>();
							detalleconsignacions.addAll(detalleconsignacionsAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdEstadoDetallePedido")) {
				this.sDetalleReporte=DetalleConsignacionConstantesFunciones.getDetalleIndiceFK_IdEstadoDetallePedido(id_estado_detalle_pedidoFK_IdEstadoDetallePedido);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					detalleconsignacionLogic.getDetalleConsignacionsFK_IdEstadoDetallePedido(finalQueryGlobal,pagination,id_estado_detalle_pedidoFK_IdEstadoDetallePedido);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetalleConsignacionConstantesFunciones.getDetalleIndiceFK_IdEstadoDetallePedido(id_estado_detalle_pedidoFK_IdEstadoDetallePedido);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetalleConsignacionConstantesFunciones.getDetalleIndiceFK_IdEstadoDetallePedido(id_estado_detalle_pedidoFK_IdEstadoDetallePedido);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=detalleconsignacionLogic.getDetalleConsignacions()==null||detalleconsignacionLogic.getDetalleConsignacions().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=detalleconsignacions==null|| detalleconsignacions.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						detalleconsignacionsAux=new ArrayList<DetalleConsignacion>();
						detalleconsignacionsAux.addAll(detalleconsignacionLogic.getDetalleConsignacions());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detalleconsignacionsAux=new ArrayList<DetalleConsignacion>();
							detalleconsignacionsAux.addAll(detalleconsignacions);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							detalleconsignacionLogic.getDetalleConsignacionsFK_IdEstadoDetallePedido(finalQueryGlobal,pagination,id_estado_detalle_pedidoFK_IdEstadoDetallePedido);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetalleConsignacionConstantesFunciones.getDetalleIndiceFK_IdEstadoDetallePedido(id_estado_detalle_pedidoFK_IdEstadoDetallePedido);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetalleConsignacionConstantesFunciones.getDetalleIndiceFK_IdEstadoDetallePedido(id_estado_detalle_pedidoFK_IdEstadoDetallePedido);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteDetalleConsignacions("FK_IdEstadoDetallePedido",detalleconsignacionLogic.getDetalleConsignacions());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteDetalleConsignacions("FK_IdEstadoDetallePedido",detalleconsignacions);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						detalleconsignacionLogic.setDetalleConsignacions(new ArrayList<DetalleConsignacion>());
						detalleconsignacionLogic.getDetalleConsignacions().addAll(detalleconsignacionsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detalleconsignacions=new ArrayList<DetalleConsignacion>();
							detalleconsignacions.addAll(detalleconsignacionsAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdPeriodo")) {
				this.sDetalleReporte=DetalleConsignacionConstantesFunciones.getDetalleIndiceFK_IdPeriodo(id_periodoFK_IdPeriodo);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					detalleconsignacionLogic.getDetalleConsignacionsFK_IdPeriodo(finalQueryGlobal,pagination,id_periodoFK_IdPeriodo);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetalleConsignacionConstantesFunciones.getDetalleIndiceFK_IdPeriodo(id_periodoFK_IdPeriodo);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetalleConsignacionConstantesFunciones.getDetalleIndiceFK_IdPeriodo(id_periodoFK_IdPeriodo);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=detalleconsignacionLogic.getDetalleConsignacions()==null||detalleconsignacionLogic.getDetalleConsignacions().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=detalleconsignacions==null|| detalleconsignacions.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						detalleconsignacionsAux=new ArrayList<DetalleConsignacion>();
						detalleconsignacionsAux.addAll(detalleconsignacionLogic.getDetalleConsignacions());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detalleconsignacionsAux=new ArrayList<DetalleConsignacion>();
							detalleconsignacionsAux.addAll(detalleconsignacions);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							detalleconsignacionLogic.getDetalleConsignacionsFK_IdPeriodo(finalQueryGlobal,pagination,id_periodoFK_IdPeriodo);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetalleConsignacionConstantesFunciones.getDetalleIndiceFK_IdPeriodo(id_periodoFK_IdPeriodo);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetalleConsignacionConstantesFunciones.getDetalleIndiceFK_IdPeriodo(id_periodoFK_IdPeriodo);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteDetalleConsignacions("FK_IdPeriodo",detalleconsignacionLogic.getDetalleConsignacions());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteDetalleConsignacions("FK_IdPeriodo",detalleconsignacions);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						detalleconsignacionLogic.setDetalleConsignacions(new ArrayList<DetalleConsignacion>());
						detalleconsignacionLogic.getDetalleConsignacions().addAll(detalleconsignacionsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detalleconsignacions=new ArrayList<DetalleConsignacion>();
							detalleconsignacions.addAll(detalleconsignacionsAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdProducto")) {
				this.sDetalleReporte=DetalleConsignacionConstantesFunciones.getDetalleIndiceFK_IdProducto(id_productoFK_IdProducto);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					detalleconsignacionLogic.getDetalleConsignacionsFK_IdProducto(finalQueryGlobal,pagination,id_productoFK_IdProducto);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetalleConsignacionConstantesFunciones.getDetalleIndiceFK_IdProducto(id_productoFK_IdProducto);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetalleConsignacionConstantesFunciones.getDetalleIndiceFK_IdProducto(id_productoFK_IdProducto);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=detalleconsignacionLogic.getDetalleConsignacions()==null||detalleconsignacionLogic.getDetalleConsignacions().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=detalleconsignacions==null|| detalleconsignacions.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						detalleconsignacionsAux=new ArrayList<DetalleConsignacion>();
						detalleconsignacionsAux.addAll(detalleconsignacionLogic.getDetalleConsignacions());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detalleconsignacionsAux=new ArrayList<DetalleConsignacion>();
							detalleconsignacionsAux.addAll(detalleconsignacions);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							detalleconsignacionLogic.getDetalleConsignacionsFK_IdProducto(finalQueryGlobal,pagination,id_productoFK_IdProducto);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetalleConsignacionConstantesFunciones.getDetalleIndiceFK_IdProducto(id_productoFK_IdProducto);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetalleConsignacionConstantesFunciones.getDetalleIndiceFK_IdProducto(id_productoFK_IdProducto);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteDetalleConsignacions("FK_IdProducto",detalleconsignacionLogic.getDetalleConsignacions());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteDetalleConsignacions("FK_IdProducto",detalleconsignacions);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						detalleconsignacionLogic.setDetalleConsignacions(new ArrayList<DetalleConsignacion>());
						detalleconsignacionLogic.getDetalleConsignacions().addAll(detalleconsignacionsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detalleconsignacions=new ArrayList<DetalleConsignacion>();
							detalleconsignacions.addAll(detalleconsignacionsAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdSucursal")) {
				this.sDetalleReporte=DetalleConsignacionConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					detalleconsignacionLogic.getDetalleConsignacionsFK_IdSucursal(finalQueryGlobal,pagination,id_sucursalFK_IdSucursal);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetalleConsignacionConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetalleConsignacionConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=detalleconsignacionLogic.getDetalleConsignacions()==null||detalleconsignacionLogic.getDetalleConsignacions().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=detalleconsignacions==null|| detalleconsignacions.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						detalleconsignacionsAux=new ArrayList<DetalleConsignacion>();
						detalleconsignacionsAux.addAll(detalleconsignacionLogic.getDetalleConsignacions());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detalleconsignacionsAux=new ArrayList<DetalleConsignacion>();
							detalleconsignacionsAux.addAll(detalleconsignacions);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							detalleconsignacionLogic.getDetalleConsignacionsFK_IdSucursal(finalQueryGlobal,pagination,id_sucursalFK_IdSucursal);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetalleConsignacionConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetalleConsignacionConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteDetalleConsignacions("FK_IdSucursal",detalleconsignacionLogic.getDetalleConsignacions());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteDetalleConsignacions("FK_IdSucursal",detalleconsignacions);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						detalleconsignacionLogic.setDetalleConsignacions(new ArrayList<DetalleConsignacion>());
						detalleconsignacionLogic.getDetalleConsignacions().addAll(detalleconsignacionsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detalleconsignacions=new ArrayList<DetalleConsignacion>();
							detalleconsignacions.addAll(detalleconsignacionsAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdUnidad")) {
				this.sDetalleReporte=DetalleConsignacionConstantesFunciones.getDetalleIndiceFK_IdUnidad(id_unidadFK_IdUnidad);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					detalleconsignacionLogic.getDetalleConsignacionsFK_IdUnidad(finalQueryGlobal,pagination,id_unidadFK_IdUnidad);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetalleConsignacionConstantesFunciones.getDetalleIndiceFK_IdUnidad(id_unidadFK_IdUnidad);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetalleConsignacionConstantesFunciones.getDetalleIndiceFK_IdUnidad(id_unidadFK_IdUnidad);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=detalleconsignacionLogic.getDetalleConsignacions()==null||detalleconsignacionLogic.getDetalleConsignacions().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=detalleconsignacions==null|| detalleconsignacions.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						detalleconsignacionsAux=new ArrayList<DetalleConsignacion>();
						detalleconsignacionsAux.addAll(detalleconsignacionLogic.getDetalleConsignacions());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detalleconsignacionsAux=new ArrayList<DetalleConsignacion>();
							detalleconsignacionsAux.addAll(detalleconsignacions);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							detalleconsignacionLogic.getDetalleConsignacionsFK_IdUnidad(finalQueryGlobal,pagination,id_unidadFK_IdUnidad);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetalleConsignacionConstantesFunciones.getDetalleIndiceFK_IdUnidad(id_unidadFK_IdUnidad);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetalleConsignacionConstantesFunciones.getDetalleIndiceFK_IdUnidad(id_unidadFK_IdUnidad);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteDetalleConsignacions("FK_IdUnidad",detalleconsignacionLogic.getDetalleConsignacions());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteDetalleConsignacions("FK_IdUnidad",detalleconsignacions);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						detalleconsignacionLogic.setDetalleConsignacions(new ArrayList<DetalleConsignacion>());
						detalleconsignacionLogic.getDetalleConsignacions().addAll(detalleconsignacionsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detalleconsignacions=new ArrayList<DetalleConsignacion>();
							detalleconsignacions.addAll(detalleconsignacionsAux);
						}
						//ARCHITECTURE
					}
				}

			} 
		
		
		
		this.redimensionarTablaDatos();
		//this.refrescarForeignKeysDescripcionesDetalleConsignacion();
		
		this.traerValoresTablaTotales();	
		/*
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.arrDatoGeneralTotales=DetalleConsignacionConstantesFunciones.getTotalesListaDetalleConsignacion(detalleconsignacionLogic.getDetalleConsignacions());							
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			this.arrDatoGeneralTotales=DetalleConsignacionConstantesFunciones.getTotalesListaDetalleConsignacion(this.detalleconsignacions);
		}
		*/
		
		if(this.conTotales) {
			this.crearFilaTotales();
		}		
		} catch (JRException e) {
			throw e;
		} catch(Exception e) {
			throw e;
      	} finally {
      		//this.finishProcessDetalleConsignacion();
      	}
		
	}				
	
	public void redimensionarTablaDatos() throws Exception {
		int iSizeTabla=0;
				
		iSizeTabla=this.getSizeTablaDatos();
		
		//ARCHITECTURE
		/*
		if(Constantes.ISUSAEJBLOGICLAYER) {	
			iSizeTabla=detalleconsignacionLogic.getDetalleConsignacions().size();
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			iSizeTabla=detalleconsignacions.size();
		}
		*/
		//ARCHITECTURE
											
		this.redimensionarTablaDatos(iSizeTabla);		
	}
	
	public Integer getSizeTablaDatos() throws Exception {
		Integer iSizeTabla=0;
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {	
			iSizeTabla=detalleconsignacionLogic.getDetalleConsignacions().size();
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			iSizeTabla=detalleconsignacions.size();
		}
		//ARCHITECTURE
											
		return iSizeTabla;		
	}
	
			
	public Boolean permiteMantenimiento(DetalleConsignacion detalleconsignacion) {
		Boolean permite=true;
		
		if(this.detalleconsignacion.getsType().equals(Constantes2.S_TOTALES)) {
			permite=false;
		}
		
		return permite;
	}
	
	public void traerValoresTablaTotales() throws Exception {
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.arrDatoGeneralTotales=DetalleConsignacionConstantesFunciones.getTotalesListaDetalleConsignacion(detalleconsignacionLogic.getDetalleConsignacions());							
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			this.arrDatoGeneralTotales=DetalleConsignacionConstantesFunciones.getTotalesListaDetalleConsignacion(this.detalleconsignacions);
		}
	}
	
	
	public void traerValoresTablaOrderBy() throws Exception {
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.arrOrderBy=DetalleConsignacionConstantesFunciones.getOrderByListaDetalleConsignacion();							
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			this.arrOrderBy=DetalleConsignacionConstantesFunciones.getOrderByListaDetalleConsignacion();
		}		
	}
	
	
	public Boolean existeFilaTotales() throws Exception {
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(DetalleConsignacion detalleconsignacion:detalleconsignacionLogic.getDetalleConsignacions()) {
				if(detalleconsignacion.getsType().equals(Constantes2.S_TOTALES)) {
					detalleconsignacionTotales=detalleconsignacion;
					existe=true;
					break;
				}
			}
								
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(DetalleConsignacion detalleconsignacion:this.detalleconsignacions) {
				if(detalleconsignacion.getsType().equals(Constantes2.S_TOTALES)) {
					detalleconsignacionTotales=detalleconsignacion;
					existe=true;
					break;
				}
			}
		}
		
		return existe;
	}
	
	public void crearFilaTotales() throws Exception {
		Boolean existe=false;
		
		existe=this.existeFilaTotales();
		
		if(!existe) {
			//SI NO ES UNO A UNO SE CREA FILA TOTALES
			this.detalleconsignacionAux=new DetalleConsignacion();
			this.detalleconsignacionAux.setsType(Constantes2.S_TOTALES);
			this.detalleconsignacionAux.setIsNew(false);
			this.detalleconsignacionAux.setIsChanged(false);
			this.detalleconsignacionAux.setIsDeleted(false);
				
			if(Constantes.ISUSAEJBLOGICLAYER) {
				DetalleConsignacionConstantesFunciones.TotalizarValoresFilaDetalleConsignacion(this.detalleconsignacionLogic.getDetalleConsignacions(),this.detalleconsignacionAux);
				
				this.detalleconsignacionLogic.getDetalleConsignacions().add(this.detalleconsignacionAux);
				
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
				DetalleConsignacionConstantesFunciones.TotalizarValoresFilaDetalleConsignacion(this.detalleconsignacions,this.detalleconsignacionAux);
				
				this.detalleconsignacions.add(this.detalleconsignacionAux);
			}
		}
	}
	
	public void quitarFilaTotales() throws Exception {
		detalleconsignacionTotales=new DetalleConsignacion();
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			existe=this.existeFilaTotales();
			
			if(existe) {
				this.detalleconsignacionLogic.getDetalleConsignacions().remove(detalleconsignacionTotales);
			}			
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			existe=this.existeFilaTotales();
			
			if(existe) {
				this.detalleconsignacions.remove(detalleconsignacionTotales);
			}
		}
	}
	
	public void actualizarFilaTotales() throws Exception {
		detalleconsignacionTotales=new DetalleConsignacion();
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(DetalleConsignacion detalleconsignacion:detalleconsignacionLogic.getDetalleConsignacions()) {
				if(detalleconsignacion.getsType().equals(Constantes2.S_TOTALES)) {
					detalleconsignacionTotales=detalleconsignacion;
					existe=true;
					break;
				}
			}
			
			if(existe) {
				DetalleConsignacionConstantesFunciones.TotalizarValoresFilaDetalleConsignacion(this.detalleconsignacionLogic.getDetalleConsignacions(),detalleconsignacionTotales);
			}			
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(DetalleConsignacion detalleconsignacion:this.detalleconsignacions) {
				if(detalleconsignacion.getsType().equals(Constantes2.S_TOTALES)) {
					detalleconsignacionTotales=detalleconsignacion;
					existe=true;
					break;
				}
			}
			
			if(existe) {
				DetalleConsignacionConstantesFunciones.TotalizarValoresFilaDetalleConsignacion(this.detalleconsignacions,detalleconsignacionTotales);
			}
		}
	}		
	
	public void recargarInformacion()throws Exception {
		try {
			sAccionBusqueda="Todos";
			this.iNumeroPaginacionPagina=0;
			
			this.procesarBusqueda(sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleConsignacionConstantesFunciones.CLASSNAME);
		}	
	}		
	
	
	public void getDetalleConsignacionsFK_IdAnio()throws Exception {
		try {
			sAccionBusqueda="FK_IdAnio";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getDetalleConsignacionsFK_IdBodega()throws Exception {
		try {
			sAccionBusqueda="FK_IdBodega";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getDetalleConsignacionsFK_IdConsignacion()throws Exception {
		try {
			sAccionBusqueda="FK_IdConsignacion";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getDetalleConsignacionsFK_IdEjercicio()throws Exception {
		try {
			sAccionBusqueda="FK_IdEjercicio";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getDetalleConsignacionsFK_IdEmpresa()throws Exception {
		try {
			sAccionBusqueda="FK_IdEmpresa";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getDetalleConsignacionsFK_IdEstadoDetallePedido()throws Exception {
		try {
			sAccionBusqueda="FK_IdEstadoDetallePedido";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getDetalleConsignacionsFK_IdMes()throws Exception {
		try {
			sAccionBusqueda="FK_IdMes";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getDetalleConsignacionsFK_IdPeriodo()throws Exception {
		try {
			sAccionBusqueda="FK_IdPeriodo";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getDetalleConsignacionsFK_IdProducto()throws Exception {
		try {
			sAccionBusqueda="FK_IdProducto";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getDetalleConsignacionsFK_IdSucursal()throws Exception {
		try {
			sAccionBusqueda="FK_IdSucursal";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getDetalleConsignacionsFK_IdUnidad()throws Exception {
		try {
			sAccionBusqueda="FK_IdUnidad";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	
	
	public void getDetalleConsignacionsFK_IdAnio(String sFinalQuery,Long id_anio)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					detalleconsignacionLogic.getDetalleConsignacionsFK_IdAnio(sFinalQuery,this.pagination,id_anio);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getDetalleConsignacionsFK_IdBodega(String sFinalQuery,Long id_bodega)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					detalleconsignacionLogic.getDetalleConsignacionsFK_IdBodega(sFinalQuery,this.pagination,id_bodega);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getDetalleConsignacionsFK_IdConsignacion(String sFinalQuery,Long id_consignacion)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					detalleconsignacionLogic.getDetalleConsignacionsFK_IdConsignacion(sFinalQuery,this.pagination,id_consignacion);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getDetalleConsignacionsFK_IdEjercicio(String sFinalQuery,Long id_ejercicio)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					detalleconsignacionLogic.getDetalleConsignacionsFK_IdEjercicio(sFinalQuery,this.pagination,id_ejercicio);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getDetalleConsignacionsFK_IdEmpresa(String sFinalQuery,Long id_empresa)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					detalleconsignacionLogic.getDetalleConsignacionsFK_IdEmpresa(sFinalQuery,this.pagination,id_empresa);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getDetalleConsignacionsFK_IdEstadoDetallePedido(String sFinalQuery,Long id_estado_detalle_pedido)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					detalleconsignacionLogic.getDetalleConsignacionsFK_IdEstadoDetallePedido(sFinalQuery,this.pagination,id_estado_detalle_pedido);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getDetalleConsignacionsFK_IdMes(String sFinalQuery,Long id_mes)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					detalleconsignacionLogic.getDetalleConsignacionsFK_IdMes(sFinalQuery,this.pagination,id_mes);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getDetalleConsignacionsFK_IdPeriodo(String sFinalQuery,Long id_periodo)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					detalleconsignacionLogic.getDetalleConsignacionsFK_IdPeriodo(sFinalQuery,this.pagination,id_periodo);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getDetalleConsignacionsFK_IdProducto(String sFinalQuery,Long id_producto)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					detalleconsignacionLogic.getDetalleConsignacionsFK_IdProducto(sFinalQuery,this.pagination,id_producto);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getDetalleConsignacionsFK_IdSucursal(String sFinalQuery,Long id_sucursal)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					detalleconsignacionLogic.getDetalleConsignacionsFK_IdSucursal(sFinalQuery,this.pagination,id_sucursal);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getDetalleConsignacionsFK_IdUnidad(String sFinalQuery,Long id_unidad)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					detalleconsignacionLogic.getDetalleConsignacionsFK_IdUnidad(sFinalQuery,this.pagination,id_unidad);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	
	public void onLoad()throws Exception {		
		try {		
			isEntroOnLoad=true;
			//INTENTA TRAER DATOS DE BUSQUEDA ANTERIOR
			this.traerDatosBusquedaDesdeSession();
					
			//SINO SE CUMPLE VIENE DE PADRE FOREIGN O BUSQUEDA ANTIGUA
			if(this.sAccionBusqueda.equals("")) {
				this.sAccionBusqueda="Todos";
			}
								
			this.procesarBusqueda(sAccionBusqueda);
			
		} catch (Exception e) {
			throw e;
		}
	}		
	
	public void inicializarPermisosDetalleConsignacion() {
		this.isPermisoTodoDetalleConsignacion=false;
		this.isPermisoNuevoDetalleConsignacion=false;
		this.isPermisoActualizarDetalleConsignacion=false;
		this.isPermisoActualizarOriginalDetalleConsignacion=false;
		this.isPermisoEliminarDetalleConsignacion=false;
		this.isPermisoGuardarCambiosDetalleConsignacion=false;
		this.isPermisoConsultaDetalleConsignacion=false;
		this.isPermisoBusquedaDetalleConsignacion=false;
		this.isPermisoReporteDetalleConsignacion=false;		
		this.isPermisoOrdenDetalleConsignacion=false;		
		this.isPermisoPaginacionMedioDetalleConsignacion=false;		
		this.isPermisoPaginacionAltoDetalleConsignacion=false;
		this.isPermisoPaginacionTodoDetalleConsignacion=false;
		this.isPermisoCopiarDetalleConsignacion=false;		
		this.isPermisoVerFormDetalleConsignacion=false;		
		this.isPermisoDuplicarDetalleConsignacion=false;		
		this.isPermisoOrdenDetalleConsignacion=false;		
	}
	
	public void setPermisosUsuarioDetalleConsignacion(Boolean isPermiso) {
		this.isPermisoTodoDetalleConsignacion=isPermiso;
		this.isPermisoNuevoDetalleConsignacion=isPermiso;
		this.isPermisoActualizarDetalleConsignacion=isPermiso;
		this.isPermisoActualizarOriginalDetalleConsignacion=isPermiso;
		this.isPermisoEliminarDetalleConsignacion=isPermiso;
		this.isPermisoGuardarCambiosDetalleConsignacion=isPermiso;
		this.isPermisoConsultaDetalleConsignacion=isPermiso;
		this.isPermisoBusquedaDetalleConsignacion=isPermiso;
		this.isPermisoReporteDetalleConsignacion=isPermiso;
		this.isPermisoOrdenDetalleConsignacion=isPermiso;		
		this.isPermisoPaginacionMedioDetalleConsignacion=isPermiso;		
		this.isPermisoPaginacionAltoDetalleConsignacion=isPermiso;		
		this.isPermisoPaginacionTodoDetalleConsignacion=isPermiso;		
		this.isPermisoCopiarDetalleConsignacion=isPermiso;		
		this.isPermisoVerFormDetalleConsignacion=isPermiso;		
		this.isPermisoDuplicarDetalleConsignacion=isPermiso;
		this.isPermisoOrdenDetalleConsignacion=isPermiso;
	}
	
	public void setPermisosMantenimientoUsuarioDetalleConsignacion(Boolean isPermiso) {
		//this.isPermisoTodoDetalleConsignacion=isPermiso;
		this.isPermisoNuevoDetalleConsignacion=isPermiso;
		this.isPermisoActualizarDetalleConsignacion=isPermiso;
		this.isPermisoActualizarOriginalDetalleConsignacion=isPermiso;
		this.isPermisoEliminarDetalleConsignacion=isPermiso;
		this.isPermisoGuardarCambiosDetalleConsignacion=isPermiso;
		//this.isPermisoConsultaDetalleConsignacion=isPermiso;
		//this.isPermisoBusquedaDetalleConsignacion=isPermiso;
		//this.isPermisoReporteDetalleConsignacion=isPermiso;
		//this.isPermisoOrdenDetalleConsignacion=isPermiso;		
		//this.isPermisoPaginacionMedioDetalleConsignacion=isPermiso;		
		//this.isPermisoPaginacionAltoDetalleConsignacion=isPermiso;		
		//this.isPermisoPaginacionTodoDetalleConsignacion=isPermiso;		
		//this.isPermisoCopiarDetalleConsignacion=isPermiso;		
		//this.isPermisoDuplicarDetalleConsignacion=isPermiso;
		//this.isPermisoOrdenDetalleConsignacion=isPermiso;
	}
	
	public void inicializarSetPermisosUsuarioDetalleConsignacionClasesRelacionadas() throws Exception {
		ArrayList<String> arrPaginas=new ArrayList<String>();		
		ArrayList<Opcion> opcionsFinal=new ArrayList<Opcion>();	
		
		
		if(DetalleConsignacionJInternalFrame.CON_LLAMADA_SIMPLE) {
			this.opcionsRelacionadas.addAll(this.sistemaReturnGeneral.getOpcionsRelacionadas());
			
		} else {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				opcionsFinal=sistemaLogicAdditional.tienePermisosOpcionesEnPaginaWeb(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, arrPaginas);
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}
			
			this.opcionsRelacionadas.addAll(opcionsFinal);
		}
		
		
		
	}
	
	public Boolean tienePermisosUsuarioEnPaginaWebDetalleConsignacion(String sPagina) throws Exception {
		Boolean tienePermisos=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			tienePermisos=sistemaLogicAdditional.tienePermisosEnPaginaWeb(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, sPagina);
		} else if(Constantes.ISUSAEJBREMOTE) {
		} else if(Constantes.ISUSAEJBHOME) {
		}
		
		return tienePermisos;
	}
	
	public void inicializarSetPermisosUsuarioDetalleConsignacionClasesRelacionadas(Boolean conPermiso) throws Exception {
		
	}
	
	public Boolean verificarGetPermisosUsuarioDetalleConsignacionClaseRelacionada(ArrayList<String> arrPaginasFinal,String sPaginaActual) throws Exception {
		Boolean verificado=false;
		
		verificado=Funciones2.verificarGetPermisosUsuarioClaseRelacionada(arrPaginasFinal,sPaginaActual);				
		
		return verificado;
	}
	
	public Boolean verificarGetPermisosUsuarioOpcionDetalleConsignacionClaseRelacionada(List<Opcion> opcionsFinal,String sPaginaActual) throws Exception {
		Boolean verificado=false;
		
		verificado=Funciones2.verificarGetPermisosUsuarioOpcionClaseRelacionada(opcionsFinal,sPaginaActual);				
		
		return verificado;
	}
	
	public void actualizarTabsSetPermisosUsuarioDetalleConsignacionClasesRelacionadas() throws Exception {
		
	}
	
	public void setPermisosUsuarioDetalleConsignacion() throws Exception {
		
		PerfilOpcion perfilOpcionUsuario=new PerfilOpcion();		
		Long idOpcion=this.opcionActual.getId();
		
		if(DetalleConsignacionJInternalFrame.CON_LLAMADA_SIMPLE) {
			perfilOpcionUsuario=this.sistemaReturnGeneral.getPerfilOpcion();
			
		} else {
			if(this.detalleconsignacionSessionBean.getEsGuardarRelacionado()) {
				idOpcion=0L;
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				perfilOpcionUsuario=sistemaLogicAdditional.traerPermisosPaginaWebPerfilOpcion(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, DetalleConsignacionConstantesFunciones.SNOMBREOPCION,idOpcion);				
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}
		}
		
		if(perfilOpcionUsuario!=null && perfilOpcionUsuario.getId()>0) {
			this.isPermisoNuevoDetalleConsignacion=perfilOpcionUsuario.getingreso()||perfilOpcionUsuario.gettodo();
			this.isPermisoActualizarDetalleConsignacion=perfilOpcionUsuario.getmodificacion()||perfilOpcionUsuario.gettodo();
			this.isPermisoActualizarOriginalDetalleConsignacion=this.isPermisoActualizarDetalleConsignacion;
			this.isPermisoEliminarDetalleConsignacion=perfilOpcionUsuario.geteliminacion()||perfilOpcionUsuario.gettodo();
			this.isPermisoGuardarCambiosDetalleConsignacion=perfilOpcionUsuario.getguardar_cambios()||perfilOpcionUsuario.gettodo();
			this.isPermisoConsultaDetalleConsignacion=perfilOpcionUsuario.getconsulta()||perfilOpcionUsuario.gettodo();
			this.isPermisoBusquedaDetalleConsignacion=perfilOpcionUsuario.getbusqueda()||perfilOpcionUsuario.gettodo();
			this.isPermisoTodoDetalleConsignacion=perfilOpcionUsuario.gettodo()||perfilOpcionUsuario.gettodo();
			this.isPermisoReporteDetalleConsignacion=perfilOpcionUsuario.getreporte()||perfilOpcionUsuario.gettodo();
			this.isPermisoOrdenDetalleConsignacion=perfilOpcionUsuario.getorden()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionMedioDetalleConsignacion=perfilOpcionUsuario.getpaginacion_medio()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionAltoDetalleConsignacion=perfilOpcionUsuario.getpaginacion_alto()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionTodoDetalleConsignacion=perfilOpcionUsuario.getpaginacion_todo()||perfilOpcionUsuario.gettodo();
			this.isPermisoCopiarDetalleConsignacion=perfilOpcionUsuario.getcopiar()||perfilOpcionUsuario.gettodo();
			this.isPermisoVerFormDetalleConsignacion=true;//perfilOpcionUsuario.getver_form()||perfilOpcionUsuario.gettodo();
			this.isPermisoDuplicarDetalleConsignacion=perfilOpcionUsuario.getduplicar()||perfilOpcionUsuario.gettodo();
			this.isPermisoOrdenDetalleConsignacion=perfilOpcionUsuario.getorden()||perfilOpcionUsuario.gettodo();
			
			if(this.detalleconsignacionSessionBean.getEsGuardarRelacionado()) {
				this.opcionActual.setId(perfilOpcionUsuario.getid_opcion());
				
				this.jTableDatosDetalleConsignacion.setToolTipText(this.jTableDatosDetalleConsignacion.getToolTipText()+"_"+perfilOpcionUsuario.getid_opcion());		
			}
		} else {
			this.setPermisosUsuarioDetalleConsignacion(false);
		}
		
		//SI SE NECESITA PONER TODOS LOS PERMISOS POR DEFECTO
		//
		
	}
	
	public void setAccionesUsuarioDetalleConsignacion(Boolean esParaAccionesFormulario) throws Exception {		
		Reporte reporte=null;
		
		if(!esParaAccionesFormulario) {
			this.accions=new ArrayList<Accion>();
			
			if(DetalleConsignacionJInternalFrame.CON_LLAMADA_SIMPLE) {
				this.accions=this.sistemaReturnGeneral.getAccions();
				
				
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.accions=sistemaLogicAdditional.getAccionesUsuario(this.usuarioActual,this.opcionActual,false);				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}
			
			if(this.accions.size()>0) {			
				for(Accion accion:this.accions) {
					reporte=new Reporte();
					reporte.setsCodigo(accion.getcodigo());
					reporte.setsDescripcion(accion.getnombre());
		
		
					this.tiposAcciones.add(reporte);
				}
			}	
			
			

			reporte=new Reporte();
			reporte.setsCodigo("");
			reporte.setsDescripcion("");

			this.tiposAcciones.add(reporte);
			
		} else {
			//ACCIONES FORMULARIO
			this.accionsFormulario=new ArrayList<Accion>();
			
			if(DetalleConsignacionJInternalFrame.CON_LLAMADA_SIMPLE) {
				this.accionsFormulario=this.sistemaReturnGeneral.getAccionsFormulario();
			
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.accionsFormulario=sistemaLogicAdditional.getAccionesUsuario(this.usuarioActual,this.opcionActual,true);				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}
			
			if(this.accionsFormulario.size()>0) {			
				for(Accion accion:this.accionsFormulario) {
					reporte=new Reporte();
					reporte.setsCodigo(accion.getcodigo());
					reporte.setsDescripcion(accion.getnombre());
					
					this.tiposAccionesFormulario.add(reporte);
				}
			}	
			
			

			reporte=new Reporte();
			reporte.setsCodigo("");
			reporte.setsDescripcion("");

			this.tiposAccionesFormulario.add(reporte);
		}				
	}	 	
	
	public void setRelacionesUsuarioDetalleConsignacion() throws Exception {
		Reporte reporte=null;
		
		
		
		
		//ORDENAR ALFABETICAMENTE
		Collections.sort(this.tiposRelaciones, new ReporteComparator());
		/*
		reporte=new Reporte();
		reporte.setsCodigo(accion.getcodigo());
		reporte.setsDescripcion(accion.getnombre());
			
		this.tiposRelaciones.add(reporte);
		*/
	}	
	
		
	@SuppressWarnings({ "unchecked", "rawtypes" } )
	public void inicializarCombosForeignKeyDetalleConsignacionListas()throws Exception {
		try	{						
			
				this.empresasForeignKey=new ArrayList();
				this.sucursalsForeignKey=new ArrayList();
				this.ejerciciosForeignKey=new ArrayList();
				this.periodosForeignKey=new ArrayList();
				this.aniosForeignKey=new ArrayList();
				this.messForeignKey=new ArrayList();
				this.consignacionsForeignKey=new ArrayList();
				this.productosForeignKey=new ArrayList();
				this.bodegasForeignKey=new ArrayList();
				this.unidadsForeignKey=new ArrayList();
				this.estadodetallepedidosForeignKey=new ArrayList();
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void cargarCombosTodosForeignKeyDetalleConsignacionListas(Boolean cargarCombosDependencia)throws Exception {
		try	{
			
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			String sFinalQueryCombo="";
			
			Modulo  moduloActualAux=new Modulo();
			
			if(DetalleConsignacionJInternalFrame.ISLOAD_FKLOTE) {
				this.cargarCombosLoteForeignKeyDetalleConsignacionListas(false);
			} else {
			
				this.cargarCombosForeignKeyEmpresaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeySucursalListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyEjercicioListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyPeriodoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyAnioListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyMesListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyConsignacionListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyProductoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyBodegaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyUnidadListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyEstadoDetallePedidoListas(cargarCombosDependencia,sFinalQueryCombo);
			}
		} catch(Exception e) {
			throw e;
		}		
	}		
	
	

	public void cargarCombosForeignKeyEmpresaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.empresasForeignKey==null||this.empresasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=EmpresaConstantesFunciones.getArrayColumnasGlobalesEmpresa(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EmpresaConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=EmpresaConstantesFunciones.SFINALQUERY;

				this.cargarCombosEmpresasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeySucursalListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.sucursalsForeignKey==null||this.sucursalsForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=SucursalConstantesFunciones.getArrayColumnasGlobalesSucursal(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,SucursalConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=SucursalConstantesFunciones.SFINALQUERY;

				this.cargarCombosSucursalsForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyEjercicioListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.ejerciciosForeignKey==null||this.ejerciciosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=EjercicioConstantesFunciones.getArrayColumnasGlobalesEjercicio(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EjercicioConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=EjercicioConstantesFunciones.SFINALQUERY;

				this.cargarCombosEjerciciosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyPeriodoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.periodosForeignKey==null||this.periodosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=PeriodoConstantesFunciones.getArrayColumnasGlobalesPeriodo(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,PeriodoConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=PeriodoConstantesFunciones.SFINALQUERY;

				this.cargarCombosPeriodosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyAnioListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.aniosForeignKey==null||this.aniosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=AnioConstantesFunciones.getArrayColumnasGlobalesAnio(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,AnioConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=AnioConstantesFunciones.SFINALQUERY;

				this.cargarCombosAniosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyMesListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.messForeignKey==null||this.messForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=MesConstantesFunciones.getArrayColumnasGlobalesMes(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,MesConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=MesConstantesFunciones.SFINALQUERY;

				this.cargarCombosMessForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyConsignacionListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.consignacionsForeignKey==null||this.consignacionsForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=ConsignacionConstantesFunciones.getArrayColumnasGlobalesConsignacion(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,ConsignacionConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=ConsignacionConstantesFunciones.SFINALQUERY;

				this.cargarCombosConsignacionsForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyProductoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if(cargarCombosDependencia && (this.productosForeignKey==null||this.productosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=ProductoConstantesFunciones.getArrayColumnasGlobalesProducto(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,ProductoConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=ProductoConstantesFunciones.SFINALQUERY;

				this.cargarCombosProductosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyBodegaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.bodegasForeignKey==null||this.bodegasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=BodegaConstantesFunciones.getArrayColumnasGlobalesBodega(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,BodegaConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=BodegaConstantesFunciones.SFINALQUERY;

				this.cargarCombosBodegasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyUnidadListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if(cargarCombosDependencia && (this.unidadsForeignKey==null||this.unidadsForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=UnidadConstantesFunciones.getArrayColumnasGlobalesUnidad(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,UnidadConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=UnidadConstantesFunciones.SFINALQUERY;

				this.cargarCombosUnidadsForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyEstadoDetallePedidoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.estadodetallepedidosForeignKey==null||this.estadodetallepedidosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=EstadoDetallePedidoConstantesFunciones.getArrayColumnasGlobalesEstadoDetallePedido(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EstadoDetallePedidoConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=EstadoDetallePedidoConstantesFunciones.SFINALQUERY;

				this.cargarCombosEstadoDetallePedidosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}
	
	public void cargarCombosLoteForeignKeyDetalleConsignacionListas(Boolean cargarCombosDependencia)throws Exception {
		try	{
			
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			
			Modulo  moduloActualAux=new Modulo();
			
			
			DetalleConsignacionParameterReturnGeneral detalleconsignacionReturnGeneral=new DetalleConsignacionParameterReturnGeneral();
						
			


				String finalQueryGlobalEmpresa="";

				if(((this.empresasForeignKey==null||this.empresasForeignKey.size()<=0) && this.detalleconsignacionConstantesFunciones.cargarid_empresaDetalleConsignacion)
					 || (this.esRecargarFks && this.detalleconsignacionConstantesFunciones.cargarid_empresaDetalleConsignacion)) {

					if(!this.detalleconsignacionSessionBean.getisBusquedaDesdeForeignKeySesionEmpresa()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=EmpresaConstantesFunciones.getArrayColumnasGlobalesEmpresa(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalEmpresa=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EmpresaConstantesFunciones.TABLENAME);

						finalQueryGlobalEmpresa=Funciones.GetFinalQueryAppend(finalQueryGlobalEmpresa, "");
						finalQueryGlobalEmpresa+=EmpresaConstantesFunciones.SFINALQUERY;

						//this.cargarCombosEmpresasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalEmpresa=" WHERE " + ConstantesSql.ID + "="+detalleconsignacionSessionBean.getlidEmpresaActual();
					}
				} else {
					finalQueryGlobalEmpresa="NONE";
				}


				String finalQueryGlobalSucursal="";

				if(((this.sucursalsForeignKey==null||this.sucursalsForeignKey.size()<=0) && this.detalleconsignacionConstantesFunciones.cargarid_sucursalDetalleConsignacion)
					 || (this.esRecargarFks && this.detalleconsignacionConstantesFunciones.cargarid_sucursalDetalleConsignacion)) {

					if(!this.detalleconsignacionSessionBean.getisBusquedaDesdeForeignKeySesionSucursal()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=SucursalConstantesFunciones.getArrayColumnasGlobalesSucursal(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalSucursal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,SucursalConstantesFunciones.TABLENAME);

						finalQueryGlobalSucursal=Funciones.GetFinalQueryAppend(finalQueryGlobalSucursal, "");
						finalQueryGlobalSucursal+=SucursalConstantesFunciones.SFINALQUERY;

						//this.cargarCombosSucursalsForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalSucursal=" WHERE " + ConstantesSql.ID + "="+detalleconsignacionSessionBean.getlidSucursalActual();
					}
				} else {
					finalQueryGlobalSucursal="NONE";
				}


				String finalQueryGlobalEjercicio="";

				if(((this.ejerciciosForeignKey==null||this.ejerciciosForeignKey.size()<=0) && this.detalleconsignacionConstantesFunciones.cargarid_ejercicioDetalleConsignacion)
					 || (this.esRecargarFks && this.detalleconsignacionConstantesFunciones.cargarid_ejercicioDetalleConsignacion)) {

					if(!this.detalleconsignacionSessionBean.getisBusquedaDesdeForeignKeySesionEjercicio()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=EjercicioConstantesFunciones.getArrayColumnasGlobalesEjercicio(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalEjercicio=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EjercicioConstantesFunciones.TABLENAME);

						finalQueryGlobalEjercicio=Funciones.GetFinalQueryAppend(finalQueryGlobalEjercicio, "");
						finalQueryGlobalEjercicio+=EjercicioConstantesFunciones.SFINALQUERY;

						//this.cargarCombosEjerciciosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalEjercicio=" WHERE " + ConstantesSql.ID + "="+detalleconsignacionSessionBean.getlidEjercicioActual();
					}
				} else {
					finalQueryGlobalEjercicio="NONE";
				}


				String finalQueryGlobalPeriodo="";

				if(((this.periodosForeignKey==null||this.periodosForeignKey.size()<=0) && this.detalleconsignacionConstantesFunciones.cargarid_periodoDetalleConsignacion)
					 || (this.esRecargarFks && this.detalleconsignacionConstantesFunciones.cargarid_periodoDetalleConsignacion)) {

					if(!this.detalleconsignacionSessionBean.getisBusquedaDesdeForeignKeySesionPeriodo()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=PeriodoConstantesFunciones.getArrayColumnasGlobalesPeriodo(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalPeriodo=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,PeriodoConstantesFunciones.TABLENAME);

						finalQueryGlobalPeriodo=Funciones.GetFinalQueryAppend(finalQueryGlobalPeriodo, "");
						finalQueryGlobalPeriodo+=PeriodoConstantesFunciones.SFINALQUERY;

						//this.cargarCombosPeriodosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalPeriodo=" WHERE " + ConstantesSql.ID + "="+detalleconsignacionSessionBean.getlidPeriodoActual();
					}
				} else {
					finalQueryGlobalPeriodo="NONE";
				}


				String finalQueryGlobalAnio="";

				if(((this.aniosForeignKey==null||this.aniosForeignKey.size()<=0) && this.detalleconsignacionConstantesFunciones.cargarid_anioDetalleConsignacion)
					 || (this.esRecargarFks && this.detalleconsignacionConstantesFunciones.cargarid_anioDetalleConsignacion)) {

					if(!this.detalleconsignacionSessionBean.getisBusquedaDesdeForeignKeySesionAnio()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=AnioConstantesFunciones.getArrayColumnasGlobalesAnio(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalAnio=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,AnioConstantesFunciones.TABLENAME);

						finalQueryGlobalAnio=Funciones.GetFinalQueryAppend(finalQueryGlobalAnio, "");
						finalQueryGlobalAnio+=AnioConstantesFunciones.SFINALQUERY;

						//this.cargarCombosAniosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalAnio=" WHERE " + ConstantesSql.ID + "="+detalleconsignacionSessionBean.getlidAnioActual();
					}
				} else {
					finalQueryGlobalAnio="NONE";
				}


				String finalQueryGlobalMes="";

				if(((this.messForeignKey==null||this.messForeignKey.size()<=0) && this.detalleconsignacionConstantesFunciones.cargarid_mesDetalleConsignacion)
					 || (this.esRecargarFks && this.detalleconsignacionConstantesFunciones.cargarid_mesDetalleConsignacion)) {

					if(!this.detalleconsignacionSessionBean.getisBusquedaDesdeForeignKeySesionMes()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=MesConstantesFunciones.getArrayColumnasGlobalesMes(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalMes=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,MesConstantesFunciones.TABLENAME);

						finalQueryGlobalMes=Funciones.GetFinalQueryAppend(finalQueryGlobalMes, "");
						finalQueryGlobalMes+=MesConstantesFunciones.SFINALQUERY;

						//this.cargarCombosMessForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalMes=" WHERE " + ConstantesSql.ID + "="+detalleconsignacionSessionBean.getlidMesActual();
					}
				} else {
					finalQueryGlobalMes="NONE";
				}


				String finalQueryGlobalConsignacion="";

				if(((this.consignacionsForeignKey==null||this.consignacionsForeignKey.size()<=0) && this.detalleconsignacionConstantesFunciones.cargarid_consignacionDetalleConsignacion)
					 || (this.esRecargarFks && this.detalleconsignacionConstantesFunciones.cargarid_consignacionDetalleConsignacion)) {

					if(!this.detalleconsignacionSessionBean.getisBusquedaDesdeForeignKeySesionConsignacion()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=ConsignacionConstantesFunciones.getArrayColumnasGlobalesConsignacion(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalConsignacion=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,ConsignacionConstantesFunciones.TABLENAME);

						finalQueryGlobalConsignacion=Funciones.GetFinalQueryAppend(finalQueryGlobalConsignacion, "");
						finalQueryGlobalConsignacion+=ConsignacionConstantesFunciones.SFINALQUERY;

						//this.cargarCombosConsignacionsForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalConsignacion=" WHERE " + ConstantesSql.ID + "="+detalleconsignacionSessionBean.getlidConsignacionActual();
					}
				} else {
					finalQueryGlobalConsignacion="NONE";
				}


				String finalQueryGlobalProducto="";

				if(cargarCombosDependencia && ((this.productosForeignKey==null||this.productosForeignKey.size()<=0) && this.detalleconsignacionConstantesFunciones.cargarid_productoDetalleConsignacion)
					 || (this.esRecargarFks && this.detalleconsignacionConstantesFunciones.cargarid_productoDetalleConsignacion)) {

					if(!this.detalleconsignacionSessionBean.getisBusquedaDesdeForeignKeySesionProducto()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=ProductoConstantesFunciones.getArrayColumnasGlobalesProducto(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalProducto=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,ProductoConstantesFunciones.TABLENAME);

						finalQueryGlobalProducto=Funciones.GetFinalQueryAppend(finalQueryGlobalProducto, "");
						finalQueryGlobalProducto+=ProductoConstantesFunciones.SFINALQUERY;

						//this.cargarCombosProductosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalProducto=" WHERE " + ConstantesSql.ID + "="+detalleconsignacionSessionBean.getlidProductoActual();
					}
				} else {
					finalQueryGlobalProducto="NONE";
				}


				String finalQueryGlobalBodega="";

				if(((this.bodegasForeignKey==null||this.bodegasForeignKey.size()<=0) && this.detalleconsignacionConstantesFunciones.cargarid_bodegaDetalleConsignacion)
					 || (this.esRecargarFks && this.detalleconsignacionConstantesFunciones.cargarid_bodegaDetalleConsignacion)) {

					if(!this.detalleconsignacionSessionBean.getisBusquedaDesdeForeignKeySesionBodega()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=BodegaConstantesFunciones.getArrayColumnasGlobalesBodega(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalBodega=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,BodegaConstantesFunciones.TABLENAME);

						finalQueryGlobalBodega=Funciones.GetFinalQueryAppend(finalQueryGlobalBodega, "");
						finalQueryGlobalBodega+=BodegaConstantesFunciones.SFINALQUERY;

						//this.cargarCombosBodegasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalBodega=" WHERE " + ConstantesSql.ID + "="+detalleconsignacionSessionBean.getlidBodegaActual();
					}
				} else {
					finalQueryGlobalBodega="NONE";
				}


				String finalQueryGlobalUnidad="";

				if(cargarCombosDependencia && ((this.unidadsForeignKey==null||this.unidadsForeignKey.size()<=0) && this.detalleconsignacionConstantesFunciones.cargarid_unidadDetalleConsignacion)
					 || (this.esRecargarFks && this.detalleconsignacionConstantesFunciones.cargarid_unidadDetalleConsignacion)) {

					if(!this.detalleconsignacionSessionBean.getisBusquedaDesdeForeignKeySesionUnidad()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=UnidadConstantesFunciones.getArrayColumnasGlobalesUnidad(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalUnidad=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,UnidadConstantesFunciones.TABLENAME);

						finalQueryGlobalUnidad=Funciones.GetFinalQueryAppend(finalQueryGlobalUnidad, "");
						finalQueryGlobalUnidad+=UnidadConstantesFunciones.SFINALQUERY;

						//this.cargarCombosUnidadsForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalUnidad=" WHERE " + ConstantesSql.ID + "="+detalleconsignacionSessionBean.getlidUnidadActual();
					}
				} else {
					finalQueryGlobalUnidad="NONE";
				}


				String finalQueryGlobalEstadoDetallePedido="";

				if(((this.estadodetallepedidosForeignKey==null||this.estadodetallepedidosForeignKey.size()<=0) && this.detalleconsignacionConstantesFunciones.cargarid_estado_detalle_pedidoDetalleConsignacion)
					 || (this.esRecargarFks && this.detalleconsignacionConstantesFunciones.cargarid_estado_detalle_pedidoDetalleConsignacion)) {

					if(!this.detalleconsignacionSessionBean.getisBusquedaDesdeForeignKeySesionEstadoDetallePedido()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=EstadoDetallePedidoConstantesFunciones.getArrayColumnasGlobalesEstadoDetallePedido(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalEstadoDetallePedido=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EstadoDetallePedidoConstantesFunciones.TABLENAME);

						finalQueryGlobalEstadoDetallePedido=Funciones.GetFinalQueryAppend(finalQueryGlobalEstadoDetallePedido, "");
						finalQueryGlobalEstadoDetallePedido+=EstadoDetallePedidoConstantesFunciones.SFINALQUERY;

						//this.cargarCombosEstadoDetallePedidosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalEstadoDetallePedido=" WHERE " + ConstantesSql.ID + "="+detalleconsignacionSessionBean.getlidEstadoDetallePedidoActual();
					}
				} else {
					finalQueryGlobalEstadoDetallePedido="NONE";
				}
			
			//ARCHITECTURE			
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				detalleconsignacionReturnGeneral=detalleconsignacionLogic.cargarCombosLoteForeignKeyDetalleConsignacion(finalQueryGlobalEmpresa,finalQueryGlobalSucursal,finalQueryGlobalEjercicio,finalQueryGlobalPeriodo,finalQueryGlobalAnio,finalQueryGlobalMes,finalQueryGlobalConsignacion,finalQueryGlobalProducto,finalQueryGlobalBodega,finalQueryGlobalUnidad,finalQueryGlobalEstadoDetallePedido);//WithConnection
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}			
			//ARCHITECTURE
			
			

			if(!finalQueryGlobalEmpresa.equals("NONE")) {
				this.empresasForeignKey=detalleconsignacionReturnGeneral.getempresasForeignKey();
			}

			if(!finalQueryGlobalSucursal.equals("NONE")) {
				this.sucursalsForeignKey=detalleconsignacionReturnGeneral.getsucursalsForeignKey();
			}

			if(!finalQueryGlobalEjercicio.equals("NONE")) {
				this.ejerciciosForeignKey=detalleconsignacionReturnGeneral.getejerciciosForeignKey();
			}

			if(!finalQueryGlobalPeriodo.equals("NONE")) {
				this.periodosForeignKey=detalleconsignacionReturnGeneral.getperiodosForeignKey();
			}

			if(!finalQueryGlobalAnio.equals("NONE")) {
				this.aniosForeignKey=detalleconsignacionReturnGeneral.getaniosForeignKey();
			}

			if(!finalQueryGlobalMes.equals("NONE")) {
				this.messForeignKey=detalleconsignacionReturnGeneral.getmessForeignKey();
			}

			if(!finalQueryGlobalConsignacion.equals("NONE")) {
				this.consignacionsForeignKey=detalleconsignacionReturnGeneral.getconsignacionsForeignKey();
			}

			if(!finalQueryGlobalProducto.equals("NONE")) {
				this.productosForeignKey=detalleconsignacionReturnGeneral.getproductosForeignKey();
			}

			if(!finalQueryGlobalBodega.equals("NONE")) {
				this.bodegasForeignKey=detalleconsignacionReturnGeneral.getbodegasForeignKey();
			}

			if(!finalQueryGlobalUnidad.equals("NONE")) {
				this.unidadsForeignKey=detalleconsignacionReturnGeneral.getunidadsForeignKey();
			}

			if(!finalQueryGlobalEstadoDetallePedido.equals("NONE")) {
				this.estadodetallepedidosForeignKey=detalleconsignacionReturnGeneral.getestadodetallepedidosForeignKey();
			}
			
			
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void addItemDefectoCombosTodosForeignKeyDetalleConsignacion()throws Exception {
		try {
			
			this.addItemDefectoCombosForeignKeyEmpresa();
			this.addItemDefectoCombosForeignKeySucursal();
			this.addItemDefectoCombosForeignKeyEjercicio();
			this.addItemDefectoCombosForeignKeyPeriodo();
			this.addItemDefectoCombosForeignKeyAnio();
			this.addItemDefectoCombosForeignKeyMes();
			this.addItemDefectoCombosForeignKeyConsignacion();
			this.addItemDefectoCombosForeignKeyProducto();
			this.addItemDefectoCombosForeignKeyBodega();
			this.addItemDefectoCombosForeignKeyUnidad();
			this.addItemDefectoCombosForeignKeyEstadoDetallePedido();
		} catch(Exception e) {
			throw e;
		}		
	}
	
	



	public void addItemDefectoCombosForeignKeyEmpresa()throws Exception {
		try {
			if(this.detalleconsignacionSessionBean==null) {
				this.detalleconsignacionSessionBean=new DetalleConsignacionSessionBean();
			}

			if(!this.detalleconsignacionSessionBean.getisBusquedaDesdeForeignKeySesionEmpresa()) {
				Empresa empresa=new Empresa();
				EmpresaConstantesFunciones.setEmpresaDescripcion(empresa,Constantes.SMENSAJE_ESCOJA_OPCION);
				empresa.setId(null);

				if(!EmpresaConstantesFunciones.ExisteEnLista(this.empresasForeignKey,empresa,true)) {

					this.empresasForeignKey.add(0,empresa);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeySucursal()throws Exception {
		try {

			if(!this.detalleconsignacionSessionBean.getisBusquedaDesdeForeignKeySesionSucursal()) {
				Sucursal sucursal=new Sucursal();
				SucursalConstantesFunciones.setSucursalDescripcion(sucursal,Constantes.SMENSAJE_ESCOJA_OPCION);
				sucursal.setId(null);

				if(!SucursalConstantesFunciones.ExisteEnLista(this.sucursalsForeignKey,sucursal,true)) {

					this.sucursalsForeignKey.add(0,sucursal);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyEjercicio()throws Exception {
		try {

			if(!this.detalleconsignacionSessionBean.getisBusquedaDesdeForeignKeySesionEjercicio()) {
				Ejercicio ejercicio=new Ejercicio();
				EjercicioConstantesFunciones.setEjercicioDescripcion(ejercicio,Constantes.SMENSAJE_ESCOJA_OPCION);
				ejercicio.setId(null);

				if(!EjercicioConstantesFunciones.ExisteEnLista(this.ejerciciosForeignKey,ejercicio,true)) {

					this.ejerciciosForeignKey.add(0,ejercicio);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyPeriodo()throws Exception {
		try {

			if(!this.detalleconsignacionSessionBean.getisBusquedaDesdeForeignKeySesionPeriodo()) {
				Periodo periodo=new Periodo();
				PeriodoConstantesFunciones.setPeriodoDescripcion(periodo,Constantes.SMENSAJE_ESCOJA_OPCION);
				periodo.setId(null);

				if(!PeriodoConstantesFunciones.ExisteEnLista(this.periodosForeignKey,periodo,true)) {

					this.periodosForeignKey.add(0,periodo);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyAnio()throws Exception {
		try {

			if(!this.detalleconsignacionSessionBean.getisBusquedaDesdeForeignKeySesionAnio()) {
				Anio anio=new Anio();
				AnioConstantesFunciones.setAnioDescripcion(anio,Constantes.SMENSAJE_ESCOJA_OPCION);
				anio.setId(null);

				if(!AnioConstantesFunciones.ExisteEnLista(this.aniosForeignKey,anio,true)) {

					this.aniosForeignKey.add(0,anio);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyMes()throws Exception {
		try {

			if(!this.detalleconsignacionSessionBean.getisBusquedaDesdeForeignKeySesionMes()) {
				Mes mes=new Mes();
				MesConstantesFunciones.setMesDescripcion(mes,Constantes.SMENSAJE_ESCOJA_OPCION);
				mes.setId(null);

				if(!MesConstantesFunciones.ExisteEnLista(this.messForeignKey,mes,true)) {

					this.messForeignKey.add(0,mes);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyConsignacion()throws Exception {
		try {

			if(!this.detalleconsignacionSessionBean.getisBusquedaDesdeForeignKeySesionConsignacion()) {
				Consignacion consignacion=new Consignacion();
				ConsignacionConstantesFunciones.setConsignacionDescripcion(consignacion,Constantes.SMENSAJE_ESCOJA_OPCION);
				consignacion.setId(null);

				if(!ConsignacionConstantesFunciones.ExisteEnLista(this.consignacionsForeignKey,consignacion,true)) {

					this.consignacionsForeignKey.add(0,consignacion);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyProducto()throws Exception {
		try {

			if(!this.detalleconsignacionSessionBean.getisBusquedaDesdeForeignKeySesionProducto()) {
				Producto producto=new Producto();
				ProductoConstantesFunciones.setProductoDescripcion(producto,Constantes.SMENSAJE_ESCOJA_OPCION);
				producto.setId(null);

				if(!ProductoConstantesFunciones.ExisteEnLista(this.productosForeignKey,producto,true)) {

					this.productosForeignKey.add(0,producto);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyBodega()throws Exception {
		try {

			if(!this.detalleconsignacionSessionBean.getisBusquedaDesdeForeignKeySesionBodega()) {
				Bodega bodega=new Bodega();
				BodegaConstantesFunciones.setBodegaDescripcion(bodega,Constantes.SMENSAJE_ESCOJA_OPCION);
				bodega.setId(null);

				if(!BodegaConstantesFunciones.ExisteEnLista(this.bodegasForeignKey,bodega,true)) {

					this.bodegasForeignKey.add(0,bodega);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyUnidad()throws Exception {
		try {

			if(!this.detalleconsignacionSessionBean.getisBusquedaDesdeForeignKeySesionUnidad()) {
				Unidad unidad=new Unidad();
				UnidadConstantesFunciones.setUnidadDescripcion(unidad,Constantes.SMENSAJE_ESCOJA_OPCION);
				unidad.setId(null);

				if(!UnidadConstantesFunciones.ExisteEnLista(this.unidadsForeignKey,unidad,true)) {

					this.unidadsForeignKey.add(0,unidad);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyEstadoDetallePedido()throws Exception {
		try {

			if(!this.detalleconsignacionSessionBean.getisBusquedaDesdeForeignKeySesionEstadoDetallePedido()) {
				EstadoDetallePedido estadodetallepedido=new EstadoDetallePedido();
				EstadoDetallePedidoConstantesFunciones.setEstadoDetallePedidoDescripcion(estadodetallepedido,Constantes.SMENSAJE_ESCOJA_OPCION);
				estadodetallepedido.setId(null);

				if(!EstadoDetallePedidoConstantesFunciones.ExisteEnLista(this.estadodetallepedidosForeignKey,estadodetallepedido,true)) {

					this.estadodetallepedidosForeignKey.add(0,estadodetallepedido);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void initActionsCombosTodosForeignKeyDetalleConsignacion()throws Exception {
		try {
			
			this.initActionsCombosForeignKeyProducto("Todos");
			this.initActionsCombosForeignKeyBodega("Todos");
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void initActionsCombosTodosForeignKeyDetalleConsignacion(String sFormularioTipoBusqueda)throws Exception {
		try {
			
			this.initActionsCombosForeignKeyProducto(sFormularioTipoBusqueda);
			this.initActionsCombosForeignKeyBodega(sFormularioTipoBusqueda);
		} catch(Exception e) {
			throw e;
		}		
	}
	
	



	@SuppressWarnings("rawtypes")
	public void procesarActionsCombosForeignKeyProducto(JComboBox jComboBoxProductoGenerico,String sFormularioTipoBusqueda)throws Exception {
		try {
			String sFinalQueryCombo="";
			Producto productoLocal=(Producto)jComboBoxProductoGenerico.getSelectedItem();

			if(productoLocal!=null  && productoLocal.getId()!=null  && productoLocal.getId()>0) {
				sFinalQueryCombo="  WHERE  id_producto="+productoLocal.getId();
			}
			//REDEFINE
			sFinalQueryCombo=InventarioSql.GetQueryUnidadFromBodegaYProducto(productoLocal,this.detalleconsignacion.getid_bodega());

			//COPIA PARA VENTANA BUSQUEDA
			this.sFinalQueryComboUnidad=sFinalQueryCombo;

			this.unidadsForeignKey=new ArrayList<Unidad>();
			this.cargarCombosForeignKeyUnidad(true,false,false,sFinalQueryCombo,sFormularioTipoBusqueda);
		} catch(Exception e) {
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void procesarActionsCombosForeignKeyBodega(JComboBox jComboBoxBodegaGenerico,String sFormularioTipoBusqueda)throws Exception {
		try {
			String sFinalQueryCombo="";
			Bodega bodegaLocal=(Bodega)jComboBoxBodegaGenerico.getSelectedItem();

			if(bodegaLocal!=null  && bodegaLocal.getId()!=null  && bodegaLocal.getId()>0) {
				sFinalQueryCombo="  WHERE  id_bodega="+bodegaLocal.getId();
			}
			//REDEFINE
			sFinalQueryCombo=InventarioSql.GetQueryProductoFromBodega(bodegaLocal);

			//COPIA PARA VENTANA BUSQUEDA
			this.sFinalQueryComboProducto=sFinalQueryCombo;

			this.productosForeignKey=new ArrayList<Producto>();
			this.cargarCombosForeignKeyProducto(true,false,false,sFinalQueryCombo,sFormularioTipoBusqueda);
		} catch(Exception e) {
			throw e;
		}
	}
	
	



	public void initActionsCombosForeignKeyProducto(String sFormularioTipoBusqueda)throws Exception {
		try {
			if(sFormularioTipoBusqueda.equals("Todos") || sFormularioTipoBusqueda.equals("Formulario")) {
				if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
					if(this.jInternalFrameDetalleFormDetalleConsignacion!=null) {
						this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_productoDetalleConsignacion.addItemListener(new ComboBoxItemListener(this,"id_productoDetalleConsignacion"));
						this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_productoDetalleConsignacion.addFocusListener(new ComboBoxFocusListener(this,"id_productoDetalleConsignacion"));
					}
				} else {
					if(this.jInternalFrameDetalleFormDetalleConsignacion!=null) {
						this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_productoDetalleConsignacion.addActionListener(new ComboBoxActionListener(this,"id_productoDetalleConsignacion"));
						this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_productoDetalleConsignacion.addFocusListener(new ComboBoxFocusListener(this,"id_productoDetalleConsignacion"));
					}
				}
			}

			if(sFormularioTipoBusqueda.equals("Todos")) {

				if(!this.conCargarMinimo) {
				
					if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
						this.jComboBoxid_productoFK_IdProductoDetalleConsignacion.addItemListener(new ComboBoxItemListener(this,"jComboBoxid_productoFK_IdProductoDetalleConsignacion"));

						this.jComboBoxid_productoFK_IdProductoDetalleConsignacion.addFocusListener(new ComboBoxFocusListener(this,"jComboBoxid_productoFK_IdProductoDetalleConsignacion"));

					} else {
						this.jComboBoxid_productoFK_IdProductoDetalleConsignacion.addActionListener(new ComboBoxActionListener(this,"jComboBoxid_productoFK_IdProductoDetalleConsignacion"));

						this.jComboBoxid_productoFK_IdProductoDetalleConsignacion.addFocusListener(new ComboBoxFocusListener(this,"jComboBoxid_productoFK_IdProductoDetalleConsignacion"));

					}
			
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void initActionsCombosForeignKeyBodega(String sFormularioTipoBusqueda)throws Exception {
		try {
			if(sFormularioTipoBusqueda.equals("Todos") || sFormularioTipoBusqueda.equals("Formulario")) {
				if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
					if(this.jInternalFrameDetalleFormDetalleConsignacion!=null) {
						this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_bodegaDetalleConsignacion.addItemListener(new ComboBoxItemListener(this,"id_bodegaDetalleConsignacion"));
						this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_bodegaDetalleConsignacion.addFocusListener(new ComboBoxFocusListener(this,"id_bodegaDetalleConsignacion"));
					}
				} else {
					if(this.jInternalFrameDetalleFormDetalleConsignacion!=null) {
						this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_bodegaDetalleConsignacion.addActionListener(new ComboBoxActionListener(this,"id_bodegaDetalleConsignacion"));
						this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_bodegaDetalleConsignacion.addFocusListener(new ComboBoxFocusListener(this,"id_bodegaDetalleConsignacion"));
					}
				}
			}

			if(sFormularioTipoBusqueda.equals("Todos")) {

				if(!this.conCargarMinimo) {
				
					if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
						this.jComboBoxid_bodegaFK_IdBodegaDetalleConsignacion.addItemListener(new ComboBoxItemListener(this,"jComboBoxid_bodegaFK_IdBodegaDetalleConsignacion"));

						this.jComboBoxid_bodegaFK_IdBodegaDetalleConsignacion.addFocusListener(new ComboBoxFocusListener(this,"jComboBoxid_bodegaFK_IdBodegaDetalleConsignacion"));

					} else {
						this.jComboBoxid_bodegaFK_IdBodegaDetalleConsignacion.addActionListener(new ComboBoxActionListener(this,"jComboBoxid_bodegaFK_IdBodegaDetalleConsignacion"));

						this.jComboBoxid_bodegaFK_IdBodegaDetalleConsignacion.addFocusListener(new ComboBoxFocusListener(this,"jComboBoxid_bodegaFK_IdBodegaDetalleConsignacion"));

					}
			
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesGlobalesCombosForeignKeyDetalleConsignacion()throws Exception {	
		try {
			if(this.parametroGeneralUsuario!=null && this.parametroGeneralUsuario.getId()>0) {
			
				this.setActualEmpresaForeignKey(this.parametroGeneralUsuario.getid_empresa(),false,"Formulario");
				this.setActualSucursalForeignKey(this.parametroGeneralUsuario.getid_sucursal(),false,"Formulario");
				this.setActualEjercicioForeignKey(this.parametroGeneralUsuario.getid_ejercicio(),false,"Formulario");
				this.setActualPeriodoForeignKey(this.parametroGeneralUsuario.getid_periodo(),false,"Formulario");
			
			
			}
			
			//INICIALIZA VARIABLES COMBOS GLOBALES AUXILIARES A FORMULARIO(Anio,Mes)
			this.setVariablesGlobalesAuxiliaresCombosForeignKeyDetalleConsignacion();
		
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesObjetoActualToFormularioForeignKeyDetalleConsignacion(DetalleConsignacion detalleconsignacion)throws Exception {	
		try {
			
			this.setActualConsignacionForeignKey(detalleconsignacion.getid_consignacion(),false,"Formulario");
			this.setActualProductoForeignKey(detalleconsignacion.getid_producto(),false,"Formulario");
			this.setActualBodegaForeignKey(detalleconsignacion.getid_bodega(),false,"Formulario");
			this.setActualUnidadForeignKey(detalleconsignacion.getid_unidad(),false,"Formulario");
			this.setActualEstadoDetallePedidoForeignKey(detalleconsignacion.getid_estado_detalle_pedido(),false,"Formulario");			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesObjetoActualToListasForeignKeyDetalleConsignacion(DetalleConsignacion detalleconsignacion,String sTipoEvento)throws Exception {	
		try {
			
			

				if(detalleconsignacion.getProducto()!=null && !sTipoEvento.equals("id_productoDetalleConsignacion")) { //sTipoEvento Evita Bucle Infinito

					this.productosForeignKey=new ArrayList<Producto>();
					this.productosForeignKey.add(detalleconsignacion.getProducto());

					this.addItemDefectoCombosForeignKeyProducto();
					this.cargarCombosFrameProductosForeignKey("Todos");
				}
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	/*
	public void setVariablesCombosFromBeanForeignKeyDetalleConsignacion()throws Exception {	
		try {
			
			this.setActualConsignacionForeignKey(this.detalleconsignacionConstantesFunciones.getid_consignacion(),false,"Formulario");
			this.setActualProductoForeignKey(this.detalleconsignacionConstantesFunciones.getid_producto(),false,"Formulario");
			this.setActualBodegaForeignKey(this.detalleconsignacionConstantesFunciones.getid_bodega(),false,"Formulario");
			this.setActualUnidadForeignKey(this.detalleconsignacionConstantesFunciones.getid_unidad(),false,"Formulario");
			this.setActualEstadoDetallePedidoForeignKey(this.detalleconsignacionConstantesFunciones.getid_estado_detalle_pedido(),false,"Formulario");			
		} catch(Exception e) {
			throw e;
		}
	}
	*/
	
	public void setVariablesGlobalesAuxiliaresCombosForeignKeyDetalleConsignacion()throws Exception {	
		try {
			

				if(this.jInternalFrameDetalleFormDetalleConsignacion!=null) {
					Ejercicio ejercicioActual=(Ejercicio)this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_ejercicioDetalleConsignacion.getSelectedItem();
					this.setActualAnioForeignKey(ejercicioActual.getid_anio(),false,"Formulario");
				}

				if(this.jInternalFrameDetalleFormDetalleConsignacion!=null) {
					Periodo periodoActual=(Periodo)this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_periodoDetalleConsignacion.getSelectedItem();
					this.setActualMesForeignKey(periodoActual.getid_mes(),false,"Formulario");
				}
		
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesDefaultCombosForeignKeyDetalleConsignacion()throws Exception {	
		try {
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesParametroCombosForeignKeyDetalleConsignacion()throws Exception {	
		try {
			
		} catch(Exception e) {
			throw e;
		}
	}		
	
	public void cargarCombosParametroDetalleConsignacion()throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			
			//this.cargarDatosCliente();
			
			
			
		} catch(Exception e) {
			throw e;
		}		
	}
		
	public void cargarCombosFrameForeignKeyDetalleConsignacion()throws Exception {
		try {
			

			this.cargarCombosFrameEmpresasForeignKey("Todos");
			this.cargarCombosFrameSucursalsForeignKey("Todos");
			this.cargarCombosFrameEjerciciosForeignKey("Todos");
			this.cargarCombosFramePeriodosForeignKey("Todos");
			this.cargarCombosFrameAniosForeignKey("Todos");
			this.cargarCombosFrameMessForeignKey("Todos");
			this.cargarCombosFrameConsignacionsForeignKey("Todos");
			this.cargarCombosFrameProductosForeignKey("Todos");
			this.cargarCombosFrameBodegasForeignKey("Todos");
			this.cargarCombosFrameUnidadsForeignKey("Todos");
			this.cargarCombosFrameEstadoDetallePedidosForeignKey("Todos");

		} catch(Exception e) {
			throw e;
		}		
	}		
	
	public void cargarCombosFrameForeignKeyDetalleConsignacion(String sFormularioTipoBusqueda)throws Exception {
		try {
			

			this.cargarCombosFrameEmpresasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameSucursalsForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameEjerciciosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFramePeriodosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameAniosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameMessForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameConsignacionsForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameProductosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameBodegasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameUnidadsForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameEstadoDetallePedidosForeignKey(sFormularioTipoBusqueda);

		} catch(Exception e) {
			throw e;
		}		
	}	
	
	public void setItemDefectoCombosForeignKeyDetalleConsignacion()throws Exception {
		try {
			



			if(this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_empresaDetalleConsignacion!=null && this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_empresaDetalleConsignacion.getItemCount()>0) {
				this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_empresaDetalleConsignacion.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_sucursalDetalleConsignacion!=null && this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_sucursalDetalleConsignacion.getItemCount()>0) {
				this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_sucursalDetalleConsignacion.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_ejercicioDetalleConsignacion!=null && this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_ejercicioDetalleConsignacion.getItemCount()>0) {
				this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_ejercicioDetalleConsignacion.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_periodoDetalleConsignacion!=null && this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_periodoDetalleConsignacion.getItemCount()>0) {
				this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_periodoDetalleConsignacion.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_anioDetalleConsignacion!=null && this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_anioDetalleConsignacion.getItemCount()>0) {
				this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_anioDetalleConsignacion.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_mesDetalleConsignacion!=null && this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_mesDetalleConsignacion.getItemCount()>0) {
				this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_mesDetalleConsignacion.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_consignacionDetalleConsignacion!=null && this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_consignacionDetalleConsignacion.getItemCount()>0) {
				this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_consignacionDetalleConsignacion.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_productoDetalleConsignacion!=null && this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_productoDetalleConsignacion.getItemCount()>0) {
				this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_productoDetalleConsignacion.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_bodegaDetalleConsignacion!=null && this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_bodegaDetalleConsignacion.getItemCount()>0) {
				this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_bodegaDetalleConsignacion.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_unidadDetalleConsignacion!=null && this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_unidadDetalleConsignacion.getItemCount()>0) {
				this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_unidadDetalleConsignacion.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_estado_detalle_pedidoDetalleConsignacion!=null && this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_estado_detalle_pedidoDetalleConsignacion.getItemCount()>0) {
				this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_estado_detalle_pedidoDetalleConsignacion.setSelectedIndex(0);
			}
		} catch(Exception e) {
			throw e;
		}		
	}		
	
	















	public void recargarFormDetalleConsignacionProducto(JComboBox<?> jComboBoxGenericoProducto,String sFormularioTipoBusqueda) throws Exception {

		this.recargarFormDetalleConsignacionid_unidad(jComboBoxGenericoProducto,sFormularioTipoBusqueda,"Producto",false);
	}

	public void recargarFormDetalleConsignacionBodega(JComboBox<?> jComboBoxGenericoBodega,String sFormularioTipoBusqueda) throws Exception {

		this.recargarFormDetalleConsignacionid_producto(jComboBoxGenericoBodega,sFormularioTipoBusqueda,"Bodega",false);
	}




	
	



	public void recargarFormDetalleConsignacionid_producto(JComboBox<?> jComboBoxGenericoProducto,String sFormularioTipoBusqueda,String sTipoComboOrigen,Boolean conIrServidorAplicacion) throws Exception {
		try {

			String sFinalQuery="";

			if(sTipoComboOrigen.equals("Bodega")){
				this.setActualParaGuardarBodegaForeignKey(this.detalleconsignacion,jComboBoxGenericoProducto);
			}

			if(this.detalleconsignacion.getid_bodega()!=null && this.detalleconsignacion.getid_bodega()!=0L) {
				sFinalQuery+="  WHERE  id_bodega="+this.detalleconsignacion.getid_bodega();
			} else {
				sFinalQuery+="  WHERE  id_bodega=-1";
			}



			//BUCLE RECURSIVO
			this.setActualProductoForeignKey(this.detalleconsignacion.getid_bodega(),true,sFormularioTipoBusqueda);

			this.cargarCombosProductosForeignKeyLista(sFinalQuery);

			this.cargarCombosFrameProductosForeignKey(sFormularioTipoBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}



	public void recargarFormDetalleConsignacionid_unidad(JComboBox<?> jComboBoxGenericoUnidad,String sFormularioTipoBusqueda,String sTipoComboOrigen,Boolean conIrServidorAplicacion) throws Exception {
		try {

			String sFinalQuery="";

			if(sTipoComboOrigen.equals("Producto")){
				this.setActualParaGuardarProductoForeignKey(this.detalleconsignacion,jComboBoxGenericoUnidad);
			}

			if(this.detalleconsignacion.getid_producto()!=null && this.detalleconsignacion.getid_producto()!=0L) {
				sFinalQuery+="  WHERE  id_producto="+this.detalleconsignacion.getid_producto();
			} else {
				sFinalQuery+="  WHERE  id_producto=-1";
			}



			//BUCLE RECURSIVO
			this.setActualUnidadForeignKey(this.detalleconsignacion.getid_producto(),true,sFormularioTipoBusqueda);

			this.cargarCombosUnidadsForeignKeyLista(sFinalQuery);

			this.cargarCombosFrameUnidadsForeignKey(sFormularioTipoBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public DetalleConsignacionBeanSwingJInternalFrame() throws Exception {
		super(false,PaginaTipo.PRINCIPAL);
	}
	
	public DetalleConsignacionBeanSwingJInternalFrame(Boolean cargarRelaciones,PaginaTipo paginaTipo) throws Exception {
		super(cargarRelaciones,paginaTipo);
	}
	
	public DetalleConsignacionBeanSwingJInternalFrame(Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,PaginaTipo paginaTipo) throws Exception {
		super(cargarRelaciones,paginaTipo);
		
		this.detalleconsignacionSessionBean=new DetalleConsignacionSessionBean(); 
		this.detalleconsignacionConstantesFunciones=new DetalleConsignacionConstantesFunciones(); 
		this.detalleconsignacionBean=new DetalleConsignacion();//(this.detalleconsignacionConstantesFunciones); 		
		this.detalleconsignacionReturnGeneral=new DetalleConsignacionParameterReturnGeneral(); 
		
		this.detalleconsignacionSessionBean.setConGuardarRelaciones(conGuardarRelaciones);
		this.detalleconsignacionSessionBean.setEsGuardarRelacionado(esGuardarRelacionado);
				
	}
	
	public DetalleConsignacionBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,Boolean cargarTodosDatos,PaginaTipo paginaTipo) throws Exception {
		this(blncargarCombostrForeignKey,blnCargarInformacionInicial,jdesktopPane,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo,conGuardarRelaciones,esGuardarRelacionado,cargarRelaciones,cargarTodosDatos);
	}
		
	public DetalleConsignacionBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,Boolean cargarRelaciones,Boolean cargarTodosDatos,PaginaTipo paginaTipo) throws Exception {
		this(blncargarCombostrForeignKey,blnCargarInformacionInicial,jdesktopPane,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo,false,false,cargarRelaciones,cargarTodosDatos);
	}	
	
	public DetalleConsignacionBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,PaginaTipo paginaTipo,Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,Boolean cargarTodosDatos) throws Exception //Boolean esParaBusquedaForeignKey
    {
		super(jdesktopPane,conGuardarRelaciones,esGuardarRelacionado,cargarRelaciones,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo);
		
		try {
			
			this.permiteRecargarForm=false;
			
			this.startProcessDetalleConsignacion(true);
			
			Boolean esParaBusquedaForeignKey=false;//ANTES USADO COMO PARAMETRO DEL CONSTRUCTOR
			
			if(paginaTipo.equals(PaginaTipo.BUSQUEDA)) {
				esParaBusquedaForeignKey=true;
			}
			
			
			
			//SE ASIGNA EN CLASE PADRE
			/*
			this.parametroGeneralSg=parametroGeneralSg;		
			this.parametroGeneralUsuario=parametroGeneralUsuario;	
			this.usuarioActual=usuarioActual;
			this.moduloActual=moduloActual;
			*/						
			
			long start_time=0;
			long end_time=0;
			
			if(Constantes2.ISDEVELOPING2) {
				start_time = System.currentTimeMillis();
			}
			
			if(!cargarTodosDatos) {
				this.sAccionBusqueda="NINGUNO";
			}
			
			this.detalleconsignacionConstantesFunciones=new DetalleConsignacionConstantesFunciones(); 
			this.detalleconsignacionBean=new DetalleConsignacion();//this.detalleconsignacionConstantesFunciones); 			
			this.detalleconsignacionReturnGeneral=new DetalleConsignacionParameterReturnGeneral(); 
		
			DetalleConsignacionBeanSwingJInternalFrameAdditional.CargaInicialInicio(this, "NORMAL", null);
			
			this.setTitle(Funciones.GetTituloSistema(this.parametroGeneralSg,this.moduloActual,this.usuarioActual,"Detalle Consignacion Mantenimiento",paginaTipo));			
			
			this.conTotales=false;
			
			this.conTotales=true;
			
			
			this.detalleconsignacion=new DetalleConsignacion();
			this.detalleconsignacions = new ArrayList<DetalleConsignacion>();
			this.detalleconsignacionsAux = new ArrayList<DetalleConsignacion>();
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleconsignacionLogic=new DetalleConsignacionLogic();
				this.detalleconsignacionLogic.getNewConnexionToDeep("");
			}
			
			//this.detalleconsignacionSessionBean.setConGuardarRelaciones(conGuardarRelaciones);
			//this.detalleconsignacionSessionBean.setEsGuardarRelacionado(esGuardarRelacionado);
			
			this.jDesktopPane=jdesktopPane;
			
			if(this.jDesktopPane.getClass().equals(JDesktopPaneMe.class)) {
				this.constantes2=((JDesktopPaneMe)this.jDesktopPane).constantes2;
			}
			
			if(!Constantes.CON_VARIAS_VENTANAS) {
    			MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameDetalleFormDetalleConsignacion);
				
				if(!this.conCargarMinimo) {
					
					if(this.jInternalFrameReporteDinamicoDetalleConsignacion!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameReporteDinamicoDetalleConsignacion);	
					}
					
					if(this.jInternalFrameImportacionDetalleConsignacion!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameImportacionDetalleConsignacion);							
					}
					
				}
				
				if(this.jInternalFrameTotalesDetalleConsignacion!=null) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameTotalesDetalleConsignacion);
				}
				
				if(!this.conCargarMinimo) {
					
					if(this.jInternalFrameOrderByDetalleConsignacion!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameOrderByDetalleConsignacion);					
					}
					
				}
			}
			
			//DETALLE DATOS
			if(this.jInternalFrameDetalleFormDetalleConsignacion!=null) { //this.conCargarFormDetalle) {
				this.jDesktopPane.add(this.jInternalFrameDetalleFormDetalleConsignacion);
				this.jInternalFrameDetalleFormDetalleConsignacion.setVisible(false);
				this.jInternalFrameDetalleFormDetalleConsignacion.setSelected(false);						
			}
			
			if(!this.conCargarMinimo) {
				
				//REPORTE DINAMICO
				if(this.jInternalFrameReporteDinamicoDetalleConsignacion!=null) {
					this.jDesktopPane.add(this.jInternalFrameReporteDinamicoDetalleConsignacion);
					this.jInternalFrameReporteDinamicoDetalleConsignacion.setVisible(false);
					this.jInternalFrameReporteDinamicoDetalleConsignacion.setSelected(false);
				}
				
				//IMPORTACION
				if(this.jInternalFrameImportacionDetalleConsignacion!=null) {
					this.jDesktopPane.add(this.jInternalFrameImportacionDetalleConsignacion);
					this.jInternalFrameImportacionDetalleConsignacion.setVisible(false);
					this.jInternalFrameImportacionDetalleConsignacion.setSelected(false);
				}
				
				
			}
			
			if(this.jInternalFrameTotalesDetalleConsignacion!=null) {
				//TOTALES
				this.jDesktopPane.add(this.jInternalFrameTotalesDetalleConsignacion);
				this.jInternalFrameTotalesDetalleConsignacion.setVisible(false);
				this.jInternalFrameTotalesDetalleConsignacion.setSelected(false);
			}
			
			if(!this.conCargarMinimo) {
				
				if(this.jInternalFrameOrderByDetalleConsignacion!=null) {
					this.jDesktopPane.add(this.jInternalFrameOrderByDetalleConsignacion);
					this.jInternalFrameOrderByDetalleConsignacion.setVisible(false);
					this.jInternalFrameOrderByDetalleConsignacion.setSelected(false);				
				}
				
			}
			
			
			//this.esParaBusquedaForeignKey=false;
			this.esParaBusquedaForeignKey=esParaBusquedaForeignKey;
			
			this.invalidValues=new InvalidValue[0];
			
			
			
			this.idDetalleConsignacionActual=0L;
			this.rowIndexActual=0;
			
			
			this.iNumeroPaginacionPagina=0;
			this.iNumeroPaginacion=DetalleConsignacionConstantesFunciones.INUMEROPAGINACION;
			this.pagination=new Pagination();
			this.datosCliente=new DatosCliente();
			this.lIdUsuarioSesion=0L;	
			this.sTipoArchivoReporte="";
			this.sTipoArchivoReporteDinamico="";
			this.sTipoReporte="";
			this.sTipoReporteDinamico="";
			this.sTipoPaginacion="";
			this.sTipoRelacion="";
			this.sTipoAccion="";
			this.sTipoAccionFormulario="";
			this.sTipoSeleccionar="";			
			this.sDetalleReporte="";
			this.sTipoReporteExtra="";
			this.sValorCampoGeneral="";
			this.sPathReporteDinamico="";			
			
			this.isMostrarNumeroPaginacion=false;
			this.isSeleccionarTodos=false;
			this.isSeleccionados=false;
			this.conGraficoReporte=false;
			this.isPostAccionNuevo=false;
			this.isPostAccionSinCerrar=false;
			this.isPostAccionSinMensaje=false;
			this.esReporteDinamico=false;
			this.esRecargarFks=false;
			this.esReporteAccionProceso=false;
			
			this.detalleconsignacionReturnGeneral=new DetalleConsignacionParameterReturnGeneral();
			
			this.detalleconsignacionParameterGeneral=new DetalleConsignacionParameterReturnGeneral();
			
			
			
			this.sistemaLogicAdditional=new SistemaLogicAdditional();
			
			this.sistemaLogicAdditional.setConnexion(this.detalleconsignacionLogic.getConnexion());			
			
			
			
			
			
			
			
			//VERIFICAR GLOBAL
			this.cargarDatosCliente();			
			
			
			if(!this.detalleconsignacionSessionBean.getEsGuardarRelacionado()) {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					if(!sistemaLogicAdditional.validarLicenciaCliente(this.datosCliente,this.moduloActual,this.usuarioActual)) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_CONTROLGLOBAL);
					}
					
				} else if(Constantes.ISUSAEJBREMOTE) {
					
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}			
			
			//VERIFICAR GLOBAL
			
			//VERIFICAR SESSION ACTUAL
			//this.cargarDatosCliente();
			
			this.sistemaReturnGeneral=new SistemaParameterReturnGeneral();
			
			SistemaParameterReturnGeneralAdditional.inicializarSinSeguridad(this.sistemaReturnGeneral);
			
			if(DetalleConsignacionJInternalFrame.CON_LLAMADA_SIMPLE) {
				if(this.detalleconsignacionSessionBean.getEsGuardarRelacionado()) {
					this.opcionActual.setId(0L);
					
					//idOpcion=0L;					
				}
				
				ArrayList<String> arrPaginas=new ArrayList<String>();		
				ArrayList<Opcion> opcionsFinal=new ArrayList<Opcion>();	
				
		
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					//this.sistemaReturnGeneral=sistemaLogicAdditional.validarCargarSesionUsuarioActualWithConnection(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual,Constantes.LIDSISTEMAACTUAL,DetalleConsignacionConstantesFunciones.SNOMBREOPCION,this.opcionActual,this.detalleconsignacionSessionBean.getEsGuardarRelacionado(),this.detalleconsignacionSessionBean.getConGuardarRelaciones(),arrPaginas);
					
					this.sistemaReturnGeneral=sistemaLogicAdditional.validarCargarSesionUsuarioActual(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual,Constantes.LIDSISTEMAACTUAL,DetalleConsignacionConstantesFunciones.SNOMBREOPCION,this.opcionActual,this.detalleconsignacionSessionBean.getEsGuardarRelacionado(),this.detalleconsignacionSessionBean.getConGuardarRelaciones(),arrPaginas);
					
					if(!this.sistemaReturnGeneral.getEsValidado()) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_SESIONACTUAL);
					}
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
					//FALTA
				}
			} else { 
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					if(!sistemaLogicAdditional.validarSesionUsuarioActual(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual)) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_SESIONACTUAL);
					}
				
				} else if(Constantes.ISUSAEJBREMOTE) {
					
				} else if(Constantes.ISUSAEJBHOME) {
				}
			} 
			//VERIFICAR SESSION ACTUAL
			
			
			this.sVisibilidadTablaBusquedas="table-row";
			this.sVisibilidadTablaElementos="none";
			this.sVisibilidadTablaAcciones="none";
			
			this.isVisibilidadCeldaNuevoDetalleConsignacion=false;
			this.isVisibilidadCeldaDuplicarDetalleConsignacion=true;
			this.isVisibilidadCeldaCopiarDetalleConsignacion=true;
			this.isVisibilidadCeldaVerFormDetalleConsignacion=true;
			this.isVisibilidadCeldaOrdenDetalleConsignacion=true;
			this.isVisibilidadCeldaNuevoRelacionesDetalleConsignacion=false;
			this.isVisibilidadCeldaModificarDetalleConsignacion=false;
			this.isVisibilidadCeldaActualizarDetalleConsignacion=false;
			this.isVisibilidadCeldaEliminarDetalleConsignacion=false;
			this.isVisibilidadCeldaCancelarDetalleConsignacion=false;
			this.isVisibilidadCeldaGuardarDetalleConsignacion=false;
			this.isVisibilidadCeldaGuardarCambiosDetalleConsignacion=false;
			
			
			this.isVisibilidadFK_IdAnio=true;
			this.isVisibilidadFK_IdBodega=true;
			this.isVisibilidadFK_IdConsignacion=true;
			this.isVisibilidadFK_IdEjercicio=true;
			this.isVisibilidadFK_IdEmpresa=true;
			this.isVisibilidadFK_IdEstadoDetallePedido=true;
			this.isVisibilidadFK_IdMes=true;
			this.isVisibilidadFK_IdPeriodo=true;
			this.isVisibilidadFK_IdProducto=true;
			this.isVisibilidadFK_IdSucursal=true;
			this.isVisibilidadFK_IdUnidad=true;
			
			//ELEMENTOS TABLAS PARAMETOS
			
			
			
			//ELEMENTOS TABLAS PARAMETOS_FIN
			
			//this.actualizarEstadoCeldasBotonesDetalleConsignacion("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
						
			
			
			this.inicializarPermisosDetalleConsignacion();
			
			//INICIALIZAR FALSE, TALVEZ COMENTAR
			this.setPermisosUsuarioDetalleConsignacion(false);
			
			this.setPermisosUsuarioDetalleConsignacion();
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.detalleconsignacionSessionBean.getEsGuardarRelacionado() 
				|| (this.detalleconsignacionSessionBean.getEsGuardarRelacionado() && this.detalleconsignacionSessionBean.getConGuardarRelaciones())) {
				
				this.inicializarSetPermisosUsuarioDetalleConsignacionClasesRelacionadas();
			}
			
			if(this.detalleconsignacionSessionBean.getConGuardarRelaciones()) {
				this.actualizarTabsSetPermisosUsuarioDetalleConsignacionClasesRelacionadas();
			}
			
			
			
			//SOLO SE EJECUTA LA PRIMERA VEZ, BINDINGS SI FUNCIONA
			if(!DetalleConsignacionJInternalFrame.ISBINDING_MANUAL) {
				this.inicializarActualizarBindingBotonesPermisosDetalleConsignacion();
			} else {
				this.inicializarActualizarBindingBotonesPermisosManualDetalleConsignacion();
			}
			
			if(!this.isPermisoBusquedaDetalleConsignacion) {
				//BYDAN_BUSQUEDAS
				
				this.jTabbedPaneBusquedasDetalleConsignacion.setVisible(false);				
				
			}
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.detalleconsignacionSessionBean.getEsGuardarRelacionado()) {				
				this.tiposArchivosReportes=Funciones.getListTiposArchivosReportes();
				this.tiposArchivosReportesDinamico=Funciones.getListTiposArchivosReportes();
				this.tiposReportes=Funciones.getListTiposReportes(true);
				this.tiposReportesDinamico=Funciones.getListTiposReportesDinamico(true);
				
				
				
				this.tiposGraficosReportes=Funciones2.getListTiposGraficosReportes();
				this.tiposPaginacion=Funciones2.getListTiposPaginacion(this.isPermisoPaginacionMedioDetalleConsignacion,this.isPermisoPaginacionMedioDetalleConsignacion,this.isPermisoPaginacionTodoDetalleConsignacion);
				this.tiposSeleccionar=Funciones2.getListTiposSeleccionar();
				this.tiposSeleccionar.addAll(DetalleConsignacionConstantesFunciones.getTiposSeleccionarDetalleConsignacion());
				
				this.tiposColumnasSelect=DetalleConsignacionConstantesFunciones.getTiposSeleccionarDetalleConsignacion(true);
				
				this.tiposRelacionesSelect=new ArrayList<Reporte>();								
				
				
			} else {
				this.tiposArchivosReportes=new ArrayList<Reporte>();
				this.tiposArchivosReportesDinamico=new ArrayList<Reporte>();
				this.tiposReportes=new ArrayList<Reporte>();
				this.tiposReportesDinamico=new ArrayList<Reporte>();
				this.tiposGraficosReportes=new ArrayList<Reporte>();
				this.tiposPaginacion=new ArrayList<Reporte>();
				this.tiposSeleccionar=new ArrayList<Reporte>();			
				this.tiposColumnasSelect=new ArrayList<Reporte>();	
				this.tiposRelacionesSelect=new ArrayList<Reporte>();	
			}
						
			
			//FUNCIONALIDAD_RELACIONADO
			//if(!this.detalleconsignacionSessionBean.getEsGuardarRelacionado()) {
				//SE ENCUENTRA MAS ADELANTE CON ACCIONES POR USUARIO
				//ACCIONES GENERALES Y POR USUARIO
				this.tiposRelaciones=Funciones2.getListTiposRelaciones();
				this.setRelacionesUsuarioDetalleConsignacion();
				
				this.tiposAcciones=Funciones2.getListTiposAcciones(true,false,true);
				this.setAccionesUsuarioDetalleConsignacion(false);	
				
				this.tiposAccionesFormulario=Funciones2.getListTiposAccionesFormulario(true,false,true);							
				this.setAccionesUsuarioDetalleConsignacion(true);	
				
				this.inicializarActualizarBindingtiposArchivosReportesAccionesDetalleConsignacion() ;
			
			/*
			} else {
				this.tiposAcciones=new ArrayList<Reporte>();
				this.tiposAccionesFormulario=new ArrayList<Reporte>();
			}
			*/						
			
			this.inicializarInvalidValues();
						
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			this.arrDatoGeneralTotales= new  ArrayList<DatoGeneral>();
			
			
			this.arrOrderBy= new  ArrayList<OrderBy>();
			
			
			this.arrDatoGeneralMinimos= new  ArrayList<DatoGeneralMinimo>();
			
			
			this.traerValoresTablaOrderBy();			
			
			
			this.isGuardarCambiosEnLote=false;
			this.isCargarCombosDependencia=false;
			
			 
			jasperPrint = null;												
			
			//FK
			
			this.empresaLogic=new EmpresaLogic();
			this.sucursalLogic=new SucursalLogic();
			this.ejercicioLogic=new EjercicioLogic();
			this.periodoLogic=new PeriodoLogic();
			this.anioLogic=new AnioLogic();
			this.mesLogic=new MesLogic();
			this.consignacionLogic=new ConsignacionLogic();
			this.productoLogic=new ProductoLogic();
			this.bodegaLogic=new BodegaLogic();
			this.unidadLogic=new UnidadLogic();
			this.estadodetallepedidoLogic=new EstadoDetallePedidoLogic();
			
			//PARAMETROS
			
			
			/*
			if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {		
				hashtableEnv =  Funciones.getHashtableEnv();		
				initialContext = new InitialContext(hashtableEnv);	
			}
			*/
			/*
			if(Constantes.ISUSAEJBREMOTE) {
				detalleconsignacionImplementable= (DetalleConsignacionImplementable) initialContext.lookup(Constantes.SEJBPACKAGE+Constantes.SEJBSEPARATOR+DetalleConsignacionConstantesFunciones.SEJBNAME+Constantes.SEJBSEPARATOR+Constantes.SEJBREMOTE);
			} else if(Constantes.ISUSAEJBHOME) {
				detalleconsignacionImplementableHome= (DetalleConsignacionImplementableHome) initialContext.lookup(Constantes.SEJBPACKAGE+Constantes.SEJBSEPARATOR+DetalleConsignacionConstantesFunciones.SEJBNAME+Constantes.SEJBSEPARATOR+Constantes.SEJBLOCAL);
			}			
			*/
			
			
			this.detalleconsignacions= new ArrayList<DetalleConsignacion>();
			this.detalleconsignacionsEliminados= new ArrayList<DetalleConsignacion>();
						
			this.isEsNuevoDetalleConsignacion=false;
			this.esParaAccionDesdeFormularioDetalleConsignacion=false;
			this.isEsMantenimientoRelacionesRelacionadoUnico=false;
			this.isEsMantenimientoRelaciones=false;
			this.isEsMantenimientoRelacionado=false;
			this.isContieneImagenes=false;
			
			
			
			
			//BUSQUEDA INTERNA FK
			this.idProductoActual=0L;
			
			//INICIALIZAR LISTAS FK
			
			this.empresasForeignKey=new ArrayList<Empresa>() ;
			this.sucursalsForeignKey=new ArrayList<Sucursal>() ;
			this.ejerciciosForeignKey=new ArrayList<Ejercicio>() ;
			this.periodosForeignKey=new ArrayList<Periodo>() ;
			this.aniosForeignKey=new ArrayList<Anio>() ;
			this.messForeignKey=new ArrayList<Mes>() ;
			this.consignacionsForeignKey=new ArrayList<Consignacion>() ;
			this.productosForeignKey=new ArrayList<Producto>() ;
			this.bodegasForeignKey=new ArrayList<Bodega>() ;
			this.unidadsForeignKey=new ArrayList<Unidad>() ;
			this.estadodetallepedidosForeignKey=new ArrayList<EstadoDetallePedido>() ;
			
			
			
			
			if(blncargarCombostrForeignKey) {
				this.cargarCombosForeignKeyDetalleConsignacion(this.isCargarCombosDependencia);
			}
			
			this.cargarCombosParametroDetalleConsignacion();
			
			
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.detalleconsignacionSessionBean.getEsGuardarRelacionado()) {
				this.onLoad();
			}
						
			DetalleConsignacionBeanSwingJInternalFrameAdditional.RecargarVentanaSegunOpcion(this,opcionActual);
			
			/*
			if(blnCargarInformacionInicial) {
				this.recargarInformacion();
			}
			*/
			//this.iNumeroPaginacionPagina=0;
			//this.iNumeroPaginacion=DetalleConsignacionConstantesFunciones.INUMEROPAGINACION;
			
			this.actualizarEstadoCeldasBotonesDetalleConsignacion("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			//SOLO LA PRIMERA VEZ HACE LOS BINDINGS, SOLO AHI FUNCIONA
			this.inicializarActualizarBindingDetalleConsignacion(true); 
			
			//SE REDIMENSIONA SINO NO SE ACTUALIZA
			this.redimensionarTablaDatos();
			
			
			this.initActions();
			
			;
						
			if(this.jInternalFrameDetalleFormDetalleConsignacion!=null) {//if(this.conCargarFormDetalle) {
				this.cargarMenuRelaciones();
			}
			
			//OBLIGA CARGAR DETALLE, MEJOR DESHABILITAR, FALTA TALVEZ PONER EN SELECCIONAR
			//MAYBE
			//this.updateControlesFormularioDetalleConsignacion();
			
			if(!this.conCargarMinimo) {
				this.updateBusquedasFormularioDetalleConsignacion();
			}
			
			DetalleConsignacionBeanSwingJInternalFrameAdditional.CargaInicial(this, "NORMAL", null);
			
			
			//SE REALIZA ESTO PARA QUE SE PUEDA RECORRER TAB SIN IMPORTAR ORDEN
			Boolean existeTabBusqueda=false;
			
			if(!this.conCargarMinimo) {
				//BYDAN_BUSQUEDAS
				
				
				for(int i=0; i<this.jTabbedPaneBusquedasDetalleConsignacion.getTabCount(); i++) {
					this.jTabbedPaneBusquedasDetalleConsignacion.setSelectedIndex(i);
						
					if(!existeTabBusqueda) {
						existeTabBusqueda=true;
					}
				}
					
				if(existeTabBusqueda) {
					this.jTabbedPaneBusquedasDetalleConsignacion.setSelectedIndex(0);
				}	
				
				
			}
			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleconsignacionLogic.commitNewConnexionToDeep();
			}
			
			
			if(Constantes2.ISDEVELOPING2) {
				end_time = System.currentTimeMillis();			
				String sTipo="Load Ventana";
				Funciones2.getMensajeTiempoEjecucion(start_time, end_time, sTipo,false);
			}  
			
			this.finishProcessDetalleConsignacion(true);
			
			this.dEnd=(double)System.currentTimeMillis();
			
			this.dDif=this.dEnd - this.dStart;
			
			if(Constantes.ISDEVELOPING) {
				System.out.println("Tiempo(ms) Carga DetalleConsignacion: " + this.dDif); 
			}
			
			this.permiteRecargarForm=true;
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleconsignacionLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,DetalleConsignacionConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleconsignacionLogic.closeNewConnexionToDeep();
			}
		}	 
    }
	
	public void cargarTiposRelacionesSelectDetalleConsignacion() {
		Reporte reporte=new Reporte();
		
	
	}
	
	
	
	public void jTabbedPaneChangeListenerGeneral(String sTipo,ChangeEvent evt) { 	  
		Boolean procesaCargarParteTab=false;
			
		try {
			int iIndex=0;		    			
			String sTitle="";
			
			//TABBED PANE RELACIONES
			if(sTipo.equals("RelacionesDetalleConsignacion")) {
				iIndex=this.jInternalFrameDetalleFormDetalleConsignacion.jTabbedPaneRelacionesDetalleConsignacion.getSelectedIndex();		    
			
				sTitle=this.jInternalFrameDetalleFormDetalleConsignacion.jTabbedPaneRelacionesDetalleConsignacion.getTitleAt(iIndex);
				
				Integer intSelectedRow = 0;	
			
				intSelectedRow = this.jTableDatosDetalleConsignacion.getSelectedRow();	
				
				
				
			}
			
			//TABBED PANE RELACIONES FIN(EXTRA TAB)
			;
			
  		} catch(Exception e) {
  			e.printStackTrace();
  		} finally {
			if(procesaCargarParteTab) {				
				this.finishProcessDetalleConsignacion();	
			}
		}
    }
	
	
	
	public void jButtonRelacionActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
  		} catch(Exception e) {
  			e.printStackTrace();
  		}
    }
	
	public void cargarMenuRelaciones() {	
		JMenuItem jmenuItem= new JMenuItem("General");
		String sLabelMenu="";
		
	}		
	
	public void cargarCombosForeignKeyDetalleConsignacion(Boolean cargarCombosDependencia) throws Exception {   
		this.cargarCombosForeignKeyDetalleConsignacion(cargarCombosDependencia,true,true);
	}
	
	//CARGAR COMBOS EN LOTE
	public void cargarCombosForeignKeyDetalleConsignacion(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales) throws Exception {   
		this.cargarCombosTodosForeignKeyDetalleConsignacionListas(cargarCombosDependencia);
				
		this.addItemDefectoCombosTodosForeignKeyDetalleConsignacion();
		
		this.cargarCombosFrameForeignKeyDetalleConsignacion();						
		
		if(conInitActions) {
			this.initActionsCombosTodosForeignKeyDetalleConsignacion();
		}
		
		if(conSetVariablesGlobales) {
			this.setVariablesGlobalesCombosForeignKeyDetalleConsignacion();
		}
	}
	
	

	public void cargarCombosForeignKeyAnio(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyAnioListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyAnio();
				this.cargarCombosFrameAniosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaAnio(this.aniosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyMes(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyMesListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyMes();
				this.cargarCombosFrameMessForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaMes(this.messForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyConsignacion(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyConsignacionListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyConsignacion();
				this.cargarCombosFrameConsignacionsForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaConsignacion(this.consignacionsForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyProducto(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyProductoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyProducto();
				this.cargarCombosFrameProductosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyProducto("Todos");
				}

			this.recargarComboTablaProducto(this.productosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyBodega(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyBodegaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyBodega();
				this.cargarCombosFrameBodegasForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyBodega("Todos");
				}

			this.recargarComboTablaBodega(this.bodegasForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyUnidad(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyUnidadListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyUnidad();
				this.cargarCombosFrameUnidadsForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyBodega("Todos");
				}

			this.recargarComboTablaUnidad(this.unidadsForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyEstadoDetallePedido(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyEstadoDetallePedidoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyEstadoDetallePedido();
				this.cargarCombosFrameEstadoDetallePedidosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyBodega("Todos");
				}

			this.recargarComboTablaEstadoDetallePedido(this.estadodetallepedidosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}
	
	public void jButtonNuevoDetalleConsignacionActionPerformed(ActionEvent evt,Boolean esRelaciones) throws Exception {   
		try {
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.FORM_RECARGAR;
			String sTipo="NUEVO_NORMAL";
			
			this.estaModoNuevo=true;
			
			if(this.detalleconsignacionSessionBean.getConGuardarRelaciones()) {
				this.dStart=(double)System.currentTimeMillis();
			}
				
			//if(this.esUsoDesdeHijo) {
			//	eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			//}
											
			if(this.jInternalFrameDetalleFormDetalleConsignacion==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}			
				
			DetalleConsignacionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.detalleconsignacion,new Object(),this.detalleconsignacionParameterGeneral,this.detalleconsignacionReturnGeneral);
			
			
			if(jTableDatosDetalleConsignacion.getRowCount()>=1) {
				jTableDatosDetalleConsignacion.removeRowSelectionInterval(0, jTableDatosDetalleConsignacion.getRowCount()-1);						
			}
			
			this.isEsNuevoDetalleConsignacion=true;
			
			//ESTABLECE SI ES RELACIONADO O NO 
			this.habilitarDeshabilitarTipoMantenimientoDetalleConsignacion(esRelaciones);
			
			this.nuevoPreparar(false); 
			this.habilitarDeshabilitarControlesDetalleConsignacion(true);			
			//this.detalleconsignacion=new DetalleConsignacion();
			//this.detalleconsignacion.setIsChanged(true);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesDetalleConsignacion(false) ;						
			 
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualDetalleConsignacion() ;
			
			if(DetalleConsignacionJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetalleDetalleConsignacion(esRelaciones);
			}
					
			//Se Duplica, sin sentido
			//this.actualizarInformacion("EVENTO_NUEVO",false,this.detalleconsignacion);	
			this.actualizarInformacion("INFO_PADRE",false,this.detalleconsignacion);				
			
			DetalleConsignacionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.detalleconsignacion,new Object(),this.detalleconsignacionParameterGeneral,this.detalleconsignacionReturnGeneral);
			
			if(this.detalleconsignacionSessionBean.getConGuardarRelaciones()) {
				this.dEnd=(double)System.currentTimeMillis();					
				this.dDif=this.dEnd - this.dStart;
					
				if(Constantes.ISDEVELOPING) {
					System.out.println("Tiempo(ms) Nuevo Preparar DetalleConsignacion: " + this.dDif); 
				}
			}
			
			//false para que pueda generar eventos
			this.estaModoNuevo=false;
							
			//Con this.estaModoNuevo=false;, se permite actualizar y usar eventos control al mismo tiempo (FuncionTipo.LAST)			
			DetalleConsignacionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.LAST,ControlTipo.FORM,EventoTipo.CLIC,EventoSubTipo.NEW,sTipo,this.detalleconsignacion,new Object(),this.detalleconsignacionParameterGeneral,this.detalleconsignacionReturnGeneral);
			
		} catch(Exception e) {									
			FuncionesSwing.manageException(this, e,logger,DetalleConsignacionConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoNuevo=false;			
		}
	}
	
	public void jButtonDuplicarDetalleConsignacionActionPerformed(ActionEvent evt,Boolean esRelaciones) throws Exception {   
		try {
			Boolean soloDuplicarUno=false;
			Boolean conSeleccionarFilaTabla=false;
			
			this.estaModoNuevo=true;
			this.estaModoDuplicar=true;
			
			ArrayList<DetalleConsignacion> detalleconsignacionsSeleccionados=new ArrayList<DetalleConsignacion>();
			int intSelectedRow =-1;
			Integer iNumRowsSeleccionados=0;
			int[] arrNumRowsSeleccionados=null;
			
			//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
			if(conSeleccionarFilaTabla) {
				arrNumRowsSeleccionados=this.jTableDatosDetalleConsignacion.getSelectedRows();
				iNumRowsSeleccionados=this.jTableDatosDetalleConsignacion.getSelectedRows().length;			
			}
			
			detalleconsignacionsSeleccionados=this.getDetalleConsignacionsSeleccionados(false);
				
			if((soloDuplicarUno && iNumRowsSeleccionados.equals(1)) || !soloDuplicarUno) {
				//LO HACE NUEVOPREPARAR
				//this.iIdNuevoDetalleConsignacion--;			
				//DetalleConsignacion detalleconsignacionAux= new DetalleConsignacion();			
				//detalleconsignacionAux.setId(this.iIdNuevoDetalleConsignacion);																
				
				//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
				//DetalleConsignacion detalleconsignacionOrigen=new DetalleConsignacion();
				//for(Integer iNumRowSeleccionado:arrNumRowsSeleccionados) {				
				
				for(DetalleConsignacion detalleconsignacionOrigen : detalleconsignacionsSeleccionados) {
					if(conSeleccionarFilaTabla) {
						if(!soloDuplicarUno) {
							//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
							//intSelectedRow =iNumRowSeleccionado;
						} else {
							intSelectedRow = this.jTableDatosDetalleConsignacion.getSelectedRow();
						}
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							detalleconsignacionOrigen =(DetalleConsignacion) this.detalleconsignacionLogic.getDetalleConsignacions().toArray()[this.jTableDatosDetalleConsignacion.convertRowIndexToModel(intSelectedRow)];
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detalleconsignacionOrigen =(DetalleConsignacion) this.detalleconsignacions.toArray()[this.jTableDatosDetalleConsignacion.convertRowIndexToModel(intSelectedRow)];
						}
					}
					
					this.aumentarTamanioFilaNuevaTablaDetalleConsignacion();
					
					if(this.conTotales) {
						this.quitarFilaTotales();
					}
					
					this.nuevoPreparar(true);
					
					this.detalleconsignacion.setsType("DUPLICADO");
					
					this.setCopiarVariablesObjetosDetalleConsignacion(detalleconsignacionOrigen,this.detalleconsignacion,true,true);
					
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleConsignacion(this.detalleconsignacion);
					
					//LO HACE NUEVOPREPARAR
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						this.detalleconsignacionLogic.getDetalleConsignacions().add(this.detalleconsignacionAux);
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						this.detalleconsignacions.add(this.detalleconsignacionAux);				
					}
					*/
				}
				
				this.inicializarActualizarBindingTablaDetalleConsignacion(false);
				
				this.jTableDatosDetalleConsignacion.setRowSelectionInterval(this.getIndiceNuevoDetalleConsignacion(), this.getIndiceNuevoDetalleConsignacion());
				
				int iLastRow =  this.jTableDatosDetalleConsignacion.getRowCount () - 1;
				Rectangle rectangle = this.jTableDatosDetalleConsignacion.getCellRect(iLastRow, 0, true);
				
				this.jTableDatosDetalleConsignacion.scrollRectToVisible(rectangle);
				
				//FILA TOTALES
				if(this.conTotales) {
					this.crearFilaTotales();
					
					this.inicializarActualizarBindingTablaDetalleConsignacion(false);
				}
			} else {
				throw new Exception("DEBE ESTAR SELECCIONADO 1 REGISTRO");
			}
			
		} catch(Exception e) {			
			FuncionesSwing.manageException(this, e,logger,DetalleConsignacionConstantesFunciones.CLASSNAME);
		
		} finally {
			this.estaModoNuevo=false;
			this.estaModoDuplicar=false;
		}
	}
	
	public void jButtonCopiarDetalleConsignacionActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			Boolean conSeleccionarFilaTabla=false;
			Integer iNumRowsSeleccionados=0;
			int[] intSelectedRows =null;
			int intSelectedRow =0;
			
			this.estaModoCopiar=true;
			
			ArrayList<DetalleConsignacion> detalleconsignacionsSeleccionados=new ArrayList<DetalleConsignacion>();									
		
			DetalleConsignacion detalleconsignacionOrigen=new DetalleConsignacion();
			DetalleConsignacion detalleconsignacionDestino=new DetalleConsignacion();
				
			detalleconsignacionsSeleccionados=this.getDetalleConsignacionsSeleccionados(false);
			
			if(conSeleccionarFilaTabla) {
				iNumRowsSeleccionados=this.jTableDatosDetalleConsignacion.getSelectedRows().length;	
			}
			
			if(iNumRowsSeleccionados.equals(2) || detalleconsignacionsSeleccionados.size()==2) {
				if(conSeleccionarFilaTabla) {
					intSelectedRows =this.jTableDatosDetalleConsignacion.getSelectedRows();
					intSelectedRow = intSelectedRows[0];	
									
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						detalleconsignacionOrigen =(DetalleConsignacion) this.detalleconsignacionLogic.getDetalleConsignacions().toArray()[this.jTableDatosDetalleConsignacion.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						detalleconsignacionOrigen =(DetalleConsignacion) this.detalleconsignacions.toArray()[this.jTableDatosDetalleConsignacion.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					intSelectedRow = intSelectedRows[1];
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						detalleconsignacionDestino =(DetalleConsignacion) this.detalleconsignacionLogic.getDetalleConsignacions().toArray()[this.jTableDatosDetalleConsignacion.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						detalleconsignacionDestino =(DetalleConsignacion) this.detalleconsignacions.toArray()[this.jTableDatosDetalleConsignacion.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				}
				
				detalleconsignacionOrigen =detalleconsignacionsSeleccionados.get(0);
				detalleconsignacionDestino =detalleconsignacionsSeleccionados.get(1);
				
				this.setCopiarVariablesObjetosDetalleConsignacion(detalleconsignacionOrigen,detalleconsignacionDestino,true,false);
				
				detalleconsignacionDestino.setsType("DUPLICADO");
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					actualizarLista(detalleconsignacionDestino,detalleconsignacionLogic.getDetalleConsignacions());					
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(detalleconsignacionDestino,detalleconsignacions);
				}
				//ARCHITECTURE
				
				this.inicializarActualizarBindingTablaDetalleConsignacion(false);
				
				//this.jTableDatosDetalleConsignacion.setRowSelectionInterval(this.getIndiceNuevoDetalleConsignacion(), this.getIndiceNuevoDetalleConsignacion());
				
				int iLastRow =  this.jTableDatosDetalleConsignacion.getRowCount () - 1;
				Rectangle rectangle = this.jTableDatosDetalleConsignacion.getCellRect(iLastRow, 0, true);
				
				this.jTableDatosDetalleConsignacion.scrollRectToVisible(rectangle);
				
				//FILA TOTALES
				if(this.conTotales) {
					//this.crearFilaTotales();
					
					this.inicializarActualizarBindingTablaDetalleConsignacion(false);
				}
			} else {
				throw new Exception("DEBEN ESTAR SELECCIONADOS 2 REGISTROS");
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleConsignacionConstantesFunciones.CLASSNAME);
		
		}  finally {
			this.estaModoCopiar=false;
		}
	}
	
	public void jButtonVerFormDetalleConsignacionActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			if(this.jInternalFrameDetalleFormDetalleConsignacion==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			this.jInternalFrameDetalleFormDetalleConsignacion.setSelected(true);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleConsignacionConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonMostrarOcultarDetalleConsignacionActionPerformed(ActionEvent evt) throws Exception {   
		try {
			Boolean isVisible=this.jPanelParametrosReportesDetalleConsignacion.isVisible();
			
			//BYDAN_BUSQUEDAS
			
			this.jTabbedPaneBusquedasDetalleConsignacion.setVisible(!isVisible);			
			
			
			this.jPanelParametrosReportesDetalleConsignacion.setVisible(!isVisible);
			this.jPanelPaginacionDetalleConsignacion.setVisible(!isVisible);
			this.jPanelAccionesDetalleConsignacion.setVisible(!isVisible);
							
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleConsignacionConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarDetalleConsignacionActionPerformed(ActionEvent evt) throws Exception {   
		try {
			this.closingInternalFrameDetalleConsignacion();
			
			//if(this.jInternalFrameParent==null) {
				//this.dispose();
			/*} else {
				this.setVisible(false);
	        	this.setSelected(false);	
			}*/			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleConsignacionConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarReporteDinamicoDetalleConsignacionActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.cerrarFrameReporteDinamicoDetalleConsignacion();
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleConsignacionConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarImportacionDetalleConsignacionActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.cerrarFrameImportacionDetalleConsignacion();
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleConsignacionConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonAbrirTotalesDetalleConsignacionActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.abrirInicializarFrameTotalesDetalleConsignacion();
			
			this.abrirFrameTotalesDetalleConsignacion();
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleConsignacionConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarTotalesDetalleConsignacionActionPerformed(ActionEvent evt) throws Exception {   
		try {
			this.cerrarFrameTotalesDetalleConsignacion();
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleConsignacionConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonAbrirOrderByDetalleConsignacionActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			
			this.abrirInicializarFrameOrderByDetalleConsignacion();
			
			this.abrirFrameOrderByDetalleConsignacion();
			
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleConsignacionConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarOrderByDetalleConsignacionActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.cerrarFrameOrderByDetalleConsignacion();
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleConsignacionConstantesFunciones.CLASSNAME);
		}
	}
	
	public void abrirFrameDetalleDetalleConsignacion(Boolean esRelaciones) throws Exception {	    	        
	    try {
			//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false
			//this.jDesktopPane.add(jInternalFrameDetalleFormDetalleConsignacion);
			
			if(!esRelaciones) {
				if(this.jInternalFrameDetalleFormDetalleConsignacion.isMaximum()) {
					this.jInternalFrameDetalleFormDetalleConsignacion.setMaximum(false);
				}								
				
	    		this.jInternalFrameDetalleFormDetalleConsignacion.setSize(this.jInternalFrameDetalleFormDetalleConsignacion.iWidthFormulario,this.jInternalFrameDetalleFormDetalleConsignacion.iHeightFormulario);
	    	} else {
				if(this.iWidthScroll<this.jInternalFrameDetalleFormDetalleConsignacion.iWidthFormularioMaximo) {
	    			this.jInternalFrameDetalleFormDetalleConsignacion.setSize(this.iWidthScroll,this.iHeightScroll);
				} else {
					if(!this.jInternalFrameDetalleFormDetalleConsignacion.isMaximum()) {
						this.jInternalFrameDetalleFormDetalleConsignacion.setMaximum(true);
					}
				}
				
				if(this.jInternalFrameDetalleFormDetalleConsignacion.jContentPaneDetalleDetalleConsignacion.getWidth() > this.getWidth()) {
					this.jInternalFrameDetalleFormDetalleConsignacion.jTabbedPaneRelacionesDetalleConsignacion.setMinimumSize(new Dimension(this.jInternalFrameDetalleFormDetalleConsignacion.jContentPaneDetalleDetalleConsignacion.getWidth(),DetalleConsignacionConstantesFunciones.ALTO_TABPANE_RELACIONES));
					this.jInternalFrameDetalleFormDetalleConsignacion.jTabbedPaneRelacionesDetalleConsignacion.setMaximumSize(new Dimension(this.jInternalFrameDetalleFormDetalleConsignacion.jContentPaneDetalleDetalleConsignacion.getWidth(),DetalleConsignacionConstantesFunciones.ALTO_TABPANE_RELACIONES));
					this.jInternalFrameDetalleFormDetalleConsignacion.jTabbedPaneRelacionesDetalleConsignacion.setPreferredSize(new Dimension(this.jInternalFrameDetalleFormDetalleConsignacion.jContentPaneDetalleDetalleConsignacion.getWidth(),DetalleConsignacionConstantesFunciones.ALTO_TABPANE_RELACIONES));
					
					Dimension dimension=new Dimension(); 
					
					
					
				}
	    	}
			
		
	       	this.jInternalFrameDetalleFormDetalleConsignacion.setVisible(true);
	        this.jInternalFrameDetalleFormDetalleConsignacion.setSelected(true);
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,DetalleConsignacionConstantesFunciones.CLASSNAME);
	    }
	}
	
	
	public void abrirInicializarFrameOrderByDetalleConsignacion() throws Exception {	    	        
	    try {
			if(this.jInternalFrameOrderByDetalleConsignacion==null) {
				
				if(!this.conCargarMinimo) {
					this.jInternalFrameOrderByDetalleConsignacion=new OrderByJInternalFrame(STIPO_TAMANIO_GENERAL,this.jButtonAbrirOrderByDetalleConsignacion,false,this);
				} else {
					this.jInternalFrameOrderByDetalleConsignacion=new OrderByJInternalFrame(STIPO_TAMANIO_GENERAL,this.jButtonAbrirOrderByDetalleConsignacion,true,this);
				}
				
				this.jDesktopPane.add(this.jInternalFrameOrderByDetalleConsignacion);
				this.jInternalFrameOrderByDetalleConsignacion.setVisible(false);
				this.jInternalFrameOrderByDetalleConsignacion.setSelected(false);
				
				this.jInternalFrameOrderByDetalleConsignacion.getjButtonCerrarOrderBy().addActionListener (new ButtonActionListener(this,"CerrarOrderByDetalleConsignacion"));
				
				this.inicializarActualizarBindingTablaOrderByDetalleConsignacion();
			}
		} catch (final Exception e) {
			
		}
	}
	
	
	
	public void abrirInicializarFrameImportacionDetalleConsignacion() throws Exception {	    	        
	    try {
			if(this.jInternalFrameImportacionDetalleConsignacion==null) {
				
				this.jInternalFrameImportacionDetalleConsignacion=new ImportacionJInternalFrame(DetalleConsignacionConstantesFunciones.SCLASSWEBTITULO,this);			
				
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameImportacionDetalleConsignacion);							
				
				this.jDesktopPane.add(this.jInternalFrameImportacionDetalleConsignacion);
				this.jInternalFrameImportacionDetalleConsignacion.setVisible(false);
				this.jInternalFrameImportacionDetalleConsignacion.setSelected(false);


				this.jInternalFrameImportacionDetalleConsignacion.getjButtonCerrarImportacion().addActionListener (new ButtonActionListener(this,"CerrarImportacionDetalleConsignacion"));
				this.jInternalFrameImportacionDetalleConsignacion.getjButtonGenerarImportacion().addActionListener (new ButtonActionListener(this,"GenerarImportacionDetalleConsignacion"));
				this.jInternalFrameImportacionDetalleConsignacion.getjButtonAbrirImportacion().addActionListener (new ButtonActionListener(this,"AbrirImportacionDetalleConsignacion"));


			}
		} catch (final Exception e) {
			
		}
	}		
	
	
	
	public void abrirInicializarFrameReporteDinamicoDetalleConsignacion() throws Exception {	    	        
	    try {
			
			if(this.jInternalFrameReporteDinamicoDetalleConsignacion==null) {
				this.jInternalFrameReporteDinamicoDetalleConsignacion=new ReporteDinamicoJInternalFrame(DetalleConsignacionConstantesFunciones.SCLASSWEBTITULO,this);	
				
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameReporteDinamicoDetalleConsignacion);	
	
	
				this.jDesktopPane.add(this.jInternalFrameReporteDinamicoDetalleConsignacion);
				this.jInternalFrameReporteDinamicoDetalleConsignacion.setVisible(false);
				this.jInternalFrameReporteDinamicoDetalleConsignacion.setSelected(false);
	
	
	
				this.jInternalFrameReporteDinamicoDetalleConsignacion.getjButtonCerrarReporteDinamico().addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoDetalleConsignacion"));
				this.jInternalFrameReporteDinamicoDetalleConsignacion.getjButtonGenerarReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoDetalleConsignacion"));
				this.jInternalFrameReporteDinamicoDetalleConsignacion.getjButtonGenerarExcelReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoDetalleConsignacion"));
	
				this.inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualDetalleConsignacion();
			}

		} catch (final Exception e) {
			
		}
	}	
	
	
	public void abrirInicializarFrameTotalesDetalleConsignacion() throws Exception {	    	        
	    try {			
			if(this.jInternalFrameTotalesDetalleConsignacion==null) {
				this.jInternalFrameTotalesDetalleConsignacion=new TotalesJInternalFrame(this.jButtonAbrirTotalesDetalleConsignacion,STIPO_TAMANIO_GENERAL,this);
				
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameTotalesDetalleConsignacion);

				//TOTALES
				this.jDesktopPane.add(this.jInternalFrameTotalesDetalleConsignacion);
				this.jInternalFrameTotalesDetalleConsignacion.setVisible(false);
				this.jInternalFrameTotalesDetalleConsignacion.setSelected(false);


				this.jInternalFrameTotalesDetalleConsignacion.getjButtonCerrarTotales().addActionListener (new ButtonActionListener(this,"CerrarTotalesDetalleConsignacion"));
								
				this.inicializarActualizarBindingTablaTotalesDetalleConsignacion();
				
				this.redimensionarTablaTotales();
			}			
		} catch (final Exception e) {
			
		}
	}	
	
		
					
	public void cerrarFrameDetalleDetalleConsignacion() throws Exception {	    	        
	    try {
			//this.jDesktopPane.add(jInternalFrameDetalleFormDetalleConsignacion);
			
	       	this.jInternalFrameDetalleFormDetalleConsignacion.setVisible(false);
	        this.jInternalFrameDetalleFormDetalleConsignacion.setSelected(false);
			
			//this.jInternalFrameDetalleFormDetalleConsignacion.dispose();
			//this.jInternalFrameDetalleFormDetalleConsignacion=null;
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,DetalleConsignacionConstantesFunciones.CLASSNAME);
	    }
	}
	
	
	public void abrirFrameReporteDinamicoDetalleConsignacion() throws Exception {	    	        
	    try {
			
			this.jInternalFrameReporteDinamicoDetalleConsignacion.setVisible(true);
	        this.jInternalFrameReporteDinamicoDetalleConsignacion.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,DetalleConsignacionConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void abrirFrameImportacionDetalleConsignacion() throws Exception {	    	        		
	    try {			
			this.jInternalFrameImportacionDetalleConsignacion.setVisible(true);
	        this.jInternalFrameImportacionDetalleConsignacion.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,DetalleConsignacionConstantesFunciones.CLASSNAME);
	    }		
	}	
	
	
	public void abrirFrameTotalesDetalleConsignacion() throws Exception {	    	        
	    try {
			this.jInternalFrameTotalesDetalleConsignacion.setVisible(true);
	        this.jInternalFrameTotalesDetalleConsignacion.setSelected(true);
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,DetalleConsignacionConstantesFunciones.CLASSNAME);
	    }
	}
	
	public void cerrarFrameTotalesDetalleConsignacion() throws Exception {	    	        
	    try {
			this.jInternalFrameTotalesDetalleConsignacion.setVisible(false);
	        this.jInternalFrameTotalesDetalleConsignacion.setSelected(false);
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,DetalleConsignacionConstantesFunciones.CLASSNAME);
	    }
	}
	
	
	
	public void abrirFrameOrderByDetalleConsignacion() throws Exception {	    	        		
	    try {
			this.jInternalFrameOrderByDetalleConsignacion.setVisible(true);
	        this.jInternalFrameOrderByDetalleConsignacion.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,DetalleConsignacionConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void cerrarFrameOrderByDetalleConsignacion() throws Exception {	    	        		
	    try {			
			this.jInternalFrameOrderByDetalleConsignacion.setVisible(false);
	        this.jInternalFrameOrderByDetalleConsignacion.setSelected(false);			
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,DetalleConsignacionConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void cerrarFrameReporteDinamicoDetalleConsignacion() throws Exception {			
	    try {
			this.jInternalFrameReporteDinamicoDetalleConsignacion.setVisible(false);
	        this.jInternalFrameReporteDinamicoDetalleConsignacion.setSelected(false);			
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,DetalleConsignacionConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void cerrarFrameImportacionDetalleConsignacion() throws Exception {	    	        		
	    try {
			this.jInternalFrameImportacionDetalleConsignacion.setVisible(false);
	        this.jInternalFrameImportacionDetalleConsignacion.setSelected(false);
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,DetalleConsignacionConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	
	public void jButtonModificarDetalleConsignacionActionPerformed(ActionEvent evt) throws Exception {   
		try {
			this.modificarDetalleConsignacion(evt,-1,false);
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleConsignacionConstantesFunciones.CLASSNAME);
		}
	}
	
	public void modificarDetalleConsignacion(ActionEvent evt,int rowIndex,Boolean esRelaciones) throws Exception {   
		try {
			int intSelectedRow = 0;	
			
			if(rowIndex>=0) {
				intSelectedRow=rowIndex;
			} else {
				intSelectedRow = this.jTableDatosDetalleConsignacion.getSelectedRow();
			}
			
			this.habilitarDeshabilitarControlesDetalleConsignacion(true);
			//this.isEsNuevoDetalleConsignacion=false;
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleconsignacion =(DetalleConsignacion) this.detalleconsignacionLogic.getDetalleConsignacions().toArray()[this.jTableDatosDetalleConsignacion.convertRowIndexToModel(intSelectedRow)];
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.detalleconsignacion =(DetalleConsignacion) this.detalleconsignacions.toArray()[this.jTableDatosDetalleConsignacion.convertRowIndexToModel(intSelectedRow)];
			}
			//ARCHITECTURE
			
			this.actualizarEstadoCeldasBotonesDetalleConsignacion("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesDetalleConsignacion(false) ;
			
			if(detalleconsignacionSessionBean.getConGuardarRelaciones()) {
			
			}
			
			if(DetalleConsignacionJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetalleDetalleConsignacion(esRelaciones);
			}
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualDetalleConsignacion(false) ;
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleConsignacionConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarFilaTablaDetalleConsignacionActual() { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL
			Integer intSelectedRow = this.jTableDatosDetalleConsignacion.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleconsignacion =(DetalleConsignacion) this.detalleconsignacionLogic.getDetalleConsignacions().toArray()[this.jTableDatosDetalleConsignacion.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.detalleconsignacion =(DetalleConsignacion) this.detalleconsignacions.toArray()[this.jTableDatosDetalleConsignacion.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleConsignacionConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void seleccionarDetalleConsignacion(ActionEvent evt,int rowIndex) throws Exception {   
		try {
			
			if(this.jInternalFrameDetalleFormDetalleConsignacion==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			int intSelectedRow = 0;	
			
			if(rowIndex>=0) {
				intSelectedRow=rowIndex;
			} else {
				intSelectedRow = this.jTableDatosDetalleConsignacion.getSelectedRow();
			}
			
			//this.habilitarDeshabilitarControlesDetalleConsignacion(true);
			//this.isEsNuevoDetalleConsignacion=false;
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleconsignacion =(DetalleConsignacion) this.detalleconsignacionLogic.getDetalleConsignacions().toArray()[this.jTableDatosDetalleConsignacion.convertRowIndexToModel(intSelectedRow)];
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.detalleconsignacion =(DetalleConsignacion) this.detalleconsignacions.toArray()[this.jTableDatosDetalleConsignacion.convertRowIndexToModel(intSelectedRow)];
			}
			//ARCHITECTURE
			
			this.jInternalFrameParent.setIdCombosCodigoDesdeBusquedaForeignKey(this.detalleconsignacion.getId(),this.sTipoBusqueda);
			
			this.dispose();
			
			//this.actualizarEstadoCeldasBotonesDetalleConsignacion("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
			//NO FUNCIONA BINDINGS
			/*
			this.inicializarActualizarBindingBotonesDetalleConsignacion(false) ;
			
			if(DetalleConsignacionJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetalleDetalleConsignacion(esRelaciones);
			}
			*/
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualDetalleConsignacion(false) ;
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleConsignacionConstantesFunciones.CLASSNAME);
		}
	}		
	
	public void setIdCombosCodigoDesdeBusquedaForeignKey(Long id,String sType)throws Exception{
		
		try {
			
			if(sType.equals("Producto")) {
				if(!this.detalleconsignacionConstantesFunciones.cargarid_productoDetalleConsignacion) {
					this.cargarCombosProductosForeignKeyLista(" where id="+id);
					//this.inicializarActualizarBindingDetalleConsignacion(false,false);
					this.cargarCombosFrameProductosForeignKey("Todos");
				}

				this.setCombosCodigoDesdeBusquedaid_producto (id);

				this.recargarComboTablaProducto(this.productosForeignKey);

			}
		} catch(Exception e) {
			throw e;
		}
	}
	
					
	
	public void recargarComboTablaAnio(List<Anio> aniosForeignKey)throws Exception{
		TableColumn tableColumnAnio=this.jTableDatosDetalleConsignacion.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleConsignacion,DetalleConsignacionConstantesFunciones.LABEL_IDANIO));
		TableCellEditor tableCellEditorAnio =tableColumnAnio.getCellEditor();

		AnioTableCell anioTableCellFk=(AnioTableCell)tableCellEditorAnio;

		if(anioTableCellFk!=null) {
			anioTableCellFk.setaniosForeignKey(aniosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosDetalleConsignacion.getSelectedRow();

		//if(intSelectedRow<=0) {
			//anioTableCellFk.setRowActual(intSelectedRow);
			//anioTableCellFk.setaniosForeignKeyActual(aniosForeignKey);
		//}


		if(anioTableCellFk!=null) {
			anioTableCellFk.RecargarAniosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaMes(List<Mes> messForeignKey)throws Exception{
		TableColumn tableColumnMes=this.jTableDatosDetalleConsignacion.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleConsignacion,DetalleConsignacionConstantesFunciones.LABEL_IDMES));
		TableCellEditor tableCellEditorMes =tableColumnMes.getCellEditor();

		MesTableCell mesTableCellFk=(MesTableCell)tableCellEditorMes;

		if(mesTableCellFk!=null) {
			mesTableCellFk.setmessForeignKey(messForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosDetalleConsignacion.getSelectedRow();

		//if(intSelectedRow<=0) {
			//mesTableCellFk.setRowActual(intSelectedRow);
			//mesTableCellFk.setmessForeignKeyActual(messForeignKey);
		//}


		if(mesTableCellFk!=null) {
			mesTableCellFk.RecargarMessForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaConsignacion(List<Consignacion> consignacionsForeignKey)throws Exception{
		TableColumn tableColumnConsignacion=this.jTableDatosDetalleConsignacion.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleConsignacion,DetalleConsignacionConstantesFunciones.LABEL_IDCONSIGNACION));
		TableCellEditor tableCellEditorConsignacion =tableColumnConsignacion.getCellEditor();

		ConsignacionTableCell consignacionTableCellFk=(ConsignacionTableCell)tableCellEditorConsignacion;

		if(consignacionTableCellFk!=null) {
			consignacionTableCellFk.setconsignacionsForeignKey(consignacionsForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosDetalleConsignacion.getSelectedRow();

		//if(intSelectedRow<=0) {
			//consignacionTableCellFk.setRowActual(intSelectedRow);
			//consignacionTableCellFk.setconsignacionsForeignKeyActual(consignacionsForeignKey);
		//}


		if(consignacionTableCellFk!=null) {
			consignacionTableCellFk.RecargarConsignacionsForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaProducto(List<Producto> productosForeignKey)throws Exception{
		TableColumn tableColumnProducto=this.jTableDatosDetalleConsignacion.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleConsignacion,DetalleConsignacionConstantesFunciones.LABEL_IDPRODUCTO));
		TableCellEditor tableCellEditorProducto =tableColumnProducto.getCellEditor();

		ProductoTableCell productoTableCellFk=(ProductoTableCell)tableCellEditorProducto;

		if(productoTableCellFk!=null) {
			productoTableCellFk.setproductosForeignKey(productosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosDetalleConsignacion.getSelectedRow();

		//if(intSelectedRow<=0) {
			//productoTableCellFk.setRowActual(intSelectedRow);
			//productoTableCellFk.setproductosForeignKeyActual(productosForeignKey);
		//}


		if(productoTableCellFk!=null) {
			productoTableCellFk.RecargarProductosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaBodega(List<Bodega> bodegasForeignKey)throws Exception{
		TableColumn tableColumnBodega=this.jTableDatosDetalleConsignacion.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleConsignacion,DetalleConsignacionConstantesFunciones.LABEL_IDBODEGA));
		TableCellEditor tableCellEditorBodega =tableColumnBodega.getCellEditor();

		BodegaTableCell bodegaTableCellFk=(BodegaTableCell)tableCellEditorBodega;

		if(bodegaTableCellFk!=null) {
			bodegaTableCellFk.setbodegasForeignKey(bodegasForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosDetalleConsignacion.getSelectedRow();

		//if(intSelectedRow<=0) {
			//bodegaTableCellFk.setRowActual(intSelectedRow);
			//bodegaTableCellFk.setbodegasForeignKeyActual(bodegasForeignKey);
		//}


		if(bodegaTableCellFk!=null) {
			bodegaTableCellFk.RecargarBodegasForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaUnidad(List<Unidad> unidadsForeignKey)throws Exception{
		TableColumn tableColumnUnidad=this.jTableDatosDetalleConsignacion.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleConsignacion,DetalleConsignacionConstantesFunciones.LABEL_IDUNIDAD));
		TableCellEditor tableCellEditorUnidad =tableColumnUnidad.getCellEditor();

		UnidadTableCell unidadTableCellFk=(UnidadTableCell)tableCellEditorUnidad;

		if(unidadTableCellFk!=null) {
			unidadTableCellFk.setunidadsForeignKey(unidadsForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosDetalleConsignacion.getSelectedRow();

		//if(intSelectedRow<=0) {
			//unidadTableCellFk.setRowActual(intSelectedRow);
			//unidadTableCellFk.setunidadsForeignKeyActual(unidadsForeignKey);
		//}


		if(unidadTableCellFk!=null) {
			unidadTableCellFk.RecargarUnidadsForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaEstadoDetallePedido(List<EstadoDetallePedido> estadodetallepedidosForeignKey)throws Exception{
		TableColumn tableColumnEstadoDetallePedido=this.jTableDatosDetalleConsignacion.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleConsignacion,DetalleConsignacionConstantesFunciones.LABEL_IDESTADODETALLEPEDIDO));
		TableCellEditor tableCellEditorEstadoDetallePedido =tableColumnEstadoDetallePedido.getCellEditor();

		EstadoDetallePedidoTableCell estadodetallepedidoTableCellFk=(EstadoDetallePedidoTableCell)tableCellEditorEstadoDetallePedido;

		if(estadodetallepedidoTableCellFk!=null) {
			estadodetallepedidoTableCellFk.setestadodetallepedidosForeignKey(estadodetallepedidosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosDetalleConsignacion.getSelectedRow();

		//if(intSelectedRow<=0) {
			//estadodetallepedidoTableCellFk.setRowActual(intSelectedRow);
			//estadodetallepedidoTableCellFk.setestadodetallepedidosForeignKeyActual(estadodetallepedidosForeignKey);
		//}


		if(estadodetallepedidoTableCellFk!=null) {
			estadodetallepedidoTableCellFk.RecargarEstadoDetallePedidosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	

	public void setCombosCodigoDesdeBusquedaid_producto (Long id) throws Exception {
		this.setActualProductoForeignKey(id,true,"Todos");

	};
	
	public void jButtonActualizarDetalleConsignacionActionPerformed(ActionEvent evt) throws Exception {   
		try	{
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleconsignacionLogic.getNewConnexionToDeep("");
			}
			
			this.inicializarActualizarBindingParametrosReportesDetalleConsignacion(false);
			
			//if(!this.isEsNuevoDetalleConsignacion) {								
				int intSelectedRow = this.jTableDatosDetalleConsignacion.getSelectedRow();	
				
				//SE PIEDE INDICE SELECTED CON FILA TOTALES, ASEGURARSE QUE OBJETO ACTUAL ESTE EN FORMULARIO
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleconsignacion =(DetalleConsignacion) this.detalleconsignacionLogic.getDetalleConsignacions().toArray()[this.jTableDatosDetalleConsignacion.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detalleconsignacion =(DetalleConsignacion) this.detalleconsignacions.toArray()[this.jTableDatosDetalleConsignacion.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
			//}
				
			if(DetalleConsignacionJInternalFrame.ISBINDING_MANUAL_TABLA) {
				this.setVariablesFormularioToObjetoActualDetalleConsignacion(this.detalleconsignacion,true);
				this.setVariablesFormularioToObjetoActualForeignKeysDetalleConsignacion(this.detalleconsignacion);
				
			}
			
			if(this.permiteMantenimiento(this.detalleconsignacion)) {	
				this.actualizar();
				
				if(!this.isGuardarCambiosEnLote && !this.detalleconsignacionSessionBean.getEsGuardarRelacionado()) {
					this.procesarBusqueda(sAccionBusqueda);
					
					this.isEsNuevoDetalleConsignacion=true;
					this.inicializarActualizarBindingTablaDetalleConsignacion(false);
					this.isEsNuevoDetalleConsignacion=false;
				
				} else {					
					
					//PARA RELACIONADO ACTUALIZAR FILA TOTALES
					this.isEsNuevoDetalleConsignacion=true;
					this.procesoActualizarFilaTotales(false,"MANTENIMIENTO");
					this.isEsNuevoDetalleConsignacion=false;
				}
						
								
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingBotonesDetalleConsignacion(false);
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualDetalleConsignacion(false);
				
				this.habilitarDeshabilitarControlesDetalleConsignacion(false);
			
				
				if(this.jInternalFrameParent!=null) {
					this.jInternalFrameParent.setEsUsoDesdeHijo(true);
					this.jInternalFrameParent.jTextFieldActionPerformedGeneral("numero_autorizacionPedido",null);
					this.jInternalFrameParent.setEsUsoDesdeHijo(false);
				}								
				
				if(DetalleConsignacionJInternalFrame.CON_DATOS_FRAME) {
					if(!this.isPostAccionSinCerrar) {
						this.cerrarFrameDetalleDetalleConsignacion();
					}
				}
				
				if(this.isPostAccionNuevo) {
					this.jButtonNuevoDetalleConsignacionActionPerformed(evt,detalleconsignacionSessionBean.getConGuardarRelaciones());
				} else {
					if(this.isPostAccionSinCerrar) {
						Integer intSelectedRowActual=this.getIndiceActualDetalleConsignacion(this.detalleconsignacion,intSelectedRow);
						
						if(intSelectedRow>-1) {
							this.jTableDatosDetalleConsignacion.setRowSelectionInterval(intSelectedRowActual, intSelectedRowActual);
							this.jButtonIdActionPerformed(evt,intSelectedRowActual,detalleconsignacionSessionBean.getConGuardarRelaciones(),false);
						}
					}
				}
				
				this.cancelar(false);
				
			} else {
				JOptionPane.showMessageDialog(this,"ESTE REGISTRO NO PUEDE ACTUALIZARSE","EDITAR",JOptionPane.ERROR_MESSAGE);
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleconsignacionLogic.commitNewConnexionToDeep();
			}
			
			
			if(this.jInternalFrameParent!=null) { //&& this.isEsMantenimientoRelacionado) {
				Boolean esUsoDesdeHijoLocal=true;
				String sTipo="Formulario";
				Boolean conIrServidorAplicacionParent=false;
				Long id=this.detalleconsignacion.getId();
				ArrayList<String> arrClasses=new ArrayList<String>();
				
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();
				
				generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
				generalEntityParameterGeneral.setsDominio("Formulario");
				generalEntityParameterGeneral.setsDominioTipo(DetalleConsignacion.class.getName());
				
				this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",DetalleConsignacion.class.getName(),sTipo,"FORMULARIO",esControlTabla,conIrServidorAplicacionParent,
					id,this, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.FORM,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
					evt,generalEntityParameterGeneral,this);
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleconsignacionLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,DetalleConsignacionConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleconsignacionLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonEliminarDetalleConsignacionActionPerformed(ActionEvent evt) throws Exception {   
		try	{
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleconsignacionLogic.getNewConnexionToDeep("");
			}
			
			int intSelectedRow = this.jTableDatosDetalleConsignacion.getSelectedRow();	       
							
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleconsignacion =(DetalleConsignacion) this.detalleconsignacionLogic.getDetalleConsignacions().toArray()[this.jTableDatosDetalleConsignacion.convertRowIndexToModel(intSelectedRow)];
				this.detalleconsignacion.setIsDeleted(true);
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.detalleconsignacion =(DetalleConsignacion) this.detalleconsignacions.toArray()[this.jTableDatosDetalleConsignacion.convertRowIndexToModel(intSelectedRow)];
				this.detalleconsignacion.setIsDeleted(true);
			}
			//ARCHITECTURE
			
			if(this.permiteMantenimiento(this.detalleconsignacion)) {
				this.eliminar();
				
				if(!this.isGuardarCambiosEnLote && !this.detalleconsignacionSessionBean.getEsGuardarRelacionado()) {
					this.procesarBusqueda(sAccionBusqueda);
				}
				
				((DetalleConsignacionModel) this.jTableDatosDetalleConsignacion.getModel()).fireTableRowsDeleted(intSelectedRow,intSelectedRow);
				
				this.isEsNuevoDetalleConsignacion=true;
				this.inicializarActualizarBindingTablaDetalleConsignacion(false);
				this.isEsNuevoDetalleConsignacion=false;									
					
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingBotonesDetalleConsignacion(false);
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualDetalleConsignacion(false);
				
				this.habilitarDeshabilitarControlesDetalleConsignacion(false);
				
				
				if(this.jInternalFrameParent!=null) {
					this.jInternalFrameParent.setEsUsoDesdeHijo(true);
					this.jInternalFrameParent.jTextFieldActionPerformedGeneral("numero_autorizacionPedido",null);
					this.jInternalFrameParent.setEsUsoDesdeHijo(false);
				}
				
				if(DetalleConsignacionJInternalFrame.CON_DATOS_FRAME) {
					this.cerrarFrameDetalleDetalleConsignacion();
				}
			} else {
				JOptionPane.showMessageDialog(this,"ESTE REGISTRO NO PUEDE ACTUALIZARSE","EDITAR",JOptionPane.ERROR_MESSAGE);
			}	
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleconsignacionLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleconsignacionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleConsignacionConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleconsignacionLogic.closeNewConnexionToDeep();
			}
		}		
	}
		
	public void jButtonCancelarDetalleConsignacionActionPerformed(ActionEvent evt) throws Exception {                                         	   	       
	  	try {
			if(jTableDatosDetalleConsignacion.getRowCount()>=1) {
				jTableDatosDetalleConsignacion.removeRowSelectionInterval(0, jTableDatosDetalleConsignacion.getRowCount()-1);						
			}
						
			this.invalidValues=new InvalidValue[0];
			this.habilitarDeshabilitarControlesDetalleConsignacion(false);
			this.cancelar(true);			
			this.inicializarActualizarBindingTablaDetalleConsignacion(false);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesDetalleConsignacion(false) ;
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualDetalleConsignacion(false) ;
			
			this.isEsNuevoDetalleConsignacion=false;
			
			if(DetalleConsignacionJInternalFrame.CON_DATOS_FRAME) {
				this.cerrarFrameDetalleDetalleConsignacion();
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleConsignacionConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonGuardarCambiosDetalleConsignacionActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleconsignacionLogic.getNewConnexionToDeep("");
			}
			
			//this.estaModoGuardarCambios=true;
			
	    	this.guardarCambios();
			
			if(!this.isErrorGuardar) {
				this.procesarBusqueda(this.sAccionBusqueda);
				
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingDetalleConsignacion(false);
				
				//SI ES MANUAL
				if(DetalleConsignacionJInternalFrame.ISBINDING_MANUAL) {				
					//this.inicializarActualizarBindingManualDetalleConsignacion();				
				}
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleconsignacionLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleconsignacionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleConsignacionConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleconsignacionLogic.closeNewConnexionToDeep();
			}
			
			//this.estaModoGuardarCambios=false;
		}
	}
	
	public void jButtonNuevoGuardarCambiosDetalleConsignacionActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			
			this.estaModoNuevo=true;
			this.estaModoNuevoGuardarCambios=true;
			
			//LO HACE NUEVOPREPARAR
			//this.iIdNuevoDetalleConsignacion--;			
			//DetalleConsignacion detalleconsignacionAux= new DetalleConsignacion();			
			//detalleconsignacionAux.setId(this.iIdNuevoDetalleConsignacion);
			
			if(this.jInternalFrameDetalleFormDetalleConsignacion==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			this.aumentarTamanioFilaNuevaTablaDetalleConsignacion();
			
			if(this.conTotales) {
				this.quitarFilaTotales();
			}
			
			this.nuevoPreparar(true);
			
			this.setVariablesFormularioToObjetoActualForeignKeysDetalleConsignacion(this.detalleconsignacion);
			
			this.detalleconsignacion.setsType("NUEVO_GUARDAR_CAMBIOS");
			
			//LO HACE NUEVOPREPARAR
			/*
			if(Constantes.ISUSAEJBLOGICLAYER) {				
				this.detalleconsignacionLogic.getDetalleConsignacions().add(this.detalleconsignacionAux);
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				this.detalleconsignacions.add(this.detalleconsignacionAux);				
			}
			*/
			
			this.inicializarActualizarBindingTablaDetalleConsignacion(false);
			
			this.jTableDatosDetalleConsignacion.setRowSelectionInterval(this.getIndiceNuevoDetalleConsignacion(), this.getIndiceNuevoDetalleConsignacion());
			
			int iLastRow =  this.jTableDatosDetalleConsignacion.getRowCount () - 1;
			Rectangle rectangle = this.jTableDatosDetalleConsignacion.getCellRect(iLastRow, 0, true);
			
			this.jTableDatosDetalleConsignacion.scrollRectToVisible(rectangle);
			
			//FILA TOTALES
			if(this.conTotales) {
				this.crearFilaTotales();
				
				this.inicializarActualizarBindingTablaDetalleConsignacion(false);
			}

		} catch(Exception e) {									
			FuncionesSwing.manageException(this, e,logger,DetalleConsignacionConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoNuevo=false;
			this.estaModoNuevoGuardarCambios=false;
		}
	}		
	
	public void jButtonRecargarInformacionDetalleConsignacionActionPerformed(ActionEvent evt) throws Exception {    		
		try {
			this.iNumeroPaginacionPagina=0;
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleconsignacionLogic.getNewConnexionToDeep("");
			}
			
			this.inicializarActualizarBindingDetalleConsignacion(false,false);
			
	    	this.recargarInformacion();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingDetalleConsignacion(false);
			
			//SI ES MANUAL
			if(DetalleConsignacionJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualDetalleConsignacion();
			}
			
			//this.abrirFrameTreeDetalleConsignacion();
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleconsignacionLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleconsignacionLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,DetalleConsignacionConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleconsignacionLogic.closeNewConnexionToDeep();
			}
		}	
	}
	
	
	public void jButtonGenerarImportacionDetalleConsignacionActionPerformed(ActionEvent evt) throws Exception {    				
		BufferedReader bufferedReader = null;
		String sXmlStringFile="";
		String sPath="";
		this.arrDatoGeneralMinimos= new  ArrayList<DatoGeneralMinimo>();
		DatoGeneralMinimo datoGeneralMinimo=new DatoGeneralMinimo();
		String sLine="";
		
		try {			
			if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE PROCESAR IMPORTACION DE Detalle ConsignacionS ?", "MANTENIMIENTO DE Detalle Consignacion", JOptionPane.OK_CANCEL_OPTION) == 0) {
				bufferedReader = new BufferedReader(new FileReader(this.jInternalFrameImportacionDetalleConsignacion.getFileImportacion().getAbsolutePath()));
								
				while ((sLine = bufferedReader.readLine()) != null) {
					datoGeneralMinimo=new DatoGeneralMinimo();
					datoGeneralMinimo.setsDescripcion(sLine);
					
					this.arrDatoGeneralMinimos.add(datoGeneralMinimo);
				}
				
				this.actualizarParametrosGeneralDetalleConsignacion();
						
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {						
					this.detalleconsignacionReturnGeneral=detalleconsignacionLogic.procesarImportacionDetalleConsignacionsWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this.arrDatoGeneralMinimos,this.detalleconsignacionParameterGeneral);
						
				} else if(Constantes.ISUSAEJBREMOTE) {
						
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
						
				this.procesarDetalleConsignacionReturnGeneral();
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleConsignacionConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedReader != null) {
				bufferedReader.close();
			}	
		}				
	}
	
	
	
	public void jButtonAbrirImportacionDetalleConsignacionActionPerformed(ActionEvent evt) throws Exception {    				
		BufferedWriter bufferedWriter = null;
		String sXmlStringFile="";
		String sPath="";
		
		try {
			int iReturnArchivo = this.jInternalFrameImportacionDetalleConsignacion.getjFileChooserImportacion().showOpenDialog(this);
 
            if (iReturnArchivo == JFileChooser.APPROVE_OPTION) {
            	this.jInternalFrameImportacionDetalleConsignacion.setFileImportacion(this.jInternalFrameImportacionDetalleConsignacion.getjFileChooserImportacion().getSelectedFile());
            	
				this.jInternalFrameImportacionDetalleConsignacion.getjTextFieldPathArchivoImportacion().setText(this.jInternalFrameImportacionDetalleConsignacion.getFileImportacion().getName());
				
				//System.out.println("ARCHIVO ESCOGIDO: "+this.fileImportacionDetalleConsignacion.getName());
				
            } else {
                //System.out.println("CANCELAR SELECCION");
				this.jInternalFrameImportacionDetalleConsignacion.getjTextFieldPathArchivoImportacion().setText("SELECCION CANCELADA");
            }			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleConsignacionConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedWriter != null) {
				bufferedWriter.close();
			}	
		}		
	}
	
	
	public void jButtonGenerarReporteDinamicoDetalleConsignacionActionPerformed(ActionEvent evt) throws Exception {    		
		BufferedWriter bufferedWriter = null;
		String sXmlStringFile="";
		String sPath="";
		
		try {	
		
		ArrayList<DetalleConsignacion> detalleconsignacionsSeleccionados=new ArrayList<DetalleConsignacion>();		

		detalleconsignacionsSeleccionados=this.getDetalleConsignacionsSeleccionados(true);
		
		
		this.sTipoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoDetalleConsignacion.getjComboBoxTiposReportesDinamico().getSelectedItem()).getsCodigo();
		
		this.sTipoArchivoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoDetalleConsignacion.getjComboBoxTiposArchivosReportesDinamico().getSelectedItem()).getsCodigo();			
		
		
		this.sTipoArchivoReporte=this.sTipoArchivoReporteDinamico;
		
		//this.sTipoReporteExtra="Base";
		
			InputStream reportFile=null;
			InputStream imageFile=null;
			
			imageFile=AuxiliarImagenes.class.getResourceAsStream("LogoReporte.jpg");			
				
		
		
			reportFile = AuxiliarReportes.class.getResourceAsStream("DetalleConsignacionBaseDesign.jrxml");	
			
			sPath=this.parametroGeneralUsuario.getpath_exportar()+"DetalleConsignacionBaseDesign.jrxml";
			
			sXmlStringFile=Funciones2.getStringFromInputStream(reportFile);
						
			bufferedWriter = new BufferedWriter(new FileWriter(sPath));
			
			
			sXmlStringFile=this.actualizarReporteDinamico(sXmlStringFile);
			
			
			bufferedWriter.write(sXmlStringFile);
			
			bufferedWriter.close();
			
			try{JasperCompileManager.compileReportToFile(sPath);}catch(Exception e){e.printStackTrace();}
			
			this.actualizarVariablesTipoReporte(false,true,false,sPath);
			
			/*
			this.esReporteDinamico=true;
			this.sPathReporteDinamico=sPath.replace(".jrxml",".jasper");
			this.sTipoReporteExtra="";
			*/
			
			this.generarReporteDetalleConsignacions("Todos",detalleconsignacionsSeleccionados );

			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.detalleconsignacionSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				//DEBE APARECER EL REPORTE DIRECTAMENTE
				//JOptionPane.showMessageDialog(this,"GENERADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Detalle Consignacion",JOptionPane.INFORMATION_MESSAGE);
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleConsignacionConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedWriter != null) {
				bufferedWriter.close();
			}	
		}
	}		
	
	
	public String actualizarReporteDinamico(String sXmlStringFile) {				
		Reporte reporte=new Reporte();
		Integer iAnchoMaximoVertical=535;//781,782
		Integer iAnchoMaximoHorizontal=782;
		Integer iAnchoSum=0;
		Integer iAnchoColumna=0;
		
		Integer iAnchoMargenes=60;
		String sWidthGrafico="535";
		
		for(int index:this.jInternalFrameReporteDinamicoDetalleConsignacion.getjListColumnasSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoDetalleConsignacion.getjListColumnasSelectReporte().getModel().getElementAt(index);
			
			switch(reporte.getsCodigo()) {
				
				case DetalleConsignacionConstantesFunciones.LABEL_IDEMPRESA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Empresa_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Empresa_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Empresa_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Empresa_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleConsignacionConstantesFunciones.LABEL_IDSUCURSAL:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Sucursal_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Sucursal_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Sucursal_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Sucursal_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleConsignacionConstantesFunciones.LABEL_IDEJERCICIO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Ejercicio_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Ejercicio_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Ejercicio_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Ejercicio_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleConsignacionConstantesFunciones.LABEL_IDPERIODO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Periodo_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Periodo_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Periodo_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Periodo_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleConsignacionConstantesFunciones.LABEL_IDANIO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Anio_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Anio_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Anio_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Anio_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleConsignacionConstantesFunciones.LABEL_IDMES:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Mes_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Mes_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Mes_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Mes_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleConsignacionConstantesFunciones.LABEL_IDCONSIGNACION:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Consignacion_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Consignacion_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Consignacion_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Consignacion_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleConsignacionConstantesFunciones.LABEL_IDPRODUCTO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Producto_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Producto_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Producto_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Producto_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleConsignacionConstantesFunciones.LABEL_IDBODEGA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Bodega_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Bodega_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Bodega_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Bodega_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleConsignacionConstantesFunciones.LABEL_IDUNIDAD:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Unidad_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Unidad_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Unidad_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Unidad_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleConsignacionConstantesFunciones.LABEL_IDESTADODETALLEPEDIDO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_EstadoDetallePedido_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_EstadoDetallePedido_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_EstadoDetallePedido_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_EstadoDetallePedido_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleConsignacionConstantesFunciones.LABEL_CANTIDAD:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_ntidad_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_ntidad_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_ntidad_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_ntidad_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleConsignacionConstantesFunciones.LABEL_PRECIO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_ecio_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_ecio_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_ecio_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_ecio_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleConsignacionConstantesFunciones.LABEL_DESCUENTOPORCENTAJE:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_scuentoPorcentaje_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_scuentoPorcentaje_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_scuentoPorcentaje_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_scuentoPorcentaje_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleConsignacionConstantesFunciones.LABEL_DESCUENTOVALOR:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_scuentoValor_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_scuentoValor_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_scuentoValor_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_scuentoValor_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleConsignacionConstantesFunciones.LABEL_IVA:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_a_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_a_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_a_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_a_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleConsignacionConstantesFunciones.LABEL_TOTAL:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_tal_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_tal_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_tal_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_tal_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleConsignacionConstantesFunciones.LABEL_ICE:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_e_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_e_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_e_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_e_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleConsignacionConstantesFunciones.LABEL_COSTO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_sto_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_sto_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_sto_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_sto_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleConsignacionConstantesFunciones.LABEL_UTILIDAD:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_ilidad_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_ilidad_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_ilidad_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_ilidad_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;
					
				default :
					break;
			}
		}
		
		iAnchoSum+=iAnchoMargenes;
		
		if(iAnchoSum>iAnchoMaximoVertical) {
			sXmlStringFile=sXmlStringFile.replace("595", "842");
			//sXmlStringFile=sXmlStringFile.replace("842", "595");
			sXmlStringFile=sXmlStringFile.replace("535", "782");
			sXmlStringFile=sXmlStringFile.replace("Portrait", "Landscape");			
			sWidthGrafico="782";
		
		} else {
			sXmlStringFile=sXmlStringFile.replace("842", "595");
			//sXmlStringFile=sXmlStringFile.replace("595", "842");
			sXmlStringFile=sXmlStringFile.replace("782", "535");
			sXmlStringFile=sXmlStringFile.replace("Landscape", "Portrait");
			sWidthGrafico="535";
		}
		
		if(this.jInternalFrameReporteDinamicoDetalleConsignacion.getjCheckBoxConGraficoDinamico().isSelected()) {
			sXmlStringFile=this.actualizarGraficoReporteDinamico(sXmlStringFile,sWidthGrafico);
		} else {
			sXmlStringFile=sXmlStringFile.replace("colancho_summary_colancho", "30");
		}
		
		return sXmlStringFile;
	}
	
	
	
	public String actualizarGraficoReporteDinamico(String sXmlStringFile,String sWidthGrafico) {		
		String strGrafico="";		
		String sTipo="NORMAL";
		String strCategorySeries="";
		String sNombreCampoCategoria="";
		String sNombreCampoCategoriaValor="";
		Reporte reporte=new Reporte();
		Reporte reporteCategoriaValor=new Reporte();
		Reporte reporteTipoGraficoReporte=new Reporte();
		Boolean existe=false;
		
		sXmlStringFile=sXmlStringFile.replace("colancho_summary_colancho", "280");
		
		//CATEGORIA GRAFICO				
		reporte=((Reporte)this.jInternalFrameReporteDinamicoDetalleConsignacion.getjComboBoxColumnaCategoriaGrafico().getSelectedItem());
				
		//TIPO GRAFICO REPORTE
		reporteTipoGraficoReporte=((Reporte)this.jInternalFrameReporteDinamicoDetalleConsignacion.getjComboBoxTiposGraficosReportesDinamico().getSelectedItem());
		
		String sTipoGraficoReporte=reporteTipoGraficoReporte.getsCodigo();
		
		switch(reporte.getsCodigo()) {
			
				case DetalleConsignacionConstantesFunciones.LABEL_IDEMPRESA:
					sNombreCampoCategoria="id_empresa";
					break;

				case DetalleConsignacionConstantesFunciones.LABEL_IDSUCURSAL:
					sNombreCampoCategoria="id_sucursal";
					break;

				case DetalleConsignacionConstantesFunciones.LABEL_IDEJERCICIO:
					sNombreCampoCategoria="id_ejercicio";
					break;

				case DetalleConsignacionConstantesFunciones.LABEL_IDPERIODO:
					sNombreCampoCategoria="id_periodo";
					break;

				case DetalleConsignacionConstantesFunciones.LABEL_IDANIO:
					sNombreCampoCategoria="id_anio";
					break;

				case DetalleConsignacionConstantesFunciones.LABEL_IDMES:
					sNombreCampoCategoria="id_mes";
					break;

				case DetalleConsignacionConstantesFunciones.LABEL_IDCONSIGNACION:
					sNombreCampoCategoria="id_consignacion";
					break;

				case DetalleConsignacionConstantesFunciones.LABEL_IDPRODUCTO:
					sNombreCampoCategoria="id_producto";
					break;

				case DetalleConsignacionConstantesFunciones.LABEL_IDBODEGA:
					sNombreCampoCategoria="id_bodega";
					break;

				case DetalleConsignacionConstantesFunciones.LABEL_IDUNIDAD:
					sNombreCampoCategoria="id_unidad";
					break;

				case DetalleConsignacionConstantesFunciones.LABEL_IDESTADODETALLEPEDIDO:
					sNombreCampoCategoria="id_estado_detalle_pedido";
					break;

				case DetalleConsignacionConstantesFunciones.LABEL_CANTIDAD:
					sNombreCampoCategoria="cantidad";
					break;

				case DetalleConsignacionConstantesFunciones.LABEL_PRECIO:
					sNombreCampoCategoria="precio";
					break;

				case DetalleConsignacionConstantesFunciones.LABEL_DESCUENTOPORCENTAJE:
					sNombreCampoCategoria="descuento_porcentaje";
					break;

				case DetalleConsignacionConstantesFunciones.LABEL_DESCUENTOVALOR:
					sNombreCampoCategoria="descuento_valor";
					break;

				case DetalleConsignacionConstantesFunciones.LABEL_IVA:
					sNombreCampoCategoria="iva";
					break;

				case DetalleConsignacionConstantesFunciones.LABEL_TOTAL:
					sNombreCampoCategoria="total";
					break;

				case DetalleConsignacionConstantesFunciones.LABEL_ICE:
					sNombreCampoCategoria="ice";
					break;

				case DetalleConsignacionConstantesFunciones.LABEL_COSTO:
					sNombreCampoCategoria="costo";
					break;

				case DetalleConsignacionConstantesFunciones.LABEL_UTILIDAD:
					sNombreCampoCategoria="utilidad";
					break;
					
			default :
				break;
		}		
		//CATEGORIA GRAFICO
		
		//CATEGORIA VALOR				
		reporteCategoriaValor=((Reporte)this.jInternalFrameReporteDinamicoDetalleConsignacion.getjComboBoxColumnaCategoriaValor().getSelectedItem());
		
		switch(reporteCategoriaValor.getsCodigo()) {
			
				case DetalleConsignacionConstantesFunciones.LABEL_IDEMPRESA:
					sNombreCampoCategoriaValor="id_empresa";
					break;

				case DetalleConsignacionConstantesFunciones.LABEL_IDSUCURSAL:
					sNombreCampoCategoriaValor="id_sucursal";
					break;

				case DetalleConsignacionConstantesFunciones.LABEL_IDEJERCICIO:
					sNombreCampoCategoriaValor="id_ejercicio";
					break;

				case DetalleConsignacionConstantesFunciones.LABEL_IDPERIODO:
					sNombreCampoCategoriaValor="id_periodo";
					break;

				case DetalleConsignacionConstantesFunciones.LABEL_IDANIO:
					sNombreCampoCategoriaValor="id_anio";
					break;

				case DetalleConsignacionConstantesFunciones.LABEL_IDMES:
					sNombreCampoCategoriaValor="id_mes";
					break;

				case DetalleConsignacionConstantesFunciones.LABEL_IDCONSIGNACION:
					sNombreCampoCategoriaValor="id_consignacion";
					break;

				case DetalleConsignacionConstantesFunciones.LABEL_IDPRODUCTO:
					sNombreCampoCategoriaValor="id_producto";
					break;

				case DetalleConsignacionConstantesFunciones.LABEL_IDBODEGA:
					sNombreCampoCategoriaValor="id_bodega";
					break;

				case DetalleConsignacionConstantesFunciones.LABEL_IDUNIDAD:
					sNombreCampoCategoriaValor="id_unidad";
					break;

				case DetalleConsignacionConstantesFunciones.LABEL_IDESTADODETALLEPEDIDO:
					sNombreCampoCategoriaValor="id_estado_detalle_pedido";
					break;

				case DetalleConsignacionConstantesFunciones.LABEL_CANTIDAD:
					sNombreCampoCategoriaValor="cantidad";
					break;

				case DetalleConsignacionConstantesFunciones.LABEL_PRECIO:
					sNombreCampoCategoriaValor="precio";
					break;

				case DetalleConsignacionConstantesFunciones.LABEL_DESCUENTOPORCENTAJE:
					sNombreCampoCategoriaValor="descuento_porcentaje";
					break;

				case DetalleConsignacionConstantesFunciones.LABEL_DESCUENTOVALOR:
					sNombreCampoCategoriaValor="descuento_valor";
					break;

				case DetalleConsignacionConstantesFunciones.LABEL_IVA:
					sNombreCampoCategoriaValor="iva";
					break;

				case DetalleConsignacionConstantesFunciones.LABEL_TOTAL:
					sNombreCampoCategoriaValor="total";
					break;

				case DetalleConsignacionConstantesFunciones.LABEL_ICE:
					sNombreCampoCategoriaValor="ice";
					break;

				case DetalleConsignacionConstantesFunciones.LABEL_COSTO:
					sNombreCampoCategoriaValor="costo";
					break;

				case DetalleConsignacionConstantesFunciones.LABEL_UTILIDAD:
					sNombreCampoCategoriaValor="utilidad";
					break;
					
			default :
				break;
		}	
		//CATEGORIA VALOR
		
		//VALORES GRAFICO
		for(int index:this.jInternalFrameReporteDinamicoDetalleConsignacion.getjListColumnasValoresGrafico().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoDetalleConsignacion.getjListColumnasValoresGrafico().getModel().getElementAt(index);
			
			switch(reporte.getsCodigo()) {
				
				case DetalleConsignacionConstantesFunciones.LABEL_IDEMPRESA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Empresa",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_empresa");
					break;

				case DetalleConsignacionConstantesFunciones.LABEL_IDSUCURSAL:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Sucursal",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_sucursal");
					break;

				case DetalleConsignacionConstantesFunciones.LABEL_IDEJERCICIO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Ejercicio",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_ejercicio");
					break;

				case DetalleConsignacionConstantesFunciones.LABEL_IDPERIODO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Periodo",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_periodo");
					break;

				case DetalleConsignacionConstantesFunciones.LABEL_IDANIO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Anio",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_anio");
					break;

				case DetalleConsignacionConstantesFunciones.LABEL_IDMES:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Mes",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_mes");
					break;

				case DetalleConsignacionConstantesFunciones.LABEL_IDCONSIGNACION:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Consignacion",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_consignacion");
					break;

				case DetalleConsignacionConstantesFunciones.LABEL_IDPRODUCTO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Producto",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_producto");
					break;

				case DetalleConsignacionConstantesFunciones.LABEL_IDBODEGA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Bodega",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_bodega");
					break;

				case DetalleConsignacionConstantesFunciones.LABEL_IDUNIDAD:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Unidad",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_unidad");
					break;

				case DetalleConsignacionConstantesFunciones.LABEL_IDESTADODETALLEPEDIDO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Estado",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_estado_detalle_pedido");
					break;

				case DetalleConsignacionConstantesFunciones.LABEL_CANTIDAD:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Cantidad",sNombreCampoCategoria,sNombreCampoCategoriaValor,"cantidad");
					break;

				case DetalleConsignacionConstantesFunciones.LABEL_PRECIO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Precio",sNombreCampoCategoria,sNombreCampoCategoriaValor,"precio");
					break;

				case DetalleConsignacionConstantesFunciones.LABEL_DESCUENTOPORCENTAJE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Dscto %",sNombreCampoCategoria,sNombreCampoCategoriaValor,"descuento_porcentaje");
					break;

				case DetalleConsignacionConstantesFunciones.LABEL_DESCUENTOVALOR:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Dscto Valor",sNombreCampoCategoria,sNombreCampoCategoriaValor,"descuento_valor");
					break;

				case DetalleConsignacionConstantesFunciones.LABEL_IVA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Iva",sNombreCampoCategoria,sNombreCampoCategoriaValor,"iva");
					break;

				case DetalleConsignacionConstantesFunciones.LABEL_TOTAL:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Total",sNombreCampoCategoria,sNombreCampoCategoriaValor,"total");
					break;

				case DetalleConsignacionConstantesFunciones.LABEL_ICE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Ice",sNombreCampoCategoria,sNombreCampoCategoriaValor,"ice");
					break;

				case DetalleConsignacionConstantesFunciones.LABEL_COSTO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Costo",sNombreCampoCategoria,sNombreCampoCategoriaValor,"costo");
					break;

				case DetalleConsignacionConstantesFunciones.LABEL_UTILIDAD:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Utilidad",sNombreCampoCategoria,sNombreCampoCategoriaValor,"utilidad");
					break;
					
				default :
					break;
			}
		}
		//VALORES GRAFICO
		//if(sTipoGraficoReporte.equals("BARRAS") || sTipoGraficoReporte.equals("BARRAS_3D") || sTipoGraficoReporte.equals("BARRAS_XY") ||
		//   sTipoGraficoReporte.equals("PASTEL") || sTipoGraficoReporte.equals("PASTEL_3D") || sTipoGraficoReporte.equals("APILADO")) {
			
			existe=true;
			strGrafico=FuncionesReporte.getStringGraficoReporte(sTipoGraficoReporte,sWidthGrafico,strCategorySeries);			
		//}
		
		if(existe) {
			sXmlStringFile=sXmlStringFile.replace("<!--GRAFICO-->", strGrafico);
		}												
		
		return sXmlStringFile;
	}
	
	
	//@SuppressWarnings("deprecation")
	
	public void jButtonGenerarExcelReporteDinamicoDetalleConsignacionActionPerformed(ActionEvent evt) throws Exception {		
		ArrayList<DetalleConsignacion> detalleconsignacionsSeleccionados=new ArrayList<DetalleConsignacion>();		
		
		detalleconsignacionsSeleccionados=this.getDetalleConsignacionsSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"detalleconsignacion";//.xls";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		Boolean existeFilas=false;
		
		Workbook workbook = null;
		FileOutputStream fileOutputStream=null;
		Reporte reporte=new Reporte();
		
		try {
			
			if(sTipoArchivoReporte=="EXCEL2") {
				workbook = new HSSFWorkbook();
				sPath+=".xls";
			
			} else if(sTipoArchivoReporte=="EXCEL2_2") {
				workbook = new XSSFWorkbook();
				sPath+=".xlsx";			
			}
		
			Sheet sheet = workbook.createSheet("DetalleConsignacions");
						
		    			
			Integer iRow=0;
			Integer iCell=0;
			
			Row row = sheet.createRow(iRow);
			Cell cell = row.createCell(iCell);
			//cell.setCellValue("Blahblah");
			
			for(int index:this.jInternalFrameReporteDinamicoDetalleConsignacion.getjListColumnasSelectReporte().getSelectedIndices()) {
				reporte=(Reporte)this.jInternalFrameReporteDinamicoDetalleConsignacion.getjListColumnasSelectReporte().getModel().getElementAt(index);
				
				switch(reporte.getsCodigo()) {
					
				case DetalleConsignacionConstantesFunciones.LABEL_IDEMPRESA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleConsignacionConstantesFunciones.LABEL_IDEMPRESA);
					iRow++;

					for(DetalleConsignacion detalleconsignacion:detalleconsignacionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detalleconsignacion.getempresa_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleConsignacionConstantesFunciones.LABEL_IDSUCURSAL:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleConsignacionConstantesFunciones.LABEL_IDSUCURSAL);
					iRow++;

					for(DetalleConsignacion detalleconsignacion:detalleconsignacionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detalleconsignacion.getsucursal_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleConsignacionConstantesFunciones.LABEL_IDEJERCICIO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleConsignacionConstantesFunciones.LABEL_IDEJERCICIO);
					iRow++;

					for(DetalleConsignacion detalleconsignacion:detalleconsignacionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detalleconsignacion.getejercicio_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleConsignacionConstantesFunciones.LABEL_IDPERIODO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleConsignacionConstantesFunciones.LABEL_IDPERIODO);
					iRow++;

					for(DetalleConsignacion detalleconsignacion:detalleconsignacionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detalleconsignacion.getperiodo_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleConsignacionConstantesFunciones.LABEL_IDANIO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleConsignacionConstantesFunciones.LABEL_IDANIO);
					iRow++;

					for(DetalleConsignacion detalleconsignacion:detalleconsignacionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detalleconsignacion.getanio_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleConsignacionConstantesFunciones.LABEL_IDMES:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleConsignacionConstantesFunciones.LABEL_IDMES);
					iRow++;

					for(DetalleConsignacion detalleconsignacion:detalleconsignacionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detalleconsignacion.getmes_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleConsignacionConstantesFunciones.LABEL_IDCONSIGNACION:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleConsignacionConstantesFunciones.LABEL_IDCONSIGNACION);
					iRow++;

					for(DetalleConsignacion detalleconsignacion:detalleconsignacionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detalleconsignacion.getconsignacion_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleConsignacionConstantesFunciones.LABEL_IDPRODUCTO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleConsignacionConstantesFunciones.LABEL_IDPRODUCTO);
					iRow++;

					for(DetalleConsignacion detalleconsignacion:detalleconsignacionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detalleconsignacion.getproducto_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleConsignacionConstantesFunciones.LABEL_IDBODEGA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleConsignacionConstantesFunciones.LABEL_IDBODEGA);
					iRow++;

					for(DetalleConsignacion detalleconsignacion:detalleconsignacionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detalleconsignacion.getbodega_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleConsignacionConstantesFunciones.LABEL_IDUNIDAD:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleConsignacionConstantesFunciones.LABEL_IDUNIDAD);
					iRow++;

					for(DetalleConsignacion detalleconsignacion:detalleconsignacionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detalleconsignacion.getunidad_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleConsignacionConstantesFunciones.LABEL_IDESTADODETALLEPEDIDO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleConsignacionConstantesFunciones.LABEL_IDESTADODETALLEPEDIDO);
					iRow++;

					for(DetalleConsignacion detalleconsignacion:detalleconsignacionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detalleconsignacion.getestadodetallepedido_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleConsignacionConstantesFunciones.LABEL_CANTIDAD:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleConsignacionConstantesFunciones.LABEL_CANTIDAD);
					iRow++;

					for(DetalleConsignacion detalleconsignacion:detalleconsignacionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detalleconsignacion.getcantidad());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleConsignacionConstantesFunciones.LABEL_PRECIO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleConsignacionConstantesFunciones.LABEL_PRECIO);
					iRow++;

					for(DetalleConsignacion detalleconsignacion:detalleconsignacionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detalleconsignacion.getprecio());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleConsignacionConstantesFunciones.LABEL_DESCUENTOPORCENTAJE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleConsignacionConstantesFunciones.LABEL_DESCUENTOPORCENTAJE);
					iRow++;

					for(DetalleConsignacion detalleconsignacion:detalleconsignacionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detalleconsignacion.getdescuento_porcentaje());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleConsignacionConstantesFunciones.LABEL_DESCUENTOVALOR:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleConsignacionConstantesFunciones.LABEL_DESCUENTOVALOR);
					iRow++;

					for(DetalleConsignacion detalleconsignacion:detalleconsignacionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detalleconsignacion.getdescuento_valor());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleConsignacionConstantesFunciones.LABEL_IVA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleConsignacionConstantesFunciones.LABEL_IVA);
					iRow++;

					for(DetalleConsignacion detalleconsignacion:detalleconsignacionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detalleconsignacion.getiva());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleConsignacionConstantesFunciones.LABEL_TOTAL:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleConsignacionConstantesFunciones.LABEL_TOTAL);
					iRow++;

					for(DetalleConsignacion detalleconsignacion:detalleconsignacionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detalleconsignacion.gettotal());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleConsignacionConstantesFunciones.LABEL_ICE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleConsignacionConstantesFunciones.LABEL_ICE);
					iRow++;

					for(DetalleConsignacion detalleconsignacion:detalleconsignacionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detalleconsignacion.getice());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleConsignacionConstantesFunciones.LABEL_COSTO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleConsignacionConstantesFunciones.LABEL_COSTO);
					iRow++;

					for(DetalleConsignacion detalleconsignacion:detalleconsignacionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detalleconsignacion.getcosto());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleConsignacionConstantesFunciones.LABEL_UTILIDAD:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleConsignacionConstantesFunciones.LABEL_UTILIDAD);
					iRow++;

					for(DetalleConsignacion detalleconsignacion:detalleconsignacionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detalleconsignacion.getutilidad());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;
					
					default :
						break;
				}
			}
			
			
			//if(conCabecera) {
			//	this.getFilaCabeceraExportarExcelDetalleConsignacion(row);				
			//	iRow++;
			//}				
			
			//for(DetalleConsignacion detalleconsignacionAux:detalleconsignacionsSeleccionados) {
			//	row = sheet.createRow(iRow);
				
			//	this.getFilaDatosExportarExcelDetalleConsignacion(detalleconsignacionAux,row);
				
			//	iRow++;
			//}
			
			
			
			fileOutputStream = new FileOutputStream(new File(sPath));
		    
			workbook.write(fileOutputStream);
			
			//fileOutputStream.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.detalleconsignacionSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Detalle Consignacion",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			
       		if (fileOutputStream != null) {
				fileOutputStream.close();
			}			
		}				
	}	
	
	
	
	
	public void buscarPorId(Long idActual) throws Exception {    		
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleconsignacionLogic.getNewConnexionToDeep("");
			}
			
			this.idActual=idActual;
			this.iNumeroPaginacionPagina=0;
			
			this.procesarBusqueda("PorId");
				    	
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingDetalleConsignacion(false);
			
			//SI ES MANUAL
			if(DetalleConsignacionJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualDetalleConsignacion();
			}	
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleconsignacionLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleconsignacionLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger);
			
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleconsignacionLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonAnterioresDetalleConsignacionActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			//this.iNumeroPaginacion-=this.iNumeroPaginacion;
			/*
			if(this.iNumeroPaginacion<0) {
				this.iNumeroPaginacion=0;
			}
			*/
			//this.iNumeroPaginacionPagina=10;			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleconsignacionLogic.getNewConnexionToDeep("");
			}
			
			this.anteriores();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingDetalleConsignacion(false);
			
			//SI ES MANUAL
			if(DetalleConsignacionJInternalFrame.ISBINDING_MANUAL) {
	    		//this.inicializarActualizarBindingManualDetalleConsignacion();
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleconsignacionLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleconsignacionLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,DetalleConsignacionConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleconsignacionLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonSiguientesDetalleConsignacionActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			//this.iNumeroPaginacion+=this.iNumeroPaginacion;
			//this.iNumeroPaginacionPagina=10;			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleconsignacionLogic.getNewConnexionToDeep("");
			}
			
			this.siguientes();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingDetalleConsignacion(false);
			
			//SI ES MANUAL
			if(DetalleConsignacionJInternalFrame.ISBINDING_MANUAL) {
	    		//this.inicializarActualizarBindingManualDetalleConsignacion();
			}		
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleconsignacionLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleconsignacionLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,DetalleConsignacionConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleconsignacionLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void aumentarTamanioFilaNuevaTablaDetalleConsignacion() throws Exception {		
		Dimension dimensionMinimum=this.jTableDatosDetalleConsignacion.getMinimumSize();
		Dimension dimensionMaximum=this.jTableDatosDetalleConsignacion.getMaximumSize();
		Dimension dimensionPreferred=this.jTableDatosDetalleConsignacion.getPreferredSize();
	
		double iHeightConFilaNueva=dimensionPreferred.getHeight();
		
		iHeightConFilaNueva+=this.jTableDatosDetalleConsignacion.getRowHeight();
		
		dimensionMinimum.setSize(dimensionMinimum.getWidth(),iHeightConFilaNueva);
		dimensionMaximum.setSize(dimensionMaximum.getWidth(),iHeightConFilaNueva);
		dimensionPreferred.setSize(dimensionPreferred.getWidth(),iHeightConFilaNueva);
		
		this.jTableDatosDetalleConsignacion.setMinimumSize(dimensionMinimum);
		this.jTableDatosDetalleConsignacion.setMaximumSize(dimensionMaximum);
		this.jTableDatosDetalleConsignacion.setPreferredSize(dimensionPreferred);	
	}
	
	public void inicializarActualizarBindingDetalleConsignacion(Boolean esInicializar) throws Exception {
		this.inicializarActualizarBindingDetalleConsignacion(esInicializar,true);
	}
	
	public void inicializarActualizarBindingDetalleConsignacion(Boolean esInicializar,Boolean conTabla) throws Exception {		
		if(conTabla) {
			this.inicializarActualizarBindingTablaDetalleConsignacion(esInicializar);
		}
		
		this.inicializarActualizarBindingBotonesDetalleConsignacion(esInicializar);
		
		//FUNCIONALIDAD_RELACIONADO
		if(!this.detalleconsignacionSessionBean.getEsGuardarRelacionado()) {
			try{this.inicializarActualizarBindingBusquedasDetalleConsignacion(esInicializar);}catch(Exception e){e.printStackTrace();}
			
			//this.inicializarActualizarBindingtiposArchivosReportesAccionesDetalleConsignacion(esInicializar) ;
			
			this.inicializarActualizarBindingParametrosReportesDetalleConsignacion(esInicializar) ;
		}
		
		if(esInicializar) {
			if( !DetalleConsignacionJInternalFrame.ISBINDING_MANUAL_TABLA ||
			   	!DetalleConsignacionJInternalFrame.ISBINDING_MANUAL) {
			   	
			}
		}
	}
	
	public void inicializarActualizarBindingManualDetalleConsignacion() throws Exception {		
		//NO SE NECESITA HACER BINDING OTRA VEZ
		//this.inicializarActualizarBindingTablaDetalleConsignacion();
		
		this.inicializarActualizarBindingBotonesManualDetalleConsignacion(true);
		
		//FUNCIONALIDAD_RELACIONADO
		if(!this.detalleconsignacionSessionBean.getEsGuardarRelacionado()) {
			
			this.inicializarActualizarBindingBusquedasManualDetalleConsignacion();			
			
			
			//this.inicializarActualizarBindingtiposArchivosReportesAccionesDetalleConsignacion() ;
			
			this.inicializarActualizarBindingParametrosReportesPostAccionesManualDetalleConsignacion(false) ;			
			
		}
	}
	
	public void inicializarActualizarBindingParametrosReportesPostAccionesManualDetalleConsignacion(Boolean esSetControles) throws Exception {
		try	{					
			if(!esSetControles) {
				this.isSeleccionarTodos=this.jCheckBoxSeleccionarTodosDetalleConsignacion.isSelected();
				this.isSeleccionados=this.jCheckBoxSeleccionadosDetalleConsignacion.isSelected();
				
				
				this.conGraficoReporte=this.jCheckBoxConGraficoReporteDetalleConsignacion.isSelected();															
				
				
				if(this.jInternalFrameDetalleFormDetalleConsignacion!=null) {
				this.isPostAccionNuevo=this.jInternalFrameDetalleFormDetalleConsignacion.jCheckBoxPostAccionNuevoDetalleConsignacion.isSelected();
				this.isPostAccionSinCerrar=this.jInternalFrameDetalleFormDetalleConsignacion.jCheckBoxPostAccionSinCerrarDetalleConsignacion.isSelected();
				this.isPostAccionSinMensaje=this.jInternalFrameDetalleFormDetalleConsignacion.jCheckBoxPostAccionSinMensajeDetalleConsignacion.isSelected();
				}
			
			} else {
				this.jCheckBoxSeleccionarTodosDetalleConsignacion.setSelected(this.isSeleccionarTodos);
				this.jCheckBoxSeleccionadosDetalleConsignacion.setSelected(this.isSeleccionados);
				
				
				this.jCheckBoxConGraficoReporteDetalleConsignacion.setSelected(this.conGraficoReporte);				
				
				
				if(this.jInternalFrameDetalleFormDetalleConsignacion!=null) {
				this.jInternalFrameDetalleFormDetalleConsignacion.jCheckBoxPostAccionNuevoDetalleConsignacion.setSelected(this.isPostAccionNuevo);
				this.jInternalFrameDetalleFormDetalleConsignacion.jCheckBoxPostAccionSinCerrarDetalleConsignacion.setSelected(this.isPostAccionSinCerrar);
				this.jInternalFrameDetalleFormDetalleConsignacion.jCheckBoxPostAccionSinMensajeDetalleConsignacion.setSelected(this.isPostAccionSinMensaje);
				}
			}
			
			
			if(this.jComboBoxTiposPaginacionDetalleConsignacion.getSelectedItem()!=null) {
				this.sTipoPaginacion=((Reporte)this.jComboBoxTiposPaginacionDetalleConsignacion.getSelectedItem()).getsCodigo();			
			}
			
			
			
			if(this.jInternalFrameDetalleFormDetalleConsignacion!=null) {
			this.sTipoAccionFormulario=((Reporte)this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxTiposAccionesFormularioDetalleConsignacion.getSelectedItem()).getsCodigo();
			}
			
			
			
			if(!this.conCargarMinimo) {
				this.sTipoArchivoReporte=((Reporte)this.jComboBoxTiposArchivosReportesDetalleConsignacion.getSelectedItem()).getsCodigo();			
				
				if(this.jInternalFrameReporteDinamicoDetalleConsignacion!=null) {
					this.sTipoArchivoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoDetalleConsignacion.getjComboBoxTiposArchivosReportesDinamico().getSelectedItem()).getsCodigo();			
				}
				
				this.sTipoRelacion=((Reporte)this.jComboBoxTiposRelacionesDetalleConsignacion.getSelectedItem()).getsCodigo();
									
				this.sTipoAccion=((Reporte)this.jComboBoxTiposAccionesDetalleConsignacion.getSelectedItem()).getsCodigo();
													
				this.sTipoSeleccionar=((Reporte)this.jComboBoxTiposSeleccionarDetalleConsignacion.getSelectedItem()).getsCodigo();
									
				this.sTipoReporte=((Reporte)this.jComboBoxTiposReportesDetalleConsignacion.getSelectedItem()).getsCodigo();							
					
				if(this.jInternalFrameReporteDinamicoDetalleConsignacion!=null) {
					this.sTipoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoDetalleConsignacion.getjComboBoxTiposReportesDinamico().getSelectedItem()).getsCodigo();							
				}
				
				this.sTipoGraficoReporte=((Reporte)this.jComboBoxTiposGraficosReportesDetalleConsignacion.getSelectedItem()).getsCodigo();											
			}			
			
			this.sValorCampoGeneral=this.jTextFieldValorCampoGeneralDetalleConsignacion.getText();						
			
			
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void inicializarActualizarBindingParametrosReportesDetalleConsignacion(Boolean esInicializar) throws Exception {
		try	{	
			if(DetalleConsignacionJInternalFrame.ISBINDING_MANUAL) {
				this. inicializarActualizarBindingParametrosReportesPostAccionesManualDetalleConsignacion(false);
			} else {
			}
		} catch(Exception e) {
			throw e;
		}
	}	
	
	public void inicializarActualizarBindingtiposArchivosReportesAccionesDetalleConsignacion() throws Exception {
		try	{
			if(DetalleConsignacionJInternalFrame.ISBINDING_MANUAL) {
				this.inicializarActualizarBindingtiposArchivosReportesAccionesManualDetalleConsignacion();
			} else {
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesAccionesManualFormDetalleDetalleConsignacion() throws Exception {
		//TIPOS ACCIONES FORMULARIO	
		this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxTiposAccionesFormularioDetalleConsignacion.removeAllItems();
				
		for(Reporte reporte:this.tiposAccionesFormulario) {
			this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxTiposAccionesFormularioDetalleConsignacion.addItem(reporte);
		}
		
		//TIPOS ACCIONES FORMULARIO
	}
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesAccionesManualDetalleConsignacion() throws Exception {
		try	{
			
			//TIPOS ARCHIVOS REPORTES
			this.jComboBoxTiposArchivosReportesDetalleConsignacion.removeAllItems();
				
			for(Reporte reporte:this.tiposArchivosReportes) {
				this.jComboBoxTiposArchivosReportesDetalleConsignacion.addItem(reporte);
			}
			
			
				
			//TIPOS REPORTES
			this.jComboBoxTiposReportesDetalleConsignacion.removeAllItems();
				
			for(Reporte reporte:this.tiposReportes) {
				this.jComboBoxTiposReportesDetalleConsignacion.addItem(reporte);
			}
			
			
			//TIPOS GRAFICOS REPORTES
			this.jComboBoxTiposGraficosReportesDetalleConsignacion.removeAllItems();
				
			for(Reporte reporte:this.tiposGraficosReportes) {
				this.jComboBoxTiposGraficosReportesDetalleConsignacion.addItem(reporte);
			}
			
			
			//TIPOS PAGINACION
			this.jComboBoxTiposPaginacionDetalleConsignacion.removeAllItems();
				
			for(Reporte reporte:this.tiposPaginacion) {
				this.jComboBoxTiposPaginacionDetalleConsignacion.addItem(reporte);
			}
			
			
			if(!this.detalleconsignacionSessionBean.getEsGuardarRelacionado()) {
				this.jComboBoxTiposPaginacionDetalleConsignacion.setSelectedItem(Funciones2.getTipoPaginacionDefecto("NORMAL",this.tiposPaginacion));
			} else {
				this.jComboBoxTiposPaginacionDetalleConsignacion.setSelectedItem(Funciones2.getTipoPaginacionDefecto("RELACIONADO",this.tiposPaginacion));
			}
				
				
			//TIPOS ACCIONES	
			this.jComboBoxTiposRelacionesDetalleConsignacion.removeAllItems();
				
			for(Reporte reporte:this.tiposRelaciones) {
				this.jComboBoxTiposRelacionesDetalleConsignacion.addItem(reporte);
			}
			
			//TIPOS ACCIONES
				
				
			//TIPOS ACCIONES	
			this.jComboBoxTiposAccionesDetalleConsignacion.removeAllItems();
				
			for(Reporte reporte:this.tiposAcciones) {
				this.jComboBoxTiposAccionesDetalleConsignacion.addItem(reporte);
			}
			
			//TIPOS ACCIONES			
			
			
			
			//TIPOS ACCIONES FORMULARIO	
			if(this.jInternalFrameDetalleFormDetalleConsignacion!=null) { //if(this.conCargarFormDetalle) {
				this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxTiposAccionesFormularioDetalleConsignacion.removeAllItems();
				
				for(Reporte reporte:this.tiposAccionesFormulario) {
					this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxTiposAccionesFormularioDetalleConsignacion.addItem(reporte);
				}
				
			}
			//TIPOS ACCIONES FORMULARIO
			
			
			
			//TIPOS SELECCIONAR
			this.jComboBoxTiposSeleccionarDetalleConsignacion.removeAllItems();
				
			for(Reporte reporte:this.tiposSeleccionar) {
				this.jComboBoxTiposSeleccionarDetalleConsignacion.addItem(reporte);
			}
			
			
			if(this.tiposSeleccionar!=null && this.tiposSeleccionar.size()>1) {
				this.jComboBoxTiposSeleccionarDetalleConsignacion.setSelectedIndex(1);
			}
				
			//REPORTE DINAMICO
			this.inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualDetalleConsignacion();
							
			//TIPOS COLUMNAS SELECT
			//TIPOS SELECCIONAR
			
			
		} catch(Exception e) {
			throw e;
		}
	}		
	
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualDetalleConsignacion() throws Exception {
		try	{
			DefaultListModel<Reporte> defaultListModel=new DefaultListModel<Reporte>();
			
			
			//TIPOS ARCHIVOS REPORTES DINAMICO
			if(this.jInternalFrameReporteDinamicoDetalleConsignacion!=null) {
				this.jInternalFrameReporteDinamicoDetalleConsignacion.getjComboBoxTiposArchivosReportesDinamico().removeAllItems();
					
				for(Reporte reporte:this.tiposArchivosReportesDinamico) {
					this.jInternalFrameReporteDinamicoDetalleConsignacion.getjComboBoxTiposArchivosReportesDinamico().addItem(reporte);
				}
				
			}
			
			//TIPOS REPORTES DINAMICO
			if(this.jInternalFrameReporteDinamicoDetalleConsignacion!=null) {
				this.jInternalFrameReporteDinamicoDetalleConsignacion.getjComboBoxTiposReportesDinamico().removeAllItems();
					
				for(Reporte reporte:this.tiposReportesDinamico) {
					this.jInternalFrameReporteDinamicoDetalleConsignacion.getjComboBoxTiposReportesDinamico().addItem(reporte);
				}
				
			}
			
			defaultListModel=new DefaultListModel<Reporte>();
			
			if(this.jInternalFrameReporteDinamicoDetalleConsignacion!=null) {
				
				if(this.jInternalFrameReporteDinamicoDetalleConsignacion.getjListColumnasSelectReporte()!=null) {
					this.jInternalFrameReporteDinamicoDetalleConsignacion.getjListColumnasSelectReporte().removeAll();
						
					for(Reporte reporte:this.tiposColumnasSelect) {
						defaultListModel.addElement(reporte);
					}						
						
					this.jInternalFrameReporteDinamicoDetalleConsignacion.getjListColumnasSelectReporte().setModel(defaultListModel);									
						
				}	
					
				//TIPOS RELACIONES SELECT
				//TIPOS SELECCIONAR
				defaultListModel=new DefaultListModel<Reporte>();
				if(this.jInternalFrameReporteDinamicoDetalleConsignacion.getjListRelacionesSelectReporte()!=null) {
					this.jInternalFrameReporteDinamicoDetalleConsignacion.getjListRelacionesSelectReporte().removeAll();
						
					for(Reporte reporte:this.tiposRelacionesSelect) {
						defaultListModel.addElement(reporte);
					}						
						
					this.jInternalFrameReporteDinamicoDetalleConsignacion.getjListRelacionesSelectReporte().setModel(defaultListModel);									
						
				}	
				
				
				//TIPOS COLUMNAS CATEGORIA DINAMICO
				if(this.jInternalFrameReporteDinamicoDetalleConsignacion.getjComboBoxColumnaCategoriaGrafico()!=null) {
					this.jInternalFrameReporteDinamicoDetalleConsignacion.getjComboBoxColumnaCategoriaGrafico().removeAllItems();
						
					ArrayList<Reporte> tiposColumnasCategoria=DetalleConsignacionConstantesFunciones.getTiposSeleccionarDetalleConsignacion(true,true,false,true,true);
						
					for(Reporte reporte:tiposColumnasCategoria) {//this.tiposSeleccionar
						this.jInternalFrameReporteDinamicoDetalleConsignacion.getjComboBoxColumnaCategoriaGrafico().addItem(reporte);
					}
					
				}
					
				//TIPOS COLUMNAS CATEGORIA VALOR DINAMICO
				if(this.jInternalFrameReporteDinamicoDetalleConsignacion.getjComboBoxColumnaCategoriaValor()!=null) {
					this.jInternalFrameReporteDinamicoDetalleConsignacion.getjComboBoxColumnaCategoriaValor().removeAllItems();
						
					ArrayList<Reporte> tiposColumnasCategoriaValor=DetalleConsignacionConstantesFunciones.getTiposSeleccionarDetalleConsignacion(false,false,true,false,false);
						
					for(Reporte reporte:tiposColumnasCategoriaValor) {//this.tiposSeleccionar
						this.jInternalFrameReporteDinamicoDetalleConsignacion.getjComboBoxColumnaCategoriaValor().addItem(reporte);
					}
					
				}
					
				//TIPOS COLUMNAS VALOR
				defaultListModel=new DefaultListModel<Reporte>();
					
				if(this.jInternalFrameReporteDinamicoDetalleConsignacion.getjListColumnasValoresGrafico()!=null) {
					this.jInternalFrameReporteDinamicoDetalleConsignacion.getjListColumnasValoresGrafico().removeAll();
						
					ArrayList<Reporte> tiposColumnasValor=DetalleConsignacionConstantesFunciones.getTiposSeleccionarDetalleConsignacion(false,false,true,false,false);
						
					for(Reporte reporte:tiposColumnasValor) {//this.tiposSeleccionar
						defaultListModel.addElement(reporte);
					}						
						
					this.jInternalFrameReporteDinamicoDetalleConsignacion.getjListColumnasValoresGrafico().setModel(defaultListModel);									
						
				}
					
				//TIPOS GRAFICOS REPORTES DINAMICOS
				if(this.jInternalFrameReporteDinamicoDetalleConsignacion.getjComboBoxTiposGraficosReportesDinamico()!=null) {
					this.jInternalFrameReporteDinamicoDetalleConsignacion.getjComboBoxTiposGraficosReportesDinamico().removeAllItems();
						
					for(Reporte reporte:this.tiposGraficosReportes) {
						this.jInternalFrameReporteDinamicoDetalleConsignacion.getjComboBoxTiposGraficosReportesDinamico().addItem(reporte);
					}
					
				}
			
			
			}
		} catch(Exception e) {
			throw e;
		}
	}	
	
	
	
	public void inicializarActualizarBindingBusquedasManualDetalleConsignacion()  throws Exception {				
		//BYDAN_BUSQUEDAS		
		
		if(this.jComboBoxid_bodegaFK_IdBodegaDetalleConsignacion.getSelectedItem()!=null){this.id_bodegaFK_IdBodega=((Bodega)this.jComboBoxid_bodegaFK_IdBodegaDetalleConsignacion.getSelectedItem()).getId();}
		if(this.jComboBoxid_consignacionFK_IdConsignacionDetalleConsignacion.getSelectedItem()!=null){this.id_consignacionFK_IdConsignacion=((Consignacion)this.jComboBoxid_consignacionFK_IdConsignacionDetalleConsignacion.getSelectedItem()).getId();}
		if(this.jComboBoxid_estado_detalle_pedidoFK_IdEstadoDetallePedidoDetalleConsignacion.getSelectedItem()!=null){this.id_estado_detalle_pedidoFK_IdEstadoDetallePedido=((EstadoDetallePedido)this.jComboBoxid_estado_detalle_pedidoFK_IdEstadoDetallePedidoDetalleConsignacion.getSelectedItem()).getId();}
		if(this.jComboBoxid_productoFK_IdProductoDetalleConsignacion.getSelectedItem()!=null){this.id_productoFK_IdProducto=((Producto)this.jComboBoxid_productoFK_IdProductoDetalleConsignacion.getSelectedItem()).getId();}
		if(this.jComboBoxid_unidadFK_IdUnidadDetalleConsignacion.getSelectedItem()!=null){this.id_unidadFK_IdUnidad=((Unidad)this.jComboBoxid_unidadFK_IdUnidadDetalleConsignacion.getSelectedItem()).getId();}
		
	}
	
	
	
	
	public void inicializarActualizarBindingBusquedasDetalleConsignacion(Boolean esInicializar) throws Exception {				
		if(DetalleConsignacionJInternalFrame.ISBINDING_MANUAL) {
			
			this.inicializarActualizarBindingBusquedasManualDetalleConsignacion();			
			
		} else {
		}
	}		
		
	public void inicializarActualizarBindingTablaDetalleConsignacion() throws Exception {
		this.inicializarActualizarBindingTablaDetalleConsignacion(false);
	}
	
	
	public void inicializarActualizarBindingTablaOrderByDetalleConsignacion() {
		//TABLA OrderBy	
		TableColumn tableColumn=new TableColumn();
		Integer iWidthTableDefinicionOrderBy=0;			
			
		this.jInternalFrameOrderByDetalleConsignacion.getjTableDatosOrderBy().setModel(new TablaGeneralOrderByModel(this.arrOrderBy));
					
		//DEFINIR RENDERERS OrderBy
		tableColumn=this.jInternalFrameOrderByDetalleConsignacion.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderByDetalleConsignacion.getjTableDatosOrderBy(),OrderBy.ISSELECTED));			
		//tableColumn.addPropertyChangeListener(new DetalleConsignacionPropertyChangeListener());
					
		tableColumn.setPreferredWidth(50); 	 
		tableColumn.setWidth(50); 	 
		tableColumn.setMinWidth(50);
		tableColumn.setMaxWidth(50);
				
		iWidthTableDefinicionOrderBy+=50;
					
		tableColumn=this.jInternalFrameOrderByDetalleConsignacion.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderByDetalleConsignacion.getjTableDatosOrderBy(),OrderBy.NOMBRE));
		//tableColumn.addPropertyChangeListener(new DetalleConsignacionPropertyChangeListener());
					
		tableColumn.setPreferredWidth(150); 	 
		tableColumn.setWidth(150); 	 
		tableColumn.setMinWidth(150);
		tableColumn.setMaxWidth(150);
				
		iWidthTableDefinicionOrderBy+=150;
					
		//tableColumn=this.jTableDatosDetalleConsignacionOrderBy.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleConsignacionOrderBy,OrderBy.NOMBREDB));			
		////tableColumn.addPropertyChangeListener(new DetalleConsignacionPropertyChangeListener());
								
		tableColumn=this.jInternalFrameOrderByDetalleConsignacion.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderByDetalleConsignacion.getjTableDatosOrderBy(),OrderBy.ESDESC));
		//tableColumn.addPropertyChangeListener(new DetalleConsignacionPropertyChangeListener());
												
		tableColumn.setPreferredWidth(50); 	 
		tableColumn.setWidth(50); 	 
		tableColumn.setMinWidth(50);
		tableColumn.setMaxWidth(50);
				
		((AbstractTableModel) this.jInternalFrameOrderByDetalleConsignacion.getjTableDatosOrderBy().getModel()).fireTableDataChanged();
				
		iWidthTableDefinicionOrderBy+=50;
	}
	
	
	public void inicializarActualizarBindingTablaTotalesDetalleConsignacion() {		
		//TABLA OrderBy	
		TableColumn tableColumn=new TableColumn();
		
		//TABLA TOTALES
		this.jInternalFrameTotalesDetalleConsignacion.getjTableDatosTotales().setModel(new TablaGeneralTotalModel(this.arrDatoGeneralTotales));
				
		//DEFINIR RENDERERS TOTALES
		tableColumn=this.jInternalFrameTotalesDetalleConsignacion.getjTableDatosTotales().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameTotalesDetalleConsignacion.getjTableDatosTotales(),Constantes2.S_TIPO));			
		//tableColumn.addPropertyChangeListener(new DetalleConsignacionPropertyChangeListener());
				
				
		tableColumn=this.jInternalFrameTotalesDetalleConsignacion.getjTableDatosTotales().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameTotalesDetalleConsignacion.getjTableDatosTotales(),Constantes2.S_TOTAL));
		//tableColumn.addPropertyChangeListener(new DetalleConsignacionPropertyChangeListener());		
	}
	
	public void inicializarActualizarBindingTablaDetalleConsignacion(Boolean esInicializar) throws Exception {
		Boolean isNoExiste=false;
		Integer iCountNumeroColumnasNormal=0;
		Integer iCountNumeroColumnasFk=0;
		
		this.iWidthTableDefinicion=0;
		
		int iSizeTabla=0;
		
		iSizeTabla=this.getSizeTablaDatos();
		
	if(esInicializar || ConstantesSwing.FORZAR_INICIALIZAR_TABLA) {//esInicializar
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			isNoExiste=detalleconsignacionLogic.getDetalleConsignacions().size()==0;
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			isNoExiste=detalleconsignacions.size()==0;
		}
		//ARCHITECTURE
			
		if(isNoExiste) {
			if(this.iNumeroPaginacion-this.iNumeroPaginacion>0) {
				this.iNumeroPaginacion-=this.iNumeroPaginacion;
			}
		}
		
		TableColumn tableColumn=new TableColumn();
		
		if(DetalleConsignacionJInternalFrame.ISBINDING_MANUAL_TABLA) {
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.jTableDatosDetalleConsignacion.setModel(new DetalleConsignacionModel(this.detalleconsignacionLogic.getDetalleConsignacions(),this));
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.jTableDatosDetalleConsignacion.setModel(new DetalleConsignacionModel(this.detalleconsignacions,this));
			}
			//ARCHITECTURE
			
			if(this.jInternalFrameTotalesDetalleConsignacion!=null) {
				//TABLA TOTALES
				this.jInternalFrameTotalesDetalleConsignacion.getjTableDatosTotales().setModel(new TablaGeneralTotalModel(this.arrDatoGeneralTotales));
				
				//DEFINIR RENDERERS TOTALES
				tableColumn=this.jInternalFrameTotalesDetalleConsignacion.getjTableDatosTotales().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameTotalesDetalleConsignacion.getjTableDatosTotales(),Constantes2.S_TIPO));			
				//tableColumn.addPropertyChangeListener(new DetalleConsignacionPropertyChangeListener());
				
				
				tableColumn=this.jInternalFrameTotalesDetalleConsignacion.getjTableDatosTotales().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameTotalesDetalleConsignacion.getjTableDatosTotales(),Constantes2.S_TOTAL));
				//tableColumn.addPropertyChangeListener(new DetalleConsignacionPropertyChangeListener());
			}
							
			
			
			if(this.jInternalFrameOrderByDetalleConsignacion!=null && this.jInternalFrameOrderByDetalleConsignacion.getjTableDatosOrderBy()!=null) {
				this.inicializarActualizarBindingTablaOrderByDetalleConsignacion();
			}
			
								
			//DEFINIR RENDERERS
			tableColumn=this.jTableDatosDetalleConsignacion.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleConsignacion,Constantes2.S_SELECCIONAR));
			//tableColumn.addPropertyChangeListener(new DetalleConsignacionPropertyChangeListener());
			tableColumn.setCellRenderer(new BooleanRenderer(true,"Seleccionar "+DetalleConsignacionConstantesFunciones.SCLASSWEBTITULO,detalleconsignacionConstantesFunciones.resaltarSeleccionarDetalleConsignacion,iSizeTabla,true,false,"","",this));
			tableColumn.setCellEditor(new BooleanEditorRenderer(true,"Seleccionar "+DetalleConsignacionConstantesFunciones.SCLASSWEBTITULO,detalleconsignacionConstantesFunciones.resaltarSeleccionarDetalleConsignacion,false,"","",this));			
			
			tableColumn.setPreferredWidth(50); 	 
			tableColumn.setWidth(50); 	 
			tableColumn.setMinWidth(50); 
			tableColumn.setMaxWidth(50); 
			
			this.iWidthTableDefinicion+=50;
			
			


			tableColumn=this.jTableDatosDetalleConsignacion.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleConsignacion,DetalleConsignacionConstantesFunciones.LABEL_ID));

		if(this.detalleconsignacionConstantesFunciones.mostraridDetalleConsignacion && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleConsignacionConstantesFunciones.LABEL_ID,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.detalleconsignacionConstantesFunciones.resaltaridDetalleConsignacion,this.detalleconsignacionConstantesFunciones.activaridDetalleConsignacion,iSizeTabla,this,true,"idDetalleConsignacion","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.detalleconsignacionConstantesFunciones.resaltaridDetalleConsignacion,this.detalleconsignacionConstantesFunciones.activaridDetalleConsignacion,this,true,"idDetalleConsignacion","BASICO",false));

			tableColumn.setPreferredWidth(50);
			tableColumn.setWidth(50);
			tableColumn.setMinWidth(50);
			tableColumn.setMaxWidth(50);

			this.iWidthTableDefinicion+=50;
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleConsignacion.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleConsignacion,DetalleConsignacionConstantesFunciones.LABEL_IDEMPRESA));

		if(this.detalleconsignacionConstantesFunciones.mostrarid_empresaDetalleConsignacion && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleConsignacionConstantesFunciones.LABEL_IDEMPRESA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new EmpresaTableCell(this.empresasForeignKey,this.detalleconsignacionConstantesFunciones.resaltarid_empresaDetalleConsignacion,this,this.detalleconsignacionConstantesFunciones.activarid_empresaDetalleConsignacion,iSizeTabla));
			tableColumn.setCellEditor(new EmpresaTableCell(this.empresasForeignKey,this.detalleconsignacionConstantesFunciones.resaltarid_empresaDetalleConsignacion,this,this.detalleconsignacionConstantesFunciones.activarid_empresaDetalleConsignacion,false,"id_empresaDetalleConsignacion","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new DetalleConsignacionPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleConsignacion.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleConsignacion,DetalleConsignacionConstantesFunciones.LABEL_IDSUCURSAL));

		if(this.detalleconsignacionConstantesFunciones.mostrarid_sucursalDetalleConsignacion && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleConsignacionConstantesFunciones.LABEL_IDSUCURSAL,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new SucursalTableCell(this.sucursalsForeignKey,this.detalleconsignacionConstantesFunciones.resaltarid_sucursalDetalleConsignacion,this,this.detalleconsignacionConstantesFunciones.activarid_sucursalDetalleConsignacion,iSizeTabla));
			tableColumn.setCellEditor(new SucursalTableCell(this.sucursalsForeignKey,this.detalleconsignacionConstantesFunciones.resaltarid_sucursalDetalleConsignacion,this,this.detalleconsignacionConstantesFunciones.activarid_sucursalDetalleConsignacion,false,"id_sucursalDetalleConsignacion","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new DetalleConsignacionPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleConsignacion.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleConsignacion,DetalleConsignacionConstantesFunciones.LABEL_IDEJERCICIO));

		if(this.detalleconsignacionConstantesFunciones.mostrarid_ejercicioDetalleConsignacion && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleConsignacionConstantesFunciones.LABEL_IDEJERCICIO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new EjercicioTableCell(this.ejerciciosForeignKey,this.detalleconsignacionConstantesFunciones.resaltarid_ejercicioDetalleConsignacion,this,this.detalleconsignacionConstantesFunciones.activarid_ejercicioDetalleConsignacion,iSizeTabla));
			tableColumn.setCellEditor(new EjercicioTableCell(this.ejerciciosForeignKey,this.detalleconsignacionConstantesFunciones.resaltarid_ejercicioDetalleConsignacion,this,this.detalleconsignacionConstantesFunciones.activarid_ejercicioDetalleConsignacion,false,"id_ejercicioDetalleConsignacion","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new DetalleConsignacionPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleConsignacion.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleConsignacion,DetalleConsignacionConstantesFunciones.LABEL_IDPERIODO));

		if(this.detalleconsignacionConstantesFunciones.mostrarid_periodoDetalleConsignacion && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleConsignacionConstantesFunciones.LABEL_IDPERIODO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new PeriodoTableCell(this.periodosForeignKey,this.detalleconsignacionConstantesFunciones.resaltarid_periodoDetalleConsignacion,this,this.detalleconsignacionConstantesFunciones.activarid_periodoDetalleConsignacion,iSizeTabla));
			tableColumn.setCellEditor(new PeriodoTableCell(this.periodosForeignKey,this.detalleconsignacionConstantesFunciones.resaltarid_periodoDetalleConsignacion,this,this.detalleconsignacionConstantesFunciones.activarid_periodoDetalleConsignacion,false,"id_periodoDetalleConsignacion","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new DetalleConsignacionPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleConsignacion.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleConsignacion,DetalleConsignacionConstantesFunciones.LABEL_IDANIO));

		if(this.detalleconsignacionConstantesFunciones.mostrarid_anioDetalleConsignacion && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleConsignacionConstantesFunciones.LABEL_IDANIO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new AnioTableCell(this.aniosForeignKey,this.detalleconsignacionConstantesFunciones.resaltarid_anioDetalleConsignacion,this,this.detalleconsignacionConstantesFunciones.activarid_anioDetalleConsignacion,iSizeTabla));
			tableColumn.setCellEditor(new AnioTableCell(this.aniosForeignKey,this.detalleconsignacionConstantesFunciones.resaltarid_anioDetalleConsignacion,this,this.detalleconsignacionConstantesFunciones.activarid_anioDetalleConsignacion,true,"id_anioDetalleConsignacion","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new DetalleConsignacionPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleConsignacion.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleConsignacion,DetalleConsignacionConstantesFunciones.LABEL_IDMES));

		if(this.detalleconsignacionConstantesFunciones.mostrarid_mesDetalleConsignacion && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleConsignacionConstantesFunciones.LABEL_IDMES,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new MesTableCell(this.messForeignKey,this.detalleconsignacionConstantesFunciones.resaltarid_mesDetalleConsignacion,this,this.detalleconsignacionConstantesFunciones.activarid_mesDetalleConsignacion,iSizeTabla));
			tableColumn.setCellEditor(new MesTableCell(this.messForeignKey,this.detalleconsignacionConstantesFunciones.resaltarid_mesDetalleConsignacion,this,this.detalleconsignacionConstantesFunciones.activarid_mesDetalleConsignacion,true,"id_mesDetalleConsignacion","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new DetalleConsignacionPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleConsignacion.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleConsignacion,DetalleConsignacionConstantesFunciones.LABEL_IDCONSIGNACION));

		if(this.detalleconsignacionConstantesFunciones.mostrarid_consignacionDetalleConsignacion && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleConsignacionConstantesFunciones.LABEL_IDCONSIGNACION,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new ConsignacionTableCell(this.consignacionsForeignKey,this.detalleconsignacionConstantesFunciones.resaltarid_consignacionDetalleConsignacion,this,this.detalleconsignacionConstantesFunciones.activarid_consignacionDetalleConsignacion,iSizeTabla));
			tableColumn.setCellEditor(new ConsignacionTableCell(this.consignacionsForeignKey,this.detalleconsignacionConstantesFunciones.resaltarid_consignacionDetalleConsignacion,this,this.detalleconsignacionConstantesFunciones.activarid_consignacionDetalleConsignacion,true,"id_consignacionDetalleConsignacion","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new DetalleConsignacionPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleConsignacion.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleConsignacion,DetalleConsignacionConstantesFunciones.LABEL_IDPRODUCTO));

		if(this.detalleconsignacionConstantesFunciones.mostrarid_productoDetalleConsignacion && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleConsignacionConstantesFunciones.LABEL_IDPRODUCTO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new ProductoTableCell(this.productosForeignKey,this.detalleconsignacionConstantesFunciones.resaltarid_productoDetalleConsignacion,this,this.detalleconsignacionConstantesFunciones.activarid_productoDetalleConsignacion,iSizeTabla));
			tableColumn.setCellEditor(new ProductoTableCell(this.productosForeignKey,this.detalleconsignacionConstantesFunciones.resaltarid_productoDetalleConsignacion,this,this.detalleconsignacionConstantesFunciones.activarid_productoDetalleConsignacion,true,"id_productoDetalleConsignacion","CON_BUSQUEDA-CON_EVENT_CHANGE"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,100));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,100));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,100));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,100));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,100);
			//tableColumn.addPropertyChangeListener(new DetalleConsignacionPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleConsignacion.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleConsignacion,DetalleConsignacionConstantesFunciones.LABEL_IDBODEGA));

		if(this.detalleconsignacionConstantesFunciones.mostrarid_bodegaDetalleConsignacion && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleConsignacionConstantesFunciones.LABEL_IDBODEGA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new BodegaTableCell(this.bodegasForeignKey,this.detalleconsignacionConstantesFunciones.resaltarid_bodegaDetalleConsignacion,this,this.detalleconsignacionConstantesFunciones.activarid_bodegaDetalleConsignacion,iSizeTabla));
			tableColumn.setCellEditor(new BodegaTableCell(this.bodegasForeignKey,this.detalleconsignacionConstantesFunciones.resaltarid_bodegaDetalleConsignacion,this,this.detalleconsignacionConstantesFunciones.activarid_bodegaDetalleConsignacion,true,"id_bodegaDetalleConsignacion","BASICO-CON_EVENT_CHANGE"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75);
			//tableColumn.addPropertyChangeListener(new DetalleConsignacionPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleConsignacion.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleConsignacion,DetalleConsignacionConstantesFunciones.LABEL_IDUNIDAD));

		if(this.detalleconsignacionConstantesFunciones.mostrarid_unidadDetalleConsignacion && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleConsignacionConstantesFunciones.LABEL_IDUNIDAD,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new UnidadTableCell(this.unidadsForeignKey,this.detalleconsignacionConstantesFunciones.resaltarid_unidadDetalleConsignacion,this,this.detalleconsignacionConstantesFunciones.activarid_unidadDetalleConsignacion,iSizeTabla));
			tableColumn.setCellEditor(new UnidadTableCell(this.unidadsForeignKey,this.detalleconsignacionConstantesFunciones.resaltarid_unidadDetalleConsignacion,this,this.detalleconsignacionConstantesFunciones.activarid_unidadDetalleConsignacion,true,"id_unidadDetalleConsignacion","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new DetalleConsignacionPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleConsignacion.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleConsignacion,DetalleConsignacionConstantesFunciones.LABEL_IDESTADODETALLEPEDIDO));

		if(this.detalleconsignacionConstantesFunciones.mostrarid_estado_detalle_pedidoDetalleConsignacion && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleConsignacionConstantesFunciones.LABEL_IDESTADODETALLEPEDIDO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new EstadoDetallePedidoTableCell(this.estadodetallepedidosForeignKey,this.detalleconsignacionConstantesFunciones.resaltarid_estado_detalle_pedidoDetalleConsignacion,this,this.detalleconsignacionConstantesFunciones.activarid_estado_detalle_pedidoDetalleConsignacion,iSizeTabla));
			tableColumn.setCellEditor(new EstadoDetallePedidoTableCell(this.estadodetallepedidosForeignKey,this.detalleconsignacionConstantesFunciones.resaltarid_estado_detalle_pedidoDetalleConsignacion,this,this.detalleconsignacionConstantesFunciones.activarid_estado_detalle_pedidoDetalleConsignacion,true,"id_estado_detalle_pedidoDetalleConsignacion","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new DetalleConsignacionPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleConsignacion.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleConsignacion,DetalleConsignacionConstantesFunciones.LABEL_CANTIDAD));

		if(this.detalleconsignacionConstantesFunciones.mostrarcantidadDetalleConsignacion && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleConsignacionConstantesFunciones.LABEL_CANTIDAD,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.detalleconsignacionConstantesFunciones.resaltarcantidadDetalleConsignacion,this.detalleconsignacionConstantesFunciones.activarcantidadDetalleConsignacion,iSizeTabla,this,true,"cantidadDetalleConsignacion","BASICO-CON_EVENT_CHANGE"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.detalleconsignacionConstantesFunciones.resaltarcantidadDetalleConsignacion,this.detalleconsignacionConstantesFunciones.activarcantidadDetalleConsignacion,this,true,"cantidadDetalleConsignacion","BASICO-CON_EVENT_CHANGE",true));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new DetalleConsignacionPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleConsignacion.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleConsignacion,DetalleConsignacionConstantesFunciones.LABEL_PRECIO));

		if(this.detalleconsignacionConstantesFunciones.mostrarprecioDetalleConsignacion && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleConsignacionConstantesFunciones.LABEL_PRECIO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.detalleconsignacionConstantesFunciones.resaltarprecioDetalleConsignacion,this.detalleconsignacionConstantesFunciones.activarprecioDetalleConsignacion,iSizeTabla,this,true,"precioDetalleConsignacion","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.detalleconsignacionConstantesFunciones.resaltarprecioDetalleConsignacion,this.detalleconsignacionConstantesFunciones.activarprecioDetalleConsignacion,this,true,"precioDetalleConsignacion","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new DetalleConsignacionPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleConsignacion.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleConsignacion,DetalleConsignacionConstantesFunciones.LABEL_DESCUENTOPORCENTAJE));

		if(this.detalleconsignacionConstantesFunciones.mostrardescuento_porcentajeDetalleConsignacion && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleConsignacionConstantesFunciones.LABEL_DESCUENTOPORCENTAJE,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.detalleconsignacionConstantesFunciones.resaltardescuento_porcentajeDetalleConsignacion,this.detalleconsignacionConstantesFunciones.activardescuento_porcentajeDetalleConsignacion,iSizeTabla,this,true,"descuento_porcentajeDetalleConsignacion","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.detalleconsignacionConstantesFunciones.resaltardescuento_porcentajeDetalleConsignacion,this.detalleconsignacionConstantesFunciones.activardescuento_porcentajeDetalleConsignacion,this,true,"descuento_porcentajeDetalleConsignacion","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new DetalleConsignacionPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleConsignacion.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleConsignacion,DetalleConsignacionConstantesFunciones.LABEL_DESCUENTOVALOR));

		if(this.detalleconsignacionConstantesFunciones.mostrardescuento_valorDetalleConsignacion && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleConsignacionConstantesFunciones.LABEL_DESCUENTOVALOR,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.detalleconsignacionConstantesFunciones.resaltardescuento_valorDetalleConsignacion,this.detalleconsignacionConstantesFunciones.activardescuento_valorDetalleConsignacion,iSizeTabla,this,true,"descuento_valorDetalleConsignacion","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.detalleconsignacionConstantesFunciones.resaltardescuento_valorDetalleConsignacion,this.detalleconsignacionConstantesFunciones.activardescuento_valorDetalleConsignacion,this,true,"descuento_valorDetalleConsignacion","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new DetalleConsignacionPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleConsignacion.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleConsignacion,DetalleConsignacionConstantesFunciones.LABEL_IVA));

		if(this.detalleconsignacionConstantesFunciones.mostrarivaDetalleConsignacion && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleConsignacionConstantesFunciones.LABEL_IVA,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.detalleconsignacionConstantesFunciones.resaltarivaDetalleConsignacion,this.detalleconsignacionConstantesFunciones.activarivaDetalleConsignacion,iSizeTabla,this,true,"ivaDetalleConsignacion","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.detalleconsignacionConstantesFunciones.resaltarivaDetalleConsignacion,this.detalleconsignacionConstantesFunciones.activarivaDetalleConsignacion,this,true,"ivaDetalleConsignacion","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new DetalleConsignacionPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleConsignacion.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleConsignacion,DetalleConsignacionConstantesFunciones.LABEL_TOTAL));

		if(this.detalleconsignacionConstantesFunciones.mostrartotalDetalleConsignacion && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleConsignacionConstantesFunciones.LABEL_TOTAL,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.detalleconsignacionConstantesFunciones.resaltartotalDetalleConsignacion,this.detalleconsignacionConstantesFunciones.activartotalDetalleConsignacion,iSizeTabla,this,true,"totalDetalleConsignacion","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.detalleconsignacionConstantesFunciones.resaltartotalDetalleConsignacion,this.detalleconsignacionConstantesFunciones.activartotalDetalleConsignacion,this,true,"totalDetalleConsignacion","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new DetalleConsignacionPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}
			
		} else {
		}			
					
		if(!this.detalleconsignacionSessionBean.getEsGuardarRelacionado()
			&& !this.esParaBusquedaForeignKey) {
			
		}
		
		if(true) {
			String sLabelColumnAccion="Editar";
			String sLabelColumnAccionEli="Eli";
			
			if(this.esParaBusquedaForeignKey)  {
				sLabelColumnAccion="Seleccionar";
				
				//LO MISMO QUE ELSE
				tableColumn= new TableColumn();
				tableColumn.setIdentifier(sLabelColumnAccion);
				tableColumn.setHeaderValue(sLabelColumnAccion);
				tableColumn.setCellRenderer(new IdTableCell(this,false,false,this.detalleconsignacionSessionBean.getEsGuardarRelacionado(),iSizeTabla));
				tableColumn.setCellEditor(new IdTableCell(this,false,false,this.detalleconsignacionSessionBean.getEsGuardarRelacionado(),iSizeTabla));
	
				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				
				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
				
				this.jTableDatosDetalleConsignacion.addColumn(tableColumn);
			
			} else {				
				
				//LO MISMO QUE IF
				
				tableColumn= new TableColumn();
				tableColumn.setIdentifier(sLabelColumnAccion);
				tableColumn.setHeaderValue(sLabelColumnAccion);
				tableColumn.setCellRenderer(new IdTableCell(this,false,false,this.detalleconsignacionSessionBean.getEsGuardarRelacionado(),iSizeTabla));
				tableColumn.setCellEditor(new IdTableCell(this,false,false,this.detalleconsignacionSessionBean.getEsGuardarRelacionado(),iSizeTabla));
		
				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				
				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
				
				this.jTableDatosDetalleConsignacion.addColumn(tableColumn);				
					
				//ELIMINAR
				if(this.isPermisoEliminarDetalleConsignacion && this.isPermisoGuardarCambiosDetalleConsignacion) {
					tableColumn= new TableColumn();
					tableColumn.setIdentifier(Constantes2.S_ELI);
					tableColumn.setHeaderValue(sLabelColumnAccionEli);
					tableColumn.setCellRenderer(new IdTableCell(this,false,true,this.detalleconsignacionSessionBean.getEsGuardarRelacionado(),iSizeTabla));
					tableColumn.setCellEditor(new IdTableCell(this,false,true,this.detalleconsignacionSessionBean.getEsGuardarRelacionado(),iSizeTabla));
			
					tableColumn.setPreferredWidth(65); 	 
					tableColumn.setWidth(65); 	 
					tableColumn.setMinWidth(65); 
					tableColumn.setMaxWidth(65);
					
					this.iWidthTableDefinicion+=65;
						
					this.jTableDatosDetalleConsignacion.addColumn(tableColumn);
				}
			}			
						
			
			/*
			tableColumn= new TableColumn();
			tableColumn.setIdentifier(Constantes2.S_SELECCIONAR);
			tableColumn.setHeaderValue(Constantes2.S_SELECCIONAR);
			tableColumn.setCellRenderer(new IdSeleccionarTableCell(this));
			tableColumn.setCellEditor(new IdSeleccionarTableCell(this));
			
			tableColumn.setPreferredWidth(30); 	 
			tableColumn.setWidth(30); 	 
			tableColumn.setMinWidth(30); 
			
			this.iWidthTableDefinicion+=30;
			
			this.jTableDatosDetalleConsignacion.addColumn(tableColumn);
			*/
		}
		
		Integer iUltimaColumna=0;//1
		Integer iNuevaPosicionColumna=0;
		
		
		//PERMITE ELIMINAR SIMPLE
		if(!this.esParaBusquedaForeignKey)  {
			if(this.isPermisoEliminarDetalleConsignacion && this.isPermisoGuardarCambiosDetalleConsignacion) {
				iUltimaColumna++;
			}	
		}
		
		//PERMITE EDITAR SIMPLE
		iUltimaColumna++;	
		
				
		
		//MOVIA SELECCIONAR
		//iUltimaColumna++;
		
		if(!this.esParaBusquedaForeignKey)  {
			if(this.isPermisoEliminarDetalleConsignacion && this.isPermisoGuardarCambiosDetalleConsignacion) {
				//REUBICA ELIMINAR SIMPLE
				jTableDatosDetalleConsignacion.moveColumn(this.jTableDatosDetalleConsignacion.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1,-2 o -3
					
				iUltimaColumna--;
			}
		}
		//REUBICA EDITAR SIMPLE
		jTableDatosDetalleConsignacion.moveColumn(this.jTableDatosDetalleConsignacion.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1,-2 o -3				
		
		
		
		
		//REUBICABA SELECCIONAR
		/*
		if(iUltimaColumna>1) {
			iUltimaColumna--;
		}
		
		//iNuevaPosicionColumna++;
			
		//REUBICA SELECCIONAR FILA CHECK
		jTableDatosDetalleConsignacion.moveColumn(this.jTableDatosDetalleConsignacion.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1		
		*/
		
		//DEFINEN HEADERS
		final TableCellRenderer tableHeaderDefaultCellRenderer = this.jTableDatosDetalleConsignacion.getTableHeader().getDefaultRenderer();
		
		this.jTableDatosDetalleConsignacion.getTableHeader().setDefaultRenderer(new TableCellRendererHeader(this.jTableDatosDetalleConsignacion,tableHeaderDefaultCellRenderer));
	    
		TableColumn column=null;
		
		if(!DetalleConsignacionJInternalFrame.ISBINDING_MANUAL_TABLA) {
			for(int i = 0; i < this.jTableDatosDetalleConsignacion.getColumnModel().getColumnCount(); i++) { 
				column = this.jTableDatosDetalleConsignacion.getColumnModel().getColumn(i); 
				
				if(column.getIdentifier()!=null) {
					//SI SE UTILIZA UN HEADER ES GENERICO
					//column.setHeaderRenderer(new HeaderRenderer(column.getIdentifier().toString()));
				}
				
				if(column.getIdentifier()!=null && column.getIdentifier().equals(Constantes2.S_ELI)) {
					continue;
				}
				
				if(column.getIdentifier()!=null && column.getIdentifier().equals(Constantes2.S_SELECCIONAR)) {
					if(!DetalleConsignacionJInternalFrame.ISBINDING_MANUAL_TABLA) {
						column.setPreferredWidth(50); 	 
						column.setWidth(50); 	 
						column.setMinWidth(50); 	
						column.setMaxWidth(50); 
						
						this.iWidthTableDefinicion+=50;
					}
					
				} else {
					if(!DetalleConsignacionJInternalFrame.ISBINDING_MANUAL_TABLA) {
						column.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
						column.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
						column.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 	
						column.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 	
						
						this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
					}
				}
			}
		}
		
		this.jTableDatosDetalleConsignacion.setSelectionBackground(FuncionesSwing.getColorSelectedBackground());
		this.jTableDatosDetalleConsignacion.setSelectionForeground(FuncionesSwing.getColorSelectedForeground());
		
		/*
		this.jTableDatosDetalleConsignacion.setDefaultRenderer(Object.class, new DefaultTableCellRenderer() {
			private static final long serialVersionUID = 1L;
			
		    @Override
		    public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
		        final Component component= super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
		        //POR DEFECTO ES MEJOR, SE PIERDE DATOS AL SELECCIONAR BLANCO LETRAS BLANCAS
				component.setBackground(row % 2 == 0 ? FuncionesSwing.getColorTextFields(Constantes2.S_FONDOCONTROL_COLOR) : Funciones2.getColorFilaTabla2()); //FuncionesSwing.getColorTextFields(Constantes2.S_FONDOCONTROL_COLOR)
				component.setForeground(Funciones2.getColorTextoFilaTabla1());
				
				try {
		        	int iSize=-999;
		        	
		        	if(conTotales) {
						//FILA TOTALES OTRO COLOR, SI TABLA NO ES UNO A UNO
			        	if(Constantes.ISUSAEJBLOGICLAYER) {
							iSize=detalleconsignacionLogic.getDetalleConsignacions().size()-1;
								
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							iSize=detalleconsignacions.size()-1;
						}
						
						if(iSize==row) {
							component.setBackground(Funciones2.getColorFilaTablaTotales());
						}
		        	}
					
					//POR EFICIENCIA NO UTILIZAR					
					//if (component instanceof JComponent) {
		            //    JComponent jcomponent = (JComponent) component;		                 		                
		        	//}				
					
				} catch (Exception e) {
					e.printStackTrace();
				}
				
		        return component;
		    }
		});
		*/
		
		//ESTA EN LA DEFINICION DE LA TABLA
		//this.jTableDatosDetalleConsignacion.setRowHeight(Constantes.ISWING_ALTO_FILA_TABLA);
		
		/*
		column=this.jTableDatosDetalleConsignacion.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSistema,Constantes2.S_SELECCIONAR));
		
		if(column!=null) {
			column.setPreferredWidth(25); 	 
			column.setWidth(25); 	 
			column.setMinWidth(25); 	
		}
		*/
			
			//CopyTableToTableTotal();
		} else {
			
			this.actualizarVisualTableDatosDetalleConsignacion();
			
		}
	}
	
	/*
	//COPY_TABLES
	/* FALTARIA RESOLVER:
	   1 SOLO SCROLL PARA 2 TABLAS
	   COPIA EXACTA DE COLUMNAS DE UNA TABLA A OTRA, SI SE MODIFICA TAMANIO TAMBIEN LA OTRA
	*/
	
	public void jButtonIdActionPerformed(ActionEvent evt,int rowIndex,Boolean esRelaciones,Boolean esEliminar) { 
		try {
			if(!esEliminar) {
				this.estaModoSeleccionar=true;
				
				//this.isEsNuevoDetalleConsignacion=false;
					
				DetalleConsignacionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.SELECTED,"FORM",this.detalleconsignacion,new Object(),this.detalleconsignacionParameterGeneral,this.detalleconsignacionReturnGeneral);
			
				if(this.detalleconsignacionSessionBean.getConGuardarRelaciones()) {
					this.dStart=(double)System.currentTimeMillis();
				}
				
				if(this.jInternalFrameDetalleFormDetalleConsignacion==null) {
					this.inicializarFormDetalle();
				}
				
				this.inicializarInvalidValues();
				
				int intSelectedRow = 0;
				
				if(rowIndex>=0) {
					intSelectedRow=rowIndex;
					this.jTableDatosDetalleConsignacion.getSelectionModel().setSelectionInterval(intSelectedRow, intSelectedRow);
				} else {	
					intSelectedRow=this.jTableDatosDetalleConsignacion.getSelectedRow();	       
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleconsignacion =(DetalleConsignacion) this.detalleconsignacionLogic.getDetalleConsignacions().toArray()[this.jTableDatosDetalleConsignacion.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.detalleconsignacion =(DetalleConsignacion) this.detalleconsignacions.toArray()[this.jTableDatosDetalleConsignacion.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//PUEDE SER PARA DUPLICADO O NUEVO TABLA
				
				if(this.detalleconsignacion.getsType().equals("DUPLICADO")
				   || this.detalleconsignacion.getsType().equals("NUEVO_GUARDAR_CAMBIOS")) {
					
					this.isEsNuevoDetalleConsignacion=true;
				
				} else {
					this.isEsNuevoDetalleConsignacion=false;	
				}
				
				//CONTROL VERSION ANTERIOR
				/*
				if(!this.detalleconsignacionSessionBean.getEsGuardarRelacionado()) {
					if(this.detalleconsignacion.getId()>=0 && !this.detalleconsignacion.getIsNew()) {						
						this.isEsNuevoDetalleConsignacion=false;
						
					} else {
						this.isEsNuevoDetalleConsignacion=true;
					}
					
				} else {
					//CONTROLAR PARA RELACIONADO
				}
				*/
				
				//ESTABLECE SI ES RELACIONADO O NO 
				this.habilitarDeshabilitarTipoMantenimientoDetalleConsignacion(esRelaciones);						
				
				this.seleccionarDetalleConsignacion(evt,null,rowIndex);
				
				//SELECCIONA ACTUAL PERO AUN NO SE HA INGRESADO AL SISTEMA
				//SE DESHABILITA POR GUARDAR CAMBIOS
				/*
				if(this.detalleconsignacion.getId()<0) {
					this.isEsNuevoDetalleConsignacion=true;
				}
				*/
				
				if(!this.esParaBusquedaForeignKey) {
					this.modificarDetalleConsignacion(evt,rowIndex,esRelaciones);
				} else {
					this.seleccionarDetalleConsignacion(evt,rowIndex);
				}	
				
				if(this.detalleconsignacionSessionBean.getConGuardarRelaciones()) {
					this.dEnd=(double)System.currentTimeMillis();					
					this.dDif=this.dEnd - this.dStart;
					
					if(Constantes.ISDEVELOPING) {
						System.out.println("Tiempo(ms) Seleccion DetalleConsignacion: " + this.dDif); 
					}
				}								
				
				DetalleConsignacionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.SELECTED,"FORM",this.detalleconsignacion,new Object(),this.detalleconsignacionParameterGeneral,this.detalleconsignacionReturnGeneral);
				
			} else {
				this.estaModoEliminarGuardarCambios=true;
				
				this.seleccionarDetalleConsignacion(evt,null,rowIndex);
				
				if(this.permiteMantenimiento(this.detalleconsignacion)) {
					if(this.detalleconsignacion.getId()>0) {
						this.detalleconsignacion.setIsDeleted(true);
						
						this.detalleconsignacionsEliminados.add(this.detalleconsignacion);
					}
					
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						this.detalleconsignacionLogic.getDetalleConsignacions().remove(this.detalleconsignacion);
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						this.detalleconsignacions.remove(this.detalleconsignacion);				
					}
					
					
					((DetalleConsignacionModel) this.jTableDatosDetalleConsignacion.getModel()).fireTableRowsDeleted(rowIndex,rowIndex);
					
					this.actualizarFilaTotales();
					
					this.inicializarActualizarBindingTablaDetalleConsignacion(false);					
				}								
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException2(this, e,logger,DetalleConsignacionConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoSeleccionar=false;				
			this.estaModoEliminarGuardarCambios=false;
		}
	}
	
	
	public void seleccionarDetalleConsignacion(ActionEvent evt,javax.swing.event.ListSelectionEvent evt2,int rowIndex) throws Exception { 
		try {
			//SI PUEDE SER NUEVO Y SELECCIONAR (PARA DUPLICAR Y NUEVO TABLA)
			//if(!this.isEsNuevoDetalleConsignacion) {
			
			if(this.jInternalFrameDetalleFormDetalleConsignacion==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
				int intSelectedRow = 0;
				
				if(rowIndex>=0) {
					intSelectedRow=rowIndex;
					this.jTableDatosDetalleConsignacion.getSelectionModel().setSelectionInterval(intSelectedRow, intSelectedRow);
				} else {	
					intSelectedRow=this.jTableDatosDetalleConsignacion.getSelectedRow();	       
				}
				
				//CUANDO SE RECARGA TABLA TAMBIEN SE SELECCIONA PERO CON -1 POR LO QUE SE NECESITA VALIDAR ANTES
				if(intSelectedRow<0) {
					return;
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleconsignacion =(DetalleConsignacion) this.detalleconsignacionLogic.getDetalleConsignacions().toArray()[this.jTableDatosDetalleConsignacion.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.detalleconsignacion =(DetalleConsignacion) this.detalleconsignacions.toArray()[this.jTableDatosDetalleConsignacion.convertRowIndexToModel(intSelectedRow)];
				}
				
				if(DetalleConsignacionJInternalFrame.ISBINDING_MANUAL_TABLA) {
					this.setVariablesObjetoActualToFormularioDetalleConsignacion(this.detalleconsignacion);
				}
				
				//ARCHITECTURE
				try {
					

					//Empresa
					if(!this.detalleconsignacionConstantesFunciones.cargarid_empresaDetalleConsignacion || this.detalleconsignacionConstantesFunciones.event_dependid_empresaDetalleConsignacion) {
						//this.cargarCombosEmpresasForeignKeyLista(" where id="+this.detalleconsignacion.getid_empresa());
									//this.inicializarActualizarBindingDetalleConsignacion(false,false);
						this.empresasForeignKey=new ArrayList<Empresa>();

						if(detalleconsignacion.getEmpresa()!=null) {
							this.empresasForeignKey.add(detalleconsignacion.getEmpresa());
						}

						this.addItemDefectoCombosForeignKeyEmpresa();
						this.cargarCombosFrameEmpresasForeignKey("Todos");
					}
					this.setActualEmpresaForeignKey(this.detalleconsignacion.getid_empresa(),false,"Formulario");

					//Sucursal
					if(!this.detalleconsignacionConstantesFunciones.cargarid_sucursalDetalleConsignacion || this.detalleconsignacionConstantesFunciones.event_dependid_sucursalDetalleConsignacion) {
						//this.cargarCombosSucursalsForeignKeyLista(" where id="+this.detalleconsignacion.getid_sucursal());
									//this.inicializarActualizarBindingDetalleConsignacion(false,false);
						this.sucursalsForeignKey=new ArrayList<Sucursal>();

						if(detalleconsignacion.getSucursal()!=null) {
							this.sucursalsForeignKey.add(detalleconsignacion.getSucursal());
						}

						this.addItemDefectoCombosForeignKeySucursal();
						this.cargarCombosFrameSucursalsForeignKey("Todos");
					}
					this.setActualSucursalForeignKey(this.detalleconsignacion.getid_sucursal(),false,"Formulario");

					//Ejercicio
					if(!this.detalleconsignacionConstantesFunciones.cargarid_ejercicioDetalleConsignacion || this.detalleconsignacionConstantesFunciones.event_dependid_ejercicioDetalleConsignacion) {
						//this.cargarCombosEjerciciosForeignKeyLista(" where id="+this.detalleconsignacion.getid_ejercicio());
									//this.inicializarActualizarBindingDetalleConsignacion(false,false);
						this.ejerciciosForeignKey=new ArrayList<Ejercicio>();

						if(detalleconsignacion.getEjercicio()!=null) {
							this.ejerciciosForeignKey.add(detalleconsignacion.getEjercicio());
						}

						this.addItemDefectoCombosForeignKeyEjercicio();
						this.cargarCombosFrameEjerciciosForeignKey("Todos");
					}
					this.setActualEjercicioForeignKey(this.detalleconsignacion.getid_ejercicio(),false,"Formulario");

					//Periodo
					if(!this.detalleconsignacionConstantesFunciones.cargarid_periodoDetalleConsignacion || this.detalleconsignacionConstantesFunciones.event_dependid_periodoDetalleConsignacion) {
						//this.cargarCombosPeriodosForeignKeyLista(" where id="+this.detalleconsignacion.getid_periodo());
									//this.inicializarActualizarBindingDetalleConsignacion(false,false);
						this.periodosForeignKey=new ArrayList<Periodo>();

						if(detalleconsignacion.getPeriodo()!=null) {
							this.periodosForeignKey.add(detalleconsignacion.getPeriodo());
						}

						this.addItemDefectoCombosForeignKeyPeriodo();
						this.cargarCombosFramePeriodosForeignKey("Todos");
					}
					this.setActualPeriodoForeignKey(this.detalleconsignacion.getid_periodo(),false,"Formulario");

					//Anio
					if(!this.detalleconsignacionConstantesFunciones.cargarid_anioDetalleConsignacion || this.detalleconsignacionConstantesFunciones.event_dependid_anioDetalleConsignacion) {
						//this.cargarCombosAniosForeignKeyLista(" where id="+this.detalleconsignacion.getid_anio());
									//this.inicializarActualizarBindingDetalleConsignacion(false,false);
						this.aniosForeignKey=new ArrayList<Anio>();

						if(detalleconsignacion.getAnio()!=null) {
							this.aniosForeignKey.add(detalleconsignacion.getAnio());
						}

						this.addItemDefectoCombosForeignKeyAnio();
						this.cargarCombosFrameAniosForeignKey("Todos");
					}
					this.setActualAnioForeignKey(this.detalleconsignacion.getid_anio(),false,"Formulario");

					//Mes
					if(!this.detalleconsignacionConstantesFunciones.cargarid_mesDetalleConsignacion || this.detalleconsignacionConstantesFunciones.event_dependid_mesDetalleConsignacion) {
						//this.cargarCombosMessForeignKeyLista(" where id="+this.detalleconsignacion.getid_mes());
									//this.inicializarActualizarBindingDetalleConsignacion(false,false);
						this.messForeignKey=new ArrayList<Mes>();

						if(detalleconsignacion.getMes()!=null) {
							this.messForeignKey.add(detalleconsignacion.getMes());
						}

						this.addItemDefectoCombosForeignKeyMes();
						this.cargarCombosFrameMessForeignKey("Todos");
					}
					this.setActualMesForeignKey(this.detalleconsignacion.getid_mes(),false,"Formulario");

					//Consignacion
					if(!this.detalleconsignacionConstantesFunciones.cargarid_consignacionDetalleConsignacion || this.detalleconsignacionConstantesFunciones.event_dependid_consignacionDetalleConsignacion) {
						//this.cargarCombosConsignacionsForeignKeyLista(" where id="+this.detalleconsignacion.getid_consignacion());
									//this.inicializarActualizarBindingDetalleConsignacion(false,false);
						this.consignacionsForeignKey=new ArrayList<Consignacion>();

						if(detalleconsignacion.getConsignacion()!=null) {
							this.consignacionsForeignKey.add(detalleconsignacion.getConsignacion());
						}

						this.addItemDefectoCombosForeignKeyConsignacion();
						this.cargarCombosFrameConsignacionsForeignKey("Todos");
					}
					this.setActualConsignacionForeignKey(this.detalleconsignacion.getid_consignacion(),false,"Formulario");

					//Producto
					if(!this.detalleconsignacionConstantesFunciones.cargarid_productoDetalleConsignacion || this.detalleconsignacionConstantesFunciones.event_dependid_productoDetalleConsignacion) {
						//this.cargarCombosProductosForeignKeyLista(" where id="+this.detalleconsignacion.getid_producto());
									//this.inicializarActualizarBindingDetalleConsignacion(false,false);
						this.productosForeignKey=new ArrayList<Producto>();

						if(detalleconsignacion.getProducto()!=null) {
							this.productosForeignKey.add(detalleconsignacion.getProducto());
						}

						this.addItemDefectoCombosForeignKeyProducto();
						this.cargarCombosFrameProductosForeignKey("Todos");
					}
					this.setActualProductoForeignKey(this.detalleconsignacion.getid_producto(),false,"Formulario");

					//Bodega
					if(!this.detalleconsignacionConstantesFunciones.cargarid_bodegaDetalleConsignacion || this.detalleconsignacionConstantesFunciones.event_dependid_bodegaDetalleConsignacion) {
						//this.cargarCombosBodegasForeignKeyLista(" where id="+this.detalleconsignacion.getid_bodega());
									//this.inicializarActualizarBindingDetalleConsignacion(false,false);
						this.bodegasForeignKey=new ArrayList<Bodega>();

						if(detalleconsignacion.getBodega()!=null) {
							this.bodegasForeignKey.add(detalleconsignacion.getBodega());
						}

						this.addItemDefectoCombosForeignKeyBodega();
						this.cargarCombosFrameBodegasForeignKey("Todos");
					}
					this.setActualBodegaForeignKey(this.detalleconsignacion.getid_bodega(),false,"Formulario");

					//Unidad
					if(!this.detalleconsignacionConstantesFunciones.cargarid_unidadDetalleConsignacion || this.detalleconsignacionConstantesFunciones.event_dependid_unidadDetalleConsignacion) {
						//this.cargarCombosUnidadsForeignKeyLista(" where id="+this.detalleconsignacion.getid_unidad());
									//this.inicializarActualizarBindingDetalleConsignacion(false,false);
						this.unidadsForeignKey=new ArrayList<Unidad>();

						if(detalleconsignacion.getUnidad()!=null) {
							this.unidadsForeignKey.add(detalleconsignacion.getUnidad());
						}

						this.addItemDefectoCombosForeignKeyUnidad();
						this.cargarCombosFrameUnidadsForeignKey("Todos");
					}
					this.setActualUnidadForeignKey(this.detalleconsignacion.getid_unidad(),false,"Formulario");

					//EstadoDetallePedido
					if(!this.detalleconsignacionConstantesFunciones.cargarid_estado_detalle_pedidoDetalleConsignacion || this.detalleconsignacionConstantesFunciones.event_dependid_estado_detalle_pedidoDetalleConsignacion) {
						//this.cargarCombosEstadoDetallePedidosForeignKeyLista(" where id="+this.detalleconsignacion.getid_estado_detalle_pedido());
									//this.inicializarActualizarBindingDetalleConsignacion(false,false);
						this.estadodetallepedidosForeignKey=new ArrayList<EstadoDetallePedido>();

						if(detalleconsignacion.getEstadoDetallePedido()!=null) {
							this.estadodetallepedidosForeignKey.add(detalleconsignacion.getEstadoDetallePedido());
						}

						this.addItemDefectoCombosForeignKeyEstadoDetallePedido();
						this.cargarCombosFrameEstadoDetallePedidosForeignKey("Todos");
					}
					this.setActualEstadoDetallePedidoForeignKey(this.detalleconsignacion.getid_estado_detalle_pedido(),false,"Formulario");
				} catch(Exception e) {
					throw e;
				}
				
				this.actualizarEstadoCeldasBotonesDetalleConsignacion("s", this.isGuardarCambiosEnLote, this.isEsMantenimientoRelacionado);
				
				//NO FUNCIONA BINDING PERO SE MANTIENE
				this.inicializarActualizarBindingBotonesDetalleConsignacion(false) ;
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualDetalleConsignacion() ;
			//}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleConsignacionConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setVariablesObjetoActualToFormularioTodoDetalleConsignacion(DetalleConsignacion detalleconsignacion) throws Exception { 
		this.setVariablesObjetoActualToFormularioTodoDetalleConsignacion(detalleconsignacion,false,"NINGUNO");
	}
	
	public void setVariablesObjetoActualToFormularioTodoDetalleConsignacion(DetalleConsignacion detalleconsignacion,Boolean conCargarListasDesdeObjetoActual,String sTipoEvento) throws Exception { 
		this.setVariablesObjetoActualToFormularioDetalleConsignacion(detalleconsignacion);
		
		if(conCargarListasDesdeObjetoActual) {
			this.setVariablesObjetoActualToListasForeignKeyDetalleConsignacion(detalleconsignacion,sTipoEvento);
		}
		
		this.setVariablesObjetoActualToFormularioForeignKeyDetalleConsignacion(detalleconsignacion);
	}
	
	public void setVariablesObjetoActualToFormularioDetalleConsignacion(DetalleConsignacion detalleconsignacion) throws Exception { 
		try {			
			Image imageActual=null;
			ImageIcon imageIcon = null;
			
			if(this.jInternalFrameDetalleFormDetalleConsignacion==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			
			this.jInternalFrameDetalleFormDetalleConsignacion.jLabelidDetalleConsignacion.setText(detalleconsignacion.getId().toString());
			this.jInternalFrameDetalleFormDetalleConsignacion.jTextFieldcantidadDetalleConsignacion.setText(detalleconsignacion.getcantidad().toString());
			this.jInternalFrameDetalleFormDetalleConsignacion.jTextFieldprecioDetalleConsignacion.setText(detalleconsignacion.getprecio().toString());
			this.jInternalFrameDetalleFormDetalleConsignacion.jTextFielddescuento_porcentajeDetalleConsignacion.setText(detalleconsignacion.getdescuento_porcentaje().toString());
			this.jInternalFrameDetalleFormDetalleConsignacion.jTextFielddescuento_valorDetalleConsignacion.setText(detalleconsignacion.getdescuento_valor().toString());
			this.jInternalFrameDetalleFormDetalleConsignacion.jTextFieldivaDetalleConsignacion.setText(detalleconsignacion.getiva().toString());
			this.jInternalFrameDetalleFormDetalleConsignacion.jTextFieldtotalDetalleConsignacion.setText(detalleconsignacion.gettotal().toString());
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,DetalleConsignacionConstantesFunciones.CLASSNAME);
		}
	}
		
	public void actualizarInformacion(String sTipo,DetalleConsignacion detalleconsignacionLocal) throws Exception {
		this.actualizarInformacion(sTipo,false,detalleconsignacionLocal);
	}	
	
	public void actualizarInformacion(String sTipo,Boolean conParametroObjeto,DetalleConsignacion detalleconsignacionLocal) throws Exception {
		
		if(!conParametroObjeto) {
			if(!this.getEsControlTabla()) {
				detalleconsignacionLocal=this.detalleconsignacion;
			} else {
				detalleconsignacionLocal=this.detalleconsignacionAnterior;
			}
		}
		
		if(this.permiteMantenimiento(detalleconsignacionLocal)) {
			if(sTipo.equals("EVENTO_CONTROL")) { // || sTipo.equals("EVENTO_NUEVO")
				if(!this.esControlTabla) {
					this.setVariablesFormularioToObjetoActualTodoDetalleConsignacion(detalleconsignacionLocal,true);
					
					if(detalleconsignacionSessionBean.getConGuardarRelaciones()) {
						this.actualizarRelaciones(detalleconsignacionLocal);
					}
				}
			
			} else if(sTipo.equals("INFO_PADRE")) {
				
				if(this.detalleconsignacionSessionBean.getEsGuardarRelacionado()) {
					this.actualizarRelacionFkPadreActual(detalleconsignacionLocal);
				}
			}
		}
	}
	
	public void setVariablesFormularioToObjetoActualTodoDetalleConsignacion(DetalleConsignacion detalleconsignacion,Boolean conColumnasBase) throws Exception { 
		this.setVariablesFormularioToObjetoActualDetalleConsignacion(detalleconsignacion,conColumnasBase);
		this.setVariablesFormularioToObjetoActualForeignKeysDetalleConsignacion(detalleconsignacion);
	}
	
	public void setVariablesFormularioToObjetoActualDetalleConsignacion(DetalleConsignacion detalleconsignacion,Boolean conColumnasBase) throws Exception { 
		this.setVariablesFormularioToObjetoActualDetalleConsignacion(detalleconsignacion,conColumnasBase,true);
	}
	
	public void setVariablesFormularioToObjetoActualDetalleConsignacion(DetalleConsignacion detalleconsignacion,Boolean conColumnasBase,Boolean conInicializarInvalidValues) throws Exception { 
		String sMensajeCampoActual="";
		Boolean estaValidado=true;
		try {
			
			if(this.jInternalFrameDetalleFormDetalleConsignacion==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			if(conInicializarInvalidValues) {
				this.inicializarInvalidValues();
			}
			
			

		try {
			if(this.jInternalFrameDetalleFormDetalleConsignacion.jLabelidDetalleConsignacion.getText()==null || this.jInternalFrameDetalleFormDetalleConsignacion.jLabelidDetalleConsignacion.getText()=="" || this.jInternalFrameDetalleFormDetalleConsignacion.jLabelidDetalleConsignacion.getText()=="Id") {
				this.jInternalFrameDetalleFormDetalleConsignacion.jLabelidDetalleConsignacion.setText("0");
			}

			if(conColumnasBase) {detalleconsignacion.setId(Long.parseLong(this.jInternalFrameDetalleFormDetalleConsignacion.jLabelidDetalleConsignacion.getText()));}
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+DetalleConsignacionConstantesFunciones.LABEL_ID+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleConsignacion.jLabelIdDetalleConsignacion,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			detalleconsignacion.setcantidad(Integer.parseInt(this.jInternalFrameDetalleFormDetalleConsignacion.jTextFieldcantidadDetalleConsignacion.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+DetalleConsignacionConstantesFunciones.LABEL_CANTIDAD+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleConsignacion.jLabelcantidadDetalleConsignacion,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			detalleconsignacion.setprecio(Double.parseDouble(this.jInternalFrameDetalleFormDetalleConsignacion.jTextFieldprecioDetalleConsignacion.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+DetalleConsignacionConstantesFunciones.LABEL_PRECIO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleConsignacion.jLabelprecioDetalleConsignacion,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			detalleconsignacion.setdescuento_porcentaje(Double.parseDouble(this.jInternalFrameDetalleFormDetalleConsignacion.jTextFielddescuento_porcentajeDetalleConsignacion.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+DetalleConsignacionConstantesFunciones.LABEL_DESCUENTOPORCENTAJE+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleConsignacion.jLabeldescuento_porcentajeDetalleConsignacion,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			detalleconsignacion.setdescuento_valor(Double.parseDouble(this.jInternalFrameDetalleFormDetalleConsignacion.jTextFielddescuento_valorDetalleConsignacion.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+DetalleConsignacionConstantesFunciones.LABEL_DESCUENTOVALOR+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleConsignacion.jLabeldescuento_valorDetalleConsignacion,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			detalleconsignacion.setiva(Double.parseDouble(this.jInternalFrameDetalleFormDetalleConsignacion.jTextFieldivaDetalleConsignacion.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+DetalleConsignacionConstantesFunciones.LABEL_IVA+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleConsignacion.jLabelivaDetalleConsignacion,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			detalleconsignacion.settotal(Double.parseDouble(this.jInternalFrameDetalleFormDetalleConsignacion.jTextFieldtotalDetalleConsignacion.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+DetalleConsignacionConstantesFunciones.LABEL_TOTAL+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleConsignacion.jLabeltotalDetalleConsignacion,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}
			
			if(!estaValidado) {
				throw new Exception(sMensajeCampoActual);
			}
		} catch(NumberFormatException e) {
			throw new Exception(sMensajeCampoActual);
			//FuncionesSwing.manageException(this, e,logger,MovimientoInventarioConstantesFunciones.CLASSNAME);
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,DetalleConsignacionConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setVariablesForeignKeyObjetoBeanDefectoActualToObjetoActualDetalleConsignacion(DetalleConsignacion detalleconsignacionBean,DetalleConsignacion detalleconsignacion,Boolean conDefault,Boolean conColumnasBase) throws Exception { 
		try {
			
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,DetalleConsignacionConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setCopiarVariablesObjetosDetalleConsignacion(DetalleConsignacion detalleconsignacionOrigen,DetalleConsignacion detalleconsignacion,Boolean conDefault,Boolean conColumnasBase) throws Exception { 
		try {
			
			if(conColumnasBase) {if(conDefault || (!conDefault && detalleconsignacionOrigen.getId()!=null && !detalleconsignacionOrigen.getId().equals(0L))) {detalleconsignacion.setId(detalleconsignacionOrigen.getId());}}
			if(conDefault || (!conDefault && detalleconsignacionOrigen.getcantidad()!=null && !detalleconsignacionOrigen.getcantidad().equals(0))) {detalleconsignacion.setcantidad(detalleconsignacionOrigen.getcantidad());}
			if(conDefault || (!conDefault && detalleconsignacionOrigen.getprecio()!=null && !detalleconsignacionOrigen.getprecio().equals(0.0))) {detalleconsignacion.setprecio(detalleconsignacionOrigen.getprecio());}
			if(conDefault || (!conDefault && detalleconsignacionOrigen.getdescuento_porcentaje()!=null && !detalleconsignacionOrigen.getdescuento_porcentaje().equals(0.0))) {detalleconsignacion.setdescuento_porcentaje(detalleconsignacionOrigen.getdescuento_porcentaje());}
			if(conDefault || (!conDefault && detalleconsignacionOrigen.getdescuento_valor()!=null && !detalleconsignacionOrigen.getdescuento_valor().equals(0.0))) {detalleconsignacion.setdescuento_valor(detalleconsignacionOrigen.getdescuento_valor());}
			if(conDefault || (!conDefault && detalleconsignacionOrigen.getiva()!=null && !detalleconsignacionOrigen.getiva().equals(0.0))) {detalleconsignacion.setiva(detalleconsignacionOrigen.getiva());}
			if(conDefault || (!conDefault && detalleconsignacionOrigen.gettotal()!=null && !detalleconsignacionOrigen.gettotal().equals(0.0))) {detalleconsignacion.settotal(detalleconsignacionOrigen.gettotal());}
			if(conDefault || (!conDefault && detalleconsignacionOrigen.getice()!=null && !detalleconsignacionOrigen.getice().equals(0.0))) {detalleconsignacion.setice(detalleconsignacionOrigen.getice());}
			if(conDefault || (!conDefault && detalleconsignacionOrigen.getcosto()!=null && !detalleconsignacionOrigen.getcosto().equals(0.0))) {detalleconsignacion.setcosto(detalleconsignacionOrigen.getcosto());}
			if(conDefault || (!conDefault && detalleconsignacionOrigen.getutilidad()!=null && !detalleconsignacionOrigen.getutilidad().equals(0.0))) {detalleconsignacion.setutilidad(detalleconsignacionOrigen.getutilidad());}
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,DetalleConsignacionConstantesFunciones.CLASSNAME);
		}
	}
	
	/*
	public void setVariablesObjetoBeanActualToFormularioDetalleConsignacion(DetalleConsignacion detalleconsignacion) throws Exception { 
		try {
			
			this.jInternalFrameDetalleFormDetalleConsignacion.jLabelidDetalleConsignacion.setText(detalleconsignacion.getId().toString());
			this.jInternalFrameDetalleFormDetalleConsignacion.jTextFieldcantidadDetalleConsignacion.setText(detalleconsignacion.getcantidad().toString());
			this.jInternalFrameDetalleFormDetalleConsignacion.jTextFieldprecioDetalleConsignacion.setText(detalleconsignacion.getprecio().toString());
			this.jInternalFrameDetalleFormDetalleConsignacion.jTextFielddescuento_porcentajeDetalleConsignacion.setText(detalleconsignacion.getdescuento_porcentaje().toString());
			this.jInternalFrameDetalleFormDetalleConsignacion.jTextFielddescuento_valorDetalleConsignacion.setText(detalleconsignacion.getdescuento_valor().toString());
			this.jInternalFrameDetalleFormDetalleConsignacion.jTextFieldivaDetalleConsignacion.setText(detalleconsignacion.getiva().toString());
			this.jInternalFrameDetalleFormDetalleConsignacion.jTextFieldtotalDetalleConsignacion.setText(detalleconsignacion.gettotal().toString());
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleConsignacionConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesObjetoBeanActualToFormularioDetalleConsignacion(DetalleConsignacionBean detalleconsignacionBean) throws Exception { 
		try {
			
			this.jInternalFrameDetalleFormDetalleConsignacion.jLabelidDetalleConsignacion.setText(detalleconsignacionBean.getId().toString());
			this.jInternalFrameDetalleFormDetalleConsignacion.jTextFieldcantidadDetalleConsignacion.setText(detalleconsignacionBean.getcantidad().toString());
			this.jInternalFrameDetalleFormDetalleConsignacion.jTextFieldprecioDetalleConsignacion.setText(detalleconsignacionBean.getprecio().toString());
			this.jInternalFrameDetalleFormDetalleConsignacion.jTextFielddescuento_porcentajeDetalleConsignacion.setText(detalleconsignacionBean.getdescuento_porcentaje().toString());
			this.jInternalFrameDetalleFormDetalleConsignacion.jTextFielddescuento_valorDetalleConsignacion.setText(detalleconsignacionBean.getdescuento_valor().toString());
			this.jInternalFrameDetalleFormDetalleConsignacion.jTextFieldivaDetalleConsignacion.setText(detalleconsignacionBean.getiva().toString());
			this.jInternalFrameDetalleFormDetalleConsignacion.jTextFieldtotalDetalleConsignacion.setText(detalleconsignacionBean.gettotal().toString());
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleConsignacionConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesObjetoReturnGeneralToBeanDetalleConsignacion(DetalleConsignacionParameterReturnGeneral detalleconsignacionReturnGeneral,DetalleConsignacionBean detalleconsignacionBean,Boolean conDefault) throws Exception { 
		try {
			DetalleConsignacion detalleconsignacionLocal=new DetalleConsignacion();
			
			detalleconsignacionLocal=detalleconsignacionReturnGeneral.getDetalleConsignacion();
			
			
			if(conColumnasBase) {if(conDefault || (!conDefault && detalleconsignacionLocal.getId()!=null && !detalleconsignacionLocal.getId().equals(0L))) {detalleconsignacionBean.setId(detalleconsignacionLocal.getId());}}
			if(conDefault || (!conDefault && detalleconsignacionLocal.getcantidad()!=null && !detalleconsignacionLocal.getcantidad().equals(0))) {detalleconsignacionBean.setcantidad(detalleconsignacionLocal.getcantidad());}
			if(conDefault || (!conDefault && detalleconsignacionLocal.getprecio()!=null && !detalleconsignacionLocal.getprecio().equals(0.0))) {detalleconsignacionBean.setprecio(detalleconsignacionLocal.getprecio());}
			if(conDefault || (!conDefault && detalleconsignacionLocal.getdescuento_porcentaje()!=null && !detalleconsignacionLocal.getdescuento_porcentaje().equals(0.0))) {detalleconsignacionBean.setdescuento_porcentaje(detalleconsignacionLocal.getdescuento_porcentaje());}
			if(conDefault || (!conDefault && detalleconsignacionLocal.getdescuento_valor()!=null && !detalleconsignacionLocal.getdescuento_valor().equals(0.0))) {detalleconsignacionBean.setdescuento_valor(detalleconsignacionLocal.getdescuento_valor());}
			if(conDefault || (!conDefault && detalleconsignacionLocal.getiva()!=null && !detalleconsignacionLocal.getiva().equals(0.0))) {detalleconsignacionBean.setiva(detalleconsignacionLocal.getiva());}
			if(conDefault || (!conDefault && detalleconsignacionLocal.gettotal()!=null && !detalleconsignacionLocal.gettotal().equals(0.0))) {detalleconsignacionBean.settotal(detalleconsignacionLocal.gettotal());}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleConsignacionConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	@SuppressWarnings("rawtypes")
	public static void setActualComboBoxDetalleConsignacionGenerico(Long idDetalleConsignacionSeleccionado,JComboBox jComboBoxDetalleConsignacion,List<DetalleConsignacion> detalleconsignacionsLocal)throws Exception {
		try {
			DetalleConsignacion  detalleconsignacionTemp=null;

			for(DetalleConsignacion detalleconsignacionAux:detalleconsignacionsLocal) {
				if(detalleconsignacionAux.getId()!=null && detalleconsignacionAux.getId().equals(idDetalleConsignacionSeleccionado)) {
					detalleconsignacionTemp=detalleconsignacionAux;
					break;
				}
			}

			jComboBoxDetalleConsignacion.setSelectedItem(detalleconsignacionTemp);

		} catch(Exception e) {
			throw e;
		}
	}
	
	@SuppressWarnings("rawtypes")
	public static void setHotKeysComboBoxDetalleConsignacionGenerico(JComboBox jComboBoxDetalleConsignacion,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda)throws Exception {
		try {
			//GLOBAL(id_empresa,id_sucursal,id_ejercicio)
			//BASICO(normal)
			//CON_BUSQUEDA(Permite buscar Fk)
			
			String sKeyStrokeName="";
			KeyStroke keyStrokeControl=null;
			
			if(!sTipoBusqueda.equals("GLOBAL")) {
				
				//BUSCAR
				sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_BUSCAR");
				keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_BUSCAR");
				
				jComboBoxDetalleConsignacion.getInputMap().put(keyStrokeControl, sKeyStrokeName);
				jComboBoxDetalleConsignacion.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction+"Busqueda"));
				//BUSCAR
				
				
				//ACTUALIZAR
				sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_ACTUALIZAR");
				keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_ACTUALIZAR");
				
				jComboBoxDetalleConsignacion.getInputMap().put(keyStrokeControl, sKeyStrokeName);
				jComboBoxDetalleConsignacion.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction+"Update"));
				//ACTUALIZAR
				
				if(sTipoBusqueda.contains("CON_EVENT_CHANGE")) {
					if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
						jComboBoxDetalleConsignacion.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
						jComboBoxDetalleConsignacion.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));						
					}
					
					/*
					if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
						jComboBoxDetalleConsignacion.addItemListener(new ComboBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
					} else {
						jComboBoxDetalleConsignacion.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
					}
					*/
				}								
				
				//CON_BUSQUEDA								
				if(sTipoBusqueda.contains("CON_BUSQUEDA")) {
					sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_BUSQUEDA");
					keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_BUSQUEDA");
							
					jComboBoxDetalleConsignacion.getInputMap().put(keyStrokeControl, sKeyStrokeName);
					jComboBoxDetalleConsignacion.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction));
				}
				//CON_BUSQUEDA
				
				
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	@SuppressWarnings("rawtypes")
	public void setHotKeysComboBoxGenerico(JComboBox jComboBox,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		if(sTipoBusqueda.contains("CON_EVENT_CHANGE")) {
			if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
				jComboBox.addItemListener(new ComboBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
				jComboBox.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
			} else {
				jComboBox.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
				jComboBox.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
			}
		}
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJTextFieldGenerico(JTextField jTextField,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jTextField.addFocusListener(new TextFieldFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		jTextField.addActionListener(new TextFieldActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJTextAreaGenerico(JTextArea jTextArea,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jTextArea.addFocusListener(new TextAreaFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//NO EXISTE
		//jTextArea.addActionListener(new TextAreaActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJLabelGenerico(JLabel jLabel,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jLabel.addFocusListener(new LabelFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//NO EXISTE
		//jLabel.addActionListener(new LabelActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJCheckBoxGenerico(JCheckBox jCheckBox,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jCheckBox.addFocusListener(new CheckBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//SI SE DEFINE AL CAMBIAR VALOR, ESTE NUEVO VALOR NO SE ENVIA AL EVENTO
		//jCheckBox.addItemListener(new CheckBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJDateChooserGenerico(JDateChooser jDateChooser,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		FuncionesSwing.addDateListener(jDateChooser, jInternalFrameBase, sNombreHotKeyAbstractAction);
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJButtonGenerico(JButton jButton,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jButton.addActionListener(new ButtonActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	public void jButtonRelacionActionPerformed(String sTipo,ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado) {
		//ABRIR RELACIONES
		try {
			
		} catch (Exception e) {
			FuncionesSwing.manageException2(this, e,logger,DetalleConsignacionConstantesFunciones.CLASSNAME);
		}
	}
	
	public String getDescripcionFk(String sTipo,JTable table,Object value,int intSelectedRow) throws Exception {
		//DESCRIPCIONES FK		
		String sDescripcion="";
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			detalleconsignacion=(DetalleConsignacion) detalleconsignacionLogic.getDetalleConsignacions().toArray()[table.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE) {
			detalleconsignacion =(DetalleConsignacion) detalleconsignacions.toArray()[table.convertRowIndexToModel(intSelectedRow)];
		}
					
		
		if(sTipo.equals("Empresa")) {
			//sDescripcion=this.getActualEmpresaForeignKeyDescripcion((Long)value);
			if(!detalleconsignacion.getIsNew() && !detalleconsignacion.getIsChanged() && !detalleconsignacion.getIsDeleted()) {
				sDescripcion=detalleconsignacion.getempresa_descripcion();
			} else {
				//sDescripcion=this.getActualEmpresaForeignKeyDescripcion((Long)value);
				sDescripcion=detalleconsignacion.getempresa_descripcion();
			}
		}

		if(sTipo.equals("Sucursal")) {
			//sDescripcion=this.getActualSucursalForeignKeyDescripcion((Long)value);
			if(!detalleconsignacion.getIsNew() && !detalleconsignacion.getIsChanged() && !detalleconsignacion.getIsDeleted()) {
				sDescripcion=detalleconsignacion.getsucursal_descripcion();
			} else {
				//sDescripcion=this.getActualSucursalForeignKeyDescripcion((Long)value);
				sDescripcion=detalleconsignacion.getsucursal_descripcion();
			}
		}

		if(sTipo.equals("Ejercicio")) {
			//sDescripcion=this.getActualEjercicioForeignKeyDescripcion((Long)value);
			if(!detalleconsignacion.getIsNew() && !detalleconsignacion.getIsChanged() && !detalleconsignacion.getIsDeleted()) {
				sDescripcion=detalleconsignacion.getejercicio_descripcion();
			} else {
				//sDescripcion=this.getActualEjercicioForeignKeyDescripcion((Long)value);
				sDescripcion=detalleconsignacion.getejercicio_descripcion();
			}
		}

		if(sTipo.equals("Periodo")) {
			//sDescripcion=this.getActualPeriodoForeignKeyDescripcion((Long)value);
			if(!detalleconsignacion.getIsNew() && !detalleconsignacion.getIsChanged() && !detalleconsignacion.getIsDeleted()) {
				sDescripcion=detalleconsignacion.getperiodo_descripcion();
			} else {
				//sDescripcion=this.getActualPeriodoForeignKeyDescripcion((Long)value);
				sDescripcion=detalleconsignacion.getperiodo_descripcion();
			}
		}

		if(sTipo.equals("Anio")) {
			//sDescripcion=this.getActualAnioForeignKeyDescripcion((Long)value);
			if(!detalleconsignacion.getIsNew() && !detalleconsignacion.getIsChanged() && !detalleconsignacion.getIsDeleted()) {
				sDescripcion=detalleconsignacion.getanio_descripcion();
			} else {
				//sDescripcion=this.getActualAnioForeignKeyDescripcion((Long)value);
				sDescripcion=detalleconsignacion.getanio_descripcion();
			}
		}

		if(sTipo.equals("Mes")) {
			//sDescripcion=this.getActualMesForeignKeyDescripcion((Long)value);
			if(!detalleconsignacion.getIsNew() && !detalleconsignacion.getIsChanged() && !detalleconsignacion.getIsDeleted()) {
				sDescripcion=detalleconsignacion.getmes_descripcion();
			} else {
				//sDescripcion=this.getActualMesForeignKeyDescripcion((Long)value);
				sDescripcion=detalleconsignacion.getmes_descripcion();
			}
		}

		if(sTipo.equals("Consignacion")) {
			//sDescripcion=this.getActualConsignacionForeignKeyDescripcion((Long)value);
			if(!detalleconsignacion.getIsNew() && !detalleconsignacion.getIsChanged() && !detalleconsignacion.getIsDeleted()) {
				sDescripcion=detalleconsignacion.getconsignacion_descripcion();
			} else {
				//sDescripcion=this.getActualConsignacionForeignKeyDescripcion((Long)value);
				sDescripcion=detalleconsignacion.getconsignacion_descripcion();
			}
		}

		if(sTipo.equals("Producto")) {
			//sDescripcion=this.getActualProductoForeignKeyDescripcion((Long)value);
			if(!detalleconsignacion.getIsNew() && !detalleconsignacion.getIsChanged() && !detalleconsignacion.getIsDeleted()) {
				sDescripcion=detalleconsignacion.getproducto_descripcion();
			} else {
				//ES DEPENDIENTE, SE FORZA DESDE DESCRIPCION
				sDescripcion=detalleconsignacion.getproducto_descripcion();
			}
		}

		if(sTipo.equals("Bodega")) {
			//sDescripcion=this.getActualBodegaForeignKeyDescripcion((Long)value);
			if(!detalleconsignacion.getIsNew() && !detalleconsignacion.getIsChanged() && !detalleconsignacion.getIsDeleted()) {
				sDescripcion=detalleconsignacion.getbodega_descripcion();
			} else {
				//sDescripcion=this.getActualBodegaForeignKeyDescripcion((Long)value);
				sDescripcion=detalleconsignacion.getbodega_descripcion();
			}
		}

		if(sTipo.equals("Unidad")) {
			//sDescripcion=this.getActualUnidadForeignKeyDescripcion((Long)value);
			if(!detalleconsignacion.getIsNew() && !detalleconsignacion.getIsChanged() && !detalleconsignacion.getIsDeleted()) {
				sDescripcion=detalleconsignacion.getunidad_descripcion();
			} else {
				//ES DEPENDIENTE, SE FORZA DESDE DESCRIPCION
				sDescripcion=detalleconsignacion.getunidad_descripcion();
			}
		}

		if(sTipo.equals("EstadoDetallePedido")) {
			//sDescripcion=this.getActualEstadoDetallePedidoForeignKeyDescripcion((Long)value);
			if(!detalleconsignacion.getIsNew() && !detalleconsignacion.getIsChanged() && !detalleconsignacion.getIsDeleted()) {
				sDescripcion=detalleconsignacion.getestadodetallepedido_descripcion();
			} else {
				//sDescripcion=this.getActualEstadoDetallePedidoForeignKeyDescripcion((Long)value);
				sDescripcion=detalleconsignacion.getestadodetallepedido_descripcion();
			}
		}

		
		return sDescripcion;
	}
	
	public Color getColorFk(String sTipo,JTable table,Object value,int intSelectedRow) throws Exception {
		//DESCRIPCIONES FK		
		Color color=Color.WHITE;
		
		DetalleConsignacion detalleconsignacionRow=new DetalleConsignacion();
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			detalleconsignacionRow=(DetalleConsignacion) detalleconsignacionLogic.getDetalleConsignacions().toArray()[table.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE) {
			detalleconsignacionRow=(DetalleConsignacion) detalleconsignacions.toArray()[table.convertRowIndexToModel(intSelectedRow)];
		}
					
		
		
		return color;
	}
	
	
	
	
	
	
	
	public void refrescarBindingTabla(Boolean blnSoloTabla) {
	}
	
	public void inicializarActualizarBindingBotonesManualDetalleConsignacion(Boolean esSetControles) {						
		if(esSetControles) {
			this.jButtonNuevoDetalleConsignacion.setVisible((this.isVisibilidadCeldaNuevoDetalleConsignacion && this.isPermisoNuevoDetalleConsignacion));			
			this.jButtonDuplicarDetalleConsignacion.setVisible((this.isVisibilidadCeldaDuplicarDetalleConsignacion && this.isPermisoDuplicarDetalleConsignacion));			
			this.jButtonCopiarDetalleConsignacion.setVisible((this.isVisibilidadCeldaCopiarDetalleConsignacion && this.isPermisoCopiarDetalleConsignacion));
			this.jButtonVerFormDetalleConsignacion.setVisible((this.isVisibilidadCeldaVerFormDetalleConsignacion && this.isPermisoVerFormDetalleConsignacion));
			
			this.jButtonAbrirOrderByDetalleConsignacion.setVisible((this.isVisibilidadCeldaOrdenDetalleConsignacion && this.isPermisoOrdenDetalleConsignacion));			
			
			this.jButtonNuevoRelacionesDetalleConsignacion.setVisible((this.isVisibilidadCeldaNuevoRelacionesDetalleConsignacion && this.isPermisoNuevoDetalleConsignacion));			
			this.jButtonNuevoGuardarCambiosDetalleConsignacion.setVisible((this.isVisibilidadCeldaNuevoDetalleConsignacion && this.isPermisoNuevoDetalleConsignacion && this.isPermisoGuardarCambiosDetalleConsignacion));
			
			if(this.jInternalFrameDetalleFormDetalleConsignacion!=null) {
			this.jInternalFrameDetalleFormDetalleConsignacion.jButtonModificarDetalleConsignacion.setVisible((this.isVisibilidadCeldaModificarDetalleConsignacion && this.isPermisoActualizarDetalleConsignacion));	
			this.jInternalFrameDetalleFormDetalleConsignacion.jButtonActualizarDetalleConsignacion.setVisible((this.isVisibilidadCeldaActualizarDetalleConsignacion && this.isPermisoActualizarDetalleConsignacion));	
			this.jInternalFrameDetalleFormDetalleConsignacion.jButtonEliminarDetalleConsignacion.setVisible((this.isVisibilidadCeldaEliminarDetalleConsignacion && this.isPermisoEliminarDetalleConsignacion));
			this.jInternalFrameDetalleFormDetalleConsignacion.jButtonCancelarDetalleConsignacion.setVisible(this.isVisibilidadCeldaCancelarDetalleConsignacion);							
			this.jInternalFrameDetalleFormDetalleConsignacion.jButtonGuardarCambiosDetalleConsignacion.setVisible((this.isVisibilidadCeldaGuardarDetalleConsignacion && this.isPermisoGuardarCambiosDetalleConsignacion));			
			
			}
						
			this.jButtonGuardarCambiosTablaDetalleConsignacion.setVisible((this.isVisibilidadCeldaGuardarCambiosDetalleConsignacion && this.isPermisoGuardarCambiosDetalleConsignacion));							
			
			//TOOLBAR
			
			this.jButtonNuevoToolBarDetalleConsignacion.setVisible((this.isVisibilidadCeldaNuevoDetalleConsignacion && this.isPermisoNuevoDetalleConsignacion));						
			this.jButtonDuplicarToolBarDetalleConsignacion.setVisible((this.isVisibilidadCeldaDuplicarDetalleConsignacion && this.isPermisoDuplicarDetalleConsignacion));						
			this.jButtonCopiarToolBarDetalleConsignacion.setVisible((this.isVisibilidadCeldaCopiarDetalleConsignacion && this.isPermisoCopiarDetalleConsignacion));			
			this.jButtonVerFormToolBarDetalleConsignacion.setVisible((this.isVisibilidadCeldaVerFormDetalleConsignacion && this.isPermisoVerFormDetalleConsignacion));			
			this.jButtonAbrirOrderByToolBarDetalleConsignacion.setVisible((this.isVisibilidadCeldaOrdenDetalleConsignacion && this.isPermisoOrdenDetalleConsignacion));
			this.jButtonNuevoRelacionesToolBarDetalleConsignacion.setVisible((this.isVisibilidadCeldaNuevoRelacionesDetalleConsignacion && this.isPermisoNuevoDetalleConsignacion));			
			this.jButtonNuevoGuardarCambiosToolBarDetalleConsignacion.setVisible((this.isVisibilidadCeldaNuevoDetalleConsignacion && this.isPermisoNuevoDetalleConsignacion && this.isPermisoGuardarCambiosDetalleConsignacion));			
			
			if(this.jInternalFrameDetalleFormDetalleConsignacion!=null) {
			this.jInternalFrameDetalleFormDetalleConsignacion.jButtonModificarToolBarDetalleConsignacion.setVisible((this.isVisibilidadCeldaModificarDetalleConsignacion && this.isPermisoActualizarDetalleConsignacion));	
			this.jInternalFrameDetalleFormDetalleConsignacion.jButtonActualizarToolBarDetalleConsignacion.setVisible((this.isVisibilidadCeldaActualizarDetalleConsignacion  && this.isPermisoActualizarDetalleConsignacion));	
			this.jInternalFrameDetalleFormDetalleConsignacion.jButtonEliminarToolBarDetalleConsignacion.setVisible((this.isVisibilidadCeldaEliminarDetalleConsignacion && this.isPermisoEliminarDetalleConsignacion));
			this.jInternalFrameDetalleFormDetalleConsignacion.jButtonCancelarToolBarDetalleConsignacion.setVisible(this.isVisibilidadCeldaCancelarDetalleConsignacion);				
			this.jInternalFrameDetalleFormDetalleConsignacion.jButtonGuardarCambiosToolBarDetalleConsignacion.setVisible((this.isVisibilidadCeldaGuardarDetalleConsignacion && this.isPermisoGuardarCambiosDetalleConsignacion));									
			}
			
			this.jButtonGuardarCambiosTablaToolBarDetalleConsignacion.setVisible((this.isVisibilidadCeldaGuardarCambiosDetalleConsignacion && this.isPermisoGuardarCambiosDetalleConsignacion));									
			
			//TOOLBAR
			
			//MENUS
			
			this.jMenuItemNuevoDetalleConsignacion.setVisible((this.isVisibilidadCeldaNuevoDetalleConsignacion && this.isPermisoNuevoDetalleConsignacion));			
			this.jMenuItemDuplicarDetalleConsignacion.setVisible((this.isVisibilidadCeldaDuplicarDetalleConsignacion && this.isPermisoDuplicarDetalleConsignacion));			
			this.jMenuItemCopiarDetalleConsignacion.setVisible((this.isVisibilidadCeldaCopiarDetalleConsignacion && this.isPermisoCopiarDetalleConsignacion));			
			this.jMenuItemVerFormDetalleConsignacion.setVisible((this.isVisibilidadCeldaVerFormDetalleConsignacion && this.isPermisoVerFormDetalleConsignacion));			
			this.jMenuItemAbrirOrderByDetalleConsignacion.setVisible((this.isVisibilidadCeldaOrdenDetalleConsignacion && this.isPermisoOrdenDetalleConsignacion));			
			//this.jMenuItemMostrarOcultarDetalleConsignacion.setVisible((this.isVisibilidadCeldaOrdenDetalleConsignacion && this.isPermisoOrdenDetalleConsignacion));
			this.jMenuItemDetalleAbrirOrderByDetalleConsignacion.setVisible((this.isVisibilidadCeldaOrdenDetalleConsignacion && this.isPermisoOrdenDetalleConsignacion));			
			//this.jMenuItemDetalleMostrarOcultarDetalleConsignacion.setVisible((this.isVisibilidadCeldaOrdenDetalleConsignacion && this.isPermisoOrdenDetalleConsignacion));			
			this.jMenuItemNuevoRelacionesDetalleConsignacion.setVisible((this.isVisibilidadCeldaNuevoRelacionesDetalleConsignacion && this.isPermisoNuevoDetalleConsignacion));			
			this.jMenuItemNuevoGuardarCambiosDetalleConsignacion.setVisible((this.isVisibilidadCeldaNuevoDetalleConsignacion && this.isPermisoNuevoDetalleConsignacion && this.isPermisoGuardarCambiosDetalleConsignacion));									
			
			if(this.jInternalFrameDetalleFormDetalleConsignacion!=null) {
			this.jInternalFrameDetalleFormDetalleConsignacion.jMenuItemModificarDetalleConsignacion.setVisible((this.isVisibilidadCeldaModificarDetalleConsignacion && this.isPermisoActualizarDetalleConsignacion));	
			this.jInternalFrameDetalleFormDetalleConsignacion.jMenuItemActualizarDetalleConsignacion.setVisible((this.isVisibilidadCeldaActualizarDetalleConsignacion && this.isPermisoActualizarDetalleConsignacion));	
			this.jInternalFrameDetalleFormDetalleConsignacion.jMenuItemEliminarDetalleConsignacion.setVisible((this.isVisibilidadCeldaEliminarDetalleConsignacion && this.isPermisoEliminarDetalleConsignacion));
			this.jInternalFrameDetalleFormDetalleConsignacion.jMenuItemCancelarDetalleConsignacion.setVisible(this.isVisibilidadCeldaCancelarDetalleConsignacion);				
			}
			
			this.jMenuItemGuardarCambiosDetalleConsignacion.setVisible((this.isVisibilidadCeldaGuardarDetalleConsignacion && this.isPermisoGuardarCambiosDetalleConsignacion));						
			this.jMenuItemGuardarCambiosTablaDetalleConsignacion.setVisible((this.isVisibilidadCeldaGuardarCambiosDetalleConsignacion && this.isPermisoGuardarCambiosDetalleConsignacion));						
			
			//MENUS
			
		} else {
			this.isVisibilidadCeldaNuevoDetalleConsignacion=this.jButtonNuevoDetalleConsignacion.isVisible();
			this.isVisibilidadCeldaDuplicarDetalleConsignacion=this.jButtonDuplicarDetalleConsignacion.isVisible();
			this.isVisibilidadCeldaCopiarDetalleConsignacion=this.jButtonCopiarDetalleConsignacion.isVisible();
			this.isVisibilidadCeldaVerFormDetalleConsignacion=this.jButtonVerFormDetalleConsignacion.isVisible();
			
			this.isVisibilidadCeldaOrdenDetalleConsignacion=this.jButtonAbrirOrderByDetalleConsignacion.isVisible();			
			
			this.isVisibilidadCeldaNuevoRelacionesDetalleConsignacion=this.jButtonNuevoRelacionesDetalleConsignacion.isVisible();
			this.isVisibilidadCeldaModificarDetalleConsignacion=this.jButtonModificarDetalleConsignacion.isVisible();
			
			if(this.jInternalFrameDetalleFormDetalleConsignacion!=null) {
			this.isVisibilidadCeldaActualizarDetalleConsignacion=this.jInternalFrameDetalleFormDetalleConsignacion.jButtonActualizarDetalleConsignacion.isVisible();
			this.isVisibilidadCeldaEliminarDetalleConsignacion=this.jInternalFrameDetalleFormDetalleConsignacion.jButtonEliminarDetalleConsignacion.isVisible();
			this.isVisibilidadCeldaCancelarDetalleConsignacion=this.jInternalFrameDetalleFormDetalleConsignacion.jButtonCancelarDetalleConsignacion.isVisible();
			this.isVisibilidadCeldaGuardarDetalleConsignacion=this.jInternalFrameDetalleFormDetalleConsignacion.jButtonGuardarCambiosDetalleConsignacion.isVisible();			
			}
			
			this.isVisibilidadCeldaGuardarCambiosDetalleConsignacion=this.jButtonGuardarCambiosTablaDetalleConsignacion.isVisible();
			
			//TOOLBAR
			
			this.isVisibilidadCeldaNuevoDetalleConsignacion=this.jButtonNuevoToolBarDetalleConsignacion.isVisible();
			this.isVisibilidadCeldaNuevoRelacionesDetalleConsignacion=this.jButtonNuevoRelacionesToolBarDetalleConsignacion.isVisible();
			
			if(this.jInternalFrameDetalleFormDetalleConsignacion!=null) {
			this.isVisibilidadCeldaModificarDetalleConsignacion=this.jInternalFrameDetalleFormDetalleConsignacion.jButtonModificarToolBarDetalleConsignacion.isVisible();
			this.isVisibilidadCeldaActualizarDetalleConsignacion=this.jInternalFrameDetalleFormDetalleConsignacion.jButtonActualizarToolBarDetalleConsignacion.isVisible();
			this.isVisibilidadCeldaEliminarDetalleConsignacion=this.jInternalFrameDetalleFormDetalleConsignacion.jButtonEliminarToolBarDetalleConsignacion.isVisible();
			this.isVisibilidadCeldaCancelarDetalleConsignacion=this.jInternalFrameDetalleFormDetalleConsignacion.jButtonCancelarToolBarDetalleConsignacion.isVisible();
			}
			
			this.isVisibilidadCeldaGuardarDetalleConsignacion=this.jButtonGuardarCambiosToolBarDetalleConsignacion.isVisible();
			this.isVisibilidadCeldaGuardarCambiosDetalleConsignacion=this.jButtonGuardarCambiosTablaToolBarDetalleConsignacion.isVisible();						
			
			//TOOLBAR
			
			//MENUS
			
			this.isVisibilidadCeldaNuevoDetalleConsignacion=this.jMenuItemNuevoDetalleConsignacion.isVisible();
			this.isVisibilidadCeldaNuevoRelacionesDetalleConsignacion=this.jMenuItemNuevoRelacionesDetalleConsignacion.isVisible();
			
			if(this.jInternalFrameDetalleFormDetalleConsignacion!=null) {
			this.isVisibilidadCeldaModificarDetalleConsignacion=this.jInternalFrameDetalleFormDetalleConsignacion.jMenuItemModificarDetalleConsignacion.isVisible();
			this.isVisibilidadCeldaActualizarDetalleConsignacion=this.jInternalFrameDetalleFormDetalleConsignacion.jMenuItemActualizarDetalleConsignacion.isVisible();
			this.isVisibilidadCeldaEliminarDetalleConsignacion=this.jInternalFrameDetalleFormDetalleConsignacion.jMenuItemEliminarDetalleConsignacion.isVisible();
			this.isVisibilidadCeldaCancelarDetalleConsignacion=this.jInternalFrameDetalleFormDetalleConsignacion.jMenuItemCancelarDetalleConsignacion.isVisible();
			}
			
			this.isVisibilidadCeldaGuardarDetalleConsignacion=this.jMenuItemGuardarCambiosDetalleConsignacion.isVisible();
			this.isVisibilidadCeldaGuardarCambiosDetalleConsignacion=this.jMenuItemGuardarCambiosTablaDetalleConsignacion.isVisible();						
			
			//MENUS
		}
	}
	
	public void inicializarActualizarBindingBotonesDetalleConsignacion(Boolean esInicializar) {
		if(DetalleConsignacionJInternalFrame.ISBINDING_MANUAL) {			
			if(this.detalleconsignacionSessionBean.getConGuardarRelaciones()) {
				//if(this.detalleconsignacionSessionBean.getEsGuardarRelacionado()) {
				
				this.actualizarEstadoCeldasBotonesConGuardarRelacionesDetalleConsignacion();
			}
			
			this.inicializarActualizarBindingBotonesManualDetalleConsignacion(true);
			
		} else {	
		}
	}		
	
	public void inicializarActualizarBindingBotonesPermisosManualDetalleConsignacion() {
		this.jButtonNuevoDetalleConsignacion.setVisible(this.isPermisoNuevoDetalleConsignacion);			
		this.jButtonDuplicarDetalleConsignacion.setVisible(this.isPermisoDuplicarDetalleConsignacion);			
		this.jButtonCopiarDetalleConsignacion.setVisible(this.isPermisoCopiarDetalleConsignacion);			
		this.jButtonVerFormDetalleConsignacion.setVisible(this.isPermisoVerFormDetalleConsignacion);			
		
		this.jButtonAbrirOrderByDetalleConsignacion.setVisible(this.isPermisoOrdenDetalleConsignacion);					
		
		this.jButtonNuevoRelacionesDetalleConsignacion.setVisible(this.isPermisoNuevoDetalleConsignacion);			
		
		if(this.jInternalFrameDetalleFormDetalleConsignacion!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetalleConsignacion.jButtonModificarDetalleConsignacion.setVisible(this.isPermisoActualizarDetalleConsignacion);	
			this.jInternalFrameDetalleFormDetalleConsignacion.jButtonActualizarDetalleConsignacion.setVisible(this.isPermisoActualizarDetalleConsignacion);	
			this.jInternalFrameDetalleFormDetalleConsignacion.jButtonEliminarDetalleConsignacion.setVisible(this.isPermisoEliminarDetalleConsignacion);
			this.jInternalFrameDetalleFormDetalleConsignacion.jButtonCancelarDetalleConsignacion.setVisible(this.isVisibilidadCeldaCancelarDetalleConsignacion);						
			this.jInternalFrameDetalleFormDetalleConsignacion.jButtonGuardarCambiosDetalleConsignacion.setVisible(this.isPermisoGuardarCambiosDetalleConsignacion);							
		}
		
		this.jButtonGuardarCambiosTablaDetalleConsignacion.setVisible(this.isPermisoActualizarDetalleConsignacion);
	}
	
	public void inicializarActualizarBindingBotonesPermisosManualFormDetalleDetalleConsignacion() {
		this.jInternalFrameDetalleFormDetalleConsignacion.jButtonModificarDetalleConsignacion.setVisible(this.isPermisoActualizarDetalleConsignacion);	
		this.jInternalFrameDetalleFormDetalleConsignacion.jButtonActualizarDetalleConsignacion.setVisible(this.isPermisoActualizarDetalleConsignacion);	
		this.jInternalFrameDetalleFormDetalleConsignacion.jButtonEliminarDetalleConsignacion.setVisible(this.isPermisoEliminarDetalleConsignacion);
		this.jInternalFrameDetalleFormDetalleConsignacion.jButtonCancelarDetalleConsignacion.setVisible(this.isVisibilidadCeldaCancelarDetalleConsignacion);							
		this.jInternalFrameDetalleFormDetalleConsignacion.jButtonGuardarCambiosDetalleConsignacion.setVisible((this.isVisibilidadCeldaGuardarDetalleConsignacion && this.isPermisoGuardarCambiosDetalleConsignacion));			
	}
	
	public void inicializarActualizarBindingBotonesPermisosDetalleConsignacion() {
		if(DetalleConsignacionJInternalFrame.ISBINDING_MANUAL) {
			this.inicializarActualizarBindingBotonesPermisosManualDetalleConsignacion();
		} else {
		}
	}
	
	
	public void refrescarBindingBotonesDetalleConsignacion() {
	}
	
	public void jTableDatosDetalleConsignacionListSelectionListener(javax.swing.event.ListSelectionEvent evt) throws Exception { 
		try {
			this.seleccionarDetalleConsignacion(null,evt,-1);
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleConsignacionConstantesFunciones.CLASSNAME);
		}
	}
	
	
	public void jButtonidDetalleConsignacionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleconsignacionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleConsignacion.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleConsignacion(this.getdetalleconsignacion(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleConsignacion(this.detalleconsignacion);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detalleconsignacion =(DetalleConsignacion) this.detalleconsignacionLogic.getDetalleConsignacions().toArray()[this.jTableDatosDetalleConsignacion.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detalleconsignacion =(DetalleConsignacion) this.detalleconsignacions.toArray()[this.jTableDatosDetalleConsignacion.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detalleconsignacion==null) {
						this.detalleconsignacion = new DetalleConsignacion();
					}

					this.setVariablesFormularioToObjetoActualDetalleConsignacion(this.detalleconsignacion,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleConsignacion(this.detalleconsignacion);
				}

				if(this.detalleconsignacion.getId()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id = "+this.detalleconsignacion.getId().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleConsignacion(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleconsignacionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleconsignacionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleConsignacionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleconsignacionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_empresaDetalleConsignacionUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleconsignacionLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoempresa=true;

			idTienePermisoempresa=this.tienePermisosUsuarioEnPaginaWebDetalleConsignacion(EmpresaConstantesFunciones.CLASSNAME);

			if(idTienePermisoempresa) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleConsignacion.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosDetalleConsignacion.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosDetalleConsignacion.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleconsignacion =(DetalleConsignacion) this.detalleconsignacionLogic.getDetalleConsignacions().toArray()[this.jTableDatosDetalleConsignacion.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detalleconsignacion =(DetalleConsignacion) this.detalleconsignacions.toArray()[this.jTableDatosDetalleConsignacion.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualDetalleConsignacion(this.getdetalleconsignacion(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysDetalleConsignacion(this.detalleconsignacion);

				this.empresaBeanSwingJInternalFrame=new EmpresaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.empresaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.empresaBeanSwingJInternalFrame.getEmpresaLogic().setConnexion(this.detalleconsignacionLogic.getConnexion());

				if(this.detalleconsignacion.getid_empresa()!=null) {
					this.empresaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.empresaBeanSwingJInternalFrame.setIdActual(this.detalleconsignacion.getid_empresa());
					this.empresaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.empresaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.empresaBeanSwingJInternalFrame.inicializarActualizarBindingTablaEmpresa();
				}

				JInternalFrameBase jinternalFrame =this.empresaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderDetalleConsignacion=(TitledBorder)this.jScrollPanelDatosDetalleConsignacion.getBorder();
				TitledBorder titledBorderempresa=(TitledBorder)this.empresaBeanSwingJInternalFrame.jScrollPanelDatosEmpresa.getBorder();

				titledBorderempresa.setTitle(titledBorderDetalleConsignacion.getTitle() + " -> Empresa");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleconsignacionLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleconsignacionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleConsignacionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleconsignacionLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_empresaDetalleConsignacionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleconsignacionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleConsignacion.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleConsignacion(this.getdetalleconsignacion(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleConsignacion(this.detalleconsignacion);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detalleconsignacion =(DetalleConsignacion) this.detalleconsignacionLogic.getDetalleConsignacions().toArray()[this.jTableDatosDetalleConsignacion.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detalleconsignacion =(DetalleConsignacion) this.detalleconsignacions.toArray()[this.jTableDatosDetalleConsignacion.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detalleconsignacion==null) {
						this.detalleconsignacion = new DetalleConsignacion();
					}

					this.setVariablesFormularioToObjetoActualDetalleConsignacion(this.detalleconsignacion,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleConsignacion(this.detalleconsignacion);
				}

				if(this.detalleconsignacion.getid_empresa()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_empresa = "+this.detalleconsignacion.getid_empresa().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleConsignacion(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleconsignacionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleconsignacionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleConsignacionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleconsignacionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_sucursalDetalleConsignacionUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleconsignacionLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisosucursal=true;

			idTienePermisosucursal=this.tienePermisosUsuarioEnPaginaWebDetalleConsignacion(SucursalConstantesFunciones.CLASSNAME);

			if(idTienePermisosucursal) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleConsignacion.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosDetalleConsignacion.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosDetalleConsignacion.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleconsignacion =(DetalleConsignacion) this.detalleconsignacionLogic.getDetalleConsignacions().toArray()[this.jTableDatosDetalleConsignacion.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detalleconsignacion =(DetalleConsignacion) this.detalleconsignacions.toArray()[this.jTableDatosDetalleConsignacion.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualDetalleConsignacion(this.getdetalleconsignacion(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysDetalleConsignacion(this.detalleconsignacion);

				this.sucursalBeanSwingJInternalFrame=new SucursalBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.sucursalBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.sucursalBeanSwingJInternalFrame.getSucursalLogic().setConnexion(this.detalleconsignacionLogic.getConnexion());

				if(this.detalleconsignacion.getid_sucursal()!=null) {
					this.sucursalBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.sucursalBeanSwingJInternalFrame.setIdActual(this.detalleconsignacion.getid_sucursal());
					this.sucursalBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.sucursalBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.sucursalBeanSwingJInternalFrame.inicializarActualizarBindingTablaSucursal();
				}

				JInternalFrameBase jinternalFrame =this.sucursalBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderDetalleConsignacion=(TitledBorder)this.jScrollPanelDatosDetalleConsignacion.getBorder();
				TitledBorder titledBordersucursal=(TitledBorder)this.sucursalBeanSwingJInternalFrame.jScrollPanelDatosSucursal.getBorder();

				titledBordersucursal.setTitle(titledBorderDetalleConsignacion.getTitle() + " -> Sucursal");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleconsignacionLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleconsignacionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleConsignacionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleconsignacionLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_sucursalDetalleConsignacionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleconsignacionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleConsignacion.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleConsignacion(this.getdetalleconsignacion(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleConsignacion(this.detalleconsignacion);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detalleconsignacion =(DetalleConsignacion) this.detalleconsignacionLogic.getDetalleConsignacions().toArray()[this.jTableDatosDetalleConsignacion.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detalleconsignacion =(DetalleConsignacion) this.detalleconsignacions.toArray()[this.jTableDatosDetalleConsignacion.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detalleconsignacion==null) {
						this.detalleconsignacion = new DetalleConsignacion();
					}

					this.setVariablesFormularioToObjetoActualDetalleConsignacion(this.detalleconsignacion,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleConsignacion(this.detalleconsignacion);
				}

				if(this.detalleconsignacion.getid_sucursal()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_sucursal = "+this.detalleconsignacion.getid_sucursal().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleConsignacion(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleconsignacionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleconsignacionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleConsignacionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleconsignacionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_ejercicioDetalleConsignacionUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleconsignacionLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoejercicio=true;

			idTienePermisoejercicio=this.tienePermisosUsuarioEnPaginaWebDetalleConsignacion(EjercicioConstantesFunciones.CLASSNAME);

			if(idTienePermisoejercicio) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleConsignacion.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosDetalleConsignacion.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosDetalleConsignacion.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleconsignacion =(DetalleConsignacion) this.detalleconsignacionLogic.getDetalleConsignacions().toArray()[this.jTableDatosDetalleConsignacion.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detalleconsignacion =(DetalleConsignacion) this.detalleconsignacions.toArray()[this.jTableDatosDetalleConsignacion.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualDetalleConsignacion(this.getdetalleconsignacion(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysDetalleConsignacion(this.detalleconsignacion);

				this.ejercicioBeanSwingJInternalFrame=new EjercicioBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.ejercicioBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.ejercicioBeanSwingJInternalFrame.getEjercicioLogic().setConnexion(this.detalleconsignacionLogic.getConnexion());

				if(this.detalleconsignacion.getid_ejercicio()!=null) {
					this.ejercicioBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.ejercicioBeanSwingJInternalFrame.setIdActual(this.detalleconsignacion.getid_ejercicio());
					this.ejercicioBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.ejercicioBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.ejercicioBeanSwingJInternalFrame.inicializarActualizarBindingTablaEjercicio();
				}

				JInternalFrameBase jinternalFrame =this.ejercicioBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderDetalleConsignacion=(TitledBorder)this.jScrollPanelDatosDetalleConsignacion.getBorder();
				TitledBorder titledBorderejercicio=(TitledBorder)this.ejercicioBeanSwingJInternalFrame.jScrollPanelDatosEjercicio.getBorder();

				titledBorderejercicio.setTitle(titledBorderDetalleConsignacion.getTitle() + " -> Ejercicio");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleconsignacionLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleconsignacionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleConsignacionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleconsignacionLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_ejercicioDetalleConsignacionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleconsignacionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleConsignacion.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleConsignacion(this.getdetalleconsignacion(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleConsignacion(this.detalleconsignacion);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detalleconsignacion =(DetalleConsignacion) this.detalleconsignacionLogic.getDetalleConsignacions().toArray()[this.jTableDatosDetalleConsignacion.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detalleconsignacion =(DetalleConsignacion) this.detalleconsignacions.toArray()[this.jTableDatosDetalleConsignacion.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detalleconsignacion==null) {
						this.detalleconsignacion = new DetalleConsignacion();
					}

					this.setVariablesFormularioToObjetoActualDetalleConsignacion(this.detalleconsignacion,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleConsignacion(this.detalleconsignacion);
				}

				if(this.detalleconsignacion.getid_ejercicio()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_ejercicio = "+this.detalleconsignacion.getid_ejercicio().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleConsignacion(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleconsignacionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleconsignacionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleConsignacionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleconsignacionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_periodoDetalleConsignacionUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleconsignacionLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoperiodo=true;

			idTienePermisoperiodo=this.tienePermisosUsuarioEnPaginaWebDetalleConsignacion(PeriodoConstantesFunciones.CLASSNAME);

			if(idTienePermisoperiodo) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleConsignacion.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosDetalleConsignacion.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosDetalleConsignacion.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleconsignacion =(DetalleConsignacion) this.detalleconsignacionLogic.getDetalleConsignacions().toArray()[this.jTableDatosDetalleConsignacion.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detalleconsignacion =(DetalleConsignacion) this.detalleconsignacions.toArray()[this.jTableDatosDetalleConsignacion.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualDetalleConsignacion(this.getdetalleconsignacion(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysDetalleConsignacion(this.detalleconsignacion);

				this.periodoBeanSwingJInternalFrame=new PeriodoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.periodoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.periodoBeanSwingJInternalFrame.getPeriodoLogic().setConnexion(this.detalleconsignacionLogic.getConnexion());

				if(this.detalleconsignacion.getid_periodo()!=null) {
					this.periodoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.periodoBeanSwingJInternalFrame.setIdActual(this.detalleconsignacion.getid_periodo());
					this.periodoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.periodoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.periodoBeanSwingJInternalFrame.inicializarActualizarBindingTablaPeriodo();
				}

				JInternalFrameBase jinternalFrame =this.periodoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderDetalleConsignacion=(TitledBorder)this.jScrollPanelDatosDetalleConsignacion.getBorder();
				TitledBorder titledBorderperiodo=(TitledBorder)this.periodoBeanSwingJInternalFrame.jScrollPanelDatosPeriodo.getBorder();

				titledBorderperiodo.setTitle(titledBorderDetalleConsignacion.getTitle() + " -> Periodo");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleconsignacionLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleconsignacionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleConsignacionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleconsignacionLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_periodoDetalleConsignacionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleconsignacionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleConsignacion.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleConsignacion(this.getdetalleconsignacion(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleConsignacion(this.detalleconsignacion);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detalleconsignacion =(DetalleConsignacion) this.detalleconsignacionLogic.getDetalleConsignacions().toArray()[this.jTableDatosDetalleConsignacion.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detalleconsignacion =(DetalleConsignacion) this.detalleconsignacions.toArray()[this.jTableDatosDetalleConsignacion.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detalleconsignacion==null) {
						this.detalleconsignacion = new DetalleConsignacion();
					}

					this.setVariablesFormularioToObjetoActualDetalleConsignacion(this.detalleconsignacion,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleConsignacion(this.detalleconsignacion);
				}

				if(this.detalleconsignacion.getid_periodo()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_periodo = "+this.detalleconsignacion.getid_periodo().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleConsignacion(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleconsignacionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleconsignacionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleConsignacionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleconsignacionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_anioDetalleConsignacionUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleconsignacionLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoanio=true;

			idTienePermisoanio=this.tienePermisosUsuarioEnPaginaWebDetalleConsignacion(AnioConstantesFunciones.CLASSNAME);

			if(idTienePermisoanio) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleConsignacion.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosDetalleConsignacion.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosDetalleConsignacion.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleconsignacion =(DetalleConsignacion) this.detalleconsignacionLogic.getDetalleConsignacions().toArray()[this.jTableDatosDetalleConsignacion.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detalleconsignacion =(DetalleConsignacion) this.detalleconsignacions.toArray()[this.jTableDatosDetalleConsignacion.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualDetalleConsignacion(this.getdetalleconsignacion(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysDetalleConsignacion(this.detalleconsignacion);

				this.anioBeanSwingJInternalFrame=new AnioBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.anioBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.anioBeanSwingJInternalFrame.getAnioLogic().setConnexion(this.detalleconsignacionLogic.getConnexion());

				if(this.detalleconsignacion.getid_anio()!=null) {
					this.anioBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.anioBeanSwingJInternalFrame.setIdActual(this.detalleconsignacion.getid_anio());
					this.anioBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.anioBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.anioBeanSwingJInternalFrame.inicializarActualizarBindingTablaAnio();
				}

				JInternalFrameBase jinternalFrame =this.anioBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderDetalleConsignacion=(TitledBorder)this.jScrollPanelDatosDetalleConsignacion.getBorder();
				TitledBorder titledBorderanio=(TitledBorder)this.anioBeanSwingJInternalFrame.jScrollPanelDatosAnio.getBorder();

				titledBorderanio.setTitle(titledBorderDetalleConsignacion.getTitle() + " -> Anio");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleconsignacionLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleconsignacionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleConsignacionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleconsignacionLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_anioDetalleConsignacionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleconsignacionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleConsignacion.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleConsignacion(this.getdetalleconsignacion(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleConsignacion(this.detalleconsignacion);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detalleconsignacion =(DetalleConsignacion) this.detalleconsignacionLogic.getDetalleConsignacions().toArray()[this.jTableDatosDetalleConsignacion.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detalleconsignacion =(DetalleConsignacion) this.detalleconsignacions.toArray()[this.jTableDatosDetalleConsignacion.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detalleconsignacion==null) {
						this.detalleconsignacion = new DetalleConsignacion();
					}

					this.setVariablesFormularioToObjetoActualDetalleConsignacion(this.detalleconsignacion,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleConsignacion(this.detalleconsignacion);
				}

				if(this.detalleconsignacion.getid_anio()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_anio = "+this.detalleconsignacion.getid_anio().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleConsignacion(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleconsignacionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleconsignacionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleConsignacionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleconsignacionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_mesDetalleConsignacionUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleconsignacionLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisomes=true;

			idTienePermisomes=this.tienePermisosUsuarioEnPaginaWebDetalleConsignacion(MesConstantesFunciones.CLASSNAME);

			if(idTienePermisomes) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleConsignacion.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosDetalleConsignacion.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosDetalleConsignacion.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleconsignacion =(DetalleConsignacion) this.detalleconsignacionLogic.getDetalleConsignacions().toArray()[this.jTableDatosDetalleConsignacion.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detalleconsignacion =(DetalleConsignacion) this.detalleconsignacions.toArray()[this.jTableDatosDetalleConsignacion.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualDetalleConsignacion(this.getdetalleconsignacion(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysDetalleConsignacion(this.detalleconsignacion);

				this.mesBeanSwingJInternalFrame=new MesBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.mesBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.mesBeanSwingJInternalFrame.getMesLogic().setConnexion(this.detalleconsignacionLogic.getConnexion());

				if(this.detalleconsignacion.getid_mes()!=null) {
					this.mesBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.mesBeanSwingJInternalFrame.setIdActual(this.detalleconsignacion.getid_mes());
					this.mesBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.mesBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.mesBeanSwingJInternalFrame.inicializarActualizarBindingTablaMes();
				}

				JInternalFrameBase jinternalFrame =this.mesBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderDetalleConsignacion=(TitledBorder)this.jScrollPanelDatosDetalleConsignacion.getBorder();
				TitledBorder titledBordermes=(TitledBorder)this.mesBeanSwingJInternalFrame.jScrollPanelDatosMes.getBorder();

				titledBordermes.setTitle(titledBorderDetalleConsignacion.getTitle() + " -> Mes");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleconsignacionLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleconsignacionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleConsignacionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleconsignacionLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_mesDetalleConsignacionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleconsignacionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleConsignacion.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleConsignacion(this.getdetalleconsignacion(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleConsignacion(this.detalleconsignacion);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detalleconsignacion =(DetalleConsignacion) this.detalleconsignacionLogic.getDetalleConsignacions().toArray()[this.jTableDatosDetalleConsignacion.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detalleconsignacion =(DetalleConsignacion) this.detalleconsignacions.toArray()[this.jTableDatosDetalleConsignacion.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detalleconsignacion==null) {
						this.detalleconsignacion = new DetalleConsignacion();
					}

					this.setVariablesFormularioToObjetoActualDetalleConsignacion(this.detalleconsignacion,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleConsignacion(this.detalleconsignacion);
				}

				if(this.detalleconsignacion.getid_mes()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_mes = "+this.detalleconsignacion.getid_mes().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleConsignacion(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleconsignacionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleconsignacionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleConsignacionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleconsignacionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_consignacionDetalleConsignacionUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleconsignacionLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoconsignacion=true;

			idTienePermisoconsignacion=this.tienePermisosUsuarioEnPaginaWebDetalleConsignacion(ConsignacionConstantesFunciones.CLASSNAME);

			if(idTienePermisoconsignacion) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleConsignacion.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosDetalleConsignacion.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosDetalleConsignacion.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleconsignacion =(DetalleConsignacion) this.detalleconsignacionLogic.getDetalleConsignacions().toArray()[this.jTableDatosDetalleConsignacion.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detalleconsignacion =(DetalleConsignacion) this.detalleconsignacions.toArray()[this.jTableDatosDetalleConsignacion.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualDetalleConsignacion(this.getdetalleconsignacion(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysDetalleConsignacion(this.detalleconsignacion);

				this.consignacionBeanSwingJInternalFrame=new ConsignacionBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.consignacionBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.consignacionBeanSwingJInternalFrame.getConsignacionLogic().setConnexion(this.detalleconsignacionLogic.getConnexion());

				if(this.detalleconsignacion.getid_consignacion()!=null) {
					this.consignacionBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.consignacionBeanSwingJInternalFrame.setIdActual(this.detalleconsignacion.getid_consignacion());
					this.consignacionBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.consignacionBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.consignacionBeanSwingJInternalFrame.inicializarActualizarBindingTablaConsignacion();
				}

				JInternalFrameBase jinternalFrame =this.consignacionBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderDetalleConsignacion=(TitledBorder)this.jScrollPanelDatosDetalleConsignacion.getBorder();
				TitledBorder titledBorderconsignacion=(TitledBorder)this.consignacionBeanSwingJInternalFrame.jScrollPanelDatosConsignacion.getBorder();

				titledBorderconsignacion.setTitle(titledBorderDetalleConsignacion.getTitle() + " -> Consignacion");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleconsignacionLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleconsignacionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleConsignacionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleconsignacionLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_consignacionDetalleConsignacionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleconsignacionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleConsignacion.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleConsignacion(this.getdetalleconsignacion(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleConsignacion(this.detalleconsignacion);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detalleconsignacion =(DetalleConsignacion) this.detalleconsignacionLogic.getDetalleConsignacions().toArray()[this.jTableDatosDetalleConsignacion.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detalleconsignacion =(DetalleConsignacion) this.detalleconsignacions.toArray()[this.jTableDatosDetalleConsignacion.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detalleconsignacion==null) {
						this.detalleconsignacion = new DetalleConsignacion();
					}

					this.setVariablesFormularioToObjetoActualDetalleConsignacion(this.detalleconsignacion,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleConsignacion(this.detalleconsignacion);
				}

				if(this.detalleconsignacion.getid_consignacion()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_consignacion = "+this.detalleconsignacion.getid_consignacion().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleConsignacion(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleconsignacionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleconsignacionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleConsignacionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleconsignacionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_productoDetalleConsignacionActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {
			this.productoBeanSwingJInternalFrame=new ProductoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
			this.productoBeanSwingJInternalFrame.setJInternalFrameParent(this);
			this.productoBeanSwingJInternalFrame.sTipoBusqueda="Producto";

			if(!this.sFinalQueryGeneral_producto.equals("")) {
				this.productoBeanSwingJInternalFrame.setsFinalQueryGeneral(this.sFinalQueryGeneral_producto);
				this.productoBeanSwingJInternalFrame.sAccionBusqueda="Query";


				this.productoBeanSwingJInternalFrame.procesarBusqueda(this.productoBeanSwingJInternalFrame.sAccionBusqueda);
				this.productoBeanSwingJInternalFrame.inicializarActualizarBindingProducto(false);
			}

			if(!this.sFinalQueryComboProducto.equals("") && false) {
			}


			JInternalFrameBase jinternalFrame =this.productoBeanSwingJInternalFrame;
			jinternalFrame.setAutoscrolls(true);
			//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
			jinternalFrame.setVisible(true); 


			TitledBorder titledBorderDetalleConsignacion=null;
			TitledBorder titledBorderproducto=null;

			if(!this.jScrollPanelDatosDetalleConsignacion.getBorder().getClass().equals(EmptyBorder.class)) {
				titledBorderDetalleConsignacion=(TitledBorder)this.jScrollPanelDatosDetalleConsignacion.getBorder();
				titledBorderproducto=(TitledBorder)this.productoBeanSwingJInternalFrame.jScrollPanelDatosProducto.getBorder();

				titledBorderproducto.setTitle(titledBorderDetalleConsignacion.getTitle() + " -> Producto");
			}

			if(!Constantes.CON_VARIAS_VENTANAS) {
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
			}

			this.jDesktopPane.add(jinternalFrame);

			jinternalFrame.setSelected(true);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleConsignacionConstantesFunciones.CLASSNAME);
		}
	}

	public void jButtonid_productoDetalleConsignacionUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleconsignacionLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoproducto=true;

			idTienePermisoproducto=this.tienePermisosUsuarioEnPaginaWebDetalleConsignacion(ProductoConstantesFunciones.CLASSNAME);

			if(idTienePermisoproducto) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleConsignacion.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosDetalleConsignacion.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosDetalleConsignacion.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleconsignacion =(DetalleConsignacion) this.detalleconsignacionLogic.getDetalleConsignacions().toArray()[this.jTableDatosDetalleConsignacion.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detalleconsignacion =(DetalleConsignacion) this.detalleconsignacions.toArray()[this.jTableDatosDetalleConsignacion.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualDetalleConsignacion(this.getdetalleconsignacion(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysDetalleConsignacion(this.detalleconsignacion);

				this.productoBeanSwingJInternalFrame=new ProductoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.productoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.productoBeanSwingJInternalFrame.getProductoLogic().setConnexion(this.detalleconsignacionLogic.getConnexion());

				if(this.detalleconsignacion.getid_producto()!=null) {
					this.productoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.productoBeanSwingJInternalFrame.setIdActual(this.detalleconsignacion.getid_producto());
					this.productoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.productoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.productoBeanSwingJInternalFrame.inicializarActualizarBindingTablaProducto();
				}

				JInternalFrameBase jinternalFrame =this.productoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderDetalleConsignacion=(TitledBorder)this.jScrollPanelDatosDetalleConsignacion.getBorder();
				TitledBorder titledBorderproducto=(TitledBorder)this.productoBeanSwingJInternalFrame.jScrollPanelDatosProducto.getBorder();

				titledBorderproducto.setTitle(titledBorderDetalleConsignacion.getTitle() + " -> Producto");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleconsignacionLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleconsignacionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleConsignacionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleconsignacionLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_productoDetalleConsignacionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleconsignacionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleConsignacion.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleConsignacion(this.getdetalleconsignacion(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleConsignacion(this.detalleconsignacion);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detalleconsignacion =(DetalleConsignacion) this.detalleconsignacionLogic.getDetalleConsignacions().toArray()[this.jTableDatosDetalleConsignacion.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detalleconsignacion =(DetalleConsignacion) this.detalleconsignacions.toArray()[this.jTableDatosDetalleConsignacion.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detalleconsignacion==null) {
						this.detalleconsignacion = new DetalleConsignacion();
					}

					this.setVariablesFormularioToObjetoActualDetalleConsignacion(this.detalleconsignacion,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleConsignacion(this.detalleconsignacion);
				}

				if(this.detalleconsignacion.getid_producto()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_producto = "+this.detalleconsignacion.getid_producto().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleConsignacion(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleconsignacionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleconsignacionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleConsignacionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleconsignacionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_bodegaDetalleConsignacionUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleconsignacionLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisobodega=true;

			idTienePermisobodega=this.tienePermisosUsuarioEnPaginaWebDetalleConsignacion(BodegaConstantesFunciones.CLASSNAME);

			if(idTienePermisobodega) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleConsignacion.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosDetalleConsignacion.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosDetalleConsignacion.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleconsignacion =(DetalleConsignacion) this.detalleconsignacionLogic.getDetalleConsignacions().toArray()[this.jTableDatosDetalleConsignacion.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detalleconsignacion =(DetalleConsignacion) this.detalleconsignacions.toArray()[this.jTableDatosDetalleConsignacion.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualDetalleConsignacion(this.getdetalleconsignacion(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysDetalleConsignacion(this.detalleconsignacion);

				this.bodegaBeanSwingJInternalFrame=new BodegaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.bodegaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.bodegaBeanSwingJInternalFrame.getBodegaLogic().setConnexion(this.detalleconsignacionLogic.getConnexion());

				if(this.detalleconsignacion.getid_bodega()!=null) {
					this.bodegaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.bodegaBeanSwingJInternalFrame.setIdActual(this.detalleconsignacion.getid_bodega());
					this.bodegaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.bodegaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.bodegaBeanSwingJInternalFrame.inicializarActualizarBindingTablaBodega();
				}

				JInternalFrameBase jinternalFrame =this.bodegaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderDetalleConsignacion=(TitledBorder)this.jScrollPanelDatosDetalleConsignacion.getBorder();
				TitledBorder titledBorderbodega=(TitledBorder)this.bodegaBeanSwingJInternalFrame.jScrollPanelDatosBodega.getBorder();

				titledBorderbodega.setTitle(titledBorderDetalleConsignacion.getTitle() + " -> Bodega");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleconsignacionLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleconsignacionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleConsignacionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleconsignacionLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_bodegaDetalleConsignacionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleconsignacionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleConsignacion.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleConsignacion(this.getdetalleconsignacion(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleConsignacion(this.detalleconsignacion);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detalleconsignacion =(DetalleConsignacion) this.detalleconsignacionLogic.getDetalleConsignacions().toArray()[this.jTableDatosDetalleConsignacion.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detalleconsignacion =(DetalleConsignacion) this.detalleconsignacions.toArray()[this.jTableDatosDetalleConsignacion.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detalleconsignacion==null) {
						this.detalleconsignacion = new DetalleConsignacion();
					}

					this.setVariablesFormularioToObjetoActualDetalleConsignacion(this.detalleconsignacion,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleConsignacion(this.detalleconsignacion);
				}

				if(this.detalleconsignacion.getid_bodega()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_bodega = "+this.detalleconsignacion.getid_bodega().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleConsignacion(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleconsignacionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleconsignacionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleConsignacionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleconsignacionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_unidadDetalleConsignacionUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleconsignacionLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisounidad=true;

			idTienePermisounidad=this.tienePermisosUsuarioEnPaginaWebDetalleConsignacion(UnidadConstantesFunciones.CLASSNAME);

			if(idTienePermisounidad) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleConsignacion.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosDetalleConsignacion.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosDetalleConsignacion.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleconsignacion =(DetalleConsignacion) this.detalleconsignacionLogic.getDetalleConsignacions().toArray()[this.jTableDatosDetalleConsignacion.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detalleconsignacion =(DetalleConsignacion) this.detalleconsignacions.toArray()[this.jTableDatosDetalleConsignacion.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualDetalleConsignacion(this.getdetalleconsignacion(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysDetalleConsignacion(this.detalleconsignacion);

				this.unidadBeanSwingJInternalFrame=new UnidadBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.unidadBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.unidadBeanSwingJInternalFrame.getUnidadLogic().setConnexion(this.detalleconsignacionLogic.getConnexion());

				if(this.detalleconsignacion.getid_unidad()!=null) {
					this.unidadBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.unidadBeanSwingJInternalFrame.setIdActual(this.detalleconsignacion.getid_unidad());
					this.unidadBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.unidadBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.unidadBeanSwingJInternalFrame.inicializarActualizarBindingTablaUnidad();
				}

				JInternalFrameBase jinternalFrame =this.unidadBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderDetalleConsignacion=(TitledBorder)this.jScrollPanelDatosDetalleConsignacion.getBorder();
				TitledBorder titledBorderunidad=(TitledBorder)this.unidadBeanSwingJInternalFrame.jScrollPanelDatosUnidad.getBorder();

				titledBorderunidad.setTitle(titledBorderDetalleConsignacion.getTitle() + " -> Unidad");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleconsignacionLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleconsignacionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleConsignacionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleconsignacionLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_unidadDetalleConsignacionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleconsignacionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleConsignacion.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleConsignacion(this.getdetalleconsignacion(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleConsignacion(this.detalleconsignacion);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detalleconsignacion =(DetalleConsignacion) this.detalleconsignacionLogic.getDetalleConsignacions().toArray()[this.jTableDatosDetalleConsignacion.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detalleconsignacion =(DetalleConsignacion) this.detalleconsignacions.toArray()[this.jTableDatosDetalleConsignacion.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detalleconsignacion==null) {
						this.detalleconsignacion = new DetalleConsignacion();
					}

					this.setVariablesFormularioToObjetoActualDetalleConsignacion(this.detalleconsignacion,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleConsignacion(this.detalleconsignacion);
				}

				if(this.detalleconsignacion.getid_unidad()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_unidad = "+this.detalleconsignacion.getid_unidad().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleConsignacion(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleconsignacionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleconsignacionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleConsignacionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleconsignacionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_estado_detalle_pedidoDetalleConsignacionUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleconsignacionLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoestadodetallepedido=true;

			idTienePermisoestadodetallepedido=this.tienePermisosUsuarioEnPaginaWebDetalleConsignacion(EstadoDetallePedidoConstantesFunciones.CLASSNAME);

			if(idTienePermisoestadodetallepedido) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleConsignacion.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosDetalleConsignacion.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosDetalleConsignacion.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleconsignacion =(DetalleConsignacion) this.detalleconsignacionLogic.getDetalleConsignacions().toArray()[this.jTableDatosDetalleConsignacion.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detalleconsignacion =(DetalleConsignacion) this.detalleconsignacions.toArray()[this.jTableDatosDetalleConsignacion.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualDetalleConsignacion(this.getdetalleconsignacion(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysDetalleConsignacion(this.detalleconsignacion);

				this.estadodetallepedidoBeanSwingJInternalFrame=new EstadoDetallePedidoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.estadodetallepedidoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.estadodetallepedidoBeanSwingJInternalFrame.getEstadoDetallePedidoLogic().setConnexion(this.detalleconsignacionLogic.getConnexion());

				if(this.detalleconsignacion.getid_estado_detalle_pedido()!=null) {
					this.estadodetallepedidoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.estadodetallepedidoBeanSwingJInternalFrame.setIdActual(this.detalleconsignacion.getid_estado_detalle_pedido());
					this.estadodetallepedidoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.estadodetallepedidoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.estadodetallepedidoBeanSwingJInternalFrame.inicializarActualizarBindingTablaEstadoDetallePedido();
				}

				JInternalFrameBase jinternalFrame =this.estadodetallepedidoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderDetalleConsignacion=(TitledBorder)this.jScrollPanelDatosDetalleConsignacion.getBorder();
				TitledBorder titledBorderestadodetallepedido=(TitledBorder)this.estadodetallepedidoBeanSwingJInternalFrame.jScrollPanelDatosEstadoDetallePedido.getBorder();

				titledBorderestadodetallepedido.setTitle(titledBorderDetalleConsignacion.getTitle() + " -> Estado Detalle Pedido");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleconsignacionLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleconsignacionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleConsignacionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleconsignacionLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_estado_detalle_pedidoDetalleConsignacionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleconsignacionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleConsignacion.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleConsignacion(this.getdetalleconsignacion(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleConsignacion(this.detalleconsignacion);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detalleconsignacion =(DetalleConsignacion) this.detalleconsignacionLogic.getDetalleConsignacions().toArray()[this.jTableDatosDetalleConsignacion.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detalleconsignacion =(DetalleConsignacion) this.detalleconsignacions.toArray()[this.jTableDatosDetalleConsignacion.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detalleconsignacion==null) {
						this.detalleconsignacion = new DetalleConsignacion();
					}

					this.setVariablesFormularioToObjetoActualDetalleConsignacion(this.detalleconsignacion,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleConsignacion(this.detalleconsignacion);
				}

				if(this.detalleconsignacion.getid_estado_detalle_pedido()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_estado_detalle_pedido = "+this.detalleconsignacion.getid_estado_detalle_pedido().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleConsignacion(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleconsignacionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleconsignacionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleConsignacionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleconsignacionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtoncantidadDetalleConsignacionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleconsignacionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleConsignacion.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleConsignacion(this.getdetalleconsignacion(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleConsignacion(this.detalleconsignacion);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detalleconsignacion =(DetalleConsignacion) this.detalleconsignacionLogic.getDetalleConsignacions().toArray()[this.jTableDatosDetalleConsignacion.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detalleconsignacion =(DetalleConsignacion) this.detalleconsignacions.toArray()[this.jTableDatosDetalleConsignacion.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detalleconsignacion==null) {
						this.detalleconsignacion = new DetalleConsignacion();
					}

					this.setVariablesFormularioToObjetoActualDetalleConsignacion(this.detalleconsignacion,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleConsignacion(this.detalleconsignacion);
				}

				if(this.detalleconsignacion.getcantidad()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where cantidad = "+this.detalleconsignacion.getcantidad().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleConsignacion(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleconsignacionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleconsignacionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleConsignacionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleconsignacionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonprecioDetalleConsignacionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleconsignacionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleConsignacion.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleConsignacion(this.getdetalleconsignacion(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleConsignacion(this.detalleconsignacion);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detalleconsignacion =(DetalleConsignacion) this.detalleconsignacionLogic.getDetalleConsignacions().toArray()[this.jTableDatosDetalleConsignacion.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detalleconsignacion =(DetalleConsignacion) this.detalleconsignacions.toArray()[this.jTableDatosDetalleConsignacion.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detalleconsignacion==null) {
						this.detalleconsignacion = new DetalleConsignacion();
					}

					this.setVariablesFormularioToObjetoActualDetalleConsignacion(this.detalleconsignacion,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleConsignacion(this.detalleconsignacion);
				}

				if(this.detalleconsignacion.getprecio()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where precio = "+this.detalleconsignacion.getprecio().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleConsignacion(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleconsignacionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleconsignacionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleConsignacionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleconsignacionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtondescuento_porcentajeDetalleConsignacionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleconsignacionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleConsignacion.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleConsignacion(this.getdetalleconsignacion(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleConsignacion(this.detalleconsignacion);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detalleconsignacion =(DetalleConsignacion) this.detalleconsignacionLogic.getDetalleConsignacions().toArray()[this.jTableDatosDetalleConsignacion.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detalleconsignacion =(DetalleConsignacion) this.detalleconsignacions.toArray()[this.jTableDatosDetalleConsignacion.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detalleconsignacion==null) {
						this.detalleconsignacion = new DetalleConsignacion();
					}

					this.setVariablesFormularioToObjetoActualDetalleConsignacion(this.detalleconsignacion,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleConsignacion(this.detalleconsignacion);
				}

				if(this.detalleconsignacion.getdescuento_porcentaje()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where descuento_porcentaje = "+this.detalleconsignacion.getdescuento_porcentaje().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleConsignacion(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleconsignacionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleconsignacionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleConsignacionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleconsignacionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtondescuento_valorDetalleConsignacionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleconsignacionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleConsignacion.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleConsignacion(this.getdetalleconsignacion(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleConsignacion(this.detalleconsignacion);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detalleconsignacion =(DetalleConsignacion) this.detalleconsignacionLogic.getDetalleConsignacions().toArray()[this.jTableDatosDetalleConsignacion.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detalleconsignacion =(DetalleConsignacion) this.detalleconsignacions.toArray()[this.jTableDatosDetalleConsignacion.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detalleconsignacion==null) {
						this.detalleconsignacion = new DetalleConsignacion();
					}

					this.setVariablesFormularioToObjetoActualDetalleConsignacion(this.detalleconsignacion,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleConsignacion(this.detalleconsignacion);
				}

				if(this.detalleconsignacion.getdescuento_valor()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where descuento_valor = "+this.detalleconsignacion.getdescuento_valor().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleConsignacion(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleconsignacionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleconsignacionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleConsignacionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleconsignacionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonivaDetalleConsignacionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleconsignacionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleConsignacion.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleConsignacion(this.getdetalleconsignacion(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleConsignacion(this.detalleconsignacion);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detalleconsignacion =(DetalleConsignacion) this.detalleconsignacionLogic.getDetalleConsignacions().toArray()[this.jTableDatosDetalleConsignacion.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detalleconsignacion =(DetalleConsignacion) this.detalleconsignacions.toArray()[this.jTableDatosDetalleConsignacion.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detalleconsignacion==null) {
						this.detalleconsignacion = new DetalleConsignacion();
					}

					this.setVariablesFormularioToObjetoActualDetalleConsignacion(this.detalleconsignacion,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleConsignacion(this.detalleconsignacion);
				}

				if(this.detalleconsignacion.getiva()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where iva = "+this.detalleconsignacion.getiva().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleConsignacion(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleconsignacionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleconsignacionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleConsignacionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleconsignacionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtontotalDetalleConsignacionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleconsignacionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleConsignacion.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleConsignacion(this.getdetalleconsignacion(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleConsignacion(this.detalleconsignacion);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detalleconsignacion =(DetalleConsignacion) this.detalleconsignacionLogic.getDetalleConsignacions().toArray()[this.jTableDatosDetalleConsignacion.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detalleconsignacion =(DetalleConsignacion) this.detalleconsignacions.toArray()[this.jTableDatosDetalleConsignacion.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detalleconsignacion==null) {
						this.detalleconsignacion = new DetalleConsignacion();
					}

					this.setVariablesFormularioToObjetoActualDetalleConsignacion(this.detalleconsignacion,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleConsignacion(this.detalleconsignacion);
				}

				if(this.detalleconsignacion.gettotal()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where total = "+this.detalleconsignacion.gettotal().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleConsignacion(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleconsignacionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleconsignacionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleConsignacionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleconsignacionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtoniceDetalleConsignacionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleconsignacionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleConsignacion.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleConsignacion(this.getdetalleconsignacion(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleConsignacion(this.detalleconsignacion);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detalleconsignacion =(DetalleConsignacion) this.detalleconsignacionLogic.getDetalleConsignacions().toArray()[this.jTableDatosDetalleConsignacion.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detalleconsignacion =(DetalleConsignacion) this.detalleconsignacions.toArray()[this.jTableDatosDetalleConsignacion.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detalleconsignacion==null) {
						this.detalleconsignacion = new DetalleConsignacion();
					}

					this.setVariablesFormularioToObjetoActualDetalleConsignacion(this.detalleconsignacion,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleConsignacion(this.detalleconsignacion);
				}

				if(this.detalleconsignacion.getice()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where ice = "+this.detalleconsignacion.getice().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleConsignacion(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleconsignacionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleconsignacionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleConsignacionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleconsignacionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtoncostoDetalleConsignacionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleconsignacionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleConsignacion.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleConsignacion(this.getdetalleconsignacion(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleConsignacion(this.detalleconsignacion);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detalleconsignacion =(DetalleConsignacion) this.detalleconsignacionLogic.getDetalleConsignacions().toArray()[this.jTableDatosDetalleConsignacion.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detalleconsignacion =(DetalleConsignacion) this.detalleconsignacions.toArray()[this.jTableDatosDetalleConsignacion.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detalleconsignacion==null) {
						this.detalleconsignacion = new DetalleConsignacion();
					}

					this.setVariablesFormularioToObjetoActualDetalleConsignacion(this.detalleconsignacion,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleConsignacion(this.detalleconsignacion);
				}

				if(this.detalleconsignacion.getcosto()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where costo = "+this.detalleconsignacion.getcosto().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleConsignacion(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleconsignacionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleconsignacionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleConsignacionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleconsignacionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonutilidadDetalleConsignacionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleconsignacionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleConsignacion.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleConsignacion(this.getdetalleconsignacion(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleConsignacion(this.detalleconsignacion);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detalleconsignacion =(DetalleConsignacion) this.detalleconsignacionLogic.getDetalleConsignacions().toArray()[this.jTableDatosDetalleConsignacion.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detalleconsignacion =(DetalleConsignacion) this.detalleconsignacions.toArray()[this.jTableDatosDetalleConsignacion.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detalleconsignacion==null) {
						this.detalleconsignacion = new DetalleConsignacion();
					}

					this.setVariablesFormularioToObjetoActualDetalleConsignacion(this.detalleconsignacion,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleConsignacion(this.detalleconsignacion);
				}

				if(this.detalleconsignacion.getutilidad()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where utilidad = "+this.detalleconsignacion.getutilidad().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleConsignacion(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleconsignacionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleconsignacionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleConsignacionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleconsignacionLogic.closeNewConnexionToDeep();
				}

			}
		}

	
	
	public void jButtonFK_IdAnioDetalleConsignacionActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleconsignacionLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingDetalleConsignacion(false,false);

			this.getDetalleConsignacionsFK_IdAnio();

			this.inicializarActualizarBindingDetalleConsignacion(false);

			//if(DetalleConsignacionBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingDetalleConsignacion(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleconsignacionLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleconsignacionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleConsignacionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleconsignacionLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdBodegaDetalleConsignacionActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleconsignacionLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingDetalleConsignacion(false,false);

			this.getDetalleConsignacionsFK_IdBodega();

			this.inicializarActualizarBindingDetalleConsignacion(false);

			//if(DetalleConsignacionBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingDetalleConsignacion(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleconsignacionLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleconsignacionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleConsignacionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleconsignacionLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdConsignacionDetalleConsignacionActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleconsignacionLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingDetalleConsignacion(false,false);

			this.getDetalleConsignacionsFK_IdConsignacion();

			this.inicializarActualizarBindingDetalleConsignacion(false);

			//if(DetalleConsignacionBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingDetalleConsignacion(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleconsignacionLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleconsignacionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleConsignacionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleconsignacionLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdEjercicioDetalleConsignacionActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleconsignacionLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingDetalleConsignacion(false,false);

			this.getDetalleConsignacionsFK_IdEjercicio();

			this.inicializarActualizarBindingDetalleConsignacion(false);

			//if(DetalleConsignacionBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingDetalleConsignacion(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleconsignacionLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleconsignacionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleConsignacionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleconsignacionLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdEmpresaDetalleConsignacionActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleconsignacionLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingDetalleConsignacion(false,false);

			this.getDetalleConsignacionsFK_IdEmpresa();

			this.inicializarActualizarBindingDetalleConsignacion(false);

			//if(DetalleConsignacionBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingDetalleConsignacion(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleconsignacionLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleconsignacionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleConsignacionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleconsignacionLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdEstadoDetallePedidoDetalleConsignacionActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleconsignacionLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingDetalleConsignacion(false,false);

			this.getDetalleConsignacionsFK_IdEstadoDetallePedido();

			this.inicializarActualizarBindingDetalleConsignacion(false);

			//if(DetalleConsignacionBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingDetalleConsignacion(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleconsignacionLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleconsignacionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleConsignacionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleconsignacionLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdMesDetalleConsignacionActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleconsignacionLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingDetalleConsignacion(false,false);

			this.getDetalleConsignacionsFK_IdMes();

			this.inicializarActualizarBindingDetalleConsignacion(false);

			//if(DetalleConsignacionBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingDetalleConsignacion(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleconsignacionLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleconsignacionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleConsignacionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleconsignacionLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdPeriodoDetalleConsignacionActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleconsignacionLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingDetalleConsignacion(false,false);

			this.getDetalleConsignacionsFK_IdPeriodo();

			this.inicializarActualizarBindingDetalleConsignacion(false);

			//if(DetalleConsignacionBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingDetalleConsignacion(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleconsignacionLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleconsignacionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleConsignacionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleconsignacionLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdProductoDetalleConsignacionActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleconsignacionLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingDetalleConsignacion(false,false);

			this.getDetalleConsignacionsFK_IdProducto();

			this.inicializarActualizarBindingDetalleConsignacion(false);

			//if(DetalleConsignacionBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingDetalleConsignacion(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleconsignacionLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleconsignacionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleConsignacionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleconsignacionLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdSucursalDetalleConsignacionActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleconsignacionLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingDetalleConsignacion(false,false);

			this.getDetalleConsignacionsFK_IdSucursal();

			this.inicializarActualizarBindingDetalleConsignacion(false);

			//if(DetalleConsignacionBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingDetalleConsignacion(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleconsignacionLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleconsignacionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleConsignacionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleconsignacionLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdUnidadDetalleConsignacionActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleconsignacionLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingDetalleConsignacion(false,false);

			this.getDetalleConsignacionsFK_IdUnidad();

			this.inicializarActualizarBindingDetalleConsignacion(false);

			//if(DetalleConsignacionBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingDetalleConsignacion(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleconsignacionLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleconsignacionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleConsignacionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleconsignacionLogic.closeNewConnexionToDeep();
			}
		}
	}

	
	public void closingInternalFrameDetalleConsignacion() {
		if(this.jInternalFrameDetalleFormDetalleConsignacion!=null) {
			
		
		
		}
		
		if(this.jInternalFrameDetalleFormDetalleConsignacion!=null) {
			this.jInternalFrameDetalleFormDetalleConsignacion.setVisible(false);	    			
			this.jInternalFrameDetalleFormDetalleConsignacion.dispose();
			this.jInternalFrameDetalleFormDetalleConsignacion=null;
		}
		
		
		if(this.jInternalFrameReporteDinamicoDetalleConsignacion!=null) {
			this.jInternalFrameReporteDinamicoDetalleConsignacion.setVisible(false);	    			
			this.jInternalFrameReporteDinamicoDetalleConsignacion.dispose();
			this.jInternalFrameReporteDinamicoDetalleConsignacion=null;
		}
		
		if(this.jInternalFrameImportacionDetalleConsignacion!=null) {
			this.jInternalFrameImportacionDetalleConsignacion.setVisible(false);	    			
			this.jInternalFrameImportacionDetalleConsignacion.dispose();
			this.jInternalFrameImportacionDetalleConsignacion=null;
		}		
		
		
		this.setVisible(false);
		this.dispose();
		//this=null;
	}
	
	
	
	public void jButtonActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {			
			this.startProcessDetalleConsignacion();
			
			DetalleConsignacionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.BUTTON,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.detalleconsignacion,new Object(),this.detalleconsignacionParameterGeneral,this.detalleconsignacionReturnGeneral);
			
			
			if(sTipo.equals("NuevoDetalleConsignacion")) {
				jButtonNuevoDetalleConsignacionActionPerformed(evt,false);
			} else if(sTipo.equals("DuplicarDetalleConsignacion")) {
				jButtonDuplicarDetalleConsignacionActionPerformed(evt,false);
			} else if(sTipo.equals("CopiarDetalleConsignacion")) {
				jButtonCopiarDetalleConsignacionActionPerformed(evt);
			} else if(sTipo.equals("VerFormDetalleConsignacion")) {
				jButtonVerFormDetalleConsignacionActionPerformed(evt);
			} else if(sTipo.equals("NuevoToolBarDetalleConsignacion")) {
				jButtonNuevoDetalleConsignacionActionPerformed(evt,false);
			} else if(sTipo.equals("DuplicarToolBarDetalleConsignacion")) {
				jButtonDuplicarDetalleConsignacionActionPerformed(evt,false);
			} else if(sTipo.equals("MenuItemNuevoDetalleConsignacion")) {
				jButtonNuevoDetalleConsignacionActionPerformed(evt,false);
			} else if(sTipo.equals("MenuItemDuplicarDetalleConsignacion")) {
				jButtonDuplicarDetalleConsignacionActionPerformed(evt,false);
			} else if(sTipo.equals("NuevoRelacionesDetalleConsignacion")) {
				jButtonNuevoDetalleConsignacionActionPerformed(evt,true);
			} else if(sTipo.equals("NuevoRelacionesToolBarDetalleConsignacion")) {
				jButtonNuevoDetalleConsignacionActionPerformed(evt,true);
			} else if(sTipo.equals("MenuItemNuevoRelacionesDetalleConsignacion")) {
				jButtonNuevoDetalleConsignacionActionPerformed(evt,true);
			} else if(sTipo.equals("ModificarDetalleConsignacion")) {
				jButtonModificarDetalleConsignacionActionPerformed(evt);
			} else if(sTipo.equals("ModificarToolBarDetalleConsignacion")) {
				jButtonModificarDetalleConsignacionActionPerformed(evt);
			} else if(sTipo.equals("MenuItemModificarDetalleConsignacion")) {
				jButtonModificarDetalleConsignacionActionPerformed(evt);
			} else if(sTipo.equals("ActualizarDetalleConsignacion")) {
				jButtonActualizarDetalleConsignacionActionPerformed(evt);
			} else if(sTipo.equals("ActualizarToolBarDetalleConsignacion")) {
				jButtonActualizarDetalleConsignacionActionPerformed(evt);
			} else if(sTipo.equals("MenuItemActualizarDetalleConsignacion")) {
				jButtonActualizarDetalleConsignacionActionPerformed(evt);
			} else if(sTipo.equals("EliminarDetalleConsignacion")) {
				jButtonEliminarDetalleConsignacionActionPerformed(evt);
			} else if(sTipo.equals("EliminarToolBarDetalleConsignacion")) {
				jButtonEliminarDetalleConsignacionActionPerformed(evt);
			} else if(sTipo.equals("MenuItemEliminarDetalleConsignacion")) {
				jButtonEliminarDetalleConsignacionActionPerformed(evt);
			} else if(sTipo.equals("CancelarDetalleConsignacion")) {
				jButtonCancelarDetalleConsignacionActionPerformed(evt);
			} else if(sTipo.equals("CancelarToolBarDetalleConsignacion")) {
				jButtonCancelarDetalleConsignacionActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCancelarDetalleConsignacion")) {
				jButtonCancelarDetalleConsignacionActionPerformed(evt);
			} else if(sTipo.equals("CerrarDetalleConsignacion")) {
				jButtonCerrarDetalleConsignacionActionPerformed(evt);
			} else if(sTipo.equals("CerrarToolBarDetalleConsignacion")) {
				jButtonCerrarDetalleConsignacionActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCerrarDetalleConsignacion")) {
				jButtonCerrarDetalleConsignacionActionPerformed(evt);
			} else if(sTipo.equals("MostrarOcultarToolBarDetalleConsignacion")) {
				jButtonMostrarOcultarDetalleConsignacionActionPerformed(evt);
			} else if(sTipo.equals("MenuItemDetalleCerrarDetalleConsignacion")) {
				jButtonCancelarDetalleConsignacionActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosDetalleConsignacion")) {
				jButtonGuardarCambiosDetalleConsignacionActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosToolBarDetalleConsignacion")) {
				jButtonGuardarCambiosDetalleConsignacionActionPerformed(evt);
			} else if(sTipo.equals("CopiarToolBarDetalleConsignacion")) {
				jButtonCopiarDetalleConsignacionActionPerformed(evt);
			} else if(sTipo.equals("VerFormToolBarDetalleConsignacion")) {
				jButtonVerFormDetalleConsignacionActionPerformed(evt);
			} else if(sTipo.equals("MenuItemGuardarCambiosDetalleConsignacion")) {
				jButtonGuardarCambiosDetalleConsignacionActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCopiarDetalleConsignacion")) {
				jButtonCopiarDetalleConsignacionActionPerformed(evt);
			} else if(sTipo.equals("MenuItemVerFormDetalleConsignacion")) {
				jButtonVerFormDetalleConsignacionActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosTablaDetalleConsignacion")) {
				jButtonGuardarCambiosDetalleConsignacionActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosTablaToolBarDetalleConsignacion")) {
				jButtonGuardarCambiosDetalleConsignacionActionPerformed(evt);
			} else if(sTipo.equals("MenuItemGuardarCambiosTablaDetalleConsignacion")) {
				jButtonGuardarCambiosDetalleConsignacionActionPerformed(evt);
			} else if(sTipo.equals("RecargarInformacionDetalleConsignacion")) {
				jButtonRecargarInformacionDetalleConsignacionActionPerformed(evt);
			} else if(sTipo.equals("RecargarInformacionToolBarDetalleConsignacion")) {
				jButtonRecargarInformacionDetalleConsignacionActionPerformed(evt);
			} else if(sTipo.equals("MenuItemRecargarInformacionDetalleConsignacion")) {
				jButtonRecargarInformacionDetalleConsignacionActionPerformed(evt);
			}
			else if(sTipo.equals("AnterioresDetalleConsignacion")) {
				jButtonAnterioresDetalleConsignacionActionPerformed(evt);
			} else if(sTipo.equals("AnterioresToolBarDetalleConsignacion")) {
				jButtonAnterioresDetalleConsignacionActionPerformed(evt);
			} else if(sTipo.equals("MenuItemAnterioreDetalleConsignacion")) {
				jButtonAnterioresDetalleConsignacionActionPerformed(evt);
			} else if(sTipo.equals("SiguientesDetalleConsignacion")) {
				jButtonSiguientesDetalleConsignacionActionPerformed(evt);
			} else if(sTipo.equals("SiguientesToolBarDetalleConsignacion")) {
				jButtonSiguientesDetalleConsignacionActionPerformed(evt);
			} else if(sTipo.equals("MenuItemSiguientesDetalleConsignacion")) {
				jButtonSiguientesDetalleConsignacionActionPerformed(evt);
			} else if(sTipo.equals("MenuItemAbrirOrderByDetalleConsignacion") || sTipo.equals("MenuItemDetalleAbrirOrderByDetalleConsignacion")) {
				jButtonAbrirOrderByDetalleConsignacionActionPerformed(evt);
			} else if(sTipo.equals("MenuItemMostrarOcultarDetalleConsignacion") || sTipo.equals("MenuItemDetalleMostrarOcultarDetalleConsignacion")) {
				jButtonMostrarOcultarDetalleConsignacionActionPerformed(evt);
			} else if(sTipo.equals("NuevoGuardarCambiosDetalleConsignacion")) {
				jButtonNuevoGuardarCambiosDetalleConsignacionActionPerformed(evt);
			} else if(sTipo.equals("NuevoGuardarCambiosToolBarDetalleConsignacion")) {
				jButtonNuevoGuardarCambiosDetalleConsignacionActionPerformed(evt);
			} else if(sTipo.equals("MenuItemNuevoGuardarCambiosDetalleConsignacion")) {
				jButtonNuevoGuardarCambiosDetalleConsignacionActionPerformed(evt);
			} 
			else if(sTipo.equals("CerrarReporteDinamicoDetalleConsignacion")) {
				jButtonCerrarReporteDinamicoDetalleConsignacionActionPerformed(evt);
			} else if(sTipo.equals("GenerarReporteDinamicoDetalleConsignacion")) {
				jButtonGenerarReporteDinamicoDetalleConsignacionActionPerformed(evt);
			} else if(sTipo.equals("GenerarExcelReporteDinamicoDetalleConsignacion")) {
				
				jButtonGenerarExcelReporteDinamicoDetalleConsignacionActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarImportacionDetalleConsignacion")) {
				jButtonCerrarImportacionDetalleConsignacionActionPerformed(evt);
			} else if(sTipo.equals("GenerarImportacionDetalleConsignacion")) {
				
				jButtonGenerarImportacionDetalleConsignacionActionPerformed(evt);
				
			} else if(sTipo.equals("AbrirImportacionDetalleConsignacion")) {
				
				jButtonAbrirImportacionDetalleConsignacionActionPerformed(evt);
				
			} else if(sTipo.equals("TiposAccionesDetalleConsignacion")) {
				jComboBoxTiposAccionesDetalleConsignacionActionListener(evt,false);
			} else if(sTipo.equals("TiposRelacionesDetalleConsignacion")) {
				jComboBoxTiposRelacionesDetalleConsignacionActionListener(evt);
			} else if(sTipo.equals("TiposAccionesFormularioDetalleConsignacion")) {
				jComboBoxTiposAccionesDetalleConsignacionActionListener(evt,true);
			} else if(sTipo.equals("TiposSeleccionarDetalleConsignacion")) {
				
				jComboBoxTiposSeleccionarDetalleConsignacionActionListener(evt);
				
			} else if(sTipo.equals("ValorCampoGeneralDetalleConsignacion")) {
				jTextFieldValorCampoGeneralDetalleConsignacionActionListener(evt);
			}
			
			else if(sTipo.equals("AbrirTotalesDetalleConsignacion")) {
				jButtonAbrirTotalesDetalleConsignacionActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarTotalesDetalleConsignacion")) {
				jButtonCerrarTotalesDetalleConsignacionActionPerformed(evt);
			} 
			
			else if(sTipo.equals("AbrirOrderByDetalleConsignacion")) {
				jButtonAbrirOrderByDetalleConsignacionActionPerformed(evt);
				
			} else if(sTipo.equals("AbrirOrderByToolBarDetalleConsignacion")) {
				jButtonAbrirOrderByDetalleConsignacionActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarOrderByDetalleConsignacion")) {
				jButtonCerrarOrderByDetalleConsignacionActionPerformed(evt);
			} 
						
			
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("idDetalleConsignacionBusqueda")) {
				this.jButtonidDetalleConsignacionBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_empresaDetalleConsignacionUpdate")) {
				this.jButtonid_empresaDetalleConsignacionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_empresaDetalleConsignacionBusqueda")) {
				this.jButtonid_empresaDetalleConsignacionBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_sucursalDetalleConsignacionUpdate")) {
				this.jButtonid_sucursalDetalleConsignacionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_sucursalDetalleConsignacionBusqueda")) {
				this.jButtonid_sucursalDetalleConsignacionBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_ejercicioDetalleConsignacionUpdate")) {
				this.jButtonid_ejercicioDetalleConsignacionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_ejercicioDetalleConsignacionBusqueda")) {
				this.jButtonid_ejercicioDetalleConsignacionBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_periodoDetalleConsignacionUpdate")) {
				this.jButtonid_periodoDetalleConsignacionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_periodoDetalleConsignacionBusqueda")) {
				this.jButtonid_periodoDetalleConsignacionBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_anioDetalleConsignacionUpdate")) {
				this.jButtonid_anioDetalleConsignacionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_anioDetalleConsignacionBusqueda")) {
				this.jButtonid_anioDetalleConsignacionBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_mesDetalleConsignacionUpdate")) {
				this.jButtonid_mesDetalleConsignacionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_mesDetalleConsignacionBusqueda")) {
				this.jButtonid_mesDetalleConsignacionBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_consignacionDetalleConsignacionUpdate")) {
				this.jButtonid_consignacionDetalleConsignacionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_consignacionDetalleConsignacionBusqueda")) {
				this.jButtonid_consignacionDetalleConsignacionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_productoDetalleConsignacion")) {
				this.jButtonid_productoDetalleConsignacionActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_productoDetalleConsignacionUpdate")) {
				this.jButtonid_productoDetalleConsignacionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_productoDetalleConsignacionBusqueda")) {
				this.jButtonid_productoDetalleConsignacionBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_bodegaDetalleConsignacionUpdate")) {
				this.jButtonid_bodegaDetalleConsignacionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_bodegaDetalleConsignacionBusqueda")) {
				this.jButtonid_bodegaDetalleConsignacionBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_unidadDetalleConsignacionUpdate")) {
				this.jButtonid_unidadDetalleConsignacionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_unidadDetalleConsignacionBusqueda")) {
				this.jButtonid_unidadDetalleConsignacionBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_estado_detalle_pedidoDetalleConsignacionUpdate")) {
				this.jButtonid_estado_detalle_pedidoDetalleConsignacionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_estado_detalle_pedidoDetalleConsignacionBusqueda")) {
				this.jButtonid_estado_detalle_pedidoDetalleConsignacionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("cantidadDetalleConsignacionBusqueda")) {
				this.jButtoncantidadDetalleConsignacionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("precioDetalleConsignacionBusqueda")) {
				this.jButtonprecioDetalleConsignacionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("descuento_porcentajeDetalleConsignacionBusqueda")) {
				this.jButtondescuento_porcentajeDetalleConsignacionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("descuento_valorDetalleConsignacionBusqueda")) {
				this.jButtondescuento_valorDetalleConsignacionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("ivaDetalleConsignacionBusqueda")) {
				this.jButtonivaDetalleConsignacionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("totalDetalleConsignacionBusqueda")) {
				this.jButtontotalDetalleConsignacionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("iceDetalleConsignacionBusqueda")) {
				this.jButtoniceDetalleConsignacionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("costoDetalleConsignacionBusqueda")) {
				this.jButtoncostoDetalleConsignacionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("utilidadDetalleConsignacionBusqueda")) {
				this.jButtonutilidadDetalleConsignacionBusquedaActionPerformed(evt);
			}
			
			
			else if(sTipo.equals("id_productoDetalleConsignacion")) {
				this.jButtonid_productoDetalleConsignacionActionPerformed(evt);
			}
			
			
			else if(sTipo.equals("FK_IdBodegaDetalleConsignacion")) {
				this.jButtonFK_IdBodegaDetalleConsignacionActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdConsignacionDetalleConsignacion")) {
				this.jButtonFK_IdConsignacionDetalleConsignacionActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdEstadoDetallePedidoDetalleConsignacion")) {
				this.jButtonFK_IdEstadoDetallePedidoDetalleConsignacionActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdProductoDetalleConsignacion")) {
				this.jButtonFK_IdProductoDetalleConsignacionActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdUnidadDetalleConsignacion")) {
				this.jButtonFK_IdUnidadDetalleConsignacionActionPerformed(evt);
			}
			
			;
			
			
			DetalleConsignacionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.BUTTON,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.detalleconsignacion,new Object(),this.detalleconsignacionParameterGeneral,this.detalleconsignacionReturnGeneral);
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleConsignacionConstantesFunciones.CLASSNAME);
			
  		} finally {
      		this.finishProcessDetalleConsignacion();
      	}
    }
	
	//FUNCIONA AL APLASTAR ENTER
	public void jTextFieldActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaDetalleConsignacionActual();
			
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				Container containerParent=null;
				JTextField jTextField=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParent=jTextField.getParent();
						
				if(containerParent!=null && containerParent.getClass().equals(JTableMe.class)) {
					esControlTabla=true;
				}
						
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.detalleconsignacion);
				
				this.actualizarInformacion("INFO_PADRE",false,this.detalleconsignacion);
				
				DetalleConsignacionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detalleconsignacion,new Object(),this.detalleconsignacionParameterGeneral,this.detalleconsignacionReturnGeneral);
				
				


			if(sTipo.equals("cantidadDetalleConsignacion")) {
				if(this.detalleconsignacionSessionBean.getConGuardarRelaciones()) {
					//classes=DetalleConsignacionConstantesFunciones.getClassesRelationshipsOfDetalleConsignacion(new ArrayList<Classe>(),DeepLoadType.NONE);
				}

				this.classesActual=new ArrayList<Classe>();
				this.classesActual.addAll(classes);

				this.recargarFormDetalleConsignacion(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"TEXTBOX",classes,false,esControlTabla);
			}
				
				DetalleConsignacionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detalleconsignacion,new Object(),this.detalleconsignacionParameterGeneral,this.detalleconsignacionReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(DetalleConsignacion.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",DetalleConsignacion.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
				}
				
			} catch(Exception e) {
  				FuncionesSwing.manageException2(this, e,logger,DetalleConsignacionConstantesFunciones.CLASSNAME);
  			}
    }
	
	public Boolean existeCambioValor(ControlTipo controlTipo,String sTipo) throws Exception {
		Boolean existeCambio=true;
		
		try {
			DetalleConsignacion detalleconsignacionLocal=null;
			
			if(!this.getEsControlTabla()) {
				detalleconsignacionLocal=this.detalleconsignacion;
			} else {
				detalleconsignacionLocal=this.detalleconsignacionAnterior;
			}
			
			if(controlTipo.equals(ControlTipo.TEXTBOX)) {
				


				if(sTipo.equals("cantidadDetalleConsignacion")) {
					if(detalleconsignacionLocal.getcantidad()==Integer.parseInt(this.jInternalFrameDetalleFormDetalleConsignacion.jTextFieldcantidadDetalleConsignacion.getText())){existeCambio=false;};
				}
			}
		
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleConsignacionConstantesFunciones.CLASSNAME);
  		}
		
		return existeCambio;
	}
	
	public void jTextFieldFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTBOX,sTipo)) {
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextField jTextField=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParent=jTextField.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.detalleconsignacion);
				
				this.actualizarInformacion("INFO_PADRE",false,this.detalleconsignacion);
				
				DetalleConsignacionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detalleconsignacion,new Object(),this.detalleconsignacionParameterGeneral,this.detalleconsignacionReturnGeneral);
							
				
				


			if(sTipo.equals("cantidadDetalleConsignacion")) {
				if(this.detalleconsignacionSessionBean.getConGuardarRelaciones()) {
					//classes=DetalleConsignacionConstantesFunciones.getClassesRelationshipsOfDetalleConsignacion(new ArrayList<Classe>(),DeepLoadType.NONE);
				}

				this.classesActual=new ArrayList<Classe>();
				this.classesActual.addAll(classes);

				this.recargarFormDetalleConsignacion(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"TEXTBOX",classes,false,esControlTabla);
			}
				
				DetalleConsignacionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detalleconsignacion,new Object(),this.detalleconsignacionParameterGeneral,this.detalleconsignacionReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(DetalleConsignacion.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",DetalleConsignacion.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleConsignacionConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextFieldFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaDetalleConsignacionActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosDetalleConsignacion.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleconsignacionAnterior =(DetalleConsignacion) this.detalleconsignacionLogic.getDetalleConsignacions().toArray()[this.jTableDatosDetalleConsignacion.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.detalleconsignacionAnterior =(DetalleConsignacion) this.detalleconsignacions.toArray()[this.jTableDatosDetalleConsignacion.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleConsignacionConstantesFunciones.CLASSNAME);
  		}
    }	
	
	//CUANDO SE CAMBIA ALGUN FORMATO(TIPO DE LETRA,NEGRILLA,ETC)
	public void jTextFieldChangedUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			/*
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			//System.out.println("UPDATE");
			
			Boolean esControlTabla=false;
			//JTextField jTextField=null;
			Container containerParent=null;
			Component componentOpposite=null;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			DetalleConsignacionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detalleconsignacion,new Object(),this.detalleconsignacionParameterGeneral,this.detalleconsignacionReturnGeneral);
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			//jTextField=(JTextField)evt.getSource();
			
			containerParent=jTextField.getParent();
					
			componentOpposite=null;//evt.getOppositeComponent();
			
			if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
				|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
			) {					
				esControlTabla=true;
			}
			
			this.esControlTabla=esControlTabla;
			
			


			if(sTipo.equals("cantidadDetalleConsignacion")) {
				if(this.detalleconsignacionSessionBean.getConGuardarRelaciones()) {
					//classes=DetalleConsignacionConstantesFunciones.getClassesRelationshipsOfDetalleConsignacion(new ArrayList<Classe>(),DeepLoadType.NONE);
				}

				this.classesActual=new ArrayList<Classe>();
				this.classesActual.addAll(classes);

				this.recargarFormDetalleConsignacion(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"TEXTBOX",classes,false,esControlTabla);
			}
			
			DetalleConsignacionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detalleconsignacion,new Object(),this.detalleconsignacionParameterGeneral,this.detalleconsignacionReturnGeneral);
			*/
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleConsignacionConstantesFunciones.CLASSNAME);
  		}
    }
	
	//CUANDO SE QUITA ALGUN CARACTER
	public void jTextFieldRemoveUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			//System.out.println("REMOVE");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleConsignacionConstantesFunciones.CLASSNAME);
  		}
    }
	
	//CUANDO SE INGRESA ALGUN CARACTER
	public void jTextFieldInsertUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			//System.out.println("INSERT");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleConsignacionConstantesFunciones.CLASSNAME);
  		}
    }
	
	//FUNCIONA AL APLASTAR ENTER
	public void jFormattedTextFieldActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaDetalleConsignacionActual();
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				Container containerParent=null;
				Container containerParentAux=null;
				JFormattedTextField JFormattedTextField=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				JFormattedTextField=(JFormattedTextField)evt.getSource();
				
				containerParentAux=JFormattedTextField.getParent();
				
				if(containerParentAux!=null && containerParentAux.getClass().equals(JDateChooser.class)) {
					containerParent=containerParentAux.getParent();
				}
				
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.detalleconsignacion);
				
				this.actualizarInformacion("INFO_PADRE",false,this.detalleconsignacion);
				
				DetalleConsignacionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detalleconsignacion,new Object(),this.detalleconsignacionParameterGeneral,this.detalleconsignacionReturnGeneral);
								
						
				


				
				DetalleConsignacionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detalleconsignacion,new Object(),this.detalleconsignacionParameterGeneral,this.detalleconsignacionReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(DetalleConsignacion.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",DetalleConsignacion.class.getName(),sTipo,"DATE",esControlTabla,conIrServidorAplicacionParent,
							id,JFormattedTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleConsignacionConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jFormattedTextFieldFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTBOX,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextField jTextField=null;
				Container containerParent=null;
				Container containerParentAux=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParentAux=jTextField.getParent();
						
				if(containerParentAux!=null && containerParentAux.getClass().equals(JDateChooser.class)) {
					containerParent=containerParentAux.getParent();
				}
				
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.detalleconsignacion);
				
				this.actualizarInformacion("INFO_PADRE",false,this.detalleconsignacion);
				
				DetalleConsignacionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detalleconsignacion,new Object(),this.detalleconsignacionParameterGeneral,this.detalleconsignacionReturnGeneral);
								
				
				


				
				DetalleConsignacionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detalleconsignacion,new Object(),this.detalleconsignacionParameterGeneral,this.detalleconsignacionReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(DetalleConsignacion.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",DetalleConsignacion.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleConsignacionConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jFormattedTextFieldFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaDetalleConsignacionActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosDetalleConsignacion.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleconsignacionAnterior =(DetalleConsignacion) this.detalleconsignacionLogic.getDetalleConsignacions().toArray()[this.jTableDatosDetalleConsignacion.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.detalleconsignacionAnterior =(DetalleConsignacion) this.detalleconsignacions.toArray()[this.jTableDatosDetalleConsignacion.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleConsignacionConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.DATE,sTipo)) {
				this.actualizarInformacion("EVENTO_CONTROL",false,this.detalleconsignacion);
				
				this.actualizarInformacion("INFO_PADRE",false,this.detalleconsignacion);
			}	
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleConsignacionConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaDetalleConsignacionActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosDetalleConsignacion.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleconsignacionAnterior =(DetalleConsignacion) this.detalleconsignacionLogic.getDetalleConsignacions().toArray()[this.jTableDatosDetalleConsignacion.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.detalleconsignacionAnterior =(DetalleConsignacion) this.detalleconsignacions.toArray()[this.jTableDatosDetalleConsignacion.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleConsignacionConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaDetalleConsignacionActual();
				
			this.actualizarInformacion("EVENTO_CONTROL",false,this.detalleconsignacion);
			
			this.actualizarInformacion("INFO_PADRE",false,this.detalleconsignacion);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleConsignacionConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jTextAreaFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTAREA,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextArea jTextArea=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextArea=(JTextArea)evt.getSource();
				
				containerParent=jTextArea.getParent();
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.detalleconsignacion);
				
				this.actualizarInformacion("INFO_PADRE",false,this.detalleconsignacion);
				
				DetalleConsignacionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detalleconsignacion,new Object(),this.detalleconsignacionParameterGeneral,this.detalleconsignacionReturnGeneral);
							
				
				


				
				DetalleConsignacionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detalleconsignacion,new Object(),this.detalleconsignacionParameterGeneral,this.detalleconsignacionReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(DetalleConsignacion.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",DetalleConsignacion.class.getName(),sTipo,"TEXTAREA",esControlTabla,conIrServidorAplicacionParent,
							id,jTextArea, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleConsignacionConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaDetalleConsignacionActual();
			
				//SELECCIONA FILA A OBJETO ANTERIOR
				Integer intSelectedRow = this.jTableDatosDetalleConsignacion.getSelectedRow();
						
				if(intSelectedRow!=null && intSelectedRow>-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detalleconsignacionAnterior =(DetalleConsignacion) this.detalleconsignacionLogic.getDetalleConsignacions().toArray()[this.jTableDatosDetalleConsignacion.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
						this.detalleconsignacionAnterior =(DetalleConsignacion) this.detalleconsignacions.toArray()[this.jTableDatosDetalleConsignacion.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					//System.out.println(this.banco);
				}
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleConsignacionConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaChangedUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			/*
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			//System.out.println("UPDATE");
			
			Boolean esControlTabla=false;
			//JTextArea jTextArea=null;
			Container containerParent=null;
			Component componentOpposite=null;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			DetalleConsignacionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detalleconsignacion,new Object(),this.detalleconsignacionParameterGeneral,this.detalleconsignacionReturnGeneral);
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			//jTextArea=(JTextArea)evt.getSource();
			
			containerParent=jTextArea.getParent();
			componentOpposite=null;//evt.getOppositeComponent();
			
			if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
				|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
			) {
				esControlTabla=true;
			}
			
			this.esControlTabla=esControlTabla;
			
			


			
			DetalleConsignacionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detalleconsignacion,new Object(),this.detalleconsignacionParameterGeneral,this.detalleconsignacionReturnGeneral);
			
			*/
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleConsignacionConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaRemoveUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			//System.out.println("REMOVE");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleConsignacionConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaInsertUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			
			//System.out.println("INSERT");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleConsignacionConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO EXISTE O NO ES APLICABLE
	public void jTextAreaActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaDetalleConsignacionActual();
			
			this.actualizarInformacion("EVENTO_CONTROL",false,this.detalleconsignacion);
			
			this.actualizarInformacion("INFO_PADRE",false,this.detalleconsignacion);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleConsignacionConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jLabelFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JLabel jLabel=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jLabel=(JLabel)evt.getSource();
				
				containerParent=jLabel.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.detalleconsignacion);
				
				this.actualizarInformacion("INFO_PADRE",false,this.detalleconsignacion);
				
				DetalleConsignacionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detalleconsignacion,new Object(),this.detalleconsignacionParameterGeneral,this.detalleconsignacionReturnGeneral);
								
				
				


			if(sTipo.equals("cantidadDetalleConsignacion")) {
				if(this.detalleconsignacionSessionBean.getConGuardarRelaciones()) {
					//classes=DetalleConsignacionConstantesFunciones.getClassesRelationshipsOfDetalleConsignacion(new ArrayList<Classe>(),DeepLoadType.NONE);
				}

				this.classesActual=new ArrayList<Classe>();
				this.classesActual.addAll(classes);

				this.recargarFormDetalleConsignacion(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.LABEL,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"LABEL",classes,false,esControlTabla);
			}
				
				DetalleConsignacionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detalleconsignacion,new Object(),this.detalleconsignacionParameterGeneral,this.detalleconsignacionReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(DetalleConsignacion.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",DetalleConsignacion.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jLabel, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}	
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleConsignacionConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jLabelFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaDetalleConsignacionActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosDetalleConsignacion.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleconsignacionAnterior =(DetalleConsignacion) this.detalleconsignacionLogic.getDetalleConsignacions().toArray()[this.jTableDatosDetalleConsignacion.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.detalleconsignacionAnterior =(DetalleConsignacion) this.detalleconsignacions.toArray()[this.jTableDatosDetalleConsignacion.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleConsignacionConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO EXISTE O NO ES APLICABLE
	public void jLabelActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaDetalleConsignacionActual();
				
			this.actualizarInformacion("EVENTO_CONTROL",false,this.detalleconsignacion);
			
			this.actualizarInformacion("INFO_PADRE",false,this.detalleconsignacion);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleConsignacionConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxItemListenerGeneral(String sTipo,ItemEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaDetalleConsignacionActual();
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JCheckBox jCheckBox=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
							
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jCheckBox=(JCheckBox)evt.getSource();
				
				containerParent=jCheckBox.getParent();
						
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.detalleconsignacion);
				
				this.actualizarInformacion("INFO_PADRE",false,this.detalleconsignacion);
				
				DetalleConsignacionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.detalleconsignacion,new Object(),this.detalleconsignacionParameterGeneral,this.detalleconsignacionReturnGeneral);
												
				
				if(sTipo.equals("SeleccionarTodosDetalleConsignacion")) {
					jCheckBoxSeleccionarTodosDetalleConsignacionItemListener(evt);
				
				} else if(sTipo.equals("SeleccionadosDetalleConsignacion")) {
					jCheckBoxSeleccionadosDetalleConsignacionItemListener(evt);
				
				} else if(sTipo.equals("NuevoToolBarDetalleConsignacion")) {
					
				}
				
				


				
				
				DetalleConsignacionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.detalleconsignacion,new Object(),this.detalleconsignacionParameterGeneral,this.detalleconsignacionReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(DetalleConsignacion.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",DetalleConsignacion.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jCheckBox, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}	
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleConsignacionConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.CHECKBOX,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JCheckBox jCheckBox=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jCheckBox=(JCheckBox)evt.getSource();
				
				containerParent=jCheckBox.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				//this.actualizarInformacion("EVENTO_CONTROL",false,this.detalleconsignacion);
				
				//this.actualizarInformacion("INFO_PADRE",false,this.detalleconsignacion);
				
				DetalleConsignacionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.detalleconsignacion,new Object(),this.detalleconsignacionParameterGeneral,this.detalleconsignacionReturnGeneral);
												
				
				


				
				
				DetalleConsignacionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.detalleconsignacion,new Object(),this.detalleconsignacionParameterGeneral,this.detalleconsignacionReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
				
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(DetalleConsignacion.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",DetalleConsignacion.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jCheckBox, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleConsignacionConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaDetalleConsignacionActual();
			
				//SELECCIONA FILA A OBJETO ANTERIOR
				Integer intSelectedRow = this.jTableDatosDetalleConsignacion.getSelectedRow();
						
				if(intSelectedRow!=null && intSelectedRow>-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detalleconsignacionAnterior =(DetalleConsignacion) this.detalleconsignacionLogic.getDetalleConsignacions().toArray()[this.jTableDatosDetalleConsignacion.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
						this.detalleconsignacionAnterior =(DetalleConsignacion) this.detalleconsignacions.toArray()[this.jTableDatosDetalleConsignacion.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					//System.out.println(this.banco);
				}
			}
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleConsignacionConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaDetalleConsignacionActual();
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.detalleconsignacion);
				
				this.actualizarInformacion("INFO_PADRE",false,this.detalleconsignacion);
				
				DetalleConsignacionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.detalleconsignacion,new Object(),this.detalleconsignacionParameterGeneral,this.detalleconsignacionReturnGeneral);
				
				
				DetalleConsignacionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.detalleconsignacion,new Object(),this.detalleconsignacionParameterGeneral,this.detalleconsignacionReturnGeneral);
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleConsignacionConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO SE UTILIZA, SE USA EL DE ABAJO, IGUAL SE DEJA EL CODIGO COMO RESPALDO Y ES CASI IGUAL
	//ERROR:SI SE USA,AL HACER CLIC EN EL MISMO ELEMENTO O EJECUTAR SELECTEDITEM, SIEMPRE SE EJECUTA COMO SI ESCOGIERA OTRO ELEMENTO(NO DEBERIA)
	//@SuppressWarnings("rawtypes")
	public void jComboBoxActionPerformedGeneral(String sTipo,ActionEvent evt) {		
		try {
			/*		
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			Container containerParent=null;
			Component componentOpposite=null;
			Boolean esControlTabla=false;
				
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			DetalleConsignacionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.detalleconsignacion,new Object(),this.detalleconsignacionParameterGeneral,this.detalleconsignacionReturnGeneral);
			JComboBox jComboBoxGenerico=null;						
			
			if(evt.getSource().getClass().equals(JComboBox.class)
				|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
					
				jComboBoxGenerico=(JComboBox)evt.getSource();
				
				containerParent=jComboBoxGenerico.getParent();
				
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
			}
			
			String sFinalQueryCombo="";
			
			


			if(sTipo.equals("id_productoDetalleConsignacion")) {
				if(jComboBoxGenerico==null) {
					jComboBoxGenerico=this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_productoDetalleConsignacion;
				}

				if(this.detalleconsignacionSessionBean.getConGuardarRelaciones()) {
					//classes=DetalleConsignacionConstantesFunciones.getClassesRelationshipsOfDetalleConsignacion(new ArrayList<Classe>(),DeepLoadType.NONE);
				}


				this.procesarActionsCombosForeignKeyProducto(jComboBoxGenerico,"Formulario");

				this.recargarFormDetalleConsignacion(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"COMBOBOX",classes,false,esControlTabla);
			}
			 else if(sTipo.equals("jComboBoxid_productoFK_IdProductoDetalleConsignacion")) {
				this.procesarActionsCombosForeignKeyProducto(jComboBoxid_productoFK_IdProductoDetalleConsignacion,"FK_IdProducto");
				//recargarFormDetalleConsignacionProducto(jComboBoxid_productoFK_IdProductoDetalleConsignacion,"FK_IdProducto");
			}
			 else if(sTipo.equals("id_bodegaDetalleConsignacion")) {
				if(jComboBoxGenerico==null) {
					jComboBoxGenerico=this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_bodegaDetalleConsignacion;
				}

				if(this.detalleconsignacionSessionBean.getConGuardarRelaciones()) {
					//classes=DetalleConsignacionConstantesFunciones.getClassesRelationshipsOfDetalleConsignacion(new ArrayList<Classe>(),DeepLoadType.NONE);
				}


				this.procesarActionsCombosForeignKeyBodega(jComboBoxGenerico,"Formulario");

				this.recargarFormDetalleConsignacion(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"COMBOBOX",classes,false,esControlTabla);
			}
			 else if(sTipo.equals("jComboBoxid_bodegaFK_IdBodegaDetalleConsignacion")) {
				this.procesarActionsCombosForeignKeyBodega(jComboBoxid_bodegaFK_IdBodegaDetalleConsignacion,"FK_IdBodega");
				//recargarFormDetalleConsignacionBodega(jComboBoxid_bodegaFK_IdBodegaDetalleConsignacion,"FK_IdBodega");
			}
			
			DetalleConsignacionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detalleconsignacion,new Object(),this.detalleconsignacionParameterGeneral,this.detalleconsignacionReturnGeneral);
			*/						
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleConsignacionConstantesFunciones.CLASSNAME);
  		}		
    }
	
	@SuppressWarnings("rawtypes")
	public void jComboBoxItemStateChangedGeneral(String sTipo,ItemEvent evt) { 	  
		try {
			if (evt.getStateChange() == ItemEvent.SELECTED && this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaDetalleConsignacionActual();
			
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
			
			
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				Container containerParent=null;
				Component componentOpposite=null;
				Boolean esControlTabla=false;
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				JComboBox jComboBoxGenerico=null;						
				
				if(evt.getSource().getClass().equals(JComboBox.class)
					|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
						
					jComboBoxGenerico=(JComboBox)evt.getSource();
					
					containerParent=jComboBoxGenerico.getParent();
					
					componentOpposite=null;//evt.getOppositeComponent();
					
					if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
					) {					
						esControlTabla=true;
					}		
					
					this.esControlTabla=esControlTabla;
				}
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.detalleconsignacion);
				
				this.actualizarInformacion("INFO_PADRE",false,this.detalleconsignacion);
				
				DetalleConsignacionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.detalleconsignacion,new Object(),this.detalleconsignacionParameterGeneral,this.detalleconsignacionReturnGeneral);
				
				
				String sFinalQueryCombo="";
				
				


			if(sTipo.equals("id_productoDetalleConsignacion")) {
				if(jComboBoxGenerico==null) {
					jComboBoxGenerico=this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_productoDetalleConsignacion;
				}

				if(this.detalleconsignacionSessionBean.getConGuardarRelaciones()) {
					//classes=DetalleConsignacionConstantesFunciones.getClassesRelationshipsOfDetalleConsignacion(new ArrayList<Classe>(),DeepLoadType.NONE);
				}


				this.procesarActionsCombosForeignKeyProducto(jComboBoxGenerico,"Formulario");

				this.recargarFormDetalleConsignacion(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"COMBOBOX",classes,false,esControlTabla);
			}
			 else if(sTipo.equals("jComboBoxid_productoFK_IdProductoDetalleConsignacion")) {
				this.procesarActionsCombosForeignKeyProducto(jComboBoxid_productoFK_IdProductoDetalleConsignacion,"FK_IdProducto");
				//recargarFormDetalleConsignacionProducto(jComboBoxid_productoFK_IdProductoDetalleConsignacion,"FK_IdProducto");
			}
			 else if(sTipo.equals("id_bodegaDetalleConsignacion")) {
				if(jComboBoxGenerico==null) {
					jComboBoxGenerico=this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_bodegaDetalleConsignacion;
				}

				if(this.detalleconsignacionSessionBean.getConGuardarRelaciones()) {
					//classes=DetalleConsignacionConstantesFunciones.getClassesRelationshipsOfDetalleConsignacion(new ArrayList<Classe>(),DeepLoadType.NONE);
				}


				this.procesarActionsCombosForeignKeyBodega(jComboBoxGenerico,"Formulario");

				this.recargarFormDetalleConsignacion(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"COMBOBOX",classes,false,esControlTabla);
			}
			 else if(sTipo.equals("jComboBoxid_bodegaFK_IdBodegaDetalleConsignacion")) {
				this.procesarActionsCombosForeignKeyBodega(jComboBoxid_bodegaFK_IdBodegaDetalleConsignacion,"FK_IdBodega");
				//recargarFormDetalleConsignacionBodega(jComboBoxid_bodegaFK_IdBodegaDetalleConsignacion,"FK_IdBodega");
			}
				
				DetalleConsignacionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detalleconsignacion,new Object(),this.detalleconsignacionParameterGeneral,this.detalleconsignacionReturnGeneral);
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
				
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(DetalleConsignacion.class.getName());
								
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",DetalleConsignacion.class.getName(),sTipo,"COMBOBOX",esControlTabla,conIrServidorAplicacionParent,
							id,jComboBoxGenerico, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleConsignacionConstantesFunciones.CLASSNAME);
  		}
    }
	
	//@SuppressWarnings("rawtypes")
	public void jComboBoxFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		//MANEJADO EN ITEMLISTENER
		/*
		try {
			if(this.permiteManejarEventosControl()) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				
				//if(this.esUsoDesdeHijo) {
				//	eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				//}
				
				
				Container containerParent=null;
				Component componentOpposite=null;
				Boolean esControlTabla=false;
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
			
				this.actualizarInformacion("EVENTO_CONTROL",false,this.detalleconsignacion);
				
				this.actualizarInformacion("INFO_PADRE",false,this.detalleconsignacion);
				
				DetalleConsignacionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.detalleconsignacion,new Object(),this.detalleconsignacionParameterGeneral,this.detalleconsignacionReturnGeneral);
				JComboBox jComboBoxGenerico=null;						
				
				if(evt.getSource().getClass().equals(JComboBox.class)
					|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
						
					jComboBoxGenerico=(JComboBox)evt.getSource();
					
					containerParent=jComboBoxGenerico.getParent();
					
					componentOpposite=evt.getOppositeComponent();
					
					if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
					) {					
						esControlTabla=true;
					}
					
					this.esControlTabla=esControlTabla;
				}
				
				String sFinalQueryCombo="";
				
				


			if(sTipo.equals("id_productoDetalleConsignacion")) {
				if(jComboBoxGenerico==null) {
					jComboBoxGenerico=this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_productoDetalleConsignacion;
				}

				if(this.detalleconsignacionSessionBean.getConGuardarRelaciones()) {
					//classes=DetalleConsignacionConstantesFunciones.getClassesRelationshipsOfDetalleConsignacion(new ArrayList<Classe>(),DeepLoadType.NONE);
				}


				this.procesarActionsCombosForeignKeyProducto(jComboBoxGenerico,"Formulario");

				this.recargarFormDetalleConsignacion(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"COMBOBOX",classes,false,esControlTabla);
			}
			 else if(sTipo.equals("jComboBoxid_productoFK_IdProductoDetalleConsignacion")) {
				this.procesarActionsCombosForeignKeyProducto(jComboBoxid_productoFK_IdProductoDetalleConsignacion,"FK_IdProducto");
				//recargarFormDetalleConsignacionProducto(jComboBoxid_productoFK_IdProductoDetalleConsignacion,"FK_IdProducto");
			}
			 else if(sTipo.equals("id_bodegaDetalleConsignacion")) {
				if(jComboBoxGenerico==null) {
					jComboBoxGenerico=this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_bodegaDetalleConsignacion;
				}

				if(this.detalleconsignacionSessionBean.getConGuardarRelaciones()) {
					//classes=DetalleConsignacionConstantesFunciones.getClassesRelationshipsOfDetalleConsignacion(new ArrayList<Classe>(),DeepLoadType.NONE);
				}


				this.procesarActionsCombosForeignKeyBodega(jComboBoxGenerico,"Formulario");

				this.recargarFormDetalleConsignacion(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"COMBOBOX",classes,false,esControlTabla);
			}
			 else if(sTipo.equals("jComboBoxid_bodegaFK_IdBodegaDetalleConsignacion")) {
				this.procesarActionsCombosForeignKeyBodega(jComboBoxid_bodegaFK_IdBodegaDetalleConsignacion,"FK_IdBodega");
				//recargarFormDetalleConsignacionBodega(jComboBoxid_bodegaFK_IdBodegaDetalleConsignacion,"FK_IdBodega");
			}
				
				DetalleConsignacionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detalleconsignacion,new Object(),this.detalleconsignacionParameterGeneral,this.detalleconsignacionReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(DetalleConsignacion.class.getName());
				
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",DetalleConsignacion.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jComboBoxGenerico, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleConsignacionConstantesFunciones.CLASSNAME);
  		}
		
		*/
    }
	
	public void jComboBoxFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaDetalleConsignacionActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosDetalleConsignacion.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleconsignacionAnterior =(DetalleConsignacion) this.detalleconsignacionLogic.getDetalleConsignacions().toArray()[this.jTableDatosDetalleConsignacion.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.detalleconsignacionAnterior =(DetalleConsignacion) this.detalleconsignacions.toArray()[this.jTableDatosDetalleConsignacion.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleConsignacionConstantesFunciones.CLASSNAME);
  		}
    }		
	
	public void tableValueChangedGeneral(String sTipo,ListSelectionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				DetalleConsignacionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TABLE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detalleconsignacion,new Object(),this.detalleconsignacionParameterGeneral,this.detalleconsignacionReturnGeneral);
				
				if(sTipo.equals("TableDatosSeleccionarDetalleConsignacion")) {
					//BYDAN_DESHABILITADO
					//try {jTableDatosDetalleConsignacionListSelectionListener(e);}catch(Exception e1){e1.printStackTrace();}
					
					//SOLO CUANDO MOUSE ES SOLTADO
					if (!evt.getValueIsAdjusting()) {
						//SELECCIONA FILA A OBJETO ACTUAL
						Integer intSelectedRow = this.jTableDatosDetalleConsignacion.getSelectedRow();
						
						if(intSelectedRow!=null && intSelectedRow>-1) {
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								this.detalleconsignacion =(DetalleConsignacion) this.detalleconsignacionLogic.getDetalleConsignacions().toArray()[this.jTableDatosDetalleConsignacion.convertRowIndexToModel(intSelectedRow)];
							} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
								this.detalleconsignacion =(DetalleConsignacion) this.detalleconsignacions.toArray()[this.jTableDatosDetalleConsignacion.convertRowIndexToModel(intSelectedRow)];
							}
							//ARCHITECTURE
							
							//System.out.println(this.detalleconsignacion);
						}
					}
					
				} else if(sTipo.equals("jButtonCancelarDetalleConsignacion")) {
				
				}
				
				DetalleConsignacionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TABLE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detalleconsignacion,new Object(),this.detalleconsignacionParameterGeneral,this.detalleconsignacionReturnGeneral);
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleConsignacionConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void tableMouseAdapterGeneral(String sTipo,MouseEvent evt) { 	  
		try {
			DetalleConsignacionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TABLE,EventoTipo.MOUSE,EventoSubTipo.CLICKED,sTipo,this.detalleconsignacion,new Object(),this.detalleconsignacionParameterGeneral,this.detalleconsignacionReturnGeneral);
			
			if(sTipo.equals("DatosSeleccionarDetalleConsignacion")) {
				if (evt.getClickCount() == 2) {
					jButtonIdActionPerformed(null,jTableDatosDetalleConsignacion.getSelectedRow(),false,false);
				}	
			} else if(sTipo.equals("jButtonCancelarDetalleConsignacion")) {
			
			}
			
			DetalleConsignacionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TABLE,EventoTipo.MOUSE,EventoSubTipo.CLICKED,sTipo,this.detalleconsignacion,new Object(),this.detalleconsignacionParameterGeneral,this.detalleconsignacionReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleConsignacionConstantesFunciones.CLASSNAME);
  		}
    }
	
	;
	
	public void jButtonActionPerformedTecladoGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			this.startProcessDetalleConsignacion();
			
			DetalleConsignacionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.KEY,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.detalleconsignacion,new Object(),this.detalleconsignacionParameterGeneral,this.detalleconsignacionReturnGeneral);
			
			if(sTipo.equals("NuevoDetalleConsignacion")) {
				jButtonNuevoDetalleConsignacionActionPerformed(evt,false);
				
			} else if(sTipo.equals("DuplicarDetalleConsignacion")) {
				jButtonDuplicarDetalleConsignacionActionPerformed(evt,false);
				
			} else if(sTipo.equals("CopiarDetalleConsignacion")) {
				jButtonCopiarDetalleConsignacionActionPerformed(evt);
				
			} else if(sTipo.equals("VerFormDetalleConsignacion")) {
				jButtonVerFormDetalleConsignacionActionPerformed(evt);
				
			} else if(sTipo.equals("NuevoRelacionesDetalleConsignacion")) {
				jButtonNuevoDetalleConsignacionActionPerformed(evt,true);
				
			} else if(sTipo.equals("ModificarDetalleConsignacion")) {
				jButtonModificarDetalleConsignacionActionPerformed(evt);
				
			} else if(sTipo.equals("ActualizarDetalleConsignacion")) {
				jButtonActualizarDetalleConsignacionActionPerformed(evt);
				
			} else if(sTipo.equals("EliminarDetalleConsignacion")) {
				jButtonEliminarDetalleConsignacionActionPerformed(evt);
				
			} else if(sTipo.equals("GuardarCambiosTablaDetalleConsignacion")) {
				jButtonGuardarCambiosDetalleConsignacionActionPerformed(evt);
				
			} else if(sTipo.equals("CancelarDetalleConsignacion")) {
				jButtonCancelarDetalleConsignacionActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarDetalleConsignacion")) {
				jButtonCerrarDetalleConsignacionActionPerformed(evt);
				
			} else if(sTipo.equals("GuardarCambiosDetalleConsignacion")) {
				jButtonGuardarCambiosDetalleConsignacionActionPerformed(evt);
			
			} else if(sTipo.equals("NuevoGuardarCambiosDetalleConsignacion")) {
				jButtonNuevoGuardarCambiosDetalleConsignacionActionPerformed(evt);
			
			} else if(sTipo.equals("AbrirOrderByDetalleConsignacion")) {
				jButtonAbrirOrderByDetalleConsignacionActionPerformed(evt);
			
			} else if(sTipo.equals("RecargarInformacionDetalleConsignacion")) {
				jButtonRecargarInformacionDetalleConsignacionActionPerformed(evt);
			
			} else if(sTipo.equals("AnterioresDetalleConsignacion")) {
				jButtonAnterioresDetalleConsignacionActionPerformed(evt);			
			
			}  else if(sTipo.equals("SiguientesDetalleConsignacion")) {
				jButtonSiguientesDetalleConsignacionActionPerformed(evt);			
			} 
			
			
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("idDetalleConsignacionBusqueda")) {
				this.jButtonidDetalleConsignacionBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_empresaDetalleConsignacionUpdate")) {
				this.jButtonid_empresaDetalleConsignacionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_empresaDetalleConsignacionBusqueda")) {
				this.jButtonid_empresaDetalleConsignacionBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_sucursalDetalleConsignacionUpdate")) {
				this.jButtonid_sucursalDetalleConsignacionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_sucursalDetalleConsignacionBusqueda")) {
				this.jButtonid_sucursalDetalleConsignacionBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_ejercicioDetalleConsignacionUpdate")) {
				this.jButtonid_ejercicioDetalleConsignacionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_ejercicioDetalleConsignacionBusqueda")) {
				this.jButtonid_ejercicioDetalleConsignacionBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_periodoDetalleConsignacionUpdate")) {
				this.jButtonid_periodoDetalleConsignacionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_periodoDetalleConsignacionBusqueda")) {
				this.jButtonid_periodoDetalleConsignacionBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_anioDetalleConsignacionUpdate")) {
				this.jButtonid_anioDetalleConsignacionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_anioDetalleConsignacionBusqueda")) {
				this.jButtonid_anioDetalleConsignacionBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_mesDetalleConsignacionUpdate")) {
				this.jButtonid_mesDetalleConsignacionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_mesDetalleConsignacionBusqueda")) {
				this.jButtonid_mesDetalleConsignacionBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_consignacionDetalleConsignacionUpdate")) {
				this.jButtonid_consignacionDetalleConsignacionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_consignacionDetalleConsignacionBusqueda")) {
				this.jButtonid_consignacionDetalleConsignacionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_productoDetalleConsignacion")) {
				this.jButtonid_productoDetalleConsignacionActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_productoDetalleConsignacionUpdate")) {
				this.jButtonid_productoDetalleConsignacionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_productoDetalleConsignacionBusqueda")) {
				this.jButtonid_productoDetalleConsignacionBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_bodegaDetalleConsignacionUpdate")) {
				this.jButtonid_bodegaDetalleConsignacionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_bodegaDetalleConsignacionBusqueda")) {
				this.jButtonid_bodegaDetalleConsignacionBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_unidadDetalleConsignacionUpdate")) {
				this.jButtonid_unidadDetalleConsignacionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_unidadDetalleConsignacionBusqueda")) {
				this.jButtonid_unidadDetalleConsignacionBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_estado_detalle_pedidoDetalleConsignacionUpdate")) {
				this.jButtonid_estado_detalle_pedidoDetalleConsignacionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_estado_detalle_pedidoDetalleConsignacionBusqueda")) {
				this.jButtonid_estado_detalle_pedidoDetalleConsignacionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("cantidadDetalleConsignacionBusqueda")) {
				this.jButtoncantidadDetalleConsignacionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("precioDetalleConsignacionBusqueda")) {
				this.jButtonprecioDetalleConsignacionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("descuento_porcentajeDetalleConsignacionBusqueda")) {
				this.jButtondescuento_porcentajeDetalleConsignacionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("descuento_valorDetalleConsignacionBusqueda")) {
				this.jButtondescuento_valorDetalleConsignacionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("ivaDetalleConsignacionBusqueda")) {
				this.jButtonivaDetalleConsignacionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("totalDetalleConsignacionBusqueda")) {
				this.jButtontotalDetalleConsignacionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("iceDetalleConsignacionBusqueda")) {
				this.jButtoniceDetalleConsignacionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("costoDetalleConsignacionBusqueda")) {
				this.jButtoncostoDetalleConsignacionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("utilidadDetalleConsignacionBusqueda")) {
				this.jButtonutilidadDetalleConsignacionBusquedaActionPerformed(evt);
			}
			
			DetalleConsignacionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.KEY,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.detalleconsignacion,new Object(),this.detalleconsignacionParameterGeneral,this.detalleconsignacionReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleConsignacionConstantesFunciones.CLASSNAME);
			
  		}  finally {
      		this.finishProcessDetalleConsignacion();
      	}
    }
	
	public void internalFrameClosingInternalFrameGeneral(String sTipo,InternalFrameEvent evt) { 	  
		try {
			DetalleConsignacionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.WINDOW,EventoTipo.CLIC,EventoSubTipo.CLOSING,sTipo,this.detalleconsignacion,new Object(),this.detalleconsignacionParameterGeneral,this.detalleconsignacionReturnGeneral);
			
			if(sTipo.equals("CloseInternalFrameDetalleConsignacion")) {
				closingInternalFrameDetalleConsignacion();
				
			} else if(sTipo.equals("jButtonCancelarDetalleConsignacion")) {
				JInternalFrameBase jInternalFrameDetalleFormDetalleConsignacion = (JInternalFrameBase)evt.getSource();
	            	
	            DetalleConsignacionBeanSwingJInternalFrame jInternalFrameParent=(DetalleConsignacionBeanSwingJInternalFrame)jInternalFrameDetalleFormDetalleConsignacion.getjInternalFrameParent();
	            
				jInternalFrameParent.jButtonCancelarDetalleConsignacionActionPerformed(null);
			}
			
			DetalleConsignacionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.WINDOW,EventoTipo.CLIC,EventoSubTipo.CLOSING,sTipo,this.detalleconsignacion,new Object(),this.detalleconsignacionParameterGeneral,this.detalleconsignacionReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleConsignacionConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void recargarFormDetalleConsignacion(String sTipo,String sDominio,EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,String sTipoGeneral,ArrayList<Classe> classes,Boolean conIrServidorAplicacion) throws Exception {
		this.recargarFormDetalleConsignacion(sTipo,sDominio,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipoGeneral,classes,conIrServidorAplicacion,false);
	}
	
	public void recargarFormDetalleConsignacion(String sTipo,String sDominio,EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,String sTipoGeneral,ArrayList<Classe> classes,Boolean conIrServidorAplicacion,Boolean esControlTabla) throws Exception {
		if(this.permiteRecargarForm && this.permiteMantenimiento(this.detalleconsignacion)) {
			if(!esControlTabla) {
				if(DetalleConsignacionJInternalFrame.ISBINDING_MANUAL_TABLA) {			
					this.setVariablesFormularioToObjetoActualDetalleConsignacion(this.detalleconsignacion,true,false);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleConsignacion(this.detalleconsignacion);			
				}
				
				if(this.detalleconsignacionSessionBean.getEstaModoGuardarRelaciones()) {
					this.setVariablesFormularioRelacionesToObjetoActualDetalleConsignacion(this.detalleconsignacion,classes);				
				}
			
				if(conIrServidorAplicacion) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {						
						this.detalleconsignacionReturnGeneral=detalleconsignacionLogic.procesarEventosDetalleConsignacionsWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.detalleconsignacionLogic.getDetalleConsignacions(),this.detalleconsignacion,this.detalleconsignacionParameterGeneral,this.isEsNuevoDetalleConsignacion,classes);//this.detalleconsignacionLogic.getDetalleConsignacion()//sTipoGeneral
									
					} else if(Constantes.ISUSAEJBREMOTE) {
									
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE
					
					//ACTUALIZA VARIABLES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
					//this.setVariablesObjetoReturnGeneralToBeanDetalleConsignacion(this.detalleconsignacionReturnGeneral,this.detalleconsignacionBean,false);
						
					//ACTUALIZA VARIABLES RELACIONES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
					if(this.detalleconsignacionSessionBean.getEstaModoGuardarRelaciones()) {
						//this.setVariablesRelacionesObjetoReturnGeneralToBeanDetalleConsignacion(classes,this.detalleconsignacionReturnGeneral,this.detalleconsignacionBean,false);
					}
						
					if(this.detalleconsignacionReturnGeneral.getConRecargarPropiedades()) {
						//INICIALIZA VARIABLES COMBOS NORMALES (FK)
						this.setVariablesObjetoActualToFormularioForeignKeyDetalleConsignacion(this.detalleconsignacionReturnGeneral.getDetalleConsignacion());
							
						//INICIALIZA VARIABLES NORMALES A FORMULARIO(SIN FK)
						this.setVariablesObjetoActualToFormularioDetalleConsignacion(this.detalleconsignacionReturnGeneral.getDetalleConsignacion());	
					}
						
					if(this.detalleconsignacionReturnGeneral.getConRecargarRelaciones()) {
						//INICIALIZA VARIABLES RELACIONES A FORMULARIO
						this.setVariablesRelacionesObjetoActualToFormularioDetalleConsignacion(this.detalleconsignacionReturnGeneral.getDetalleConsignacion(),classes);//this.detalleconsignacionBean);	
					}									
					
				} else {				
					//INICIALIZA VARIABLES RELACIONES A FORMULARIO
					this.setVariablesRelacionesObjetoActualToFormularioDetalleConsignacion(this.detalleconsignacion,classes);//this.detalleconsignacionBean);									
				}
			
				if(DetalleConsignacionJInternalFrame.ISBINDING_MANUAL_TABLA) {
					this.setVariablesFormularioToObjetoActualDetalleConsignacion(this.detalleconsignacion,true,false);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleConsignacion(this.detalleconsignacion);				
				}
				
			} else {
				
				if(((controlTipo.equals(ControlTipo.TEXTBOX) || controlTipo.equals(ControlTipo.DATE)
					|| controlTipo.equals(ControlTipo.TEXTAREA) || controlTipo.equals(ControlTipo.COMBOBOX)
					)				
					&& eventoTipo.equals(EventoTipo.CHANGE)
					)
					
					|| (controlTipo.equals(ControlTipo.CHECKBOX) && eventoTipo.equals(EventoTipo.CLIC))
					
				) { // && sTipoGeneral.equals("TEXTBOX")
					
					if(this.detalleconsignacionAnterior!=null) {
						this.detalleconsignacion=this.detalleconsignacionAnterior;
					}
				}
				
				if(conIrServidorAplicacion) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {						
						this.detalleconsignacionReturnGeneral=detalleconsignacionLogic.procesarEventosDetalleConsignacionsWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.detalleconsignacionLogic.getDetalleConsignacions(),this.detalleconsignacion,this.detalleconsignacionParameterGeneral,this.isEsNuevoDetalleConsignacion,classes);//this.detalleconsignacionLogic.getDetalleConsignacion()//sTipoGeneral
									
					} else if(Constantes.ISUSAEJBREMOTE) {
									
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//NO ENTENDIBLE PORQUE PONER
					//if(this.detalleconsignacionSessionBean.getEstaModoGuardarRelaciones() 
					//	|| this.detalleconsignacionSessionBean.getEsGuardarRelacionado())	{
						actualizarLista(this.detalleconsignacionReturnGeneral.getDetalleConsignacion(),detalleconsignacionLogic.getDetalleConsignacions());
					//}
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(this.detalleconsignacionReturnGeneral.getDetalleConsignacion(),this.detalleconsignacions);
				}
				//ARCHITECTURE
				
				//this.jTableDatosDetalleConsignacion.repaint();
				
				//((AbstractTableModel) this.jTableDatosDetalleConsignacion.getModel()).fireTableDataChanged();
				
				this.actualizarVisualTableDatosDetalleConsignacion();
			}
		}
	}
	
	public void actualizarVisualTableDatosDetalleConsignacion() throws Exception {
		
		DetalleConsignacionModel detalleconsignacionModel=(DetalleConsignacionModel)this.jTableDatosDetalleConsignacion.getModel();
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			detalleconsignacionModel.detalleconsignacions=this.detalleconsignacionLogic.getDetalleConsignacions();
		
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
			detalleconsignacionModel.detalleconsignacions=this.detalleconsignacions;
		}
		
		
		((DetalleConsignacionModel) this.jTableDatosDetalleConsignacion.getModel()).fireTableDataChanged();
	}
	
	public void actualizarVisualTableDatosEventosVistaDetalleConsignacion() throws Exception {
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.actualizarLista(this.getdetalleconsignacionAnterior(),this.detalleconsignacionLogic.getDetalleConsignacions());
					
		} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
			this.actualizarLista(this.getdetalleconsignacionAnterior(),this.detalleconsignacions);
		}
		//ARCHITECTURE
						
		this.actualizarFilaTotales();
						
		this.actualizarVisualTableDatosDetalleConsignacion();	
	}
	
	public void setVariablesRelacionesObjetoActualToFormularioDetalleConsignacion(DetalleConsignacion detalleconsignacion,ArrayList<Classe> classes) throws Exception { 
		try {
			
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleConsignacionConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setEventoParentGeneral(Boolean esUsoDesdeHijo,String sDominio,String sDominioTipo,String sTipo,String sTipoGeneral,Boolean esControlTabla,Boolean conIrServidorAplicacion,
						Long id,Component control, EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,ArrayList<String> arrClasses,
						Object evt,GeneralEntityParameterReturnGeneral generalEntityParameterGeneral,Object otro) { 	  
		try {
			
			if(this.permiteManejarEventosControl()) {
				
				//BASE COPIADO DESDE TEXTFIELLOSTFOCUS
				
				//EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				Boolean conTodasRelaciones=false;
				
				this.esUsoDesdeHijo=esUsoDesdeHijo;
										
				DetalleConsignacionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.detalleconsignacion,new Object(),generalEntityParameterGeneral,this.detalleconsignacionReturnGeneral);
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				for(String sClasse:arrClasses) {
					if(sClasse.equals("TODOS")) {
						conTodasRelaciones=true;
						break;
					}
				}
				
				if(this.detalleconsignacionSessionBean.getConGuardarRelaciones()) {
					if(conTodasRelaciones) {
						classes=DetalleConsignacionConstantesFunciones.getClassesRelationshipsOfDetalleConsignacion(new ArrayList<Classe>(),DeepLoadType.NONE);
					} else {
						classes=DetalleConsignacionConstantesFunciones.getClassesRelationshipsFromStringsOfDetalleConsignacion(arrClasses,DeepLoadType.NONE);
					}
				}
	
				this.classesActual=new ArrayList<Classe>();
				this.classesActual.addAll(classes);
	
				this.recargarFormDetalleConsignacion(sTipo,sDominio,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipoGeneral,classes,conIrServidorAplicacion,esControlTabla);
										
				DetalleConsignacionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.detalleconsignacion,new Object(),generalEntityParameterGeneral,this.detalleconsignacionReturnGeneral);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleConsignacionConstantesFunciones.CLASSNAME);
  		}
    }
	
	/*
	public void setVariablesRelacionesObjetoBeanActualToFormularioDetalleConsignacion(DetalleConsignacionBean detalleconsignacionBean) throws Exception { 
		try {
			
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleConsignacionConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesRelacionesObjetoReturnGeneralToBeanDetalleConsignacion(ArrayList<Classe> classes,DetalleConsignacionReturnGeneral detalleconsignacionReturnGeneral,DetalleConsignacionBean detalleconsignacionBean,Boolean conDefault) throws Exception {
		
	}
	*/
	
	public void setVariablesFormularioRelacionesToObjetoActualDetalleConsignacion(DetalleConsignacion detalleconsignacion,ArrayList<Classe> classes) throws Exception {
		
	}
	
	public Boolean permiteManejarEventosControl() {
		Boolean permite=true;				
		
		if(this.estaModoNuevo || this.estaModoSeleccionar || this.estaModoEliminarGuardarCambios) {
			permite=false;
			
		} 
		
		//NO DEBE MEZCLARSE CONCEPTOS
		/*	
		if(!paraTabla && !this.permiteMantenimiento(this.detalleconsignacion)) {
			System.out.println("ERROR:EL OBJETO ACTUAL NO PUEDE SER FILA TOTALES");
				
			//JOptionPane.showMessageDialog(this,"EL OBJETO ACTUAL NO PUEDE SER FILA TOTALES","EVENTO",JOptionPane.ERROR_MESSAGE);			
		}
		*/
		
		return permite;
	}
	
	public void inicializarFormDetalle() throws Exception {
		
		this.jInternalFrameDetalleFormDetalleConsignacion = new DetalleConsignacionDetalleFormJInternalFrame(jDesktopPane,this.detalleconsignacionSessionBean.getConGuardarRelaciones(),this.detalleconsignacionSessionBean.getEsGuardarRelacionado(),this.cargarRelaciones,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo);
		
		this.jDesktopPane.add(this.jInternalFrameDetalleFormDetalleConsignacion);
		this.jInternalFrameDetalleFormDetalleConsignacion.setVisible(false);
		this.jInternalFrameDetalleFormDetalleConsignacion.setSelected(false);						
		
		this.jInternalFrameDetalleFormDetalleConsignacion.setJInternalFrameParent(this);
		
		this.jInternalFrameDetalleFormDetalleConsignacion.detalleconsignacionLogic=this.detalleconsignacionLogic;
		
		this.cargarCombosFrameForeignKeyDetalleConsignacion("Formulario");
		
		this.inicializarActualizarBindingBotonesPermisosManualFormDetalleDetalleConsignacion();
		this.inicializarActualizarBindingtiposArchivosReportesAccionesManualFormDetalleDetalleConsignacion();
		
		this.initActionsFormDetalle();		
		
		this.initActionsCombosTodosForeignKeyDetalleConsignacion("Formulario");
		
		//TALVEZ conSetVariablesGlobales COMO if() 
		this.setVariablesGlobalesCombosForeignKeyDetalleConsignacion();
		
		this.cargarMenuRelaciones();
		
	}
	
	public void initActionsFormDetalle() {	
		
		this.jInternalFrameDetalleFormDetalleConsignacion.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"jButtonCancelarDetalleConsignacion"));
		
		this.jInternalFrameDetalleFormDetalleConsignacion.jButtonModificarDetalleConsignacion.addActionListener(new ButtonActionListener(this,"ModificarDetalleConsignacion"));

		
		this.jInternalFrameDetalleFormDetalleConsignacion.jButtonModificarToolBarDetalleConsignacion.addActionListener(new ButtonActionListener(this,"ModificarToolBarDetalleConsignacion"));
					
		this.jInternalFrameDetalleFormDetalleConsignacion.jMenuItemModificarDetalleConsignacion.addActionListener(new ButtonActionListener(this,"MenuItemModificarDetalleConsignacion"));		
		
		
		
		this.jInternalFrameDetalleFormDetalleConsignacion.jButtonActualizarDetalleConsignacion.addActionListener (new ButtonActionListener(this,"ActualizarDetalleConsignacion"));
		
		
		this.jInternalFrameDetalleFormDetalleConsignacion.jButtonActualizarToolBarDetalleConsignacion.addActionListener(new ButtonActionListener(this,"ActualizarToolBarDetalleConsignacion"));
						
		this.jInternalFrameDetalleFormDetalleConsignacion.jMenuItemActualizarDetalleConsignacion.addActionListener (new ButtonActionListener(this,"MenuItemActualizarDetalleConsignacion"));		
		
		
		
		this.jInternalFrameDetalleFormDetalleConsignacion.jButtonEliminarDetalleConsignacion.addActionListener (new ButtonActionListener(this,"EliminarDetalleConsignacion"));
		
		
		this.jInternalFrameDetalleFormDetalleConsignacion.jButtonEliminarToolBarDetalleConsignacion.addActionListener (new ButtonActionListener(this,"EliminarToolBarDetalleConsignacion"));
								
		this.jInternalFrameDetalleFormDetalleConsignacion.jMenuItemEliminarDetalleConsignacion.addActionListener (new ButtonActionListener(this,"MenuItemEliminarDetalleConsignacion"));		
		
		
		
		this.jInternalFrameDetalleFormDetalleConsignacion.jButtonCancelarDetalleConsignacion.addActionListener (new ButtonActionListener(this,"CancelarDetalleConsignacion"));
		
		
		this.jInternalFrameDetalleFormDetalleConsignacion.jButtonCancelarToolBarDetalleConsignacion.addActionListener (new ButtonActionListener(this,"CancelarToolBarDetalleConsignacion"));
					
		this.jInternalFrameDetalleFormDetalleConsignacion.jMenuItemCancelarDetalleConsignacion.addActionListener (new ButtonActionListener(this,"MenuItemCancelarDetalleConsignacion"));		
		
		
		
		
		
		this.jInternalFrameDetalleFormDetalleConsignacion.jMenuItemDetalleCerrarDetalleConsignacion.addActionListener (new ButtonActionListener(this,"MenuItemDetalleCerrarDetalleConsignacion"));		
		
		
		
		this.jInternalFrameDetalleFormDetalleConsignacion.jButtonGuardarCambiosToolBarDetalleConsignacion.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarDetalleConsignacion"));
		
		
		
		this.jInternalFrameDetalleFormDetalleConsignacion.jButtonGuardarCambiosToolBarDetalleConsignacion.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarDetalleConsignacion"));
		
		
		
		this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxTiposAccionesFormularioDetalleConsignacion.addActionListener (new ButtonActionListener(this,"TiposAccionesFormularioDetalleConsignacion"));
		
		
		//CAMPO EVENTO
		this.jInternalFrameDetalleFormDetalleConsignacion.jTextFieldcantidadDetalleConsignacion.addFocusListener(new TextFieldFocusListener(this,"cantidadDetalleConsignacion"));
		this.jInternalFrameDetalleFormDetalleConsignacion.jTextFieldcantidadDetalleConsignacion.addActionListener(new TextFieldActionListener(this,"cantidadDetalleConsignacion"));
		//this.jInternalFrameDetalleFormDetalleConsignacion.jTextFieldcantidadDetalleConsignacion.getDocument().addDocumentListener(new TextFieldDocumentListener(this,this.jTextFieldcantidadDetalleConsignacion,"cantidadDetalleConsignacion"));


				
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleConsignacion.jButtonidDetalleConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"idDetalleConsignacionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleConsignacion.jButtonid_empresaDetalleConsignacionUpdate.addActionListener(new ButtonActionListener(this,"id_empresaDetalleConsignacionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleConsignacion.jButtonid_empresaDetalleConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"id_empresaDetalleConsignacionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleConsignacion.jButtonid_sucursalDetalleConsignacionUpdate.addActionListener(new ButtonActionListener(this,"id_sucursalDetalleConsignacionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleConsignacion.jButtonid_sucursalDetalleConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"id_sucursalDetalleConsignacionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleConsignacion.jButtonid_ejercicioDetalleConsignacionUpdate.addActionListener(new ButtonActionListener(this,"id_ejercicioDetalleConsignacionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleConsignacion.jButtonid_ejercicioDetalleConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"id_ejercicioDetalleConsignacionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleConsignacion.jButtonid_periodoDetalleConsignacionUpdate.addActionListener(new ButtonActionListener(this,"id_periodoDetalleConsignacionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleConsignacion.jButtonid_periodoDetalleConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"id_periodoDetalleConsignacionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleConsignacion.jButtonid_anioDetalleConsignacionUpdate.addActionListener(new ButtonActionListener(this,"id_anioDetalleConsignacionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleConsignacion.jButtonid_anioDetalleConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"id_anioDetalleConsignacionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleConsignacion.jButtonid_mesDetalleConsignacionUpdate.addActionListener(new ButtonActionListener(this,"id_mesDetalleConsignacionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleConsignacion.jButtonid_mesDetalleConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"id_mesDetalleConsignacionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleConsignacion.jButtonid_consignacionDetalleConsignacionUpdate.addActionListener(new ButtonActionListener(this,"id_consignacionDetalleConsignacionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleConsignacion.jButtonid_consignacionDetalleConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"id_consignacionDetalleConsignacionBusqueda"));
		//jButtonid_productoDetalleConsignacion.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_productoDetalleConsignacionActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormDetalleConsignacion.jButtonid_productoDetalleConsignacion.addActionListener(new ButtonActionListener(this,"id_productoDetalleConsignacion"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleConsignacion.jButtonid_productoDetalleConsignacionUpdate.addActionListener(new ButtonActionListener(this,"id_productoDetalleConsignacionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleConsignacion.jButtonid_productoDetalleConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"id_productoDetalleConsignacionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleConsignacion.jButtonid_bodegaDetalleConsignacionUpdate.addActionListener(new ButtonActionListener(this,"id_bodegaDetalleConsignacionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleConsignacion.jButtonid_bodegaDetalleConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"id_bodegaDetalleConsignacionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleConsignacion.jButtonid_unidadDetalleConsignacionUpdate.addActionListener(new ButtonActionListener(this,"id_unidadDetalleConsignacionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleConsignacion.jButtonid_unidadDetalleConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"id_unidadDetalleConsignacionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleConsignacion.jButtonid_estado_detalle_pedidoDetalleConsignacionUpdate.addActionListener(new ButtonActionListener(this,"id_estado_detalle_pedidoDetalleConsignacionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleConsignacion.jButtonid_estado_detalle_pedidoDetalleConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"id_estado_detalle_pedidoDetalleConsignacionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleConsignacion.jButtoncantidadDetalleConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"cantidadDetalleConsignacionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleConsignacion.jButtonprecioDetalleConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"precioDetalleConsignacionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleConsignacion.jButtondescuento_porcentajeDetalleConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"descuento_porcentajeDetalleConsignacionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleConsignacion.jButtondescuento_valorDetalleConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"descuento_valorDetalleConsignacionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleConsignacion.jButtonivaDetalleConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"ivaDetalleConsignacionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleConsignacion.jButtontotalDetalleConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"totalDetalleConsignacionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleConsignacion.jButtoniceDetalleConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"iceDetalleConsignacionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleConsignacion.jButtoncostoDetalleConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"costoDetalleConsignacionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleConsignacion.jButtonutilidadDetalleConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"utilidadDetalleConsignacionBusqueda"));
		
		
		;

		//TABBED PANE RELACIONES
		this.jInternalFrameDetalleFormDetalleConsignacion.jTabbedPaneRelacionesDetalleConsignacion.addChangeListener(new TabbedPaneChangeListener(this,"RelacionesDetalleConsignacion"));
		
		;		
		//TABBED PANE RELACIONES FIN(EXTRA TAB)	
	}
	
	public void initActions() {				
		this.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"CloseInternalFrameDetalleConsignacion"));
		
		if(this.jInternalFrameDetalleFormDetalleConsignacion!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetalleConsignacion.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"jButtonCancelarDetalleConsignacion"));
		}
		
		this.jTableDatosDetalleConsignacion.getSelectionModel().addListSelectionListener(new TableListSelectionListener(this,"TableDatosSeleccionarDetalleConsignacion"));
		
		this.jTableDatosDetalleConsignacion.addMouseListener(new TableMouseAdapter(this,"DatosSeleccionarDetalleConsignacion"));
		
		this.jButtonNuevoDetalleConsignacion.addActionListener(new ButtonActionListener(this,"NuevoDetalleConsignacion"));
		
		this.jButtonDuplicarDetalleConsignacion.addActionListener(new ButtonActionListener(this,"DuplicarDetalleConsignacion"));
		
		this.jButtonCopiarDetalleConsignacion.addActionListener(new ButtonActionListener(this,"CopiarDetalleConsignacion"));
		
		this.jButtonVerFormDetalleConsignacion.addActionListener(new ButtonActionListener(this,"VerFormDetalleConsignacion"));
		
		
		this.jButtonNuevoToolBarDetalleConsignacion.addActionListener(new ButtonActionListener(this,"NuevoToolBarDetalleConsignacion"));
			
		this.jButtonDuplicarToolBarDetalleConsignacion.addActionListener(new ButtonActionListener(this,"DuplicarToolBarDetalleConsignacion"));
			
		this.jMenuItemNuevoDetalleConsignacion.addActionListener (new ButtonActionListener(this,"MenuItemNuevoDetalleConsignacion"));
			
		this.jMenuItemDuplicarDetalleConsignacion.addActionListener (new ButtonActionListener(this,"MenuItemDuplicarDetalleConsignacion"));		
		
		
		this.jButtonNuevoRelacionesDetalleConsignacion.addActionListener (new ButtonActionListener(this,"NuevoRelacionesDetalleConsignacion"));
		
		
		this.jButtonNuevoRelacionesToolBarDetalleConsignacion.addActionListener(new ButtonActionListener(this,"NuevoRelacionesToolBarDetalleConsignacion"));
			
		this.jMenuItemNuevoRelacionesDetalleConsignacion.addActionListener(new ButtonActionListener(this,"MenuItemNuevoRelacionesDetalleConsignacion"));		
		
		
		if(this.jInternalFrameDetalleFormDetalleConsignacion!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetalleConsignacion.jButtonModificarDetalleConsignacion.addActionListener(new ButtonActionListener(this,"ModificarDetalleConsignacion"));
		}
		
		
		if(this.jInternalFrameDetalleFormDetalleConsignacion!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetalleConsignacion.jButtonModificarToolBarDetalleConsignacion.addActionListener(new ButtonActionListener(this,"ModificarToolBarDetalleConsignacion"));
			
			this.jInternalFrameDetalleFormDetalleConsignacion.jMenuItemModificarDetalleConsignacion.addActionListener(new ButtonActionListener(this,"MenuItemModificarDetalleConsignacion"));		
		}
		
		
		if(this.jInternalFrameDetalleFormDetalleConsignacion!=null) { //if(this.conCargarFormDetalle) {			
			this.jInternalFrameDetalleFormDetalleConsignacion.jButtonActualizarDetalleConsignacion.addActionListener (new ButtonActionListener(this,"ActualizarDetalleConsignacion"));
		}
		
		
		if(this.jInternalFrameDetalleFormDetalleConsignacion!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetalleConsignacion.jButtonActualizarToolBarDetalleConsignacion.addActionListener(new ButtonActionListener(this,"ActualizarToolBarDetalleConsignacion"));
				
			this.jInternalFrameDetalleFormDetalleConsignacion.jMenuItemActualizarDetalleConsignacion.addActionListener (new ButtonActionListener(this,"MenuItemActualizarDetalleConsignacion"));		
		}
		
		
		if(this.jInternalFrameDetalleFormDetalleConsignacion!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetalleConsignacion.jButtonEliminarDetalleConsignacion.addActionListener (new ButtonActionListener(this,"EliminarDetalleConsignacion"));
		}
		
		
		if(this.jInternalFrameDetalleFormDetalleConsignacion!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetalleConsignacion.jButtonEliminarToolBarDetalleConsignacion.addActionListener (new ButtonActionListener(this,"EliminarToolBarDetalleConsignacion"));
						
			this.jInternalFrameDetalleFormDetalleConsignacion.jMenuItemEliminarDetalleConsignacion.addActionListener (new ButtonActionListener(this,"MenuItemEliminarDetalleConsignacion"));		
		}
		
		
		if(this.jInternalFrameDetalleFormDetalleConsignacion!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetalleConsignacion.jButtonCancelarDetalleConsignacion.addActionListener (new ButtonActionListener(this,"CancelarDetalleConsignacion"));
		}
		
		
		if(this.jInternalFrameDetalleFormDetalleConsignacion!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetalleConsignacion.jButtonCancelarToolBarDetalleConsignacion.addActionListener (new ButtonActionListener(this,"CancelarToolBarDetalleConsignacion"));
			
			this.jInternalFrameDetalleFormDetalleConsignacion.jMenuItemCancelarDetalleConsignacion.addActionListener (new ButtonActionListener(this,"MenuItemCancelarDetalleConsignacion"));		
		}
		
		this.jButtonMostrarOcultarTablaToolBarDetalleConsignacion.addActionListener (new ButtonActionListener(this,"MostrarOcultarToolBarDetalleConsignacion"));		
		
		
		this.jButtonCerrarDetalleConsignacion.addActionListener (new ButtonActionListener(this,"CerrarDetalleConsignacion"));
		
		
		this.jButtonCerrarToolBarDetalleConsignacion.addActionListener (new ButtonActionListener(this,"CerrarToolBarDetalleConsignacion"));
			
		this.jMenuItemCerrarDetalleConsignacion.addActionListener (new ButtonActionListener(this,"MenuItemCerrarDetalleConsignacion"));
			
		if(this.jInternalFrameDetalleFormDetalleConsignacion!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetalleConsignacion.jMenuItemDetalleCerrarDetalleConsignacion.addActionListener (new ButtonActionListener(this,"MenuItemDetalleCerrarDetalleConsignacion"));		
		}
		
		
		if(this.jInternalFrameDetalleFormDetalleConsignacion!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetalleConsignacion.jButtonGuardarCambiosDetalleConsignacion.addActionListener (new ButtonActionListener(this,"GuardarCambiosDetalleConsignacion"));
		}
		
		
		if(this.jInternalFrameDetalleFormDetalleConsignacion!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetalleConsignacion.jButtonGuardarCambiosToolBarDetalleConsignacion.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarDetalleConsignacion"));
		}
		
		this.jButtonCopiarToolBarDetalleConsignacion.addActionListener (new ButtonActionListener(this,"CopiarToolBarDetalleConsignacion"));
			
		this.jButtonVerFormToolBarDetalleConsignacion.addActionListener (new ButtonActionListener(this,"VerFormToolBarDetalleConsignacion"));
		
		this.jMenuItemGuardarCambiosDetalleConsignacion.addActionListener (new ButtonActionListener(this,"MenuItemGuardarCambiosDetalleConsignacion"));
			
		this.jMenuItemCopiarDetalleConsignacion.addActionListener (new ButtonActionListener(this,"MenuItemCopiarDetalleConsignacion"));		
		
		this.jMenuItemVerFormDetalleConsignacion.addActionListener (new ButtonActionListener(this,"MenuItemVerFormDetalleConsignacion"));		
		
		
		this.jButtonGuardarCambiosTablaDetalleConsignacion.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaDetalleConsignacion"));
		
		
		this.jButtonGuardarCambiosTablaToolBarDetalleConsignacion.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaToolBarDetalleConsignacion"));
			
		this.jMenuItemGuardarCambiosTablaDetalleConsignacion.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaDetalleConsignacion"));		
		
		
		
		this.jButtonRecargarInformacionDetalleConsignacion.addActionListener (new ButtonActionListener(this,"RecargarInformacionDetalleConsignacion"));
					
		this.jButtonRecargarInformacionToolBarDetalleConsignacion.addActionListener (new ButtonActionListener(this,"RecargarInformacionToolBarDetalleConsignacion"));
		
		this.jMenuItemRecargarInformacionDetalleConsignacion.addActionListener (new ButtonActionListener(this,"MenuItemRecargarInformacionDetalleConsignacion"));		
		
		
		
		this.jButtonAnterioresDetalleConsignacion.addActionListener (new ButtonActionListener(this,"AnterioresDetalleConsignacion"));
		
		
		this.jButtonAnterioresToolBarDetalleConsignacion.addActionListener (new ButtonActionListener(this,"AnterioresToolBarDetalleConsignacion"));
		
		this.jMenuItemAnterioresDetalleConsignacion.addActionListener (new ButtonActionListener(this,"MenuItemAnterioresDetalleConsignacion"));		
		
		
		this.jButtonSiguientesDetalleConsignacion.addActionListener (new ButtonActionListener(this,"SiguientesDetalleConsignacion"));
		
		
		this.jButtonSiguientesToolBarDetalleConsignacion.addActionListener (new ButtonActionListener(this,"SiguientesToolBarDetalleConsignacion"));
			
		this.jMenuItemSiguientesDetalleConsignacion.addActionListener (new ButtonActionListener(this,"MenuItemSiguientesDetalleConsignacion"));
			
		this.jMenuItemAbrirOrderByDetalleConsignacion.addActionListener (new ButtonActionListener(this,"MenuItemAbrirOrderByDetalleConsignacion"));
			
		this.jMenuItemMostrarOcultarDetalleConsignacion.addActionListener (new ButtonActionListener(this,"MenuItemMostrarOcultarDetalleConsignacion"));
			
		this.jMenuItemDetalleAbrirOrderByDetalleConsignacion.addActionListener (new ButtonActionListener(this,"MenuItemDetalleAbrirOrderByDetalleConsignacion"));
			
		this.jMenuItemDetalleMostarOcultarDetalleConsignacion.addActionListener (new ButtonActionListener(this,"MenuItemDetalleMostrarOcultarDetalleConsignacion"));		
		
		
		this.jButtonNuevoGuardarCambiosDetalleConsignacion.addActionListener (new ButtonActionListener(this,"NuevoGuardarCambiosDetalleConsignacion"));
		
		
		this.jButtonNuevoGuardarCambiosToolBarDetalleConsignacion.addActionListener (new ButtonActionListener(this,"NuevoGuardarCambiosToolBarDetalleConsignacion"));
			
		this.jMenuItemNuevoGuardarCambiosDetalleConsignacion.addActionListener (new ButtonActionListener(this,"MenuItemNuevoGuardarCambiosDetalleConsignacion"));		
		
		
		
		//SELECCIONAR TODOS
		
		this.jCheckBoxSeleccionarTodosDetalleConsignacion.addItemListener(new CheckBoxItemListener(this,"SeleccionarTodosDetalleConsignacion"));

		this.jCheckBoxSeleccionadosDetalleConsignacion.addItemListener(new CheckBoxItemListener(this,"SeleccionadosDetalleConsignacion"));
		
		if(this.jInternalFrameDetalleFormDetalleConsignacion!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxTiposAccionesFormularioDetalleConsignacion.addActionListener (new ButtonActionListener(this,"TiposAccionesFormularioDetalleConsignacion"));
		}
		
		
		this.jComboBoxTiposRelacionesDetalleConsignacion.addActionListener (new ButtonActionListener(this,"TiposRelacionesDetalleConsignacion"));
			
		this.jComboBoxTiposAccionesDetalleConsignacion.addActionListener (new ButtonActionListener(this,"TiposAccionesDetalleConsignacion"));
					
		this.jComboBoxTiposSeleccionarDetalleConsignacion.addActionListener (new ButtonActionListener(this,"TiposSeleccionarDetalleConsignacion"));
			
		this.jTextFieldValorCampoGeneralDetalleConsignacion.addActionListener (new ButtonActionListener(this,"ValorCampoGeneralDetalleConsignacion"));		
		
		
		if(this.jInternalFrameDetalleFormDetalleConsignacion!=null) { //if(this.conCargarFormDetalle) {
		
		//CAMPO EVENTO
		this.jInternalFrameDetalleFormDetalleConsignacion.jTextFieldcantidadDetalleConsignacion.addFocusListener(new TextFieldFocusListener(this,"cantidadDetalleConsignacion"));
		this.jInternalFrameDetalleFormDetalleConsignacion.jTextFieldcantidadDetalleConsignacion.addActionListener(new TextFieldActionListener(this,"cantidadDetalleConsignacion"));
		//this.jInternalFrameDetalleFormDetalleConsignacion.jTextFieldcantidadDetalleConsignacion.getDocument().addDocumentListener(new TextFieldDocumentListener(this,this.jTextFieldcantidadDetalleConsignacion,"cantidadDetalleConsignacion"));


		
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleConsignacion.jButtonidDetalleConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"idDetalleConsignacionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleConsignacion.jButtonid_empresaDetalleConsignacionUpdate.addActionListener(new ButtonActionListener(this,"id_empresaDetalleConsignacionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleConsignacion.jButtonid_empresaDetalleConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"id_empresaDetalleConsignacionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleConsignacion.jButtonid_sucursalDetalleConsignacionUpdate.addActionListener(new ButtonActionListener(this,"id_sucursalDetalleConsignacionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleConsignacion.jButtonid_sucursalDetalleConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"id_sucursalDetalleConsignacionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleConsignacion.jButtonid_ejercicioDetalleConsignacionUpdate.addActionListener(new ButtonActionListener(this,"id_ejercicioDetalleConsignacionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleConsignacion.jButtonid_ejercicioDetalleConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"id_ejercicioDetalleConsignacionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleConsignacion.jButtonid_periodoDetalleConsignacionUpdate.addActionListener(new ButtonActionListener(this,"id_periodoDetalleConsignacionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleConsignacion.jButtonid_periodoDetalleConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"id_periodoDetalleConsignacionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleConsignacion.jButtonid_anioDetalleConsignacionUpdate.addActionListener(new ButtonActionListener(this,"id_anioDetalleConsignacionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleConsignacion.jButtonid_anioDetalleConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"id_anioDetalleConsignacionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleConsignacion.jButtonid_mesDetalleConsignacionUpdate.addActionListener(new ButtonActionListener(this,"id_mesDetalleConsignacionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleConsignacion.jButtonid_mesDetalleConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"id_mesDetalleConsignacionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleConsignacion.jButtonid_consignacionDetalleConsignacionUpdate.addActionListener(new ButtonActionListener(this,"id_consignacionDetalleConsignacionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleConsignacion.jButtonid_consignacionDetalleConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"id_consignacionDetalleConsignacionBusqueda"));
		//jButtonid_productoDetalleConsignacion.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_productoDetalleConsignacionActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormDetalleConsignacion.jButtonid_productoDetalleConsignacion.addActionListener(new ButtonActionListener(this,"id_productoDetalleConsignacion"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleConsignacion.jButtonid_productoDetalleConsignacionUpdate.addActionListener(new ButtonActionListener(this,"id_productoDetalleConsignacionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleConsignacion.jButtonid_productoDetalleConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"id_productoDetalleConsignacionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleConsignacion.jButtonid_bodegaDetalleConsignacionUpdate.addActionListener(new ButtonActionListener(this,"id_bodegaDetalleConsignacionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleConsignacion.jButtonid_bodegaDetalleConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"id_bodegaDetalleConsignacionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleConsignacion.jButtonid_unidadDetalleConsignacionUpdate.addActionListener(new ButtonActionListener(this,"id_unidadDetalleConsignacionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleConsignacion.jButtonid_unidadDetalleConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"id_unidadDetalleConsignacionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleConsignacion.jButtonid_estado_detalle_pedidoDetalleConsignacionUpdate.addActionListener(new ButtonActionListener(this,"id_estado_detalle_pedidoDetalleConsignacionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleConsignacion.jButtonid_estado_detalle_pedidoDetalleConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"id_estado_detalle_pedidoDetalleConsignacionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleConsignacion.jButtoncantidadDetalleConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"cantidadDetalleConsignacionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleConsignacion.jButtonprecioDetalleConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"precioDetalleConsignacionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleConsignacion.jButtondescuento_porcentajeDetalleConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"descuento_porcentajeDetalleConsignacionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleConsignacion.jButtondescuento_valorDetalleConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"descuento_valorDetalleConsignacionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleConsignacion.jButtonivaDetalleConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"ivaDetalleConsignacionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleConsignacion.jButtontotalDetalleConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"totalDetalleConsignacionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleConsignacion.jButtoniceDetalleConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"iceDetalleConsignacionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleConsignacion.jButtoncostoDetalleConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"costoDetalleConsignacionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleConsignacion.jButtonutilidadDetalleConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"utilidadDetalleConsignacionBusqueda"));
		}
		
		if(!this.conCargarMinimo) {
		//BYDAN_BUSQUEDAS
		
		
			this.jButtonFK_IdBodegaDetalleConsignacion.addActionListener(new ButtonActionListener(this,"FK_IdBodegaDetalleConsignacion"));

			this.jButtonFK_IdConsignacionDetalleConsignacion.addActionListener(new ButtonActionListener(this,"FK_IdConsignacionDetalleConsignacion"));

			this.jButtonFK_IdEstadoDetallePedidoDetalleConsignacion.addActionListener(new ButtonActionListener(this,"FK_IdEstadoDetallePedidoDetalleConsignacion"));

			this.jButtonFK_IdProductoDetalleConsignacion.addActionListener(new ButtonActionListener(this,"FK_IdProductoDetalleConsignacion"));

			this.jButtonBuscarFK_IdProductoid_productoDetalleConsignacion.addActionListener(new ButtonActionListener(this,"id_productoDetalleConsignacion"));

			this.jButtonFK_IdUnidadDetalleConsignacion.addActionListener(new ButtonActionListener(this,"FK_IdUnidadDetalleConsignacion"));
		
		
		
			//REPORTE DINAMICO
			
			if(this.jInternalFrameReporteDinamicoDetalleConsignacion!=null) {
				this.jInternalFrameReporteDinamicoDetalleConsignacion.getjButtonCerrarReporteDinamico().addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoDetalleConsignacion"));
				this.jInternalFrameReporteDinamicoDetalleConsignacion.getjButtonGenerarReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoDetalleConsignacion"));
				this.jInternalFrameReporteDinamicoDetalleConsignacion.getjButtonGenerarExcelReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoDetalleConsignacion"));
			}
			
			//this.jButtonCerrarReporteDinamicoDetalleConsignacion.addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoDetalleConsignacion"));				
			//this.jButtonGenerarReporteDinamicoDetalleConsignacion.addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoDetalleConsignacion"));
			//this.jButtonGenerarExcelReporteDinamicoDetalleConsignacion.addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoDetalleConsignacion"));
				
				
			//IMPORTACION			
			if(this.jInternalFrameImportacionDetalleConsignacion!=null) {
				this.jInternalFrameImportacionDetalleConsignacion.getjButtonCerrarImportacion().addActionListener (new ButtonActionListener(this,"CerrarImportacionDetalleConsignacion"));
				this.jInternalFrameImportacionDetalleConsignacion.getjButtonGenerarImportacion().addActionListener (new ButtonActionListener(this,"GenerarImportacionDetalleConsignacion"));
				this.jInternalFrameImportacionDetalleConsignacion.getjButtonAbrirImportacion().addActionListener (new ButtonActionListener(this,"AbrirImportacionDetalleConsignacion"));
			}
			
			//ORDER BY
			this.jButtonAbrirOrderByDetalleConsignacion.addActionListener (new ButtonActionListener(this,"AbrirOrderByDetalleConsignacion"));
			
			this.jButtonAbrirOrderByToolBarDetalleConsignacion.addActionListener (new ButtonActionListener(this,"AbrirOrderByToolBarDetalleConsignacion"));			
			
			if(this.jInternalFrameOrderByDetalleConsignacion!=null) {
				this.jInternalFrameOrderByDetalleConsignacion.getjButtonCerrarOrderBy().addActionListener (new ButtonActionListener(this,"CerrarOrderByDetalleConsignacion"));				
			}
			
			
		}
		
		this.jButtonAbrirTotalesDetalleConsignacion.addActionListener (new ButtonActionListener(this,"AbrirTotalesDetalleConsignacion"));
		
		if(this.jInternalFrameTotalesDetalleConsignacion!=null) {
			this.jInternalFrameTotalesDetalleConsignacion.getjButtonCerrarTotales().addActionListener (new ButtonActionListener(this,"CerrarTotalesDetalleConsignacion"));
		}
		
		
		if(!this.conCargarMinimo) {
			if(this.jInternalFrameDetalleFormDetalleConsignacion!=null) { //if(this.conCargarFormDetalle) {
			;
			}
		}
		
		
		//TABBED PANE RELACIONES
		if(this.jInternalFrameDetalleFormDetalleConsignacion!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetalleConsignacion.jTabbedPaneRelacionesDetalleConsignacion.addChangeListener(new TabbedPaneChangeListener(this,"RelacionesDetalleConsignacion"));
		
		;
		}
		//TABBED PANE RELACIONES FIN(EXTRA TAB)		
	}
	
	/*
	public void initActions() {
		String sMapKey = "";
		InputMap inputMap =null;
		
		this.addInternalFrameListener(new javax.swing.event.InternalFrameAdapter() {
            public void internalFrameClosing(InternalFrameEvent event) {          	
            	try {
            		closingInternalFrameDetalleConsignacion();
				} catch (Exception e) {
					e.printStackTrace();
				}
            }
        });
		
		this.jInternalFrameDetalleFormDetalleConsignacion.addInternalFrameListener(new javax.swing.event.InternalFrameAdapter() {
	        public void internalFrameClosing(InternalFrameEvent event) {
	            JInternalFrameBase jInternalFrameDetalleFormDetalleConsignacion = (JInternalFrameBase)event.getSource();
	            	
	            DetalleConsignacionBeanSwingJInternalFrame jInternalFrameParent=(DetalleConsignacionBeanSwingJInternalFrame)jInternalFrameDetalleFormDetalleConsignacion.getjInternalFrameParent();
	                
	            try {
					jInternalFrameParent.jButtonCancelarDetalleConsignacionActionPerformed(null);
					
					//jInternalFrameParent.dispose();
					//jInternalFrameParent=null;
					
				} catch (Exception e) {
					e.printStackTrace();
				}
	        }
	    });
			
		this.jTableDatosDetalleConsignacion.getSelectionModel().addListSelectionListener (
	                new ListSelectionListener() {
	                    public void valueChanged(ListSelectionEvent e) {
							//BYDAN_DESHABILITADO
	                    	//try {jTableDatosDetalleConsignacionListSelectionListener(e);}catch(Exception e1){e1.printStackTrace();}
	                    }
	                }
	     );
		
		this.jTableDatosDetalleConsignacion.addMouseListener(new MouseAdapter() {
			   public void mouseClicked(MouseEvent evt) {
				      if (evt.getClickCount() == 2) {
				    	  jButtonIdActionPerformed(null,jTableDatosDetalleConsignacion.getSelectedRow(),false,false);
				      }
				   }
		});
		
		this.jButtonNuevoDetalleConsignacion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoDetalleConsignacionActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoToolBarDetalleConsignacion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoDetalleConsignacionActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoDetalleConsignacion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoDetalleConsignacionActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "NuevoDetalleConsignacion";
		inputMap = this.jButtonNuevoDetalleConsignacion.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_N , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonNuevoDetalleConsignacion.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonNuevoDetalleConsignacionActionPerformed(evt,false);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonNuevoRelacionesDetalleConsignacion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoDetalleConsignacionActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoRelacionesToolBarDetalleConsignacion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoDetalleConsignacionActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoRelacionesDetalleConsignacion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoDetalleConsignacionActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "NuevoRelacionesDetalleConsignacion";
		inputMap = this.jButtonNuevoRelacionesDetalleConsignacion.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_R , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonNuevoRelacionesDetalleConsignacion.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonNuevoDetalleConsignacionActionPerformed(evt,true);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonModificarDetalleConsignacion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarDetalleConsignacionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonModificarToolBarDetalleConsignacion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarDetalleConsignacionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemModificarDetalleConsignacion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarDetalleConsignacionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "ModificarDetalleConsignacion";
		inputMap = this.jButtonModificarDetalleConsignacion.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_M , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonModificarDetalleConsignacion.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonModificarDetalleConsignacionActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonActualizarDetalleConsignacion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarDetalleConsignacionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonActualizarToolBarDetalleConsignacion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarDetalleConsignacionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemActualizarDetalleConsignacion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarDetalleConsignacionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "ActualizarDetalleConsignacion";
		inputMap = this.jButtonActualizarDetalleConsignacion.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_G , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonActualizarDetalleConsignacion.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonActualizarDetalleConsignacionActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonEliminarDetalleConsignacion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarDetalleConsignacionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonEliminarToolBarDetalleConsignacion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarDetalleConsignacionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
				
		this.jMenuItemEliminarDetalleConsignacion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarDetalleConsignacionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "EliminarDetalleConsignacion";
		inputMap = this.jButtonEliminarDetalleConsignacion.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_E , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonEliminarDetalleConsignacion.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonEliminarDetalleConsignacionActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonCancelarDetalleConsignacion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarDetalleConsignacionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonCancelarToolBarDetalleConsignacion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarDetalleConsignacionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemCancelarDetalleConsignacion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarDetalleConsignacionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "CancelarDetalleConsignacion";
		inputMap = this.jButtonCancelarDetalleConsignacion.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_Q , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonCancelarDetalleConsignacion.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonCancelarDetalleConsignacionActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonCerrarDetalleConsignacion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarDetalleConsignacionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonCerrarToolBarDetalleConsignacion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarDetalleConsignacionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemCerrarDetalleConsignacion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarDetalleConsignacionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemDetalleCerrarDetalleConsignacion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  //try {jButtonCerrarDetalleConsignacionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
					try {jButtonCancelarDetalleConsignacionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "CerrarDetalleConsignacion";
		inputMap = this.jButtonCerrarDetalleConsignacion.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_C , KeyEvent.ALT_MASK), sMapKey);
			
		this.jButtonCerrarDetalleConsignacion.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonCerrarDetalleConsignacionActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jInternalFrameDetalleFormDetalleConsignacion.jButtonGuardarCambiosDetalleConsignacion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosDetalleConsignacionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosToolBarDetalleConsignacion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosDetalleConsignacionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemGuardarCambiosDetalleConsignacion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosDetalleConsignacionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosTablaDetalleConsignacion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosDetalleConsignacionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosTablaToolBarDetalleConsignacion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosDetalleConsignacionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemGuardarCambiosTablaDetalleConsignacion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosDetalleConsignacionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "GuardarCambiosDetalleConsignacion";
		inputMap = this.jInternalFrameDetalleFormDetalleConsignacion.jButtonGuardarCambiosDetalleConsignacion.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_G , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jInternalFrameDetalleFormDetalleConsignacion.jButtonGuardarCambiosDetalleConsignacion.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonGuardarCambiosDetalleConsignacionActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonRecargarInformacionDetalleConsignacion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionDetalleConsignacionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonRecargarInformacionToolBarDetalleConsignacion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionDetalleConsignacionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemRecargarInformacionDetalleConsignacion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionDetalleConsignacionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		
		this.jButtonAnterioresDetalleConsignacion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresDetalleConsignacionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonAnterioresToolBarDetalleConsignacion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresDetalleConsignacionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemAnterioresDetalleConsignacion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresDetalleConsignacionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonSiguientesDetalleConsignacion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesDetalleConsignacionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonSiguientesToolBarDetalleConsignacion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesDetalleConsignacionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemSiguientesDetalleConsignacion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesDetalleConsignacionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoGuardarCambiosDetalleConsignacion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosDetalleConsignacionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoGuardarCambiosToolBarDetalleConsignacion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosDetalleConsignacionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoGuardarCambiosDetalleConsignacion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosDetalleConsignacionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		
		//SELECCIONAR TODOS
		this.jCheckBoxSeleccionarTodosDetalleConsignacion.addItemListener(new ItemListener() {		
			public void itemStateChanged(ItemEvent evt) {
				try {jCheckBoxSeleccionarTodosDetalleConsignacionItemListener(evt);}catch(Exception e){e.printStackTrace();}
			}
		});

		this.jComboBoxTiposAccionesDetalleConsignacion.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jComboBoxTiposAccionesDetalleConsignacionActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		this.jComboBoxTiposSeleccionarDetalleConsignacion.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jComboBoxTiposSeleccionarDetalleConsignacionActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		this.jTextFieldValorCampoGeneralDetalleConsignacion.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jTextFieldValorCampoGeneralDetalleConsignacionActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleConsignacion.jButtonidDetalleConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"idDetalleConsignacionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleConsignacion.jButtonid_empresaDetalleConsignacionUpdate.addActionListener(new ButtonActionListener(this,"id_empresaDetalleConsignacionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleConsignacion.jButtonid_empresaDetalleConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"id_empresaDetalleConsignacionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleConsignacion.jButtonid_sucursalDetalleConsignacionUpdate.addActionListener(new ButtonActionListener(this,"id_sucursalDetalleConsignacionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleConsignacion.jButtonid_sucursalDetalleConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"id_sucursalDetalleConsignacionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleConsignacion.jButtonid_ejercicioDetalleConsignacionUpdate.addActionListener(new ButtonActionListener(this,"id_ejercicioDetalleConsignacionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleConsignacion.jButtonid_ejercicioDetalleConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"id_ejercicioDetalleConsignacionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleConsignacion.jButtonid_periodoDetalleConsignacionUpdate.addActionListener(new ButtonActionListener(this,"id_periodoDetalleConsignacionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleConsignacion.jButtonid_periodoDetalleConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"id_periodoDetalleConsignacionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleConsignacion.jButtonid_anioDetalleConsignacionUpdate.addActionListener(new ButtonActionListener(this,"id_anioDetalleConsignacionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleConsignacion.jButtonid_anioDetalleConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"id_anioDetalleConsignacionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleConsignacion.jButtonid_mesDetalleConsignacionUpdate.addActionListener(new ButtonActionListener(this,"id_mesDetalleConsignacionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleConsignacion.jButtonid_mesDetalleConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"id_mesDetalleConsignacionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleConsignacion.jButtonid_consignacionDetalleConsignacionUpdate.addActionListener(new ButtonActionListener(this,"id_consignacionDetalleConsignacionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleConsignacion.jButtonid_consignacionDetalleConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"id_consignacionDetalleConsignacionBusqueda"));
		//jButtonid_productoDetalleConsignacion.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_productoDetalleConsignacionActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormDetalleConsignacion.jButtonid_productoDetalleConsignacion.addActionListener(new ButtonActionListener(this,"id_productoDetalleConsignacion"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleConsignacion.jButtonid_productoDetalleConsignacionUpdate.addActionListener(new ButtonActionListener(this,"id_productoDetalleConsignacionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleConsignacion.jButtonid_productoDetalleConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"id_productoDetalleConsignacionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleConsignacion.jButtonid_bodegaDetalleConsignacionUpdate.addActionListener(new ButtonActionListener(this,"id_bodegaDetalleConsignacionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleConsignacion.jButtonid_bodegaDetalleConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"id_bodegaDetalleConsignacionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleConsignacion.jButtonid_unidadDetalleConsignacionUpdate.addActionListener(new ButtonActionListener(this,"id_unidadDetalleConsignacionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleConsignacion.jButtonid_unidadDetalleConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"id_unidadDetalleConsignacionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleConsignacion.jButtonid_estado_detalle_pedidoDetalleConsignacionUpdate.addActionListener(new ButtonActionListener(this,"id_estado_detalle_pedidoDetalleConsignacionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleConsignacion.jButtonid_estado_detalle_pedidoDetalleConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"id_estado_detalle_pedidoDetalleConsignacionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleConsignacion.jButtoncantidadDetalleConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"cantidadDetalleConsignacionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleConsignacion.jButtonprecioDetalleConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"precioDetalleConsignacionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleConsignacion.jButtondescuento_porcentajeDetalleConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"descuento_porcentajeDetalleConsignacionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleConsignacion.jButtondescuento_valorDetalleConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"descuento_valorDetalleConsignacionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleConsignacion.jButtonivaDetalleConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"ivaDetalleConsignacionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleConsignacion.jButtontotalDetalleConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"totalDetalleConsignacionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleConsignacion.jButtoniceDetalleConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"iceDetalleConsignacionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleConsignacion.jButtoncostoDetalleConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"costoDetalleConsignacionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleConsignacion.jButtonutilidadDetalleConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"utilidadDetalleConsignacionBusqueda"));
		
		
		this.jButtonFK_IdBodegaDetalleConsignacion.addActionListener(new ButtonActionListener(this,"FK_IdBodegaDetalleConsignacion"));

		this.jButtonFK_IdConsignacionDetalleConsignacion.addActionListener(new ButtonActionListener(this,"FK_IdConsignacionDetalleConsignacion"));

		this.jButtonFK_IdEstadoDetallePedidoDetalleConsignacion.addActionListener(new ButtonActionListener(this,"FK_IdEstadoDetallePedidoDetalleConsignacion"));

		this.jButtonFK_IdProductoDetalleConsignacion.addActionListener(new ButtonActionListener(this,"FK_IdProductoDetalleConsignacion"));

		this.jButtonBuscarFK_IdProductoid_productoDetalleConsignacion.addActionListener(new ButtonActionListener(this,"id_productoDetalleConsignacion"));

		this.jButtonFK_IdUnidadDetalleConsignacion.addActionListener(new ButtonActionListener(this,"FK_IdUnidadDetalleConsignacion"));

		
		//REPORTE DINAMICO
		this.jButtonCerrarReporteDinamicoDetalleConsignacion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarReporteDinamicoDetalleConsignacionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarReporteDinamicoDetalleConsignacion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarReporteDinamicoDetalleConsignacionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarExcelReporteDinamicoDetalleConsignacion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarExcelReporteDinamicoDetalleConsignacionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		//IMPORTACION
		this.jButtonCerrarImportacionDetalleConsignacion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarImportacionDetalleConsignacionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarImportacionDetalleConsignacion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarImportacionDetalleConsignacionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonAbrirImportacionDetalleConsignacion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAbrirImportacionDetalleConsignacionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
	}
	*/
	
	
	public void jComboBoxTiposSeleccionarDetalleConsignacionActionListener(ActionEvent evt) throws Exception {    		
		try {			
			Reporte reporte=(Reporte)this.jComboBoxTiposSeleccionarDetalleConsignacion.getSelectedItem();
			
			//if(reporte.getsCodigo().equals("SELECCIONAR")) {
			//}					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleConsignacionConstantesFunciones.CLASSNAME);
		}
	}	
	
	
	
	public void seleccionarTodosDetalleConsignacion(Boolean conSeleccionarTodos) throws Exception {    		
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {				
				for(DetalleConsignacion detalleconsignacionAux:this.detalleconsignacionLogic.getDetalleConsignacions()) {
					detalleconsignacionAux.setIsSelected(conSeleccionarTodos);
				}			
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(DetalleConsignacion detalleconsignacionAux:detalleconsignacions) {
					detalleconsignacionAux.setIsSelected(conSeleccionarTodos);
				}
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleConsignacionConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionarTodosDetalleConsignacionItemListener(ItemEvent evt) throws Exception {    		
		try {			
			this.inicializarActualizarBindingDetalleConsignacion(false,false);
			
			//JCheckBox jCheckBox=(JCheckBox)evt.getSource();			
			//System.out.println("ok");		
			
			Boolean existe=false;
			
			if(sTipoSeleccionar.equals("COLUMNAS")) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					for(DetalleConsignacion detalleconsignacionAux:this.detalleconsignacionLogic.getDetalleConsignacions()) {
						detalleconsignacionAux.setIsSelected(this.isSeleccionarTodos);
					}			
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(DetalleConsignacion detalleconsignacionAux:detalleconsignacions) {
						detalleconsignacionAux.setIsSelected(this.isSeleccionarTodos);
					}
				}
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					for(DetalleConsignacion detalleconsignacionAux:this.detalleconsignacionLogic.getDetalleConsignacions()) {
					
					}	
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(DetalleConsignacion detalleconsignacionAux:detalleconsignacions) {
						
					}
				}
			}
					
			if(existe) {
				this.inicializarActualizarBindingTablaDetalleConsignacion(false);
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}	
			
			//TableCellRenderer tableCellRenderer=null;			
			
			//TableCellEditor tableCellEditor=null;						
						
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			/*
			for(int i = 0; i < this.jTableDatosDetalleConsignacion.getRowCount(); i++) {				
				tableCellRenderer=this.jTableDatosSistema.getCellRenderer(i, 2);
				tableCellEditor=this.jTableDatosSistema.getCellEditor(i, 2);
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellRenderer;				
				idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellEditor;
				
				if(idSeleccionarTableCell.jCheckBoxId!=null) {
					idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				}
				
				//System.out.println(idSeleccionarTableCell.valor);
				
				//this.jTableDatosDetalleConsignacion.getModel().setValueAt(jCheckBox.isSelected(), i, Funciones2.getColumnIndexByName(this.jTableDatosDetalleConsignacion,Constantes2.S_SELECCIONAR));
		    } 
			*/
					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleConsignacionConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionadosDetalleConsignacionItemListener(ItemEvent evt) throws Exception {    		
		try {			
			this.inicializarActualizarBindingDetalleConsignacion(false,false);
			
			//JCheckBox jCheckBox=(JCheckBox)evt.getSource();			
			//System.out.println("ok");		
			
			Boolean existe=false;
			int[] arrNumRowsSeleccionados=null;
			
			arrNumRowsSeleccionados=this.jTableDatosDetalleConsignacion.getSelectedRows();
			
			DetalleConsignacion detalleconsignacionLocal=new DetalleConsignacion();
			
			//this.seleccionarTodosDetalleConsignacion(false);
			
			for(Integer iNumRowSeleccionado:arrNumRowsSeleccionados) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {
					detalleconsignacionLocal =(DetalleConsignacion) this.detalleconsignacionLogic.getDetalleConsignacions().toArray()[this.jTableDatosDetalleConsignacion.convertRowIndexToModel(iNumRowSeleccionado)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					detalleconsignacionLocal =(DetalleConsignacion) this.detalleconsignacions.toArray()[this.jTableDatosDetalleConsignacion.convertRowIndexToModel(iNumRowSeleccionado)];
				}
				
				detalleconsignacionLocal.setIsSelected(this.isSeleccionados);
			}
			
			/*
			if(sTipoSeleccionar.equals("SELECCIONAR")) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					for(DetalleConsignacion detalleconsignacionAux:this.detalleconsignacionLogic.getDetalleConsignacions()) {
						detalleconsignacionAux.setIsSelected(this.isSeleccionados);
					}			
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(DetalleConsignacion detalleconsignacionAux:detalleconsignacions) {
						detalleconsignacionAux.setIsSelected(this.isSeleccionados);
					}
				}
			}
			*/
			
			//if(existe) {
				this.inicializarActualizarBindingTablaDetalleConsignacion(false);
			/*
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}	
			*/
			
			
			//TableCellRenderer tableCellRenderer=null;			
			
			//TableCellEditor tableCellEditor=null;						
						
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			/*
			for(int i = 0; i < this.jTableDatosDetalleConsignacion.getRowCount(); i++) {				
				tableCellRenderer=this.jTableDatosSistema.getCellRenderer(i, 2);
				tableCellEditor=this.jTableDatosSistema.getCellEditor(i, 2);
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellRenderer;				
				idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellEditor;
				
				if(idSeleccionarTableCell.jCheckBoxId!=null) {
					idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				}
				
				//System.out.println(idSeleccionarTableCell.valor);
				
				//this.jTableDatosDetalleConsignacion.getModel().setValueAt(jCheckBox.isSelected(), i, Funciones2.getColumnIndexByName(this.jTableDatosDetalleConsignacion,Constantes2.S_SELECCIONAR));
		    } 
			*/
					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleConsignacionConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionarActualDetalleConsignacionItemListener(ItemEvent evt,Long idActual) throws Exception {    		
		try {
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleConsignacionConstantesFunciones.CLASSNAME);
		}
	}
	
	public void ejecutarAuxiliarDetalleConsignacionParaAjaxPostBack() throws Exception {    		
		try {
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleConsignacionConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jTextFieldValorCampoGeneralDetalleConsignacionActionListener(ActionEvent evt) throws Exception {    		
		try {
			this.inicializarActualizarBindingDetalleConsignacion(false,false);
			
			//System.out.println(this.jTextFieldValorCampoGeneralDetalleConsignacion.getText());		
			
			Boolean existe=false;
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				for(DetalleConsignacion detalleconsignacionAux:this.detalleconsignacionLogic.getDetalleConsignacions()) {
				
						if(sTipoSeleccionar.equals(DetalleConsignacionConstantesFunciones.LABEL_CANTIDAD)) {
							existe=true;
							detalleconsignacionAux.setcantidad(Integer.parseInt(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetalleConsignacionConstantesFunciones.LABEL_PRECIO)) {
							existe=true;
							detalleconsignacionAux.setprecio(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetalleConsignacionConstantesFunciones.LABEL_DESCUENTOPORCENTAJE)) {
							existe=true;
							detalleconsignacionAux.setdescuento_porcentaje(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetalleConsignacionConstantesFunciones.LABEL_DESCUENTOVALOR)) {
							existe=true;
							detalleconsignacionAux.setdescuento_valor(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetalleConsignacionConstantesFunciones.LABEL_IVA)) {
							existe=true;
							detalleconsignacionAux.setiva(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetalleConsignacionConstantesFunciones.LABEL_TOTAL)) {
							existe=true;
							detalleconsignacionAux.settotal(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetalleConsignacionConstantesFunciones.LABEL_ICE)) {
							existe=true;
							detalleconsignacionAux.setice(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetalleConsignacionConstantesFunciones.LABEL_COSTO)) {
							existe=true;
							detalleconsignacionAux.setcosto(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetalleConsignacionConstantesFunciones.LABEL_UTILIDAD)) {
							existe=true;
							detalleconsignacionAux.setutilidad(Double.parseDouble(this.sValorCampoGeneral));
						}
				}	
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(DetalleConsignacion detalleconsignacionAux:detalleconsignacions) {
					
						if(sTipoSeleccionar.equals(DetalleConsignacionConstantesFunciones.LABEL_CANTIDAD)) {
							existe=true;
							detalleconsignacionAux.setcantidad(Integer.parseInt(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetalleConsignacionConstantesFunciones.LABEL_PRECIO)) {
							existe=true;
							detalleconsignacionAux.setprecio(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetalleConsignacionConstantesFunciones.LABEL_DESCUENTOPORCENTAJE)) {
							existe=true;
							detalleconsignacionAux.setdescuento_porcentaje(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetalleConsignacionConstantesFunciones.LABEL_DESCUENTOVALOR)) {
							existe=true;
							detalleconsignacionAux.setdescuento_valor(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetalleConsignacionConstantesFunciones.LABEL_IVA)) {
							existe=true;
							detalleconsignacionAux.setiva(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetalleConsignacionConstantesFunciones.LABEL_TOTAL)) {
							existe=true;
							detalleconsignacionAux.settotal(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetalleConsignacionConstantesFunciones.LABEL_ICE)) {
							existe=true;
							detalleconsignacionAux.setice(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetalleConsignacionConstantesFunciones.LABEL_COSTO)) {
							existe=true;
							detalleconsignacionAux.setcosto(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetalleConsignacionConstantesFunciones.LABEL_UTILIDAD)) {
							existe=true;
							detalleconsignacionAux.setutilidad(Double.parseDouble(this.sValorCampoGeneral));
						}
				}
			}
								
			if(existe) {
				this.inicializarActualizarBindingTablaDetalleConsignacion(false);
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleConsignacionConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jComboBoxTiposAccionesDetalleConsignacionActionListener(ActionEvent evt,Boolean esParaAccionDesdeFormulario) throws Exception {    				
		Boolean conSplash=true;
		
		try {							
		
			this.inicializarActualizarBindingDetalleConsignacion(false,false);
			
			Reporte reporte=new Reporte();
			
			this.esParaAccionDesdeFormularioDetalleConsignacion=esParaAccionDesdeFormulario;
			
			if(!esParaAccionDesdeFormulario) {
				
				reporte=(Reporte)this.jComboBoxTiposAccionesDetalleConsignacion.getSelectedItem();
				
			} else {
				reporte=(Reporte)this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxTiposAccionesFormularioDetalleConsignacion.getSelectedItem();
			}
			String sTipoAccionLocal=this.sTipoAccion;
			
			if(!esParaAccionDesdeFormulario) {
				sTipoAccionLocal=this.sTipoAccion;
			} else {
				sTipoAccionLocal=this.sTipoAccionFormulario;
			}
			
			if(sTipoAccionLocal.equals("GENERAR REPORTE")) {//reporte.getsCodigo().equals("GENERAR REPORTE")) {
				if(this.isPermisoReporteDetalleConsignacion) {				
					conSplash=true;//false;										
					
					//this.startProcessDetalleConsignacion(conSplash);
				
					this.generarReporteDetalleConsignacionsSeleccionados();
				} else {
					JOptionPane.showMessageDialog(this,"NO TIENE PERMISO PARA GENERAR REPORTES","REPORTE",JOptionPane.ERROR_MESSAGE);					
				}
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesDetalleConsignacion.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxTiposAccionesFormularioDetalleConsignacion.setSelectedIndex(0);					
				}
			} else if(sTipoAccionLocal.equals("GENERAR REPORTE DINAMICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.mostrarReporteDinamicoDetalleConsignacionsSeleccionados();
				//this.jComboBoxTiposAccionesDetalleConsignacion.setSelectedIndex(0);					
			}  else if(sTipoAccionLocal.equals("GENERAR_REPORTE_GROUP_GENERICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.generarReporteGroupGenericoDetalleConsignacionsSeleccionados(false);
				//this.jComboBoxTiposAccionesDetalleConsignacion.setSelectedIndex(0);					
			} else if(sTipoAccionLocal.equals("GENERAR_REPORTE_TOTALES_GROUP_GENERICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.generarReporteGroupGenericoDetalleConsignacionsSeleccionados(true);
				//this.jComboBoxTiposAccionesDetalleConsignacion.setSelectedIndex(0);					
			} else if(sTipoAccionLocal.equals("EXPORTAR_DATOS")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//this.startProcessDetalleConsignacion();
				
				this.exportarDetalleConsignacionsSeleccionados();
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesDetalleConsignacion.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxTiposAccionesFormularioDetalleConsignacion.setSelectedIndex(0);					
				}					
			} else if(sTipoAccionLocal.equals("IMPORTAR_DATOS")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				this.mostrarImportacionDetalleConsignacions();
				//this.importarDetalleConsignacions();
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesDetalleConsignacion.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxTiposAccionesFormularioDetalleConsignacion.setSelectedIndex(0);					
				}					
			} else if(sTipoAccionLocal.equals("EXPORTAR_DATOS_EXCEL")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//this.startProcessDetalleConsignacion();
				//SE EXPORTA SEGUN TIPO ARCHIVO SELECCIONADO
				//this.exportarExcelDetalleConsignacionsSeleccionados();
				//this.jComboBoxTiposAccionesDetalleConsignacion.setSelectedIndex(0);					
			}  else if(sTipoAccionLocal.equals("RECARGAR_FK")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {								
				if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE RECARGAR REFERENCIAS ?", "MANTENIMIENTO DE Detalle Consignacion", JOptionPane.OK_CANCEL_OPTION) == 0) {
				
				//this.startProcessDetalleConsignacion();
				
					if(!esParaAccionDesdeFormulario || (esParaAccionDesdeFormulario && this.isEsNuevoDetalleConsignacion)) {
						this.esRecargarFks=true;
						this.cargarCombosForeignKeyDetalleConsignacion(false,false,false);
						this.esRecargarFks=false;
						
						JOptionPane.showMessageDialog(this,"PROCESO EJECUTADO CORRECTAMENTE","MANTENIMIENTO DE Detalle Consignacion",JOptionPane.INFORMATION_MESSAGE);
					} else {
						JOptionPane.showMessageDialog(this,"ESTE PROCESO SOLO FUNCIONA AL INGRESAR UN NUEVO ELEMENTO","MANTENIMIENTO",JOptionPane.ERROR_MESSAGE);	
					}
					
					
				}
				
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesDetalleConsignacion.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxTiposAccionesFormularioDetalleConsignacion.setSelectedIndex(0);					
				}	
			} 			
			else if(DetalleConsignacionBeanSwingJInternalFrame.EsProcesoReporte(reporte.getsCodigo())){
				if(this.isPermisoReporteDetalleConsignacion) {				
					if(this.tieneElementosSeleccionados()) {
						this.quitarFilaTotales();
						
						conSplash=false;
						
						//this.startProcessDetalleConsignacion(conSplash);
					
						//this.actualizarParametrosGeneralDetalleConsignacion();
						
						this.generarReporteProcesoAccionDetalleConsignacionsSeleccionados(reporte.getsCodigo());
						
						if(!esParaAccionDesdeFormulario) {
							
							this.jComboBoxTiposAccionesDetalleConsignacion.setSelectedIndex(0);					
							
						} else {
							this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxTiposAccionesFormularioDetalleConsignacion.setSelectedIndex(0);					
						}
					} else {
						JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO TIENE PERMISO PARA GENERAR REPORTES","REPORTE",JOptionPane.ERROR_MESSAGE);					
				}
			} 
			else if(DetalleConsignacionBeanSwingJInternalFrameAdditional.EsProcesoAccionNormal(reporte.getsCodigo())){
				if(this.tieneElementosSeleccionados()) {
					this.quitarFilaTotales();
					
					if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE PROCESAR "+reporte.getsDescripcion()+" EN PROCESO Detalle ConsignacionS SELECCIONADOS?", "MANTENIMIENTO DE Detalle Consignacion", JOptionPane.OK_CANCEL_OPTION) == 0) {
						//this.startProcessDetalleConsignacion();
				
						this.actualizarParametrosGeneralDetalleConsignacion();
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {						
							this.detalleconsignacionReturnGeneral=detalleconsignacionLogic.procesarAccionDetalleConsignacionsWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,sTipoAccionLocal,this.detalleconsignacionLogic.getDetalleConsignacions(),this.detalleconsignacionParameterGeneral);
						
						} else if(Constantes.ISUSAEJBREMOTE) {
						
						} else if(Constantes.ISUSAEJBHOME) {
						}
						//ARCHITECTURE
						
						this.procesarDetalleConsignacionReturnGeneral();
					
					if(!esParaAccionDesdeFormulario) {
						
						this.jComboBoxTiposAccionesDetalleConsignacion.setSelectedIndex(0);					
						
					} else {
						this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxTiposAccionesFormularioDetalleConsignacion.setSelectedIndex(0);					
					}
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
				}				
			} 
			else {
				if(this.tieneElementosSeleccionados()) {
					this.quitarFilaTotales();
					
					this.actualizarParametrosGeneralDetalleConsignacion();
					
					DetalleConsignacionBeanSwingJInternalFrameAdditional.ProcesarAccion(reporte.getsCodigo(),reporte.getsDescripcion(),this);
					
					this.procesarDetalleConsignacionReturnGeneral();
					
					if(!esParaAccionDesdeFormulario) {
						
						this.jComboBoxTiposAccionesDetalleConsignacion.setSelectedIndex(0);					
						
					} else {
						this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxTiposAccionesFormularioDetalleConsignacion.setSelectedIndex(0);					
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
				}
			}
		} catch(Exception e) {
			this.esRecargarFks=false;
			
			FuncionesSwing.manageException(this, e,logger,DetalleConsignacionConstantesFunciones.CLASSNAME);
		
		}  finally {
      		//this.finishProcessDetalleConsignacion(conSplash);
      	}
	}
	
	public void jComboBoxTiposRelacionesDetalleConsignacionActionListener(ActionEvent evt) throws Exception {    				
		Boolean conSplash=true;
		
		try {			
			this.startProcessDetalleConsignacion();
			
			if(this.jInternalFrameDetalleFormDetalleConsignacion==null) { //if(!this.conCargarFormDetalle) {			
				this.inicializarFormDetalle();
			}
			
			ArrayList<DetalleConsignacion> detalleconsignacionsSeleccionados=new ArrayList<DetalleConsignacion>();		
			DetalleConsignacion detalleconsignacion=new DetalleConsignacion();
			
			int rowIndex=-1;//CON ESTO SE DESHABILITA SELECCION POR INDICE
			
			this.inicializarActualizarBindingDetalleConsignacion(false,false);
			
			Reporte reporte=new Reporte();
			
			
			reporte=(Reporte)this.jComboBoxTiposRelacionesDetalleConsignacion.getSelectedItem();
			
			
			
			
			detalleconsignacionsSeleccionados=this.getDetalleConsignacionsSeleccionados(true);
			//this.sTipoAccion;
			
			if(detalleconsignacionsSeleccionados.size()==1) {
				for(DetalleConsignacion detalleconsignacionAux:detalleconsignacionsSeleccionados) {
					detalleconsignacion=detalleconsignacionAux;
				}
				
				if(this.sTipoAccion.equals("NONE")) {
				
				}
				
			} else {
				JOptionPane.showMessageDialog(this,"SELECCIONE SOLO UN REGISTRO","RELACIONES",JOptionPane.ERROR_MESSAGE);
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleConsignacionConstantesFunciones.CLASSNAME);
		
		}  finally {
			this.finishProcessDetalleConsignacion();
			
      		//this.finishProcessDetalleConsignacion(conSplash);
      	}
	}
			
	public static Boolean EsProcesoReporte(String sTipoProceso) throws Exception {
		Boolean esProcesoAccionRepoorte=false;

		if(sTipoProceso.contains("REPORTE_")) {
			 esProcesoAccionRepoorte=true;
		}

		return esProcesoAccionRepoorte;
	}
	
	public void procesarDetalleConsignacionReturnGeneral() throws Exception {
		if(this.detalleconsignacionReturnGeneral.getConRetornoEstaProcesado()) {
			JOptionPane.showMessageDialog(this,this.detalleconsignacionReturnGeneral.getsMensajeProceso(),"PROCESO",JOptionPane.INFORMATION_MESSAGE);
		}
		
		if(this.detalleconsignacionReturnGeneral.getConMostrarMensaje()) {
			JOptionPane.showMessageDialog(this,this.detalleconsignacionReturnGeneral.getsMensajeProceso(),"PROCESO",FuncionesSwing.getColorSelectedBackground(this.detalleconsignacionReturnGeneral.getsTipoMensaje()));
		}
		
		if(this.detalleconsignacionReturnGeneral.getConRecargarInformacion()) {
			this.procesarBusqueda(this.sAccionBusqueda);
			
			this.inicializarActualizarBindingDetalleConsignacion(false);
		}
		
		if(this.detalleconsignacionReturnGeneral.getConRetornoLista() || this.detalleconsignacionReturnGeneral.getConRetornoObjeto()) {
			if(this.detalleconsignacionReturnGeneral.getConRetornoLista()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.detalleconsignacionLogic.setDetalleConsignacions(this.detalleconsignacionReturnGeneral.getDetalleConsignacions());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
			
			if(this.detalleconsignacionReturnGeneral.getConRetornoObjeto()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.detalleconsignacionLogic.setDetalleConsignacion(this.detalleconsignacionReturnGeneral.getDetalleConsignacion());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
			
			this.inicializarActualizarBindingDetalleConsignacion(false);
		}
	}
	
	public void actualizarParametrosGeneralDetalleConsignacion() throws Exception {
		
		
	}
	
	public ArrayList<DetalleConsignacion> getDetalleConsignacionsSeleccionados(Boolean conSeleccionarTodosAutomatico) throws Exception {
		ArrayList<DetalleConsignacion> detalleconsignacionsSeleccionados=new ArrayList<DetalleConsignacion>();
		Boolean existe=false;
		
		if(!this.esParaAccionDesdeFormularioDetalleConsignacion) {
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				
				for(DetalleConsignacion detalleconsignacionAux:detalleconsignacionLogic.getDetalleConsignacions()) {
					if(detalleconsignacionAux.getIsSelected()) {
						detalleconsignacionsSeleccionados.add(detalleconsignacionAux);				
					}
				}
				
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(DetalleConsignacion detalleconsignacionAux:this.detalleconsignacions) {
					if(detalleconsignacionAux.getIsSelected()) {
						detalleconsignacionsSeleccionados.add(detalleconsignacionAux);				
					}
				}
			}
			
			if(detalleconsignacionsSeleccionados.size()>0) {
				existe=true;
			}
			
			//SI NO ESTA NINGUNO SELECCIONADO SE SELECCIONA TODOS
			if(!existe) {
				if(conSeleccionarTodosAutomatico) {
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						detalleconsignacionsSeleccionados.addAll(this.detalleconsignacionLogic.getDetalleConsignacions());
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						detalleconsignacionsSeleccionados.addAll(this.detalleconsignacions);				
					}
				}
			}
		} else {
			detalleconsignacionsSeleccionados.add(this.detalleconsignacion);
		}
		
		return detalleconsignacionsSeleccionados;
	}
	
	public void actualizarVariablesTipoReporte(Boolean esReporteNormal,Boolean esReporteDinamico,Boolean esReporteAccionProceso,String sPath) {
		if(esReporteNormal) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=false;
			this.sPathReporteDinamico="";
			this.esReporteAccionProceso=false;
			
		} else if(esReporteAccionProceso) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=false;
			this.sPathReporteDinamico="";
			this.esReporteAccionProceso=true;
			
		} else if(esReporteDinamico) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=true;
			this.esReporteAccionProceso=false;
			this.sPathReporteDinamico=sPath.replace(".jrxml",".jasper");			
		}
	}
	
	public void generarReporteDetalleConsignacionsSeleccionados() throws Exception {
		Boolean existe=false;
		
		if(this.sTipoReporte.equals("NORMAL") || this.sTipoReporte.equals("FORMULARIO")) {
			existe=true;								
			this.generarReporteNormalDetalleConsignacionsSeleccionados();
			
		} else if(this.sTipoReporte.equals("DINAMICO")) {
			existe=true;
			this.mostrarReporteDinamicoDetalleConsignacionsSeleccionados();
			
		} else if(this.sTipoReporte.equals("GRUPO_GENERICO")) {
			existe=true;
			this.generarReporteGroupGenericoDetalleConsignacionsSeleccionados(false);
			
		} else if(this.sTipoReporte.equals("TOTALES_GRUPO_GENERICO")) {
			existe=true;
			this.generarReporteGroupGenericoDetalleConsignacionsSeleccionados(true);
		}
		
		if(!existe) {
			JOptionPane.showMessageDialog(this,"SELECCIONE UN TIPO DE REPORTE VALIDO","REPORTE DE Detalle Consignacion",JOptionPane.ERROR_MESSAGE);
		}
	}
	
	public void generarReporteRelacionesDetalleConsignacionsSeleccionados() throws Exception {
		ArrayList<DetalleConsignacion> detalleconsignacionsSeleccionados=new ArrayList<DetalleConsignacion>();		
		
		detalleconsignacionsSeleccionados=this.getDetalleConsignacionsSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
					
		//this.sTipoReporteExtra="MasterRelaciones";
		
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		
		this.generarReporteDetalleConsignacions("Todos",detalleconsignacionsSeleccionados);
		
	}	
	
	public void generarReporteNormalDetalleConsignacionsSeleccionados() throws Exception {
		ArrayList<DetalleConsignacion> detalleconsignacionsSeleccionados=new ArrayList<DetalleConsignacion>();		
		
		detalleconsignacionsSeleccionados=this.getDetalleConsignacionsSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
								
		if(this.sTipoReporte.equals("FORMULARIO")) {
			this.sTipoReporteExtra="Vertical";					
		}
		
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		this.generarReporteDetalleConsignacions("Todos",detalleconsignacionsSeleccionados);
	}		
	
	public void generarReporteProcesoAccionDetalleConsignacionsSeleccionados(String sProcesoReporte) throws Exception {
		ArrayList<DetalleConsignacion> detalleconsignacionsSeleccionados=new ArrayList<DetalleConsignacion>();
		
		detalleconsignacionsSeleccionados=this.getDetalleConsignacionsSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(false,false,true,"");
		
		/*
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		this.sTipoReporteExtra=sProcesoReporte.toLowerCase();
		
		this.esReporteAccionProceso=true;
		this.generarReporteDetalleConsignacions("Todos",detalleconsignacionsSeleccionados);
		this.esReporteAccionProceso=false;
	}
	
	
	public void mostrarReporteDinamicoDetalleConsignacionsSeleccionados() throws Exception {
		ArrayList<DetalleConsignacion> detalleconsignacionsSeleccionados=new ArrayList<DetalleConsignacion>();		
		
		
		this.abrirInicializarFrameReporteDinamicoDetalleConsignacion();
		
		
		detalleconsignacionsSeleccionados=this.getDetalleConsignacionsSeleccionados(true);
		
		this.sTipoReporteExtra="";
		//this.actualizarVariablesTipoReporte(true,false,false,"");
		
		
		this.abrirFrameReporteDinamicoDetalleConsignacion();
		
		
		//this.generarReporteDetalleConsignacions("Todos",detalleconsignacionsSeleccionados ,detalleconsignacionImplementable,detalleconsignacionImplementableHome);
	}
	
	public void mostrarImportacionDetalleConsignacions() throws Exception {
		//this.sTipoReporteExtra="";
		//this.actualizarVariablesTipoReporte(true,false,false,"");
		
		
		this.abrirInicializarFrameImportacionDetalleConsignacion();
		
		this.abrirFrameImportacionDetalleConsignacion();		
		
			
		//this.generarReporteDetalleConsignacions("Todos",detalleconsignacionsSeleccionados ,detalleconsignacionImplementable,detalleconsignacionImplementableHome);
	}
	
	public void importarDetalleConsignacions() throws Exception {		
	
	}
	
	public void exportarDetalleConsignacionsSeleccionados() throws Exception {
		Boolean existe=false;
		
		if(this.sTipoArchivoReporte.equals("EXCEL")) {
			existe=true;
			this.exportarExcelDetalleConsignacionsSeleccionados();
			
		} else if(this.sTipoArchivoReporte.equals("TEXTO")) {
			existe=true;
			this.exportarTextoDetalleConsignacionsSeleccionados();
		
		} else if(this.sTipoArchivoReporte.equals("XML")) {
			existe=true;
			this.exportarXmlDetalleConsignacionsSeleccionados();
		} 
		
		if(!existe) {
			JOptionPane.showMessageDialog(this,"SELECCIONE UN TIPO DE ARCHIVO VALIDO","EXPORTACION DE Detalle Consignacion",JOptionPane.ERROR_MESSAGE);
		}
	}
	
	public void exportarTextoDetalleConsignacionsSeleccionados() throws Exception {
		ArrayList<DetalleConsignacion> detalleconsignacionsSeleccionados=new ArrayList<DetalleConsignacion>();		
		
		detalleconsignacionsSeleccionados=this.getDetalleConsignacionsSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"detalleconsignacion."+"txt";//Funciones2.getTipoExtensionArchivoExportar(this.parametroGeneralUsuario);
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		BufferedWriter bufferedWriter = null;
		FileWriter fileWriter=null;
		
		fileWriter=new FileWriter(sPath);
		
		bufferedWriter = new BufferedWriter(fileWriter);
		
		try {
			if(conCabecera) {
				sFilaCabecera=this.getFilaCabeceraExportarDetalleConsignacion(sDelimiter);
				
				bufferedWriter.write(sFilaCabecera);
			}				
			
			for(DetalleConsignacion detalleconsignacionAux:detalleconsignacionsSeleccionados) {
				sFilaDatos=this.getFilaDatosExportarDetalleConsignacion(detalleconsignacionAux,sDelimiter);
				
				bufferedWriter.write(sFilaDatos);
				
				//detalleconsignacionAux.setsDetalleGeneralEntityReporte(detalleconsignacionAux.toString());			
			}
			
			bufferedWriter.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.detalleconsignacionSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Detalle Consignacion",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {
       		if (bufferedWriter != null) {
				bufferedWriter.close();
			}
		}
	}
	
	public String getFilaCabeceraExportarDetalleConsignacion(String sDelimiter) {
		String sFilaCabecera="";
		
		
		sFilaCabecera+=DetalleConsignacionConstantesFunciones.LABEL_ID;

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
			sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleConsignacionConstantesFunciones.LABEL_VERSIONROW;
		}

		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleConsignacionConstantesFunciones.LABEL_IDEMPRESA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleConsignacionConstantesFunciones.LABEL_IDSUCURSAL;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleConsignacionConstantesFunciones.LABEL_IDEJERCICIO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleConsignacionConstantesFunciones.LABEL_IDPERIODO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleConsignacionConstantesFunciones.LABEL_IDANIO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleConsignacionConstantesFunciones.LABEL_IDMES;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleConsignacionConstantesFunciones.LABEL_IDCONSIGNACION;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleConsignacionConstantesFunciones.LABEL_IDPRODUCTO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleConsignacionConstantesFunciones.LABEL_IDBODEGA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleConsignacionConstantesFunciones.LABEL_IDUNIDAD;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleConsignacionConstantesFunciones.LABEL_IDESTADODETALLEPEDIDO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleConsignacionConstantesFunciones.LABEL_CANTIDAD;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleConsignacionConstantesFunciones.LABEL_PRECIO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleConsignacionConstantesFunciones.LABEL_DESCUENTOPORCENTAJE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleConsignacionConstantesFunciones.LABEL_DESCUENTOVALOR;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleConsignacionConstantesFunciones.LABEL_IVA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleConsignacionConstantesFunciones.LABEL_TOTAL;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleConsignacionConstantesFunciones.LABEL_ICE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleConsignacionConstantesFunciones.LABEL_COSTO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleConsignacionConstantesFunciones.LABEL_UTILIDAD;
		
		return sFilaCabecera;
	}
	
	public String getFilaDatosExportarDetalleConsignacion(DetalleConsignacion detalleconsignacion,String sDelimiter) {
		String sFilaDatos="";
		
		sFilaDatos+="\r\n";
		
		
		sFilaDatos+=detalleconsignacion.getId().toString();

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
			sFilaDatos+=sDelimiter;
		sFilaDatos+=detalleconsignacion.getVersionRow().toString();
		}

		sFilaDatos+=sDelimiter;
		sFilaDatos+=detalleconsignacion.getempresa_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detalleconsignacion.getsucursal_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detalleconsignacion.getejercicio_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detalleconsignacion.getperiodo_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detalleconsignacion.getanio_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detalleconsignacion.getmes_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detalleconsignacion.getconsignacion_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detalleconsignacion.getproducto_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detalleconsignacion.getbodega_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detalleconsignacion.getunidad_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detalleconsignacion.getestadodetallepedido_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detalleconsignacion.getcantidad().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detalleconsignacion.getprecio().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detalleconsignacion.getdescuento_porcentaje().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detalleconsignacion.getdescuento_valor().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detalleconsignacion.getiva().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detalleconsignacion.gettotal().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detalleconsignacion.getice().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detalleconsignacion.getcosto().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detalleconsignacion.getutilidad().toString();
		
		return sFilaDatos;
	}
	
	//@SuppressWarnings("deprecation")
	public void exportarExcelDetalleConsignacionsSeleccionados() throws Exception {
		ArrayList<DetalleConsignacion> detalleconsignacionsSeleccionados=new ArrayList<DetalleConsignacion>();		
		
		detalleconsignacionsSeleccionados=this.getDetalleConsignacionsSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"detalleconsignacion.xls";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		FileOutputStream fileOutputStream=null;
		
		try {
			HSSFWorkbook workbook = new HSSFWorkbook();
			HSSFSheet sheet = workbook.createSheet("DetalleConsignacions");
						
		    			
			Integer iRow=0;
			Integer iCell=0;
			
			HSSFRow row = sheet.createRow(iRow);
			HSSFCell cell = row.createCell(iCell);
			//cell.setCellValue("Blahblah");

			if(conCabecera) {
				this.getFilaCabeceraExportarExcelDetalleConsignacion(row);				
				iRow++;
			}				
			
			for(DetalleConsignacion detalleconsignacionAux:detalleconsignacionsSeleccionados) {
				row = sheet.createRow(iRow);
				
				this.getFilaDatosExportarExcelDetalleConsignacion(detalleconsignacionAux,row);
				
				iRow++;
			}
			
			
			fileOutputStream = new FileOutputStream(new File(sPath));
		    
			workbook.write(fileOutputStream);
			
			//fileOutputStream.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.detalleconsignacionSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Detalle Consignacion",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			
       		if (fileOutputStream != null) {
				fileOutputStream.close();
			}			
		}
	}		
	
	public void exportarXmlDetalleConsignacionsSeleccionados() throws Exception {
		ArrayList<DetalleConsignacion> detalleconsignacionsSeleccionados=new ArrayList<DetalleConsignacion>();		
		
		detalleconsignacionsSeleccionados=this.getDetalleConsignacionsSeleccionados(true);
		
		//String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		//Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		//String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"detalleconsignacion.xml";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		DocumentBuilderFactory documentBuilderFactory=null;
		DocumentBuilder documentBuilder =null;
		
		try {
			documentBuilderFactory = DocumentBuilderFactory.newInstance();
			documentBuilder = documentBuilderFactory.newDocumentBuilder();
	
			Document document = documentBuilder.newDocument();
			Element elementRoot = document.createElement("detalleconsignacions");
			
			document.appendChild(elementRoot);
		    			
												
			Element element = null;//document.createElement("detalleconsignacion");
			//elementRoot.appendChild(element);
		
			for(DetalleConsignacion detalleconsignacionAux:detalleconsignacionsSeleccionados) {
				element = document.createElement("detalleconsignacion");
				elementRoot.appendChild(element);
			
				this.setFilaDatosExportarXmlDetalleConsignacion(detalleconsignacionAux,document,element);
			}
			
			TransformerFactory transformerFactory = TransformerFactory.newInstance();
			Transformer transformer = transformerFactory.newTransformer();
			DOMSource domSource = new DOMSource(document);
			
			StreamResult streamResult = new StreamResult(new File(sPath));
	
			transformer.transform(domSource, streamResult);
						
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.detalleconsignacionSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Detalle Consignacion",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			       				
		}
	}	
	
	//@SuppressWarnings("deprecation")
	public void getFilaCabeceraExportarExcelDetalleConsignacion(HSSFRow row) {
		Integer iColumn=0;
		
		
		HSSFCell cell =null;
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleConsignacionConstantesFunciones.LABEL_ID);

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleConsignacionConstantesFunciones.LABEL_VERSIONROW);
		}

		cell = row.createCell(iColumn++);cell.setCellValue(DetalleConsignacionConstantesFunciones.LABEL_IDEMPRESA);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleConsignacionConstantesFunciones.LABEL_IDSUCURSAL);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleConsignacionConstantesFunciones.LABEL_IDEJERCICIO);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleConsignacionConstantesFunciones.LABEL_IDPERIODO);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleConsignacionConstantesFunciones.LABEL_IDANIO);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleConsignacionConstantesFunciones.LABEL_IDMES);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleConsignacionConstantesFunciones.LABEL_IDCONSIGNACION);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleConsignacionConstantesFunciones.LABEL_IDPRODUCTO);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleConsignacionConstantesFunciones.LABEL_IDBODEGA);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleConsignacionConstantesFunciones.LABEL_IDUNIDAD);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleConsignacionConstantesFunciones.LABEL_IDESTADODETALLEPEDIDO);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleConsignacionConstantesFunciones.LABEL_CANTIDAD);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleConsignacionConstantesFunciones.LABEL_PRECIO);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleConsignacionConstantesFunciones.LABEL_DESCUENTOPORCENTAJE);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleConsignacionConstantesFunciones.LABEL_DESCUENTOVALOR);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleConsignacionConstantesFunciones.LABEL_IVA);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleConsignacionConstantesFunciones.LABEL_TOTAL);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleConsignacionConstantesFunciones.LABEL_ICE);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleConsignacionConstantesFunciones.LABEL_COSTO);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleConsignacionConstantesFunciones.LABEL_UTILIDAD);
	}
	
	//@SuppressWarnings("deprecation")
	public void getFilaDatosExportarExcelDetalleConsignacion(DetalleConsignacion detalleconsignacion,HSSFRow row) {
		Integer iColumn=0;
		
		
		HSSFCell cell =null;
		cell = row.createCell(iColumn++);cell.setCellValue(detalleconsignacion.getId());
		cell = row.createCell(iColumn++);cell.setCellValue(detalleconsignacion.getempresa_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(detalleconsignacion.getsucursal_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(detalleconsignacion.getejercicio_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(detalleconsignacion.getperiodo_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(detalleconsignacion.getanio_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(detalleconsignacion.getmes_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(detalleconsignacion.getconsignacion_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(detalleconsignacion.getproducto_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(detalleconsignacion.getbodega_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(detalleconsignacion.getunidad_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(detalleconsignacion.getestadodetallepedido_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(detalleconsignacion.getcantidad());
		cell = row.createCell(iColumn++);cell.setCellValue(detalleconsignacion.getprecio());
		cell = row.createCell(iColumn++);cell.setCellValue(detalleconsignacion.getdescuento_porcentaje());
		cell = row.createCell(iColumn++);cell.setCellValue(detalleconsignacion.getdescuento_valor());
		cell = row.createCell(iColumn++);cell.setCellValue(detalleconsignacion.getiva());
		cell = row.createCell(iColumn++);cell.setCellValue(detalleconsignacion.gettotal());
		cell = row.createCell(iColumn++);cell.setCellValue(detalleconsignacion.getice());
		cell = row.createCell(iColumn++);cell.setCellValue(detalleconsignacion.getcosto());
		cell = row.createCell(iColumn++);cell.setCellValue(detalleconsignacion.getutilidad());				
	}
	
	public void setFilaDatosExportarXmlDetalleConsignacion(DetalleConsignacion detalleconsignacion,Document document,Element element) {
		/*
		Element lastname = document.createElement("lastname");
		lastname.appendChild(document.createTextNode("mook kim"));
		element.appendChild(lastname);
		*/
		

		Element elementId = document.createElement(DetalleConsignacionConstantesFunciones.ID);
		elementId.appendChild(document.createTextNode(detalleconsignacion.getId().toString().trim()));
		element.appendChild(elementId);

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){

		Element elementVersionRow = document.createElement(DetalleConsignacionConstantesFunciones.VERSIONROW);
		elementVersionRow.appendChild(document.createTextNode(detalleconsignacion.getVersionRow().toString().trim()));
		element.appendChild(elementVersionRow);
		}


		Element elementempresa_descripcion = document.createElement(DetalleConsignacionConstantesFunciones.IDEMPRESA);
		elementempresa_descripcion.appendChild(document.createTextNode(detalleconsignacion.getempresa_descripcion()));
		element.appendChild(elementempresa_descripcion);

		Element elementsucursal_descripcion = document.createElement(DetalleConsignacionConstantesFunciones.IDSUCURSAL);
		elementsucursal_descripcion.appendChild(document.createTextNode(detalleconsignacion.getsucursal_descripcion()));
		element.appendChild(elementsucursal_descripcion);

		Element elementejercicio_descripcion = document.createElement(DetalleConsignacionConstantesFunciones.IDEJERCICIO);
		elementejercicio_descripcion.appendChild(document.createTextNode(detalleconsignacion.getejercicio_descripcion()));
		element.appendChild(elementejercicio_descripcion);

		Element elementperiodo_descripcion = document.createElement(DetalleConsignacionConstantesFunciones.IDPERIODO);
		elementperiodo_descripcion.appendChild(document.createTextNode(detalleconsignacion.getperiodo_descripcion()));
		element.appendChild(elementperiodo_descripcion);

		Element elementanio_descripcion = document.createElement(DetalleConsignacionConstantesFunciones.IDANIO);
		elementanio_descripcion.appendChild(document.createTextNode(detalleconsignacion.getanio_descripcion()));
		element.appendChild(elementanio_descripcion);

		Element elementmes_descripcion = document.createElement(DetalleConsignacionConstantesFunciones.IDMES);
		elementmes_descripcion.appendChild(document.createTextNode(detalleconsignacion.getmes_descripcion()));
		element.appendChild(elementmes_descripcion);

		Element elementconsignacion_descripcion = document.createElement(DetalleConsignacionConstantesFunciones.IDCONSIGNACION);
		elementconsignacion_descripcion.appendChild(document.createTextNode(detalleconsignacion.getconsignacion_descripcion()));
		element.appendChild(elementconsignacion_descripcion);

		Element elementproducto_descripcion = document.createElement(DetalleConsignacionConstantesFunciones.IDPRODUCTO);
		elementproducto_descripcion.appendChild(document.createTextNode(detalleconsignacion.getproducto_descripcion()));
		element.appendChild(elementproducto_descripcion);

		Element elementbodega_descripcion = document.createElement(DetalleConsignacionConstantesFunciones.IDBODEGA);
		elementbodega_descripcion.appendChild(document.createTextNode(detalleconsignacion.getbodega_descripcion()));
		element.appendChild(elementbodega_descripcion);

		Element elementunidad_descripcion = document.createElement(DetalleConsignacionConstantesFunciones.IDUNIDAD);
		elementunidad_descripcion.appendChild(document.createTextNode(detalleconsignacion.getunidad_descripcion()));
		element.appendChild(elementunidad_descripcion);

		Element elementestadodetallepedido_descripcion = document.createElement(DetalleConsignacionConstantesFunciones.IDESTADODETALLEPEDIDO);
		elementestadodetallepedido_descripcion.appendChild(document.createTextNode(detalleconsignacion.getestadodetallepedido_descripcion()));
		element.appendChild(elementestadodetallepedido_descripcion);

		Element elementcantidad = document.createElement(DetalleConsignacionConstantesFunciones.CANTIDAD);
		elementcantidad.appendChild(document.createTextNode(detalleconsignacion.getcantidad().toString().trim()));
		element.appendChild(elementcantidad);

		Element elementprecio = document.createElement(DetalleConsignacionConstantesFunciones.PRECIO);
		elementprecio.appendChild(document.createTextNode(detalleconsignacion.getprecio().toString().trim()));
		element.appendChild(elementprecio);

		Element elementdescuento_porcentaje = document.createElement(DetalleConsignacionConstantesFunciones.DESCUENTOPORCENTAJE);
		elementdescuento_porcentaje.appendChild(document.createTextNode(detalleconsignacion.getdescuento_porcentaje().toString().trim()));
		element.appendChild(elementdescuento_porcentaje);

		Element elementdescuento_valor = document.createElement(DetalleConsignacionConstantesFunciones.DESCUENTOVALOR);
		elementdescuento_valor.appendChild(document.createTextNode(detalleconsignacion.getdescuento_valor().toString().trim()));
		element.appendChild(elementdescuento_valor);

		Element elementiva = document.createElement(DetalleConsignacionConstantesFunciones.IVA);
		elementiva.appendChild(document.createTextNode(detalleconsignacion.getiva().toString().trim()));
		element.appendChild(elementiva);

		Element elementtotal = document.createElement(DetalleConsignacionConstantesFunciones.TOTAL);
		elementtotal.appendChild(document.createTextNode(detalleconsignacion.gettotal().toString().trim()));
		element.appendChild(elementtotal);

		Element elementice = document.createElement(DetalleConsignacionConstantesFunciones.ICE);
		elementice.appendChild(document.createTextNode(detalleconsignacion.getice().toString().trim()));
		element.appendChild(elementice);

		Element elementcosto = document.createElement(DetalleConsignacionConstantesFunciones.COSTO);
		elementcosto.appendChild(document.createTextNode(detalleconsignacion.getcosto().toString().trim()));
		element.appendChild(elementcosto);

		Element elementutilidad = document.createElement(DetalleConsignacionConstantesFunciones.UTILIDAD);
		elementutilidad.appendChild(document.createTextNode(detalleconsignacion.getutilidad().toString().trim()));
		element.appendChild(elementutilidad);
	}
	
	public void generarReporteGroupGenericoDetalleConsignacionsSeleccionados(Boolean soloTotales) throws Exception {
		ArrayList<DetalleConsignacion> detalleconsignacionsSeleccionados=new ArrayList<DetalleConsignacion>();
		
		detalleconsignacionsSeleccionados=this.getDetalleConsignacionsSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
		
		/*
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		if(!soloTotales) {
			this.sTipoReporteExtra=Constantes2.S_REPORTE_EXTRA_GROUP_GENERICO;
		} else {
			this.sTipoReporteExtra=Constantes2.S_REPORTE_EXTRA_GROUP_TOTALES_GENERICO;
		}
		
		this.setColumnaDescripcionReporteGroupGenericoDetalleConsignacion(detalleconsignacionsSeleccionados);
		
		this.generarReporteDetalleConsignacions("Todos",detalleconsignacionsSeleccionados);
	}
	
	public void setColumnaDescripcionReporteGroupGenericoDetalleConsignacion(ArrayList<DetalleConsignacion> detalleconsignacionsSeleccionados) throws Exception {    		
		try {
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			
			Boolean existe=false;
			
			for(DetalleConsignacion detalleconsignacionAux:detalleconsignacionsSeleccionados) {
				detalleconsignacionAux.setsDetalleGeneralEntityReporte(detalleconsignacionAux.toString());
			
				if(sTipoSeleccionar.equals(DetalleConsignacionConstantesFunciones.LABEL_IDEMPRESA)) {
					existe=true;
					detalleconsignacionAux.setsDescripcionGeneralEntityReporte1(detalleconsignacionAux.getempresa_descripcion());
				}
				 else if(sTipoSeleccionar.equals(DetalleConsignacionConstantesFunciones.LABEL_IDSUCURSAL)) {
					existe=true;
					detalleconsignacionAux.setsDescripcionGeneralEntityReporte1(detalleconsignacionAux.getsucursal_descripcion());
				}
				 else if(sTipoSeleccionar.equals(DetalleConsignacionConstantesFunciones.LABEL_IDEJERCICIO)) {
					existe=true;
					detalleconsignacionAux.setsDescripcionGeneralEntityReporte1(detalleconsignacionAux.getejercicio_descripcion());
				}
				 else if(sTipoSeleccionar.equals(DetalleConsignacionConstantesFunciones.LABEL_IDPERIODO)) {
					existe=true;
					detalleconsignacionAux.setsDescripcionGeneralEntityReporte1(detalleconsignacionAux.getperiodo_descripcion());
				}
				 else if(sTipoSeleccionar.equals(DetalleConsignacionConstantesFunciones.LABEL_IDANIO)) {
					existe=true;
					detalleconsignacionAux.setsDescripcionGeneralEntityReporte1(detalleconsignacionAux.getanio_descripcion());
				}
				 else if(sTipoSeleccionar.equals(DetalleConsignacionConstantesFunciones.LABEL_IDMES)) {
					existe=true;
					detalleconsignacionAux.setsDescripcionGeneralEntityReporte1(detalleconsignacionAux.getmes_descripcion());
				}
				 else if(sTipoSeleccionar.equals(DetalleConsignacionConstantesFunciones.LABEL_IDCONSIGNACION)) {
					existe=true;
					detalleconsignacionAux.setsDescripcionGeneralEntityReporte1(detalleconsignacionAux.getconsignacion_descripcion());
				}
				 else if(sTipoSeleccionar.equals(DetalleConsignacionConstantesFunciones.LABEL_IDPRODUCTO)) {
					existe=true;
					detalleconsignacionAux.setsDescripcionGeneralEntityReporte1(detalleconsignacionAux.getproducto_descripcion());
				}
				 else if(sTipoSeleccionar.equals(DetalleConsignacionConstantesFunciones.LABEL_IDBODEGA)) {
					existe=true;
					detalleconsignacionAux.setsDescripcionGeneralEntityReporte1(detalleconsignacionAux.getbodega_descripcion());
				}
				 else if(sTipoSeleccionar.equals(DetalleConsignacionConstantesFunciones.LABEL_IDUNIDAD)) {
					existe=true;
					detalleconsignacionAux.setsDescripcionGeneralEntityReporte1(detalleconsignacionAux.getunidad_descripcion());
				}
				 else if(sTipoSeleccionar.equals(DetalleConsignacionConstantesFunciones.LABEL_IDESTADODETALLEPEDIDO)) {
					existe=true;
					detalleconsignacionAux.setsDescripcionGeneralEntityReporte1(detalleconsignacionAux.getestadodetallepedido_descripcion());
				}
				 else if(sTipoSeleccionar.equals(DetalleConsignacionConstantesFunciones.LABEL_CANTIDAD)) {
					existe=true;
					detalleconsignacionAux.setsDescripcionGeneralEntityReporte1(detalleconsignacionAux.getcantidad().toString());
				}
			}	
											
			if(!existe) {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}										
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleConsignacionConstantesFunciones.CLASSNAME);
		}
	}
	
	
	public void actualizarEstadoCeldasBotonesDetalleConsignacion(String sAccion,Boolean isGuardarCambiosEnLote,Boolean isEsMantenimientoRelacionado) throws Exception {
		if(sAccion=="n") {
			if(!this.esParaBusquedaForeignKey) {
				this.isVisibilidadCeldaNuevoDetalleConsignacion=true;
				this.isVisibilidadCeldaNuevoRelacionesDetalleConsignacion=true;
				this.isVisibilidadCeldaGuardarCambiosDetalleConsignacion=true;
			}
			
			this.isVisibilidadCeldaModificarDetalleConsignacion=false;
			this.isVisibilidadCeldaActualizarDetalleConsignacion=false;
			this.isVisibilidadCeldaEliminarDetalleConsignacion=false;
			this.isVisibilidadCeldaCancelarDetalleConsignacion=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarDetalleConsignacion=true;
				} else {
					this.isVisibilidadCeldaGuardarDetalleConsignacion=false;
				}
			}
		} else if(sAccion=="a") {
			this.isVisibilidadCeldaNuevoDetalleConsignacion=false;
			this.isVisibilidadCeldaNuevoRelacionesDetalleConsignacion=false;
			this.isVisibilidadCeldaGuardarCambiosDetalleConsignacion=false;
			this.isVisibilidadCeldaModificarDetalleConsignacion=false;
			this.isVisibilidadCeldaActualizarDetalleConsignacion=true;
			this.isVisibilidadCeldaEliminarDetalleConsignacion=false;
			this.isVisibilidadCeldaCancelarDetalleConsignacion=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarDetalleConsignacion=true;
				} else {
					this.isVisibilidadCeldaGuardarDetalleConsignacion=false;
				}
			}
		} else if(sAccion=="ae") {
			this.isVisibilidadCeldaNuevoDetalleConsignacion=false;
			this.isVisibilidadCeldaNuevoRelacionesDetalleConsignacion=false;
			this.isVisibilidadCeldaGuardarCambiosDetalleConsignacion=false;
			this.isVisibilidadCeldaModificarDetalleConsignacion=false;
			this.isVisibilidadCeldaActualizarDetalleConsignacion=true;
			this.isVisibilidadCeldaEliminarDetalleConsignacion=true;
			this.isVisibilidadCeldaCancelarDetalleConsignacion=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarDetalleConsignacion=true;
				} else {
					this.isVisibilidadCeldaGuardarDetalleConsignacion=false;
				}
			}
		}
		//Para Mantenimientos de tablas relacionados con mas de columnas minimas
		else if(sAccion=="ae2") {
			this.isVisibilidadCeldaNuevoDetalleConsignacion=false;
			this.isVisibilidadCeldaNuevoRelacionesDetalleConsignacion=false;
			this.isVisibilidadCeldaGuardarCambiosDetalleConsignacion=false;
			this.isVisibilidadCeldaModificarDetalleConsignacion=false;
			this.isVisibilidadCeldaActualizarDetalleConsignacion=true;
			this.isVisibilidadCeldaEliminarDetalleConsignacion=false;
			this.isVisibilidadCeldaCancelarDetalleConsignacion=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarDetalleConsignacion=false;
				} else {
					this.isVisibilidadCeldaGuardarDetalleConsignacion=false;
				}
			}
		} else if(sAccion=="c") {
			this.isVisibilidadCeldaNuevoDetalleConsignacion=true;
			this.isVisibilidadCeldaNuevoRelacionesDetalleConsignacion=true;
			this.isVisibilidadCeldaGuardarCambiosDetalleConsignacion=true;
			this.isVisibilidadCeldaModificarDetalleConsignacion=false;
			this.isVisibilidadCeldaActualizarDetalleConsignacion=false;
			this.isVisibilidadCeldaEliminarDetalleConsignacion=false;
			this.isVisibilidadCeldaCancelarDetalleConsignacion=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarDetalleConsignacion=true;
				} else {
					this.isVisibilidadCeldaGuardarDetalleConsignacion=false;
				}
			}
		} else if(sAccion=="t") {
			this.isVisibilidadCeldaNuevoDetalleConsignacion=false;
			this.isVisibilidadCeldaNuevoRelacionesDetalleConsignacion=false;
			this.isVisibilidadCeldaGuardarCambiosDetalleConsignacion=false;
			this.isVisibilidadCeldaActualizarDetalleConsignacion=false;
			this.isVisibilidadCeldaEliminarDetalleConsignacion=false;
			this.isVisibilidadCeldaCancelarDetalleConsignacion=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarDetalleConsignacion=false;
				} else {
					this.isVisibilidadCeldaGuardarDetalleConsignacion=false;
				}
			}
		}  else if(sAccion=="s"||sAccion=="s2") {
			this.isVisibilidadCeldaNuevoDetalleConsignacion=false;
			this.isVisibilidadCeldaNuevoRelacionesDetalleConsignacion=false;
			this.isVisibilidadCeldaGuardarCambiosDetalleConsignacion=false;
			this.isVisibilidadCeldaModificarDetalleConsignacion=true;
			this.isVisibilidadCeldaActualizarDetalleConsignacion=false;
			this.isVisibilidadCeldaEliminarDetalleConsignacion=false;
			this.isVisibilidadCeldaCancelarDetalleConsignacion=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarDetalleConsignacion=false;
				} else {
					this.isVisibilidadCeldaGuardarDetalleConsignacion=false;
				}
			}
		}
		
		//ACTUALIZA VISIBILIDAD PANELES
		if(DetalleConsignacionJInternalFrame.CON_DATOS_FRAME && !this.esParaBusquedaForeignKey) {
			//SIEMPRE VISIBLE
			this.isVisibilidadCeldaNuevoDetalleConsignacion=true;
			this.isVisibilidadCeldaNuevoRelacionesDetalleConsignacion=true;
			this.isVisibilidadCeldaGuardarCambiosDetalleConsignacion=true;
		} else {
			this.actualizarEstadoPanelsDetalleConsignacion(sAccion);						
		}
		
		if(this.esParaBusquedaForeignKey) {
			this.isVisibilidadCeldaCopiarDetalleConsignacion=false;
			//this.isVisibilidadCeldaVerFormDetalleConsignacion=false;
			this.isVisibilidadCeldaDuplicarDetalleConsignacion=false;
		}
		
		//SI ES MANTENIMIENTO RELACIONES
		if(!detalleconsignacionSessionBean.getConGuardarRelaciones()) {
			this.isVisibilidadCeldaNuevoRelacionesDetalleConsignacion=false;
		} else {
			this.isVisibilidadCeldaNuevoDetalleConsignacion=false;
			this.isVisibilidadCeldaGuardarCambiosDetalleConsignacion=false;
		}
		
		//SI ES MANTENIMIENTO RELACIONADO
		if(detalleconsignacionSessionBean.getEsGuardarRelacionado()) {
			if(!detalleconsignacionSessionBean.getConGuardarRelaciones()) {	
				this.isVisibilidadCeldaNuevoRelacionesDetalleConsignacion=false;												
			}
			
			this.jButtonCerrarDetalleConsignacion.setVisible(false);
		}
		
		//SI NO TIENE MAXIMO DE RELACIONES PERMITIDAS
		if(!this.conMaximoRelaciones) {
			this.isVisibilidadCeldaNuevoRelacionesDetalleConsignacion=false;
		}
		
		if(!this.permiteMantenimiento(this.detalleconsignacion)) {
			this.isVisibilidadCeldaActualizarDetalleConsignacion=false;
			this.isVisibilidadCeldaEliminarDetalleConsignacion=false;
		}
		
		
		
	}
	
	public void actualizarEstadoCeldasBotonesConGuardarRelacionesDetalleConsignacion() {
	}
	
	public void actualizarEstadoPanelsDetalleConsignacion(String sAccion) {
		if(sAccion=="n") {
			if(this.jScrollPanelDatosEdicionDetalleConsignacion!=null) {
				this.jScrollPanelDatosEdicionDetalleConsignacion.setVisible(false);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasDetalleConsignacion!=null) {
				this.jTabbedPaneBusquedasDetalleConsignacion.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosDetalleConsignacion!=null) {
				this.jScrollPanelDatosDetalleConsignacion.setVisible(true);
			}
			
			if(this.jPanelPaginacionDetalleConsignacion!=null) {
				this.jPanelPaginacionDetalleConsignacion.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesDetalleConsignacion!=null) {
				this.jPanelParametrosReportesDetalleConsignacion.setVisible(true);		    
			}
			
		} else if(sAccion=="a") {				
			if(this.jScrollPanelDatosEdicionDetalleConsignacion!=null) {
				this.jScrollPanelDatosEdicionDetalleConsignacion.setVisible(true);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasDetalleConsignacion!=null) {
				this.jTabbedPaneBusquedasDetalleConsignacion.setVisible(false);			
			}
			
			
			
			if(this.jScrollPanelDatosDetalleConsignacion!=null) {
				this.jScrollPanelDatosDetalleConsignacion.setVisible(false);
			}
			
			if(this.jPanelPaginacionDetalleConsignacion!=null) {
				this.jPanelPaginacionDetalleConsignacion.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesDetalleConsignacion!=null) {
				this.jPanelParametrosReportesDetalleConsignacion.setVisible(false);
			}
						
		} else if(sAccion=="ae") {		
			if(this.jScrollPanelDatosEdicionDetalleConsignacion!=null) {
				this.jScrollPanelDatosEdicionDetalleConsignacion.setVisible(true);		
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasDetalleConsignacion!=null) {
				this.jTabbedPaneBusquedasDetalleConsignacion.setVisible(false);			
			}
			
			
			if(this.jScrollPanelDatosDetalleConsignacion!=null) {
				this.jScrollPanelDatosDetalleConsignacion.setVisible(false);
			}
			
			if(this.jPanelPaginacionDetalleConsignacion!=null) {
				this.jPanelPaginacionDetalleConsignacion.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesDetalleConsignacion!=null) {
				this.jPanelParametrosReportesDetalleConsignacion.setVisible(false);
			}
						
		}
		//Para Mantenimientos de tablas relacionados con mas de columnas minimas
		else if(sAccion=="ae2") {	
			if(this.jScrollPanelDatosEdicionDetalleConsignacion!=null) {
				this.jScrollPanelDatosEdicionDetalleConsignacion.setVisible(true);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasDetalleConsignacion!=null) {
				this.jTabbedPaneBusquedasDetalleConsignacion.setVisible(false);			
			}
			
			
			if(this.jScrollPanelDatosDetalleConsignacion!=null) {
				this.jScrollPanelDatosDetalleConsignacion.setVisible(false);
			}
			
			if(this.jPanelPaginacionDetalleConsignacion!=null) {
				this.jPanelPaginacionDetalleConsignacion.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesDetalleConsignacion!=null) {
				this.jPanelParametrosReportesDetalleConsignacion.setVisible(false);
			}
						
		} else if(sAccion=="c") {	
			if(this.jScrollPanelDatosEdicionDetalleConsignacion!=null) {
				this.jScrollPanelDatosEdicionDetalleConsignacion.setVisible(false);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasDetalleConsignacion!=null) {
				this.jTabbedPaneBusquedasDetalleConsignacion.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosDetalleConsignacion!=null) {
				this.jScrollPanelDatosDetalleConsignacion.setVisible(true);
			}
			
			if(this.jPanelPaginacionDetalleConsignacion!=null) {
				this.jPanelPaginacionDetalleConsignacion.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesDetalleConsignacion!=null) {
				this.jPanelParametrosReportesDetalleConsignacion.setVisible(true);
			}
						
		} else if(sAccion=="t") {
			
			if(this.jScrollPanelDatosEdicionDetalleConsignacion!=null) {
				this.jScrollPanelDatosEdicionDetalleConsignacion.setVisible(false);
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasDetalleConsignacion!=null) {
				this.jTabbedPaneBusquedasDetalleConsignacion.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosDetalleConsignacion!=null) {
				this.jScrollPanelDatosDetalleConsignacion.setVisible(true);
			}
			
			if(this.jPanelPaginacionDetalleConsignacion!=null) {
				this.jPanelPaginacionDetalleConsignacion.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesDetalleConsignacion!=null) {
				this.jPanelParametrosReportesDetalleConsignacion.setVisible(true);
			}
						
		}  else if(sAccion=="s"||sAccion=="s2") {
			if(this.jScrollPanelDatosEdicionDetalleConsignacion!=null) {
				this.jScrollPanelDatosEdicionDetalleConsignacion.setVisible(false);
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasDetalleConsignacion!=null) {
				this.jTabbedPaneBusquedasDetalleConsignacion.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosDetalleConsignacion!=null) {
				this.jScrollPanelDatosDetalleConsignacion.setVisible(true);
			}
			
			if(this.jPanelPaginacionDetalleConsignacion!=null) {
				this.jPanelPaginacionDetalleConsignacion.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesDetalleConsignacion!=null) {
				this.jPanelParametrosReportesDetalleConsignacion.setVisible(true);
			}
			
		} 
		
		if(sAccion.equals("relacionado") || this.detalleconsignacionSessionBean.getEsGuardarRelacionado()) {
			if(!this.conCargarMinimo) {
				//BYDAN_BUSQUEDAS
				
				if(this.jTabbedPaneBusquedasDetalleConsignacion!=null) {
					this.jTabbedPaneBusquedasDetalleConsignacion.setVisible(false);				
				}
				
			}
			
			if(this.jPanelParametrosReportesDetalleConsignacion!=null) {
				this.jPanelParametrosReportesDetalleConsignacion.setVisible(false);
			}
		
		} else if(sAccion.equals("no_relacionado") && !this.detalleconsignacionSessionBean.getEsGuardarRelacionado()) {
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasDetalleConsignacion!=null) {
				this.jTabbedPaneBusquedasDetalleConsignacion.setVisible(true);			
			}
			
			if(this.jPanelParametrosReportesDetalleConsignacion!=null) {
				this.jPanelParametrosReportesDetalleConsignacion.setVisible(true);
			}
		}
	}	
	
	

	public void setVisibilidadBusquedasParaEmpresa(Boolean isParaEmpresa){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaEmpresaNegation=!isParaEmpresa;

			this.isVisibilidadFK_IdBodega=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdBodega) {this.jTabbedPaneBusquedasDetalleConsignacion.remove(jPanelFK_IdBodegaDetalleConsignacion);}

			this.isVisibilidadFK_IdConsignacion=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdConsignacion) {this.jTabbedPaneBusquedasDetalleConsignacion.remove(jPanelFK_IdConsignacionDetalleConsignacion);}

			this.isVisibilidadFK_IdEstadoDetallePedido=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdEstadoDetallePedido) {this.jTabbedPaneBusquedasDetalleConsignacion.remove(jPanelFK_IdEstadoDetallePedidoDetalleConsignacion);}

			this.isVisibilidadFK_IdProducto=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdProducto) {this.jTabbedPaneBusquedasDetalleConsignacion.remove(jPanelFK_IdProductoDetalleConsignacion);}

			this.isVisibilidadFK_IdUnidad=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdUnidad) {this.jTabbedPaneBusquedasDetalleConsignacion.remove(jPanelFK_IdUnidadDetalleConsignacion);}
		}
		
	}

	public void setVisibilidadBusquedasParaSucursal(Boolean isParaSucursal){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaSucursalNegation=!isParaSucursal;

			this.isVisibilidadFK_IdBodega=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdBodega) {this.jTabbedPaneBusquedasDetalleConsignacion.remove(jPanelFK_IdBodegaDetalleConsignacion);}

			this.isVisibilidadFK_IdConsignacion=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdConsignacion) {this.jTabbedPaneBusquedasDetalleConsignacion.remove(jPanelFK_IdConsignacionDetalleConsignacion);}

			this.isVisibilidadFK_IdEstadoDetallePedido=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdEstadoDetallePedido) {this.jTabbedPaneBusquedasDetalleConsignacion.remove(jPanelFK_IdEstadoDetallePedidoDetalleConsignacion);}

			this.isVisibilidadFK_IdProducto=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdProducto) {this.jTabbedPaneBusquedasDetalleConsignacion.remove(jPanelFK_IdProductoDetalleConsignacion);}

			this.isVisibilidadFK_IdUnidad=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdUnidad) {this.jTabbedPaneBusquedasDetalleConsignacion.remove(jPanelFK_IdUnidadDetalleConsignacion);}
		}
		
	}

	public void setVisibilidadBusquedasParaEjercicio(Boolean isParaEjercicio){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaEjercicioNegation=!isParaEjercicio;

			this.isVisibilidadFK_IdBodega=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdBodega) {this.jTabbedPaneBusquedasDetalleConsignacion.remove(jPanelFK_IdBodegaDetalleConsignacion);}

			this.isVisibilidadFK_IdConsignacion=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdConsignacion) {this.jTabbedPaneBusquedasDetalleConsignacion.remove(jPanelFK_IdConsignacionDetalleConsignacion);}

			this.isVisibilidadFK_IdEstadoDetallePedido=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdEstadoDetallePedido) {this.jTabbedPaneBusquedasDetalleConsignacion.remove(jPanelFK_IdEstadoDetallePedidoDetalleConsignacion);}

			this.isVisibilidadFK_IdProducto=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdProducto) {this.jTabbedPaneBusquedasDetalleConsignacion.remove(jPanelFK_IdProductoDetalleConsignacion);}

			this.isVisibilidadFK_IdUnidad=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdUnidad) {this.jTabbedPaneBusquedasDetalleConsignacion.remove(jPanelFK_IdUnidadDetalleConsignacion);}
		}
		
	}

	public void setVisibilidadBusquedasParaPeriodo(Boolean isParaPeriodo){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaPeriodoNegation=!isParaPeriodo;

			this.isVisibilidadFK_IdBodega=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdBodega) {this.jTabbedPaneBusquedasDetalleConsignacion.remove(jPanelFK_IdBodegaDetalleConsignacion);}

			this.isVisibilidadFK_IdConsignacion=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdConsignacion) {this.jTabbedPaneBusquedasDetalleConsignacion.remove(jPanelFK_IdConsignacionDetalleConsignacion);}

			this.isVisibilidadFK_IdEstadoDetallePedido=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdEstadoDetallePedido) {this.jTabbedPaneBusquedasDetalleConsignacion.remove(jPanelFK_IdEstadoDetallePedidoDetalleConsignacion);}

			this.isVisibilidadFK_IdProducto=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdProducto) {this.jTabbedPaneBusquedasDetalleConsignacion.remove(jPanelFK_IdProductoDetalleConsignacion);}

			this.isVisibilidadFK_IdUnidad=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdUnidad) {this.jTabbedPaneBusquedasDetalleConsignacion.remove(jPanelFK_IdUnidadDetalleConsignacion);}
		}
		
	}

	public void setVisibilidadBusquedasParaAnio(Boolean isParaAnio){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaAnioNegation=!isParaAnio;

			this.isVisibilidadFK_IdBodega=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdBodega) {this.jTabbedPaneBusquedasDetalleConsignacion.remove(jPanelFK_IdBodegaDetalleConsignacion);}

			this.isVisibilidadFK_IdConsignacion=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdConsignacion) {this.jTabbedPaneBusquedasDetalleConsignacion.remove(jPanelFK_IdConsignacionDetalleConsignacion);}

			this.isVisibilidadFK_IdEstadoDetallePedido=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdEstadoDetallePedido) {this.jTabbedPaneBusquedasDetalleConsignacion.remove(jPanelFK_IdEstadoDetallePedidoDetalleConsignacion);}

			this.isVisibilidadFK_IdProducto=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdProducto) {this.jTabbedPaneBusquedasDetalleConsignacion.remove(jPanelFK_IdProductoDetalleConsignacion);}

			this.isVisibilidadFK_IdUnidad=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdUnidad) {this.jTabbedPaneBusquedasDetalleConsignacion.remove(jPanelFK_IdUnidadDetalleConsignacion);}
		}
		
	}

	public void setVisibilidadBusquedasParaMes(Boolean isParaMes){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaMesNegation=!isParaMes;

			this.isVisibilidadFK_IdBodega=isParaMesNegation;
			if(!this.isVisibilidadFK_IdBodega) {this.jTabbedPaneBusquedasDetalleConsignacion.remove(jPanelFK_IdBodegaDetalleConsignacion);}

			this.isVisibilidadFK_IdConsignacion=isParaMesNegation;
			if(!this.isVisibilidadFK_IdConsignacion) {this.jTabbedPaneBusquedasDetalleConsignacion.remove(jPanelFK_IdConsignacionDetalleConsignacion);}

			this.isVisibilidadFK_IdEstadoDetallePedido=isParaMesNegation;
			if(!this.isVisibilidadFK_IdEstadoDetallePedido) {this.jTabbedPaneBusquedasDetalleConsignacion.remove(jPanelFK_IdEstadoDetallePedidoDetalleConsignacion);}

			this.isVisibilidadFK_IdProducto=isParaMesNegation;
			if(!this.isVisibilidadFK_IdProducto) {this.jTabbedPaneBusquedasDetalleConsignacion.remove(jPanelFK_IdProductoDetalleConsignacion);}

			this.isVisibilidadFK_IdUnidad=isParaMesNegation;
			if(!this.isVisibilidadFK_IdUnidad) {this.jTabbedPaneBusquedasDetalleConsignacion.remove(jPanelFK_IdUnidadDetalleConsignacion);}
		}
		
	}

	public void setVisibilidadBusquedasParaConsignacion(Boolean isParaConsignacion){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaConsignacionNegation=!isParaConsignacion;

			this.isVisibilidadFK_IdBodega=isParaConsignacionNegation;
			if(!this.isVisibilidadFK_IdBodega) {this.jTabbedPaneBusquedasDetalleConsignacion.remove(jPanelFK_IdBodegaDetalleConsignacion);}

			this.isVisibilidadFK_IdConsignacion=isParaConsignacion;
			if(!this.isVisibilidadFK_IdConsignacion) {this.jTabbedPaneBusquedasDetalleConsignacion.remove(jPanelFK_IdConsignacionDetalleConsignacion);}

			this.isVisibilidadFK_IdEstadoDetallePedido=isParaConsignacionNegation;
			if(!this.isVisibilidadFK_IdEstadoDetallePedido) {this.jTabbedPaneBusquedasDetalleConsignacion.remove(jPanelFK_IdEstadoDetallePedidoDetalleConsignacion);}

			this.isVisibilidadFK_IdProducto=isParaConsignacionNegation;
			if(!this.isVisibilidadFK_IdProducto) {this.jTabbedPaneBusquedasDetalleConsignacion.remove(jPanelFK_IdProductoDetalleConsignacion);}

			this.isVisibilidadFK_IdUnidad=isParaConsignacionNegation;
			if(!this.isVisibilidadFK_IdUnidad) {this.jTabbedPaneBusquedasDetalleConsignacion.remove(jPanelFK_IdUnidadDetalleConsignacion);}
		}
		
	}

	public void setVisibilidadBusquedasParaProducto(Boolean isParaProducto){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaProductoNegation=!isParaProducto;

			this.isVisibilidadFK_IdBodega=isParaProductoNegation;
			if(!this.isVisibilidadFK_IdBodega) {this.jTabbedPaneBusquedasDetalleConsignacion.remove(jPanelFK_IdBodegaDetalleConsignacion);}

			this.isVisibilidadFK_IdConsignacion=isParaProductoNegation;
			if(!this.isVisibilidadFK_IdConsignacion) {this.jTabbedPaneBusquedasDetalleConsignacion.remove(jPanelFK_IdConsignacionDetalleConsignacion);}

			this.isVisibilidadFK_IdEstadoDetallePedido=isParaProductoNegation;
			if(!this.isVisibilidadFK_IdEstadoDetallePedido) {this.jTabbedPaneBusquedasDetalleConsignacion.remove(jPanelFK_IdEstadoDetallePedidoDetalleConsignacion);}

			this.isVisibilidadFK_IdProducto=isParaProducto;
			if(!this.isVisibilidadFK_IdProducto) {this.jTabbedPaneBusquedasDetalleConsignacion.remove(jPanelFK_IdProductoDetalleConsignacion);}

			this.isVisibilidadFK_IdUnidad=isParaProductoNegation;
			if(!this.isVisibilidadFK_IdUnidad) {this.jTabbedPaneBusquedasDetalleConsignacion.remove(jPanelFK_IdUnidadDetalleConsignacion);}
		}
		
	}

	public void setVisibilidadBusquedasParaBodega(Boolean isParaBodega){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaBodegaNegation=!isParaBodega;

			this.isVisibilidadFK_IdBodega=isParaBodega;
			if(!this.isVisibilidadFK_IdBodega) {this.jTabbedPaneBusquedasDetalleConsignacion.remove(jPanelFK_IdBodegaDetalleConsignacion);}

			this.isVisibilidadFK_IdConsignacion=isParaBodegaNegation;
			if(!this.isVisibilidadFK_IdConsignacion) {this.jTabbedPaneBusquedasDetalleConsignacion.remove(jPanelFK_IdConsignacionDetalleConsignacion);}

			this.isVisibilidadFK_IdEstadoDetallePedido=isParaBodegaNegation;
			if(!this.isVisibilidadFK_IdEstadoDetallePedido) {this.jTabbedPaneBusquedasDetalleConsignacion.remove(jPanelFK_IdEstadoDetallePedidoDetalleConsignacion);}

			this.isVisibilidadFK_IdProducto=isParaBodegaNegation;
			if(!this.isVisibilidadFK_IdProducto) {this.jTabbedPaneBusquedasDetalleConsignacion.remove(jPanelFK_IdProductoDetalleConsignacion);}

			this.isVisibilidadFK_IdUnidad=isParaBodegaNegation;
			if(!this.isVisibilidadFK_IdUnidad) {this.jTabbedPaneBusquedasDetalleConsignacion.remove(jPanelFK_IdUnidadDetalleConsignacion);}
		}
		
	}

	public void setVisibilidadBusquedasParaUnidad(Boolean isParaUnidad){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaUnidadNegation=!isParaUnidad;

			this.isVisibilidadFK_IdBodega=isParaUnidadNegation;
			if(!this.isVisibilidadFK_IdBodega) {this.jTabbedPaneBusquedasDetalleConsignacion.remove(jPanelFK_IdBodegaDetalleConsignacion);}

			this.isVisibilidadFK_IdConsignacion=isParaUnidadNegation;
			if(!this.isVisibilidadFK_IdConsignacion) {this.jTabbedPaneBusquedasDetalleConsignacion.remove(jPanelFK_IdConsignacionDetalleConsignacion);}

			this.isVisibilidadFK_IdEstadoDetallePedido=isParaUnidadNegation;
			if(!this.isVisibilidadFK_IdEstadoDetallePedido) {this.jTabbedPaneBusquedasDetalleConsignacion.remove(jPanelFK_IdEstadoDetallePedidoDetalleConsignacion);}

			this.isVisibilidadFK_IdProducto=isParaUnidadNegation;
			if(!this.isVisibilidadFK_IdProducto) {this.jTabbedPaneBusquedasDetalleConsignacion.remove(jPanelFK_IdProductoDetalleConsignacion);}

			this.isVisibilidadFK_IdUnidad=isParaUnidad;
			if(!this.isVisibilidadFK_IdUnidad) {this.jTabbedPaneBusquedasDetalleConsignacion.remove(jPanelFK_IdUnidadDetalleConsignacion);}
		}
		
	}

	public void setVisibilidadBusquedasParaEstadoDetallePedido(Boolean isParaEstadoDetallePedido){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaEstadoDetallePedidoNegation=!isParaEstadoDetallePedido;

			this.isVisibilidadFK_IdBodega=isParaEstadoDetallePedidoNegation;
			if(!this.isVisibilidadFK_IdBodega) {this.jTabbedPaneBusquedasDetalleConsignacion.remove(jPanelFK_IdBodegaDetalleConsignacion);}

			this.isVisibilidadFK_IdConsignacion=isParaEstadoDetallePedidoNegation;
			if(!this.isVisibilidadFK_IdConsignacion) {this.jTabbedPaneBusquedasDetalleConsignacion.remove(jPanelFK_IdConsignacionDetalleConsignacion);}

			this.isVisibilidadFK_IdEstadoDetallePedido=isParaEstadoDetallePedido;
			if(!this.isVisibilidadFK_IdEstadoDetallePedido) {this.jTabbedPaneBusquedasDetalleConsignacion.remove(jPanelFK_IdEstadoDetallePedidoDetalleConsignacion);}

			this.isVisibilidadFK_IdProducto=isParaEstadoDetallePedidoNegation;
			if(!this.isVisibilidadFK_IdProducto) {this.jTabbedPaneBusquedasDetalleConsignacion.remove(jPanelFK_IdProductoDetalleConsignacion);}

			this.isVisibilidadFK_IdUnidad=isParaEstadoDetallePedidoNegation;
			if(!this.isVisibilidadFK_IdUnidad) {this.jTabbedPaneBusquedasDetalleConsignacion.remove(jPanelFK_IdUnidadDetalleConsignacion);}
		}
		
	}
	
	
	
	

	public String registrarSesionDetalleConsignacionParaBusquedaProductos() throws Exception {
		Boolean isPaginaPopupProducto=false;

		try {

			if(detalleconsignacionSessionBean==null) {
				detalleconsignacionSessionBean=new DetalleConsignacionSessionBean();
			}

			if(productoSessionBean==null) {
				productoSessionBean=new ProductoSessionBean();
			}

			productoSessionBean.setsPathNavegacionActual(detalleconsignacionSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+ProductoConstantesFunciones.SCLASSWEBTITULO);
			productoSessionBean.setisPermiteRecargarInformacion(false);
			productoSessionBean.setisPaginaPopup(true);
			isPaginaPopupProducto=productoSessionBean.getisPaginaPopup();
			productoSessionBean.setisPaginaPopup(false);
			productoSessionBean.setEstaModoBusqueda(true);
			productoSessionBean.setsFuncionBusquedaRapida("window.opener.detalleconsignacionFuncionGeneral.setCombosCodigoDesdeBusquedaid_producto(TO_REPLACE);");
			productoSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeProducto(true);
			productoSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeProducto(DetalleConsignacionConstantesFunciones.SNOMBREOPCION);
			//productoSessionBean.setisBusquedaDesdeForeignKeySesionDetalleConsignacion(true);
			//productoSessionBean.setlidDetalleConsignacionActual(this.idDetalleConsignacionActual);

			detalleconsignacionSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyDetalleConsignacion(true);
			detalleconsignacionSessionBean.setlIdDetalleConsignacionActualForeignKey(this.idDetalleConsignacionActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
			return "";
	}
	
	
	public void guardarDatosBusquedaSession() throws Exception {
		
		//DetalleConsignacionSessionBean detalleconsignacionSessionBean=new DetalleConsignacionSessionBean();
		
		if(this.detalleconsignacionSessionBean==null) {
			this.detalleconsignacionSessionBean=new DetalleConsignacionSessionBean();
		}
		
		this.detalleconsignacionSessionBean.setsUltimaBusquedaDetalleConsignacion(this.getsAccionBusqueda());
		this.detalleconsignacionSessionBean.setiNumeroPaginacion(this.getiNumeroPaginacion());
		this.detalleconsignacionSessionBean.setiNumeroPaginacionPagina(this.getiNumeroPaginacionPagina());
		
		if(this.getsAccionBusqueda().equals("Todos")) {
			;
		}
		

		else if(this.getsAccionBusqueda().equals("FK_IdBodega")) {
			detalleconsignacionSessionBean.setid_bodega(this.getid_bodegaFK_IdBodega());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdConsignacion")) {
			detalleconsignacionSessionBean.setid_consignacion(this.getid_consignacionFK_IdConsignacion());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdEjercicio")) {
			detalleconsignacionSessionBean.setid_ejercicio(this.getid_ejercicioFK_IdEjercicio());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdEmpresa")) {
			detalleconsignacionSessionBean.setid_empresa(this.getid_empresaFK_IdEmpresa());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdEstadoDetallePedido")) {
			detalleconsignacionSessionBean.setid_estado_detalle_pedido(this.getid_estado_detalle_pedidoFK_IdEstadoDetallePedido());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdPeriodo")) {
			detalleconsignacionSessionBean.setid_periodo(this.getid_periodoFK_IdPeriodo());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdProducto")) {
			detalleconsignacionSessionBean.setid_producto(this.getid_productoFK_IdProducto());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdSucursal")) {
			detalleconsignacionSessionBean.setid_sucursal(this.getid_sucursalFK_IdSucursal());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdUnidad")) {
			detalleconsignacionSessionBean.setid_unidad(this.getid_unidadFK_IdUnidad());	
		}
		
	}
	
	public void traerDatosBusquedaDesdeSession() throws Exception {
		//DetalleConsignacionSessionBean detalleconsignacionSessionBean=new DetalleConsignacionSessionBean();
		
		if(this.detalleconsignacionSessionBean==null) {
			this.detalleconsignacionSessionBean=new DetalleConsignacionSessionBean();
		}
		
		if(this.detalleconsignacionSessionBean.getsUltimaBusquedaDetalleConsignacion()!=null&&!this.detalleconsignacionSessionBean.getsUltimaBusquedaDetalleConsignacion().equals("")) {
			this.setsAccionBusqueda(detalleconsignacionSessionBean.getsUltimaBusquedaDetalleConsignacion());
			this.setiNumeroPaginacion(detalleconsignacionSessionBean.getiNumeroPaginacion());
			this.setiNumeroPaginacionPagina(detalleconsignacionSessionBean.getiNumeroPaginacionPagina());		
				
			if(this.getsAccionBusqueda().equals("Todos")) {
				;
			}
			

			 else if(this.getsAccionBusqueda().equals("FK_IdBodega")) {
				this.setid_bodegaFK_IdBodega(detalleconsignacionSessionBean.getid_bodega());
				detalleconsignacionSessionBean.setid_bodega(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdConsignacion")) {
				this.setid_consignacionFK_IdConsignacion(detalleconsignacionSessionBean.getid_consignacion());
				detalleconsignacionSessionBean.setid_consignacion(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdEjercicio")) {
				this.setid_ejercicioFK_IdEjercicio(detalleconsignacionSessionBean.getid_ejercicio());
				detalleconsignacionSessionBean.setid_ejercicio(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdEmpresa")) {
				this.setid_empresaFK_IdEmpresa(detalleconsignacionSessionBean.getid_empresa());
				detalleconsignacionSessionBean.setid_empresa(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdEstadoDetallePedido")) {
				this.setid_estado_detalle_pedidoFK_IdEstadoDetallePedido(detalleconsignacionSessionBean.getid_estado_detalle_pedido());
				detalleconsignacionSessionBean.setid_estado_detalle_pedido(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdPeriodo")) {
				this.setid_periodoFK_IdPeriodo(detalleconsignacionSessionBean.getid_periodo());
				detalleconsignacionSessionBean.setid_periodo(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdProducto")) {
				this.setid_productoFK_IdProducto(detalleconsignacionSessionBean.getid_producto());
				detalleconsignacionSessionBean.setid_producto(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdSucursal")) {
				this.setid_sucursalFK_IdSucursal(detalleconsignacionSessionBean.getid_sucursal());
				detalleconsignacionSessionBean.setid_sucursal(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdUnidad")) {
				this.setid_unidadFK_IdUnidad(detalleconsignacionSessionBean.getid_unidad());
				detalleconsignacionSessionBean.setid_unidad(-1L);
			}
		}
		
		this.detalleconsignacionSessionBean.setsUltimaBusquedaDetalleConsignacion("");
		this.detalleconsignacionSessionBean.setiNumeroPaginacion(DetalleConsignacionConstantesFunciones.INUMEROPAGINACION);
		this.detalleconsignacionSessionBean.setiNumeroPaginacionPagina(0);
		
	}
	
	public void procesoActualizarFilaTotales(Boolean esCampoValor,String sTipo) {
		try {
			this.actualizarFilaTotales();
				
			this.traerValoresTablaTotales();
			
			this.inicializarActualizarBindingTablaDetalleConsignacion(false);
			
			
				if(this.jInternalFrameParent!=null) {
					this.jInternalFrameParent.setEsUsoDesdeHijo(true);
					this.jInternalFrameParent.jTextFieldActionPerformedGeneral("numero_autorizacionPedido",null);
					this.jInternalFrameParent.setEsUsoDesdeHijo(false);
				}
			
			
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	
	
	public void updateBusquedasFormularioDetalleConsignacion() {
		this.updateBorderResaltarBusquedasFormularioDetalleConsignacion();
		this.updateVisibilidadBusquedasFormularioDetalleConsignacion();
		this.updateHabilitarBusquedasFormularioDetalleConsignacion();
	}
	
	public void updateBorderResaltarBusquedasFormularioDetalleConsignacion() {					
	//BYDAN_BUSQUEDAS
		
	int index=0;
		
	if(this.jTabbedPaneBusquedasDetalleConsignacion.getComponents().length>0) {
	

		if(this.detalleconsignacionConstantesFunciones.resaltarFK_IdBodegaDetalleConsignacion!=null) {
			index= this.jTabbedPaneBusquedasDetalleConsignacion.indexOfComponent(this.jPanelFK_IdBodegaDetalleConsignacion);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleConsignacion.getComponent(index);
				jPanel.setBorder(this.detalleconsignacionConstantesFunciones.resaltarFK_IdBodegaDetalleConsignacion);
			}
		}

		if(this.detalleconsignacionConstantesFunciones.resaltarFK_IdConsignacionDetalleConsignacion!=null) {
			index= this.jTabbedPaneBusquedasDetalleConsignacion.indexOfComponent(this.jPanelFK_IdConsignacionDetalleConsignacion);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleConsignacion.getComponent(index);
				jPanel.setBorder(this.detalleconsignacionConstantesFunciones.resaltarFK_IdConsignacionDetalleConsignacion);
			}
		}

		if(this.detalleconsignacionConstantesFunciones.resaltarFK_IdEstadoDetallePedidoDetalleConsignacion!=null) {
			index= this.jTabbedPaneBusquedasDetalleConsignacion.indexOfComponent(this.jPanelFK_IdEstadoDetallePedidoDetalleConsignacion);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleConsignacion.getComponent(index);
				jPanel.setBorder(this.detalleconsignacionConstantesFunciones.resaltarFK_IdEstadoDetallePedidoDetalleConsignacion);
			}
		}

		if(this.detalleconsignacionConstantesFunciones.resaltarFK_IdProductoDetalleConsignacion!=null) {
			index= this.jTabbedPaneBusquedasDetalleConsignacion.indexOfComponent(this.jPanelFK_IdProductoDetalleConsignacion);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleConsignacion.getComponent(index);
				jPanel.setBorder(this.detalleconsignacionConstantesFunciones.resaltarFK_IdProductoDetalleConsignacion);
			}
		}

		if(this.detalleconsignacionConstantesFunciones.resaltarFK_IdUnidadDetalleConsignacion!=null) {
			index= this.jTabbedPaneBusquedasDetalleConsignacion.indexOfComponent(this.jPanelFK_IdUnidadDetalleConsignacion);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleConsignacion.getComponent(index);
				jPanel.setBorder(this.detalleconsignacionConstantesFunciones.resaltarFK_IdUnidadDetalleConsignacion);
			}
		}
	}	
	
	}
	
	public void updateVisibilidadBusquedasFormularioDetalleConsignacion() {
	//BYDAN_BUSQUEDAS
	
	int index=0;
	JPanel jPanel=null;
		
	if(this.jTabbedPaneBusquedasDetalleConsignacion.getComponents().length>0) {
	

			index= this.jTabbedPaneBusquedasDetalleConsignacion.indexOfComponent(this.jPanelFK_IdBodegaDetalleConsignacion);
			jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleConsignacion.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.detalleconsignacionConstantesFunciones.mostrarFK_IdBodegaDetalleConsignacion);
			if(!this.detalleconsignacionConstantesFunciones.mostrarFK_IdBodegaDetalleConsignacion && index>-1) {
				this.jTabbedPaneBusquedasDetalleConsignacion.remove(index);
			}

			index= this.jTabbedPaneBusquedasDetalleConsignacion.indexOfComponent(this.jPanelFK_IdConsignacionDetalleConsignacion);
			jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleConsignacion.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.detalleconsignacionConstantesFunciones.mostrarFK_IdConsignacionDetalleConsignacion);
			if(!this.detalleconsignacionConstantesFunciones.mostrarFK_IdConsignacionDetalleConsignacion && index>-1) {
				this.jTabbedPaneBusquedasDetalleConsignacion.remove(index);
			}

			index= this.jTabbedPaneBusquedasDetalleConsignacion.indexOfComponent(this.jPanelFK_IdEstadoDetallePedidoDetalleConsignacion);
			jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleConsignacion.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.detalleconsignacionConstantesFunciones.mostrarFK_IdEstadoDetallePedidoDetalleConsignacion);
			if(!this.detalleconsignacionConstantesFunciones.mostrarFK_IdEstadoDetallePedidoDetalleConsignacion && index>-1) {
				this.jTabbedPaneBusquedasDetalleConsignacion.remove(index);
			}

			index= this.jTabbedPaneBusquedasDetalleConsignacion.indexOfComponent(this.jPanelFK_IdProductoDetalleConsignacion);
			jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleConsignacion.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.detalleconsignacionConstantesFunciones.mostrarFK_IdProductoDetalleConsignacion);
			if(!this.detalleconsignacionConstantesFunciones.mostrarFK_IdProductoDetalleConsignacion && index>-1) {
				this.jTabbedPaneBusquedasDetalleConsignacion.remove(index);
			}

			index= this.jTabbedPaneBusquedasDetalleConsignacion.indexOfComponent(this.jPanelFK_IdUnidadDetalleConsignacion);
			jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleConsignacion.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.detalleconsignacionConstantesFunciones.mostrarFK_IdUnidadDetalleConsignacion);
			if(!this.detalleconsignacionConstantesFunciones.mostrarFK_IdUnidadDetalleConsignacion && index>-1) {
				this.jTabbedPaneBusquedasDetalleConsignacion.remove(index);
			}
	}	
	
	}
	
	public void updateHabilitarBusquedasFormularioDetalleConsignacion() {
	
	//BYDAN_BUSQUEDAS		
		int index=0;
		JPanel jPanel=null;
			
		if(this.jTabbedPaneBusquedasDetalleConsignacion.getComponents().length>0) {
	

			index= this.jTabbedPaneBusquedasDetalleConsignacion.indexOfComponent(this.jPanelFK_IdBodegaDetalleConsignacion);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleConsignacion.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.detalleconsignacionConstantesFunciones.activarFK_IdBodegaDetalleConsignacion);
				this.jTabbedPaneBusquedasDetalleConsignacion.setEnabledAt(index,this.detalleconsignacionConstantesFunciones.activarFK_IdBodegaDetalleConsignacion);
			}

			index= this.jTabbedPaneBusquedasDetalleConsignacion.indexOfComponent(this.jPanelFK_IdConsignacionDetalleConsignacion);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleConsignacion.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.detalleconsignacionConstantesFunciones.activarFK_IdConsignacionDetalleConsignacion);
				this.jTabbedPaneBusquedasDetalleConsignacion.setEnabledAt(index,this.detalleconsignacionConstantesFunciones.activarFK_IdConsignacionDetalleConsignacion);
			}

			index= this.jTabbedPaneBusquedasDetalleConsignacion.indexOfComponent(this.jPanelFK_IdEstadoDetallePedidoDetalleConsignacion);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleConsignacion.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.detalleconsignacionConstantesFunciones.activarFK_IdEstadoDetallePedidoDetalleConsignacion);
				this.jTabbedPaneBusquedasDetalleConsignacion.setEnabledAt(index,this.detalleconsignacionConstantesFunciones.activarFK_IdEstadoDetallePedidoDetalleConsignacion);
			}

			index= this.jTabbedPaneBusquedasDetalleConsignacion.indexOfComponent(this.jPanelFK_IdProductoDetalleConsignacion);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleConsignacion.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.detalleconsignacionConstantesFunciones.activarFK_IdProductoDetalleConsignacion);
				this.jTabbedPaneBusquedasDetalleConsignacion.setEnabledAt(index,this.detalleconsignacionConstantesFunciones.activarFK_IdProductoDetalleConsignacion);
			}

			index= this.jTabbedPaneBusquedasDetalleConsignacion.indexOfComponent(this.jPanelFK_IdUnidadDetalleConsignacion);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleConsignacion.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.detalleconsignacionConstantesFunciones.activarFK_IdUnidadDetalleConsignacion);
				this.jTabbedPaneBusquedasDetalleConsignacion.setEnabledAt(index,this.detalleconsignacionConstantesFunciones.activarFK_IdUnidadDetalleConsignacion);
			}
		}	
	
	}
	
	
	public void resaltarPanelBusquedaDetalleConsignacion(String sTipoBusqueda) {
		Boolean existe=false;
		//BYDAN_BUSQUEDAS
		
		int index=0;
		Border resaltar = Funciones2.getBorderResaltar(this.parametroGeneralUsuario,"TAB");

		if(sTipoBusqueda.equals("FK_IdBodega")) {
			index= this.jTabbedPaneBusquedasDetalleConsignacion.indexOfComponent(this.jPanelFK_IdBodegaDetalleConsignacion);

			this.jTabbedPaneBusquedasDetalleConsignacion.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleConsignacion.getComponent(index);

			this.detalleconsignacionConstantesFunciones.setResaltarFK_IdBodegaDetalleConsignacion(resaltar);

			jPanel.setBorder(this.detalleconsignacionConstantesFunciones.resaltarFK_IdBodegaDetalleConsignacion);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdConsignacion")) {
			index= this.jTabbedPaneBusquedasDetalleConsignacion.indexOfComponent(this.jPanelFK_IdConsignacionDetalleConsignacion);

			this.jTabbedPaneBusquedasDetalleConsignacion.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleConsignacion.getComponent(index);

			this.detalleconsignacionConstantesFunciones.setResaltarFK_IdConsignacionDetalleConsignacion(resaltar);

			jPanel.setBorder(this.detalleconsignacionConstantesFunciones.resaltarFK_IdConsignacionDetalleConsignacion);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdEstadoDetallePedido")) {
			index= this.jTabbedPaneBusquedasDetalleConsignacion.indexOfComponent(this.jPanelFK_IdEstadoDetallePedidoDetalleConsignacion);

			this.jTabbedPaneBusquedasDetalleConsignacion.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleConsignacion.getComponent(index);

			this.detalleconsignacionConstantesFunciones.setResaltarFK_IdEstadoDetallePedidoDetalleConsignacion(resaltar);

			jPanel.setBorder(this.detalleconsignacionConstantesFunciones.resaltarFK_IdEstadoDetallePedidoDetalleConsignacion);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdProducto")) {
			index= this.jTabbedPaneBusquedasDetalleConsignacion.indexOfComponent(this.jPanelFK_IdProductoDetalleConsignacion);

			this.jTabbedPaneBusquedasDetalleConsignacion.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleConsignacion.getComponent(index);

			this.detalleconsignacionConstantesFunciones.setResaltarFK_IdProductoDetalleConsignacion(resaltar);

			jPanel.setBorder(this.detalleconsignacionConstantesFunciones.resaltarFK_IdProductoDetalleConsignacion);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdUnidad")) {
			index= this.jTabbedPaneBusquedasDetalleConsignacion.indexOfComponent(this.jPanelFK_IdUnidadDetalleConsignacion);

			this.jTabbedPaneBusquedasDetalleConsignacion.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleConsignacion.getComponent(index);

			this.detalleconsignacionConstantesFunciones.setResaltarFK_IdUnidadDetalleConsignacion(resaltar);

			jPanel.setBorder(this.detalleconsignacionConstantesFunciones.resaltarFK_IdUnidadDetalleConsignacion);
			existe=true;
		}
		

		if(existe) {
			
			this.jTtoolBarDetalleConsignacion.setBorder(resaltar);
			
		}
	}	
	
	//NO FUNCIONA
	public void windowClosed(WindowEvent e) {	
	}
		
	public void windowClosing(WindowEvent e) {	    	    
	}

	public void windowOpened(WindowEvent e) {	    
	}

	public void windowIconified(WindowEvent e) {	    
	}

	public void windowDeiconified(WindowEvent e) {	    
	}

	public void windowActivated(WindowEvent e) {	    
	}

	public void windowDeactivated(WindowEvent e) {	    
	}

	public void windowGainedFocus(WindowEvent e) {	    
	}

	public void windowLostFocus(WindowEvent e) {	    
	}
	
	public void updateControlesFormularioDetalleConsignacion() throws Exception {

		if(this.jInternalFrameDetalleFormDetalleConsignacion==null) { //if(!this.conCargarFormDetalle) {			
			this.inicializarFormDetalle();
		}
		
		this.updateBorderResaltarControlesFormularioDetalleConsignacion();
		this.updateVisibilidadResaltarControlesFormularioDetalleConsignacion();
		this.updateHabilitarResaltarControlesFormularioDetalleConsignacion();
		
	}
	
	public void updateBorderResaltarControlesFormularioDetalleConsignacion() throws Exception {
		if(this.jInternalFrameDetalleFormDetalleConsignacion==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
	
		if(this.detalleconsignacionConstantesFunciones.resaltaridDetalleConsignacion!=null && this.jInternalFrameDetalleFormDetalleConsignacion!=null) {this.jInternalFrameDetalleFormDetalleConsignacion.jLabelidDetalleConsignacion.setBorder(this.detalleconsignacionConstantesFunciones.resaltaridDetalleConsignacion);}
		if(this.detalleconsignacionConstantesFunciones.resaltarid_empresaDetalleConsignacion!=null && this.jInternalFrameDetalleFormDetalleConsignacion!=null) {this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_empresaDetalleConsignacion.setBorder(this.detalleconsignacionConstantesFunciones.resaltarid_empresaDetalleConsignacion);}
		if(this.detalleconsignacionConstantesFunciones.resaltarid_sucursalDetalleConsignacion!=null && this.jInternalFrameDetalleFormDetalleConsignacion!=null) {this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_sucursalDetalleConsignacion.setBorder(this.detalleconsignacionConstantesFunciones.resaltarid_sucursalDetalleConsignacion);}
		if(this.detalleconsignacionConstantesFunciones.resaltarid_ejercicioDetalleConsignacion!=null && this.jInternalFrameDetalleFormDetalleConsignacion!=null) {this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_ejercicioDetalleConsignacion.setBorder(this.detalleconsignacionConstantesFunciones.resaltarid_ejercicioDetalleConsignacion);}
		if(this.detalleconsignacionConstantesFunciones.resaltarid_periodoDetalleConsignacion!=null && this.jInternalFrameDetalleFormDetalleConsignacion!=null) {this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_periodoDetalleConsignacion.setBorder(this.detalleconsignacionConstantesFunciones.resaltarid_periodoDetalleConsignacion);}
		if(this.detalleconsignacionConstantesFunciones.resaltarid_anioDetalleConsignacion!=null && this.jInternalFrameDetalleFormDetalleConsignacion!=null) {this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_anioDetalleConsignacion.setBorder(this.detalleconsignacionConstantesFunciones.resaltarid_anioDetalleConsignacion);}
		if(this.detalleconsignacionConstantesFunciones.resaltarid_mesDetalleConsignacion!=null && this.jInternalFrameDetalleFormDetalleConsignacion!=null) {this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_mesDetalleConsignacion.setBorder(this.detalleconsignacionConstantesFunciones.resaltarid_mesDetalleConsignacion);}
		if(this.detalleconsignacionConstantesFunciones.resaltarid_consignacionDetalleConsignacion!=null && this.jInternalFrameDetalleFormDetalleConsignacion!=null) {this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_consignacionDetalleConsignacion.setBorder(this.detalleconsignacionConstantesFunciones.resaltarid_consignacionDetalleConsignacion);}
		if(this.detalleconsignacionConstantesFunciones.resaltarid_productoDetalleConsignacion!=null && this.jInternalFrameDetalleFormDetalleConsignacion!=null) {this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_productoDetalleConsignacion.setBorder(this.detalleconsignacionConstantesFunciones.resaltarid_productoDetalleConsignacion);}
		if(this.detalleconsignacionConstantesFunciones.resaltarid_bodegaDetalleConsignacion!=null && this.jInternalFrameDetalleFormDetalleConsignacion!=null) {this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_bodegaDetalleConsignacion.setBorder(this.detalleconsignacionConstantesFunciones.resaltarid_bodegaDetalleConsignacion);}
		if(this.detalleconsignacionConstantesFunciones.resaltarid_unidadDetalleConsignacion!=null && this.jInternalFrameDetalleFormDetalleConsignacion!=null) {this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_unidadDetalleConsignacion.setBorder(this.detalleconsignacionConstantesFunciones.resaltarid_unidadDetalleConsignacion);}
		if(this.detalleconsignacionConstantesFunciones.resaltarid_estado_detalle_pedidoDetalleConsignacion!=null && this.jInternalFrameDetalleFormDetalleConsignacion!=null) {this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_estado_detalle_pedidoDetalleConsignacion.setBorder(this.detalleconsignacionConstantesFunciones.resaltarid_estado_detalle_pedidoDetalleConsignacion);}
		if(this.detalleconsignacionConstantesFunciones.resaltarcantidadDetalleConsignacion!=null && this.jInternalFrameDetalleFormDetalleConsignacion!=null) {this.jInternalFrameDetalleFormDetalleConsignacion.jTextFieldcantidadDetalleConsignacion.setBorder(this.detalleconsignacionConstantesFunciones.resaltarcantidadDetalleConsignacion);}
		if(this.detalleconsignacionConstantesFunciones.resaltarprecioDetalleConsignacion!=null && this.jInternalFrameDetalleFormDetalleConsignacion!=null) {this.jInternalFrameDetalleFormDetalleConsignacion.jTextFieldprecioDetalleConsignacion.setBorder(this.detalleconsignacionConstantesFunciones.resaltarprecioDetalleConsignacion);}
		if(this.detalleconsignacionConstantesFunciones.resaltardescuento_porcentajeDetalleConsignacion!=null && this.jInternalFrameDetalleFormDetalleConsignacion!=null) {this.jInternalFrameDetalleFormDetalleConsignacion.jTextFielddescuento_porcentajeDetalleConsignacion.setBorder(this.detalleconsignacionConstantesFunciones.resaltardescuento_porcentajeDetalleConsignacion);}
		if(this.detalleconsignacionConstantesFunciones.resaltardescuento_valorDetalleConsignacion!=null && this.jInternalFrameDetalleFormDetalleConsignacion!=null) {this.jInternalFrameDetalleFormDetalleConsignacion.jTextFielddescuento_valorDetalleConsignacion.setBorder(this.detalleconsignacionConstantesFunciones.resaltardescuento_valorDetalleConsignacion);}
		if(this.detalleconsignacionConstantesFunciones.resaltarivaDetalleConsignacion!=null && this.jInternalFrameDetalleFormDetalleConsignacion!=null) {this.jInternalFrameDetalleFormDetalleConsignacion.jTextFieldivaDetalleConsignacion.setBorder(this.detalleconsignacionConstantesFunciones.resaltarivaDetalleConsignacion);}
		if(this.detalleconsignacionConstantesFunciones.resaltartotalDetalleConsignacion!=null && this.jInternalFrameDetalleFormDetalleConsignacion!=null) {this.jInternalFrameDetalleFormDetalleConsignacion.jTextFieldtotalDetalleConsignacion.setBorder(this.detalleconsignacionConstantesFunciones.resaltartotalDetalleConsignacion);}
		if(this.detalleconsignacionConstantesFunciones.resaltariceDetalleConsignacion!=null && this.jInternalFrameDetalleFormDetalleConsignacion!=null) {this.jInternalFrameDetalleFormDetalleConsignacion.jTextFieldiceDetalleConsignacion.setBorder(this.detalleconsignacionConstantesFunciones.resaltariceDetalleConsignacion);}
		if(this.detalleconsignacionConstantesFunciones.resaltarcostoDetalleConsignacion!=null && this.jInternalFrameDetalleFormDetalleConsignacion!=null) {this.jInternalFrameDetalleFormDetalleConsignacion.jTextFieldcostoDetalleConsignacion.setBorder(this.detalleconsignacionConstantesFunciones.resaltarcostoDetalleConsignacion);}
		if(this.detalleconsignacionConstantesFunciones.resaltarutilidadDetalleConsignacion!=null && this.jInternalFrameDetalleFormDetalleConsignacion!=null) {this.jInternalFrameDetalleFormDetalleConsignacion.jTextFieldutilidadDetalleConsignacion.setBorder(this.detalleconsignacionConstantesFunciones.resaltarutilidadDetalleConsignacion);}
	}
	
	public void updateVisibilidadResaltarControlesFormularioDetalleConsignacion() throws Exception {		
		if(this.jInternalFrameDetalleFormDetalleConsignacion==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
		if(this.jInternalFrameDetalleFormDetalleConsignacion!=null) {
	
		//this.jInternalFrameDetalleFormDetalleConsignacion.jLabelidDetalleConsignacion.setVisible(this.detalleconsignacionConstantesFunciones.mostraridDetalleConsignacion);
		this.jInternalFrameDetalleFormDetalleConsignacion.jPanelidDetalleConsignacion.setVisible(this.detalleconsignacionConstantesFunciones.mostraridDetalleConsignacion);
		//this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_empresaDetalleConsignacion.setVisible(this.detalleconsignacionConstantesFunciones.mostrarid_empresaDetalleConsignacion);
		this.jInternalFrameDetalleFormDetalleConsignacion.jPanelid_empresaDetalleConsignacion.setVisible(this.detalleconsignacionConstantesFunciones.mostrarid_empresaDetalleConsignacion);
		//this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_sucursalDetalleConsignacion.setVisible(this.detalleconsignacionConstantesFunciones.mostrarid_sucursalDetalleConsignacion);
		this.jInternalFrameDetalleFormDetalleConsignacion.jPanelid_sucursalDetalleConsignacion.setVisible(this.detalleconsignacionConstantesFunciones.mostrarid_sucursalDetalleConsignacion);
		//this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_ejercicioDetalleConsignacion.setVisible(this.detalleconsignacionConstantesFunciones.mostrarid_ejercicioDetalleConsignacion);
		this.jInternalFrameDetalleFormDetalleConsignacion.jPanelid_ejercicioDetalleConsignacion.setVisible(this.detalleconsignacionConstantesFunciones.mostrarid_ejercicioDetalleConsignacion);
		//this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_periodoDetalleConsignacion.setVisible(this.detalleconsignacionConstantesFunciones.mostrarid_periodoDetalleConsignacion);
		this.jInternalFrameDetalleFormDetalleConsignacion.jPanelid_periodoDetalleConsignacion.setVisible(this.detalleconsignacionConstantesFunciones.mostrarid_periodoDetalleConsignacion);
		//this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_anioDetalleConsignacion.setVisible(this.detalleconsignacionConstantesFunciones.mostrarid_anioDetalleConsignacion);
		this.jInternalFrameDetalleFormDetalleConsignacion.jPanelid_anioDetalleConsignacion.setVisible(this.detalleconsignacionConstantesFunciones.mostrarid_anioDetalleConsignacion);
		//this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_mesDetalleConsignacion.setVisible(this.detalleconsignacionConstantesFunciones.mostrarid_mesDetalleConsignacion);
		this.jInternalFrameDetalleFormDetalleConsignacion.jPanelid_mesDetalleConsignacion.setVisible(this.detalleconsignacionConstantesFunciones.mostrarid_mesDetalleConsignacion);
		//this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_consignacionDetalleConsignacion.setVisible(this.detalleconsignacionConstantesFunciones.mostrarid_consignacionDetalleConsignacion);
		this.jInternalFrameDetalleFormDetalleConsignacion.jPanelid_consignacionDetalleConsignacion.setVisible(this.detalleconsignacionConstantesFunciones.mostrarid_consignacionDetalleConsignacion);
		//this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_productoDetalleConsignacion.setVisible(this.detalleconsignacionConstantesFunciones.mostrarid_productoDetalleConsignacion);
		this.jInternalFrameDetalleFormDetalleConsignacion.jPanelid_productoDetalleConsignacion.setVisible(this.detalleconsignacionConstantesFunciones.mostrarid_productoDetalleConsignacion);
			this.jInternalFrameDetalleFormDetalleConsignacion.jButtonid_productoDetalleConsignacion.setVisible(this.detalleconsignacionConstantesFunciones.mostrarid_productoDetalleConsignacion);
		//this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_bodegaDetalleConsignacion.setVisible(this.detalleconsignacionConstantesFunciones.mostrarid_bodegaDetalleConsignacion);
		this.jInternalFrameDetalleFormDetalleConsignacion.jPanelid_bodegaDetalleConsignacion.setVisible(this.detalleconsignacionConstantesFunciones.mostrarid_bodegaDetalleConsignacion);
		//this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_unidadDetalleConsignacion.setVisible(this.detalleconsignacionConstantesFunciones.mostrarid_unidadDetalleConsignacion);
		this.jInternalFrameDetalleFormDetalleConsignacion.jPanelid_unidadDetalleConsignacion.setVisible(this.detalleconsignacionConstantesFunciones.mostrarid_unidadDetalleConsignacion);
		//this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_estado_detalle_pedidoDetalleConsignacion.setVisible(this.detalleconsignacionConstantesFunciones.mostrarid_estado_detalle_pedidoDetalleConsignacion);
		this.jInternalFrameDetalleFormDetalleConsignacion.jPanelid_estado_detalle_pedidoDetalleConsignacion.setVisible(this.detalleconsignacionConstantesFunciones.mostrarid_estado_detalle_pedidoDetalleConsignacion);
		//this.jInternalFrameDetalleFormDetalleConsignacion.jTextFieldcantidadDetalleConsignacion.setVisible(this.detalleconsignacionConstantesFunciones.mostrarcantidadDetalleConsignacion);
		this.jInternalFrameDetalleFormDetalleConsignacion.jPanelcantidadDetalleConsignacion.setVisible(this.detalleconsignacionConstantesFunciones.mostrarcantidadDetalleConsignacion);
		//this.jInternalFrameDetalleFormDetalleConsignacion.jTextFieldprecioDetalleConsignacion.setVisible(this.detalleconsignacionConstantesFunciones.mostrarprecioDetalleConsignacion);
		this.jInternalFrameDetalleFormDetalleConsignacion.jPanelprecioDetalleConsignacion.setVisible(this.detalleconsignacionConstantesFunciones.mostrarprecioDetalleConsignacion);
		//this.jInternalFrameDetalleFormDetalleConsignacion.jTextFielddescuento_porcentajeDetalleConsignacion.setVisible(this.detalleconsignacionConstantesFunciones.mostrardescuento_porcentajeDetalleConsignacion);
		this.jInternalFrameDetalleFormDetalleConsignacion.jPaneldescuento_porcentajeDetalleConsignacion.setVisible(this.detalleconsignacionConstantesFunciones.mostrardescuento_porcentajeDetalleConsignacion);
		//this.jInternalFrameDetalleFormDetalleConsignacion.jTextFielddescuento_valorDetalleConsignacion.setVisible(this.detalleconsignacionConstantesFunciones.mostrardescuento_valorDetalleConsignacion);
		this.jInternalFrameDetalleFormDetalleConsignacion.jPaneldescuento_valorDetalleConsignacion.setVisible(this.detalleconsignacionConstantesFunciones.mostrardescuento_valorDetalleConsignacion);
		//this.jInternalFrameDetalleFormDetalleConsignacion.jTextFieldivaDetalleConsignacion.setVisible(this.detalleconsignacionConstantesFunciones.mostrarivaDetalleConsignacion);
		this.jInternalFrameDetalleFormDetalleConsignacion.jPanelivaDetalleConsignacion.setVisible(this.detalleconsignacionConstantesFunciones.mostrarivaDetalleConsignacion);
		//this.jInternalFrameDetalleFormDetalleConsignacion.jTextFieldtotalDetalleConsignacion.setVisible(this.detalleconsignacionConstantesFunciones.mostrartotalDetalleConsignacion);
		this.jInternalFrameDetalleFormDetalleConsignacion.jPaneltotalDetalleConsignacion.setVisible(this.detalleconsignacionConstantesFunciones.mostrartotalDetalleConsignacion);
		//this.jInternalFrameDetalleFormDetalleConsignacion.jTextFieldiceDetalleConsignacion.setVisible(this.detalleconsignacionConstantesFunciones.mostrariceDetalleConsignacion);
		this.jInternalFrameDetalleFormDetalleConsignacion.jPaneliceDetalleConsignacion.setVisible(this.detalleconsignacionConstantesFunciones.mostrariceDetalleConsignacion);
		//this.jInternalFrameDetalleFormDetalleConsignacion.jTextFieldcostoDetalleConsignacion.setVisible(this.detalleconsignacionConstantesFunciones.mostrarcostoDetalleConsignacion);
		this.jInternalFrameDetalleFormDetalleConsignacion.jPanelcostoDetalleConsignacion.setVisible(this.detalleconsignacionConstantesFunciones.mostrarcostoDetalleConsignacion);
		//this.jInternalFrameDetalleFormDetalleConsignacion.jTextFieldutilidadDetalleConsignacion.setVisible(this.detalleconsignacionConstantesFunciones.mostrarutilidadDetalleConsignacion);
		this.jInternalFrameDetalleFormDetalleConsignacion.jPanelutilidadDetalleConsignacion.setVisible(this.detalleconsignacionConstantesFunciones.mostrarutilidadDetalleConsignacion);
		}
	}
	
	public void updateHabilitarResaltarControlesFormularioDetalleConsignacion() throws Exception {
		if(this.jInternalFrameDetalleFormDetalleConsignacion==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
		if(this.jInternalFrameDetalleFormDetalleConsignacion!=null) {
	
		this.jInternalFrameDetalleFormDetalleConsignacion.jLabelidDetalleConsignacion.setEnabled(this.detalleconsignacionConstantesFunciones.activaridDetalleConsignacion);
		this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_empresaDetalleConsignacion.setEnabled(this.detalleconsignacionConstantesFunciones.activarid_empresaDetalleConsignacion);
		this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_sucursalDetalleConsignacion.setEnabled(this.detalleconsignacionConstantesFunciones.activarid_sucursalDetalleConsignacion);
		this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_ejercicioDetalleConsignacion.setEnabled(this.detalleconsignacionConstantesFunciones.activarid_ejercicioDetalleConsignacion);
		this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_periodoDetalleConsignacion.setEnabled(this.detalleconsignacionConstantesFunciones.activarid_periodoDetalleConsignacion);
		this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_anioDetalleConsignacion.setEnabled(this.detalleconsignacionConstantesFunciones.activarid_anioDetalleConsignacion);
		this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_mesDetalleConsignacion.setEnabled(this.detalleconsignacionConstantesFunciones.activarid_mesDetalleConsignacion);
		this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_consignacionDetalleConsignacion.setEnabled(this.detalleconsignacionConstantesFunciones.activarid_consignacionDetalleConsignacion);
		this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_productoDetalleConsignacion.setEnabled(this.detalleconsignacionConstantesFunciones.activarid_productoDetalleConsignacion);
			this.jInternalFrameDetalleFormDetalleConsignacion.jButtonid_productoDetalleConsignacion.setEnabled(this.detalleconsignacionConstantesFunciones.activarid_productoDetalleConsignacion);
		this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_bodegaDetalleConsignacion.setEnabled(this.detalleconsignacionConstantesFunciones.activarid_bodegaDetalleConsignacion);
		this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_unidadDetalleConsignacion.setEnabled(this.detalleconsignacionConstantesFunciones.activarid_unidadDetalleConsignacion);
		this.jInternalFrameDetalleFormDetalleConsignacion.jComboBoxid_estado_detalle_pedidoDetalleConsignacion.setEnabled(this.detalleconsignacionConstantesFunciones.activarid_estado_detalle_pedidoDetalleConsignacion);
		this.jInternalFrameDetalleFormDetalleConsignacion.jTextFieldcantidadDetalleConsignacion.setEnabled(this.detalleconsignacionConstantesFunciones.activarcantidadDetalleConsignacion);
		this.jInternalFrameDetalleFormDetalleConsignacion.jTextFieldprecioDetalleConsignacion.setEnabled(this.detalleconsignacionConstantesFunciones.activarprecioDetalleConsignacion);
		this.jInternalFrameDetalleFormDetalleConsignacion.jTextFielddescuento_porcentajeDetalleConsignacion.setEnabled(this.detalleconsignacionConstantesFunciones.activardescuento_porcentajeDetalleConsignacion);
		this.jInternalFrameDetalleFormDetalleConsignacion.jTextFielddescuento_valorDetalleConsignacion.setEnabled(this.detalleconsignacionConstantesFunciones.activardescuento_valorDetalleConsignacion);
		this.jInternalFrameDetalleFormDetalleConsignacion.jTextFieldivaDetalleConsignacion.setEnabled(this.detalleconsignacionConstantesFunciones.activarivaDetalleConsignacion);
		this.jInternalFrameDetalleFormDetalleConsignacion.jTextFieldtotalDetalleConsignacion.setEnabled(this.detalleconsignacionConstantesFunciones.activartotalDetalleConsignacion);
		this.jInternalFrameDetalleFormDetalleConsignacion.jTextFieldiceDetalleConsignacion.setEnabled(this.detalleconsignacionConstantesFunciones.activariceDetalleConsignacion);
		this.jInternalFrameDetalleFormDetalleConsignacion.jTextFieldcostoDetalleConsignacion.setEnabled(this.detalleconsignacionConstantesFunciones.activarcostoDetalleConsignacion);
		this.jInternalFrameDetalleFormDetalleConsignacion.jTextFieldutilidadDetalleConsignacion.setEnabled(this.detalleconsignacionConstantesFunciones.activarutilidadDetalleConsignacion);
		}
	}
	
		
}