/*
*AVISO LEGAL
Â© Copyright
*Este programa esta protegido por la ley de derechos de autor.
*La reproduccion o distribucion ilicita de este programa o de cualquiera de
*sus partes esta penado por la ley con severas sanciones civiles y penales,
*y seran objeto de todas las sanciones legales que correspondan.

*Su contenido no puede copiarse para fines comerciales o de otras,
*ni puede mostrarse, incluso en una version modificada, en otros sitios Web.
Solo esta permitido colocar hipervinculos al sitio web.
*/
package com.bydan.erp.facturacion.presentation.swing.jinternalframes;


import java.sql.Time;


import com.bydan.erp.seguridad.business.entity.Usuario;
import com.bydan.erp.seguridad.business.entity.ResumenUsuario;
import com.bydan.erp.seguridad.business.entity.Opcion;
import com.bydan.erp.seguridad.business.entity.PerfilOpcion;
import com.bydan.erp.seguridad.business.entity.PerfilCampo;
import com.bydan.erp.seguridad.business.entity.PerfilAccion;
import com.bydan.erp.seguridad.business.entity.ParametroGeneralSg;
import com.bydan.erp.seguridad.business.entity.ParametroGeneralUsuario;
import com.bydan.erp.seguridad.business.entity.Modulo;
import com.bydan.erp.seguridad.business.entity.Accion;

import com.bydan.erp.seguridad.util.SistemaParameterReturnGeneralAdditional;
import com.bydan.erp.seguridad.util.SistemaParameterReturnGeneral;


//import com.bydan.erp.seguridad.business.entity.PerfilAccion;


import com.bydan.erp.seguridad.util.SistemaConstantesFunciones;
import com.bydan.erp.seguridad.util.SistemaConstantesFuncionesAdditional;
import com.bydan.erp.seguridad.business.logic.SistemaLogicAdditional;

import com.bydan.erp.facturacion.util.GuiaRemisionConstantesFunciones;
import com.bydan.erp.facturacion.util.GuiaRemisionParameterReturnGeneral;
//import com.bydan.erp.facturacion.util.GuiaRemisionParameterGeneral;
//import com.bydan.erp.facturacion.presentation.report.source.GuiaRemisionBean;
import com.bydan.framework.erp.business.dataaccess.ConstantesSql;
import com.bydan.framework.erp.business.entity.Classe;
import com.bydan.framework.erp.business.entity.DatoGeneral;
import com.bydan.framework.erp.business.entity.GeneralEntityParameterGeneral;
import com.bydan.framework.erp.business.entity.OrderBy;
import com.bydan.framework.erp.business.entity.DatoGeneralMinimo;
import com.bydan.framework.erp.business.entity.GeneralEntity;
import com.bydan.framework.erp.business.entity.Mensajes;
import com.bydan.framework.erp.business.entity.GeneralEntityParameterReturnGeneral;
//import com.bydan.framework.erp.business.entity.MaintenanceType;
import com.bydan.framework.erp.util.MaintenanceType;
import com.bydan.framework.erp.util.FuncionesReporte;
import com.bydan.framework.erp.business.logic.DatosCliente;
import com.bydan.framework.erp.business.logic.Pagination;

import com.bydan.erp.facturacion.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.framework.erp.presentation.desktop.swing.TablaGeneralTotalModel;
import com.bydan.framework.erp.presentation.desktop.swing.TablaGeneralOrderByModel;
import com.bydan.framework.erp.presentation.desktop.swing.DateConverter;
import com.bydan.framework.erp.presentation.desktop.swing.DateConverterFromDate;
import com.bydan.framework.erp.presentation.desktop.swing.DateRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.DateEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.BooleanRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.BooleanEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.TextFieldRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.RunnableProceso;
import com.bydan.framework.erp.presentation.desktop.swing.*;
//import com.bydan.framework.erp.presentation.desktop.swing.TextFieldEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.HeaderRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.JInternalFrameBase;
import com.bydan.framework.erp.presentation.desktop.swing.FuncionesSwing;
import com.bydan.framework.erp.presentation.desktop.swing.MainJFrame;
import com.bydan.framework.erp.resources.imagenes.AuxiliarImagenes;
import com.bydan.erp.facturacion.resources.reportes.AuxiliarReportes;


import com.bydan.erp.facturacion.util.*;
import com.bydan.erp.facturacion.business.logic.*;

import com.bydan.erp.seguridad.business.logic.*;
import com.bydan.erp.contabilidad.business.logic.*;
import com.bydan.erp.inventario.business.logic.*;
import com.bydan.erp.cartera.business.logic.*;
import com.bydan.erp.comisiones.business.logic.*;
import com.bydan.erp.nomina.business.logic.*;
import com.bydan.erp.tesoreria.business.logic.*;
import com.bydan.erp.facturacion.business.logic.*;

//EJB

//PARAMETROS


//EJB PARAMETROS

import com.bydan.framework.erp.business.logic.*;
import com.bydan.framework.erp.util.*;

import com.bydan.erp.facturacion.business.entity.*;
//import com.bydan.framework.erp.business.entity.ConexionBeanFace;
//import com.bydan.framework.erp.business.entity.Mensajes;


import com.bydan.erp.seguridad.presentation.swing.jinternalframes.*;
import com.bydan.erp.contabilidad.presentation.swing.jinternalframes.*;
import com.bydan.erp.inventario.presentation.swing.jinternalframes.*;
import com.bydan.erp.cartera.presentation.swing.jinternalframes.*;
import com.bydan.erp.comisiones.presentation.swing.jinternalframes.*;
import com.bydan.erp.nomina.presentation.swing.jinternalframes.*;
import com.bydan.erp.tesoreria.presentation.swing.jinternalframes.*;
import com.bydan.erp.facturacion.presentation.swing.jinternalframes.*;

import com.bydan.erp.seguridad.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.contabilidad.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.inventario.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.cartera.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.comisiones.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.nomina.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.tesoreria.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.facturacion.presentation.swing.jinternalframes.auxiliar.*;






import javax.imageio.ImageIO;
import java.net.NetworkInterface;
import java.net.InterfaceAddress;
import java.net.InetAddress;
import javax.naming.InitialContext;
import java.lang.Long;
import java.util.Date;
import java.util.Enumeration;
import java.util.Iterator;
import java.util.Set;
import java.util.HashSet;
import java.util.List;
import java.util.ArrayList;
import java.io.Serializable;
import java.util.Hashtable;
import java.util.Collections;
import java.io.File;
import java.io.FileInputStream;
import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.io.BufferedReader;
import java.io.FileReader;
import java.util.HashMap;
import java.util.Map;
import java.io.PrintWriter;
import java.sql.SQLException;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.transform.stream.StreamSource;

import org.xml.sax.EntityResolver;
import org.xml.sax.InputSource;
import org.xml.sax.SAXException;

import org.w3c.dom.Document;
import org.w3c.dom.Document;
import org.w3c.dom.NodeList;
import org.w3c.dom.Node;
import org.w3c.dom.Element;

import org.apache.poi.hssf.usermodel.HSSFCell;
import org.apache.poi.hssf.usermodel.HSSFRow;
import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellStyle;
import org.apache.poi.ss.usermodel.IndexedColors;
import org.apache.poi.ss.util.CellRangeAddress;

import javax.xml.transform.Transformer;
import javax.xml.transform.TransformerFactory;
import javax.xml.transform.dom.DOMSource;
import javax.xml.transform.stream.StreamResult;


import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JRRuntimeException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.engine.export.JRHtmlExporter;
import net.sf.jasperreports.j2ee.servlets.BaseHttpServlet;
import net.sf.jasperreports.engine.JRExporterParameter;
import net.sf.jasperreports.engine.data.JRBeanArrayDataSource;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import net.sf.jasperreports.view.JasperViewer;

import org.apache.log4j.Logger;

import com.bydan.framework.erp.business.entity.Reporte;


//VALIDACION
import org.hibernate.validator.ClassValidator;
import org.hibernate.validator.InvalidValue;

import net.sf.jasperreports.engine.JREmptyDataSource;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperExportManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperPrintManager;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.JasperRunManager;
import net.sf.jasperreports.engine.export.JExcelApiExporter;
import net.sf.jasperreports.engine.export.JRCsvExporter;
import net.sf.jasperreports.engine.export.JRRtfExporter;
import net.sf.jasperreports.engine.export.JRXlsExporter;
import net.sf.jasperreports.engine.export.JRXlsExporterParameter;
import net.sf.jasperreports.engine.util.JRSaver;
import net.sf.jasperreports.engine.xml.JRXmlWriter;


import com.bydan.erp.facturacion.presentation.web.jsf.sessionbean.*;

import java.util.EventObject;
import javax.swing.*;
import javax.swing.border.Border;
import javax.swing.border.TitledBorder;
import javax.swing.border.EmptyBorder;
import javax.swing.event.*;
import javax.swing.table.AbstractTableModel;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.TableColumn;
import javax.swing.table.TableCellEditor;
import javax.swing.table.TableCellRenderer;
import java.awt.*;
import java.awt.event.*;

import org.jdesktop.beansbinding.Binding.SyncFailure;
import org.jdesktop.beansbinding.BindingListener;
import org.jdesktop.beansbinding.Bindings;
import org.jdesktop.beansbinding.BeanProperty;
import org.jdesktop.beansbinding.ELProperty;
import org.jdesktop.beansbinding.AutoBinding.UpdateStrategy;
import org.jdesktop.beansbinding.PropertyStateEvent;
import org.jdesktop.swingbinding.JComboBoxBinding;
import org.jdesktop.swingbinding.SwingBindings;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeEvent;

import com.toedter.calendar.JDateChooser;


import com.bydan.erp.seguridad.business.entity.*;
import com.bydan.erp.contabilidad.business.entity.*;
import com.bydan.erp.inventario.business.entity.*;
import com.bydan.erp.cartera.business.entity.*;
import com.bydan.erp.comisiones.business.entity.*;
import com.bydan.erp.nomina.business.entity.*;
import com.bydan.erp.tesoreria.business.entity.*;
import com.bydan.erp.facturacion.business.entity.*;
import com.bydan.erp.seguridad.util.*;
import com.bydan.erp.contabilidad.util.*;
import com.bydan.erp.inventario.util.*;
import com.bydan.erp.cartera.util.*;
import com.bydan.erp.comisiones.util.*;
import com.bydan.erp.nomina.util.*;
import com.bydan.erp.tesoreria.util.*;
import com.bydan.erp.facturacion.util.*;
import com.bydan.erp.seguridad.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.contabilidad.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.inventario.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.cartera.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.comisiones.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.nomina.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.tesoreria.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.facturacion.presentation.web.jsf.sessionbean.*;


@SuppressWarnings("unused")
public class GuiaRemisionBeanSwingJInternalFrame extends GuiaRemisionJInternalFrame implements WindowListener,WindowFocusListener
{				
	
	public static final long serialVersionUID = 1L;
	
	public static Logger logger = Logger.getLogger(GuiaRemisionBeanSwingJInternalFrame.class);  
	
	public static ClassValidator<GuiaRemision> guiaremisionValidator = new ClassValidator<GuiaRemision>(GuiaRemision.class);
	
	public InvalidValue[] invalidValues=null;
		

	//Ejb Foreign Keys
	
	public GuiaRemision guiaremision;	
	public GuiaRemision guiaremisionAux;
	public GuiaRemision guiaremisionAnterior;//USADO PARA MANEJAR FOCUS GAINED,LOST
	public GuiaRemision guiaremisionTotales;
	public Long idGuiaRemisionActual;
	public Long iIdNuevoGuiaRemision=0L;
	public int rowIndexActual=0;
	
	
	
	
	public String sFinalQueryComboEmpresa="";

	public List<Empresa> empresasForeignKey;

	public List<Empresa> getempresasForeignKey() {
		return empresasForeignKey;
	}

	public void setempresasForeignKey(List<Empresa> empresasForeignKey) {
		this.empresasForeignKey = empresasForeignKey;
	}

	//OBJETO FK ACTUAL
	public Empresa empresaForeignKey;

	public Empresa getempresaForeignKey() {
		return empresaForeignKey;
	}

	public void setempresaForeignKey(Empresa empresaForeignKey) {
		this.empresaForeignKey = empresaForeignKey;
	}

	public String sFinalQueryComboSucursal="";

	public List<Sucursal> sucursalsForeignKey;

	public List<Sucursal> getsucursalsForeignKey() {
		return sucursalsForeignKey;
	}

	public void setsucursalsForeignKey(List<Sucursal> sucursalsForeignKey) {
		this.sucursalsForeignKey = sucursalsForeignKey;
	}

	//OBJETO FK ACTUAL
	public Sucursal sucursalForeignKey;

	public Sucursal getsucursalForeignKey() {
		return sucursalForeignKey;
	}

	public void setsucursalForeignKey(Sucursal sucursalForeignKey) {
		this.sucursalForeignKey = sucursalForeignKey;
	}

	public String sFinalQueryComboEjercicio="";

	public List<Ejercicio> ejerciciosForeignKey;

	public List<Ejercicio> getejerciciosForeignKey() {
		return ejerciciosForeignKey;
	}

	public void setejerciciosForeignKey(List<Ejercicio> ejerciciosForeignKey) {
		this.ejerciciosForeignKey = ejerciciosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Ejercicio ejercicioForeignKey;

	public Ejercicio getejercicioForeignKey() {
		return ejercicioForeignKey;
	}

	public void setejercicioForeignKey(Ejercicio ejercicioForeignKey) {
		this.ejercicioForeignKey = ejercicioForeignKey;
	}

	public String sFinalQueryComboPeriodo="";

	public List<Periodo> periodosForeignKey;

	public List<Periodo> getperiodosForeignKey() {
		return periodosForeignKey;
	}

	public void setperiodosForeignKey(List<Periodo> periodosForeignKey) {
		this.periodosForeignKey = periodosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Periodo periodoForeignKey;

	public Periodo getperiodoForeignKey() {
		return periodoForeignKey;
	}

	public void setperiodoForeignKey(Periodo periodoForeignKey) {
		this.periodoForeignKey = periodoForeignKey;
	}

	public String sFinalQueryComboUsuario="";

	public List<Usuario> usuariosForeignKey;

	public List<Usuario> getusuariosForeignKey() {
		return usuariosForeignKey;
	}

	public void setusuariosForeignKey(List<Usuario> usuariosForeignKey) {
		this.usuariosForeignKey = usuariosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Usuario usuarioForeignKey;

	public Usuario getusuarioForeignKey() {
		return usuarioForeignKey;
	}

	public void setusuarioForeignKey(Usuario usuarioForeignKey) {
		this.usuarioForeignKey = usuarioForeignKey;
	}

	public String sFinalQueryComboFormato="";

	public List<Formato> formatosForeignKey;

	public List<Formato> getformatosForeignKey() {
		return formatosForeignKey;
	}

	public void setformatosForeignKey(List<Formato> formatosForeignKey) {
		this.formatosForeignKey = formatosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Formato formatoForeignKey;

	public Formato getformatoForeignKey() {
		return formatoForeignKey;
	}

	public void setformatoForeignKey(Formato formatoForeignKey) {
		this.formatoForeignKey = formatoForeignKey;
	}

	public String sFinalQueryComboTipoPrecio="";

	public List<TipoPrecio> tipopreciosForeignKey;

	public List<TipoPrecio> gettipopreciosForeignKey() {
		return tipopreciosForeignKey;
	}

	public void settipopreciosForeignKey(List<TipoPrecio> tipopreciosForeignKey) {
		this.tipopreciosForeignKey = tipopreciosForeignKey;
	}

	//OBJETO FK ACTUAL
	public TipoPrecio tipoprecioForeignKey;

	public TipoPrecio gettipoprecioForeignKey() {
		return tipoprecioForeignKey;
	}

	public void settipoprecioForeignKey(TipoPrecio tipoprecioForeignKey) {
		this.tipoprecioForeignKey = tipoprecioForeignKey;
	}

	public String sFinalQueryComboMoneda="";

	public List<Moneda> monedasForeignKey;

	public List<Moneda> getmonedasForeignKey() {
		return monedasForeignKey;
	}

	public void setmonedasForeignKey(List<Moneda> monedasForeignKey) {
		this.monedasForeignKey = monedasForeignKey;
	}

	//OBJETO FK ACTUAL
	public Moneda monedaForeignKey;

	public Moneda getmonedaForeignKey() {
		return monedaForeignKey;
	}

	public void setmonedaForeignKey(Moneda monedaForeignKey) {
		this.monedaForeignKey = monedaForeignKey;
	}

	public String sFinalQueryComboCliente="";

	public List<Cliente> clientesForeignKey;

	public List<Cliente> getclientesForeignKey() {
		return clientesForeignKey;
	}

	public void setclientesForeignKey(List<Cliente> clientesForeignKey) {
		this.clientesForeignKey = clientesForeignKey;
	}

	//OBJETO FK ACTUAL
	public Cliente clienteForeignKey;

	public Cliente getclienteForeignKey() {
		return clienteForeignKey;
	}

	public void setclienteForeignKey(Cliente clienteForeignKey) {
		this.clienteForeignKey = clienteForeignKey;
	}

	public String sFinalQueryComboVendedor="";

	public List<Vendedor> vendedorsForeignKey;

	public List<Vendedor> getvendedorsForeignKey() {
		return vendedorsForeignKey;
	}

	public void setvendedorsForeignKey(List<Vendedor> vendedorsForeignKey) {
		this.vendedorsForeignKey = vendedorsForeignKey;
	}

	//OBJETO FK ACTUAL
	public Vendedor vendedorForeignKey;

	public Vendedor getvendedorForeignKey() {
		return vendedorForeignKey;
	}

	public void setvendedorForeignKey(Vendedor vendedorForeignKey) {
		this.vendedorForeignKey = vendedorForeignKey;
	}

	public String sFinalQueryComboFactura="";

	public List<Factura> facturasForeignKey;

	public List<Factura> getfacturasForeignKey() {
		return facturasForeignKey;
	}

	public void setfacturasForeignKey(List<Factura> facturasForeignKey) {
		this.facturasForeignKey = facturasForeignKey;
	}

	//OBJETO FK ACTUAL
	public Factura facturaForeignKey;

	public Factura getfacturaForeignKey() {
		return facturaForeignKey;
	}

	public void setfacturaForeignKey(Factura facturaForeignKey) {
		this.facturaForeignKey = facturaForeignKey;
	}

	public String sFinalQueryComboTransportista="";

	public List<Transportista> transportistasForeignKey;

	public List<Transportista> gettransportistasForeignKey() {
		return transportistasForeignKey;
	}

	public void settransportistasForeignKey(List<Transportista> transportistasForeignKey) {
		this.transportistasForeignKey = transportistasForeignKey;
	}

	//OBJETO FK ACTUAL
	public Transportista transportistaForeignKey;

	public Transportista gettransportistaForeignKey() {
		return transportistaForeignKey;
	}

	public void settransportistaForeignKey(Transportista transportistaForeignKey) {
		this.transportistaForeignKey = transportistaForeignKey;
	}

	public String sFinalQueryComboConsultor="";

	public List<Consultor> consultorsForeignKey;

	public List<Consultor> getconsultorsForeignKey() {
		return consultorsForeignKey;
	}

	public void setconsultorsForeignKey(List<Consultor> consultorsForeignKey) {
		this.consultorsForeignKey = consultorsForeignKey;
	}

	//OBJETO FK ACTUAL
	public Consultor consultorForeignKey;

	public Consultor getconsultorForeignKey() {
		return consultorForeignKey;
	}

	public void setconsultorForeignKey(Consultor consultorForeignKey) {
		this.consultorForeignKey = consultorForeignKey;
	}

	public String sFinalQueryComboTransporte="";

	public List<Transporte> transportesForeignKey;

	public List<Transporte> gettransportesForeignKey() {
		return transportesForeignKey;
	}

	public void settransportesForeignKey(List<Transporte> transportesForeignKey) {
		this.transportesForeignKey = transportesForeignKey;
	}

	//OBJETO FK ACTUAL
	public Transporte transporteForeignKey;

	public Transporte gettransporteForeignKey() {
		return transporteForeignKey;
	}

	public void settransporteForeignKey(Transporte transporteForeignKey) {
		this.transporteForeignKey = transporteForeignKey;
	}

	public String sFinalQueryComboSubCliente="";

	public List<SubCliente> subclientesForeignKey;

	public List<SubCliente> getsubclientesForeignKey() {
		return subclientesForeignKey;
	}

	public void setsubclientesForeignKey(List<SubCliente> subclientesForeignKey) {
		this.subclientesForeignKey = subclientesForeignKey;
	}

	//OBJETO FK ACTUAL
	public SubCliente subclienteForeignKey;

	public SubCliente getsubclienteForeignKey() {
		return subclienteForeignKey;
	}

	public void setsubclienteForeignKey(SubCliente subclienteForeignKey) {
		this.subclienteForeignKey = subclienteForeignKey;
	}

	public String sFinalQueryComboEmpleado="";

	public List<Empleado> empleadosForeignKey;

	public List<Empleado> getempleadosForeignKey() {
		return empleadosForeignKey;
	}

	public void setempleadosForeignKey(List<Empleado> empleadosForeignKey) {
		this.empleadosForeignKey = empleadosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Empleado empleadoForeignKey;

	public Empleado getempleadoForeignKey() {
		return empleadoForeignKey;
	}

	public void setempleadoForeignKey(Empleado empleadoForeignKey) {
		this.empleadoForeignKey = empleadoForeignKey;
	}

	public String sFinalQueryComboCiudadOrigen="";

	public List<Ciudad> ciudadorigensForeignKey;

	public List<Ciudad> getciudadorigensForeignKey() {
		return ciudadorigensForeignKey;
	}

	public void setciudadorigensForeignKey(List<Ciudad> ciudadorigensForeignKey) {
		this.ciudadorigensForeignKey = ciudadorigensForeignKey;
	}

	//OBJETO FK ACTUAL
	public Ciudad ciudadorigenForeignKey;

	public Ciudad getciudadorigenForeignKey() {
		return ciudadorigenForeignKey;
	}

	public void setciudadorigenForeignKey(Ciudad ciudadorigenForeignKey) {
		this.ciudadorigenForeignKey = ciudadorigenForeignKey;
	}

	public String sFinalQueryComboCiudadDestino="";

	public List<Ciudad> ciudaddestinosForeignKey;

	public List<Ciudad> getciudaddestinosForeignKey() {
		return ciudaddestinosForeignKey;
	}

	public void setciudaddestinosForeignKey(List<Ciudad> ciudaddestinosForeignKey) {
		this.ciudaddestinosForeignKey = ciudaddestinosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Ciudad ciudaddestinoForeignKey;

	public Ciudad getciudaddestinoForeignKey() {
		return ciudaddestinoForeignKey;
	}

	public void setciudaddestinoForeignKey(Ciudad ciudaddestinoForeignKey) {
		this.ciudaddestinoForeignKey = ciudaddestinoForeignKey;
	}

	public String sFinalQueryComboTipoLlamada="";

	public List<TipoLlamada> tipollamadasForeignKey;

	public List<TipoLlamada> gettipollamadasForeignKey() {
		return tipollamadasForeignKey;
	}

	public void settipollamadasForeignKey(List<TipoLlamada> tipollamadasForeignKey) {
		this.tipollamadasForeignKey = tipollamadasForeignKey;
	}

	//OBJETO FK ACTUAL
	public TipoLlamada tipollamadaForeignKey;

	public TipoLlamada gettipollamadaForeignKey() {
		return tipollamadaForeignKey;
	}

	public void settipollamadaForeignKey(TipoLlamada tipollamadaForeignKey) {
		this.tipollamadaForeignKey = tipollamadaForeignKey;
	}

	public String sFinalQueryComboTipoCambio="";

	public List<TipoCambio> tipocambiosForeignKey;

	public List<TipoCambio> gettipocambiosForeignKey() {
		return tipocambiosForeignKey;
	}

	public void settipocambiosForeignKey(List<TipoCambio> tipocambiosForeignKey) {
		this.tipocambiosForeignKey = tipocambiosForeignKey;
	}

	//OBJETO FK ACTUAL
	public TipoCambio tipocambioForeignKey;

	public TipoCambio gettipocambioForeignKey() {
		return tipocambioForeignKey;
	}

	public void settipocambioForeignKey(TipoCambio tipocambioForeignKey) {
		this.tipocambioForeignKey = tipocambioForeignKey;
	}

		
	
	
	
	//BUSQUEDA INTERNA FK
	public Long idClienteActual=0L;

	public Long getidClienteActual() {
		return idClienteActual;
	}

	public void setidClienteActual(Long idClienteActual) {
		this.idClienteActual= idClienteActual;
	}
	public Long idFacturaActual=0L;

	public Long getidFacturaActual() {
		return idFacturaActual;
	}

	public void setidFacturaActual(Long idFacturaActual) {
		this.idFacturaActual= idFacturaActual;
	}
	public Long idTipoCambioActual=0L;

	public Long getidTipoCambioActual() {
		return idTipoCambioActual;
	}

	public void setidTipoCambioActual(Long idTipoCambioActual) {
		this.idTipoCambioActual= idTipoCambioActual;
	}
	
	

	public Boolean isTienePermisosDetalleGuiaRemision=false;

	public Boolean getIsTienePermisosDetalleGuiaRemision() {
		return isTienePermisosDetalleGuiaRemision;
	}

	public void setIsTienePermisosDetalleGuiaRemision(Boolean isTienePermisosDetalleGuiaRemision) {
		this.isTienePermisosDetalleGuiaRemision= isTienePermisosDetalleGuiaRemision;
	}

	
	
	//FALTA:PARA BUSQUEDAS POR CAMPO EN FORMULARIO
	public String sFinalQueryGeneral="";
	public Boolean isEntroOnLoad=false;
	public Boolean isErrorGuardar=false;
	
	public Boolean isGuardarCambiosEnLote=false;
	public Boolean isCargarCombosDependencia=false;
	public Boolean isSeleccionarTodos=false;
	public Boolean isSeleccionados=false;
	public Boolean conGraficoReporte=false;
	
	public Boolean isPostAccionNuevo=false;
	public Boolean isPostAccionSinCerrar=false;
	public Boolean isPostAccionSinMensaje=false;
	
	
	public Boolean esControlTabla=false;
	
	public Boolean isPermisoTodoGuiaRemision;
	public Boolean isPermisoNuevoGuiaRemision;
	public Boolean isPermisoActualizarGuiaRemision;
	public Boolean isPermisoActualizarOriginalGuiaRemision;
	public Boolean isPermisoEliminarGuiaRemision;
	public Boolean isPermisoGuardarCambiosGuiaRemision;
	public Boolean isPermisoConsultaGuiaRemision;
	public Boolean isPermisoBusquedaGuiaRemision;
	public Boolean isPermisoReporteGuiaRemision;
	public Boolean isPermisoPaginacionMedioGuiaRemision;
	public Boolean isPermisoPaginacionAltoGuiaRemision;
	public Boolean isPermisoPaginacionTodoGuiaRemision;
	public Boolean isPermisoCopiarGuiaRemision;
	public Boolean isPermisoVerFormGuiaRemision;
	public Boolean isPermisoDuplicarGuiaRemision;
	public Boolean isPermisoOrdenGuiaRemision;
	
	
	public ArrayList<DatoGeneral> arrDatoGeneral;
	public ArrayList<String> arrDatoGeneralNo;
	ArrayList<Classe> classesActual=new ArrayList<Classe>();
	
	public List<Accion> accions;	
	public List<Accion> accionsFormulario;
	
	
	public ArrayList<DatoGeneralMinimo> arrDatoGeneralMinimos;
	
	public ArrayList<Reporte> tiposArchivosReportes;
	public ArrayList<Reporte> tiposArchivosReportesDinamico;
	public ArrayList<Reporte> tiposReportes;
	public ArrayList<Reporte> tiposReportesDinamico;
	public ArrayList<Reporte> tiposGraficosReportes;
	public ArrayList<Reporte> tiposPaginacion;
	public ArrayList<Reporte> tiposRelaciones;
	public ArrayList<Reporte> tiposAcciones;
	public ArrayList<Reporte> tiposAccionesFormulario;
	public ArrayList<Reporte> tiposSeleccionar;
	
	public ArrayList<Reporte> tiposColumnasSelect;
	public ArrayList<Reporte> tiposRelacionesSelect;
	
	
	public Integer iNumeroPaginacion;
	public Integer iNumeroPaginacionPagina;
	public Pagination pagination;
	public DatosCliente datosCliente;
	public DatosDeep datosDeep;
	public String sTipoArchivoReporte="";
	public String sTipoArchivoReporteDinamico="";
	public String sTipoReporte="";
	public String sTipoReporteDinamico="";
	public String sTipoGraficoReporte="";
	public String sTipoPaginacion="";
	public String sTipoRelacion="";
	public String sTipoAccion="";
	public String sTipoAccionFormulario="";
	public String sTipoSeleccionar="";	
	public String sDetalleReporte="";
	public Boolean isMostrarNumeroPaginacion;
	public String sTipoReporteExtra="";
	public String sValorCampoGeneral="";
	public Boolean esReporteDinamico=false;
	public Boolean esReporteAccionProceso=false;
	public Boolean esRecargarFks=false;
	public String sPathReporteDinamico="";
	
	public GuiaRemisionParameterReturnGeneral guiaremisionReturnGeneral;
	public GuiaRemisionParameterReturnGeneral guiaremisionParameterGeneral;
	
	

	public DetalleGuiaRemisionLogic detalleguiaremisionLogic=null;

	public DetalleGuiaRemisionLogic getDetalleGuiaRemisionLogic() {
		return detalleguiaremisionLogic;
	}

	public void setDetalleGuiaRemisionLogic(DetalleGuiaRemisionLogic detalleguiaremisionLogic) {
		this.detalleguiaremisionLogic = detalleguiaremisionLogic;
	}
 	
	public JasperPrint jasperPrint = null;
	
	public Long lIdUsuarioSesion=0L;				
	
	public Boolean isEsNuevoGuiaRemision=false;
	public Boolean esParaAccionDesdeFormularioGuiaRemision=false;
	public Boolean isEsMantenimientoRelacionesRelacionadoUnico=false;
	public Boolean isEsMantenimientoRelaciones=false;
	public Boolean isEsMantenimientoRelacionado=false;	
	public Boolean isContieneImagenes=false;
		
	//public Boolean conTotales=false; //Viene heredado de JInternalFrameBase
	//public Boolean esParaBusquedaForeignKey=false;
	
	
	protected GuiaRemisionSessionBeanAdditional guiaremisionSessionBeanAdditional=null;
	
	public GuiaRemisionSessionBeanAdditional getGuiaRemisionSessionBeanAdditional() {
		return this.guiaremisionSessionBeanAdditional;
	}
	
	public void setGuiaRemisionSessionBeanAdditional(GuiaRemisionSessionBeanAdditional guiaremisionSessionBeanAdditional) {
		try {
			this.guiaremisionSessionBeanAdditional=guiaremisionSessionBeanAdditional;
		} catch(Exception e) {
			;
		}
	}
	
	
	
	
	protected GuiaRemisionBeanSwingJInternalFrameAdditional guiaremisionBeanSwingJInternalFrameAdditional=null;
	//public class GuiaRemisionBeanSwingJInternalFrame
	
	public GuiaRemisionBeanSwingJInternalFrameAdditional getGuiaRemisionBeanSwingJInternalFrameAdditional() {
		return this.guiaremisionBeanSwingJInternalFrameAdditional;
	}
	
	public void setGuiaRemisionBeanSwingJInternalFrameAdditional(GuiaRemisionBeanSwingJInternalFrameAdditional guiaremisionBeanSwingJInternalFrameAdditional) {
		try {
			this.guiaremisionBeanSwingJInternalFrameAdditional=guiaremisionBeanSwingJInternalFrameAdditional;
		} catch(Exception e) {
			;
		}
	}
	
	
	
	
	//ESTA EN PADRE
	
	//public GuiaRemisionLogic guiaremisionLogic;
	public SistemaLogicAdditional sistemaLogicAdditional;
	
	
	public GuiaRemision guiaremisionBean;
	public GuiaRemisionConstantesFunciones guiaremisionConstantesFunciones;
	//public GuiaRemisionParameterReturnGeneral guiaremisionReturnGeneral;
	
	//FK
	
	public EmpresaLogic empresaLogic;
	public SucursalLogic sucursalLogic;
	public EjercicioLogic ejercicioLogic;
	public PeriodoLogic periodoLogic;
	public UsuarioLogic usuarioLogic;
	public FormatoLogic formatoLogic;
	public TipoPrecioLogic tipoprecioLogic;
	public MonedaLogic monedaLogic;
	public ClienteLogic clienteLogic;
	public VendedorLogic vendedorLogic;
	public FacturaLogic facturaLogic;
	public TransportistaLogic transportistaLogic;
	public ConsultorLogic consultorLogic;
	public TransporteLogic transporteLogic;
	public SubClienteLogic subclienteLogic;
	public EmpleadoLogic empleadoLogic;
	public CiudadLogic ciudadorigenLogic;
	public CiudadLogic ciudaddestinoLogic;
	public TipoLlamadaLogic tipollamadaLogic;
	public TipoCambioLogic tipocambioLogic;
	
	//PARAMETROS
	
	
	//public List<GuiaRemision> guiaremisions;	
	//public List<GuiaRemision> guiaremisionsEliminados;
	//public List<GuiaRemision> guiaremisionsAux;
	
	public String sAccionMantenimiento="";
	public String sAccionBusqueda="";
	public String sAccionAdicional="";
	public String sUltimaBusqueda="";
	
	public Mensaje mensaje;
	
	
	public String sVisibilidadTablaBusquedas="";					
	public String sVisibilidadTablaElementos="";	
	public String sVisibilidadTablaAcciones="";			
	
	public Boolean isVisibilidadCeldaNuevoGuiaRemision=false;
	public Boolean isVisibilidadCeldaDuplicarGuiaRemision=true;
	public Boolean isVisibilidadCeldaCopiarGuiaRemision=true;
	public Boolean isVisibilidadCeldaVerFormGuiaRemision=true;
	public Boolean isVisibilidadCeldaOrdenGuiaRemision=true;
	public Boolean isVisibilidadCeldaNuevoRelacionesGuiaRemision=false;
	public Boolean isVisibilidadCeldaModificarGuiaRemision=false;
	public Boolean isVisibilidadCeldaActualizarGuiaRemision=false;
	public Boolean isVisibilidadCeldaEliminarGuiaRemision=false;
	public Boolean isVisibilidadCeldaCancelarGuiaRemision=false;
	public Boolean isVisibilidadCeldaGuardarGuiaRemision=false;	
	public Boolean isVisibilidadCeldaGuardarCambiosGuiaRemision=false;	
	
	
	public Boolean isVisibilidadFK_IdCiudadDestino=false;
	public Boolean isVisibilidadFK_IdCiudadOrigen=false;
	public Boolean isVisibilidadFK_IdCliente=false;
	public Boolean isVisibilidadFK_IdConsultor=false;
	public Boolean isVisibilidadFK_IdEjercicio=false;
	public Boolean isVisibilidadFK_IdEmpleado=false;
	public Boolean isVisibilidadFK_IdEmpresa=false;
	public Boolean isVisibilidadFK_IdFactura=false;
	public Boolean isVisibilidadFK_IdFormato=false;
	public Boolean isVisibilidadFK_IdMoneda=false;
	public Boolean isVisibilidadFK_IdPeriodo=false;
	public Boolean isVisibilidadFK_IdSubCliente=false;
	public Boolean isVisibilidadFK_IdSucursal=false;
	public Boolean isVisibilidadFK_IdTipoCambio=false;
	public Boolean isVisibilidadFK_IdTipoLlamada=false;
	public Boolean isVisibilidadFK_IdTipoPrecio=false;
	public Boolean isVisibilidadFK_IdTransporte=false;
	public Boolean isVisibilidadFK_IdTransportista=false;
	public Boolean isVisibilidadFK_IdUsuario=false;
	public Boolean isVisibilidadFK_IdVendedor=false;
	
	public Long getiIdNuevoGuiaRemision() {
		return this.iIdNuevoGuiaRemision;
	}

	public void setiIdNuevoGuiaRemision(Long iIdNuevoGuiaRemision) {
		this.iIdNuevoGuiaRemision = iIdNuevoGuiaRemision;
	}
	
	public Long getidGuiaRemisionActual() {
		return this.idGuiaRemisionActual;
	}

	public void setidGuiaRemisionActual(Long idGuiaRemisionActual) {
		this.idGuiaRemisionActual = idGuiaRemisionActual;
	}
	
	public int getrowIndexActual() {
		return this.rowIndexActual;
	}

	public void setrowIndexActual(int rowIndexActual) {
		this.rowIndexActual=rowIndexActual;
	}
	
	
	public GuiaRemision getguiaremision() {
		return this.guiaremision;
	}

	public void setguiaremision(GuiaRemision guiaremision) {
		this.guiaremision = guiaremision;
	}
	
	public GuiaRemision getguiaremisionAux() {
		return this.guiaremisionAux;
	}

	public void setguiaremisionAux(GuiaRemision guiaremisionAux) {
		this.guiaremisionAux = guiaremisionAux;
	}				
	
	public GuiaRemision getguiaremisionAnterior() {
		return this.guiaremisionAnterior;
	}

	public void setguiaremisionAnterior(GuiaRemision guiaremisionAnterior) {
		this.guiaremisionAnterior = guiaremisionAnterior;
	}	
	
	public GuiaRemision getguiaremisionTotales() {
		return this.guiaremisionTotales;
	}

	public void setguiaremisionTotales(GuiaRemision guiaremisionTotales) {
		this.guiaremisionTotales = guiaremisionTotales;
	}	
	
	public GuiaRemision getguiaremisionBean() {
		return this.guiaremisionBean;
	}

	public void setguiaremisionBean(GuiaRemision guiaremisionBean) {
		this.guiaremisionBean = guiaremisionBean;
	}	
	
	public GuiaRemisionParameterReturnGeneral getguiaremisionReturnGeneral() {
		return this.guiaremisionReturnGeneral;
	}

	public void setguiaremisionReturnGeneral(GuiaRemisionParameterReturnGeneral guiaremisionReturnGeneral) {
		this.guiaremisionReturnGeneral = guiaremisionReturnGeneral;
	}	
	
	
	public Long id_ciudad_destinoFK_IdCiudadDestino=null;

	public Long getid_ciudad_destinoFK_IdCiudadDestino() {
		return this.id_ciudad_destinoFK_IdCiudadDestino;
	}

	public void setid_ciudad_destinoFK_IdCiudadDestino(Long id_ciudad_destinoFK_IdCiudadDestino) {
		this.id_ciudad_destinoFK_IdCiudadDestino = id_ciudad_destinoFK_IdCiudadDestino;
	}

	public Long id_ciudad_origenFK_IdCiudadOrigen=null;

	public Long getid_ciudad_origenFK_IdCiudadOrigen() {
		return this.id_ciudad_origenFK_IdCiudadOrigen;
	}

	public void setid_ciudad_origenFK_IdCiudadOrigen(Long id_ciudad_origenFK_IdCiudadOrigen) {
		this.id_ciudad_origenFK_IdCiudadOrigen = id_ciudad_origenFK_IdCiudadOrigen;
	}

	public Long id_clienteFK_IdCliente=-1L;

	public Long getid_clienteFK_IdCliente() {
		return this.id_clienteFK_IdCliente;
	}

	public void setid_clienteFK_IdCliente(Long id_clienteFK_IdCliente) {
		this.id_clienteFK_IdCliente = id_clienteFK_IdCliente;
	}

	public Long id_consultorFK_IdConsultor=-1L;

	public Long getid_consultorFK_IdConsultor() {
		return this.id_consultorFK_IdConsultor;
	}

	public void setid_consultorFK_IdConsultor(Long id_consultorFK_IdConsultor) {
		this.id_consultorFK_IdConsultor = id_consultorFK_IdConsultor;
	}

	public Long id_ejercicioFK_IdEjercicio=-1L;

	public Long getid_ejercicioFK_IdEjercicio() {
		return this.id_ejercicioFK_IdEjercicio;
	}

	public void setid_ejercicioFK_IdEjercicio(Long id_ejercicioFK_IdEjercicio) {
		this.id_ejercicioFK_IdEjercicio = id_ejercicioFK_IdEjercicio;
	}

	public Long id_empleadoFK_IdEmpleado=-1L;

	public Long getid_empleadoFK_IdEmpleado() {
		return this.id_empleadoFK_IdEmpleado;
	}

	public void setid_empleadoFK_IdEmpleado(Long id_empleadoFK_IdEmpleado) {
		this.id_empleadoFK_IdEmpleado = id_empleadoFK_IdEmpleado;
	}

	public Long id_empresaFK_IdEmpresa=-1L;

	public Long getid_empresaFK_IdEmpresa() {
		return this.id_empresaFK_IdEmpresa;
	}

	public void setid_empresaFK_IdEmpresa(Long id_empresaFK_IdEmpresa) {
		this.id_empresaFK_IdEmpresa = id_empresaFK_IdEmpresa;
	}

	public Long id_facturaFK_IdFactura=null;

	public Long getid_facturaFK_IdFactura() {
		return this.id_facturaFK_IdFactura;
	}

	public void setid_facturaFK_IdFactura(Long id_facturaFK_IdFactura) {
		this.id_facturaFK_IdFactura = id_facturaFK_IdFactura;
	}

	public Long id_formatoFK_IdFormato=null;

	public Long getid_formatoFK_IdFormato() {
		return this.id_formatoFK_IdFormato;
	}

	public void setid_formatoFK_IdFormato(Long id_formatoFK_IdFormato) {
		this.id_formatoFK_IdFormato = id_formatoFK_IdFormato;
	}

	public Long id_monedaFK_IdMoneda=-1L;

	public Long getid_monedaFK_IdMoneda() {
		return this.id_monedaFK_IdMoneda;
	}

	public void setid_monedaFK_IdMoneda(Long id_monedaFK_IdMoneda) {
		this.id_monedaFK_IdMoneda = id_monedaFK_IdMoneda;
	}

	public Long id_periodoFK_IdPeriodo=-1L;

	public Long getid_periodoFK_IdPeriodo() {
		return this.id_periodoFK_IdPeriodo;
	}

	public void setid_periodoFK_IdPeriodo(Long id_periodoFK_IdPeriodo) {
		this.id_periodoFK_IdPeriodo = id_periodoFK_IdPeriodo;
	}

	public Long id_sub_clienteFK_IdSubCliente=-1L;

	public Long getid_sub_clienteFK_IdSubCliente() {
		return this.id_sub_clienteFK_IdSubCliente;
	}

	public void setid_sub_clienteFK_IdSubCliente(Long id_sub_clienteFK_IdSubCliente) {
		this.id_sub_clienteFK_IdSubCliente = id_sub_clienteFK_IdSubCliente;
	}

	public Long id_sucursalFK_IdSucursal=-1L;

	public Long getid_sucursalFK_IdSucursal() {
		return this.id_sucursalFK_IdSucursal;
	}

	public void setid_sucursalFK_IdSucursal(Long id_sucursalFK_IdSucursal) {
		this.id_sucursalFK_IdSucursal = id_sucursalFK_IdSucursal;
	}

	public Long id_tipo_cambioFK_IdTipoCambio=null;

	public Long getid_tipo_cambioFK_IdTipoCambio() {
		return this.id_tipo_cambioFK_IdTipoCambio;
	}

	public void setid_tipo_cambioFK_IdTipoCambio(Long id_tipo_cambioFK_IdTipoCambio) {
		this.id_tipo_cambioFK_IdTipoCambio = id_tipo_cambioFK_IdTipoCambio;
	}

	public Long id_tipo_llamadaFK_IdTipoLlamada=-1L;

	public Long getid_tipo_llamadaFK_IdTipoLlamada() {
		return this.id_tipo_llamadaFK_IdTipoLlamada;
	}

	public void setid_tipo_llamadaFK_IdTipoLlamada(Long id_tipo_llamadaFK_IdTipoLlamada) {
		this.id_tipo_llamadaFK_IdTipoLlamada = id_tipo_llamadaFK_IdTipoLlamada;
	}

	public Long id_tipo_precioFK_IdTipoPrecio=-1L;

	public Long getid_tipo_precioFK_IdTipoPrecio() {
		return this.id_tipo_precioFK_IdTipoPrecio;
	}

	public void setid_tipo_precioFK_IdTipoPrecio(Long id_tipo_precioFK_IdTipoPrecio) {
		this.id_tipo_precioFK_IdTipoPrecio = id_tipo_precioFK_IdTipoPrecio;
	}

	public Long id_transporteFK_IdTransporte=-1L;

	public Long getid_transporteFK_IdTransporte() {
		return this.id_transporteFK_IdTransporte;
	}

	public void setid_transporteFK_IdTransporte(Long id_transporteFK_IdTransporte) {
		this.id_transporteFK_IdTransporte = id_transporteFK_IdTransporte;
	}

	public Long id_transportistaFK_IdTransportista=null;

	public Long getid_transportistaFK_IdTransportista() {
		return this.id_transportistaFK_IdTransportista;
	}

	public void setid_transportistaFK_IdTransportista(Long id_transportistaFK_IdTransportista) {
		this.id_transportistaFK_IdTransportista = id_transportistaFK_IdTransportista;
	}

	public Long id_usuarioFK_IdUsuario=-1L;

	public Long getid_usuarioFK_IdUsuario() {
		return this.id_usuarioFK_IdUsuario;
	}

	public void setid_usuarioFK_IdUsuario(Long id_usuarioFK_IdUsuario) {
		this.id_usuarioFK_IdUsuario = id_usuarioFK_IdUsuario;
	}

	public Long id_vendedorFK_IdVendedor=null;

	public Long getid_vendedorFK_IdVendedor() {
		return this.id_vendedorFK_IdVendedor;
	}

	public void setid_vendedorFK_IdVendedor(Long id_vendedorFK_IdVendedor) {
		this.id_vendedorFK_IdVendedor = id_vendedorFK_IdVendedor;
	}

		
	
	//ELEMENTOS TABLAS PARAMETOS
	
	
	
	
	
	
	//ELEMENTOS TABLAS PARAMETOS_FIN
	
	
	public GuiaRemisionLogic getGuiaRemisionLogic()	{		
		return guiaremisionLogic;
	}

	public void setGuiaRemisionLogic(GuiaRemisionLogic guiaremisionLogic) {
		this.guiaremisionLogic = guiaremisionLogic;
	}
	
	
	public void setsFinalQueryGeneral(String sFinalQueryGeneral) {
		this.sFinalQueryGeneral=sFinalQueryGeneral;
	}
	
	public String getsFinalQueryGeneral() {
		return this.sFinalQueryGeneral;
	}
		
	public Boolean getIsGuardarCambiosEnLote() {
		return isGuardarCambiosEnLote;
	}

	public void setIsGuardarCambiosEnLote(Boolean isGuardarCambiosEnLote) {
		this.isGuardarCambiosEnLote = isGuardarCambiosEnLote;
	}
	
	public Boolean getIsCargarCombosDependencia() {
		return isCargarCombosDependencia;
	}

	public void setIsCargarCombosDependencia(Boolean isCargarCombosDependencia) {
		this.isCargarCombosDependencia = isCargarCombosDependencia;
	}
	
	public Boolean getIsEsNuevoGuiaRemision() {
		return isEsNuevoGuiaRemision;
	}

	public void setIsEsNuevoGuiaRemision(Boolean isEsNuevoGuiaRemision) {
		this.isEsNuevoGuiaRemision = isEsNuevoGuiaRemision;
	}

	public Boolean getEsParaAccionDesdeFormularioGuiaRemision() {
		return esParaAccionDesdeFormularioGuiaRemision;
	}
	
	public void setEsParaAccionDesdeFormularioGuiaRemision(Boolean esParaAccionDesdeFormularioGuiaRemision) {
		this.esParaAccionDesdeFormularioGuiaRemision = esParaAccionDesdeFormularioGuiaRemision;
	}
	
	public Boolean getIsEsMantenimientoRelacionesRelacionadoUnico() {
		return isEsMantenimientoRelacionesRelacionadoUnico;
	}

	public void setIsEsMantenimientoRelacionesRelacionadoUnico(Boolean isEsMantenimientoRelacionesRelacionadoUnico) {
		this.isEsMantenimientoRelacionesRelacionadoUnico = isEsMantenimientoRelacionesRelacionadoUnico;
	}

	public Boolean getIsEsMantenimientoRelaciones() {
		return isEsMantenimientoRelaciones;
	}

	public void setIsEsMantenimientoRelaciones(Boolean isEsMantenimientoRelaciones) {
		this.isEsMantenimientoRelaciones = isEsMantenimientoRelaciones;
	}

	public Boolean getIsEsMantenimientoRelacionado() {
		return isEsMantenimientoRelacionado;
	}

	public void setIsEsMantenimientoRelacionado(Boolean isEsMantenimientoRelacionado) {
		this.isEsMantenimientoRelacionado = isEsMantenimientoRelacionado;
	}

	public Boolean getesParaBusquedaForeignKey() {
		return esParaBusquedaForeignKey;
	}

	public void setesParaBusquedaForeignKey(Boolean esParaBusquedaForeignKey) {
		this.esParaBusquedaForeignKey = esParaBusquedaForeignKey;
	}

	public Boolean getIsContieneImagenes() {
		return isContieneImagenes;
	}

	public void setIsContieneImagenes(Boolean isContieneImagenes) {
		this.isContieneImagenes = isContieneImagenes;
	}		
	
	
	public void cargarCombosEmpresasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.empresasForeignKey=new ArrayList<Empresa>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			EmpresaLogic empresaLogic=new EmpresaLogic();

			//empresaLogic.getEmpresaDataAccess().setIsForForeingKeyData(true);

			if(this.guiaremisionSessionBean==null) {
				this.guiaremisionSessionBean=new GuiaRemisionSessionBean();
			}

			if(!this.guiaremisionSessionBean.getisBusquedaDesdeForeignKeySesionEmpresa()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//empresaLogic.getEmpresaDataAccess().setIsForForeingKeyData(true);

					empresaLogic.getTodosEmpresasWithConnection(sFinalQuery,new Pagination());

					this.empresasForeignKey=empresaLogic.getEmpresas();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaEmpresa(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					empresaLogic.getEntityWithConnection(guiaremisionSessionBean.getlidEmpresaActual());
					this.empresasForeignKey.add(empresaLogic.getEmpresa());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosSucursalsForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.sucursalsForeignKey=new ArrayList<Sucursal>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			SucursalLogic sucursalLogic=new SucursalLogic();

			//sucursalLogic.getSucursalDataAccess().setIsForForeingKeyData(true);

			if(this.guiaremisionSessionBean==null) {
				this.guiaremisionSessionBean=new GuiaRemisionSessionBean();
			}

			if(!this.guiaremisionSessionBean.getisBusquedaDesdeForeignKeySesionSucursal()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//sucursalLogic.getSucursalDataAccess().setIsForForeingKeyData(true);

					sucursalLogic.getTodosSucursalsWithConnection(sFinalQuery,new Pagination());

					this.sucursalsForeignKey=sucursalLogic.getSucursals();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaSucursal(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					sucursalLogic.getEntityWithConnection(guiaremisionSessionBean.getlidSucursalActual());
					this.sucursalsForeignKey.add(sucursalLogic.getSucursal());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosEjerciciosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.ejerciciosForeignKey=new ArrayList<Ejercicio>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			EjercicioLogic ejercicioLogic=new EjercicioLogic();

			//ejercicioLogic.getEjercicioDataAccess().setIsForForeingKeyData(true);

			if(this.guiaremisionSessionBean==null) {
				this.guiaremisionSessionBean=new GuiaRemisionSessionBean();
			}

			if(!this.guiaremisionSessionBean.getisBusquedaDesdeForeignKeySesionEjercicio()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//ejercicioLogic.getEjercicioDataAccess().setIsForForeingKeyData(true);

					ejercicioLogic.getTodosEjerciciosWithConnection(sFinalQuery,new Pagination());

					this.ejerciciosForeignKey=ejercicioLogic.getEjercicios();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaEjercicio(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					ejercicioLogic.getEntityWithConnection(guiaremisionSessionBean.getlidEjercicioActual());
					this.ejerciciosForeignKey.add(ejercicioLogic.getEjercicio());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosPeriodosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.periodosForeignKey=new ArrayList<Periodo>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			PeriodoLogic periodoLogic=new PeriodoLogic();

			//periodoLogic.getPeriodoDataAccess().setIsForForeingKeyData(true);

			if(this.guiaremisionSessionBean==null) {
				this.guiaremisionSessionBean=new GuiaRemisionSessionBean();
			}

			if(!this.guiaremisionSessionBean.getisBusquedaDesdeForeignKeySesionPeriodo()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//periodoLogic.getPeriodoDataAccess().setIsForForeingKeyData(true);

					periodoLogic.getTodosPeriodosWithConnection(sFinalQuery,new Pagination());

					this.periodosForeignKey=periodoLogic.getPeriodos();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaPeriodo(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					periodoLogic.getEntityWithConnection(guiaremisionSessionBean.getlidPeriodoActual());
					this.periodosForeignKey.add(periodoLogic.getPeriodo());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosUsuariosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.usuariosForeignKey=new ArrayList<Usuario>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			UsuarioLogic usuarioLogic=new UsuarioLogic();

			//usuarioLogic.getUsuarioDataAccess().setIsForForeingKeyData(true);

			if(this.guiaremisionSessionBean==null) {
				this.guiaremisionSessionBean=new GuiaRemisionSessionBean();
			}

			if(!this.guiaremisionSessionBean.getisBusquedaDesdeForeignKeySesionUsuario()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//usuarioLogic.getUsuarioDataAccess().setIsForForeingKeyData(true);

					usuarioLogic.getTodosUsuariosWithConnection(sFinalQuery,new Pagination());

					this.usuariosForeignKey=usuarioLogic.getUsuarios();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaUsuario(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					usuarioLogic.getEntityWithConnection(guiaremisionSessionBean.getlidUsuarioActual());
					this.usuariosForeignKey.add(usuarioLogic.getUsuario());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosFormatosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.formatosForeignKey=new ArrayList<Formato>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			Formato formatoNulo = new Formato();

			FormatoLogic formatoLogic=new FormatoLogic();

			//formatoLogic.getFormatoDataAccess().setIsForForeingKeyData(true);

			if(this.guiaremisionSessionBean==null) {
				this.guiaremisionSessionBean=new GuiaRemisionSessionBean();
			}

			if(!this.guiaremisionSessionBean.getisBusquedaDesdeForeignKeySesionFormato()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//formatoLogic.getFormatoDataAccess().setIsForForeingKeyData(true);

					formatoLogic.getTodosFormatosWithConnection(sFinalQuery,new Pagination());

					this.formatosForeignKey=formatoLogic.getFormatos();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}

				this.formatosForeignKey.add(0, formatoNulo);

				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaFormato(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					formatoLogic.getEntityWithConnection(guiaremisionSessionBean.getlidFormatoActual());
					this.formatosForeignKey.add(formatoLogic.getFormato());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTipoPreciosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.tipopreciosForeignKey=new ArrayList<TipoPrecio>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			TipoPrecioLogic tipoprecioLogic=new TipoPrecioLogic();

			//tipoprecioLogic.getTipoPrecioDataAccess().setIsForForeingKeyData(true);

			if(this.guiaremisionSessionBean==null) {
				this.guiaremisionSessionBean=new GuiaRemisionSessionBean();
			}

			if(!this.guiaremisionSessionBean.getisBusquedaDesdeForeignKeySesionTipoPrecio()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//tipoprecioLogic.getTipoPrecioDataAccess().setIsForForeingKeyData(true);

					tipoprecioLogic.getTodosTipoPreciosWithConnection(sFinalQuery,new Pagination());

					this.tipopreciosForeignKey=tipoprecioLogic.getTipoPrecios();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTipoPrecio(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipoprecioLogic.getEntityWithConnection(guiaremisionSessionBean.getlidTipoPrecioActual());
					this.tipopreciosForeignKey.add(tipoprecioLogic.getTipoPrecio());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosMonedasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.monedasForeignKey=new ArrayList<Moneda>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			MonedaLogic monedaLogic=new MonedaLogic();

			//monedaLogic.getMonedaDataAccess().setIsForForeingKeyData(true);

			if(this.guiaremisionSessionBean==null) {
				this.guiaremisionSessionBean=new GuiaRemisionSessionBean();
			}

			if(!this.guiaremisionSessionBean.getisBusquedaDesdeForeignKeySesionMoneda()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//monedaLogic.getMonedaDataAccess().setIsForForeingKeyData(true);

					monedaLogic.getTodosMonedasWithConnection(sFinalQuery,new Pagination());

					this.monedasForeignKey=monedaLogic.getMonedas();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaMoneda(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					monedaLogic.getEntityWithConnection(guiaremisionSessionBean.getlidMonedaActual());
					this.monedasForeignKey.add(monedaLogic.getMoneda());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosClientesForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.clientesForeignKey=new ArrayList<Cliente>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			ClienteLogic clienteLogic=new ClienteLogic();

			//clienteLogic.getClienteDataAccess().setIsForForeingKeyData(true);

			if(this.guiaremisionSessionBean==null) {
				this.guiaremisionSessionBean=new GuiaRemisionSessionBean();
			}

			if(!this.guiaremisionSessionBean.getisBusquedaDesdeForeignKeySesionCliente()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//clienteLogic.getClienteDataAccess().setIsForForeingKeyData(true);

					clienteLogic.getTodosClientesWithConnection(sFinalQuery,new Pagination());

					this.clientesForeignKey=clienteLogic.getClientes();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaCliente(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					clienteLogic.getEntityWithConnection(guiaremisionSessionBean.getlidClienteActual());
					this.clientesForeignKey.add(clienteLogic.getCliente());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosVendedorsForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.vendedorsForeignKey=new ArrayList<Vendedor>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			Vendedor vendedorNulo = new Vendedor();

			VendedorLogic vendedorLogic=new VendedorLogic();

			//vendedorLogic.getVendedorDataAccess().setIsForForeingKeyData(true);

			if(this.guiaremisionSessionBean==null) {
				this.guiaremisionSessionBean=new GuiaRemisionSessionBean();
			}

			if(!this.guiaremisionSessionBean.getisBusquedaDesdeForeignKeySesionVendedor()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//vendedorLogic.getVendedorDataAccess().setIsForForeingKeyData(true);

					vendedorLogic.getTodosVendedorsWithConnection(sFinalQuery,new Pagination());

					this.vendedorsForeignKey=vendedorLogic.getVendedors();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}

				this.vendedorsForeignKey.add(0, vendedorNulo);

				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaVendedor(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					vendedorLogic.getEntityWithConnection(guiaremisionSessionBean.getlidVendedorActual());
					this.vendedorsForeignKey.add(vendedorLogic.getVendedor());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosFacturasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.facturasForeignKey=new ArrayList<Factura>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			Factura facturaNulo = new Factura();

			FacturaLogic facturaLogic=new FacturaLogic();

			//facturaLogic.getFacturaDataAccess().setIsForForeingKeyData(true);

			if(this.guiaremisionSessionBean==null) {
				this.guiaremisionSessionBean=new GuiaRemisionSessionBean();
			}

			if(!this.guiaremisionSessionBean.getisBusquedaDesdeForeignKeySesionFactura()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//facturaLogic.getFacturaDataAccess().setIsForForeingKeyData(true);

					facturaLogic.getTodosFacturasWithConnection(sFinalQuery,new Pagination());

					this.facturasForeignKey=facturaLogic.getFacturas();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}

				this.facturasForeignKey.add(0, facturaNulo);

				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaFactura(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					facturaLogic.getEntityWithConnection(guiaremisionSessionBean.getlidFacturaActual());
					this.facturasForeignKey.add(facturaLogic.getFactura());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTransportistasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.transportistasForeignKey=new ArrayList<Transportista>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			Transportista transportistaNulo = new Transportista();

			TransportistaLogic transportistaLogic=new TransportistaLogic();

			//transportistaLogic.getTransportistaDataAccess().setIsForForeingKeyData(true);

			if(this.guiaremisionSessionBean==null) {
				this.guiaremisionSessionBean=new GuiaRemisionSessionBean();
			}

			if(!this.guiaremisionSessionBean.getisBusquedaDesdeForeignKeySesionTransportista()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//transportistaLogic.getTransportistaDataAccess().setIsForForeingKeyData(true);

					transportistaLogic.getTodosTransportistasWithConnection(sFinalQuery,new Pagination());

					this.transportistasForeignKey=transportistaLogic.getTransportistas();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}

				this.transportistasForeignKey.add(0, transportistaNulo);

				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTransportista(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					transportistaLogic.getEntityWithConnection(guiaremisionSessionBean.getlidTransportistaActual());
					this.transportistasForeignKey.add(transportistaLogic.getTransportista());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosConsultorsForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.consultorsForeignKey=new ArrayList<Consultor>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			ConsultorLogic consultorLogic=new ConsultorLogic();

			//consultorLogic.getConsultorDataAccess().setIsForForeingKeyData(true);

			if(this.guiaremisionSessionBean==null) {
				this.guiaremisionSessionBean=new GuiaRemisionSessionBean();
			}

			if(!this.guiaremisionSessionBean.getisBusquedaDesdeForeignKeySesionConsultor()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//consultorLogic.getConsultorDataAccess().setIsForForeingKeyData(true);

					consultorLogic.getTodosConsultorsWithConnection(sFinalQuery,new Pagination());

					this.consultorsForeignKey=consultorLogic.getConsultors();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaConsultor(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					consultorLogic.getEntityWithConnection(guiaremisionSessionBean.getlidConsultorActual());
					this.consultorsForeignKey.add(consultorLogic.getConsultor());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTransportesForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.transportesForeignKey=new ArrayList<Transporte>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			TransporteLogic transporteLogic=new TransporteLogic();

			//transporteLogic.getTransporteDataAccess().setIsForForeingKeyData(true);

			if(this.guiaremisionSessionBean==null) {
				this.guiaremisionSessionBean=new GuiaRemisionSessionBean();
			}

			if(!this.guiaremisionSessionBean.getisBusquedaDesdeForeignKeySesionTransporte()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//transporteLogic.getTransporteDataAccess().setIsForForeingKeyData(true);

					transporteLogic.getTodosTransportesWithConnection(sFinalQuery,new Pagination());

					this.transportesForeignKey=transporteLogic.getTransportes();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTransporte(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					transporteLogic.getEntityWithConnection(guiaremisionSessionBean.getlidTransporteActual());
					this.transportesForeignKey.add(transporteLogic.getTransporte());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosSubClientesForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.subclientesForeignKey=new ArrayList<SubCliente>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			SubClienteLogic subclienteLogic=new SubClienteLogic();

			//subclienteLogic.getSubClienteDataAccess().setIsForForeingKeyData(true);

			if(this.guiaremisionSessionBean==null) {
				this.guiaremisionSessionBean=new GuiaRemisionSessionBean();
			}

			if(!this.guiaremisionSessionBean.getisBusquedaDesdeForeignKeySesionSubCliente()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//subclienteLogic.getSubClienteDataAccess().setIsForForeingKeyData(true);

					subclienteLogic.getTodosSubClientesWithConnection(sFinalQuery,new Pagination());

					this.subclientesForeignKey=subclienteLogic.getSubClientes();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaSubCliente(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					subclienteLogic.getEntityWithConnection(guiaremisionSessionBean.getlidSubClienteActual());
					this.subclientesForeignKey.add(subclienteLogic.getSubCliente());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosEmpleadosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.empleadosForeignKey=new ArrayList<Empleado>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			EmpleadoLogic empleadoLogic=new EmpleadoLogic();

			//empleadoLogic.getEmpleadoDataAccess().setIsForForeingKeyData(true);

			if(this.guiaremisionSessionBean==null) {
				this.guiaremisionSessionBean=new GuiaRemisionSessionBean();
			}

			if(!this.guiaremisionSessionBean.getisBusquedaDesdeForeignKeySesionEmpleado()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//empleadoLogic.getEmpleadoDataAccess().setIsForForeingKeyData(true);

					empleadoLogic.getTodosEmpleadosWithConnection(sFinalQuery,new Pagination());

					this.empleadosForeignKey=empleadoLogic.getEmpleados();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaEmpleado(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					empleadoLogic.getEntityWithConnection(guiaremisionSessionBean.getlidEmpleadoActual());
					this.empleadosForeignKey.add(empleadoLogic.getEmpleado());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosCiudadOrigensForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.ciudadorigensForeignKey=new ArrayList<Ciudad>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			Ciudad ciudadorigenNulo = new Ciudad();

			CiudadLogic ciudadLogic=new CiudadLogic();

			//ciudadLogic.getCiudadDataAccess().setIsForForeingKeyData(true);

			if(this.guiaremisionSessionBean==null) {
				this.guiaremisionSessionBean=new GuiaRemisionSessionBean();
			}

			if(!this.guiaremisionSessionBean.getisBusquedaDesdeForeignKeySesionCiudadOrigen()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//ciudadorigenLogic.getCiudadDataAccess().setIsForForeingKeyData(true);

					ciudadLogic.getTodosCiudadsWithConnection(sFinalQuery,new Pagination());

					this.ciudadorigensForeignKey=ciudadLogic.getCiudads();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}

				this.ciudadorigensForeignKey.add(0, ciudadorigenNulo);

				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaCiudadOrigen(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					ciudadLogic.getEntityWithConnection(guiaremisionSessionBean.getlidCiudadOrigenActual());
					this.ciudadorigensForeignKey.add(ciudadLogic.getCiudad());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosCiudadDestinosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.ciudaddestinosForeignKey=new ArrayList<Ciudad>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			Ciudad ciudaddestinoNulo = new Ciudad();

			CiudadLogic ciudadLogic=new CiudadLogic();

			//ciudadLogic.getCiudadDataAccess().setIsForForeingKeyData(true);

			if(this.guiaremisionSessionBean==null) {
				this.guiaremisionSessionBean=new GuiaRemisionSessionBean();
			}

			if(!this.guiaremisionSessionBean.getisBusquedaDesdeForeignKeySesionCiudadDestino()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//ciudaddestinoLogic.getCiudadDataAccess().setIsForForeingKeyData(true);

					ciudadLogic.getTodosCiudadsWithConnection(sFinalQuery,new Pagination());

					this.ciudaddestinosForeignKey=ciudadLogic.getCiudads();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}

				this.ciudaddestinosForeignKey.add(0, ciudaddestinoNulo);

				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaCiudadDestino(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					ciudadLogic.getEntityWithConnection(guiaremisionSessionBean.getlidCiudadDestinoActual());
					this.ciudaddestinosForeignKey.add(ciudadLogic.getCiudad());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTipoLlamadasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.tipollamadasForeignKey=new ArrayList<TipoLlamada>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			TipoLlamadaLogic tipollamadaLogic=new TipoLlamadaLogic();

			//tipollamadaLogic.getTipoLlamadaDataAccess().setIsForForeingKeyData(true);

			if(this.guiaremisionSessionBean==null) {
				this.guiaremisionSessionBean=new GuiaRemisionSessionBean();
			}

			if(!this.guiaremisionSessionBean.getisBusquedaDesdeForeignKeySesionTipoLlamada()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//tipollamadaLogic.getTipoLlamadaDataAccess().setIsForForeingKeyData(true);

					tipollamadaLogic.getTodosTipoLlamadasWithConnection(sFinalQuery,new Pagination());

					this.tipollamadasForeignKey=tipollamadaLogic.getTipoLlamadas();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTipoLlamada(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipollamadaLogic.getEntityWithConnection(guiaremisionSessionBean.getlidTipoLlamadaActual());
					this.tipollamadasForeignKey.add(tipollamadaLogic.getTipoLlamada());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTipoCambiosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.tipocambiosForeignKey=new ArrayList<TipoCambio>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			TipoCambioLogic tipocambioLogic=new TipoCambioLogic();

			//tipocambioLogic.getTipoCambioDataAccess().setIsForForeingKeyData(true);

			if(this.guiaremisionSessionBean==null) {
				this.guiaremisionSessionBean=new GuiaRemisionSessionBean();
			}

			if(!this.guiaremisionSessionBean.getisBusquedaDesdeForeignKeySesionTipoCambio()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//tipocambioLogic.getTipoCambioDataAccess().setIsForForeingKeyData(true);

					tipocambioLogic.getTodosTipoCambiosWithConnection(sFinalQuery,new Pagination());

					this.tipocambiosForeignKey=tipocambioLogic.getTipoCambios();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTipoCambio(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipocambioLogic.getEntityWithConnection(guiaremisionSessionBean.getlidTipoCambioActual());
					this.tipocambiosForeignKey.add(tipocambioLogic.getTipoCambio());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	
	
	public void setActualEmpresaForeignKey(Long idEmpresaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Empresa  empresaTemp=null;

			for(Empresa empresaAux:empresasForeignKey) {
				if(empresaAux.getId()!=null && empresaAux.getId().equals(idEmpresaSeleccionado)) {
					empresaTemp=empresaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(empresaTemp!=null) {

					if(this.guiaremision!=null) {
						this.guiaremision.setEmpresa(empresaTemp);
					}

					if(this.jInternalFrameDetalleFormGuiaRemision!=null) {
						this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_empresaGuiaRemision.setSelectedItem(empresaTemp);
					}
				} else {
					//jComboBoxid_empresaGuiaRemision.setSelectedItem(empresaTemp);
					if(this.jInternalFrameDetalleFormGuiaRemision!=null) {
						if(this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_empresaGuiaRemision.getItemCount()>0) {
							this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_empresaGuiaRemision.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualEmpresaForeignKeyDescripcion(Long idEmpresaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Empresa  empresaTemp=null;

			for(Empresa empresaAux:empresasForeignKey) {
				if(empresaAux.getId()!=null && empresaAux.getId().equals(idEmpresaSeleccionado)) {
					empresaTemp=empresaAux;
					break;
				}
			}


			sDescripcion=EmpresaConstantesFunciones.getEmpresaDescripcion(empresaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualEmpresaForeignKeyGenerico(Long idEmpresaSeleccionado,JComboBox jComboBoxid_empresaGuiaRemisionGenerico)throws Exception
	{
		try
		{
			Empresa  empresaTemp=null;

			for(Empresa empresaAux:empresasForeignKey) {
				if(empresaAux.getId()!=null && empresaAux.getId().equals(idEmpresaSeleccionado)) {
					empresaTemp=empresaAux;
					break;
				}
			}

			if(empresaTemp!=null) {
				jComboBoxid_empresaGuiaRemisionGenerico.setSelectedItem(empresaTemp);
			} else {
				if(jComboBoxid_empresaGuiaRemisionGenerico!=null && jComboBoxid_empresaGuiaRemisionGenerico.getItemCount()>0) {
					jComboBoxid_empresaGuiaRemisionGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualSucursalForeignKey(Long idSucursalSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Sucursal  sucursalTemp=null;

			for(Sucursal sucursalAux:sucursalsForeignKey) {
				if(sucursalAux.getId()!=null && sucursalAux.getId().equals(idSucursalSeleccionado)) {
					sucursalTemp=sucursalAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(sucursalTemp!=null) {

					if(this.guiaremision!=null) {
						this.guiaremision.setSucursal(sucursalTemp);
					}

					if(this.jInternalFrameDetalleFormGuiaRemision!=null) {
						this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_sucursalGuiaRemision.setSelectedItem(sucursalTemp);
					}
				} else {
					//jComboBoxid_sucursalGuiaRemision.setSelectedItem(sucursalTemp);
					if(this.jInternalFrameDetalleFormGuiaRemision!=null) {
						if(this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_sucursalGuiaRemision.getItemCount()>0) {
							this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_sucursalGuiaRemision.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualSucursalForeignKeyDescripcion(Long idSucursalSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Sucursal  sucursalTemp=null;

			for(Sucursal sucursalAux:sucursalsForeignKey) {
				if(sucursalAux.getId()!=null && sucursalAux.getId().equals(idSucursalSeleccionado)) {
					sucursalTemp=sucursalAux;
					break;
				}
			}


			sDescripcion=SucursalConstantesFunciones.getSucursalDescripcion(sucursalTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualSucursalForeignKeyGenerico(Long idSucursalSeleccionado,JComboBox jComboBoxid_sucursalGuiaRemisionGenerico)throws Exception
	{
		try
		{
			Sucursal  sucursalTemp=null;

			for(Sucursal sucursalAux:sucursalsForeignKey) {
				if(sucursalAux.getId()!=null && sucursalAux.getId().equals(idSucursalSeleccionado)) {
					sucursalTemp=sucursalAux;
					break;
				}
			}

			if(sucursalTemp!=null) {
				jComboBoxid_sucursalGuiaRemisionGenerico.setSelectedItem(sucursalTemp);
			} else {
				if(jComboBoxid_sucursalGuiaRemisionGenerico!=null && jComboBoxid_sucursalGuiaRemisionGenerico.getItemCount()>0) {
					jComboBoxid_sucursalGuiaRemisionGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualEjercicioForeignKey(Long idEjercicioSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Ejercicio  ejercicioTemp=null;

			for(Ejercicio ejercicioAux:ejerciciosForeignKey) {
				if(ejercicioAux.getId()!=null && ejercicioAux.getId().equals(idEjercicioSeleccionado)) {
					ejercicioTemp=ejercicioAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(ejercicioTemp!=null) {

					if(this.guiaremision!=null) {
						this.guiaremision.setEjercicio(ejercicioTemp);
					}

					if(this.jInternalFrameDetalleFormGuiaRemision!=null) {
						this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_ejercicioGuiaRemision.setSelectedItem(ejercicioTemp);
					}
				} else {
					//jComboBoxid_ejercicioGuiaRemision.setSelectedItem(ejercicioTemp);
					if(this.jInternalFrameDetalleFormGuiaRemision!=null) {
						if(this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_ejercicioGuiaRemision.getItemCount()>0) {
							this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_ejercicioGuiaRemision.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualEjercicioForeignKeyDescripcion(Long idEjercicioSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Ejercicio  ejercicioTemp=null;

			for(Ejercicio ejercicioAux:ejerciciosForeignKey) {
				if(ejercicioAux.getId()!=null && ejercicioAux.getId().equals(idEjercicioSeleccionado)) {
					ejercicioTemp=ejercicioAux;
					break;
				}
			}


			sDescripcion=EjercicioConstantesFunciones.getEjercicioDescripcion(ejercicioTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualEjercicioForeignKeyGenerico(Long idEjercicioSeleccionado,JComboBox jComboBoxid_ejercicioGuiaRemisionGenerico)throws Exception
	{
		try
		{
			Ejercicio  ejercicioTemp=null;

			for(Ejercicio ejercicioAux:ejerciciosForeignKey) {
				if(ejercicioAux.getId()!=null && ejercicioAux.getId().equals(idEjercicioSeleccionado)) {
					ejercicioTemp=ejercicioAux;
					break;
				}
			}

			if(ejercicioTemp!=null) {
				jComboBoxid_ejercicioGuiaRemisionGenerico.setSelectedItem(ejercicioTemp);
			} else {
				if(jComboBoxid_ejercicioGuiaRemisionGenerico!=null && jComboBoxid_ejercicioGuiaRemisionGenerico.getItemCount()>0) {
					jComboBoxid_ejercicioGuiaRemisionGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualPeriodoForeignKey(Long idPeriodoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Periodo  periodoTemp=null;

			for(Periodo periodoAux:periodosForeignKey) {
				if(periodoAux.getId()!=null && periodoAux.getId().equals(idPeriodoSeleccionado)) {
					periodoTemp=periodoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(periodoTemp!=null) {

					if(this.guiaremision!=null) {
						this.guiaremision.setPeriodo(periodoTemp);
					}

					if(this.jInternalFrameDetalleFormGuiaRemision!=null) {
						this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_periodoGuiaRemision.setSelectedItem(periodoTemp);
					}
				} else {
					//jComboBoxid_periodoGuiaRemision.setSelectedItem(periodoTemp);
					if(this.jInternalFrameDetalleFormGuiaRemision!=null) {
						if(this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_periodoGuiaRemision.getItemCount()>0) {
							this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_periodoGuiaRemision.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualPeriodoForeignKeyDescripcion(Long idPeriodoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Periodo  periodoTemp=null;

			for(Periodo periodoAux:periodosForeignKey) {
				if(periodoAux.getId()!=null && periodoAux.getId().equals(idPeriodoSeleccionado)) {
					periodoTemp=periodoAux;
					break;
				}
			}


			sDescripcion=PeriodoConstantesFunciones.getPeriodoDescripcion(periodoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualPeriodoForeignKeyGenerico(Long idPeriodoSeleccionado,JComboBox jComboBoxid_periodoGuiaRemisionGenerico)throws Exception
	{
		try
		{
			Periodo  periodoTemp=null;

			for(Periodo periodoAux:periodosForeignKey) {
				if(periodoAux.getId()!=null && periodoAux.getId().equals(idPeriodoSeleccionado)) {
					periodoTemp=periodoAux;
					break;
				}
			}

			if(periodoTemp!=null) {
				jComboBoxid_periodoGuiaRemisionGenerico.setSelectedItem(periodoTemp);
			} else {
				if(jComboBoxid_periodoGuiaRemisionGenerico!=null && jComboBoxid_periodoGuiaRemisionGenerico.getItemCount()>0) {
					jComboBoxid_periodoGuiaRemisionGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualUsuarioForeignKey(Long idUsuarioSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Usuario  usuarioTemp=null;

			for(Usuario usuarioAux:usuariosForeignKey) {
				if(usuarioAux.getId()!=null && usuarioAux.getId().equals(idUsuarioSeleccionado)) {
					usuarioTemp=usuarioAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(usuarioTemp!=null) {

					if(this.guiaremision!=null) {
						this.guiaremision.setUsuario(usuarioTemp);
					}

					if(this.jInternalFrameDetalleFormGuiaRemision!=null) {
						this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_usuarioGuiaRemision.setSelectedItem(usuarioTemp);
					}
				} else {
					//jComboBoxid_usuarioGuiaRemision.setSelectedItem(usuarioTemp);
					if(this.jInternalFrameDetalleFormGuiaRemision!=null) {
						if(this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_usuarioGuiaRemision.getItemCount()>0) {
							this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_usuarioGuiaRemision.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualUsuarioForeignKeyDescripcion(Long idUsuarioSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Usuario  usuarioTemp=null;

			for(Usuario usuarioAux:usuariosForeignKey) {
				if(usuarioAux.getId()!=null && usuarioAux.getId().equals(idUsuarioSeleccionado)) {
					usuarioTemp=usuarioAux;
					break;
				}
			}


			sDescripcion=UsuarioConstantesFunciones.getUsuarioDescripcion(usuarioTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualUsuarioForeignKeyGenerico(Long idUsuarioSeleccionado,JComboBox jComboBoxid_usuarioGuiaRemisionGenerico)throws Exception
	{
		try
		{
			Usuario  usuarioTemp=null;

			for(Usuario usuarioAux:usuariosForeignKey) {
				if(usuarioAux.getId()!=null && usuarioAux.getId().equals(idUsuarioSeleccionado)) {
					usuarioTemp=usuarioAux;
					break;
				}
			}

			if(usuarioTemp!=null) {
				jComboBoxid_usuarioGuiaRemisionGenerico.setSelectedItem(usuarioTemp);
			} else {
				if(jComboBoxid_usuarioGuiaRemisionGenerico!=null && jComboBoxid_usuarioGuiaRemisionGenerico.getItemCount()>0) {
					jComboBoxid_usuarioGuiaRemisionGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualFormatoForeignKey(Long idFormatoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Formato  formatoTemp=null;

			for(Formato formatoAux:formatosForeignKey) {
				if(formatoAux.getId()!=null && formatoAux.getId().equals(idFormatoSeleccionado)) {
					formatoTemp=formatoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(formatoTemp!=null) {

					if(this.guiaremision!=null) {
						this.guiaremision.setFormato(formatoTemp);
					}

					if(this.jInternalFrameDetalleFormGuiaRemision!=null) {
						this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_formatoGuiaRemision.setSelectedItem(formatoTemp);
					}
				} else {
					//jComboBoxid_formatoGuiaRemision.setSelectedItem(formatoTemp);
					if(this.jInternalFrameDetalleFormGuiaRemision!=null) {
						if(this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_formatoGuiaRemision.getItemCount()>0) {
							this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_formatoGuiaRemision.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdFormato") || sFormularioTipoBusqueda.equals("Todos")){
					if(formatoTemp!=null && jComboBoxid_formatoFK_IdFormatoGuiaRemision!=null) {
						jComboBoxid_formatoFK_IdFormatoGuiaRemision.setSelectedItem(formatoTemp);
					} else {
						if(jComboBoxid_formatoFK_IdFormatoGuiaRemision!=null) {
							//jComboBoxid_formatoFK_IdFormatoGuiaRemision.setSelectedItem(formatoTemp);
							if(jComboBoxid_formatoFK_IdFormatoGuiaRemision.getItemCount()>0) {
								jComboBoxid_formatoFK_IdFormatoGuiaRemision.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualFormatoForeignKeyDescripcion(Long idFormatoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Formato  formatoTemp=null;

			for(Formato formatoAux:formatosForeignKey) {
				if(formatoAux.getId()!=null && formatoAux.getId().equals(idFormatoSeleccionado)) {
					formatoTemp=formatoAux;
					break;
				}
			}


			sDescripcion=FormatoConstantesFunciones.getFormatoDescripcion(formatoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualFormatoForeignKeyGenerico(Long idFormatoSeleccionado,JComboBox jComboBoxid_formatoGuiaRemisionGenerico)throws Exception
	{
		try
		{
			Formato  formatoTemp=null;

			for(Formato formatoAux:formatosForeignKey) {
				if(formatoAux.getId()!=null && formatoAux.getId().equals(idFormatoSeleccionado)) {
					formatoTemp=formatoAux;
					break;
				}
			}

			if(formatoTemp!=null) {
				jComboBoxid_formatoGuiaRemisionGenerico.setSelectedItem(formatoTemp);
			} else {
				if(jComboBoxid_formatoGuiaRemisionGenerico!=null && jComboBoxid_formatoGuiaRemisionGenerico.getItemCount()>0) {
					jComboBoxid_formatoGuiaRemisionGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTipoPrecioForeignKey(Long idTipoPrecioSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			TipoPrecio  tipoprecioTemp=null;

			for(TipoPrecio tipoprecioAux:tipopreciosForeignKey) {
				if(tipoprecioAux.getId()!=null && tipoprecioAux.getId().equals(idTipoPrecioSeleccionado)) {
					tipoprecioTemp=tipoprecioAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(tipoprecioTemp!=null) {

					if(this.guiaremision!=null) {
						this.guiaremision.setTipoPrecio(tipoprecioTemp);
					}

					if(this.jInternalFrameDetalleFormGuiaRemision!=null) {
						this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_tipo_precioGuiaRemision.setSelectedItem(tipoprecioTemp);
					}
				} else {
					//jComboBoxid_tipo_precioGuiaRemision.setSelectedItem(tipoprecioTemp);
					if(this.jInternalFrameDetalleFormGuiaRemision!=null) {
						if(this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_tipo_precioGuiaRemision.getItemCount()>0) {
							this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_tipo_precioGuiaRemision.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdTipoPrecio") || sFormularioTipoBusqueda.equals("Todos")){
					if(tipoprecioTemp!=null && jComboBoxid_tipo_precioFK_IdTipoPrecioGuiaRemision!=null) {
						jComboBoxid_tipo_precioFK_IdTipoPrecioGuiaRemision.setSelectedItem(tipoprecioTemp);
					} else {
						if(jComboBoxid_tipo_precioFK_IdTipoPrecioGuiaRemision!=null) {
							//jComboBoxid_tipo_precioFK_IdTipoPrecioGuiaRemision.setSelectedItem(tipoprecioTemp);
							if(jComboBoxid_tipo_precioFK_IdTipoPrecioGuiaRemision.getItemCount()>0) {
								jComboBoxid_tipo_precioFK_IdTipoPrecioGuiaRemision.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTipoPrecioForeignKeyDescripcion(Long idTipoPrecioSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			TipoPrecio  tipoprecioTemp=null;

			for(TipoPrecio tipoprecioAux:tipopreciosForeignKey) {
				if(tipoprecioAux.getId()!=null && tipoprecioAux.getId().equals(idTipoPrecioSeleccionado)) {
					tipoprecioTemp=tipoprecioAux;
					break;
				}
			}


			sDescripcion=TipoPrecioConstantesFunciones.getTipoPrecioDescripcion(tipoprecioTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTipoPrecioForeignKeyGenerico(Long idTipoPrecioSeleccionado,JComboBox jComboBoxid_tipo_precioGuiaRemisionGenerico)throws Exception
	{
		try
		{
			TipoPrecio  tipoprecioTemp=null;

			for(TipoPrecio tipoprecioAux:tipopreciosForeignKey) {
				if(tipoprecioAux.getId()!=null && tipoprecioAux.getId().equals(idTipoPrecioSeleccionado)) {
					tipoprecioTemp=tipoprecioAux;
					break;
				}
			}

			if(tipoprecioTemp!=null) {
				jComboBoxid_tipo_precioGuiaRemisionGenerico.setSelectedItem(tipoprecioTemp);
			} else {
				if(jComboBoxid_tipo_precioGuiaRemisionGenerico!=null && jComboBoxid_tipo_precioGuiaRemisionGenerico.getItemCount()>0) {
					jComboBoxid_tipo_precioGuiaRemisionGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualMonedaForeignKey(Long idMonedaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Moneda  monedaTemp=null;

			for(Moneda monedaAux:monedasForeignKey) {
				if(monedaAux.getId()!=null && monedaAux.getId().equals(idMonedaSeleccionado)) {
					monedaTemp=monedaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(monedaTemp!=null) {

					if(this.guiaremision!=null) {
						this.guiaremision.setMoneda(monedaTemp);
					}

					if(this.jInternalFrameDetalleFormGuiaRemision!=null) {
						this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_monedaGuiaRemision.setSelectedItem(monedaTemp);
					}
				} else {
					//jComboBoxid_monedaGuiaRemision.setSelectedItem(monedaTemp);
					if(this.jInternalFrameDetalleFormGuiaRemision!=null) {
						if(this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_monedaGuiaRemision.getItemCount()>0) {
							this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_monedaGuiaRemision.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualMonedaForeignKeyDescripcion(Long idMonedaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Moneda  monedaTemp=null;

			for(Moneda monedaAux:monedasForeignKey) {
				if(monedaAux.getId()!=null && monedaAux.getId().equals(idMonedaSeleccionado)) {
					monedaTemp=monedaAux;
					break;
				}
			}


			sDescripcion=MonedaConstantesFunciones.getMonedaDescripcion(monedaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualMonedaForeignKeyGenerico(Long idMonedaSeleccionado,JComboBox jComboBoxid_monedaGuiaRemisionGenerico)throws Exception
	{
		try
		{
			Moneda  monedaTemp=null;

			for(Moneda monedaAux:monedasForeignKey) {
				if(monedaAux.getId()!=null && monedaAux.getId().equals(idMonedaSeleccionado)) {
					monedaTemp=monedaAux;
					break;
				}
			}

			if(monedaTemp!=null) {
				jComboBoxid_monedaGuiaRemisionGenerico.setSelectedItem(monedaTemp);
			} else {
				if(jComboBoxid_monedaGuiaRemisionGenerico!=null && jComboBoxid_monedaGuiaRemisionGenerico.getItemCount()>0) {
					jComboBoxid_monedaGuiaRemisionGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualClienteForeignKey(Long idClienteSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Cliente  clienteTemp=null;

			for(Cliente clienteAux:clientesForeignKey) {
				if(clienteAux.getId()!=null && clienteAux.getId().equals(idClienteSeleccionado)) {
					clienteTemp=clienteAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(clienteTemp!=null) {

					if(this.guiaremision!=null) {
						this.guiaremision.setCliente(clienteTemp);
					}

					if(this.jInternalFrameDetalleFormGuiaRemision!=null) {
						this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_clienteGuiaRemision.setSelectedItem(clienteTemp);
					}
				} else {
					//jComboBoxid_clienteGuiaRemision.setSelectedItem(clienteTemp);
					if(this.jInternalFrameDetalleFormGuiaRemision!=null) {
						if(this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_clienteGuiaRemision.getItemCount()>0) {
							this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_clienteGuiaRemision.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdCliente") || sFormularioTipoBusqueda.equals("Todos")){
					if(clienteTemp!=null && jComboBoxid_clienteFK_IdClienteGuiaRemision!=null) {
						jComboBoxid_clienteFK_IdClienteGuiaRemision.setSelectedItem(clienteTemp);
					} else {
						if(jComboBoxid_clienteFK_IdClienteGuiaRemision!=null) {
							//jComboBoxid_clienteFK_IdClienteGuiaRemision.setSelectedItem(clienteTemp);
							if(jComboBoxid_clienteFK_IdClienteGuiaRemision.getItemCount()>0) {
								jComboBoxid_clienteFK_IdClienteGuiaRemision.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualClienteForeignKeyDescripcion(Long idClienteSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Cliente  clienteTemp=null;

			for(Cliente clienteAux:clientesForeignKey) {
				if(clienteAux.getId()!=null && clienteAux.getId().equals(idClienteSeleccionado)) {
					clienteTemp=clienteAux;
					break;
				}
			}


			sDescripcion=ClienteConstantesFunciones.getClienteDescripcion(clienteTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualClienteForeignKeyGenerico(Long idClienteSeleccionado,JComboBox jComboBoxid_clienteGuiaRemisionGenerico)throws Exception
	{
		try
		{
			Cliente  clienteTemp=null;

			for(Cliente clienteAux:clientesForeignKey) {
				if(clienteAux.getId()!=null && clienteAux.getId().equals(idClienteSeleccionado)) {
					clienteTemp=clienteAux;
					break;
				}
			}

			if(clienteTemp!=null) {
				jComboBoxid_clienteGuiaRemisionGenerico.setSelectedItem(clienteTemp);
			} else {
				if(jComboBoxid_clienteGuiaRemisionGenerico!=null && jComboBoxid_clienteGuiaRemisionGenerico.getItemCount()>0) {
					jComboBoxid_clienteGuiaRemisionGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualVendedorForeignKey(Long idVendedorSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Vendedor  vendedorTemp=null;

			for(Vendedor vendedorAux:vendedorsForeignKey) {
				if(vendedorAux.getId()!=null && vendedorAux.getId().equals(idVendedorSeleccionado)) {
					vendedorTemp=vendedorAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(vendedorTemp!=null) {

					if(this.guiaremision!=null) {
						this.guiaremision.setVendedor(vendedorTemp);
					}

					if(this.jInternalFrameDetalleFormGuiaRemision!=null) {
						this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_vendedorGuiaRemision.setSelectedItem(vendedorTemp);
					}
				} else {
					//jComboBoxid_vendedorGuiaRemision.setSelectedItem(vendedorTemp);
					if(this.jInternalFrameDetalleFormGuiaRemision!=null) {
						if(this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_vendedorGuiaRemision.getItemCount()>0) {
							this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_vendedorGuiaRemision.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdVendedor") || sFormularioTipoBusqueda.equals("Todos")){
					if(vendedorTemp!=null && jComboBoxid_vendedorFK_IdVendedorGuiaRemision!=null) {
						jComboBoxid_vendedorFK_IdVendedorGuiaRemision.setSelectedItem(vendedorTemp);
					} else {
						if(jComboBoxid_vendedorFK_IdVendedorGuiaRemision!=null) {
							//jComboBoxid_vendedorFK_IdVendedorGuiaRemision.setSelectedItem(vendedorTemp);
							if(jComboBoxid_vendedorFK_IdVendedorGuiaRemision.getItemCount()>0) {
								jComboBoxid_vendedorFK_IdVendedorGuiaRemision.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualVendedorForeignKeyDescripcion(Long idVendedorSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Vendedor  vendedorTemp=null;

			for(Vendedor vendedorAux:vendedorsForeignKey) {
				if(vendedorAux.getId()!=null && vendedorAux.getId().equals(idVendedorSeleccionado)) {
					vendedorTemp=vendedorAux;
					break;
				}
			}


			sDescripcion=VendedorConstantesFunciones.getVendedorDescripcion(vendedorTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualVendedorForeignKeyGenerico(Long idVendedorSeleccionado,JComboBox jComboBoxid_vendedorGuiaRemisionGenerico)throws Exception
	{
		try
		{
			Vendedor  vendedorTemp=null;

			for(Vendedor vendedorAux:vendedorsForeignKey) {
				if(vendedorAux.getId()!=null && vendedorAux.getId().equals(idVendedorSeleccionado)) {
					vendedorTemp=vendedorAux;
					break;
				}
			}

			if(vendedorTemp!=null) {
				jComboBoxid_vendedorGuiaRemisionGenerico.setSelectedItem(vendedorTemp);
			} else {
				if(jComboBoxid_vendedorGuiaRemisionGenerico!=null && jComboBoxid_vendedorGuiaRemisionGenerico.getItemCount()>0) {
					jComboBoxid_vendedorGuiaRemisionGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualFacturaForeignKey(Long idFacturaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Factura  facturaTemp=null;

			for(Factura facturaAux:facturasForeignKey) {
				if(facturaAux.getId()!=null && facturaAux.getId().equals(idFacturaSeleccionado)) {
					facturaTemp=facturaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(facturaTemp!=null) {

					if(this.guiaremision!=null) {
						this.guiaremision.setFactura(facturaTemp);
					}

					if(this.jInternalFrameDetalleFormGuiaRemision!=null) {
						this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_facturaGuiaRemision.setSelectedItem(facturaTemp);
					}
				} else {
					//jComboBoxid_facturaGuiaRemision.setSelectedItem(facturaTemp);
					if(this.jInternalFrameDetalleFormGuiaRemision!=null) {
						if(this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_facturaGuiaRemision.getItemCount()>0) {
							this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_facturaGuiaRemision.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdFactura") || sFormularioTipoBusqueda.equals("Todos")){
					if(facturaTemp!=null && jComboBoxid_facturaFK_IdFacturaGuiaRemision!=null) {
						jComboBoxid_facturaFK_IdFacturaGuiaRemision.setSelectedItem(facturaTemp);
					} else {
						if(jComboBoxid_facturaFK_IdFacturaGuiaRemision!=null) {
							//jComboBoxid_facturaFK_IdFacturaGuiaRemision.setSelectedItem(facturaTemp);
							if(jComboBoxid_facturaFK_IdFacturaGuiaRemision.getItemCount()>0) {
								jComboBoxid_facturaFK_IdFacturaGuiaRemision.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualFacturaForeignKeyDescripcion(Long idFacturaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Factura  facturaTemp=null;

			for(Factura facturaAux:facturasForeignKey) {
				if(facturaAux.getId()!=null && facturaAux.getId().equals(idFacturaSeleccionado)) {
					facturaTemp=facturaAux;
					break;
				}
			}


			sDescripcion=FacturaConstantesFunciones.getFacturaDescripcion(facturaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualFacturaForeignKeyGenerico(Long idFacturaSeleccionado,JComboBox jComboBoxid_facturaGuiaRemisionGenerico)throws Exception
	{
		try
		{
			Factura  facturaTemp=null;

			for(Factura facturaAux:facturasForeignKey) {
				if(facturaAux.getId()!=null && facturaAux.getId().equals(idFacturaSeleccionado)) {
					facturaTemp=facturaAux;
					break;
				}
			}

			if(facturaTemp!=null) {
				jComboBoxid_facturaGuiaRemisionGenerico.setSelectedItem(facturaTemp);
			} else {
				if(jComboBoxid_facturaGuiaRemisionGenerico!=null && jComboBoxid_facturaGuiaRemisionGenerico.getItemCount()>0) {
					jComboBoxid_facturaGuiaRemisionGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTransportistaForeignKey(Long idTransportistaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Transportista  transportistaTemp=null;

			for(Transportista transportistaAux:transportistasForeignKey) {
				if(transportistaAux.getId()!=null && transportistaAux.getId().equals(idTransportistaSeleccionado)) {
					transportistaTemp=transportistaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(transportistaTemp!=null) {

					if(this.guiaremision!=null) {
						this.guiaremision.setTransportista(transportistaTemp);
					}

					if(this.jInternalFrameDetalleFormGuiaRemision!=null) {
						this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_transportistaGuiaRemision.setSelectedItem(transportistaTemp);
					}
				} else {
					//jComboBoxid_transportistaGuiaRemision.setSelectedItem(transportistaTemp);
					if(this.jInternalFrameDetalleFormGuiaRemision!=null) {
						if(this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_transportistaGuiaRemision.getItemCount()>0) {
							this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_transportistaGuiaRemision.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdTransportista") || sFormularioTipoBusqueda.equals("Todos")){
					if(transportistaTemp!=null && jComboBoxid_transportistaFK_IdTransportistaGuiaRemision!=null) {
						jComboBoxid_transportistaFK_IdTransportistaGuiaRemision.setSelectedItem(transportistaTemp);
					} else {
						if(jComboBoxid_transportistaFK_IdTransportistaGuiaRemision!=null) {
							//jComboBoxid_transportistaFK_IdTransportistaGuiaRemision.setSelectedItem(transportistaTemp);
							if(jComboBoxid_transportistaFK_IdTransportistaGuiaRemision.getItemCount()>0) {
								jComboBoxid_transportistaFK_IdTransportistaGuiaRemision.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTransportistaForeignKeyDescripcion(Long idTransportistaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Transportista  transportistaTemp=null;

			for(Transportista transportistaAux:transportistasForeignKey) {
				if(transportistaAux.getId()!=null && transportistaAux.getId().equals(idTransportistaSeleccionado)) {
					transportistaTemp=transportistaAux;
					break;
				}
			}


			sDescripcion=TransportistaConstantesFunciones.getTransportistaDescripcion(transportistaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTransportistaForeignKeyGenerico(Long idTransportistaSeleccionado,JComboBox jComboBoxid_transportistaGuiaRemisionGenerico)throws Exception
	{
		try
		{
			Transportista  transportistaTemp=null;

			for(Transportista transportistaAux:transportistasForeignKey) {
				if(transportistaAux.getId()!=null && transportistaAux.getId().equals(idTransportistaSeleccionado)) {
					transportistaTemp=transportistaAux;
					break;
				}
			}

			if(transportistaTemp!=null) {
				jComboBoxid_transportistaGuiaRemisionGenerico.setSelectedItem(transportistaTemp);
			} else {
				if(jComboBoxid_transportistaGuiaRemisionGenerico!=null && jComboBoxid_transportistaGuiaRemisionGenerico.getItemCount()>0) {
					jComboBoxid_transportistaGuiaRemisionGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualConsultorForeignKey(Long idConsultorSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Consultor  consultorTemp=null;

			for(Consultor consultorAux:consultorsForeignKey) {
				if(consultorAux.getId()!=null && consultorAux.getId().equals(idConsultorSeleccionado)) {
					consultorTemp=consultorAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(consultorTemp!=null) {

					if(this.guiaremision!=null) {
						this.guiaremision.setConsultor(consultorTemp);
					}

					if(this.jInternalFrameDetalleFormGuiaRemision!=null) {
						this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_consultorGuiaRemision.setSelectedItem(consultorTemp);
					}
				} else {
					//jComboBoxid_consultorGuiaRemision.setSelectedItem(consultorTemp);
					if(this.jInternalFrameDetalleFormGuiaRemision!=null) {
						if(this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_consultorGuiaRemision.getItemCount()>0) {
							this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_consultorGuiaRemision.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdConsultor") || sFormularioTipoBusqueda.equals("Todos")){
					if(consultorTemp!=null && jComboBoxid_consultorFK_IdConsultorGuiaRemision!=null) {
						jComboBoxid_consultorFK_IdConsultorGuiaRemision.setSelectedItem(consultorTemp);
					} else {
						if(jComboBoxid_consultorFK_IdConsultorGuiaRemision!=null) {
							//jComboBoxid_consultorFK_IdConsultorGuiaRemision.setSelectedItem(consultorTemp);
							if(jComboBoxid_consultorFK_IdConsultorGuiaRemision.getItemCount()>0) {
								jComboBoxid_consultorFK_IdConsultorGuiaRemision.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualConsultorForeignKeyDescripcion(Long idConsultorSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Consultor  consultorTemp=null;

			for(Consultor consultorAux:consultorsForeignKey) {
				if(consultorAux.getId()!=null && consultorAux.getId().equals(idConsultorSeleccionado)) {
					consultorTemp=consultorAux;
					break;
				}
			}


			sDescripcion=ConsultorConstantesFunciones.getConsultorDescripcion(consultorTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualConsultorForeignKeyGenerico(Long idConsultorSeleccionado,JComboBox jComboBoxid_consultorGuiaRemisionGenerico)throws Exception
	{
		try
		{
			Consultor  consultorTemp=null;

			for(Consultor consultorAux:consultorsForeignKey) {
				if(consultorAux.getId()!=null && consultorAux.getId().equals(idConsultorSeleccionado)) {
					consultorTemp=consultorAux;
					break;
				}
			}

			if(consultorTemp!=null) {
				jComboBoxid_consultorGuiaRemisionGenerico.setSelectedItem(consultorTemp);
			} else {
				if(jComboBoxid_consultorGuiaRemisionGenerico!=null && jComboBoxid_consultorGuiaRemisionGenerico.getItemCount()>0) {
					jComboBoxid_consultorGuiaRemisionGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTransporteForeignKey(Long idTransporteSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Transporte  transporteTemp=null;

			for(Transporte transporteAux:transportesForeignKey) {
				if(transporteAux.getId()!=null && transporteAux.getId().equals(idTransporteSeleccionado)) {
					transporteTemp=transporteAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(transporteTemp!=null) {

					if(this.guiaremision!=null) {
						this.guiaremision.setTransporte(transporteTemp);
					}

					if(this.jInternalFrameDetalleFormGuiaRemision!=null) {
						this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_transporteGuiaRemision.setSelectedItem(transporteTemp);
					}
				} else {
					//jComboBoxid_transporteGuiaRemision.setSelectedItem(transporteTemp);
					if(this.jInternalFrameDetalleFormGuiaRemision!=null) {
						if(this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_transporteGuiaRemision.getItemCount()>0) {
							this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_transporteGuiaRemision.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdTransporte") || sFormularioTipoBusqueda.equals("Todos")){
					if(transporteTemp!=null && jComboBoxid_transporteFK_IdTransporteGuiaRemision!=null) {
						jComboBoxid_transporteFK_IdTransporteGuiaRemision.setSelectedItem(transporteTemp);
					} else {
						if(jComboBoxid_transporteFK_IdTransporteGuiaRemision!=null) {
							//jComboBoxid_transporteFK_IdTransporteGuiaRemision.setSelectedItem(transporteTemp);
							if(jComboBoxid_transporteFK_IdTransporteGuiaRemision.getItemCount()>0) {
								jComboBoxid_transporteFK_IdTransporteGuiaRemision.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTransporteForeignKeyDescripcion(Long idTransporteSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Transporte  transporteTemp=null;

			for(Transporte transporteAux:transportesForeignKey) {
				if(transporteAux.getId()!=null && transporteAux.getId().equals(idTransporteSeleccionado)) {
					transporteTemp=transporteAux;
					break;
				}
			}


			sDescripcion=TransporteConstantesFunciones.getTransporteDescripcion(transporteTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTransporteForeignKeyGenerico(Long idTransporteSeleccionado,JComboBox jComboBoxid_transporteGuiaRemisionGenerico)throws Exception
	{
		try
		{
			Transporte  transporteTemp=null;

			for(Transporte transporteAux:transportesForeignKey) {
				if(transporteAux.getId()!=null && transporteAux.getId().equals(idTransporteSeleccionado)) {
					transporteTemp=transporteAux;
					break;
				}
			}

			if(transporteTemp!=null) {
				jComboBoxid_transporteGuiaRemisionGenerico.setSelectedItem(transporteTemp);
			} else {
				if(jComboBoxid_transporteGuiaRemisionGenerico!=null && jComboBoxid_transporteGuiaRemisionGenerico.getItemCount()>0) {
					jComboBoxid_transporteGuiaRemisionGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualSubClienteForeignKey(Long idSubClienteSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			SubCliente  subclienteTemp=null;

			for(SubCliente subclienteAux:subclientesForeignKey) {
				if(subclienteAux.getId()!=null && subclienteAux.getId().equals(idSubClienteSeleccionado)) {
					subclienteTemp=subclienteAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(subclienteTemp!=null) {

					if(this.guiaremision!=null) {
						this.guiaremision.setSubCliente(subclienteTemp);
					}

					if(this.jInternalFrameDetalleFormGuiaRemision!=null) {
						this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_sub_clienteGuiaRemision.setSelectedItem(subclienteTemp);
					}
				} else {
					//jComboBoxid_sub_clienteGuiaRemision.setSelectedItem(subclienteTemp);
					if(this.jInternalFrameDetalleFormGuiaRemision!=null) {
						if(this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_sub_clienteGuiaRemision.getItemCount()>0) {
							this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_sub_clienteGuiaRemision.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdSubCliente") || sFormularioTipoBusqueda.equals("Todos")){
					if(subclienteTemp!=null && jComboBoxid_sub_clienteFK_IdSubClienteGuiaRemision!=null) {
						jComboBoxid_sub_clienteFK_IdSubClienteGuiaRemision.setSelectedItem(subclienteTemp);
					} else {
						if(jComboBoxid_sub_clienteFK_IdSubClienteGuiaRemision!=null) {
							//jComboBoxid_sub_clienteFK_IdSubClienteGuiaRemision.setSelectedItem(subclienteTemp);
							if(jComboBoxid_sub_clienteFK_IdSubClienteGuiaRemision.getItemCount()>0) {
								jComboBoxid_sub_clienteFK_IdSubClienteGuiaRemision.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualSubClienteForeignKeyDescripcion(Long idSubClienteSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			SubCliente  subclienteTemp=null;

			for(SubCliente subclienteAux:subclientesForeignKey) {
				if(subclienteAux.getId()!=null && subclienteAux.getId().equals(idSubClienteSeleccionado)) {
					subclienteTemp=subclienteAux;
					break;
				}
			}


			sDescripcion=SubClienteConstantesFunciones.getSubClienteDescripcion(subclienteTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualSubClienteForeignKeyGenerico(Long idSubClienteSeleccionado,JComboBox jComboBoxid_sub_clienteGuiaRemisionGenerico)throws Exception
	{
		try
		{
			SubCliente  subclienteTemp=null;

			for(SubCliente subclienteAux:subclientesForeignKey) {
				if(subclienteAux.getId()!=null && subclienteAux.getId().equals(idSubClienteSeleccionado)) {
					subclienteTemp=subclienteAux;
					break;
				}
			}

			if(subclienteTemp!=null) {
				jComboBoxid_sub_clienteGuiaRemisionGenerico.setSelectedItem(subclienteTemp);
			} else {
				if(jComboBoxid_sub_clienteGuiaRemisionGenerico!=null && jComboBoxid_sub_clienteGuiaRemisionGenerico.getItemCount()>0) {
					jComboBoxid_sub_clienteGuiaRemisionGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualEmpleadoForeignKey(Long idEmpleadoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Empleado  empleadoTemp=null;

			for(Empleado empleadoAux:empleadosForeignKey) {
				if(empleadoAux.getId()!=null && empleadoAux.getId().equals(idEmpleadoSeleccionado)) {
					empleadoTemp=empleadoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(empleadoTemp!=null) {

					if(this.guiaremision!=null) {
						this.guiaremision.setEmpleado(empleadoTemp);
					}

					if(this.jInternalFrameDetalleFormGuiaRemision!=null) {
						this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_empleadoGuiaRemision.setSelectedItem(empleadoTemp);
					}
				} else {
					//jComboBoxid_empleadoGuiaRemision.setSelectedItem(empleadoTemp);
					if(this.jInternalFrameDetalleFormGuiaRemision!=null) {
						if(this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_empleadoGuiaRemision.getItemCount()>0) {
							this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_empleadoGuiaRemision.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdEmpleado") || sFormularioTipoBusqueda.equals("Todos")){
					if(empleadoTemp!=null && jComboBoxid_empleadoFK_IdEmpleadoGuiaRemision!=null) {
						jComboBoxid_empleadoFK_IdEmpleadoGuiaRemision.setSelectedItem(empleadoTemp);
					} else {
						if(jComboBoxid_empleadoFK_IdEmpleadoGuiaRemision!=null) {
							//jComboBoxid_empleadoFK_IdEmpleadoGuiaRemision.setSelectedItem(empleadoTemp);
							if(jComboBoxid_empleadoFK_IdEmpleadoGuiaRemision.getItemCount()>0) {
								jComboBoxid_empleadoFK_IdEmpleadoGuiaRemision.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualEmpleadoForeignKeyDescripcion(Long idEmpleadoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Empleado  empleadoTemp=null;

			for(Empleado empleadoAux:empleadosForeignKey) {
				if(empleadoAux.getId()!=null && empleadoAux.getId().equals(idEmpleadoSeleccionado)) {
					empleadoTemp=empleadoAux;
					break;
				}
			}


			sDescripcion=EmpleadoConstantesFunciones.getEmpleadoDescripcion(empleadoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualEmpleadoForeignKeyGenerico(Long idEmpleadoSeleccionado,JComboBox jComboBoxid_empleadoGuiaRemisionGenerico)throws Exception
	{
		try
		{
			Empleado  empleadoTemp=null;

			for(Empleado empleadoAux:empleadosForeignKey) {
				if(empleadoAux.getId()!=null && empleadoAux.getId().equals(idEmpleadoSeleccionado)) {
					empleadoTemp=empleadoAux;
					break;
				}
			}

			if(empleadoTemp!=null) {
				jComboBoxid_empleadoGuiaRemisionGenerico.setSelectedItem(empleadoTemp);
			} else {
				if(jComboBoxid_empleadoGuiaRemisionGenerico!=null && jComboBoxid_empleadoGuiaRemisionGenerico.getItemCount()>0) {
					jComboBoxid_empleadoGuiaRemisionGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualCiudadOrigenForeignKey(Long idCiudadOrigenSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Ciudad  ciudadorigenTemp=null;

			for(Ciudad ciudadorigenAux:ciudadorigensForeignKey) {
				if(ciudadorigenAux.getId()!=null && ciudadorigenAux.getId().equals(idCiudadOrigenSeleccionado)) {
					ciudadorigenTemp=ciudadorigenAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(ciudadorigenTemp!=null) {

					if(this.guiaremision!=null) {
						this.guiaremision.setCiudadOrigen(ciudadorigenTemp);
					}

					if(this.jInternalFrameDetalleFormGuiaRemision!=null) {
						this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_ciudad_origenGuiaRemision.setSelectedItem(ciudadorigenTemp);
					}
				} else {
					//jComboBoxid_ciudad_origenGuiaRemision.setSelectedItem(ciudadorigenTemp);
					if(this.jInternalFrameDetalleFormGuiaRemision!=null) {
						if(this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_ciudad_origenGuiaRemision.getItemCount()>0) {
							this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_ciudad_origenGuiaRemision.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdCiudadOrigen") || sFormularioTipoBusqueda.equals("Todos")){
					if(ciudadorigenTemp!=null && jComboBoxid_ciudad_origenFK_IdCiudadOrigenGuiaRemision!=null) {
						jComboBoxid_ciudad_origenFK_IdCiudadOrigenGuiaRemision.setSelectedItem(ciudadorigenTemp);
					} else {
						if(jComboBoxid_ciudad_origenFK_IdCiudadOrigenGuiaRemision!=null) {
							//jComboBoxid_ciudad_origenFK_IdCiudadOrigenGuiaRemision.setSelectedItem(ciudadorigenTemp);
							if(jComboBoxid_ciudad_origenFK_IdCiudadOrigenGuiaRemision.getItemCount()>0) {
								jComboBoxid_ciudad_origenFK_IdCiudadOrigenGuiaRemision.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualCiudadOrigenForeignKeyDescripcion(Long idCiudadOrigenSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Ciudad  ciudadorigenTemp=null;

			for(Ciudad ciudadorigenAux:ciudadorigensForeignKey) {
				if(ciudadorigenAux.getId()!=null && ciudadorigenAux.getId().equals(idCiudadOrigenSeleccionado)) {
					ciudadorigenTemp=ciudadorigenAux;
					break;
				}
			}


			sDescripcion=CiudadConstantesFunciones.getCiudadDescripcion(ciudadorigenTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualCiudadOrigenForeignKeyGenerico(Long idCiudadOrigenSeleccionado,JComboBox jComboBoxid_ciudad_origenGuiaRemisionGenerico)throws Exception
	{
		try
		{
			Ciudad  ciudadorigenTemp=null;

			for(Ciudad ciudadorigenAux:ciudadorigensForeignKey) {
				if(ciudadorigenAux.getId()!=null && ciudadorigenAux.getId().equals(idCiudadOrigenSeleccionado)) {
					ciudadorigenTemp=ciudadorigenAux;
					break;
				}
			}

			if(ciudadorigenTemp!=null) {
				jComboBoxid_ciudad_origenGuiaRemisionGenerico.setSelectedItem(ciudadorigenTemp);
			} else {
				if(jComboBoxid_ciudad_origenGuiaRemisionGenerico!=null && jComboBoxid_ciudad_origenGuiaRemisionGenerico.getItemCount()>0) {
					jComboBoxid_ciudad_origenGuiaRemisionGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualCiudadDestinoForeignKey(Long idCiudadDestinoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Ciudad  ciudaddestinoTemp=null;

			for(Ciudad ciudaddestinoAux:ciudaddestinosForeignKey) {
				if(ciudaddestinoAux.getId()!=null && ciudaddestinoAux.getId().equals(idCiudadDestinoSeleccionado)) {
					ciudaddestinoTemp=ciudaddestinoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(ciudaddestinoTemp!=null) {

					if(this.guiaremision!=null) {
						this.guiaremision.setCiudadDestino(ciudaddestinoTemp);
					}

					if(this.jInternalFrameDetalleFormGuiaRemision!=null) {
						this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_ciudad_destinoGuiaRemision.setSelectedItem(ciudaddestinoTemp);
					}
				} else {
					//jComboBoxid_ciudad_destinoGuiaRemision.setSelectedItem(ciudaddestinoTemp);
					if(this.jInternalFrameDetalleFormGuiaRemision!=null) {
						if(this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_ciudad_destinoGuiaRemision.getItemCount()>0) {
							this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_ciudad_destinoGuiaRemision.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdCiudadDestino") || sFormularioTipoBusqueda.equals("Todos")){
					if(ciudaddestinoTemp!=null && jComboBoxid_ciudad_destinoFK_IdCiudadDestinoGuiaRemision!=null) {
						jComboBoxid_ciudad_destinoFK_IdCiudadDestinoGuiaRemision.setSelectedItem(ciudaddestinoTemp);
					} else {
						if(jComboBoxid_ciudad_destinoFK_IdCiudadDestinoGuiaRemision!=null) {
							//jComboBoxid_ciudad_destinoFK_IdCiudadDestinoGuiaRemision.setSelectedItem(ciudaddestinoTemp);
							if(jComboBoxid_ciudad_destinoFK_IdCiudadDestinoGuiaRemision.getItemCount()>0) {
								jComboBoxid_ciudad_destinoFK_IdCiudadDestinoGuiaRemision.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualCiudadDestinoForeignKeyDescripcion(Long idCiudadDestinoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Ciudad  ciudaddestinoTemp=null;

			for(Ciudad ciudaddestinoAux:ciudaddestinosForeignKey) {
				if(ciudaddestinoAux.getId()!=null && ciudaddestinoAux.getId().equals(idCiudadDestinoSeleccionado)) {
					ciudaddestinoTemp=ciudaddestinoAux;
					break;
				}
			}


			sDescripcion=CiudadConstantesFunciones.getCiudadDescripcion(ciudaddestinoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualCiudadDestinoForeignKeyGenerico(Long idCiudadDestinoSeleccionado,JComboBox jComboBoxid_ciudad_destinoGuiaRemisionGenerico)throws Exception
	{
		try
		{
			Ciudad  ciudaddestinoTemp=null;

			for(Ciudad ciudaddestinoAux:ciudaddestinosForeignKey) {
				if(ciudaddestinoAux.getId()!=null && ciudaddestinoAux.getId().equals(idCiudadDestinoSeleccionado)) {
					ciudaddestinoTemp=ciudaddestinoAux;
					break;
				}
			}

			if(ciudaddestinoTemp!=null) {
				jComboBoxid_ciudad_destinoGuiaRemisionGenerico.setSelectedItem(ciudaddestinoTemp);
			} else {
				if(jComboBoxid_ciudad_destinoGuiaRemisionGenerico!=null && jComboBoxid_ciudad_destinoGuiaRemisionGenerico.getItemCount()>0) {
					jComboBoxid_ciudad_destinoGuiaRemisionGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTipoLlamadaForeignKey(Long idTipoLlamadaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			TipoLlamada  tipollamadaTemp=null;

			for(TipoLlamada tipollamadaAux:tipollamadasForeignKey) {
				if(tipollamadaAux.getId()!=null && tipollamadaAux.getId().equals(idTipoLlamadaSeleccionado)) {
					tipollamadaTemp=tipollamadaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(tipollamadaTemp!=null) {

					if(this.guiaremision!=null) {
						this.guiaremision.setTipoLlamada(tipollamadaTemp);
					}

					if(this.jInternalFrameDetalleFormGuiaRemision!=null) {
						this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_tipo_llamadaGuiaRemision.setSelectedItem(tipollamadaTemp);
					}
				} else {
					//jComboBoxid_tipo_llamadaGuiaRemision.setSelectedItem(tipollamadaTemp);
					if(this.jInternalFrameDetalleFormGuiaRemision!=null) {
						if(this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_tipo_llamadaGuiaRemision.getItemCount()>0) {
							this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_tipo_llamadaGuiaRemision.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdTipoLlamada") || sFormularioTipoBusqueda.equals("Todos")){
					if(tipollamadaTemp!=null && jComboBoxid_tipo_llamadaFK_IdTipoLlamadaGuiaRemision!=null) {
						jComboBoxid_tipo_llamadaFK_IdTipoLlamadaGuiaRemision.setSelectedItem(tipollamadaTemp);
					} else {
						if(jComboBoxid_tipo_llamadaFK_IdTipoLlamadaGuiaRemision!=null) {
							//jComboBoxid_tipo_llamadaFK_IdTipoLlamadaGuiaRemision.setSelectedItem(tipollamadaTemp);
							if(jComboBoxid_tipo_llamadaFK_IdTipoLlamadaGuiaRemision.getItemCount()>0) {
								jComboBoxid_tipo_llamadaFK_IdTipoLlamadaGuiaRemision.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTipoLlamadaForeignKeyDescripcion(Long idTipoLlamadaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			TipoLlamada  tipollamadaTemp=null;

			for(TipoLlamada tipollamadaAux:tipollamadasForeignKey) {
				if(tipollamadaAux.getId()!=null && tipollamadaAux.getId().equals(idTipoLlamadaSeleccionado)) {
					tipollamadaTemp=tipollamadaAux;
					break;
				}
			}


			sDescripcion=TipoLlamadaConstantesFunciones.getTipoLlamadaDescripcion(tipollamadaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTipoLlamadaForeignKeyGenerico(Long idTipoLlamadaSeleccionado,JComboBox jComboBoxid_tipo_llamadaGuiaRemisionGenerico)throws Exception
	{
		try
		{
			TipoLlamada  tipollamadaTemp=null;

			for(TipoLlamada tipollamadaAux:tipollamadasForeignKey) {
				if(tipollamadaAux.getId()!=null && tipollamadaAux.getId().equals(idTipoLlamadaSeleccionado)) {
					tipollamadaTemp=tipollamadaAux;
					break;
				}
			}

			if(tipollamadaTemp!=null) {
				jComboBoxid_tipo_llamadaGuiaRemisionGenerico.setSelectedItem(tipollamadaTemp);
			} else {
				if(jComboBoxid_tipo_llamadaGuiaRemisionGenerico!=null && jComboBoxid_tipo_llamadaGuiaRemisionGenerico.getItemCount()>0) {
					jComboBoxid_tipo_llamadaGuiaRemisionGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTipoCambioForeignKey(Long idTipoCambioSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			TipoCambio  tipocambioTemp=null;

			for(TipoCambio tipocambioAux:tipocambiosForeignKey) {
				if(tipocambioAux.getId()!=null && tipocambioAux.getId().equals(idTipoCambioSeleccionado)) {
					tipocambioTemp=tipocambioAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(tipocambioTemp!=null) {

					if(this.guiaremision!=null) {
						this.guiaremision.setTipoCambio(tipocambioTemp);
					}

					if(this.jInternalFrameDetalleFormGuiaRemision!=null) {
						this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_tipo_cambioGuiaRemision.setSelectedItem(tipocambioTemp);
					}
				} else {
					//jComboBoxid_tipo_cambioGuiaRemision.setSelectedItem(tipocambioTemp);
					if(this.jInternalFrameDetalleFormGuiaRemision!=null) {
						if(this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_tipo_cambioGuiaRemision.getItemCount()>0) {
							this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_tipo_cambioGuiaRemision.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdTipoCambio") || sFormularioTipoBusqueda.equals("Todos")){
					if(tipocambioTemp!=null && jComboBoxid_tipo_cambioFK_IdTipoCambioGuiaRemision!=null) {
						jComboBoxid_tipo_cambioFK_IdTipoCambioGuiaRemision.setSelectedItem(tipocambioTemp);
					} else {
						if(jComboBoxid_tipo_cambioFK_IdTipoCambioGuiaRemision!=null) {
							//jComboBoxid_tipo_cambioFK_IdTipoCambioGuiaRemision.setSelectedItem(tipocambioTemp);
							if(jComboBoxid_tipo_cambioFK_IdTipoCambioGuiaRemision.getItemCount()>0) {
								jComboBoxid_tipo_cambioFK_IdTipoCambioGuiaRemision.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTipoCambioForeignKeyDescripcion(Long idTipoCambioSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			TipoCambio  tipocambioTemp=null;

			for(TipoCambio tipocambioAux:tipocambiosForeignKey) {
				if(tipocambioAux.getId()!=null && tipocambioAux.getId().equals(idTipoCambioSeleccionado)) {
					tipocambioTemp=tipocambioAux;
					break;
				}
			}


			sDescripcion=TipoCambioConstantesFunciones.getTipoCambioDescripcion(tipocambioTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTipoCambioForeignKeyGenerico(Long idTipoCambioSeleccionado,JComboBox jComboBoxid_tipo_cambioGuiaRemisionGenerico)throws Exception
	{
		try
		{
			TipoCambio  tipocambioTemp=null;

			for(TipoCambio tipocambioAux:tipocambiosForeignKey) {
				if(tipocambioAux.getId()!=null && tipocambioAux.getId().equals(idTipoCambioSeleccionado)) {
					tipocambioTemp=tipocambioAux;
					break;
				}
			}

			if(tipocambioTemp!=null) {
				jComboBoxid_tipo_cambioGuiaRemisionGenerico.setSelectedItem(tipocambioTemp);
			} else {
				if(jComboBoxid_tipo_cambioGuiaRemisionGenerico!=null && jComboBoxid_tipo_cambioGuiaRemisionGenerico.getItemCount()>0) {
					jComboBoxid_tipo_cambioGuiaRemisionGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	
	
	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarEmpresaForeignKey(GuiaRemision guiaremision,JComboBox jComboBoxid_empresaGuiaRemisionGenerico)throws Exception
	{
		try
		{
			Empresa  empresaAux=new Empresa();

			if(jComboBoxid_empresaGuiaRemisionGenerico==null) {
				empresaAux=(Empresa)this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_empresaGuiaRemision.getSelectedItem();
			} else {
				empresaAux=(Empresa)jComboBoxid_empresaGuiaRemisionGenerico.getSelectedItem();
			}

			if(empresaAux!=null && empresaAux.getId()!=null) {
				guiaremision.setid_empresa(empresaAux.getId());
				guiaremision.setempresa_descripcion(GuiaRemisionConstantesFunciones.getEmpresaDescripcion(empresaAux));
				guiaremision.setEmpresa(empresaAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarSucursalForeignKey(GuiaRemision guiaremision,JComboBox jComboBoxid_sucursalGuiaRemisionGenerico)throws Exception
	{
		try
		{
			Sucursal  sucursalAux=new Sucursal();

			if(jComboBoxid_sucursalGuiaRemisionGenerico==null) {
				sucursalAux=(Sucursal)this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_sucursalGuiaRemision.getSelectedItem();
			} else {
				sucursalAux=(Sucursal)jComboBoxid_sucursalGuiaRemisionGenerico.getSelectedItem();
			}

			if(sucursalAux!=null && sucursalAux.getId()!=null) {
				guiaremision.setid_sucursal(sucursalAux.getId());
				guiaremision.setsucursal_descripcion(GuiaRemisionConstantesFunciones.getSucursalDescripcion(sucursalAux));
				guiaremision.setSucursal(sucursalAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarEjercicioForeignKey(GuiaRemision guiaremision,JComboBox jComboBoxid_ejercicioGuiaRemisionGenerico)throws Exception
	{
		try
		{
			Ejercicio  ejercicioAux=new Ejercicio();

			if(jComboBoxid_ejercicioGuiaRemisionGenerico==null) {
				ejercicioAux=(Ejercicio)this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_ejercicioGuiaRemision.getSelectedItem();
			} else {
				ejercicioAux=(Ejercicio)jComboBoxid_ejercicioGuiaRemisionGenerico.getSelectedItem();
			}

			if(ejercicioAux!=null && ejercicioAux.getId()!=null) {
				guiaremision.setid_ejercicio(ejercicioAux.getId());
				guiaremision.setejercicio_descripcion(GuiaRemisionConstantesFunciones.getEjercicioDescripcion(ejercicioAux));
				guiaremision.setEjercicio(ejercicioAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarPeriodoForeignKey(GuiaRemision guiaremision,JComboBox jComboBoxid_periodoGuiaRemisionGenerico)throws Exception
	{
		try
		{
			Periodo  periodoAux=new Periodo();

			if(jComboBoxid_periodoGuiaRemisionGenerico==null) {
				periodoAux=(Periodo)this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_periodoGuiaRemision.getSelectedItem();
			} else {
				periodoAux=(Periodo)jComboBoxid_periodoGuiaRemisionGenerico.getSelectedItem();
			}

			if(periodoAux!=null && periodoAux.getId()!=null) {
				if(periodoAux.getid_estado_periodo().equals(0L)) {
					throw new Exception("Periodo INACTIVO, NO PUEDE GUARDAR LA INFORMACION CONSULTE CON EL ADMINISTRADOR");
				}

				guiaremision.setid_periodo(periodoAux.getId());
				guiaremision.setperiodo_descripcion(GuiaRemisionConstantesFunciones.getPeriodoDescripcion(periodoAux));
				guiaremision.setPeriodo(periodoAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarUsuarioForeignKey(GuiaRemision guiaremision,JComboBox jComboBoxid_usuarioGuiaRemisionGenerico)throws Exception
	{
		try
		{
			Usuario  usuarioAux=new Usuario();

			if(jComboBoxid_usuarioGuiaRemisionGenerico==null) {
				usuarioAux=(Usuario)this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_usuarioGuiaRemision.getSelectedItem();
			} else {
				usuarioAux=(Usuario)jComboBoxid_usuarioGuiaRemisionGenerico.getSelectedItem();
			}

			if(usuarioAux!=null && usuarioAux.getId()!=null) {
				guiaremision.setid_usuario(usuarioAux.getId());
				guiaremision.setusuario_descripcion(GuiaRemisionConstantesFunciones.getUsuarioDescripcion(usuarioAux));
				guiaremision.setUsuario(usuarioAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarFormatoForeignKey(GuiaRemision guiaremision,JComboBox jComboBoxid_formatoGuiaRemisionGenerico)throws Exception
	{
		try
		{
			Formato  formatoAux=new Formato();

			if(jComboBoxid_formatoGuiaRemisionGenerico==null) {
				formatoAux=(Formato)this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_formatoGuiaRemision.getSelectedItem();
			} else {
				formatoAux=(Formato)jComboBoxid_formatoGuiaRemisionGenerico.getSelectedItem();
			}

			if(formatoAux!=null) {
				guiaremision.setid_formato(formatoAux.getId());
				guiaremision.setformato_descripcion(GuiaRemisionConstantesFunciones.getFormatoDescripcion(formatoAux));
				guiaremision.setFormato(formatoAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTipoPrecioForeignKey(GuiaRemision guiaremision,JComboBox jComboBoxid_tipo_precioGuiaRemisionGenerico)throws Exception
	{
		try
		{
			TipoPrecio  tipoprecioAux=new TipoPrecio();

			if(jComboBoxid_tipo_precioGuiaRemisionGenerico==null) {
				tipoprecioAux=(TipoPrecio)this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_tipo_precioGuiaRemision.getSelectedItem();
			} else {
				tipoprecioAux=(TipoPrecio)jComboBoxid_tipo_precioGuiaRemisionGenerico.getSelectedItem();
			}

			if(tipoprecioAux!=null && tipoprecioAux.getId()!=null) {
				guiaremision.setid_tipo_precio(tipoprecioAux.getId());
				guiaremision.settipoprecio_descripcion(GuiaRemisionConstantesFunciones.getTipoPrecioDescripcion(tipoprecioAux));
				guiaremision.setTipoPrecio(tipoprecioAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarMonedaForeignKey(GuiaRemision guiaremision,JComboBox jComboBoxid_monedaGuiaRemisionGenerico)throws Exception
	{
		try
		{
			Moneda  monedaAux=new Moneda();

			if(jComboBoxid_monedaGuiaRemisionGenerico==null) {
				monedaAux=(Moneda)this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_monedaGuiaRemision.getSelectedItem();
			} else {
				monedaAux=(Moneda)jComboBoxid_monedaGuiaRemisionGenerico.getSelectedItem();
			}

			if(monedaAux!=null && monedaAux.getId()!=null) {
				guiaremision.setid_moneda(monedaAux.getId());
				guiaremision.setmoneda_descripcion(GuiaRemisionConstantesFunciones.getMonedaDescripcion(monedaAux));
				guiaremision.setMoneda(monedaAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarClienteForeignKey(GuiaRemision guiaremision,JComboBox jComboBoxid_clienteGuiaRemisionGenerico)throws Exception
	{
		try
		{
			Cliente  clienteAux=new Cliente();

			if(jComboBoxid_clienteGuiaRemisionGenerico==null) {
				clienteAux=(Cliente)this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_clienteGuiaRemision.getSelectedItem();
			} else {
				clienteAux=(Cliente)jComboBoxid_clienteGuiaRemisionGenerico.getSelectedItem();
			}

			if(clienteAux!=null && clienteAux.getId()!=null) {
				guiaremision.setid_cliente(clienteAux.getId());
				guiaremision.setcliente_descripcion(GuiaRemisionConstantesFunciones.getClienteDescripcion(clienteAux));
				guiaremision.setCliente(clienteAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarVendedorForeignKey(GuiaRemision guiaremision,JComboBox jComboBoxid_vendedorGuiaRemisionGenerico)throws Exception
	{
		try
		{
			Vendedor  vendedorAux=new Vendedor();

			if(jComboBoxid_vendedorGuiaRemisionGenerico==null) {
				vendedorAux=(Vendedor)this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_vendedorGuiaRemision.getSelectedItem();
			} else {
				vendedorAux=(Vendedor)jComboBoxid_vendedorGuiaRemisionGenerico.getSelectedItem();
			}

			if(vendedorAux!=null) {
				guiaremision.setid_vendedor(vendedorAux.getId());
				guiaremision.setvendedor_descripcion(GuiaRemisionConstantesFunciones.getVendedorDescripcion(vendedorAux));
				guiaremision.setVendedor(vendedorAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarFacturaForeignKey(GuiaRemision guiaremision,JComboBox jComboBoxid_facturaGuiaRemisionGenerico)throws Exception
	{
		try
		{
			Factura  facturaAux=new Factura();

			if(jComboBoxid_facturaGuiaRemisionGenerico==null) {
				facturaAux=(Factura)this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_facturaGuiaRemision.getSelectedItem();
			} else {
				facturaAux=(Factura)jComboBoxid_facturaGuiaRemisionGenerico.getSelectedItem();
			}

			if(facturaAux!=null) {
				guiaremision.setid_factura(facturaAux.getId());
				guiaremision.setfactura_descripcion(GuiaRemisionConstantesFunciones.getFacturaDescripcion(facturaAux));
				guiaremision.setFactura(facturaAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTransportistaForeignKey(GuiaRemision guiaremision,JComboBox jComboBoxid_transportistaGuiaRemisionGenerico)throws Exception
	{
		try
		{
			Transportista  transportistaAux=new Transportista();

			if(jComboBoxid_transportistaGuiaRemisionGenerico==null) {
				transportistaAux=(Transportista)this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_transportistaGuiaRemision.getSelectedItem();
			} else {
				transportistaAux=(Transportista)jComboBoxid_transportistaGuiaRemisionGenerico.getSelectedItem();
			}

			if(transportistaAux!=null) {
				guiaremision.setid_transportista(transportistaAux.getId());
				guiaremision.settransportista_descripcion(GuiaRemisionConstantesFunciones.getTransportistaDescripcion(transportistaAux));
				guiaremision.setTransportista(transportistaAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarConsultorForeignKey(GuiaRemision guiaremision,JComboBox jComboBoxid_consultorGuiaRemisionGenerico)throws Exception
	{
		try
		{
			Consultor  consultorAux=new Consultor();

			if(jComboBoxid_consultorGuiaRemisionGenerico==null) {
				consultorAux=(Consultor)this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_consultorGuiaRemision.getSelectedItem();
			} else {
				consultorAux=(Consultor)jComboBoxid_consultorGuiaRemisionGenerico.getSelectedItem();
			}

			if(consultorAux!=null && consultorAux.getId()!=null) {
				guiaremision.setid_consultor(consultorAux.getId());
				guiaremision.setconsultor_descripcion(GuiaRemisionConstantesFunciones.getConsultorDescripcion(consultorAux));
				guiaremision.setConsultor(consultorAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTransporteForeignKey(GuiaRemision guiaremision,JComboBox jComboBoxid_transporteGuiaRemisionGenerico)throws Exception
	{
		try
		{
			Transporte  transporteAux=new Transporte();

			if(jComboBoxid_transporteGuiaRemisionGenerico==null) {
				transporteAux=(Transporte)this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_transporteGuiaRemision.getSelectedItem();
			} else {
				transporteAux=(Transporte)jComboBoxid_transporteGuiaRemisionGenerico.getSelectedItem();
			}

			if(transporteAux!=null && transporteAux.getId()!=null) {
				guiaremision.setid_transporte(transporteAux.getId());
				guiaremision.settransporte_descripcion(GuiaRemisionConstantesFunciones.getTransporteDescripcion(transporteAux));
				guiaremision.setTransporte(transporteAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarSubClienteForeignKey(GuiaRemision guiaremision,JComboBox jComboBoxid_sub_clienteGuiaRemisionGenerico)throws Exception
	{
		try
		{
			SubCliente  subclienteAux=new SubCliente();

			if(jComboBoxid_sub_clienteGuiaRemisionGenerico==null) {
				subclienteAux=(SubCliente)this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_sub_clienteGuiaRemision.getSelectedItem();
			} else {
				subclienteAux=(SubCliente)jComboBoxid_sub_clienteGuiaRemisionGenerico.getSelectedItem();
			}

			if(subclienteAux!=null && subclienteAux.getId()!=null) {
				guiaremision.setid_sub_cliente(subclienteAux.getId());
				guiaremision.setsubcliente_descripcion(GuiaRemisionConstantesFunciones.getSubClienteDescripcion(subclienteAux));
				guiaremision.setSubCliente(subclienteAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarEmpleadoForeignKey(GuiaRemision guiaremision,JComboBox jComboBoxid_empleadoGuiaRemisionGenerico)throws Exception
	{
		try
		{
			Empleado  empleadoAux=new Empleado();

			if(jComboBoxid_empleadoGuiaRemisionGenerico==null) {
				empleadoAux=(Empleado)this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_empleadoGuiaRemision.getSelectedItem();
			} else {
				empleadoAux=(Empleado)jComboBoxid_empleadoGuiaRemisionGenerico.getSelectedItem();
			}

			if(empleadoAux!=null && empleadoAux.getId()!=null) {
				guiaremision.setid_empleado(empleadoAux.getId());
				guiaremision.setempleado_descripcion(GuiaRemisionConstantesFunciones.getEmpleadoDescripcion(empleadoAux));
				guiaremision.setEmpleado(empleadoAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarCiudadOrigenForeignKey(GuiaRemision guiaremision,JComboBox jComboBoxid_ciudad_origenGuiaRemisionGenerico)throws Exception
	{
		try
		{
			Ciudad  ciudadAux=new Ciudad();

			if(jComboBoxid_ciudad_origenGuiaRemisionGenerico==null) {
				ciudadAux=(Ciudad)this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_ciudad_origenGuiaRemision.getSelectedItem();
			} else {
				ciudadAux=(Ciudad)jComboBoxid_ciudad_origenGuiaRemisionGenerico.getSelectedItem();
			}

			if(ciudadAux!=null) {
				guiaremision.setid_ciudad_origen(ciudadAux.getId());
				guiaremision.setciudadorigen_descripcion(GuiaRemisionConstantesFunciones.getCiudadOrigenDescripcion(ciudadAux));
				guiaremision.setCiudadOrigen(ciudadAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarCiudadDestinoForeignKey(GuiaRemision guiaremision,JComboBox jComboBoxid_ciudad_destinoGuiaRemisionGenerico)throws Exception
	{
		try
		{
			Ciudad  ciudadAux=new Ciudad();

			if(jComboBoxid_ciudad_destinoGuiaRemisionGenerico==null) {
				ciudadAux=(Ciudad)this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_ciudad_destinoGuiaRemision.getSelectedItem();
			} else {
				ciudadAux=(Ciudad)jComboBoxid_ciudad_destinoGuiaRemisionGenerico.getSelectedItem();
			}

			if(ciudadAux!=null) {
				guiaremision.setid_ciudad_destino(ciudadAux.getId());
				guiaremision.setciudaddestino_descripcion(GuiaRemisionConstantesFunciones.getCiudadDestinoDescripcion(ciudadAux));
				guiaremision.setCiudadDestino(ciudadAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTipoLlamadaForeignKey(GuiaRemision guiaremision,JComboBox jComboBoxid_tipo_llamadaGuiaRemisionGenerico)throws Exception
	{
		try
		{
			TipoLlamada  tipollamadaAux=new TipoLlamada();

			if(jComboBoxid_tipo_llamadaGuiaRemisionGenerico==null) {
				tipollamadaAux=(TipoLlamada)this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_tipo_llamadaGuiaRemision.getSelectedItem();
			} else {
				tipollamadaAux=(TipoLlamada)jComboBoxid_tipo_llamadaGuiaRemisionGenerico.getSelectedItem();
			}

			if(tipollamadaAux!=null && tipollamadaAux.getId()!=null) {
				guiaremision.setid_tipo_llamada(tipollamadaAux.getId());
				guiaremision.settipollamada_descripcion(GuiaRemisionConstantesFunciones.getTipoLlamadaDescripcion(tipollamadaAux));
				guiaremision.setTipoLlamada(tipollamadaAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTipoCambioForeignKey(GuiaRemision guiaremision,JComboBox jComboBoxid_tipo_cambioGuiaRemisionGenerico)throws Exception
	{
		try
		{
			TipoCambio  tipocambioAux=new TipoCambio();

			if(jComboBoxid_tipo_cambioGuiaRemisionGenerico==null) {
				tipocambioAux=(TipoCambio)this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_tipo_cambioGuiaRemision.getSelectedItem();
			} else {
				tipocambioAux=(TipoCambio)jComboBoxid_tipo_cambioGuiaRemisionGenerico.getSelectedItem();
			}

			if(tipocambioAux!=null) {
				guiaremision.setid_tipo_cambio(tipocambioAux.getId());
				guiaremision.settipocambio_descripcion(GuiaRemisionConstantesFunciones.getTipoCambioDescripcion(tipocambioAux));
				guiaremision.setTipoCambio(tipocambioAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	
	


		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameEmpresasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingEmpresa=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!GuiaRemisionJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormGuiaRemision!=null) { 
							this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_empresaGuiaRemision.removeAllItems();

							for(Empresa empresa:this.empresasForeignKey) {
								this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_empresaGuiaRemision.addItem(empresa);
							}
						}
					}

					if(this.jInternalFrameDetalleFormGuiaRemision!=null) { 
					}

					if(!GuiaRemisionJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameSucursalsForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingSucursal=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!GuiaRemisionJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormGuiaRemision!=null) { 
							this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_sucursalGuiaRemision.removeAllItems();

							for(Sucursal sucursal:this.sucursalsForeignKey) {
								this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_sucursalGuiaRemision.addItem(sucursal);
							}
						}
					}

					if(this.jInternalFrameDetalleFormGuiaRemision!=null) { 
					}

					if(!GuiaRemisionJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameEjerciciosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingEjercicio=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!GuiaRemisionJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormGuiaRemision!=null) { 
							this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_ejercicioGuiaRemision.removeAllItems();

							for(Ejercicio ejercicio:this.ejerciciosForeignKey) {
								this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_ejercicioGuiaRemision.addItem(ejercicio);
							}
						}
					}

					if(this.jInternalFrameDetalleFormGuiaRemision!=null) { 
					}

					if(!GuiaRemisionJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFramePeriodosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingPeriodo=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!GuiaRemisionJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormGuiaRemision!=null) { 
							this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_periodoGuiaRemision.removeAllItems();

							for(Periodo periodo:this.periodosForeignKey) {
								this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_periodoGuiaRemision.addItem(periodo);
							}
						}
					}

					if(this.jInternalFrameDetalleFormGuiaRemision!=null) { 
					}

					if(!GuiaRemisionJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameUsuariosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingUsuario=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!GuiaRemisionJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormGuiaRemision!=null) { 
							this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_usuarioGuiaRemision.removeAllItems();

							for(Usuario usuario:this.usuariosForeignKey) {
								this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_usuarioGuiaRemision.addItem(usuario);
							}
						}
					}

					if(this.jInternalFrameDetalleFormGuiaRemision!=null) { 
					}

					if(!GuiaRemisionJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameFormatosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingFormato=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!GuiaRemisionJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormGuiaRemision!=null) { 
							this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_formatoGuiaRemision.removeAllItems();

							for(Formato formato:this.formatosForeignKey) {
								this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_formatoGuiaRemision.addItem(formato);
							}
						}
					}

					if(this.jInternalFrameDetalleFormGuiaRemision!=null) { 
					}

					if(!GuiaRemisionJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdFormato") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!GuiaRemisionJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_formatoFK_IdFormatoGuiaRemision.removeAllItems();

							for(Formato formato:this.formatosForeignKey) {
								this.jComboBoxid_formatoFK_IdFormatoGuiaRemision.addItem(formato);
							}
						}

						if(!GuiaRemisionJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTipoPreciosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTipoPrecio=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!GuiaRemisionJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormGuiaRemision!=null) { 
							this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_tipo_precioGuiaRemision.removeAllItems();

							for(TipoPrecio tipoprecio:this.tipopreciosForeignKey) {
								this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_tipo_precioGuiaRemision.addItem(tipoprecio);
							}
						}
					}

					if(this.jInternalFrameDetalleFormGuiaRemision!=null) { 
					}

					if(!GuiaRemisionJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdTipoPrecio") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!GuiaRemisionJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_tipo_precioFK_IdTipoPrecioGuiaRemision.removeAllItems();

							for(TipoPrecio tipoprecio:this.tipopreciosForeignKey) {
								this.jComboBoxid_tipo_precioFK_IdTipoPrecioGuiaRemision.addItem(tipoprecio);
							}
						}

						if(!GuiaRemisionJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameMonedasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingMoneda=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!GuiaRemisionJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormGuiaRemision!=null) { 
							this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_monedaGuiaRemision.removeAllItems();

							for(Moneda moneda:this.monedasForeignKey) {
								this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_monedaGuiaRemision.addItem(moneda);
							}
						}
					}

					if(this.jInternalFrameDetalleFormGuiaRemision!=null) { 
					}

					if(!GuiaRemisionJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameClientesForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingCliente=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!GuiaRemisionJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormGuiaRemision!=null) { 
							this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_clienteGuiaRemision.removeAllItems();

							for(Cliente cliente:this.clientesForeignKey) {
								this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_clienteGuiaRemision.addItem(cliente);
							}
						}
					}

					if(this.jInternalFrameDetalleFormGuiaRemision!=null) { 
					}

					if(!GuiaRemisionJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdCliente") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!GuiaRemisionJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_clienteFK_IdClienteGuiaRemision.removeAllItems();

							for(Cliente cliente:this.clientesForeignKey) {
								this.jComboBoxid_clienteFK_IdClienteGuiaRemision.addItem(cliente);
							}
						}

						if(!GuiaRemisionJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameVendedorsForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingVendedor=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!GuiaRemisionJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormGuiaRemision!=null) { 
							this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_vendedorGuiaRemision.removeAllItems();

							for(Vendedor vendedor:this.vendedorsForeignKey) {
								this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_vendedorGuiaRemision.addItem(vendedor);
							}
						}
					}

					if(this.jInternalFrameDetalleFormGuiaRemision!=null) { 
					}

					if(!GuiaRemisionJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdVendedor") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!GuiaRemisionJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_vendedorFK_IdVendedorGuiaRemision.removeAllItems();

							for(Vendedor vendedor:this.vendedorsForeignKey) {
								this.jComboBoxid_vendedorFK_IdVendedorGuiaRemision.addItem(vendedor);
							}
						}

						if(!GuiaRemisionJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameFacturasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingFactura=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!GuiaRemisionJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormGuiaRemision!=null) { 
							this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_facturaGuiaRemision.removeAllItems();

							for(Factura factura:this.facturasForeignKey) {
								this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_facturaGuiaRemision.addItem(factura);
							}
						}
					}

					if(this.jInternalFrameDetalleFormGuiaRemision!=null) { 
					}

					if(!GuiaRemisionJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdFactura") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!GuiaRemisionJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_facturaFK_IdFacturaGuiaRemision.removeAllItems();

							for(Factura factura:this.facturasForeignKey) {
								this.jComboBoxid_facturaFK_IdFacturaGuiaRemision.addItem(factura);
							}
						}

						if(!GuiaRemisionJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTransportistasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTransportista=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!GuiaRemisionJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormGuiaRemision!=null) { 
							this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_transportistaGuiaRemision.removeAllItems();

							for(Transportista transportista:this.transportistasForeignKey) {
								this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_transportistaGuiaRemision.addItem(transportista);
							}
						}
					}

					if(this.jInternalFrameDetalleFormGuiaRemision!=null) { 
					}

					if(!GuiaRemisionJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdTransportista") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!GuiaRemisionJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_transportistaFK_IdTransportistaGuiaRemision.removeAllItems();

							for(Transportista transportista:this.transportistasForeignKey) {
								this.jComboBoxid_transportistaFK_IdTransportistaGuiaRemision.addItem(transportista);
							}
						}

						if(!GuiaRemisionJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameConsultorsForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingConsultor=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!GuiaRemisionJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormGuiaRemision!=null) { 
							this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_consultorGuiaRemision.removeAllItems();

							for(Consultor consultor:this.consultorsForeignKey) {
								this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_consultorGuiaRemision.addItem(consultor);
							}
						}
					}

					if(this.jInternalFrameDetalleFormGuiaRemision!=null) { 
					}

					if(!GuiaRemisionJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdConsultor") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!GuiaRemisionJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_consultorFK_IdConsultorGuiaRemision.removeAllItems();

							for(Consultor consultor:this.consultorsForeignKey) {
								this.jComboBoxid_consultorFK_IdConsultorGuiaRemision.addItem(consultor);
							}
						}

						if(!GuiaRemisionJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTransportesForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTransporte=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!GuiaRemisionJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormGuiaRemision!=null) { 
							this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_transporteGuiaRemision.removeAllItems();

							for(Transporte transporte:this.transportesForeignKey) {
								this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_transporteGuiaRemision.addItem(transporte);
							}
						}
					}

					if(this.jInternalFrameDetalleFormGuiaRemision!=null) { 
					}

					if(!GuiaRemisionJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdTransporte") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!GuiaRemisionJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_transporteFK_IdTransporteGuiaRemision.removeAllItems();

							for(Transporte transporte:this.transportesForeignKey) {
								this.jComboBoxid_transporteFK_IdTransporteGuiaRemision.addItem(transporte);
							}
						}

						if(!GuiaRemisionJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameSubClientesForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingSubCliente=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!GuiaRemisionJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormGuiaRemision!=null) { 
							this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_sub_clienteGuiaRemision.removeAllItems();

							for(SubCliente subcliente:this.subclientesForeignKey) {
								this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_sub_clienteGuiaRemision.addItem(subcliente);
							}
						}
					}

					if(this.jInternalFrameDetalleFormGuiaRemision!=null) { 
					}

					if(!GuiaRemisionJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdSubCliente") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!GuiaRemisionJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_sub_clienteFK_IdSubClienteGuiaRemision.removeAllItems();

							for(SubCliente subcliente:this.subclientesForeignKey) {
								this.jComboBoxid_sub_clienteFK_IdSubClienteGuiaRemision.addItem(subcliente);
							}
						}

						if(!GuiaRemisionJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameEmpleadosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingEmpleado=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!GuiaRemisionJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormGuiaRemision!=null) { 
							this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_empleadoGuiaRemision.removeAllItems();

							for(Empleado empleado:this.empleadosForeignKey) {
								this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_empleadoGuiaRemision.addItem(empleado);
							}
						}
					}

					if(this.jInternalFrameDetalleFormGuiaRemision!=null) { 
					}

					if(!GuiaRemisionJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdEmpleado") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!GuiaRemisionJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_empleadoFK_IdEmpleadoGuiaRemision.removeAllItems();

							for(Empleado empleado:this.empleadosForeignKey) {
								this.jComboBoxid_empleadoFK_IdEmpleadoGuiaRemision.addItem(empleado);
							}
						}

						if(!GuiaRemisionJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameCiudadOrigensForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingCiudad=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!GuiaRemisionJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormGuiaRemision!=null) { 
							this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_ciudad_origenGuiaRemision.removeAllItems();

							for(Ciudad ciudadorigen:this.ciudadorigensForeignKey) {
								this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_ciudad_origenGuiaRemision.addItem(ciudadorigen);
							}
						}
					}

					if(this.jInternalFrameDetalleFormGuiaRemision!=null) { 
					}

					if(!GuiaRemisionJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdCiudadOrigen") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!GuiaRemisionJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_ciudad_origenFK_IdCiudadOrigenGuiaRemision.removeAllItems();

							for(Ciudad ciudadorigen:this.ciudadorigensForeignKey) {
								this.jComboBoxid_ciudad_origenFK_IdCiudadOrigenGuiaRemision.addItem(ciudadorigen);
							}
						}

						if(!GuiaRemisionJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameCiudadDestinosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingCiudad=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!GuiaRemisionJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormGuiaRemision!=null) { 
							this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_ciudad_destinoGuiaRemision.removeAllItems();

							for(Ciudad ciudaddestino:this.ciudaddestinosForeignKey) {
								this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_ciudad_destinoGuiaRemision.addItem(ciudaddestino);
							}
						}
					}

					if(this.jInternalFrameDetalleFormGuiaRemision!=null) { 
					}

					if(!GuiaRemisionJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdCiudadDestino") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!GuiaRemisionJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_ciudad_destinoFK_IdCiudadDestinoGuiaRemision.removeAllItems();

							for(Ciudad ciudaddestino:this.ciudaddestinosForeignKey) {
								this.jComboBoxid_ciudad_destinoFK_IdCiudadDestinoGuiaRemision.addItem(ciudaddestino);
							}
						}

						if(!GuiaRemisionJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTipoLlamadasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTipoLlamada=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!GuiaRemisionJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormGuiaRemision!=null) { 
							this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_tipo_llamadaGuiaRemision.removeAllItems();

							for(TipoLlamada tipollamada:this.tipollamadasForeignKey) {
								this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_tipo_llamadaGuiaRemision.addItem(tipollamada);
							}
						}
					}

					if(this.jInternalFrameDetalleFormGuiaRemision!=null) { 
					}

					if(!GuiaRemisionJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdTipoLlamada") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!GuiaRemisionJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_tipo_llamadaFK_IdTipoLlamadaGuiaRemision.removeAllItems();

							for(TipoLlamada tipollamada:this.tipollamadasForeignKey) {
								this.jComboBoxid_tipo_llamadaFK_IdTipoLlamadaGuiaRemision.addItem(tipollamada);
							}
						}

						if(!GuiaRemisionJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTipoCambiosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTipoCambio=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!GuiaRemisionJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormGuiaRemision!=null) { 
							this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_tipo_cambioGuiaRemision.removeAllItems();

							for(TipoCambio tipocambio:this.tipocambiosForeignKey) {
								this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_tipo_cambioGuiaRemision.addItem(tipocambio);
							}
						}
					}

					if(this.jInternalFrameDetalleFormGuiaRemision!=null) { 
					}

					if(!GuiaRemisionJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdTipoCambio") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!GuiaRemisionJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_tipo_cambioFK_IdTipoCambioGuiaRemision.removeAllItems();

							for(TipoCambio tipocambio:this.tipocambiosForeignKey) {
								this.jComboBoxid_tipo_cambioFK_IdTipoCambioGuiaRemision.addItem(tipocambio);
							}
						}

						if(!GuiaRemisionJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

	


		public void setSelectedItemCombosFrameEmpresaForeignKey(Empresa empresa,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormGuiaRemision!=null) {
							this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_empresaGuiaRemision.setSelectedItem(empresa);
						}
					} else {
						if(this.jInternalFrameDetalleFormGuiaRemision!=null) {
							this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_empresaGuiaRemision.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameSucursalForeignKey(Sucursal sucursal,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormGuiaRemision!=null) {
							this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_sucursalGuiaRemision.setSelectedItem(sucursal);
						}
					} else {
						if(this.jInternalFrameDetalleFormGuiaRemision!=null) {
							this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_sucursalGuiaRemision.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameEjercicioForeignKey(Ejercicio ejercicio,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormGuiaRemision!=null) {
							this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_ejercicioGuiaRemision.setSelectedItem(ejercicio);
						}
					} else {
						if(this.jInternalFrameDetalleFormGuiaRemision!=null) {
							this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_ejercicioGuiaRemision.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFramePeriodoForeignKey(Periodo periodo,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormGuiaRemision!=null) {
							this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_periodoGuiaRemision.setSelectedItem(periodo);
						}
					} else {
						if(this.jInternalFrameDetalleFormGuiaRemision!=null) {
							this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_periodoGuiaRemision.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameUsuarioForeignKey(Usuario usuario,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormGuiaRemision!=null) {
							this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_usuarioGuiaRemision.setSelectedItem(usuario);
						}
					} else {
						if(this.jInternalFrameDetalleFormGuiaRemision!=null) {
							this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_usuarioGuiaRemision.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameFormatoForeignKey(Formato formato,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormGuiaRemision!=null) {
							this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_formatoGuiaRemision.setSelectedItem(formato);
						}
					} else {
						if(this.jInternalFrameDetalleFormGuiaRemision!=null) {
							this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_formatoGuiaRemision.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_formatoFK_IdFormatoGuiaRemision.setSelectedItem(formato);
						} else {
							this.jComboBoxid_formatoFK_IdFormatoGuiaRemision.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTipoPrecioForeignKey(TipoPrecio tipoprecio,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormGuiaRemision!=null) {
							this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_tipo_precioGuiaRemision.setSelectedItem(tipoprecio);
						}
					} else {
						if(this.jInternalFrameDetalleFormGuiaRemision!=null) {
							this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_tipo_precioGuiaRemision.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_tipo_precioFK_IdTipoPrecioGuiaRemision.setSelectedItem(tipoprecio);
						} else {
							this.jComboBoxid_tipo_precioFK_IdTipoPrecioGuiaRemision.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameMonedaForeignKey(Moneda moneda,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormGuiaRemision!=null) {
							this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_monedaGuiaRemision.setSelectedItem(moneda);
						}
					} else {
						if(this.jInternalFrameDetalleFormGuiaRemision!=null) {
							this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_monedaGuiaRemision.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameClienteForeignKey(Cliente cliente,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormGuiaRemision!=null) {
							this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_clienteGuiaRemision.setSelectedItem(cliente);
						}
					} else {
						if(this.jInternalFrameDetalleFormGuiaRemision!=null) {
							this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_clienteGuiaRemision.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_clienteFK_IdClienteGuiaRemision.setSelectedItem(cliente);
						} else {
							this.jComboBoxid_clienteFK_IdClienteGuiaRemision.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameVendedorForeignKey(Vendedor vendedor,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormGuiaRemision!=null) {
							this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_vendedorGuiaRemision.setSelectedItem(vendedor);
						}
					} else {
						if(this.jInternalFrameDetalleFormGuiaRemision!=null) {
							this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_vendedorGuiaRemision.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_vendedorFK_IdVendedorGuiaRemision.setSelectedItem(vendedor);
						} else {
							this.jComboBoxid_vendedorFK_IdVendedorGuiaRemision.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameFacturaForeignKey(Factura factura,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormGuiaRemision!=null) {
							this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_facturaGuiaRemision.setSelectedItem(factura);
						}
					} else {
						if(this.jInternalFrameDetalleFormGuiaRemision!=null) {
							this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_facturaGuiaRemision.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_facturaFK_IdFacturaGuiaRemision.setSelectedItem(factura);
						} else {
							this.jComboBoxid_facturaFK_IdFacturaGuiaRemision.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTransportistaForeignKey(Transportista transportista,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormGuiaRemision!=null) {
							this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_transportistaGuiaRemision.setSelectedItem(transportista);
						}
					} else {
						if(this.jInternalFrameDetalleFormGuiaRemision!=null) {
							this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_transportistaGuiaRemision.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_transportistaFK_IdTransportistaGuiaRemision.setSelectedItem(transportista);
						} else {
							this.jComboBoxid_transportistaFK_IdTransportistaGuiaRemision.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameConsultorForeignKey(Consultor consultor,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormGuiaRemision!=null) {
							this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_consultorGuiaRemision.setSelectedItem(consultor);
						}
					} else {
						if(this.jInternalFrameDetalleFormGuiaRemision!=null) {
							this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_consultorGuiaRemision.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_consultorFK_IdConsultorGuiaRemision.setSelectedItem(consultor);
						} else {
							this.jComboBoxid_consultorFK_IdConsultorGuiaRemision.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTransporteForeignKey(Transporte transporte,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormGuiaRemision!=null) {
							this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_transporteGuiaRemision.setSelectedItem(transporte);
						}
					} else {
						if(this.jInternalFrameDetalleFormGuiaRemision!=null) {
							this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_transporteGuiaRemision.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_transporteFK_IdTransporteGuiaRemision.setSelectedItem(transporte);
						} else {
							this.jComboBoxid_transporteFK_IdTransporteGuiaRemision.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameSubClienteForeignKey(SubCliente subcliente,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormGuiaRemision!=null) {
							this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_sub_clienteGuiaRemision.setSelectedItem(subcliente);
						}
					} else {
						if(this.jInternalFrameDetalleFormGuiaRemision!=null) {
							this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_sub_clienteGuiaRemision.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_sub_clienteFK_IdSubClienteGuiaRemision.setSelectedItem(subcliente);
						} else {
							this.jComboBoxid_sub_clienteFK_IdSubClienteGuiaRemision.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameEmpleadoForeignKey(Empleado empleado,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormGuiaRemision!=null) {
							this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_empleadoGuiaRemision.setSelectedItem(empleado);
						}
					} else {
						if(this.jInternalFrameDetalleFormGuiaRemision!=null) {
							this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_empleadoGuiaRemision.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_empleadoFK_IdEmpleadoGuiaRemision.setSelectedItem(empleado);
						} else {
							this.jComboBoxid_empleadoFK_IdEmpleadoGuiaRemision.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameCiudadOrigenForeignKey(Ciudad ciudadorigen,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormGuiaRemision!=null) {
							this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_ciudad_origenGuiaRemision.setSelectedItem(ciudadorigen);
						}
					} else {
						if(this.jInternalFrameDetalleFormGuiaRemision!=null) {
							this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_ciudad_origenGuiaRemision.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_ciudad_origenFK_IdCiudadOrigenGuiaRemision.setSelectedItem(ciudadorigen);
						} else {
							this.jComboBoxid_ciudad_origenFK_IdCiudadOrigenGuiaRemision.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameCiudadDestinoForeignKey(Ciudad ciudaddestino,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormGuiaRemision!=null) {
							this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_ciudad_destinoGuiaRemision.setSelectedItem(ciudaddestino);
						}
					} else {
						if(this.jInternalFrameDetalleFormGuiaRemision!=null) {
							this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_ciudad_destinoGuiaRemision.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_ciudad_destinoFK_IdCiudadDestinoGuiaRemision.setSelectedItem(ciudaddestino);
						} else {
							this.jComboBoxid_ciudad_destinoFK_IdCiudadDestinoGuiaRemision.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTipoLlamadaForeignKey(TipoLlamada tipollamada,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormGuiaRemision!=null) {
							this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_tipo_llamadaGuiaRemision.setSelectedItem(tipollamada);
						}
					} else {
						if(this.jInternalFrameDetalleFormGuiaRemision!=null) {
							this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_tipo_llamadaGuiaRemision.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_tipo_llamadaFK_IdTipoLlamadaGuiaRemision.setSelectedItem(tipollamada);
						} else {
							this.jComboBoxid_tipo_llamadaFK_IdTipoLlamadaGuiaRemision.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTipoCambioForeignKey(TipoCambio tipocambio,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormGuiaRemision!=null) {
							this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_tipo_cambioGuiaRemision.setSelectedItem(tipocambio);
						}
					} else {
						if(this.jInternalFrameDetalleFormGuiaRemision!=null) {
							this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_tipo_cambioGuiaRemision.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_tipo_cambioFK_IdTipoCambioGuiaRemision.setSelectedItem(tipocambio);
						} else {
							this.jComboBoxid_tipo_cambioFK_IdTipoCambioGuiaRemision.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

	


	
	public void refrescarForeignKeysDescripcionesGuiaRemision() throws Exception {
		//SI FUNCIONA DEEPLOAD ESTO VA AL ULTIMO
		if(Constantes.ISUSAEJBLOGICLAYER) {
			GuiaRemisionConstantesFunciones.refrescarForeignKeysDescripcionesGuiaRemision(this.guiaremisionLogic.getGuiaRemisions());
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			GuiaRemisionConstantesFunciones.refrescarForeignKeysDescripcionesGuiaRemision(this.guiaremisions);
		}
		
		/*
		ArrayList<Classe> classes=new ArrayList<Classe>();
		
		classes.add(new Classe(Empresa.class));
		classes.add(new Classe(Sucursal.class));
		classes.add(new Classe(Ejercicio.class));
		classes.add(new Classe(Periodo.class));
		classes.add(new Classe(Usuario.class));
		classes.add(new Classe(Formato.class));
		classes.add(new Classe(TipoPrecio.class));
		classes.add(new Classe(Moneda.class));
		classes.add(new Classe(Cliente.class));
		classes.add(new Classe(Vendedor.class));
		classes.add(new Classe(Factura.class));
		classes.add(new Classe(Transportista.class));
		classes.add(new Classe(Consultor.class));
		classes.add(new Classe(Transporte.class));
		classes.add(new Classe(SubCliente.class));
		classes.add(new Classe(Empleado.class));
		classes.add(new Classe(Ciudad.class));
		classes.add(new Classe(TipoLlamada.class));
		classes.add(new Classe(TipoCambio.class));
			
		if(Constantes.ISUSAEJBLOGICLAYER) {
			//USA LOS OBJETOS DE LOGIC DIRECTAMENTE
			//guiaremisionLogic.setGuiaRemisions(this.guiaremisions);
			guiaremisionLogic.deepLoadsWithConnection(false, DeepLoadType.INCLUDE, classes,"");
	
		} else if(Constantes.ISUSAEJBREMOTE) {
		} else if(Constantes.ISUSAEJBHOME) {
		}
		*/				
	}	
	
	
	
	public Integer getiNumeroPaginacion() {
		return iNumeroPaginacion;
	}

	public void setiNumeroPaginacion(Integer iNumeroPaginacion) {
		this.iNumeroPaginacion= iNumeroPaginacion;
	}
	
	public Integer getiNumeroPaginacionPagina() {
		return iNumeroPaginacionPagina;
	}

	public void setiNumeroPaginacionPagina(Integer iNumeroPaginacionPagina) {
		this.iNumeroPaginacionPagina= iNumeroPaginacionPagina;
	}
	
	
	public Boolean getIsSeleccionarTodos() {
		return this.isSeleccionarTodos;
	}

	public void setIsSeleccionarTodos(Boolean isSeleccionarTodos) {
		this.isSeleccionarTodos= isSeleccionarTodos;
	}
	
	public Boolean getEsControlTabla() {
		return this.esControlTabla;
	}

	public void setEsControlTabla(Boolean esControlTabla) {
		this.esControlTabla= esControlTabla;
	}
	
	public Boolean getIsSeleccionados() {
		return this.isSeleccionados;
	}

	public void setIsSeleccionados(Boolean isSeleccionados) {
		this.isSeleccionados= isSeleccionados;
	}
	
	public Boolean getIsPostAccionNuevo() {
		return this.isPostAccionNuevo;
	}

	public void setIsPostAccionNuevo(Boolean isPostAccionNuevo) {
		this.isPostAccionNuevo= isPostAccionNuevo;
	}
	
	public Boolean getIsPostAccionSinCerrar() {
		return this.isPostAccionSinCerrar;
	}

	public void setIsPostAccionSinCerrar(Boolean isPostAccionSinCerrar) {
		this.isPostAccionSinCerrar= isPostAccionSinCerrar;
	}
	
	public Boolean getIsPostAccionSinMensaje() {
		return this.isPostAccionSinMensaje;
	}

	public void setIsPostAccionSinMensaje(Boolean isPostAccionSinMensaje) {
		this.isPostAccionSinMensaje= isPostAccionSinMensaje;
	}
	
	public Boolean getConGraficoReporte() {
		return this.conGraficoReporte;
	}

	public void setConGraficoReporte(Boolean conGraficoReporte) {
		this.conGraficoReporte= conGraficoReporte;
	}
	
	
	public ArrayList<Reporte> gettiposArchivosReportes() {
		return this.tiposArchivosReportes;
	}
	
	public void settiposArchivosReportes(ArrayList<Reporte> tiposArchivosReportes) {
		this.tiposArchivosReportes = tiposArchivosReportes;
	}
	
	//TIPOS ARCHIVOS DINAMICOS
	public ArrayList<Reporte> gettiposArchivosReportesDinamico() {
		return this.tiposArchivosReportesDinamico;
	}
	
	public void settiposArchivosReportesDinamico(ArrayList<Reporte> tiposArchivosReportesDinamico) {
		this.tiposArchivosReportesDinamico = tiposArchivosReportesDinamico;
	}
	
	//TIPOS REPORTES
	public ArrayList<Reporte> gettiposReportes() {
		return this.tiposReportes;
	}
	
	public void settiposReportes(ArrayList<Reporte> tiposReportes) {
		this.tiposReportes = tiposReportes;
	}
	
	//TIPOS REPORTES
	public ArrayList<Reporte> gettiposReportesDinamico() {
		return this.tiposReportesDinamico;
	}
	
	public void settiposReportesDinamico(ArrayList<Reporte> tiposReportesDinamico) {
		this.tiposReportesDinamico = tiposReportesDinamico;
	}
	
	//TIPOS GRAFICOS REPORTES
	public ArrayList<Reporte> gettiposGraficosReportes() {
		return this.tiposGraficosReportes;
	}
	
	public void settiposGraficosReportes(ArrayList<Reporte> tiposGraficosReportes) {
		this.tiposGraficosReportes = tiposGraficosReportes;
	}
	
	public ArrayList<Reporte> gettiposPaginacion() {
		return this.tiposPaginacion;
	}
	
	public void settiposPaginacion(ArrayList<Reporte> tiposPaginacion) {
		this.tiposPaginacion = tiposPaginacion;
	}
	
	public ArrayList<Reporte> gettiposRelaciones() {
		return this.tiposRelaciones;
	}
	
	public void settiposRelaciones(ArrayList<Reporte> tiposRelaciones) {
		this.tiposRelaciones= tiposRelaciones;
	}
	
	public ArrayList<Reporte> gettiposAcciones() {
		return this.tiposAcciones;
	}
	
	public void settiposAcciones(ArrayList<Reporte> tiposAcciones) {
		this.tiposAcciones = tiposAcciones;
	}
	
	public ArrayList<Reporte> gettiposAccionesFormulario() {
		return this.tiposAccionesFormulario;
	}
	
	public void settiposAccionesFormulario(ArrayList<Reporte> tiposAccionesFormulario) {
		this.tiposAccionesFormulario = tiposAccionesFormulario;
	}
	
	public ArrayList<Reporte> gettiposSeleccionar() {
		return this.tiposSeleccionar;
	}
	
	public void settiposSeleccionar(ArrayList<Reporte> tiposSeleccionar) {
		this.tiposSeleccionar = tiposSeleccionar;
	}
	
	public ArrayList<Reporte> gettiposColumnasSelect() {
		return this.tiposColumnasSelect;
	}
	
	public void settiposColumnasSelect(ArrayList<Reporte> tiposColumnasSelect) {
		this.tiposColumnasSelect = tiposColumnasSelect;
	}
		
	public ArrayList<Reporte> gettiposRelacionesSelect() {
		return this.tiposRelacionesSelect;
	}
	
	public void settiposRelacionesSelect(ArrayList<Reporte> tiposRelacionesSelect) {
		this.tiposRelacionesSelect = tiposRelacionesSelect;
	}
	
	public Long getIIdUsuarioSesion() {
		return lIdUsuarioSesion;
	}

	public void setIIdUsuarioSesion(Long lIdUsuarioSesion) {
		this.lIdUsuarioSesion = lIdUsuarioSesion;
	}
	
	
	public List<Accion> getAccions() {
		return this.accions;
	}

	public void setAccions(List<Accion> accions) {
		this.accions = accions;
	}
	
	public List<Accion> getAccionsFormulario() {
		return this.accionsFormulario;
	}

	public void setAccionsFormulario(List<Accion> accionsFormulario) {
		this.accionsFormulario = accionsFormulario;
	}
	
	public String getsAccionMantenimiento() {
		return sAccionMantenimiento;
	}

	public void setsAccionMantenimiento(String sAccionMantenimiento) {
		this.sAccionMantenimiento = sAccionMantenimiento;
	}

	public String getsAccionBusqueda() {
		return sAccionBusqueda;
	}

	public void setsAccionBusqueda(String sAccionBusqueda) {
		this.sAccionBusqueda = sAccionBusqueda;
	}

	public String getsAccionAdicional() {
		return sAccionAdicional;
	}

	public void setsAccionAdicional(String sAccionAdicional) {
		this.sAccionAdicional = sAccionAdicional;
	}

	public String getsUltimaBusqueda() {
		return sUltimaBusqueda;
	}

	public void setsUltimaBusqueda(String sUltimaBusqueda) {
		this.sUltimaBusqueda = sUltimaBusqueda;
	}
	
	public String getsTipoArchivoReporte() {
		return sTipoArchivoReporte;
	}

	public void setsTipoArchivoReporte(String sTipoArchivoReporte) {
		this.sTipoArchivoReporte = sTipoArchivoReporte;
	}
	
	public String getsTipoArchivoReporteDinamico() {
		return sTipoArchivoReporteDinamico;
	}

	public void setsTipoArchivoReporteDinamico(String sTipoArchivoReporteDinamico) {
		this.sTipoArchivoReporteDinamico = sTipoArchivoReporteDinamico;
	}
	
	public String getsTipoReporte() {
		return sTipoReporte;
	}

	public void setsTipoReporte(String sTipoReporte) {
		this.sTipoReporte = sTipoReporte;
	}
	
	public String getsTipoReporteDinamico() {
		return sTipoReporteDinamico;
	}

	public void setsTipoReporteDinamico(String sTipoReporteDinamico) {
		this.sTipoReporteDinamico = sTipoReporteDinamico;
	}
	
	public String getsTipoGraficoReporte() {
		return sTipoGraficoReporte;
	}

	public void setsTipoGraficoReporte(String sTipoGraficoReporte) {
		this.sTipoGraficoReporte = sTipoGraficoReporte;
	}
	
	public String getsTipoPaginacion() {
		return sTipoPaginacion;
	}

	public void setsTipoPaginacion(String sTipoPaginacion) {
		this.sTipoPaginacion = sTipoPaginacion;
	}
	
	public String getsTipoRelacion() {
		return sTipoRelacion;
	}

	public void setsTipoRelacion(String sTipoRelacion) {
		this.sTipoRelacion = sTipoRelacion;
	}
	
	public String getsTipoAccion() {
		return sTipoAccion;
	}

	public void setsTipoAccion(String sTipoAccion) {
		this.sTipoAccion = sTipoAccion;
	}
	
	public String getsTipoAccionFormulario() {
		return sTipoAccionFormulario;
	}

	public void setsTipoAccionFormulario(String sTipoAccionFormulario) {
		this.sTipoAccionFormulario = sTipoAccionFormulario;
	}
	
	public String getsTipoSeleccionar() {
		return sTipoSeleccionar;
	}

	public void setsTipoSeleccionar(String sTipoSeleccionar) {
		this.sTipoSeleccionar = sTipoSeleccionar;
	}
	
	public String getsValorCampoGeneral() {
		return sValorCampoGeneral;
	}

	public void setsValorCampoGeneral(String sValorCampoGeneral) {
		this.sValorCampoGeneral = sValorCampoGeneral;
	}			

	public String getsDetalleReporte() {
		return sDetalleReporte;
	}

	public void setsDetalleReporte(String sDetalleReporte) {
		this.sDetalleReporte = sDetalleReporte;
	}
	
	
	public String getsTipoReporteExtra() {
		return sTipoReporteExtra;
	}

	public void setsTipoReporteExtra(String sTipoReporteExtra) {
		this.sTipoReporteExtra = sTipoReporteExtra;
	}
	
	public Boolean getesReporteDinamico() {
		return esReporteDinamico;
	}	
	
	public void setesReporteDinamico(Boolean esReporteDinamico) {
		this.esReporteDinamico = esReporteDinamico;
	}
	
	public Boolean getesRecargarFks() {
		return esRecargarFks;
	}	
	
	public void setesRecargarFks(Boolean esRecargarFks) {
		this.esRecargarFks = esRecargarFks;
	}
	
	public Boolean getesReporteAccionProceso() {
		return esReporteAccionProceso;
	}	
	
	public void setesReporteAccionProceso(Boolean esReporteAccionProceso) {
		this.esReporteAccionProceso= esReporteAccionProceso;
	}
		
	public GuiaRemisionParameterReturnGeneral getGuiaRemisionParameterGeneral() {
		return this.guiaremisionParameterGeneral;
	}
	
	public void setGuiaRemisionParameterGeneral(GuiaRemisionParameterReturnGeneral guiaremisionParameterGeneral) {
		this.guiaremisionParameterGeneral = guiaremisionParameterGeneral;
	}
	
	public String getsPathReporteDinamico() {
		return sPathReporteDinamico;
	}

	public void setsPathReporteDinamico(String sPathReporteDinamico) {
		this.sPathReporteDinamico = sPathReporteDinamico;
	}
		
	public Boolean getisMostrarNumeroPaginacion() {
		return isMostrarNumeroPaginacion;
	}

	public void setisMostrarNumeroPaginacion(Boolean isMostrarNumeroPaginacion) {
		this.isMostrarNumeroPaginacion = isMostrarNumeroPaginacion;
	}
	
	public Mensaje getMensaje() {
		return mensaje;
	}

	public void setMensaje(Mensaje mensaje) {
		this.mensaje = mensaje;
	}
	
	public Boolean getIsPermisoTodoGuiaRemision() {
		return isPermisoTodoGuiaRemision;
	}

	public void setIsPermisoTodoGuiaRemision(Boolean isPermisoTodoGuiaRemision) {
		this.isPermisoTodoGuiaRemision = isPermisoTodoGuiaRemision;
	}

	public Boolean getIsPermisoNuevoGuiaRemision() {
		return isPermisoNuevoGuiaRemision;
	}

	public void setIsPermisoNuevoGuiaRemision(Boolean isPermisoNuevoGuiaRemision) {
		this.isPermisoNuevoGuiaRemision = isPermisoNuevoGuiaRemision;
	}

	public Boolean getIsPermisoActualizarGuiaRemision() {
		return isPermisoActualizarGuiaRemision;
	}

	public void setIsPermisoActualizarGuiaRemision(Boolean isPermisoActualizarGuiaRemision) {
		this.isPermisoActualizarGuiaRemision = isPermisoActualizarGuiaRemision;
	}

	public Boolean getIsPermisoEliminarGuiaRemision() {
		return isPermisoEliminarGuiaRemision;
	}

	public void setIsPermisoEliminarGuiaRemision(Boolean isPermisoEliminarGuiaRemision) {
		this.isPermisoEliminarGuiaRemision = isPermisoEliminarGuiaRemision;
	}

	public Boolean getIsPermisoGuardarCambiosGuiaRemision() {
		return isPermisoGuardarCambiosGuiaRemision;
	}

	public void setIsPermisoGuardarCambiosGuiaRemision(Boolean isPermisoGuardarCambiosGuiaRemision) {
		this.isPermisoGuardarCambiosGuiaRemision = isPermisoGuardarCambiosGuiaRemision;
	}
	
	public Boolean getIsPermisoConsultaGuiaRemision() {
		return isPermisoConsultaGuiaRemision;
	}

	public void setIsPermisoConsultaGuiaRemision(Boolean isPermisoConsultaGuiaRemision) {
		this.isPermisoConsultaGuiaRemision = isPermisoConsultaGuiaRemision;
	}

	public Boolean getIsPermisoBusquedaGuiaRemision() {
		return isPermisoBusquedaGuiaRemision;
	}

	public void setIsPermisoBusquedaGuiaRemision(Boolean isPermisoBusquedaGuiaRemision) {
		this.isPermisoBusquedaGuiaRemision = isPermisoBusquedaGuiaRemision;
	}

	public Boolean getIsPermisoReporteGuiaRemision() {
		return isPermisoReporteGuiaRemision;
	}

	public void setIsPermisoReporteGuiaRemision(Boolean isPermisoReporteGuiaRemision) {
		this.isPermisoReporteGuiaRemision = isPermisoReporteGuiaRemision;
	}
	
	public Boolean getIsPermisoPaginacionMedioGuiaRemision() {
		return isPermisoPaginacionMedioGuiaRemision;
	}

	public void setIsPermisoPaginacionMedioGuiaRemision(Boolean isPermisoPaginacionMedioGuiaRemision) {
		this.isPermisoPaginacionMedioGuiaRemision = isPermisoPaginacionMedioGuiaRemision;
	}
	
	public Boolean getIsPermisoPaginacionTodoGuiaRemision() {
		return isPermisoPaginacionTodoGuiaRemision;
	}

	public void setIsPermisoPaginacionTodoGuiaRemision(Boolean isPermisoPaginacionTodoGuiaRemision) {
		this.isPermisoPaginacionTodoGuiaRemision = isPermisoPaginacionTodoGuiaRemision;
	}
	
	public Boolean getIsPermisoPaginacionAltoGuiaRemision() {
		return isPermisoPaginacionAltoGuiaRemision;
	}

	public void setIsPermisoPaginacionAltoGuiaRemision(Boolean isPermisoPaginacionAltoGuiaRemision) {
		this.isPermisoPaginacionAltoGuiaRemision = isPermisoPaginacionAltoGuiaRemision;
	}
	
	public Boolean getIsPermisoCopiarGuiaRemision() {
		return isPermisoCopiarGuiaRemision;
	}

	public void setIsPermisoCopiarGuiaRemision(Boolean isPermisoCopiarGuiaRemision) {
		this.isPermisoCopiarGuiaRemision = isPermisoCopiarGuiaRemision;
	}
	
	public Boolean getIsPermisoVerFormGuiaRemision() {
		return isPermisoVerFormGuiaRemision;
	}

	public void setIsPermisoVerFormGuiaRemision(Boolean isPermisoVerFormGuiaRemision) {
		this.isPermisoVerFormGuiaRemision = isPermisoVerFormGuiaRemision;
	}
	
	public Boolean getIsPermisoDuplicarGuiaRemision() {
		return isPermisoDuplicarGuiaRemision;
	}

	public void setIsPermisoDuplicarGuiaRemision(Boolean isPermisoDuplicarGuiaRemision) {
		this.isPermisoDuplicarGuiaRemision = isPermisoDuplicarGuiaRemision;
	}
	
	public Boolean getIsPermisoOrdenGuiaRemision() {
		return isPermisoOrdenGuiaRemision;
	}

	public void setIsPermisoOrdenGuiaRemision(Boolean isPermisoOrdenGuiaRemision) {
		this.isPermisoOrdenGuiaRemision = isPermisoOrdenGuiaRemision;
	}
	
	public String getsVisibilidadTablaBusquedas() {
		return sVisibilidadTablaBusquedas;
	}

	public void setsVisibilidadTablaBusquedas(String sVisibilidadTablaBusquedas) {
		this.sVisibilidadTablaBusquedas = sVisibilidadTablaBusquedas;
	}
	
	public String getsVisibilidadTablaElementos() {
		return sVisibilidadTablaElementos;
	}

	public void setsVisibilidadTablaElementos(String sVisibilidadTablaElementos) {
		this.sVisibilidadTablaElementos = sVisibilidadTablaElementos;
	}

	public String getsVisibilidadTablaAcciones() {
		return sVisibilidadTablaAcciones;
	}

	public void setsVisibilidadTablaAcciones(String sVisibilidadTablaAcciones) {
		this.sVisibilidadTablaAcciones = sVisibilidadTablaAcciones;
	}
	
	public Boolean getIsVisibilidadCeldaNuevoGuiaRemision() {
		return isVisibilidadCeldaNuevoGuiaRemision;
	}

	public void setIsVisibilidadCeldaNuevoGuiaRemision(Boolean isVisibilidadCeldaNuevoGuiaRemision) {
		this.isVisibilidadCeldaNuevoGuiaRemision = isVisibilidadCeldaNuevoGuiaRemision;
	}
	
	public Boolean getIsVisibilidadCeldaDuplicarGuiaRemision() {
		return isVisibilidadCeldaDuplicarGuiaRemision;
	}

	public void setIsVisibilidadCeldaDuplicarGuiaRemision(Boolean isVisibilidadCeldaDuplicarGuiaRemision) {
		this.isVisibilidadCeldaDuplicarGuiaRemision = isVisibilidadCeldaDuplicarGuiaRemision;
	}
	
	public Boolean getIsVisibilidadCeldaCopiarGuiaRemision() {
		return isVisibilidadCeldaCopiarGuiaRemision;
	}

	public void setIsVisibilidadCeldaCopiarGuiaRemision(Boolean isVisibilidadCeldaCopiarGuiaRemision) {
		this.isVisibilidadCeldaCopiarGuiaRemision = isVisibilidadCeldaCopiarGuiaRemision;
	}
	
	public Boolean getIsVisibilidadCeldaVerFormGuiaRemision() {
		return isVisibilidadCeldaVerFormGuiaRemision;
	}

	public void setIsVisibilidadCeldaVerFormGuiaRemision(Boolean isVisibilidadCeldaVerFormGuiaRemision) {
		this.isVisibilidadCeldaVerFormGuiaRemision = isVisibilidadCeldaVerFormGuiaRemision;
	}
	
	public Boolean getIsVisibilidadCeldaOrdenGuiaRemision() {
		return isVisibilidadCeldaOrdenGuiaRemision;
	}

	public void setIsVisibilidadCeldaOrdenGuiaRemision(Boolean isVisibilidadCeldaOrdenGuiaRemision) {
		this.isVisibilidadCeldaOrdenGuiaRemision = isVisibilidadCeldaOrdenGuiaRemision;
	}
	
	public Boolean getIsVisibilidadCeldaNuevoRelacionesGuiaRemision() {
		return isVisibilidadCeldaNuevoRelacionesGuiaRemision;
	}

	public void setIsVisibilidadCeldaNuevoRelacionesGuiaRemision(Boolean isVisibilidadCeldaNuevoRelacionesGuiaRemision) {
		this.isVisibilidadCeldaNuevoRelacionesGuiaRemision = isVisibilidadCeldaNuevoRelacionesGuiaRemision;
	}
	
	public Boolean getIsVisibilidadCeldaModificarGuiaRemision() {
		return isVisibilidadCeldaModificarGuiaRemision;
	}

	public void setIsVisibilidadCeldaModificarGuiaRemision(Boolean isVisibilidadCeldaModificarGuiaRemision) {
		this.isVisibilidadCeldaModificarGuiaRemision = isVisibilidadCeldaModificarGuiaRemision;
	}
	
	public Boolean getIsVisibilidadCeldaActualizarGuiaRemision() {
		return isVisibilidadCeldaActualizarGuiaRemision;
	}

	public void setIsVisibilidadCeldaActualizarGuiaRemision(Boolean isVisibilidadCeldaActualizarGuiaRemision) {
		this.isVisibilidadCeldaActualizarGuiaRemision = isVisibilidadCeldaActualizarGuiaRemision;
	}

	public Boolean getIsVisibilidadCeldaEliminarGuiaRemision() {
		return isVisibilidadCeldaEliminarGuiaRemision;
	}

	public void setIsVisibilidadCeldaEliminarGuiaRemision(Boolean isVisibilidadCeldaEliminarGuiaRemision) {
		this.isVisibilidadCeldaEliminarGuiaRemision = isVisibilidadCeldaEliminarGuiaRemision;
	}

	public Boolean getIsVisibilidadCeldaCancelarGuiaRemision() {
		return isVisibilidadCeldaCancelarGuiaRemision;
	}

	public void setIsVisibilidadCeldaCancelarGuiaRemision(Boolean isVisibilidadCeldaCancelarGuiaRemision) {
		this.isVisibilidadCeldaCancelarGuiaRemision = isVisibilidadCeldaCancelarGuiaRemision;
	}

	public Boolean getIsVisibilidadCeldaGuardarGuiaRemision() {
		return isVisibilidadCeldaGuardarGuiaRemision;
	}

	public void setIsVisibilidadCeldaGuardarGuiaRemision(Boolean isVisibilidadCeldaGuardarGuiaRemision) {
		this.isVisibilidadCeldaGuardarGuiaRemision = isVisibilidadCeldaGuardarGuiaRemision;
	}
	
	public Boolean getIsVisibilidadCeldaGuardarCambiosGuiaRemision() {
		return isVisibilidadCeldaGuardarCambiosGuiaRemision;
	}

	public void setIsVisibilidadCeldaGuardarCambiosGuiaRemision(Boolean isVisibilidadCeldaGuardarCambiosGuiaRemision) {
		this.isVisibilidadCeldaGuardarCambiosGuiaRemision = isVisibilidadCeldaGuardarCambiosGuiaRemision;
	}
		
	public GuiaRemisionSessionBean getguiaremisionSessionBean() {
		return this.guiaremisionSessionBean;
	}
	
	public void setguiaremisionSessionBean(GuiaRemisionSessionBean guiaremisionSessionBean) {
		this.guiaremisionSessionBean=guiaremisionSessionBean;
	}
	
	
	public Boolean getisVisibilidadFK_IdCiudadDestino() {
		return this.isVisibilidadFK_IdCiudadDestino;
	}

	public void setisVisibilidadFK_IdCiudadDestino(Boolean isVisibilidadFK_IdCiudadDestino) {
		this.isVisibilidadFK_IdCiudadDestino=isVisibilidadFK_IdCiudadDestino;
	}

	public Boolean getisVisibilidadFK_IdCiudadOrigen() {
		return this.isVisibilidadFK_IdCiudadOrigen;
	}

	public void setisVisibilidadFK_IdCiudadOrigen(Boolean isVisibilidadFK_IdCiudadOrigen) {
		this.isVisibilidadFK_IdCiudadOrigen=isVisibilidadFK_IdCiudadOrigen;
	}

	public Boolean getisVisibilidadFK_IdCliente() {
		return this.isVisibilidadFK_IdCliente;
	}

	public void setisVisibilidadFK_IdCliente(Boolean isVisibilidadFK_IdCliente) {
		this.isVisibilidadFK_IdCliente=isVisibilidadFK_IdCliente;
	}

	public Boolean getisVisibilidadFK_IdConsultor() {
		return this.isVisibilidadFK_IdConsultor;
	}

	public void setisVisibilidadFK_IdConsultor(Boolean isVisibilidadFK_IdConsultor) {
		this.isVisibilidadFK_IdConsultor=isVisibilidadFK_IdConsultor;
	}

	public Boolean getisVisibilidadFK_IdEjercicio() {
		return this.isVisibilidadFK_IdEjercicio;
	}

	public void setisVisibilidadFK_IdEjercicio(Boolean isVisibilidadFK_IdEjercicio) {
		this.isVisibilidadFK_IdEjercicio=isVisibilidadFK_IdEjercicio;
	}

	public Boolean getisVisibilidadFK_IdEmpleado() {
		return this.isVisibilidadFK_IdEmpleado;
	}

	public void setisVisibilidadFK_IdEmpleado(Boolean isVisibilidadFK_IdEmpleado) {
		this.isVisibilidadFK_IdEmpleado=isVisibilidadFK_IdEmpleado;
	}

	public Boolean getisVisibilidadFK_IdEmpresa() {
		return this.isVisibilidadFK_IdEmpresa;
	}

	public void setisVisibilidadFK_IdEmpresa(Boolean isVisibilidadFK_IdEmpresa) {
		this.isVisibilidadFK_IdEmpresa=isVisibilidadFK_IdEmpresa;
	}

	public Boolean getisVisibilidadFK_IdFactura() {
		return this.isVisibilidadFK_IdFactura;
	}

	public void setisVisibilidadFK_IdFactura(Boolean isVisibilidadFK_IdFactura) {
		this.isVisibilidadFK_IdFactura=isVisibilidadFK_IdFactura;
	}

	public Boolean getisVisibilidadFK_IdFormato() {
		return this.isVisibilidadFK_IdFormato;
	}

	public void setisVisibilidadFK_IdFormato(Boolean isVisibilidadFK_IdFormato) {
		this.isVisibilidadFK_IdFormato=isVisibilidadFK_IdFormato;
	}

	public Boolean getisVisibilidadFK_IdMoneda() {
		return this.isVisibilidadFK_IdMoneda;
	}

	public void setisVisibilidadFK_IdMoneda(Boolean isVisibilidadFK_IdMoneda) {
		this.isVisibilidadFK_IdMoneda=isVisibilidadFK_IdMoneda;
	}

	public Boolean getisVisibilidadFK_IdPeriodo() {
		return this.isVisibilidadFK_IdPeriodo;
	}

	public void setisVisibilidadFK_IdPeriodo(Boolean isVisibilidadFK_IdPeriodo) {
		this.isVisibilidadFK_IdPeriodo=isVisibilidadFK_IdPeriodo;
	}

	public Boolean getisVisibilidadFK_IdSubCliente() {
		return this.isVisibilidadFK_IdSubCliente;
	}

	public void setisVisibilidadFK_IdSubCliente(Boolean isVisibilidadFK_IdSubCliente) {
		this.isVisibilidadFK_IdSubCliente=isVisibilidadFK_IdSubCliente;
	}

	public Boolean getisVisibilidadFK_IdSucursal() {
		return this.isVisibilidadFK_IdSucursal;
	}

	public void setisVisibilidadFK_IdSucursal(Boolean isVisibilidadFK_IdSucursal) {
		this.isVisibilidadFK_IdSucursal=isVisibilidadFK_IdSucursal;
	}

	public Boolean getisVisibilidadFK_IdTipoCambio() {
		return this.isVisibilidadFK_IdTipoCambio;
	}

	public void setisVisibilidadFK_IdTipoCambio(Boolean isVisibilidadFK_IdTipoCambio) {
		this.isVisibilidadFK_IdTipoCambio=isVisibilidadFK_IdTipoCambio;
	}

	public Boolean getisVisibilidadFK_IdTipoLlamada() {
		return this.isVisibilidadFK_IdTipoLlamada;
	}

	public void setisVisibilidadFK_IdTipoLlamada(Boolean isVisibilidadFK_IdTipoLlamada) {
		this.isVisibilidadFK_IdTipoLlamada=isVisibilidadFK_IdTipoLlamada;
	}

	public Boolean getisVisibilidadFK_IdTipoPrecio() {
		return this.isVisibilidadFK_IdTipoPrecio;
	}

	public void setisVisibilidadFK_IdTipoPrecio(Boolean isVisibilidadFK_IdTipoPrecio) {
		this.isVisibilidadFK_IdTipoPrecio=isVisibilidadFK_IdTipoPrecio;
	}

	public Boolean getisVisibilidadFK_IdTransporte() {
		return this.isVisibilidadFK_IdTransporte;
	}

	public void setisVisibilidadFK_IdTransporte(Boolean isVisibilidadFK_IdTransporte) {
		this.isVisibilidadFK_IdTransporte=isVisibilidadFK_IdTransporte;
	}

	public Boolean getisVisibilidadFK_IdTransportista() {
		return this.isVisibilidadFK_IdTransportista;
	}

	public void setisVisibilidadFK_IdTransportista(Boolean isVisibilidadFK_IdTransportista) {
		this.isVisibilidadFK_IdTransportista=isVisibilidadFK_IdTransportista;
	}

	public Boolean getisVisibilidadFK_IdUsuario() {
		return this.isVisibilidadFK_IdUsuario;
	}

	public void setisVisibilidadFK_IdUsuario(Boolean isVisibilidadFK_IdUsuario) {
		this.isVisibilidadFK_IdUsuario=isVisibilidadFK_IdUsuario;
	}

	public Boolean getisVisibilidadFK_IdVendedor() {
		return this.isVisibilidadFK_IdVendedor;
	}

	public void setisVisibilidadFK_IdVendedor(Boolean isVisibilidadFK_IdVendedor) {
		this.isVisibilidadFK_IdVendedor=isVisibilidadFK_IdVendedor;
	}

	
	
	public void setVariablesFormularioToObjetoActualForeignKeysGuiaRemision(GuiaRemision guiaremision)throws Exception {
		try {
			
				this.setActualParaGuardarEmpresaForeignKey(guiaremision,null);
				this.setActualParaGuardarSucursalForeignKey(guiaremision,null);
				this.setActualParaGuardarEjercicioForeignKey(guiaremision,null);
				this.setActualParaGuardarPeriodoForeignKey(guiaremision,null);
				this.setActualParaGuardarUsuarioForeignKey(guiaremision,null);
				this.setActualParaGuardarFormatoForeignKey(guiaremision,null);
				this.setActualParaGuardarTipoPrecioForeignKey(guiaremision,null);
				this.setActualParaGuardarMonedaForeignKey(guiaremision,null);
				this.setActualParaGuardarClienteForeignKey(guiaremision,null);
				this.setActualParaGuardarVendedorForeignKey(guiaremision,null);
				this.setActualParaGuardarFacturaForeignKey(guiaremision,null);
				this.setActualParaGuardarTransportistaForeignKey(guiaremision,null);
				this.setActualParaGuardarConsultorForeignKey(guiaremision,null);
				this.setActualParaGuardarTransporteForeignKey(guiaremision,null);
				this.setActualParaGuardarSubClienteForeignKey(guiaremision,null);
				this.setActualParaGuardarEmpleadoForeignKey(guiaremision,null);
				this.setActualParaGuardarCiudadOrigenForeignKey(guiaremision,null);
				this.setActualParaGuardarCiudadDestinoForeignKey(guiaremision,null);
				this.setActualParaGuardarTipoLlamadaForeignKey(guiaremision,null);
				this.setActualParaGuardarTipoCambioForeignKey(guiaremision,null);
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void cargarLicenciaCliente(DatosCliente datosCliente) throws Exception {
		Boolean existe=false;
			
		try {
				InputStream reportFile=null;
				
				String sPath=this.parametroGeneralUsuario.getpath_exportar()+"erp_bydan/license/license.xml";
				
				reportFile = new FileInputStream(sPath);
				
				Document documentBuilder=null;
				
				if(this.constantes2.DOCUMENT_BUILDER==null) {
					documentBuilder=Funciones2.parseXml(reportFile);
				} else {
					documentBuilder=this.constantes2.DOCUMENT_BUILDER;
				}
				
				//GlobalSeguridad.readXml(documentBuilder);
				
				String sNamePCServerLicencia="";
				String sClaveSistemaLicencia="";
				Date dFechaServerLicencia=null;
				
				//CARGAR ELEMENTOS DE LICENCIA
				NodeList nodeList = documentBuilder.getElementsByTagName("Licencia");
				
				for (int iIndice = 0; iIndice < nodeList.getLength(); iIndice++) {
					Node node = nodeList.item(iIndice);
				
					if (node.getNodeType() == Node.ELEMENT_NODE) {
						Element element = (Element) node;
						 
						sNamePCServerLicencia=element.getElementsByTagName("NombrePc").item(0).getTextContent();
						sClaveSistemaLicencia=element.getElementsByTagName("ClaveSistema").item(0).getTextContent();
						
						existe=true;
						break;
					}
				}														
			
				
			if(existe) {
				datosCliente.setsClaveSistema(sClaveSistemaLicencia);
				
				if(!datosCliente.getsNamePCServer().equals(sNamePCServerLicencia)
					&& !datosCliente.getsNamePCServer().equals("")) {
					
					datosCliente.setsNamePCServer(sNamePCServerLicencia);
				}
			} else {
				throw new Exception("NO EXISTE LICENCIA O NO ESTA BIEN FORMADO");
			}
		} catch(Exception e) {
			throw new Exception("NO EXISTE LICENCIA O NO ESTA BIEN FORMADO");
		}						
	}
	
	public void cargarDatosCliente() throws Exception {
		String sPrimerMacAddress="";		
		String sHostName="";		 
		String sHostIp="";		  
		String sHostUser="";
		
		
		sPrimerMacAddress=FuncionesNetwork.getPrimerMacAddress();		
		sHostName=FuncionesNetwork.getHostName();		 
		sHostIp=FuncionesNetwork.getHostIp();		  
		sHostUser=FuncionesNetwork.getHostUser();
		
		
		this.datosCliente=new DatosCliente();
		if(lIdUsuarioSesion!=null){datosCliente.setIdUsuario(this.lIdUsuarioSesion);}
		
		//SERVIDOR WEB Y TALVEZ SERVIDOR SWING WINDOWS
		this.datosCliente.setsUsuarioPCServer(sHostUser);
		this.datosCliente.setsNamePCServer(sHostName);
		this.datosCliente.setsIPPCServer(sHostIp);
		this.datosCliente.setsMacAddressPCServer(sPrimerMacAddress);
			
			//CLIENTE SWING WINDOWS
			this.datosCliente.setIsClienteWeb(false);
			
			this.datosCliente.setsUsuarioPC(sHostUser);
			this.datosCliente.setsNamePC(sHostName);
			this.datosCliente.setsIPPC(sHostIp);
			this.datosCliente.setsMacAddressPC(sPrimerMacAddress);	
			
			
			//this.cargarLicenciaCliente(this.datosCliente);
			
	}
	
	public void bugActualizarReferenciaActual(GuiaRemision guiaremision,GuiaRemision guiaremisionAux) throws Exception {
		//ARCHITECTURE		
		//EL ID NEGATIVO GUARDADO EN ORIGINAL SIRVE PARA VERIFICAR Y ACTUALIZAR EL REGISTRO NUEVO (ID,VERSIONROW)
		this.setCamposBaseDesdeOriginalGuiaRemision(guiaremision);
					
		//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
		guiaremisionAux.setId(guiaremision.getId());
		guiaremisionAux.setVersionRow(guiaremision.getVersionRow());					
	}
	
	public void ejecutarMantenimiento(MaintenanceType maintenanceType)throws Exception {	
		try	{								
			
			//this.startProcessGuiaRemision();
		
			int intSelectedRow = this.jTableDatosGuiaRemision.getSelectedRow();	       
			
			//PUEDE SER -1 CUANDO SE ELIMINA EN GUARDAR CAMBIOS
			if(intSelectedRow>=0 && maintenanceType!=MaintenanceType.GUARDARCAMBIOS) {
				//SE PIEDE INDICE SELECTED CON FILA TOTALES, ASEGURARSE QUE OBJETO ACTUAL ESTE EN FORMULARIO
					
				//ARCHITECTURE
				
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremision =(GuiaRemision) this.guiaremisionLogic.getGuiaRemisions().toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
					this.guiaremision =(GuiaRemision) this.guiaremisions.toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
				}
				
				//ARCHITECTURE
				
				if(GuiaRemisionJInternalFrame.ISBINDING_MANUAL_TABLA) {
					//this.setVariablesFormularioToObjetoActualGuiaRemision(this.guiaremision,true);
				}
				
				this.setVariablesFormularioToObjetoActualForeignKeysGuiaRemision(this.guiaremision);
			}
			
			//LUEGO DE TRAER DATOS CORRESPONDIENTES QUE COINCIDA LISTA TABLA QUITO FILA TOTALES
			if(this.conTotales) {
				//MEJOR LO DEJO, SI EXISTE EXCEPCION SE PIEDE FILA TOTALES Y ORDEN INDICE FILA ACTUAL
				//this.quitarFilaTotales();
			}
			
			this.cargarDatosCliente();
			
			this.datosDeep=new DatosDeep();
			
			//SE CAMBIA ESTADOS CON ERROR, ENTONCES SE EJECUTA ANTES
			//this.invalidValues = guiaremisionValidator.getInvalidValues(this.guiaremision);
			
			//if(this.invalidValues==null || this.invalidValues.length<=0) {
			
			guiaremisionLogic.setDatosCliente(datosCliente);
			guiaremisionLogic.setIsConDeep(false);
			
			if(maintenanceType==MaintenanceType.NUEVO) {
				guiaremisionAux=new  GuiaRemision();
				
				guiaremisionAux.setIsNew(true);
				guiaremisionAux.setIsChanged(true);
				
				guiaremisionAux.setGuiaRemisionOriginal(this.guiaremision);
				
				guiaremisionAux.setId(this.guiaremision.getId());	
				guiaremisionAux.setVersionRow(this.guiaremision.getVersionRow());	
				guiaremisionAux.setid_empresa(this.guiaremision.getid_empresa());	
				guiaremisionAux.setid_sucursal(this.guiaremision.getid_sucursal());	
				guiaremisionAux.setid_ejercicio(this.guiaremision.getid_ejercicio());	
				guiaremisionAux.setid_periodo(this.guiaremision.getid_periodo());	
				guiaremisionAux.setid_usuario(this.guiaremision.getid_usuario());	
				guiaremisionAux.setsecuencial(this.guiaremision.getsecuencial());	
				guiaremisionAux.setfecha_emision(this.guiaremision.getfecha_emision());	
				
				if(this.guiaremision.getid_formato()!=null && this.guiaremision.getid_formato()>0L) {
					guiaremisionAux.setid_formato(this.guiaremision.getid_formato());
				} else {
					guiaremisionAux.setid_formato(null);
				}	
				guiaremisionAux.setid_tipo_precio(this.guiaremision.getid_tipo_precio());	
				guiaremisionAux.setid_moneda(this.guiaremision.getid_moneda());	
				guiaremisionAux.setnumero_camion(this.guiaremision.getnumero_camion());	
				guiaremisionAux.setid_cliente(this.guiaremision.getid_cliente());	
				
				if(this.guiaremision.getid_vendedor()!=null && this.guiaremision.getid_vendedor()>0L) {
					guiaremisionAux.setid_vendedor(this.guiaremision.getid_vendedor());
				} else {
					guiaremisionAux.setid_vendedor(null);
				}	
				
				if(this.guiaremision.getid_factura()!=null && this.guiaremision.getid_factura()>0L) {
					guiaremisionAux.setid_factura(this.guiaremision.getid_factura());
				} else {
					guiaremisionAux.setid_factura(null);
				}	
				
				if(this.guiaremision.getid_transportista()!=null && this.guiaremision.getid_transportista()>0L) {
					guiaremisionAux.setid_transportista(this.guiaremision.getid_transportista());
				} else {
					guiaremisionAux.setid_transportista(null);
				}	
				guiaremisionAux.setidentificacion(this.guiaremision.getidentificacion());	
				guiaremisionAux.setfecha_origen(this.guiaremision.getfecha_origen());	
				guiaremisionAux.setfecha_destino(this.guiaremision.getfecha_destino());	
				guiaremisionAux.settransporte_codigo(this.guiaremision.gettransporte_codigo());	
				guiaremisionAux.setcantidad_bultos(this.guiaremision.getcantidad_bultos());	
				guiaremisionAux.setid_consultor(this.guiaremision.getid_consultor());	
				guiaremisionAux.setid_transporte(this.guiaremision.getid_transporte());	
				guiaremisionAux.setid_sub_cliente(this.guiaremision.getid_sub_cliente());	
				guiaremisionAux.setid_empleado(this.guiaremision.getid_empleado());	
				
				if(this.guiaremision.getid_ciudad_origen()!=null && this.guiaremision.getid_ciudad_origen()>0L) {
					guiaremisionAux.setid_ciudad_origen(this.guiaremision.getid_ciudad_origen());
				} else {
					guiaremisionAux.setid_ciudad_origen(null);
				}	
				
				if(this.guiaremision.getid_ciudad_destino()!=null && this.guiaremision.getid_ciudad_destino()>0L) {
					guiaremisionAux.setid_ciudad_destino(this.guiaremision.getid_ciudad_destino());
				} else {
					guiaremisionAux.setid_ciudad_destino(null);
				}	
				guiaremisionAux.setid_tipo_llamada(this.guiaremision.getid_tipo_llamada());	
				guiaremisionAux.sethora_inicio(this.guiaremision.gethora_inicio());	
				guiaremisionAux.sethora_fin(this.guiaremision.gethora_fin());	
				guiaremisionAux.setcupo(this.guiaremision.getcupo());	
				guiaremisionAux.setsaldo(this.guiaremision.getsaldo());	
				guiaremisionAux.setdocumento(this.guiaremision.getdocumento());	
				guiaremisionAux.setdisponible(this.guiaremision.getdisponible());	
				guiaremisionAux.setdescripcion(this.guiaremision.getdescripcion());	
				guiaremisionAux.settotal_iva(this.guiaremision.gettotal_iva());	
				guiaremisionAux.settotal_sin_iva(this.guiaremision.gettotal_sin_iva());	
				guiaremisionAux.setdescuento(this.guiaremision.getdescuento());	
				guiaremisionAux.setflete(this.guiaremision.getflete());	
				guiaremisionAux.setotro(this.guiaremision.getotro());	
				guiaremisionAux.setfinanciamiento(this.guiaremision.getfinanciamiento());	
				guiaremisionAux.setiva(this.guiaremision.getiva());	
				guiaremisionAux.settotal(this.guiaremision.gettotal());	
				guiaremisionAux.setmonto_retencion(this.guiaremision.getmonto_retencion());	
				guiaremisionAux.setid_tipo_cambio(this.guiaremision.getid_tipo_cambio());	
				guiaremisionAux.setfecha(this.guiaremision.getfecha());	
				guiaremisionAux.setruc_cliente(this.guiaremision.getruc_cliente());	
				guiaremisionAux.setnombre_cliente(this.guiaremision.getnombre_cliente());	
				guiaremisionAux.settelefono_cliente(this.guiaremision.gettelefono_cliente());	
				guiaremisionAux.setdireccion_cliente(this.guiaremision.getdireccion_cliente());	
				guiaremisionAux.setnumero_pre_impreso(this.guiaremision.getnumero_pre_impreso());	
				guiaremisionAux.setpeso_bruto(this.guiaremision.getpeso_bruto());	
				guiaremisionAux.setfecha_autorizacion(this.guiaremision.getfecha_autorizacion());	
				guiaremisionAux.setfecha_vencimiento(this.guiaremision.getfecha_vencimiento());	
								
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//NO ENTENDIBLE PORQUE PONER
					//if(this.guiaremisionSessionBean.getEstaModoGuardarRelaciones() 
					//	|| this.guiaremisionSessionBean.getEsGuardarRelacionado())	{
						actualizarLista(guiaremisionAux,guiaremisionLogic.getGuiaRemisions());
					//}
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(guiaremisionAux,guiaremisions);
				}
				//ARCHITECTURE
				
				if(!isGuardarCambiosEnLote  && !this.guiaremisionSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.guiaremisionSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						guiaremisionLogic.saveGuiaRemisions();//WithConnection
						//guiaremisionLogic.getSetVersionRowGuiaRemisions();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE		
					
					//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
					this.bugActualizarReferenciaActual(this.guiaremision,guiaremisionAux);
					
					this.refrescarForeignKeysDescripcionesGuiaRemision();
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					if(this.guiaremisionSessionBean.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							
							this.jInternalFrameDetalleFormGuiaRemision.detalleguiaremisionBeanSwingJInternalFrame.detalleguiaremisionLogic.getDetalleGuiaRemisions().addAll(this.jInternalFrameDetalleFormGuiaRemision.detalleguiaremisionBeanSwingJInternalFrame.detalleguiaremisionsEliminados);
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
							this.jInternalFrameDetalleFormGuiaRemision.detalleguiaremisionBeanSwingJInternalFrame.detalleguiaremisions.addAll(this.jInternalFrameDetalleFormGuiaRemision.detalleguiaremisionBeanSwingJInternalFrame.detalleguiaremisionsEliminados);
						}
						//ARCHITECTURE	
						
						if(!this.guiaremisionSessionBean.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							
								if(this.jInternalFrameDetalleFormGuiaRemision.detalleguiaremisionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormGuiaRemision.detalleguiaremisionBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormGuiaRemision.detalleguiaremisionBeanSwingJInternalFrame.quitarFilaTotales();*/}
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
								if(this.jInternalFrameDetalleFormGuiaRemision.detalleguiaremisionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormGuiaRemision.detalleguiaremisionBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormGuiaRemision.detalleguiaremisionBeanSwingJInternalFrame.quitarFilaTotales();*/}	
							}
							//ARCHITECTURE
												
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								guiaremisionLogic.saveGuiaRemisionRelaciones(guiaremisionAux,this.jInternalFrameDetalleFormGuiaRemision.detalleguiaremisionBeanSwingJInternalFrame.detalleguiaremisionLogic.getDetalleGuiaRemisions());//WithConnection
								//guiaremisionLogic.getSetVersionRowGuiaRemisions();//WithConnection
							} else if(Constantes.ISUSAEJBREMOTE) {
							} else if(Constantes.ISUSAEJBHOME) {
							}
							//ARCHITECTURE
							
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							this.bugActualizarReferenciaActual(this.guiaremision,guiaremisionAux);
					
					
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								
							this.jInternalFrameDetalleFormGuiaRemision.detalleguiaremisionBeanSwingJInternalFrame.detalleguiaremisionLogic.setDetalleGuiaRemisions(new ArrayList<DetalleGuiaRemision>());
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							this.jInternalFrameDetalleFormGuiaRemision.detalleguiaremisionBeanSwingJInternalFrame.detalleguiaremisions= new ArrayList<DetalleGuiaRemision>();
							}
							//ARCHITECTURE	
						} else {
							
							

							if(this.jInternalFrameDetalleFormGuiaRemision.detalleguiaremisionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormGuiaRemision.detalleguiaremisionBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormGuiaRemision.detalleguiaremisionBeanSwingJInternalFrame.quitarFilaTotales();}
							guiaremisionAux.setDetalleGuiaRemisions(this.jInternalFrameDetalleFormGuiaRemision.detalleguiaremisionBeanSwingJInternalFrame.detalleguiaremisionLogic.getDetalleGuiaRemisions());
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								if(this.guiaremisionSessionBean.getEstaModoGuardarRelaciones() 
									|| this.guiaremisionSessionBean.getEsGuardarRelacionado())	{
									actualizarLista(guiaremisionAux,guiaremisionLogic.getGuiaRemisions());
								}
							} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
								actualizarLista(guiaremisionAux,guiaremisions);
							}
							//ARCHITECTURE
							
							//AQUI EL ID NEGATIVO ES EL ID BUSCADO, YA QUE NO SE GENERA OTRO EN LA DB POR INGRESAR UNO NUEVO
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							//this.bugActualizarReferenciaActual(this.guiaremision,guiaremisionAux);												
						}
					}
				}
			} else if(maintenanceType==MaintenanceType.ACTUALIZAR) {
				guiaremisionAux=new  GuiaRemision();
				
				//PUEDE QUE SE ACTUALIZE ALGUN REGISTRO NUEVO
				if(!this.guiaremisionSessionBean.getEsGuardarRelacionado() 
					|| (this.guiaremisionSessionBean.getEsGuardarRelacionado() && this.guiaremision.getId()>=0)) {
						
					guiaremisionAux.setIsNew(false);
				}
				
				guiaremisionAux.setIsDeleted(false);
			
				guiaremisionAux.setId(this.guiaremision.getId());	
				guiaremisionAux.setVersionRow(this.guiaremision.getVersionRow());	
				guiaremisionAux.setid_empresa(this.guiaremision.getid_empresa());	
				guiaremisionAux.setid_sucursal(this.guiaremision.getid_sucursal());	
				guiaremisionAux.setid_ejercicio(this.guiaremision.getid_ejercicio());	
				guiaremisionAux.setid_periodo(this.guiaremision.getid_periodo());	
				guiaremisionAux.setid_usuario(this.guiaremision.getid_usuario());	
				guiaremisionAux.setsecuencial(this.guiaremision.getsecuencial());	
				guiaremisionAux.setfecha_emision(this.guiaremision.getfecha_emision());	
				
				if(this.guiaremision.getid_formato()!=null && this.guiaremision.getid_formato()>0L) {
					guiaremisionAux.setid_formato(this.guiaremision.getid_formato());
				} else {
					guiaremisionAux.setid_formato(null);
				}	
				guiaremisionAux.setid_tipo_precio(this.guiaremision.getid_tipo_precio());	
				guiaremisionAux.setid_moneda(this.guiaremision.getid_moneda());	
				guiaremisionAux.setnumero_camion(this.guiaremision.getnumero_camion());	
				guiaremisionAux.setid_cliente(this.guiaremision.getid_cliente());	
				
				if(this.guiaremision.getid_vendedor()!=null && this.guiaremision.getid_vendedor()>0L) {
					guiaremisionAux.setid_vendedor(this.guiaremision.getid_vendedor());
				} else {
					guiaremisionAux.setid_vendedor(null);
				}	
				
				if(this.guiaremision.getid_factura()!=null && this.guiaremision.getid_factura()>0L) {
					guiaremisionAux.setid_factura(this.guiaremision.getid_factura());
				} else {
					guiaremisionAux.setid_factura(null);
				}	
				
				if(this.guiaremision.getid_transportista()!=null && this.guiaremision.getid_transportista()>0L) {
					guiaremisionAux.setid_transportista(this.guiaremision.getid_transportista());
				} else {
					guiaremisionAux.setid_transportista(null);
				}	
				guiaremisionAux.setidentificacion(this.guiaremision.getidentificacion());	
				guiaremisionAux.setfecha_origen(this.guiaremision.getfecha_origen());	
				guiaremisionAux.setfecha_destino(this.guiaremision.getfecha_destino());	
				guiaremisionAux.settransporte_codigo(this.guiaremision.gettransporte_codigo());	
				guiaremisionAux.setcantidad_bultos(this.guiaremision.getcantidad_bultos());	
				guiaremisionAux.setid_consultor(this.guiaremision.getid_consultor());	
				guiaremisionAux.setid_transporte(this.guiaremision.getid_transporte());	
				guiaremisionAux.setid_sub_cliente(this.guiaremision.getid_sub_cliente());	
				guiaremisionAux.setid_empleado(this.guiaremision.getid_empleado());	
				
				if(this.guiaremision.getid_ciudad_origen()!=null && this.guiaremision.getid_ciudad_origen()>0L) {
					guiaremisionAux.setid_ciudad_origen(this.guiaremision.getid_ciudad_origen());
				} else {
					guiaremisionAux.setid_ciudad_origen(null);
				}	
				
				if(this.guiaremision.getid_ciudad_destino()!=null && this.guiaremision.getid_ciudad_destino()>0L) {
					guiaremisionAux.setid_ciudad_destino(this.guiaremision.getid_ciudad_destino());
				} else {
					guiaremisionAux.setid_ciudad_destino(null);
				}	
				guiaremisionAux.setid_tipo_llamada(this.guiaremision.getid_tipo_llamada());	
				guiaremisionAux.sethora_inicio(this.guiaremision.gethora_inicio());	
				guiaremisionAux.sethora_fin(this.guiaremision.gethora_fin());	
				guiaremisionAux.setcupo(this.guiaremision.getcupo());	
				guiaremisionAux.setsaldo(this.guiaremision.getsaldo());	
				guiaremisionAux.setdocumento(this.guiaremision.getdocumento());	
				guiaremisionAux.setdisponible(this.guiaremision.getdisponible());	
				guiaremisionAux.setdescripcion(this.guiaremision.getdescripcion());	
				guiaremisionAux.settotal_iva(this.guiaremision.gettotal_iva());	
				guiaremisionAux.settotal_sin_iva(this.guiaremision.gettotal_sin_iva());	
				guiaremisionAux.setdescuento(this.guiaremision.getdescuento());	
				guiaremisionAux.setflete(this.guiaremision.getflete());	
				guiaremisionAux.setotro(this.guiaremision.getotro());	
				guiaremisionAux.setfinanciamiento(this.guiaremision.getfinanciamiento());	
				guiaremisionAux.setiva(this.guiaremision.getiva());	
				guiaremisionAux.settotal(this.guiaremision.gettotal());	
				guiaremisionAux.setmonto_retencion(this.guiaremision.getmonto_retencion());	
				guiaremisionAux.setid_tipo_cambio(this.guiaremision.getid_tipo_cambio());	
				guiaremisionAux.setfecha(this.guiaremision.getfecha());	
				guiaremisionAux.setruc_cliente(this.guiaremision.getruc_cliente());	
				guiaremisionAux.setnombre_cliente(this.guiaremision.getnombre_cliente());	
				guiaremisionAux.settelefono_cliente(this.guiaremision.gettelefono_cliente());	
				guiaremisionAux.setdireccion_cliente(this.guiaremision.getdireccion_cliente());	
				guiaremisionAux.setnumero_pre_impreso(this.guiaremision.getnumero_pre_impreso());	
				guiaremisionAux.setpeso_bruto(this.guiaremision.getpeso_bruto());	
				guiaremisionAux.setfecha_autorizacion(this.guiaremision.getfecha_autorizacion());	
				guiaremisionAux.setfecha_vencimiento(this.guiaremision.getfecha_vencimiento());	
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					actualizarLista(guiaremisionAux,guiaremisionLogic.getGuiaRemisions());
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(guiaremisionAux,guiaremisions);
				}
				//ARCHITECTURE
				
				if(!isGuardarCambiosEnLote && !this.guiaremisionSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.guiaremisionSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						guiaremisionLogic.saveGuiaRemisions();//WithConnection
						//guiaremisionLogic.getSetVersionRowGuiaRemisions();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}	
					//ARCHITECTURE
					
					//TALVEZ ESTA DEMAS POR SER UPDATE
					//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
					this.bugActualizarReferenciaActual(this.guiaremision,guiaremisionAux);
					
					this.refrescarForeignKeysDescripcionesGuiaRemision();
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					if(this.guiaremisionSessionBean.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							
							this.jInternalFrameDetalleFormGuiaRemision.detalleguiaremisionBeanSwingJInternalFrame.detalleguiaremisionLogic.getDetalleGuiaRemisions().addAll(this.jInternalFrameDetalleFormGuiaRemision.detalleguiaremisionBeanSwingJInternalFrame.detalleguiaremisionsEliminados);
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
							this.jInternalFrameDetalleFormGuiaRemision.detalleguiaremisionBeanSwingJInternalFrame.detalleguiaremisions.addAll(this.jInternalFrameDetalleFormGuiaRemision.detalleguiaremisionBeanSwingJInternalFrame.detalleguiaremisionsEliminados);
						}
						//ARCHITECTURE
						
						if(!this.guiaremisionSessionBean.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							
								if(this.jInternalFrameDetalleFormGuiaRemision.detalleguiaremisionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormGuiaRemision.detalleguiaremisionBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormGuiaRemision.detalleguiaremisionBeanSwingJInternalFrame.quitarFilaTotales();*/}
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
								if(this.jInternalFrameDetalleFormGuiaRemision.detalleguiaremisionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormGuiaRemision.detalleguiaremisionBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormGuiaRemision.detalleguiaremisionBeanSwingJInternalFrame.quitarFilaTotales();*/}	
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								guiaremisionLogic.saveGuiaRemisionRelaciones(guiaremisionAux,this.jInternalFrameDetalleFormGuiaRemision.detalleguiaremisionBeanSwingJInternalFrame.detalleguiaremisionLogic.getDetalleGuiaRemisions());//WithConnection
								//guiaremisionLogic.getSetVersionRowGuiaRemisions();//WithConnection
							} else if(Constantes.ISUSAEJBREMOTE) {
							} else if(Constantes.ISUSAEJBHOME) {
							}
							//ARCHITECTURE
							
							//TALVEZ ESTA DEMAS POR SER UPDATE
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							this.bugActualizarReferenciaActual(this.guiaremision,guiaremisionAux);
					
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								
							this.jInternalFrameDetalleFormGuiaRemision.detalleguiaremisionBeanSwingJInternalFrame.detalleguiaremisionLogic.setDetalleGuiaRemisions(new ArrayList<DetalleGuiaRemision>());
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							this.jInternalFrameDetalleFormGuiaRemision.detalleguiaremisionBeanSwingJInternalFrame.detalleguiaremisions= new ArrayList<DetalleGuiaRemision>();
							}
							//ARCHITECTURE
						} else {
							
							

							if(this.jInternalFrameDetalleFormGuiaRemision.detalleguiaremisionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormGuiaRemision.detalleguiaremisionBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormGuiaRemision.detalleguiaremisionBeanSwingJInternalFrame.quitarFilaTotales();}
							guiaremisionAux.setDetalleGuiaRemisions(this.jInternalFrameDetalleFormGuiaRemision.detalleguiaremisionBeanSwingJInternalFrame.detalleguiaremisionLogic.getDetalleGuiaRemisions());
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								if(this.guiaremisionSessionBean.getEstaModoGuardarRelaciones() 
									|| this.guiaremisionSessionBean.getEsGuardarRelacionado())	{
									actualizarLista(guiaremisionAux,guiaremisionLogic.getGuiaRemisions());
								}
							} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
								actualizarLista(guiaremisionAux,guiaremisions);
							}
							//ARCHITECTURE
							
							//AQUI EL ID NEGATIVO ES EL ID BUSCADO, YA QUE NO SE GENERA OTRO EN LA DB POR INGRESAR UNO NUEVO							
							//TALVEZ ESTA DEMAS POR SER UPDATE
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							//this.bugActualizarReferenciaActual(this.guiaremision,guiaremisionAux);
					
						}
					}
				}				
			} else if(maintenanceType==MaintenanceType.ELIMINAR) {
				guiaremisionAux=new  GuiaRemision();
				
				guiaremisionAux.setIsNew(false);
				guiaremisionAux.setIsChanged(false);
				
				guiaremisionAux.setIsDeleted(true);
				
				guiaremisionAux.setId(this.guiaremision.getId());	
				guiaremisionAux.setVersionRow(this.guiaremision.getVersionRow());	
				guiaremisionAux.setid_empresa(this.guiaremision.getid_empresa());	
				guiaremisionAux.setid_sucursal(this.guiaremision.getid_sucursal());	
				guiaremisionAux.setid_ejercicio(this.guiaremision.getid_ejercicio());	
				guiaremisionAux.setid_periodo(this.guiaremision.getid_periodo());	
				guiaremisionAux.setid_usuario(this.guiaremision.getid_usuario());	
				guiaremisionAux.setsecuencial(this.guiaremision.getsecuencial());	
				guiaremisionAux.setfecha_emision(this.guiaremision.getfecha_emision());	
				
				if(this.guiaremision.getid_formato()!=null && this.guiaremision.getid_formato()>0L) {
					guiaremisionAux.setid_formato(this.guiaremision.getid_formato());
				} else {
					guiaremisionAux.setid_formato(null);
				}	
				guiaremisionAux.setid_tipo_precio(this.guiaremision.getid_tipo_precio());	
				guiaremisionAux.setid_moneda(this.guiaremision.getid_moneda());	
				guiaremisionAux.setnumero_camion(this.guiaremision.getnumero_camion());	
				guiaremisionAux.setid_cliente(this.guiaremision.getid_cliente());	
				
				if(this.guiaremision.getid_vendedor()!=null && this.guiaremision.getid_vendedor()>0L) {
					guiaremisionAux.setid_vendedor(this.guiaremision.getid_vendedor());
				} else {
					guiaremisionAux.setid_vendedor(null);
				}	
				
				if(this.guiaremision.getid_factura()!=null && this.guiaremision.getid_factura()>0L) {
					guiaremisionAux.setid_factura(this.guiaremision.getid_factura());
				} else {
					guiaremisionAux.setid_factura(null);
				}	
				
				if(this.guiaremision.getid_transportista()!=null && this.guiaremision.getid_transportista()>0L) {
					guiaremisionAux.setid_transportista(this.guiaremision.getid_transportista());
				} else {
					guiaremisionAux.setid_transportista(null);
				}	
				guiaremisionAux.setidentificacion(this.guiaremision.getidentificacion());	
				guiaremisionAux.setfecha_origen(this.guiaremision.getfecha_origen());	
				guiaremisionAux.setfecha_destino(this.guiaremision.getfecha_destino());	
				guiaremisionAux.settransporte_codigo(this.guiaremision.gettransporte_codigo());	
				guiaremisionAux.setcantidad_bultos(this.guiaremision.getcantidad_bultos());	
				guiaremisionAux.setid_consultor(this.guiaremision.getid_consultor());	
				guiaremisionAux.setid_transporte(this.guiaremision.getid_transporte());	
				guiaremisionAux.setid_sub_cliente(this.guiaremision.getid_sub_cliente());	
				guiaremisionAux.setid_empleado(this.guiaremision.getid_empleado());	
				
				if(this.guiaremision.getid_ciudad_origen()!=null && this.guiaremision.getid_ciudad_origen()>0L) {
					guiaremisionAux.setid_ciudad_origen(this.guiaremision.getid_ciudad_origen());
				} else {
					guiaremisionAux.setid_ciudad_origen(null);
				}	
				
				if(this.guiaremision.getid_ciudad_destino()!=null && this.guiaremision.getid_ciudad_destino()>0L) {
					guiaremisionAux.setid_ciudad_destino(this.guiaremision.getid_ciudad_destino());
				} else {
					guiaremisionAux.setid_ciudad_destino(null);
				}	
				guiaremisionAux.setid_tipo_llamada(this.guiaremision.getid_tipo_llamada());	
				guiaremisionAux.sethora_inicio(this.guiaremision.gethora_inicio());	
				guiaremisionAux.sethora_fin(this.guiaremision.gethora_fin());	
				guiaremisionAux.setcupo(this.guiaremision.getcupo());	
				guiaremisionAux.setsaldo(this.guiaremision.getsaldo());	
				guiaremisionAux.setdocumento(this.guiaremision.getdocumento());	
				guiaremisionAux.setdisponible(this.guiaremision.getdisponible());	
				guiaremisionAux.setdescripcion(this.guiaremision.getdescripcion());	
				guiaremisionAux.settotal_iva(this.guiaremision.gettotal_iva());	
				guiaremisionAux.settotal_sin_iva(this.guiaremision.gettotal_sin_iva());	
				guiaremisionAux.setdescuento(this.guiaremision.getdescuento());	
				guiaremisionAux.setflete(this.guiaremision.getflete());	
				guiaremisionAux.setotro(this.guiaremision.getotro());	
				guiaremisionAux.setfinanciamiento(this.guiaremision.getfinanciamiento());	
				guiaremisionAux.setiva(this.guiaremision.getiva());	
				guiaremisionAux.settotal(this.guiaremision.gettotal());	
				guiaremisionAux.setmonto_retencion(this.guiaremision.getmonto_retencion());	
				guiaremisionAux.setid_tipo_cambio(this.guiaremision.getid_tipo_cambio());	
				guiaremisionAux.setfecha(this.guiaremision.getfecha());	
				guiaremisionAux.setruc_cliente(this.guiaremision.getruc_cliente());	
				guiaremisionAux.setnombre_cliente(this.guiaremision.getnombre_cliente());	
				guiaremisionAux.settelefono_cliente(this.guiaremision.gettelefono_cliente());	
				guiaremisionAux.setdireccion_cliente(this.guiaremision.getdireccion_cliente());	
				guiaremisionAux.setnumero_pre_impreso(this.guiaremision.getnumero_pre_impreso());	
				guiaremisionAux.setpeso_bruto(this.guiaremision.getpeso_bruto());	
				guiaremisionAux.setfecha_autorizacion(this.guiaremision.getfecha_autorizacion());	
				guiaremisionAux.setfecha_vencimiento(this.guiaremision.getfecha_vencimiento());	
				
				if(this.guiaremisionSessionBean.getEsGuardarRelacionado()) {
					//ELEMENTO ACTUAL NO SE HA INGRESADO AL SISTEMA, NO SE PUEDE ELIMINAR ALGO QUE NO EXISTE
					if(this.guiaremisionAux.getId()>=0) {	
						this.guiaremisionsEliminados.add(guiaremisionAux);											
					}
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					actualizarLista(guiaremisionAux,guiaremisionLogic.getGuiaRemisions());
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(guiaremisionAux,guiaremisions);
				}
				//ARCHITECTURE
				
				
				if(!isGuardarCambiosEnLote && !this.guiaremisionSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.guiaremisionSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						guiaremisionLogic.saveGuiaRemisions();//WithConnection
						//guiaremisionLogic.getSetVersionRowGuiaRemisions();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}	
					//ARCHITECTURE
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					if(this.guiaremisionSessionBean.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							
							this.jInternalFrameDetalleFormGuiaRemision.detalleguiaremisionBeanSwingJInternalFrame.detalleguiaremisionLogic.getDetalleGuiaRemisions().addAll(this.jInternalFrameDetalleFormGuiaRemision.detalleguiaremisionBeanSwingJInternalFrame.detalleguiaremisionsEliminados);
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
							this.jInternalFrameDetalleFormGuiaRemision.detalleguiaremisionBeanSwingJInternalFrame.detalleguiaremisions.addAll(this.jInternalFrameDetalleFormGuiaRemision.detalleguiaremisionBeanSwingJInternalFrame.detalleguiaremisionsEliminados);
						}
						//ARCHITECTURE
						
						
						if(!this.guiaremisionSessionBean.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							
								if(this.jInternalFrameDetalleFormGuiaRemision.detalleguiaremisionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormGuiaRemision.detalleguiaremisionBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormGuiaRemision.detalleguiaremisionBeanSwingJInternalFrame.quitarFilaTotales();*/}
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
								if(this.jInternalFrameDetalleFormGuiaRemision.detalleguiaremisionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormGuiaRemision.detalleguiaremisionBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormGuiaRemision.detalleguiaremisionBeanSwingJInternalFrame.quitarFilaTotales();*/}	
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								guiaremisionLogic.saveGuiaRemisionRelaciones(guiaremisionAux,this.jInternalFrameDetalleFormGuiaRemision.detalleguiaremisionBeanSwingJInternalFrame.detalleguiaremisionLogic.getDetalleGuiaRemisions());//WithConnection
								//guiaremisionLogic.getSetVersionRowGuiaRemisions();//WithConnection
							} else if(Constantes.ISUSAEJBREMOTE) {
							} else if(Constantes.ISUSAEJBHOME) {
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								
							this.jInternalFrameDetalleFormGuiaRemision.detalleguiaremisionBeanSwingJInternalFrame.detalleguiaremisionLogic.setDetalleGuiaRemisions(new ArrayList<DetalleGuiaRemision>());
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							this.jInternalFrameDetalleFormGuiaRemision.detalleguiaremisionBeanSwingJInternalFrame.detalleguiaremisions= new ArrayList<DetalleGuiaRemision>();
							}
							//ARCHITECTURE
						}
					}  else {
							
						

							if(this.jInternalFrameDetalleFormGuiaRemision.detalleguiaremisionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormGuiaRemision.detalleguiaremisionBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormGuiaRemision.detalleguiaremisionBeanSwingJInternalFrame.quitarFilaTotales();}
							guiaremisionAux.setDetalleGuiaRemisions(this.jInternalFrameDetalleFormGuiaRemision.detalleguiaremisionBeanSwingJInternalFrame.detalleguiaremisionLogic.getDetalleGuiaRemisions());
								
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							if(this.guiaremisionSessionBean.getEstaModoGuardarRelaciones() 
								|| this.guiaremisionSessionBean.getEsGuardarRelacionado())	{
								actualizarLista(guiaremisionAux,guiaremisionLogic.getGuiaRemisions());
							}
						} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
							actualizarLista(guiaremisionAux,guiaremisions);
						}
						//ARCHITECTURE
					}
				}				
			} else if(maintenanceType==MaintenanceType.GUARDARCAMBIOS) {		
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.getGuiaRemisions().addAll(this.guiaremisionsEliminados);
					
					guiaremisionLogic.saveGuiaRemisions();//WithConnection
					//guiaremisionLogic.getSetVersionRowGuiaRemisions();//WithConnection
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}	
				//ARCHITECTURE
				this.refrescarForeignKeysDescripcionesGuiaRemision();
				
				this.guiaremisionsEliminados= new ArrayList<GuiaRemision>();		
			}
			
			if(this.guiaremisionSessionBean.getEsGuardarRelacionado()) {
				 this.crearFilaTotales();
			}
			
			
									
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.guiaremisionSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				if(!this.isPostAccionSinMensaje) {
					JOptionPane.showMessageDialog(this,"Guia Remision GUARDADO CORRECTAMENTE","MANTENIMIENTO DE Guia Remision",JOptionPane.INFORMATION_MESSAGE);
					if(maintenanceType==MaintenanceType.NUEVO || maintenanceType==MaintenanceType.ACTUALIZAR) {
						//CUANDO ES NUEVO SE PIERDE REFERENCIA NO SE PORQUE
						this.guiaremision=guiaremisionAux;
					}
				}
			}
			
			this.isErrorGuardar=false;
			
			this.inicializarInvalidValues();
		/*
		} else {
			this.mostrarInvalidValues();	
		}
		*/
			
		} catch(Exception e) {
			this.isErrorGuardar=true;
			
			this.crearFilaTotales();
			
			throw e;
		} finally {
      		//this.finishProcessGuiaRemision();
      	}
		
	}	
	
	public void actualizarRelaciones(GuiaRemision guiaremisionLocal) throws Exception {
		
		if(this.guiaremisionSessionBean.getConGuardarRelaciones()) {			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
			
				guiaremisionLocal.setDetalleGuiaRemisions(this.jInternalFrameDetalleFormGuiaRemision.detalleguiaremisionBeanSwingJInternalFrame.detalleguiaremisionLogic.getDetalleGuiaRemisions());
			
			} else {
			
				guiaremisionLocal.setDetalleGuiaRemisions(this.jInternalFrameDetalleFormGuiaRemision.detalleguiaremisionBeanSwingJInternalFrame.detalleguiaremisions);	
			}
		}
	}
	
	public void actualizarRelacionFkPadreActual(GuiaRemision guiaremisionLocal) throws Exception {	
		if(this.guiaremisionSessionBean.getEsGuardarRelacionado()) {			
			
		
			if(this.jInternalFrameParent.getClass().equals(EmpresaDetalleFormJInternalFrame.class)) {
				EmpresaBeanSwingJInternalFrame empresaBeanSwingJInternalFrameLocal=(EmpresaBeanSwingJInternalFrame) ((EmpresaDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				empresaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoEmpresa(empresaBeanSwingJInternalFrameLocal.getempresa(),true);
				empresaBeanSwingJInternalFrameLocal.actualizarLista(empresaBeanSwingJInternalFrameLocal.empresa,this.empresasForeignKey);

				empresaBeanSwingJInternalFrameLocal.actualizarRelaciones(empresaBeanSwingJInternalFrameLocal.empresa);

				guiaremisionLocal.setEmpresa(empresaBeanSwingJInternalFrameLocal.empresa);

				this.addItemDefectoCombosForeignKeyEmpresa();
				this.cargarCombosFrameEmpresasForeignKey("Formulario");
				this.setActualEmpresaForeignKey(empresaBeanSwingJInternalFrameLocal.empresa.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(SucursalDetalleFormJInternalFrame.class)) {
				SucursalBeanSwingJInternalFrame sucursalBeanSwingJInternalFrameLocal=(SucursalBeanSwingJInternalFrame) ((SucursalDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				sucursalBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoSucursal(sucursalBeanSwingJInternalFrameLocal.getsucursal(),true);
				sucursalBeanSwingJInternalFrameLocal.actualizarLista(sucursalBeanSwingJInternalFrameLocal.sucursal,this.sucursalsForeignKey);

				sucursalBeanSwingJInternalFrameLocal.actualizarRelaciones(sucursalBeanSwingJInternalFrameLocal.sucursal);

				guiaremisionLocal.setSucursal(sucursalBeanSwingJInternalFrameLocal.sucursal);

				this.addItemDefectoCombosForeignKeySucursal();
				this.cargarCombosFrameSucursalsForeignKey("Formulario");
				this.setActualSucursalForeignKey(sucursalBeanSwingJInternalFrameLocal.sucursal.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(EjercicioDetalleFormJInternalFrame.class)) {
				EjercicioBeanSwingJInternalFrame ejercicioBeanSwingJInternalFrameLocal=(EjercicioBeanSwingJInternalFrame) ((EjercicioDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				ejercicioBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoEjercicio(ejercicioBeanSwingJInternalFrameLocal.getejercicio(),true);
				ejercicioBeanSwingJInternalFrameLocal.actualizarLista(ejercicioBeanSwingJInternalFrameLocal.ejercicio,this.ejerciciosForeignKey);

				ejercicioBeanSwingJInternalFrameLocal.actualizarRelaciones(ejercicioBeanSwingJInternalFrameLocal.ejercicio);

				guiaremisionLocal.setEjercicio(ejercicioBeanSwingJInternalFrameLocal.ejercicio);

				this.addItemDefectoCombosForeignKeyEjercicio();
				this.cargarCombosFrameEjerciciosForeignKey("Formulario");
				this.setActualEjercicioForeignKey(ejercicioBeanSwingJInternalFrameLocal.ejercicio.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(PeriodoDetalleFormJInternalFrame.class)) {
				PeriodoBeanSwingJInternalFrame periodoBeanSwingJInternalFrameLocal=(PeriodoBeanSwingJInternalFrame) ((PeriodoDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				periodoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoPeriodo(periodoBeanSwingJInternalFrameLocal.getperiodo(),true);
				periodoBeanSwingJInternalFrameLocal.actualizarLista(periodoBeanSwingJInternalFrameLocal.periodo,this.periodosForeignKey);

				periodoBeanSwingJInternalFrameLocal.actualizarRelaciones(periodoBeanSwingJInternalFrameLocal.periodo);

				guiaremisionLocal.setPeriodo(periodoBeanSwingJInternalFrameLocal.periodo);

				this.addItemDefectoCombosForeignKeyPeriodo();
				this.cargarCombosFramePeriodosForeignKey("Formulario");
				this.setActualPeriodoForeignKey(periodoBeanSwingJInternalFrameLocal.periodo.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(UsuarioDetalleFormJInternalFrame.class)) {
				UsuarioBeanSwingJInternalFrame usuarioBeanSwingJInternalFrameLocal=(UsuarioBeanSwingJInternalFrame) ((UsuarioDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				usuarioBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoUsuario(usuarioBeanSwingJInternalFrameLocal.getusuario(),true);
				usuarioBeanSwingJInternalFrameLocal.actualizarLista(usuarioBeanSwingJInternalFrameLocal.usuario,this.usuariosForeignKey);

				usuarioBeanSwingJInternalFrameLocal.actualizarRelaciones(usuarioBeanSwingJInternalFrameLocal.usuario);

				guiaremisionLocal.setUsuario(usuarioBeanSwingJInternalFrameLocal.usuario);

				this.addItemDefectoCombosForeignKeyUsuario();
				this.cargarCombosFrameUsuariosForeignKey("Formulario");
				this.setActualUsuarioForeignKey(usuarioBeanSwingJInternalFrameLocal.usuario.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(FormatoDetalleFormJInternalFrame.class)) {
				FormatoBeanSwingJInternalFrame formatoBeanSwingJInternalFrameLocal=(FormatoBeanSwingJInternalFrame) ((FormatoDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				formatoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoFormato(formatoBeanSwingJInternalFrameLocal.getformato(),true);
				formatoBeanSwingJInternalFrameLocal.actualizarLista(formatoBeanSwingJInternalFrameLocal.formato,this.formatosForeignKey);

				formatoBeanSwingJInternalFrameLocal.actualizarRelaciones(formatoBeanSwingJInternalFrameLocal.formato);

				guiaremisionLocal.setFormato(formatoBeanSwingJInternalFrameLocal.formato);

				this.addItemDefectoCombosForeignKeyFormato();
				this.cargarCombosFrameFormatosForeignKey("Formulario");
				this.setActualFormatoForeignKey(formatoBeanSwingJInternalFrameLocal.formato.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TipoPrecioDetalleFormJInternalFrame.class)) {
				TipoPrecioBeanSwingJInternalFrame tipoprecioBeanSwingJInternalFrameLocal=(TipoPrecioBeanSwingJInternalFrame) ((TipoPrecioDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				tipoprecioBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTipoPrecio(tipoprecioBeanSwingJInternalFrameLocal.gettipoprecio(),true);
				tipoprecioBeanSwingJInternalFrameLocal.actualizarLista(tipoprecioBeanSwingJInternalFrameLocal.tipoprecio,this.tipopreciosForeignKey);

				tipoprecioBeanSwingJInternalFrameLocal.actualizarRelaciones(tipoprecioBeanSwingJInternalFrameLocal.tipoprecio);

				guiaremisionLocal.setTipoPrecio(tipoprecioBeanSwingJInternalFrameLocal.tipoprecio);

				this.addItemDefectoCombosForeignKeyTipoPrecio();
				this.cargarCombosFrameTipoPreciosForeignKey("Formulario");
				this.setActualTipoPrecioForeignKey(tipoprecioBeanSwingJInternalFrameLocal.tipoprecio.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(MonedaDetalleFormJInternalFrame.class)) {
				MonedaBeanSwingJInternalFrame monedaBeanSwingJInternalFrameLocal=(MonedaBeanSwingJInternalFrame) ((MonedaDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				monedaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoMoneda(monedaBeanSwingJInternalFrameLocal.getmoneda(),true);
				monedaBeanSwingJInternalFrameLocal.actualizarLista(monedaBeanSwingJInternalFrameLocal.moneda,this.monedasForeignKey);

				monedaBeanSwingJInternalFrameLocal.actualizarRelaciones(monedaBeanSwingJInternalFrameLocal.moneda);

				guiaremisionLocal.setMoneda(monedaBeanSwingJInternalFrameLocal.moneda);

				this.addItemDefectoCombosForeignKeyMoneda();
				this.cargarCombosFrameMonedasForeignKey("Formulario");
				this.setActualMonedaForeignKey(monedaBeanSwingJInternalFrameLocal.moneda.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(ClienteDetalleFormJInternalFrame.class)) {
				ClienteBeanSwingJInternalFrame clienteBeanSwingJInternalFrameLocal=(ClienteBeanSwingJInternalFrame) ((ClienteDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				clienteBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoCliente(clienteBeanSwingJInternalFrameLocal.getcliente(),true);
				clienteBeanSwingJInternalFrameLocal.actualizarLista(clienteBeanSwingJInternalFrameLocal.cliente,this.clientesForeignKey);

				clienteBeanSwingJInternalFrameLocal.actualizarRelaciones(clienteBeanSwingJInternalFrameLocal.cliente);

				guiaremisionLocal.setCliente(clienteBeanSwingJInternalFrameLocal.cliente);

				this.addItemDefectoCombosForeignKeyCliente();
				this.cargarCombosFrameClientesForeignKey("Formulario");
				this.setActualClienteForeignKey(clienteBeanSwingJInternalFrameLocal.cliente.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(VendedorDetalleFormJInternalFrame.class)) {
				VendedorBeanSwingJInternalFrame vendedorBeanSwingJInternalFrameLocal=(VendedorBeanSwingJInternalFrame) ((VendedorDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				vendedorBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoVendedor(vendedorBeanSwingJInternalFrameLocal.getvendedor(),true);
				vendedorBeanSwingJInternalFrameLocal.actualizarLista(vendedorBeanSwingJInternalFrameLocal.vendedor,this.vendedorsForeignKey);

				vendedorBeanSwingJInternalFrameLocal.actualizarRelaciones(vendedorBeanSwingJInternalFrameLocal.vendedor);

				guiaremisionLocal.setVendedor(vendedorBeanSwingJInternalFrameLocal.vendedor);

				this.addItemDefectoCombosForeignKeyVendedor();
				this.cargarCombosFrameVendedorsForeignKey("Formulario");
				this.setActualVendedorForeignKey(vendedorBeanSwingJInternalFrameLocal.vendedor.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(FacturaDetalleFormJInternalFrame.class)) {
				FacturaBeanSwingJInternalFrame facturaBeanSwingJInternalFrameLocal=(FacturaBeanSwingJInternalFrame) ((FacturaDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				facturaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoFactura(facturaBeanSwingJInternalFrameLocal.getfactura(),true);
				facturaBeanSwingJInternalFrameLocal.actualizarLista(facturaBeanSwingJInternalFrameLocal.factura,this.facturasForeignKey);

				facturaBeanSwingJInternalFrameLocal.actualizarRelaciones(facturaBeanSwingJInternalFrameLocal.factura);

				guiaremisionLocal.setFactura(facturaBeanSwingJInternalFrameLocal.factura);

				this.addItemDefectoCombosForeignKeyFactura();
				this.cargarCombosFrameFacturasForeignKey("Formulario");
				this.setActualFacturaForeignKey(facturaBeanSwingJInternalFrameLocal.factura.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TransportistaDetalleFormJInternalFrame.class)) {
				TransportistaBeanSwingJInternalFrame transportistaBeanSwingJInternalFrameLocal=(TransportistaBeanSwingJInternalFrame) ((TransportistaDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				transportistaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTransportista(transportistaBeanSwingJInternalFrameLocal.gettransportista(),true);
				transportistaBeanSwingJInternalFrameLocal.actualizarLista(transportistaBeanSwingJInternalFrameLocal.transportista,this.transportistasForeignKey);

				transportistaBeanSwingJInternalFrameLocal.actualizarRelaciones(transportistaBeanSwingJInternalFrameLocal.transportista);

				guiaremisionLocal.setTransportista(transportistaBeanSwingJInternalFrameLocal.transportista);

				this.addItemDefectoCombosForeignKeyTransportista();
				this.cargarCombosFrameTransportistasForeignKey("Formulario");
				this.setActualTransportistaForeignKey(transportistaBeanSwingJInternalFrameLocal.transportista.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(ConsultorDetalleFormJInternalFrame.class)) {
				ConsultorBeanSwingJInternalFrame consultorBeanSwingJInternalFrameLocal=(ConsultorBeanSwingJInternalFrame) ((ConsultorDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				consultorBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoConsultor(consultorBeanSwingJInternalFrameLocal.getconsultor(),true);
				consultorBeanSwingJInternalFrameLocal.actualizarLista(consultorBeanSwingJInternalFrameLocal.consultor,this.consultorsForeignKey);

				consultorBeanSwingJInternalFrameLocal.actualizarRelaciones(consultorBeanSwingJInternalFrameLocal.consultor);

				guiaremisionLocal.setConsultor(consultorBeanSwingJInternalFrameLocal.consultor);

				this.addItemDefectoCombosForeignKeyConsultor();
				this.cargarCombosFrameConsultorsForeignKey("Formulario");
				this.setActualConsultorForeignKey(consultorBeanSwingJInternalFrameLocal.consultor.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TransporteDetalleFormJInternalFrame.class)) {
				TransporteBeanSwingJInternalFrame transporteBeanSwingJInternalFrameLocal=(TransporteBeanSwingJInternalFrame) ((TransporteDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				transporteBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTransporte(transporteBeanSwingJInternalFrameLocal.gettransporte(),true);
				transporteBeanSwingJInternalFrameLocal.actualizarLista(transporteBeanSwingJInternalFrameLocal.transporte,this.transportesForeignKey);

				transporteBeanSwingJInternalFrameLocal.actualizarRelaciones(transporteBeanSwingJInternalFrameLocal.transporte);

				guiaremisionLocal.setTransporte(transporteBeanSwingJInternalFrameLocal.transporte);

				this.addItemDefectoCombosForeignKeyTransporte();
				this.cargarCombosFrameTransportesForeignKey("Formulario");
				this.setActualTransporteForeignKey(transporteBeanSwingJInternalFrameLocal.transporte.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(SubClienteDetalleFormJInternalFrame.class)) {
				SubClienteBeanSwingJInternalFrame subclienteBeanSwingJInternalFrameLocal=(SubClienteBeanSwingJInternalFrame) ((SubClienteDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				subclienteBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoSubCliente(subclienteBeanSwingJInternalFrameLocal.getsubcliente(),true);
				subclienteBeanSwingJInternalFrameLocal.actualizarLista(subclienteBeanSwingJInternalFrameLocal.subcliente,this.subclientesForeignKey);

				subclienteBeanSwingJInternalFrameLocal.actualizarRelaciones(subclienteBeanSwingJInternalFrameLocal.subcliente);

				guiaremisionLocal.setSubCliente(subclienteBeanSwingJInternalFrameLocal.subcliente);

				this.addItemDefectoCombosForeignKeySubCliente();
				this.cargarCombosFrameSubClientesForeignKey("Formulario");
				this.setActualSubClienteForeignKey(subclienteBeanSwingJInternalFrameLocal.subcliente.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(EmpleadoDetalleFormJInternalFrame.class)) {
				EmpleadoBeanSwingJInternalFrame empleadoBeanSwingJInternalFrameLocal=(EmpleadoBeanSwingJInternalFrame) ((EmpleadoDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				empleadoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoEmpleado(empleadoBeanSwingJInternalFrameLocal.getempleado(),true);
				empleadoBeanSwingJInternalFrameLocal.actualizarLista(empleadoBeanSwingJInternalFrameLocal.empleado,this.empleadosForeignKey);

				empleadoBeanSwingJInternalFrameLocal.actualizarRelaciones(empleadoBeanSwingJInternalFrameLocal.empleado);

				guiaremisionLocal.setEmpleado(empleadoBeanSwingJInternalFrameLocal.empleado);

				this.addItemDefectoCombosForeignKeyEmpleado();
				this.cargarCombosFrameEmpleadosForeignKey("Formulario");
				this.setActualEmpleadoForeignKey(empleadoBeanSwingJInternalFrameLocal.empleado.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(CiudadDetalleFormJInternalFrame.class)) {
				CiudadBeanSwingJInternalFrame ciudadorigenBeanSwingJInternalFrameLocal=(CiudadBeanSwingJInternalFrame) ((CiudadDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				ciudadorigenBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoCiudad(ciudadorigenBeanSwingJInternalFrameLocal.getciudad(),true);
				ciudadorigenBeanSwingJInternalFrameLocal.actualizarLista(ciudadorigenBeanSwingJInternalFrameLocal.ciudad,this.ciudadorigensForeignKey);

				ciudadorigenBeanSwingJInternalFrameLocal.actualizarRelaciones(ciudadorigenBeanSwingJInternalFrameLocal.ciudad);

				guiaremisionLocal.setCiudadOrigen(ciudadorigenBeanSwingJInternalFrameLocal.ciudad);

				this.addItemDefectoCombosForeignKeyCiudadOrigen();
				this.cargarCombosFrameCiudadOrigensForeignKey("Formulario");
				this.setActualCiudadOrigenForeignKey(ciudadorigenBeanSwingJInternalFrameLocal.ciudad.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(CiudadDetalleFormJInternalFrame.class)) {
				CiudadBeanSwingJInternalFrame ciudaddestinoBeanSwingJInternalFrameLocal=(CiudadBeanSwingJInternalFrame) ((CiudadDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				ciudaddestinoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoCiudad(ciudaddestinoBeanSwingJInternalFrameLocal.getciudad(),true);
				ciudaddestinoBeanSwingJInternalFrameLocal.actualizarLista(ciudaddestinoBeanSwingJInternalFrameLocal.ciudad,this.ciudaddestinosForeignKey);

				ciudaddestinoBeanSwingJInternalFrameLocal.actualizarRelaciones(ciudaddestinoBeanSwingJInternalFrameLocal.ciudad);

				guiaremisionLocal.setCiudadDestino(ciudaddestinoBeanSwingJInternalFrameLocal.ciudad);

				this.addItemDefectoCombosForeignKeyCiudadDestino();
				this.cargarCombosFrameCiudadDestinosForeignKey("Formulario");
				this.setActualCiudadDestinoForeignKey(ciudaddestinoBeanSwingJInternalFrameLocal.ciudad.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TipoLlamadaDetalleFormJInternalFrame.class)) {
				TipoLlamadaBeanSwingJInternalFrame tipollamadaBeanSwingJInternalFrameLocal=(TipoLlamadaBeanSwingJInternalFrame) ((TipoLlamadaDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				tipollamadaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTipoLlamada(tipollamadaBeanSwingJInternalFrameLocal.gettipollamada(),true);
				tipollamadaBeanSwingJInternalFrameLocal.actualizarLista(tipollamadaBeanSwingJInternalFrameLocal.tipollamada,this.tipollamadasForeignKey);

				tipollamadaBeanSwingJInternalFrameLocal.actualizarRelaciones(tipollamadaBeanSwingJInternalFrameLocal.tipollamada);

				guiaremisionLocal.setTipoLlamada(tipollamadaBeanSwingJInternalFrameLocal.tipollamada);

				this.addItemDefectoCombosForeignKeyTipoLlamada();
				this.cargarCombosFrameTipoLlamadasForeignKey("Formulario");
				this.setActualTipoLlamadaForeignKey(tipollamadaBeanSwingJInternalFrameLocal.tipollamada.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TipoCambioDetalleFormJInternalFrame.class)) {
				TipoCambioBeanSwingJInternalFrame tipocambioBeanSwingJInternalFrameLocal=(TipoCambioBeanSwingJInternalFrame) ((TipoCambioDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				tipocambioBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTipoCambio(tipocambioBeanSwingJInternalFrameLocal.gettipocambio(),true);
				tipocambioBeanSwingJInternalFrameLocal.actualizarLista(tipocambioBeanSwingJInternalFrameLocal.tipocambio,this.tipocambiosForeignKey);

				tipocambioBeanSwingJInternalFrameLocal.actualizarRelaciones(tipocambioBeanSwingJInternalFrameLocal.tipocambio);

				guiaremisionLocal.setTipoCambio(tipocambioBeanSwingJInternalFrameLocal.tipocambio);

				this.addItemDefectoCombosForeignKeyTipoCambio();
				this.cargarCombosFrameTipoCambiosForeignKey("Formulario");
				this.setActualTipoCambioForeignKey(tipocambioBeanSwingJInternalFrameLocal.tipocambio.getId(),false,"Formulario");
			}
		
		}
	}
	
	public Boolean validarGuiaRemisionActual() throws Exception {
		Boolean estaValidado=false;
		this.inicializarInvalidValues();
		
		/*
		int intSelectedRow = this.jTableDatosGuiaRemision.getSelectedRow();
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.guiaremision =(GuiaRemision) this.guiaremisionLogic.getGuiaRemisions().toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
			this.guiaremision =(GuiaRemision) this.guiaremisions.toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
		}
		//ARCHITECTURE
		*/
		
		this.invalidValues = guiaremisionValidator.getInvalidValues(this.guiaremision);
					
		if(this.invalidValues==null || this.invalidValues.length<=0) {
			estaValidado=true;
		} else {
			this.mostrarInvalidValues();	
		}
		
		return estaValidado;
	}
	
	public void actualizarLista(GuiaRemision guiaremision,List<GuiaRemision> guiaremisions) throws Exception {
		try	{		
			GuiaRemisionConstantesFunciones.actualizarLista(guiaremision,guiaremisions,this.guiaremisionSessionBean.getEsGuardarRelacionado());		
		} catch(Exception e) {
			throw e;
		}
	}		
	
	public void actualizarSelectedLista(GuiaRemision guiaremision,List<GuiaRemision> guiaremisions) throws Exception {
		try	{			
			GuiaRemisionConstantesFunciones.actualizarSelectedLista(guiaremision,guiaremisions);
		} catch(Exception e) {
			throw e;
		}
	}	
	
	public Boolean tieneElementosSeleccionados() throws Exception {
		Boolean tiene=false;
		
		List<GuiaRemision> guiaremisionsLocal=null;
		
		try	{			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				guiaremisionsLocal=this.guiaremisionLogic.getGuiaRemisions();
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
				guiaremisionsLocal=this.guiaremisions;
			}
			//ARCHITECTURE
		
			for(GuiaRemision guiaremisionLocal:guiaremisionsLocal) {
				if(this.permiteMantenimiento(guiaremisionLocal) && guiaremisionLocal.getIsSelected()) {
					tiene=true;
					break;
				}
			}
		} catch(Exception e) {
			throw e;
		}
		
		return tiene;
	}			
	
	public void mostrarInvalidValues() throws Exception {
		String sMensaje="";
				
		for (InvalidValue invalidValue : this.invalidValues) {
			sMensaje+="\r\n"+GuiaRemisionConstantesFunciones.getGuiaRemisionLabelDesdeNombre(invalidValue.getPropertyName())+"->"+invalidValue.getMessage();
			
			//MOSTRAR CAMPOS INVALIDOS
			if(invalidValue.getPropertyName().equals(GuiaRemisionConstantesFunciones.IDEMPRESA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormGuiaRemision.jLabelid_empresaGuiaRemision,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(GuiaRemisionConstantesFunciones.IDSUCURSAL)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormGuiaRemision.jLabelid_sucursalGuiaRemision,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(GuiaRemisionConstantesFunciones.IDEJERCICIO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormGuiaRemision.jLabelid_ejercicioGuiaRemision,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(GuiaRemisionConstantesFunciones.IDPERIODO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormGuiaRemision.jLabelid_periodoGuiaRemision,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(GuiaRemisionConstantesFunciones.IDUSUARIO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormGuiaRemision.jLabelid_usuarioGuiaRemision,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(GuiaRemisionConstantesFunciones.SECUENCIAL)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormGuiaRemision.jLabelsecuencialGuiaRemision,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(GuiaRemisionConstantesFunciones.FECHAEMISION)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormGuiaRemision.jLabelfecha_emisionGuiaRemision,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(GuiaRemisionConstantesFunciones.IDFORMATO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormGuiaRemision.jLabelid_formatoGuiaRemision,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(GuiaRemisionConstantesFunciones.IDTIPOPRECIO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormGuiaRemision.jLabelid_tipo_precioGuiaRemision,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(GuiaRemisionConstantesFunciones.IDMONEDA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormGuiaRemision.jLabelid_monedaGuiaRemision,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(GuiaRemisionConstantesFunciones.NUMEROCAMION)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormGuiaRemision.jLabelnumero_camionGuiaRemision,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(GuiaRemisionConstantesFunciones.IDCLIENTE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormGuiaRemision.jLabelid_clienteGuiaRemision,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(GuiaRemisionConstantesFunciones.IDVENDEDOR)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormGuiaRemision.jLabelid_vendedorGuiaRemision,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(GuiaRemisionConstantesFunciones.IDFACTURA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormGuiaRemision.jLabelid_facturaGuiaRemision,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(GuiaRemisionConstantesFunciones.IDTRANSPORTISTA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormGuiaRemision.jLabelid_transportistaGuiaRemision,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(GuiaRemisionConstantesFunciones.IDENTIFICACION)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormGuiaRemision.jLabelidentificacionGuiaRemision,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(GuiaRemisionConstantesFunciones.FECHAORIGEN)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormGuiaRemision.jLabelfecha_origenGuiaRemision,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(GuiaRemisionConstantesFunciones.FECHADESTINO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormGuiaRemision.jLabelfecha_destinoGuiaRemision,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(GuiaRemisionConstantesFunciones.TRANSPORTECODIGO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormGuiaRemision.jLabeltransporte_codigoGuiaRemision,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(GuiaRemisionConstantesFunciones.CANTIDADBULTOS)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormGuiaRemision.jLabelcantidad_bultosGuiaRemision,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(GuiaRemisionConstantesFunciones.IDCONSULTOR)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormGuiaRemision.jLabelid_consultorGuiaRemision,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(GuiaRemisionConstantesFunciones.IDTRANSPORTE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormGuiaRemision.jLabelid_transporteGuiaRemision,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(GuiaRemisionConstantesFunciones.IDSUBCLIENTE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormGuiaRemision.jLabelid_sub_clienteGuiaRemision,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(GuiaRemisionConstantesFunciones.IDEMPLEADO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormGuiaRemision.jLabelid_empleadoGuiaRemision,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(GuiaRemisionConstantesFunciones.IDCIUDADORIGEN)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormGuiaRemision.jLabelid_ciudad_origenGuiaRemision,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(GuiaRemisionConstantesFunciones.IDCIUDADDESTINO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormGuiaRemision.jLabelid_ciudad_destinoGuiaRemision,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(GuiaRemisionConstantesFunciones.IDTIPOLLAMADA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormGuiaRemision.jLabelid_tipo_llamadaGuiaRemision,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(GuiaRemisionConstantesFunciones.HORAINICIO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormGuiaRemision.jLabelhora_inicioGuiaRemision,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(GuiaRemisionConstantesFunciones.HORAFIN)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormGuiaRemision.jLabelhora_finGuiaRemision,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(GuiaRemisionConstantesFunciones.CUPO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormGuiaRemision.jLabelcupoGuiaRemision,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(GuiaRemisionConstantesFunciones.SALDO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormGuiaRemision.jLabelsaldoGuiaRemision,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(GuiaRemisionConstantesFunciones.DOCUMENTO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormGuiaRemision.jLabeldocumentoGuiaRemision,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(GuiaRemisionConstantesFunciones.DISPONIBLE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormGuiaRemision.jLabeldisponibleGuiaRemision,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(GuiaRemisionConstantesFunciones.DESCRIPCION)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormGuiaRemision.jLabeldescripcionGuiaRemision,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(GuiaRemisionConstantesFunciones.TOTALIVA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormGuiaRemision.jLabeltotal_ivaGuiaRemision,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(GuiaRemisionConstantesFunciones.TOTALSINIVA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormGuiaRemision.jLabeltotal_sin_ivaGuiaRemision,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(GuiaRemisionConstantesFunciones.DESCUENTO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormGuiaRemision.jLabeldescuentoGuiaRemision,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(GuiaRemisionConstantesFunciones.FLETE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormGuiaRemision.jLabelfleteGuiaRemision,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(GuiaRemisionConstantesFunciones.OTRO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormGuiaRemision.jLabelotroGuiaRemision,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(GuiaRemisionConstantesFunciones.FINANCIAMIENTO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormGuiaRemision.jLabelfinanciamientoGuiaRemision,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(GuiaRemisionConstantesFunciones.IVA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormGuiaRemision.jLabelivaGuiaRemision,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(GuiaRemisionConstantesFunciones.TOTAL)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormGuiaRemision.jLabeltotalGuiaRemision,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(GuiaRemisionConstantesFunciones.MONTORETENCION)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormGuiaRemision.jLabelmonto_retencionGuiaRemision,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(GuiaRemisionConstantesFunciones.IDTIPOCAMBIO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormGuiaRemision.jLabelid_tipo_cambioGuiaRemision,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(GuiaRemisionConstantesFunciones.FECHA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormGuiaRemision.jLabelfechaGuiaRemision,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(GuiaRemisionConstantesFunciones.RUCCLIENTE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormGuiaRemision.jLabelruc_clienteGuiaRemision,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(GuiaRemisionConstantesFunciones.NOMBRECLIENTE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormGuiaRemision.jLabelnombre_clienteGuiaRemision,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(GuiaRemisionConstantesFunciones.TELEFONOCLIENTE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormGuiaRemision.jLabeltelefono_clienteGuiaRemision,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(GuiaRemisionConstantesFunciones.DIRECCIONCLIENTE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormGuiaRemision.jLabeldireccion_clienteGuiaRemision,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(GuiaRemisionConstantesFunciones.NUMEROPREIMPRESO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormGuiaRemision.jLabelnumero_pre_impresoGuiaRemision,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(GuiaRemisionConstantesFunciones.PESOBRUTO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormGuiaRemision.jLabelpeso_brutoGuiaRemision,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(GuiaRemisionConstantesFunciones.FECHAAUTORIZACION)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormGuiaRemision.jLabelfecha_autorizacionGuiaRemision,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(GuiaRemisionConstantesFunciones.FECHAVENCIMIENTO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormGuiaRemision.jLabelfecha_vencimientoGuiaRemision,invalidValue.getMessage());}
        }
		
		
		if(!sMensaje.equals("")) {
			//JOptionPane.showMessageDialog(this,sMensaje,"VALIDACION ",JOptionPane.ERROR_MESSAGE);
			throw new Exception(sMensaje);			
		}
		
		/*
		System.out.println(invalidValue);
        System.out.println("message=" + invalidValue.getMessage());
        System.out.println("propertyName=" + invalidValue.getPropertyName());
        System.out.println("propertyPath=" + invalidValue.getPropertyPath());
        System.out.println("value=" + invalidValue.getValue());
        */
	}		
	
	public void inicializarInvalidValues() throws Exception {
		String sMensaje="";	
		
		if(this.jInternalFrameDetalleFormGuiaRemision!=null) {
		
		//MOSTRAR CAMPOS INVALIDOS
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormGuiaRemision.jLabelid_empresaGuiaRemision,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormGuiaRemision.jLabelid_sucursalGuiaRemision,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormGuiaRemision.jLabelid_ejercicioGuiaRemision,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormGuiaRemision.jLabelid_periodoGuiaRemision,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormGuiaRemision.jLabelid_usuarioGuiaRemision,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormGuiaRemision.jLabelsecuencialGuiaRemision,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormGuiaRemision.jLabelfecha_emisionGuiaRemision,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormGuiaRemision.jLabelid_formatoGuiaRemision,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormGuiaRemision.jLabelid_tipo_precioGuiaRemision,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormGuiaRemision.jLabelid_monedaGuiaRemision,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormGuiaRemision.jLabelnumero_camionGuiaRemision,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormGuiaRemision.jLabelid_clienteGuiaRemision,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormGuiaRemision.jLabelid_vendedorGuiaRemision,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormGuiaRemision.jLabelid_facturaGuiaRemision,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormGuiaRemision.jLabelid_transportistaGuiaRemision,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormGuiaRemision.jLabelidentificacionGuiaRemision,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormGuiaRemision.jLabelfecha_origenGuiaRemision,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormGuiaRemision.jLabelfecha_destinoGuiaRemision,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormGuiaRemision.jLabeltransporte_codigoGuiaRemision,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormGuiaRemision.jLabelcantidad_bultosGuiaRemision,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormGuiaRemision.jLabelid_consultorGuiaRemision,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormGuiaRemision.jLabelid_transporteGuiaRemision,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormGuiaRemision.jLabelid_sub_clienteGuiaRemision,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormGuiaRemision.jLabelid_empleadoGuiaRemision,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormGuiaRemision.jLabelid_ciudad_origenGuiaRemision,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormGuiaRemision.jLabelid_ciudad_destinoGuiaRemision,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormGuiaRemision.jLabelid_tipo_llamadaGuiaRemision,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormGuiaRemision.jLabelhora_inicioGuiaRemision,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormGuiaRemision.jLabelhora_finGuiaRemision,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormGuiaRemision.jLabelcupoGuiaRemision,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormGuiaRemision.jLabelsaldoGuiaRemision,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormGuiaRemision.jLabeldocumentoGuiaRemision,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormGuiaRemision.jLabeldisponibleGuiaRemision,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormGuiaRemision.jLabeldescripcionGuiaRemision,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormGuiaRemision.jLabeltotal_ivaGuiaRemision,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormGuiaRemision.jLabeltotal_sin_ivaGuiaRemision,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormGuiaRemision.jLabeldescuentoGuiaRemision,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormGuiaRemision.jLabelfleteGuiaRemision,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormGuiaRemision.jLabelotroGuiaRemision,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormGuiaRemision.jLabelfinanciamientoGuiaRemision,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormGuiaRemision.jLabelivaGuiaRemision,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormGuiaRemision.jLabeltotalGuiaRemision,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormGuiaRemision.jLabelmonto_retencionGuiaRemision,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormGuiaRemision.jLabelid_tipo_cambioGuiaRemision,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormGuiaRemision.jLabelfechaGuiaRemision,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormGuiaRemision.jLabelruc_clienteGuiaRemision,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormGuiaRemision.jLabelnombre_clienteGuiaRemision,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormGuiaRemision.jLabeltelefono_clienteGuiaRemision,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormGuiaRemision.jLabeldireccion_clienteGuiaRemision,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormGuiaRemision.jLabelnumero_pre_impresoGuiaRemision,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormGuiaRemision.jLabelpeso_brutoGuiaRemision,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormGuiaRemision.jLabelfecha_autorizacionGuiaRemision,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormGuiaRemision.jLabelfecha_vencimientoGuiaRemision,"");
		
		}
	}
	
	
	
	public void actualizarObjetoPadreFk(String sTipo)  throws Exception {
		if(sTipo.equals("XXXAuxiliar")) {
		
		}
		
		 else  if(sTipo.equals("DetalleGuiaRemision")) {
			if(this.guiaremision==null) {
				this.guiaremision= new GuiaRemision();
			}

			if(this.guiaremisionSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoGuiaRemision
				this.setVariablesFormularioToObjetoActualGuiaRemision(this.guiaremision,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysGuiaRemision(this.guiaremision);

				this.jInternalFrameDetalleFormGuiaRemision.detalleguiaremisionBeanSwingJInternalFrame.getdetalleguiaremision().setGuiaRemision(this.guiaremision);
			}

			return;
		}
	}
	
	public void nuevoPreparar() throws Exception {
		this.nuevoPreparar(false);
	}
	
	public void nuevoPreparar(Boolean esNuevoGuardarCambios) throws Exception {
		this.iIdNuevoGuiaRemision--;	
		
		
		this.guiaremisionAux=new GuiaRemision();
		
		this.guiaremisionAux.setId(this.iIdNuevoGuiaRemision);
		this.guiaremisionAux.setIsChanged(true);
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.guiaremisionLogic.getGuiaRemisions().add(this.guiaremisionAux);
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			this.guiaremisions.add(this.guiaremisionAux);
		}
		//ARCHITECTURE
		
		this.guiaremision=this.guiaremisionAux;
		
		if(GuiaRemisionJInternalFrame.ISBINDING_MANUAL_TABLA) {
			this.setVariablesObjetoActualToFormularioGuiaRemision(this.guiaremision);
			this.setVariablesObjetoActualToFormularioForeignKeyGuiaRemision(this.guiaremision);
		}
				
		//this.setDefaultControlesGuiaRemision();
		
		this.inicializarInvalidValues();
				
		//SELECCIONA ITEM DEFECTO-->SET O SELECTED INDEX
		this.setItemDefectoCombosForeignKeyGuiaRemision();
		
		
		//INICIALIZA VARIABLES COMBOS GLOBALES A FORMULARIO(ParametroGeneralUsuario)
		this.setVariablesGlobalesCombosForeignKeyGuiaRemision();
		
		//INICIALIZA VARIABLES COMBOS GLOBALES AUXILIARES A FORMULARIO(Anio,Mes)
		//this.setVariablesGlobalesAuxiliaresCombosForeignKeyGuiaRemision();
		
		//SI TIENE FOREIGN KEY CON CAMPO esDefecto=true, SE ACTUALIZA A OBJETO ACTUAL
		this.setVariablesForeignKeyObjetoBeanDefectoActualToObjetoActualGuiaRemision(this.guiaremisionBean,this.guiaremision,false,false);
		
		//ACTUALIZA VALORES PARA EL OBJETO ACTUAL ANTES DE ENVIARLO A ACTUALIZAR
		this.setVariablesFormularioToObjetoActualForeignKeysGuiaRemision(this.guiaremision);
				
		ArrayList<Classe> classes=new ArrayList<Classe>();
		
		if(this.jInternalFrameParent!=null) {
			this.jInternalFrameParent.actualizarObjetoPadreFk(GuiaRemisionConstantesFunciones.CLASSNAME);
		}	
		
		
		if(this.guiaremisionSessionBean.getConGuardarRelaciones()) {
			classes=GuiaRemisionConstantesFunciones.getClassesRelationshipsOfGuiaRemision(new ArrayList<Classe>(),DeepLoadType.NONE);
		}
		
		this.classesActual=new ArrayList<Classe>();
		this.classesActual.addAll(classes);
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {						
			this.guiaremisionReturnGeneral=guiaremisionLogic.procesarEventosGuiaRemisionsWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,EventoGlobalTipo.FORM_RECARGAR,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.guiaremisionLogic.getGuiaRemisions(),this.guiaremision,this.guiaremisionParameterGeneral,this.isEsNuevoGuiaRemision,classes);//this.guiaremisionLogic.getGuiaRemision()
						
		} else if(Constantes.ISUSAEJBREMOTE) {
						
		} else if(Constantes.ISUSAEJBHOME) {
		}
		//ARCHITECTURE
		
		//ACTUALIZA VARIABLES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
		//this.setVariablesObjetoReturnGeneralToBeanGuiaRemision(this.guiaremisionReturnGeneral,this.guiaremisionBean,false);
		
		if(this.guiaremisionReturnGeneral.getConRecargarPropiedades()) {
			//INICIALIZA VARIABLES COMBOS NORMALES (FK)
			this.setVariablesObjetoActualToFormularioForeignKeyGuiaRemision(this.guiaremisionReturnGeneral.getGuiaRemision());
			
			//INICIALIZA VARIABLES NORMALES A FORMULARIO(SIN FK)
			this.setVariablesObjetoActualToFormularioGuiaRemision(this.guiaremisionReturnGeneral.getGuiaRemision());
		}
		
		if(this.guiaremisionReturnGeneral.getConRecargarRelaciones()) {
			//INICIALIZA VARIABLES RELACIONES A FORMULARIO
			this.setVariablesRelacionesObjetoActualToFormularioGuiaRemision(this.guiaremisionReturnGeneral.getGuiaRemision(),classes);//this.guiaremisionBean);	
		}
			
		//ACTUALIZA VARIABLES FORMULARIO A OBJETO ACTUAL (PARA NUEVO TABLA O GUARDAR CAMBIOS
		if(esNuevoGuardarCambios) {
			this.setVariablesFormularioToObjetoActualGuiaRemision(this.guiaremision,false);
		}
		
		//INICIALIZA VARIABLES COMBOS DEFAULT DEL PROYECTO(|DEFAULT para FK)
		//this.setVariablesDefaultCombosForeignKeyGuiaRemision();
		
		//INICIALIZA VARIABLES COMBOS PARAMETRO DEL PROYECTO(|VALORPARAM Era para ParametroModulo, ahora en logic)
		//this.setVariablesParametroCombosForeignKeyGuiaRemision();						
		
		if(!esNuevoGuardarCambios) {
			//INICIALIZA VARIABLES POR OPCION MENU
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			GuiaRemisionBeanSwingJInternalFrameAdditional.RecargarFormGuiaRemision(this,"NUEVO_PREPARAR","",this.arrDatoGeneral);
		
			//NO FUNCIONA BINDINGS			
			this.inicializarActualizarBindingGuiaRemision(false);
						
			if(guiaremisionSessionBean.getConGuardarRelaciones()) {
				//DEBERIA YA ESTAR CARGADO LOS COMBOS Y SI SE NECESITA ALGO MAS SE DEBE CREAR FUNCION LIMITADA
				//SI DEBE TRAER Y RESETEAR TABLA
				

				if(this.jInternalFrameDetalleFormGuiaRemision.detalleguiaremisionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormGuiaRemision.detalleguiaremisionBeanSwingJInternalFrame.detalleguiaremisionSessionBean.getEsGuardarRelacionado() && DetalleGuiaRemisionJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonDetalleGuiaRemisionActionPerformed(null,-1,false,true,null);
				}				
			}
				
			//SI ES MANUAL
			if(GuiaRemisionJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualGuiaRemision();
			}
			
			this.actualizarVisualTableDatosGuiaRemision();
			
			this.jTableDatosGuiaRemision.setRowSelectionInterval(this.getIndiceNuevoGuiaRemision(), this.getIndiceNuevoGuiaRemision());
			
			this.seleccionarFilaTablaGuiaRemisionActual();
						
			this.actualizarEstadoCeldasBotonesGuiaRemision("a", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
		
		}		
	}
	
	public void habilitarDeshabilitarControlesGuiaRemision(Boolean isHabilitar) throws Exception {
		
		this.jInternalFrameDetalleFormGuiaRemision.jTextFieldsecuencialGuiaRemision.setEnabled(isHabilitar && this.guiaremisionConstantesFunciones.activarsecuencialGuiaRemision);
		this.jInternalFrameDetalleFormGuiaRemision.jDateChooserfecha_emisionGuiaRemision.setEnabled(isHabilitar && this.guiaremisionConstantesFunciones.activarfecha_emisionGuiaRemision);
		this.jInternalFrameDetalleFormGuiaRemision.jTextFieldnumero_camionGuiaRemision.setEnabled(isHabilitar && this.guiaremisionConstantesFunciones.activarnumero_camionGuiaRemision);
		this.jInternalFrameDetalleFormGuiaRemision.jTextFieldidentificacionGuiaRemision.setEnabled(isHabilitar && this.guiaremisionConstantesFunciones.activaridentificacionGuiaRemision);
		this.jInternalFrameDetalleFormGuiaRemision.jDateChooserfecha_origenGuiaRemision.setEnabled(isHabilitar && this.guiaremisionConstantesFunciones.activarfecha_origenGuiaRemision);
		this.jInternalFrameDetalleFormGuiaRemision.jDateChooserfecha_destinoGuiaRemision.setEnabled(isHabilitar && this.guiaremisionConstantesFunciones.activarfecha_destinoGuiaRemision);
		this.jInternalFrameDetalleFormGuiaRemision.jTextAreatransporte_codigoGuiaRemision.setEnabled(isHabilitar && this.guiaremisionConstantesFunciones.activartransporte_codigoGuiaRemision);
		this.jInternalFrameDetalleFormGuiaRemision.jTextFieldcantidad_bultosGuiaRemision.setEnabled(isHabilitar && this.guiaremisionConstantesFunciones.activarcantidad_bultosGuiaRemision);
		this.jInternalFrameDetalleFormGuiaRemision.jSpinnerhora_inicioGuiaRemision.setEnabled(isHabilitar && this.guiaremisionConstantesFunciones.activarhora_inicioGuiaRemision);
		this.jInternalFrameDetalleFormGuiaRemision.jSpinnerhora_finGuiaRemision.setEnabled(isHabilitar && this.guiaremisionConstantesFunciones.activarhora_finGuiaRemision);
		this.jInternalFrameDetalleFormGuiaRemision.jTextFieldcupoGuiaRemision.setEnabled(isHabilitar && this.guiaremisionConstantesFunciones.activarcupoGuiaRemision);
		this.jInternalFrameDetalleFormGuiaRemision.jTextFieldsaldoGuiaRemision.setEnabled(isHabilitar && this.guiaremisionConstantesFunciones.activarsaldoGuiaRemision);
		this.jInternalFrameDetalleFormGuiaRemision.jTextFielddocumentoGuiaRemision.setEnabled(isHabilitar && this.guiaremisionConstantesFunciones.activardocumentoGuiaRemision);
		this.jInternalFrameDetalleFormGuiaRemision.jTextFielddisponibleGuiaRemision.setEnabled(isHabilitar && this.guiaremisionConstantesFunciones.activardisponibleGuiaRemision);
		this.jInternalFrameDetalleFormGuiaRemision.jTextAreadescripcionGuiaRemision.setEnabled(isHabilitar && this.guiaremisionConstantesFunciones.activardescripcionGuiaRemision);
		this.jInternalFrameDetalleFormGuiaRemision.jTextFieldtotal_ivaGuiaRemision.setEnabled(isHabilitar && this.guiaremisionConstantesFunciones.activartotal_ivaGuiaRemision);
		this.jInternalFrameDetalleFormGuiaRemision.jTextFieldtotal_sin_ivaGuiaRemision.setEnabled(isHabilitar && this.guiaremisionConstantesFunciones.activartotal_sin_ivaGuiaRemision);
		this.jInternalFrameDetalleFormGuiaRemision.jTextFielddescuentoGuiaRemision.setEnabled(isHabilitar && this.guiaremisionConstantesFunciones.activardescuentoGuiaRemision);
		this.jInternalFrameDetalleFormGuiaRemision.jTextFieldfleteGuiaRemision.setEnabled(isHabilitar && this.guiaremisionConstantesFunciones.activarfleteGuiaRemision);
		this.jInternalFrameDetalleFormGuiaRemision.jTextFieldotroGuiaRemision.setEnabled(isHabilitar && this.guiaremisionConstantesFunciones.activarotroGuiaRemision);
		this.jInternalFrameDetalleFormGuiaRemision.jTextFieldfinanciamientoGuiaRemision.setEnabled(isHabilitar && this.guiaremisionConstantesFunciones.activarfinanciamientoGuiaRemision);
		this.jInternalFrameDetalleFormGuiaRemision.jTextFieldivaGuiaRemision.setEnabled(isHabilitar && this.guiaremisionConstantesFunciones.activarivaGuiaRemision);
		this.jInternalFrameDetalleFormGuiaRemision.jTextFieldtotalGuiaRemision.setEnabled(isHabilitar && this.guiaremisionConstantesFunciones.activartotalGuiaRemision);//
		this.jInternalFrameDetalleFormGuiaRemision.jTextFieldmonto_retencionGuiaRemision.setEnabled(isHabilitar && this.guiaremisionConstantesFunciones.activarmonto_retencionGuiaRemision);//
		this.jInternalFrameDetalleFormGuiaRemision.jDateChooserfechaGuiaRemision.setEnabled(isHabilitar && this.guiaremisionConstantesFunciones.activarfechaGuiaRemision);//
		this.jInternalFrameDetalleFormGuiaRemision.jTextFieldruc_clienteGuiaRemision.setEnabled(isHabilitar && this.guiaremisionConstantesFunciones.activarruc_clienteGuiaRemision);//
		this.jInternalFrameDetalleFormGuiaRemision.jTextAreanombre_clienteGuiaRemision.setEnabled(isHabilitar && this.guiaremisionConstantesFunciones.activarnombre_clienteGuiaRemision);//
		this.jInternalFrameDetalleFormGuiaRemision.jTextAreatelefono_clienteGuiaRemision.setEnabled(isHabilitar && this.guiaremisionConstantesFunciones.activartelefono_clienteGuiaRemision);//
		this.jInternalFrameDetalleFormGuiaRemision.jTextAreadireccion_clienteGuiaRemision.setEnabled(isHabilitar && this.guiaremisionConstantesFunciones.activardireccion_clienteGuiaRemision);//
		this.jInternalFrameDetalleFormGuiaRemision.jTextFieldnumero_pre_impresoGuiaRemision.setEnabled(isHabilitar && this.guiaremisionConstantesFunciones.activarnumero_pre_impresoGuiaRemision);//
		this.jInternalFrameDetalleFormGuiaRemision.jTextFieldpeso_brutoGuiaRemision.setEnabled(isHabilitar && this.guiaremisionConstantesFunciones.activarpeso_brutoGuiaRemision);//
		this.jInternalFrameDetalleFormGuiaRemision.jDateChooserfecha_autorizacionGuiaRemision.setEnabled(isHabilitar && this.guiaremisionConstantesFunciones.activarfecha_autorizacionGuiaRemision);//
		this.jInternalFrameDetalleFormGuiaRemision.jDateChooserfecha_vencimientoGuiaRemision.setEnabled(isHabilitar && this.guiaremisionConstantesFunciones.activarfecha_vencimientoGuiaRemision);	
		//
		this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_empresaGuiaRemision.setEnabled(isHabilitar && this.guiaremisionConstantesFunciones.activarid_empresaGuiaRemision);//
		this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_sucursalGuiaRemision.setEnabled(isHabilitar && this.guiaremisionConstantesFunciones.activarid_sucursalGuiaRemision);//
		this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_ejercicioGuiaRemision.setEnabled(isHabilitar && this.guiaremisionConstantesFunciones.activarid_ejercicioGuiaRemision);//
		this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_periodoGuiaRemision.setEnabled(isHabilitar && this.guiaremisionConstantesFunciones.activarid_periodoGuiaRemision);//
		this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_usuarioGuiaRemision.setEnabled(isHabilitar && this.guiaremisionConstantesFunciones.activarid_usuarioGuiaRemision);
		this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_formatoGuiaRemision.setEnabled(isHabilitar && this.guiaremisionConstantesFunciones.activarid_formatoGuiaRemision);
		this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_tipo_precioGuiaRemision.setEnabled(isHabilitar && this.guiaremisionConstantesFunciones.activarid_tipo_precioGuiaRemision);//
		this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_monedaGuiaRemision.setEnabled(isHabilitar && this.guiaremisionConstantesFunciones.activarid_monedaGuiaRemision);
		this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_clienteGuiaRemision.setEnabled(isHabilitar && this.guiaremisionConstantesFunciones.activarid_clienteGuiaRemision);
		this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_vendedorGuiaRemision.setEnabled(isHabilitar && this.guiaremisionConstantesFunciones.activarid_vendedorGuiaRemision);
		this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_facturaGuiaRemision.setEnabled(isHabilitar && this.guiaremisionConstantesFunciones.activarid_facturaGuiaRemision);
		this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_transportistaGuiaRemision.setEnabled(isHabilitar && this.guiaremisionConstantesFunciones.activarid_transportistaGuiaRemision);
		this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_consultorGuiaRemision.setEnabled(isHabilitar && this.guiaremisionConstantesFunciones.activarid_consultorGuiaRemision);
		this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_transporteGuiaRemision.setEnabled(isHabilitar && this.guiaremisionConstantesFunciones.activarid_transporteGuiaRemision);
		this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_sub_clienteGuiaRemision.setEnabled(isHabilitar && this.guiaremisionConstantesFunciones.activarid_sub_clienteGuiaRemision);
		this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_empleadoGuiaRemision.setEnabled(isHabilitar && this.guiaremisionConstantesFunciones.activarid_empleadoGuiaRemision);
		this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_ciudad_origenGuiaRemision.setEnabled(isHabilitar && this.guiaremisionConstantesFunciones.activarid_ciudad_origenGuiaRemision);
		this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_ciudad_destinoGuiaRemision.setEnabled(isHabilitar && this.guiaremisionConstantesFunciones.activarid_ciudad_destinoGuiaRemision);
		this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_tipo_llamadaGuiaRemision.setEnabled(isHabilitar && this.guiaremisionConstantesFunciones.activarid_tipo_llamadaGuiaRemision);//
		this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_tipo_cambioGuiaRemision.setEnabled(isHabilitar && this.guiaremisionConstantesFunciones.activarid_tipo_cambioGuiaRemision);
	};
	
	public void setDefaultControlesGuiaRemision() throws Exception {
			
	};
	
	
	public void habilitarDeshabilitarTipoMantenimientoGuiaRemision(Boolean esRelaciones) throws Exception {
		if(esRelaciones) {
			//this.guiaremisionSessionBean.setConGuardarRelaciones(true);			
			this.guiaremisionSessionBean.setEstaModoGuardarRelaciones(true);				
			this.jInternalFrameDetalleFormGuiaRemision.jTabbedPaneRelacionesGuiaRemision.setVisible(true);
			
			

			if(this.jInternalFrameDetalleFormGuiaRemision.detalleguiaremisionBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormGuiaRemision.detalleguiaremisionBeanSwingJInternalFrame.detalleguiaremisionSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormGuiaRemision.detalleguiaremisionBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}		
		} else {
			//this.guiaremisionSessionBean.setConGuardarRelaciones(false);			
			this.guiaremisionSessionBean.setEstaModoGuardarRelaciones(false);						
			this.jInternalFrameDetalleFormGuiaRemision.jTabbedPaneRelacionesGuiaRemision.setVisible(false);
			
			

			if(this.jInternalFrameDetalleFormGuiaRemision.detalleguiaremisionBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormGuiaRemision.detalleguiaremisionBeanSwingJInternalFrame.detalleguiaremisionSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormGuiaRemision.detalleguiaremisionBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}
		}
	};
	
	public int getIndiceNuevoGuiaRemision() throws Exception {
		int iIndice=0;
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(GuiaRemision guiaremisionAux:this.guiaremisionLogic.getGuiaRemisions()) {
				if(guiaremisionAux.getId().equals(this.iIdNuevoGuiaRemision)) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(GuiaRemision guiaremisionAux:this.guiaremisions) {
				if(guiaremisionAux.getId().equals(this.iIdNuevoGuiaRemision)) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
			iIndice=iIndice-1;
		}
		
		return iIndice;
	}
	
	public int getIndiceActualGuiaRemision(GuiaRemision guiaremision,Integer iIndiceActual) throws Exception {
		Integer iIndice=0;
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(GuiaRemision guiaremisionAux:this.guiaremisionLogic.getGuiaRemisions()) {
				if(guiaremisionAux.getId().equals(guiaremision.getId())) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(GuiaRemision guiaremisionAux:this.guiaremisions) {
				if(guiaremisionAux.getId().equals(guiaremision.getId())) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
			iIndice=iIndiceActual;
		}
		
		return iIndice;
	}
	
	public void setCamposBaseDesdeOriginalGuiaRemision(GuiaRemision guiaremisionOriginal) throws Exception {
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(GuiaRemision guiaremisionAux:this.guiaremisionLogic.getGuiaRemisions()) {
				if(guiaremisionAux.getGuiaRemisionOriginal().getId().equals(guiaremisionOriginal.getId())) {
					existe=true;
					guiaremisionOriginal.setId(guiaremisionAux.getId());
					guiaremisionOriginal.setVersionRow(guiaremisionAux.getVersionRow());
					break;
				}
				
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(GuiaRemision guiaremisionAux:this.guiaremisions) {
				if(guiaremisionAux.getGuiaRemisionOriginal().getId().equals(guiaremisionOriginal.getId())) {
					existe=true;
					guiaremisionOriginal.setId(guiaremisionAux.getId());
					guiaremisionOriginal.setVersionRow(guiaremisionAux.getVersionRow());
					break;
				}				
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
		}
	}
	
	public void cancelarNuevosGuiaRemision(Boolean esParaCancelar) throws Exception {
		guiaremisionsAux=new ArrayList<GuiaRemision>();
		guiaremisionAux=new GuiaRemision();
		
		if(!this.guiaremisionSessionBean.getEsGuardarRelacionado()) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				for(GuiaRemision guiaremisionAux:this.guiaremisionLogic.getGuiaRemisions()) {
					if(guiaremisionAux.getId()<0) {
						guiaremisionsAux.add(guiaremisionAux);
					}		
				}
				this.iIdNuevoGuiaRemision=0L;
				this.guiaremisionLogic.getGuiaRemisions().removeAll(guiaremisionsAux);
					
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(GuiaRemision guiaremisionAux:this.guiaremisions) {
					if(guiaremisionAux.getId()<0) {
						guiaremisionsAux.add(guiaremisionAux);
					}		
				}
				this.iIdNuevoGuiaRemision=0L;
				this.guiaremisions.removeAll(guiaremisionsAux);
			}	
		} else {			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				if(esParaCancelar && this.isEsNuevoGuiaRemision 
					&& this.guiaremisionLogic.getGuiaRemisions().size()>0
					) {
					guiaremisionAux=this.guiaremisionLogic.getGuiaRemisions().get(this.guiaremisionLogic.getGuiaRemisions().size() - 1);
				
					if(guiaremisionAux.getId()<0) {
						this.guiaremisionLogic.getGuiaRemisions().remove(guiaremisionAux);
					}
				}
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				if(esParaCancelar && this.isEsNuevoGuiaRemision && this.guiaremisions.size()>0) {
					guiaremisionAux=this.guiaremisions.get(this.guiaremisions.size() - 1);
				
					if(guiaremisionAux.getId()<0) {
						this.guiaremisions.remove(guiaremisionAux);
					}
				}
			}	
		}
	}
	
	public void cancelarNuevoGuiaRemision(Boolean esParaCancelar) throws Exception {
		if(Constantes.ISUSAEJBLOGICLAYER) {
			if(guiaremision.getId()<0) {
				this.guiaremisionLogic.getGuiaRemisions().remove(this.guiaremision);
			}					
		} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
			if(guiaremision.getId()<0) {
				this.guiaremisions.remove(this.guiaremision);
			}
		}			
	}
	
	public void setEstadosInicialesGuiaRemision(List<GuiaRemision> guiaremisionsAux) throws Exception {
		GuiaRemisionConstantesFunciones.setEstadosInicialesGuiaRemision(guiaremisionsAux);
	}
	
	public void setEstadosInicialesGuiaRemision(GuiaRemision guiaremisionAux) throws Exception {
		GuiaRemisionConstantesFunciones.setEstadosInicialesGuiaRemision(guiaremisionAux);		
	}
	
	public void nuevo() throws Exception {
		try	{
			//ESTA VALIDADO EN FUNCION ACTUALIZAR
			//if(this.validarGuiaRemisionActual()) {
				this.ejecutarMantenimiento(MaintenanceType.NUEVO);
				
				this.actualizarEstadoCeldasBotonesGuiaRemision("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
				
			//}
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);
		}
	}
	
	public void actualizar() throws Exception {
		try	{
			if(this.validarGuiaRemisionActual()) {
				if(!this.isEsNuevoGuiaRemision) {
					this.ejecutarMantenimiento(MaintenanceType.ACTUALIZAR);
					
					this.actualizarEstadoCeldasBotonesGuiaRemision("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
					
				} else {					
					this.nuevo();
					this.isEsNuevoGuiaRemision=false;
				}
				
				//SE CANCELA AL FINAL DEL PROCESO JBUTTONACTUALIZAR
				//this.cancelar(false);
			}		
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);
		}
	}
	
	public void eliminar() throws Exception {
		try	{	
			if(this.validarGuiaRemisionActual()) {
				if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE ELIMINAR EL/LA Guia Remision ?", "MANTENIMIENTO DE Guia Remision", JOptionPane.OK_CANCEL_OPTION) == 0) {
					this.ejecutarMantenimiento(MaintenanceType.ELIMINAR);			
					this.actualizarEstadoCeldasBotonesGuiaRemision("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
				}
			
			}
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);
		}
	}
	
	public void guardarCambios() throws Exception {
		try	{
			this.ejecutarMantenimiento(MaintenanceType.GUARDARCAMBIOS);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarAsignar(GuiaRemision guiaremision) throws Exception {
		GuiaRemisionConstantesFunciones.seleccionarAsignar(this.guiaremision,guiaremision);
	}
	
	public void seleccionar() throws Exception {
		try	{
			//ACTUALIZO EL PERMISO ACTUALIZAR CON EL PERMISO ACTUALIZAR ORIGINAL ESTE PERMISO SE UTILIZA PARA EL NUEVO TAMBIEN
			this.isPermisoActualizarGuiaRemision=this.isPermisoActualizarOriginalGuiaRemision;
			
			
			this.seleccionarAsignar(guiaremision);
			
			

			idClienteActual=guiaremision.getid_cliente();
			this.seleccionarClienteActual();

			idFacturaActual=guiaremision.getid_factura();
			this.seleccionarFacturaActual();

			idTipoCambioActual=guiaremision.getid_tipo_cambio();
			this.seleccionarTipoCambioActual();
			
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			GuiaRemisionConstantesFunciones.quitarEspaciosGuiaRemision(this.guiaremision,this.arrDatoGeneral);
			
			
			this.actualizarEstadoCeldasBotonesGuiaRemision("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarBusqueda(Long id) throws Exception {
		try	{
			this.guiaremisionSessionBean.setsFuncionBusquedaRapida(this.guiaremisionSessionBean.getsFuncionBusquedaRapida().replace("TO_REPLACE", id.toString()));
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);
		}
	}
	
	
	//BUSQUEDA INTERNA FK
	public void seleccionarClienteActual() throws Exception {
		try	{
			Cliente clienteAux=new Cliente();

			if(this.idClienteActual != null && this.idClienteActual>0) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					clienteLogic.getEntityWithConnection(this.idClienteActual);
					clienteAux= clienteLogic.getCliente();
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE

				clientesForeignKey=new ArrayList<Cliente>();
				clientesForeignKey.add(clienteAux);
			}

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}
	public void seleccionarFacturaActual() throws Exception {
		try	{
			Factura facturaAux=new Factura();

			if(this.idFacturaActual != null && this.idFacturaActual>0) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					facturaLogic.getEntityWithConnection(this.idFacturaActual);
					facturaAux= facturaLogic.getFactura();
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE

				facturasForeignKey=new ArrayList<Factura>();
				facturasForeignKey.add(facturaAux);
			}

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}
	public void seleccionarTipoCambioActual() throws Exception {
		try	{
			TipoCambio tipocambioAux=new TipoCambio();

			if(this.idTipoCambioActual != null && this.idTipoCambioActual>0) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipocambioLogic.getEntityWithConnection(this.idTipoCambioActual);
					tipocambioAux= tipocambioLogic.getTipoCambio();
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE

				tipocambiosForeignKey=new ArrayList<TipoCambio>();
				tipocambiosForeignKey.add(tipocambioAux);
			}

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}
	
	public void cancelar() throws Exception {
		this.cancelar(true);
	}
	
	public void cancelar(Boolean esParaCancelar) throws Exception {
		try {
														
			
			//SE UTILIZA COLUMNA ELIMINAR EN TABLA
			if(this.isEsNuevoGuiaRemision) {
				//NO CANCELA TODOS NUEVOS POR FUNCIONALIDAD GUARDAR CAMBIOS
				//this.cancelarNuevosGuiaRemision(esParaCancelar);				
				this.cancelarNuevoGuiaRemision(esParaCancelar);								
			}
			
			this.guiaremision=new GuiaRemision();
			
			this.inicializarGuiaRemision();
			
			this.actualizarEstadoCeldasBotonesGuiaRemision("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);
		}
	}
	
	public void inicializarGuiaRemision() throws Exception {
		try {
			GuiaRemisionConstantesFunciones.inicializarGuiaRemision(this.guiaremision);
			
			} catch(Exception e) {
			throw e;
		}
	}
	
	public void anteriores()throws Exception {
		try	{
			//this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina-this.iNumeroPaginacion;
			
			if(this.iNumeroPaginacionPagina-this.iNumeroPaginacion<this.iNumeroPaginacion) {
				this.iNumeroPaginacionPagina=0;		
			} else {
				this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina-this.iNumeroPaginacion;
			}
			
			this.procesarBusqueda(this.sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);
		}
	}
	
	public void siguientes()throws Exception {
		try	{			
			if(this.guiaremisionLogic.getGuiaRemisions().size()>0) {
					
				this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina+this.iNumeroPaginacion;
			}
				
			this.procesarBusqueda(this.sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);
		}
	}		
	
	public void generarReporteGuiaRemisions(String sAccionBusqueda,List<GuiaRemision> guiaremisionsParaReportes) throws Exception {
		//HttpSession httpSession = httpServletRequest.getSession();
		Long iIdUsuarioSesion=0L;	
		
		
		if(usuarioActual==null) {
			this.usuarioActual=new Usuario();
		}
		
		iIdUsuarioSesion=usuarioActual.getId();
		
		String sPathReportes="";
		
		InputStream reportFile=null;
		InputStream imageFile=null;
			
		imageFile=AuxiliarImagenes.class.getResourceAsStream("LogoReporte.jpg");			
				
		
		String sPathReporteFinal="";
		
		if(!esReporteAccionProceso) {
			if(!this.sTipoReporte.equals("RELACIONES")) {//!isEsReporteRelaciones
				if(!this.esReporteDinamico) {
					sPathReporteFinal="GuiaRemision"+this.sTipoReporteExtra+"Design.jasper";
					reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);	
				} else {
					sPathReporteFinal=this.sPathReporteDinamico;
					reportFile = new FileInputStream(sPathReporteFinal);
				}
			} else {
				sPathReporteFinal="GuiaRemisionMasterRelaciones"+this.sTipoReporteExtra+"Design.jasper";
				reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);
				//sPathReportes=reportFile.getPath().replace("GuiaRemisionMasterRelacionesDesign.jasper", "");
			}
		} else {
				sPathReporteFinal="GuiaRemision"+this.sTipoReporteExtra+"Design.jasper";
				reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);	
		}
		
		if(reportFile==null) {
			throw new JRRuntimeException(sPathReporteFinal+" no existe");
		}
		
		String sUsuario="";
		
		if(usuarioActual!=null) {
			sUsuario=usuarioActual.getuser_name();
		}
		
		Map<String, Object> parameters = new HashMap<String, Object>();
		parameters.put("usuario", sUsuario);
		
		parameters.put("titulo", Funciones.GetTituloSistemaReporte(this.parametroGeneralSg,this.moduloActual,this.usuarioActual));
		parameters.put("subtitulo", "Reporte De  Guia Remisiones");		
		parameters.put("busquedapor", GuiaRemisionConstantesFunciones.getNombreIndice(sAccionBusqueda)+sDetalleReporte);
		
		
		if(this.sTipoReporte.equals("RELACIONES")) {//isEsReporteRelaciones
			parameters.put("SUBREPORT_DIR", sPathReportes);
		}
		
		parameters.put("con_grafico", this.conGraficoReporte);
		
		JasperReport jasperReport = (JasperReport)JRLoader.loadObject(reportFile);
				
		this.cargarDatosCliente();
		
		ArrayList<Classe> classes=new ArrayList<Classe>();		
		
		if(this.sTipoReporte.equals("RELACIONES")) {//isEsReporteRelaciones
			
			classes.add(new Classe(DetalleGuiaRemision.class));
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {		
				try	{
					
					GuiaRemisionLogic guiaremisionLogicAuxiliar=new GuiaRemisionLogic();
					guiaremisionLogicAuxiliar.setDatosCliente(guiaremisionLogic.getDatosCliente());				
					guiaremisionLogicAuxiliar.setGuiaRemisions(guiaremisionsParaReportes);
					
					guiaremisionLogicAuxiliar.cargarRelacionesLoteForeignKeyGuiaRemisionWithConnection(); //deepLoadsWithConnection(false, DeepLoadType.INCLUDE, classes, "");
					
					guiaremisionsParaReportes=guiaremisionLogicAuxiliar.getGuiaRemisions();
					
					//guiaremisionLogic.getNewConnexionToDeep();
					
					//for (GuiaRemision guiaremision:guiaremisionsParaReportes) {
					//	guiaremisionLogic.deepLoad(guiaremision, false, DeepLoadType.INCLUDE, classes);
					//}						
					//guiaremisionLogic.commitNewConnexionToDeep();
					
						
				} catch(Exception e) {
					throw e;
					
				} finally {
					//guiaremisionLogic.closeNewConnexionToDeep();
				}
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}
			//ARCHITECTURE		
			
		
			
			

			InputStream reportFileDetalleGuiaRemision = AuxiliarReportes.class.getResourceAsStream("DetalleGuiaRemisionDetalleRelacionesDesign.jasper");
			parameters.put("subreport_detalleguiaremision", reportFileDetalleGuiaRemision);
		} else {
			//FK DEBERIA TRAERSE DE ANTEMANO
			
		}
								
		
		//CLASSES PARA REPORTES OBJETOS RELACIONADOS
		if(!this.sTipoReporte.equals("RELACIONES")) {//!isEsReporteRelaciones
			classes=new ArrayList<Classe>();
		}
		
		JRBeanArrayDataSource jrbeanArrayDataSourceGuiaRemision=null;
		
		if(this.sTipoReporteExtra!=null && !this.sTipoReporteExtra.equals("")) {
			GuiaRemisionConstantesFunciones.S_TIPOREPORTE_EXTRA=this.sTipoReporteExtra;
		} else {
			GuiaRemisionConstantesFunciones.S_TIPOREPORTE_EXTRA="";
		}
		
		jrbeanArrayDataSourceGuiaRemision=new JRBeanArrayDataSource(GuiaRemisionJInternalFrame.TraerGuiaRemisionBeans(guiaremisionsParaReportes,classes).toArray());
		
		jasperPrint = JasperFillManager.fillReport(jasperReport,parameters,jrbeanArrayDataSourceGuiaRemision);
				
		
		String sPathDest=Constantes.SUNIDAD_ARCHIVOS+":/"+Constantes.SCONTEXTSERVER+"/"+GuiaRemisionConstantesFunciones.SCHEMA+"/reportes";
		
		File filePathDest = new File(sPathDest);
		
		if(!filePathDest.exists()) {
			filePathDest.mkdirs();				
		}
				
		String sDestFileName=sPathDest+"/"+GuiaRemisionConstantesFunciones.CLASSNAME;
				
		if(this.sTipoArchivoReporte=="VISUALIZAR") {
			JasperViewer jasperViewer = new JasperViewer(jasperPrint,false) ;
			jasperViewer.setVisible(true) ; 

		} else if(this.sTipoArchivoReporte=="HTML"||this.sTipoArchivoReporte=="PDF"||this.sTipoArchivoReporte=="XML") {	
			//JasperFillManager.fillReportToFile(reportFile.getAbsolutePath(),parameters, new JRBeanArrayDataSource(GuiaRemisionBean.TraerGuiaRemisionBeans(guiaremisionsParaReportes).toArray()));
							
			if(this.sTipoArchivoReporte=="HTML") {
				sDestFileName+=".html";
				JasperExportManager.exportReportToHtmlFile(jasperPrint,sDestFileName);
					
			} else if(this.sTipoArchivoReporte=="PDF") {
				sDestFileName+=".pdf";
				JasperExportManager.exportReportToPdfFile(jasperPrint,sDestFileName);
			} else {
				sDestFileName+=".xml";
				JasperExportManager.exportReportToXmlFile(jasperPrint,sDestFileName, false);
			}	
			
		} else if(this.sTipoArchivoReporte=="WORD"||this.sTipoArchivoReporte=="EXCEL") {
				
			if(this.sTipoArchivoReporte=="WORD") {
				sDestFileName+=".rtf";
					
				JRRtfExporter exporter = new JRRtfExporter();
		
				exporter.setParameter(JRExporterParameter.JASPER_PRINT, jasperPrint);
				exporter.setParameter(JRExporterParameter.OUTPUT_FILE_NAME, sDestFileName);
		
				exporter.exportReport();
				
			} else	{
				sDestFileName+=".xls";
					
				JRXlsExporter exporterXls = new JRXlsExporter();
		
				exporterXls.setParameter(JRExporterParameter.JASPER_PRINT, jasperPrint);
				exporterXls.setParameter(JRExporterParameter.OUTPUT_FILE_NAME, sDestFileName);
				exporterXls.setParameter(JRXlsExporterParameter.IS_ONE_PAGE_PER_SHEET, Boolean.TRUE);
		
				exporterXls.exportReport();
			}
			
		} else if(this.sTipoArchivoReporte=="EXCEL2"||this.sTipoArchivoReporte=="EXCEL2_2") {
			//sDestFileName+=".xlsx";
			
			if(this.sTipoReporte.equals("NORMAL")) {
				this.generarExcelReporteGuiaRemisions(sAccionBusqueda,sTipoArchivoReporte,guiaremisionsParaReportes);
			
			} else if(this.sTipoReporte.equals("FORMULARIO")){
				this.generarExcelReporteVerticalGuiaRemisions(sAccionBusqueda,sTipoArchivoReporte,guiaremisionsParaReportes,false);
			
			} else if(this.sTipoReporte.equals("DINAMICO")){
				
				if(this.sTipoReporteDinamico.equals("NORMAL")) {
					
					this.jButtonGenerarExcelReporteDinamicoGuiaRemisionActionPerformed(null);
					//this.generarExcelReporteGuiaRemisions(sAccionBusqueda,sTipoArchivoReporte,guiaremisionsParaReportes);
					
				
				} else if(this.sTipoReporteDinamico.equals("FORMULARIO")){
					this.generarExcelReporteVerticalGuiaRemisions(sAccionBusqueda,sTipoArchivoReporte,guiaremisionsParaReportes,true);
				
				} else if(this.sTipoReporteDinamico.equals("RELACIONES")){
					this.generarExcelReporteRelacionesGuiaRemisions(sAccionBusqueda,sTipoArchivoReporte,guiaremisionsParaReportes,true);
				}
				
			} else if(this.sTipoReporte.equals("RELACIONES")){
				this.generarExcelReporteRelacionesGuiaRemisions(sAccionBusqueda,sTipoArchivoReporte,guiaremisionsParaReportes,false);
			}
		}
		
		if(this.sTipoArchivoReporte=="HTML"||this.sTipoArchivoReporte=="PDF"||this.sTipoArchivoReporte=="XML"||this.sTipoArchivoReporte=="WORD"||this.sTipoArchivoReporte=="EXCEL") {				
			JOptionPane.showMessageDialog(this,"REPORTE "+sDestFileName+" GENERADO SATISFACTORIAMENTE","REPORTES ",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReporteGuiaRemisions(String sAccionBusqueda,String sTipoArchivoReporte,List<GuiaRemision> guiaremisionsParaReportes) throws Exception {
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"guiaremision";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("GuiaRemisions");
         
        int iRow = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		this.generarExcelReporteHeaderGuiaRemision("NORMAL",row,workbook);
		
		CellStyle cellStyleData = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataAux=null;
		
		int i=0;
		
      	for(GuiaRemision guiaremision : guiaremisionsParaReportes) {            
			row = sheet.createRow(iRow++);
			iCell = 0;
			
			cellStyleDataAux=null;
			
			if(i%2==0) {
				cellStyleDataAux=cellStyleData;
			}
			
			GuiaRemisionConstantesFunciones.generarExcelReporteDataGuiaRemision("NORMAL",row,workbook,guiaremision,cellStyleDataAux);
		
			
			/*
            Cell cell0 = row.createCell(0);
            cell0.setCellValue(country.getName());
            Cell cell1 = row.createCell(1);
            cell1.setCellValue(country.getShortCode());
			*/
			
			i++;
        }
        
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.guiaremisionSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Guia Remision",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReporteHeaderGuiaRemision(String sTipo,Row row,Workbook workbook) {
		
		GuiaRemisionConstantesFunciones.generarExcelReporteHeaderGuiaRemision(sTipo,row,workbook);
		
		/*
		Cell cell=null;
		int iCell=0;
		
		CellStyle cellStyle = workbook.createCellStyle();
		cellStyle.setFillBackgroundColor(IndexedColors.GREEN.getIndex());
		cellStyle.setFillPattern(CellStyle.ALIGN_FILL);
		*/
		
	}
	
	public void generarExcelReporteVerticalGuiaRemisions(String sAccionBusqueda,String sTipoArchivoReporte,List<GuiaRemision> guiaremisionsParaReportes,Boolean paraDinamico) throws Exception {
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"guiaremision_vertical";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("GuiaRemisions");
         
        int iRow = 0;
		int iRowLast = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		CellStyle cellStyle = Funciones2.getStyleTitulo(workbook,"ZEBRA");;
		
		CellStyle cellStyleTitulo = Funciones2.getStyleTitulo(workbook,"PRINCIPAL_VERTICAL");
		
		
		for(GuiaRemision guiaremision : guiaremisionsParaReportes) {
			row = sheet.createRow(iRow++);
			iRowLast=iRow - 1;
			
			cell = row.createCell(0);
			cell.setCellValue(GuiaRemisionConstantesFunciones.getGuiaRemisionDescripcion(guiaremision));
			cell.setCellStyle(cellStyleTitulo);
			
			sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,0,2));			
	
			


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(GuiaRemisionConstantesFunciones.LABEL_IDEMPRESA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(GuiaRemisionConstantesFunciones.LABEL_IDEMPRESA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(guiaremision.getempresa_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(GuiaRemisionConstantesFunciones.LABEL_IDSUCURSAL))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(GuiaRemisionConstantesFunciones.LABEL_IDSUCURSAL);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(guiaremision.getsucursal_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(GuiaRemisionConstantesFunciones.LABEL_IDEJERCICIO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(GuiaRemisionConstantesFunciones.LABEL_IDEJERCICIO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(guiaremision.getejercicio_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(GuiaRemisionConstantesFunciones.LABEL_IDPERIODO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(GuiaRemisionConstantesFunciones.LABEL_IDPERIODO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(guiaremision.getperiodo_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(GuiaRemisionConstantesFunciones.LABEL_IDUSUARIO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(GuiaRemisionConstantesFunciones.LABEL_IDUSUARIO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(guiaremision.getusuario_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(GuiaRemisionConstantesFunciones.LABEL_SECUENCIAL))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(GuiaRemisionConstantesFunciones.LABEL_SECUENCIAL);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(guiaremision.getsecuencial());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(GuiaRemisionConstantesFunciones.LABEL_FECHAEMISION))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(GuiaRemisionConstantesFunciones.LABEL_FECHAEMISION);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(guiaremision.getfecha_emision());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(GuiaRemisionConstantesFunciones.LABEL_IDFORMATO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(GuiaRemisionConstantesFunciones.LABEL_IDFORMATO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(guiaremision.getformato_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(GuiaRemisionConstantesFunciones.LABEL_IDTIPOPRECIO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(GuiaRemisionConstantesFunciones.LABEL_IDTIPOPRECIO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(guiaremision.gettipoprecio_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(GuiaRemisionConstantesFunciones.LABEL_IDMONEDA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(GuiaRemisionConstantesFunciones.LABEL_IDMONEDA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(guiaremision.getmoneda_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(GuiaRemisionConstantesFunciones.LABEL_NUMEROCAMION))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(GuiaRemisionConstantesFunciones.LABEL_NUMEROCAMION);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(guiaremision.getnumero_camion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(GuiaRemisionConstantesFunciones.LABEL_IDCLIENTE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(GuiaRemisionConstantesFunciones.LABEL_IDCLIENTE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(guiaremision.getcliente_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(GuiaRemisionConstantesFunciones.LABEL_IDVENDEDOR))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(GuiaRemisionConstantesFunciones.LABEL_IDVENDEDOR);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(guiaremision.getvendedor_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(GuiaRemisionConstantesFunciones.LABEL_IDFACTURA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(GuiaRemisionConstantesFunciones.LABEL_IDFACTURA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(guiaremision.getfactura_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(GuiaRemisionConstantesFunciones.LABEL_IDTRANSPORTISTA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(GuiaRemisionConstantesFunciones.LABEL_IDTRANSPORTISTA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(guiaremision.gettransportista_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(GuiaRemisionConstantesFunciones.LABEL_IDENTIFICACION))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(GuiaRemisionConstantesFunciones.LABEL_IDENTIFICACION);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(guiaremision.getidentificacion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(GuiaRemisionConstantesFunciones.LABEL_FECHAORIGEN))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(GuiaRemisionConstantesFunciones.LABEL_FECHAORIGEN);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(guiaremision.getfecha_origen());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(GuiaRemisionConstantesFunciones.LABEL_FECHADESTINO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(GuiaRemisionConstantesFunciones.LABEL_FECHADESTINO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(guiaremision.getfecha_destino());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(GuiaRemisionConstantesFunciones.LABEL_TRANSPORTECODIGO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(GuiaRemisionConstantesFunciones.LABEL_TRANSPORTECODIGO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(guiaremision.gettransporte_codigo());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(GuiaRemisionConstantesFunciones.LABEL_CANTIDADBULTOS))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(GuiaRemisionConstantesFunciones.LABEL_CANTIDADBULTOS);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(guiaremision.getcantidad_bultos());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(GuiaRemisionConstantesFunciones.LABEL_IDCONSULTOR))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(GuiaRemisionConstantesFunciones.LABEL_IDCONSULTOR);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(guiaremision.getconsultor_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(GuiaRemisionConstantesFunciones.LABEL_IDTRANSPORTE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(GuiaRemisionConstantesFunciones.LABEL_IDTRANSPORTE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(guiaremision.gettransporte_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(GuiaRemisionConstantesFunciones.LABEL_IDSUBCLIENTE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(GuiaRemisionConstantesFunciones.LABEL_IDSUBCLIENTE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(guiaremision.getsubcliente_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(GuiaRemisionConstantesFunciones.LABEL_IDEMPLEADO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(GuiaRemisionConstantesFunciones.LABEL_IDEMPLEADO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(guiaremision.getempleado_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(GuiaRemisionConstantesFunciones.LABEL_IDCIUDADORIGEN))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(GuiaRemisionConstantesFunciones.LABEL_IDCIUDADORIGEN);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(guiaremision.getciudadorigen_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(GuiaRemisionConstantesFunciones.LABEL_IDCIUDADDESTINO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(GuiaRemisionConstantesFunciones.LABEL_IDCIUDADDESTINO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(guiaremision.getciudaddestino_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(GuiaRemisionConstantesFunciones.LABEL_IDTIPOLLAMADA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(GuiaRemisionConstantesFunciones.LABEL_IDTIPOLLAMADA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(guiaremision.gettipollamada_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(GuiaRemisionConstantesFunciones.LABEL_HORAINICIO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(GuiaRemisionConstantesFunciones.LABEL_HORAINICIO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(guiaremision.gethora_inicio());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(GuiaRemisionConstantesFunciones.LABEL_HORAFIN))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(GuiaRemisionConstantesFunciones.LABEL_HORAFIN);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(guiaremision.gethora_fin());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(GuiaRemisionConstantesFunciones.LABEL_CUPO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(GuiaRemisionConstantesFunciones.LABEL_CUPO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(guiaremision.getcupo());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(GuiaRemisionConstantesFunciones.LABEL_SALDO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(GuiaRemisionConstantesFunciones.LABEL_SALDO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(guiaremision.getsaldo());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(GuiaRemisionConstantesFunciones.LABEL_DOCUMENTO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(GuiaRemisionConstantesFunciones.LABEL_DOCUMENTO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(guiaremision.getdocumento());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(GuiaRemisionConstantesFunciones.LABEL_DISPONIBLE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(GuiaRemisionConstantesFunciones.LABEL_DISPONIBLE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(guiaremision.getdisponible());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(GuiaRemisionConstantesFunciones.LABEL_DESCRIPCION))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(GuiaRemisionConstantesFunciones.LABEL_DESCRIPCION);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(guiaremision.getdescripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(GuiaRemisionConstantesFunciones.LABEL_TOTALIVA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(GuiaRemisionConstantesFunciones.LABEL_TOTALIVA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(guiaremision.gettotal_iva());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(GuiaRemisionConstantesFunciones.LABEL_TOTALSINIVA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(GuiaRemisionConstantesFunciones.LABEL_TOTALSINIVA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(guiaremision.gettotal_sin_iva());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(GuiaRemisionConstantesFunciones.LABEL_DESCUENTO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(GuiaRemisionConstantesFunciones.LABEL_DESCUENTO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(guiaremision.getdescuento());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(GuiaRemisionConstantesFunciones.LABEL_FLETE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(GuiaRemisionConstantesFunciones.LABEL_FLETE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(guiaremision.getflete());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(GuiaRemisionConstantesFunciones.LABEL_OTRO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(GuiaRemisionConstantesFunciones.LABEL_OTRO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(guiaremision.getotro());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(GuiaRemisionConstantesFunciones.LABEL_FINANCIAMIENTO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(GuiaRemisionConstantesFunciones.LABEL_FINANCIAMIENTO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(guiaremision.getfinanciamiento());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(GuiaRemisionConstantesFunciones.LABEL_IVA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(GuiaRemisionConstantesFunciones.LABEL_IVA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(guiaremision.getiva());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(GuiaRemisionConstantesFunciones.LABEL_TOTAL))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(GuiaRemisionConstantesFunciones.LABEL_TOTAL);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(guiaremision.gettotal());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(GuiaRemisionConstantesFunciones.LABEL_MONTORETENCION))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(GuiaRemisionConstantesFunciones.LABEL_MONTORETENCION);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(guiaremision.getmonto_retencion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(GuiaRemisionConstantesFunciones.LABEL_IDTIPOCAMBIO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(GuiaRemisionConstantesFunciones.LABEL_IDTIPOCAMBIO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(guiaremision.gettipocambio_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(GuiaRemisionConstantesFunciones.LABEL_FECHA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(GuiaRemisionConstantesFunciones.LABEL_FECHA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(guiaremision.getfecha());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(GuiaRemisionConstantesFunciones.LABEL_RUCCLIENTE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(GuiaRemisionConstantesFunciones.LABEL_RUCCLIENTE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(guiaremision.getruc_cliente());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(GuiaRemisionConstantesFunciones.LABEL_NOMBRECLIENTE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(GuiaRemisionConstantesFunciones.LABEL_NOMBRECLIENTE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(guiaremision.getnombre_cliente());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(GuiaRemisionConstantesFunciones.LABEL_TELEFONOCLIENTE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(GuiaRemisionConstantesFunciones.LABEL_TELEFONOCLIENTE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(guiaremision.gettelefono_cliente());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(GuiaRemisionConstantesFunciones.LABEL_DIRECCIONCLIENTE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(GuiaRemisionConstantesFunciones.LABEL_DIRECCIONCLIENTE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(guiaremision.getdireccion_cliente());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(GuiaRemisionConstantesFunciones.LABEL_NUMEROPREIMPRESO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(GuiaRemisionConstantesFunciones.LABEL_NUMEROPREIMPRESO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(guiaremision.getnumero_pre_impreso());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(GuiaRemisionConstantesFunciones.LABEL_PESOBRUTO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(GuiaRemisionConstantesFunciones.LABEL_PESOBRUTO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(guiaremision.getpeso_bruto());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(GuiaRemisionConstantesFunciones.LABEL_FECHAAUTORIZACION))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(GuiaRemisionConstantesFunciones.LABEL_FECHAAUTORIZACION);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(guiaremision.getfecha_autorizacion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(GuiaRemisionConstantesFunciones.LABEL_FECHAVENCIMIENTO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(GuiaRemisionConstantesFunciones.LABEL_FECHAVENCIMIENTO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(guiaremision.getfecha_vencimiento());


			}						
        }
        
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.guiaremisionSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Guia Remision",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReporteRelacionesGuiaRemisions(String sAccionBusqueda,String sTipoArchivoReporte,List<GuiaRemision> guiaremisionsParaReportes,Boolean paraDinamico) throws Exception {
		
		ArrayList<Classe> classes=new ArrayList<Classe>();
		List<GuiaRemision> guiaremisionsRespaldo=null;
		
		classes=GuiaRemisionConstantesFunciones.getClassesRelationshipsOfGuiaRemision(new ArrayList<Classe>(),DeepLoadType.NONE,false);
					
		this.datosDeep=new DatosDeep();
		
		this.datosDeep.setIsDeep(false);
		this.datosDeep.setDeepLoadType(DeepLoadType.INCLUDE);
		this.datosDeep.setClases(classes);
			
		this.datosCliente.setDatosDeepParametros(false, DeepLoadType.INCLUDE, classes, "");
		this.datosCliente.setIsConDeep(true);	
		this.datosCliente.setIsConExportar(false);
		
						
		this.guiaremisionLogic.setDatosCliente(this.datosCliente);
		this.guiaremisionLogic.setDatosDeep(this.datosDeep);
		this.guiaremisionLogic.setIsConDeep(true);
		
		guiaremisionsRespaldo=this.guiaremisionLogic.getGuiaRemisions();
		
		this.guiaremisionLogic.setGuiaRemisions(guiaremisionsParaReportes);	
		this.guiaremisionLogic.deepLoadsWithConnection(false, DeepLoadType.INCLUDE, classes,"");
		
		guiaremisionsParaReportes=this.guiaremisionLogic.getGuiaRemisions();
		this.guiaremisionLogic.setGuiaRemisions(guiaremisionsRespaldo);
		
		
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"guiaremision_relacion";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("GuiaRemisions");
         
        int iRow = 0;
		int iRowLast = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		this.generarExcelReporteHeaderGuiaRemision("NORMAL",row,workbook);
		
		int i=0;
		int i2=0;
		
		CellStyle cellStyleData = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataTitulo = Funciones2.getStyleTitulo(workbook,"PRINCIPAL");
		CellStyle cellStyleDataZebra = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataAux =null;
		CellStyle cellStyleDataAuxHijo =null;
		
		for(GuiaRemision guiaremision : guiaremisionsParaReportes) {			
			if(i!=0) {
				row = sheet.createRow(iRow++);				
				this.generarExcelReporteHeaderGuiaRemision("NORMAL",row,workbook);
			}
			
			cellStyleDataAux=null;
			
			if(i%2==0) {
				//cellStyleDataAux=cellStyleData;
			}
			
			row = sheet.createRow(iRow++);						
			GuiaRemisionConstantesFunciones.generarExcelReporteDataGuiaRemision("NORMAL",row,workbook,guiaremision,cellStyleDataAux);
		
			
			


				//DetalleGuiaRemision
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(DetalleGuiaRemisionConstantesFunciones.SCLASSWEBTITULO))) {

				if(guiaremision.getDetalleGuiaRemisions()!=null && guiaremision.getDetalleGuiaRemisions().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(DetalleGuiaRemisionConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					DetalleGuiaRemisionConstantesFunciones.generarExcelReporteHeaderDetalleGuiaRemision("RELACIONADO",row,workbook);
				}

				if(guiaremision.getDetalleGuiaRemisions()!=null) {
					i2=0;
					for(DetalleGuiaRemision detalleguiaremision : guiaremision.getDetalleGuiaRemisions()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						DetalleGuiaRemisionConstantesFunciones.generarExcelReporteDataDetalleGuiaRemision("RELACIONADO",row,workbook,detalleguiaremision,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}
			
			i++;
        }
        
		/*
		row = sheet.createRow(iRow++);
		iRowLast=iRow - 1;
			
		cell = row.createCell(0);
		cell.setCellValue(GuiaRemisionConstantesFunciones.getGuiaRemisionDescripcion(guiaremision));
		cell.setCellStyle(cellStyleTitulo);
			
		sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,0,2));			
		*/
		
			
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.guiaremisionSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Guia Remision",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	
	public Boolean existeColumnaReporteDinamico(String sColumna) {
		Boolean existe=false;
		
		Reporte reporte=new Reporte();
		
		
		for(int index:this.jInternalFrameReporteDinamicoGuiaRemision.getjListColumnasSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoGuiaRemision.getjListColumnasSelectReporte().getModel().getElementAt(index);
			
			if(sColumna.equals(reporte.getsCodigo())) {
				existe=true;
				break;
			}
		
		}
		
		
		return existe;
	}
	
	public Boolean existeRelacionReporteDinamico(String sColumna) {
		Boolean existe=false;
		
		Reporte reporte=new Reporte();
		
		
		for(int index:this.jInternalFrameReporteDinamicoGuiaRemision.getjListRelacionesSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoGuiaRemision.getjListRelacionesSelectReporte().getModel().getElementAt(index);
			
			if(sColumna.equals(reporte.getsCodigo())) {
				existe=true;
				break;
			}
		
		}
		
		
		return existe;
	}
	
	public void startProcessGuiaRemision() throws Exception {		
		this.startProcessGuiaRemision(true);
	}
	
	public void startProcessGuiaRemision(Boolean conSplash) throws Exception {		
		//FuncionesSwing.enableDisablePanels(false,this.jTabbedPaneBusquedasGuiaRemision ,this.jPanelParametrosReportesGuiaRemision, this.jScrollPanelDatosGuiaRemision,this.jPanelPaginacionGuiaRemision, this.jScrollPanelDatosEdicionGuiaRemision, this.jPanelAccionesGuiaRemision,this.jPanelAccionesFormularioGuiaRemision,this.jmenuBarGuiaRemision,this.jmenuBarDetalleGuiaRemision,this.jTtoolBarGuiaRemision,this.jTtoolBarDetalleGuiaRemision);		
		
		final JTabbedPane jTabbedPaneBusquedasGuiaRemision=this.jTabbedPaneBusquedasGuiaRemision; 
		
		final JPanel jPanelParametrosReportesGuiaRemision=this.jPanelParametrosReportesGuiaRemision;
		//final JScrollPane jScrollPanelDatosGuiaRemision=this.jScrollPanelDatosGuiaRemision;
		final JTable jTableDatosGuiaRemision=this.jTableDatosGuiaRemision;		
		final JPanel jPanelPaginacionGuiaRemision=this.jPanelPaginacionGuiaRemision;
		//final JScrollPane jScrollPanelDatosEdicionGuiaRemision=this.jScrollPanelDatosEdicionGuiaRemision;
		final JPanel jPanelAccionesGuiaRemision=this.jPanelAccionesGuiaRemision;
		
		JPanel jPanelCamposAuxiliarGuiaRemision=new JPanelMe();
		JPanel jPanelAccionesFormularioAuxiliarGuiaRemision=new JPanelMe();
		
		if(this.jInternalFrameDetalleFormGuiaRemision!=null) {
			jPanelCamposAuxiliarGuiaRemision=this.jInternalFrameDetalleFormGuiaRemision.jPanelCamposGuiaRemision;
			jPanelAccionesFormularioAuxiliarGuiaRemision=this.jInternalFrameDetalleFormGuiaRemision.jPanelAccionesFormularioGuiaRemision;
		}
		
		final JPanel jPanelCamposGuiaRemision=jPanelCamposAuxiliarGuiaRemision;
		final JPanel jPanelAccionesFormularioGuiaRemision=jPanelAccionesFormularioAuxiliarGuiaRemision;
		
		
		final JMenuBar jmenuBarGuiaRemision=this.jmenuBarGuiaRemision;
		final JToolBar jTtoolBarGuiaRemision=this.jTtoolBarGuiaRemision;		
		
		
		JMenuBar jmenuBarDetalleAuxiliarGuiaRemision=new JMenuBar();
		JToolBar jTtoolBarDetalleAuxiliarGuiaRemision=new JToolBar();		
		
		if(this.jInternalFrameDetalleFormGuiaRemision!=null) {
			jmenuBarDetalleAuxiliarGuiaRemision=this.jInternalFrameDetalleFormGuiaRemision.jmenuBarDetalleGuiaRemision;
			jTtoolBarDetalleAuxiliarGuiaRemision=this.jInternalFrameDetalleFormGuiaRemision.jTtoolBarDetalleGuiaRemision;
		}
		
		final JMenuBar jmenuBarDetalleGuiaRemision=jmenuBarDetalleAuxiliarGuiaRemision;
		final JToolBar jTtoolBarDetalleGuiaRemision=jTtoolBarDetalleAuxiliarGuiaRemision;		
		
		
		
		
		
		if(Constantes2.CON_PROCESO_HILO) {
			Thread threadRunnableProcess;
			ProcessRunnable processRunnable;
			
			processRunnable=new ProcessRunnable();
			
			processRunnable.setsTipo("START");
			processRunnable.setDesktop(jDesktopPane);
			processRunnable.setModuloActual(moduloActual);
			processRunnable.setModuloUsuarioSeleccionado(moduloActual);
			processRunnable.setOpcionActual(opcionActual);
			processRunnable.setParametroGeneralSg(parametroGeneralSg);
			processRunnable.setParametroGeneralUsuario(parametroGeneralUsuario);
			processRunnable.setResumenUsuarioActual(resumenUsuarioActual);
			processRunnable.setUsuarioActual(usuarioActual);
			
			processRunnable.jTabbedPaneBusquedas=jTabbedPaneBusquedasGuiaRemision;
			processRunnable.jPanelParametrosReportes=jPanelParametrosReportesGuiaRemision;
			processRunnable.jTableDatos=jTableDatosGuiaRemision;
			processRunnable.jPanelCampos=jPanelCamposGuiaRemision;
			processRunnable.jPanelPaginacion=jPanelPaginacionGuiaRemision;
			processRunnable.jPanelAcciones=jPanelAccionesGuiaRemision;
			processRunnable.jPanelAccionesFormulario=jPanelAccionesFormularioGuiaRemision;
			
			
			processRunnable.jmenuBar=jmenuBarGuiaRemision;
			processRunnable.jmenuBarDetalle=jmenuBarDetalleGuiaRemision;
			processRunnable.jTtoolBar=jTtoolBarGuiaRemision;
			processRunnable.jTtoolBarDetalle=jTtoolBarDetalleGuiaRemision;
			processRunnable.jInternalFrameBase=this;
			
			//processRunnable.CargarObjetosRendimientoCriticoModuloInventario();
			
			
			threadRunnableProcess=new Thread(processRunnable);//.start();
					
			threadRunnableProcess.start();
			
		} else {
			FuncionesSwing.enableDisablePanels(false,jTabbedPaneBusquedasGuiaRemision ,jPanelParametrosReportesGuiaRemision,jTableDatosGuiaRemision, /*jScrollPanelDatosGuiaRemision,*/jPanelCamposGuiaRemision,jPanelPaginacionGuiaRemision, /*jScrollPanelDatosEdicionGuiaRemision,*/ jPanelAccionesGuiaRemision,jPanelAccionesFormularioGuiaRemision,jmenuBarGuiaRemision,jmenuBarDetalleGuiaRemision,jTtoolBarGuiaRemision,jTtoolBarDetalleGuiaRemision);
		
			startProcess();//this.
		}
						
		/*
		if(conSplash) {
			SwingUtilities.invokeLater(new Runnable() {
			      public void run() {
			    	  try {
							FuncionesSwing.enableDisablePanels(false,jTabbedPaneBusquedasGuiaRemision ,jPanelParametrosReportesGuiaRemision, jScrollPanelDatosGuiaRemision,jPanelPaginacionGuiaRemision, jScrollPanelDatosEdicionGuiaRemision, jPanelAccionesGuiaRemision,jPanelAccionesFormularioGuiaRemision,jmenuBarGuiaRemision,jmenuBarDetalleGuiaRemision,jTtoolBarGuiaRemision,jTtoolBarDetalleGuiaRemision);
						
							startProcess();//this.
							
						} catch (Exception e) {
							// TODO Auto-generated catch block
							e.printStackTrace();
						}
			      }
			});
		}
		*/
	}
	
	public void finishProcessGuiaRemision() {// throws Exception 
		this.finishProcessGuiaRemision(true);
	}
	
	public void finishProcessGuiaRemision(Boolean conSplash) {// throws Exception 
		//FuncionesSwing.enableDisablePanels(true,this.jTabbedPaneBusquedasGuiaRemision ,this.jPanelParametrosReportesGuiaRemision, this.jScrollPanelDatosGuiaRemision,this.jPanelPaginacionGuiaRemision, this.jScrollPanelDatosEdicionGuiaRemision, this.jPanelAccionesGuiaRemision,this.jPanelAccionesFormularioGuiaRemision,this.jmenuBarGuiaRemision,this.jmenuBarDetalleGuiaRemision,this.jTtoolBarGuiaRemision,this.jTtoolBarDetalleGuiaRemision);		
		
		final JTabbedPane jTabbedPaneBusquedasGuiaRemision=this.jTabbedPaneBusquedasGuiaRemision; 
		
		final JPanel jPanelParametrosReportesGuiaRemision=this.jPanelParametrosReportesGuiaRemision;
		//final JScrollPane jScrollPanelDatosGuiaRemision=this.jScrollPanelDatosGuiaRemision;
		final JTable jTableDatosGuiaRemision=this.jTableDatosGuiaRemision;		
		final JPanel jPanelPaginacionGuiaRemision=this.jPanelPaginacionGuiaRemision;
		//final JScrollPane jScrollPanelDatosEdicionGuiaRemision=this.jScrollPanelDatosEdicionGuiaRemision;
		final JPanel jPanelAccionesGuiaRemision=this.jPanelAccionesGuiaRemision;
		
		JPanel jPanelCamposAuxiliarGuiaRemision=new JPanel();
		JPanel jPanelAccionesFormularioAuxiliarGuiaRemision=new JPanel();
		
		if(this.jInternalFrameDetalleFormGuiaRemision!=null) {
			jPanelCamposAuxiliarGuiaRemision=this.jInternalFrameDetalleFormGuiaRemision.jPanelCamposGuiaRemision;
			jPanelAccionesFormularioAuxiliarGuiaRemision=this.jInternalFrameDetalleFormGuiaRemision.jPanelAccionesFormularioGuiaRemision;
		}
		
		final JPanel jPanelCamposGuiaRemision=jPanelCamposAuxiliarGuiaRemision;
		final JPanel jPanelAccionesFormularioGuiaRemision=jPanelAccionesFormularioAuxiliarGuiaRemision;
		
		
		final JMenuBar jmenuBarGuiaRemision=this.jmenuBarGuiaRemision;		
		final JToolBar jTtoolBarGuiaRemision=this.jTtoolBarGuiaRemision;
				
		JMenuBar jmenuBarDetalleAuxiliarGuiaRemision=new JMenuBar();
		JToolBar jTtoolBarDetalleAuxiliarGuiaRemision=new JToolBar();
		
		if(this.jInternalFrameDetalleFormGuiaRemision!=null) {
			jmenuBarDetalleAuxiliarGuiaRemision=this.jInternalFrameDetalleFormGuiaRemision.jmenuBarDetalleGuiaRemision;
			jTtoolBarDetalleAuxiliarGuiaRemision=this.jInternalFrameDetalleFormGuiaRemision.jTtoolBarDetalleGuiaRemision;		
		}
		
		final JMenuBar jmenuBarDetalleGuiaRemision=jmenuBarDetalleAuxiliarGuiaRemision;
		final JToolBar jTtoolBarDetalleGuiaRemision=jTtoolBarDetalleAuxiliarGuiaRemision;
		
		
		
		if(Constantes2.CON_PROCESO_HILO) {
			Thread threadRunnableProcess;
			ProcessRunnable processRunnable;
			
			processRunnable=new ProcessRunnable();
			
			processRunnable.setsTipo("END");
			processRunnable.setDesktop(jDesktopPane);
			processRunnable.setModuloActual(moduloActual);
			processRunnable.setModuloUsuarioSeleccionado(moduloActual);
			processRunnable.setOpcionActual(opcionActual);
			processRunnable.setParametroGeneralSg(parametroGeneralSg);
			processRunnable.setParametroGeneralUsuario(parametroGeneralUsuario);
			processRunnable.setResumenUsuarioActual(resumenUsuarioActual);
			processRunnable.setUsuarioActual(usuarioActual);
			
			processRunnable.jTabbedPaneBusquedas=jTabbedPaneBusquedasGuiaRemision;
			processRunnable.jPanelParametrosReportes=jPanelParametrosReportesGuiaRemision;
			processRunnable.jTableDatos=jTableDatosGuiaRemision;
			processRunnable.jPanelCampos=jPanelCamposGuiaRemision;
			processRunnable.jPanelPaginacion=jPanelPaginacionGuiaRemision;
			processRunnable.jPanelAcciones=jPanelAccionesGuiaRemision;
			processRunnable.jPanelAccionesFormulario=jPanelAccionesFormularioGuiaRemision;
			
			
			processRunnable.jmenuBar=jmenuBarGuiaRemision;
			processRunnable.jmenuBarDetalle=jmenuBarDetalleGuiaRemision;
			processRunnable.jTtoolBar=jTtoolBarGuiaRemision;
			processRunnable.jTtoolBarDetalle=jTtoolBarDetalleGuiaRemision;
			processRunnable.jInternalFrameBase=this;
			
			//processRunnable.CargarObjetosRendimientoCriticoModuloInventario();
			
			
			threadRunnableProcess=new Thread(processRunnable);//.start();
					
			threadRunnableProcess.start();
			
		} else {
			if(conSplash) {
				SwingUtilities.invokeLater(new RunnableProceso(true,this,jTabbedPaneBusquedasGuiaRemision ,jPanelParametrosReportesGuiaRemision, jTableDatosGuiaRemision,/*jScrollPanelDatosGuiaRemision,*/jPanelCamposGuiaRemision,jPanelPaginacionGuiaRemision, /*jScrollPanelDatosEdicionGuiaRemision,*/ jPanelAccionesGuiaRemision,jPanelAccionesFormularioGuiaRemision,jmenuBarGuiaRemision,jmenuBarDetalleGuiaRemision,jTtoolBarGuiaRemision,jTtoolBarDetalleGuiaRemision));
			}
		}						
	}
	
	/*
	public void habilitarDeshabilitarControlesGuiaRemision(Boolean esHabilitar,Boolean conDetalle) {
		this.habilitarDeshabilitarToolBarGuiaRemision(esHabilitar,conDetalle);
		this.habilitarDeshabilitarMenuGuiaRemision(esHabilitar,conDetalle);
	}
	
	public void habilitarDeshabilitarToolBarGuiaRemision(Boolean esHabilitar,Boolean conDetalle) {
		FuncionesSwing.enableDisableComponents(this.jTtoolBarGuiaRemision,esHabilitar,1,1);
		
		if(conDetalle) {
			FuncionesSwing.enableDisableComponents(this.jTtoolBarDetalleGuiaRemision,esHabilitar,1,1);
		}
	}
	
	public void habilitarDeshabilitarMenuGuiaRemision(Boolean esHabilitar,Boolean conDetalle) {
		FuncionesSwing.enableDisableComponents(this.jmenuBarGuiaRemision,esHabilitar,1,1);
		
		if(conDetalle) {
			FuncionesSwing.enableDisableComponents(this.jmenuBarDetalleGuiaRemision,esHabilitar,1,1);
		}
	}
	*/
	
	
	
	public void procesarBusqueda(String sAccionBusqueda) throws Exception {		
		String  finalQueryPaginacion=this.guiaremisionConstantesFunciones.getsFinalQueryGuiaRemision();
		String  finalQueryPaginacionTodos=this.guiaremisionConstantesFunciones.getsFinalQueryGuiaRemision();
		
		Boolean esBusqueda=false;
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		if(!sAccionBusqueda.equals("Todos"))	{
			esBusqueda=true;
		}
		
		this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
		this.arrDatoGeneralNo= new  ArrayList<String>();
		
		ArrayList<String> arrColumnasGlobalesNo=GuiaRemisionConstantesFunciones.getArrayColumnasGlobalesNoGuiaRemision(this.arrDatoGeneral);
		ArrayList<String> arrColumnasGlobales=GuiaRemisionConstantesFunciones.getArrayColumnasGlobalesGuiaRemision(this.arrDatoGeneral,arrColumnasGlobalesNo);
		
			
		String  finalQueryGlobal="";
		
		finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,!esBusqueda,esBusqueda,arrColumnasGlobales,GuiaRemisionConstantesFunciones.TABLENAME);
		
		String sOrderBy="";
		
		
		sOrderBy=Funciones2.getFinalQueryOrderBy(this.arrOrderBy);
		
		
		if(!sOrderBy.equals("")) {			
			finalQueryPaginacion=sOrderBy;
			finalQueryPaginacionTodos=sOrderBy;
		}
		
		
		//INICIALIZA ELIMINADOS
		this.guiaremisionsEliminados= new ArrayList<GuiaRemision>();
		
		if(!this.isEntroOnLoad) {
			this.onLoad();
		}/* else {
			this.isEntroOnLoad=false;
		}*/
		
		
		
				
		try	{		
			
			//this.startProcessGuiaRemision();
		
				///*GuiaRemisionSessionBean*/this.guiaremisionSessionBean=new GuiaRemisionSessionBean();
			
			if(this.guiaremisionSessionBean==null) {
				this.guiaremisionSessionBean=new GuiaRemisionSessionBean();
			}
			
			//ACTUALIZA EL TAMANIO DE PAGINACION DESDE EL COMBO
			if(this.sTipoPaginacion!=null && !this.sTipoPaginacion.equals("")) {
				if(!this.sTipoPaginacion.equals("TODOS")) {
					this.iNumeroPaginacion=Integer.parseInt(this.sTipoPaginacion);
				} else {
					this.iNumeroPaginacion=-1;
					this.iNumeroPaginacionPagina=-1;
				}
			} else {
				if(this.iNumeroPaginacion==null || (this.iNumeroPaginacion!=null && this.iNumeroPaginacion<=0)) {
					this.iNumeroPaginacion=GuiaRemisionConstantesFunciones.INUMEROPAGINACION;
				}
			}
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);
			
			this.cargarDatosCliente();
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			classes=GuiaRemisionConstantesFunciones.getClassesForeignKeysOfGuiaRemision(new ArrayList<Classe>(),DeepLoadType.NONE);
			
		
			this.datosDeep=new DatosDeep();
			this.datosDeep.setIsDeep(false);
			this.datosDeep.setDeepLoadType(DeepLoadType.INCLUDE);
			this.datosDeep.setClases(classes);
			
			this.datosCliente.setDatosDeepParametros(false, DeepLoadType.INCLUDE, classes, "");
			this.datosCliente.setIsConDeep(true);
			
			if(false) {//this.conExportar
				this.datosCliente.setIsConExportar(true);
				this.datosCliente.setDatosExportarParametros(Funciones2.getTipoExportar(this.parametroGeneralUsuario),this.parametroGeneralUsuario.getcon_exportar_cabecera(),Funciones2.getTipoDelimiter(this.parametroGeneralUsuario),this.parametroGeneralUsuario.getpath_exportar()+"/guiaremision."+Funciones2.getTipoExtensionArchivoExportar(this.parametroGeneralUsuario));
			} else {
				this.datosCliente.setIsConExportar(false);
			}
			
			guiaremisionsAux= new ArrayList<GuiaRemision>();
			
				
			guiaremisionLogic.setDatosCliente(this.datosCliente);
			guiaremisionLogic.setDatosDeep(this.datosDeep);
			guiaremisionLogic.setIsConDeep(true);
			
			
			guiaremisionLogic.getGuiaRemisionDataAccess().setIsForForeingsKeysDataRelationships(true);
			
			if(sAccionBusqueda.equals("Todos") || sAccionBusqueda.equals("Query"))	{	
				if(sAccionBusqueda.equals("Todos")) {
					//FALTA:PARA BUSQUEDAS POR CAMPO EN FORMULARIO
					//this.sFinalQueryGeneral="";
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacionTodos );
					
					guiaremisionLogic.getTodosGuiaRemisions(finalQueryGlobal,pagination);
					
					//guiaremisionLogic.getTodosGuiaRemisionsWithConnection(finalQueryGlobal,pagination);										
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
				
				if(guiaremisionLogic.getGuiaRemisions()==null|| guiaremisionLogic.getGuiaRemisions().size()==0)	{
					
				
				}
				
				if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(-1);
						this.pagination.setiMaxResults(-1);
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							guiaremisionsAux= new ArrayList<GuiaRemision>();
							guiaremisionsAux.addAll(guiaremisionLogic.getGuiaRemisions());						
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							guiaremisionsAux= new ArrayList<GuiaRemision>();
							guiaremisionsAux.addAll(guiaremisions);
						}
						//ARCHITECTURE
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							guiaremisionLogic.getTodosGuiaRemisions(finalQueryGlobal+"",this.pagination);												
							
							//guiaremisionLogic.getTodosGuiaRemisionsWithConnection(finalQueryGlobal+"",this.pagination);												
						} else if(Constantes.ISUSAEJBREMOTE) {
						} else if(Constantes.ISUSAEJBHOME) {
						}
						//ARCHITECTURE
						
					}
					
					this.generarReporteGuiaRemisions("Todos",guiaremisionLogic.getGuiaRemisions() );
					
					if(false) {//isMostrarTodosResultadosReporte						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							guiaremisionLogic.setGuiaRemisions(new ArrayList<GuiaRemision>());					
							guiaremisionLogic.getGuiaRemisions().addAll(guiaremisionsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							guiaremisions=new ArrayList<GuiaRemision>();
							guiaremisions.addAll(guiaremisionsAux);
						}
						//ARCHITECTURE
						
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);														
					}
				}
			}
			else if(sAccionBusqueda.equals("PorId")) {
				Long idGuiaRemision=0L;
				
				if(this.idActual!=null && this.idActual!=0L) {
					idGuiaRemision=this.idActual;
				
				} else if(this.idGuiaRemisionActual!=null && this.idGuiaRemisionActual!=0L) {
					idGuiaRemision=idGuiaRemisionActual;
				}
				
					
				this.sDetalleReporte=GuiaRemisionConstantesFunciones.getDetalleIndicePorId(idGuiaRemision);
				
				this.guiaremisions=new ArrayList<GuiaRemision>();
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {					
					guiaremisionLogic.getEntity(idGuiaRemision);
					
					//guiaremisionLogic.getEntityWithConnection(idGuiaRemision);
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
								
				if(Constantes.ISUSAEJBLOGICLAYER) {
					guiaremisionLogic.setGuiaRemisions(new ArrayList<GuiaRemision>());
					guiaremisionLogic.getGuiaRemisions().add(guiaremisionLogic.getGuiaRemision());
				
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.guiaremisions=new ArrayList<GuiaRemision>();
					this.guiaremisions.add(guiaremision);
				}
				
				if(guiaremisionLogic.getGuiaRemision()==null)	{
					
				
				}			
			}
			
		
			else if(sAccionBusqueda.equals("FK_IdCiudadDestino")) {
				this.sDetalleReporte=GuiaRemisionConstantesFunciones.getDetalleIndiceFK_IdCiudadDestino(id_ciudad_destinoFK_IdCiudadDestino);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					guiaremisionLogic.getGuiaRemisionsFK_IdCiudadDestino(finalQueryGlobal,pagination,id_ciudad_destinoFK_IdCiudadDestino);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=GuiaRemisionConstantesFunciones.getDetalleIndiceFK_IdCiudadDestino(id_ciudad_destinoFK_IdCiudadDestino);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=GuiaRemisionConstantesFunciones.getDetalleIndiceFK_IdCiudadDestino(id_ciudad_destinoFK_IdCiudadDestino);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=guiaremisionLogic.getGuiaRemisions()==null||guiaremisionLogic.getGuiaRemisions().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=guiaremisions==null|| guiaremisions.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						guiaremisionsAux=new ArrayList<GuiaRemision>();
						guiaremisionsAux.addAll(guiaremisionLogic.getGuiaRemisions());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							guiaremisionsAux=new ArrayList<GuiaRemision>();
							guiaremisionsAux.addAll(guiaremisions);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							guiaremisionLogic.getGuiaRemisionsFK_IdCiudadDestino(finalQueryGlobal,pagination,id_ciudad_destinoFK_IdCiudadDestino);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=GuiaRemisionConstantesFunciones.getDetalleIndiceFK_IdCiudadDestino(id_ciudad_destinoFK_IdCiudadDestino);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=GuiaRemisionConstantesFunciones.getDetalleIndiceFK_IdCiudadDestino(id_ciudad_destinoFK_IdCiudadDestino);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteGuiaRemisions("FK_IdCiudadDestino",guiaremisionLogic.getGuiaRemisions());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteGuiaRemisions("FK_IdCiudadDestino",guiaremisions);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						guiaremisionLogic.setGuiaRemisions(new ArrayList<GuiaRemision>());
						guiaremisionLogic.getGuiaRemisions().addAll(guiaremisionsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							guiaremisions=new ArrayList<GuiaRemision>();
							guiaremisions.addAll(guiaremisionsAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdCiudadOrigen")) {
				this.sDetalleReporte=GuiaRemisionConstantesFunciones.getDetalleIndiceFK_IdCiudadOrigen(id_ciudad_origenFK_IdCiudadOrigen);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					guiaremisionLogic.getGuiaRemisionsFK_IdCiudadOrigen(finalQueryGlobal,pagination,id_ciudad_origenFK_IdCiudadOrigen);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=GuiaRemisionConstantesFunciones.getDetalleIndiceFK_IdCiudadOrigen(id_ciudad_origenFK_IdCiudadOrigen);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=GuiaRemisionConstantesFunciones.getDetalleIndiceFK_IdCiudadOrigen(id_ciudad_origenFK_IdCiudadOrigen);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=guiaremisionLogic.getGuiaRemisions()==null||guiaremisionLogic.getGuiaRemisions().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=guiaremisions==null|| guiaremisions.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						guiaremisionsAux=new ArrayList<GuiaRemision>();
						guiaremisionsAux.addAll(guiaremisionLogic.getGuiaRemisions());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							guiaremisionsAux=new ArrayList<GuiaRemision>();
							guiaremisionsAux.addAll(guiaremisions);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							guiaremisionLogic.getGuiaRemisionsFK_IdCiudadOrigen(finalQueryGlobal,pagination,id_ciudad_origenFK_IdCiudadOrigen);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=GuiaRemisionConstantesFunciones.getDetalleIndiceFK_IdCiudadOrigen(id_ciudad_origenFK_IdCiudadOrigen);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=GuiaRemisionConstantesFunciones.getDetalleIndiceFK_IdCiudadOrigen(id_ciudad_origenFK_IdCiudadOrigen);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteGuiaRemisions("FK_IdCiudadOrigen",guiaremisionLogic.getGuiaRemisions());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteGuiaRemisions("FK_IdCiudadOrigen",guiaremisions);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						guiaremisionLogic.setGuiaRemisions(new ArrayList<GuiaRemision>());
						guiaremisionLogic.getGuiaRemisions().addAll(guiaremisionsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							guiaremisions=new ArrayList<GuiaRemision>();
							guiaremisions.addAll(guiaremisionsAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdCliente")) {
				this.sDetalleReporte=GuiaRemisionConstantesFunciones.getDetalleIndiceFK_IdCliente(id_clienteFK_IdCliente);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					guiaremisionLogic.getGuiaRemisionsFK_IdCliente(finalQueryGlobal,pagination,id_clienteFK_IdCliente);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=GuiaRemisionConstantesFunciones.getDetalleIndiceFK_IdCliente(id_clienteFK_IdCliente);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=GuiaRemisionConstantesFunciones.getDetalleIndiceFK_IdCliente(id_clienteFK_IdCliente);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=guiaremisionLogic.getGuiaRemisions()==null||guiaremisionLogic.getGuiaRemisions().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=guiaremisions==null|| guiaremisions.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						guiaremisionsAux=new ArrayList<GuiaRemision>();
						guiaremisionsAux.addAll(guiaremisionLogic.getGuiaRemisions());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							guiaremisionsAux=new ArrayList<GuiaRemision>();
							guiaremisionsAux.addAll(guiaremisions);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							guiaremisionLogic.getGuiaRemisionsFK_IdCliente(finalQueryGlobal,pagination,id_clienteFK_IdCliente);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=GuiaRemisionConstantesFunciones.getDetalleIndiceFK_IdCliente(id_clienteFK_IdCliente);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=GuiaRemisionConstantesFunciones.getDetalleIndiceFK_IdCliente(id_clienteFK_IdCliente);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteGuiaRemisions("FK_IdCliente",guiaremisionLogic.getGuiaRemisions());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteGuiaRemisions("FK_IdCliente",guiaremisions);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						guiaremisionLogic.setGuiaRemisions(new ArrayList<GuiaRemision>());
						guiaremisionLogic.getGuiaRemisions().addAll(guiaremisionsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							guiaremisions=new ArrayList<GuiaRemision>();
							guiaremisions.addAll(guiaremisionsAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdConsultor")) {
				this.sDetalleReporte=GuiaRemisionConstantesFunciones.getDetalleIndiceFK_IdConsultor(id_consultorFK_IdConsultor);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					guiaremisionLogic.getGuiaRemisionsFK_IdConsultor(finalQueryGlobal,pagination,id_consultorFK_IdConsultor);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=GuiaRemisionConstantesFunciones.getDetalleIndiceFK_IdConsultor(id_consultorFK_IdConsultor);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=GuiaRemisionConstantesFunciones.getDetalleIndiceFK_IdConsultor(id_consultorFK_IdConsultor);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=guiaremisionLogic.getGuiaRemisions()==null||guiaremisionLogic.getGuiaRemisions().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=guiaremisions==null|| guiaremisions.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						guiaremisionsAux=new ArrayList<GuiaRemision>();
						guiaremisionsAux.addAll(guiaremisionLogic.getGuiaRemisions());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							guiaremisionsAux=new ArrayList<GuiaRemision>();
							guiaremisionsAux.addAll(guiaremisions);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							guiaremisionLogic.getGuiaRemisionsFK_IdConsultor(finalQueryGlobal,pagination,id_consultorFK_IdConsultor);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=GuiaRemisionConstantesFunciones.getDetalleIndiceFK_IdConsultor(id_consultorFK_IdConsultor);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=GuiaRemisionConstantesFunciones.getDetalleIndiceFK_IdConsultor(id_consultorFK_IdConsultor);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteGuiaRemisions("FK_IdConsultor",guiaremisionLogic.getGuiaRemisions());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteGuiaRemisions("FK_IdConsultor",guiaremisions);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						guiaremisionLogic.setGuiaRemisions(new ArrayList<GuiaRemision>());
						guiaremisionLogic.getGuiaRemisions().addAll(guiaremisionsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							guiaremisions=new ArrayList<GuiaRemision>();
							guiaremisions.addAll(guiaremisionsAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdEjercicio")) {
				this.sDetalleReporte=GuiaRemisionConstantesFunciones.getDetalleIndiceFK_IdEjercicio(id_ejercicioFK_IdEjercicio);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					guiaremisionLogic.getGuiaRemisionsFK_IdEjercicio(finalQueryGlobal,pagination,id_ejercicioFK_IdEjercicio);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=GuiaRemisionConstantesFunciones.getDetalleIndiceFK_IdEjercicio(id_ejercicioFK_IdEjercicio);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=GuiaRemisionConstantesFunciones.getDetalleIndiceFK_IdEjercicio(id_ejercicioFK_IdEjercicio);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=guiaremisionLogic.getGuiaRemisions()==null||guiaremisionLogic.getGuiaRemisions().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=guiaremisions==null|| guiaremisions.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						guiaremisionsAux=new ArrayList<GuiaRemision>();
						guiaremisionsAux.addAll(guiaremisionLogic.getGuiaRemisions());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							guiaremisionsAux=new ArrayList<GuiaRemision>();
							guiaremisionsAux.addAll(guiaremisions);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							guiaremisionLogic.getGuiaRemisionsFK_IdEjercicio(finalQueryGlobal,pagination,id_ejercicioFK_IdEjercicio);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=GuiaRemisionConstantesFunciones.getDetalleIndiceFK_IdEjercicio(id_ejercicioFK_IdEjercicio);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=GuiaRemisionConstantesFunciones.getDetalleIndiceFK_IdEjercicio(id_ejercicioFK_IdEjercicio);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteGuiaRemisions("FK_IdEjercicio",guiaremisionLogic.getGuiaRemisions());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteGuiaRemisions("FK_IdEjercicio",guiaremisions);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						guiaremisionLogic.setGuiaRemisions(new ArrayList<GuiaRemision>());
						guiaremisionLogic.getGuiaRemisions().addAll(guiaremisionsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							guiaremisions=new ArrayList<GuiaRemision>();
							guiaremisions.addAll(guiaremisionsAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdEmpleado")) {
				this.sDetalleReporte=GuiaRemisionConstantesFunciones.getDetalleIndiceFK_IdEmpleado(id_empleadoFK_IdEmpleado);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					guiaremisionLogic.getGuiaRemisionsFK_IdEmpleado(finalQueryGlobal,pagination,id_empleadoFK_IdEmpleado);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=GuiaRemisionConstantesFunciones.getDetalleIndiceFK_IdEmpleado(id_empleadoFK_IdEmpleado);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=GuiaRemisionConstantesFunciones.getDetalleIndiceFK_IdEmpleado(id_empleadoFK_IdEmpleado);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=guiaremisionLogic.getGuiaRemisions()==null||guiaremisionLogic.getGuiaRemisions().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=guiaremisions==null|| guiaremisions.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						guiaremisionsAux=new ArrayList<GuiaRemision>();
						guiaremisionsAux.addAll(guiaremisionLogic.getGuiaRemisions());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							guiaremisionsAux=new ArrayList<GuiaRemision>();
							guiaremisionsAux.addAll(guiaremisions);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							guiaremisionLogic.getGuiaRemisionsFK_IdEmpleado(finalQueryGlobal,pagination,id_empleadoFK_IdEmpleado);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=GuiaRemisionConstantesFunciones.getDetalleIndiceFK_IdEmpleado(id_empleadoFK_IdEmpleado);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=GuiaRemisionConstantesFunciones.getDetalleIndiceFK_IdEmpleado(id_empleadoFK_IdEmpleado);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteGuiaRemisions("FK_IdEmpleado",guiaremisionLogic.getGuiaRemisions());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteGuiaRemisions("FK_IdEmpleado",guiaremisions);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						guiaremisionLogic.setGuiaRemisions(new ArrayList<GuiaRemision>());
						guiaremisionLogic.getGuiaRemisions().addAll(guiaremisionsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							guiaremisions=new ArrayList<GuiaRemision>();
							guiaremisions.addAll(guiaremisionsAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdEmpresa")) {
				this.sDetalleReporte=GuiaRemisionConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					guiaremisionLogic.getGuiaRemisionsFK_IdEmpresa(finalQueryGlobal,pagination,id_empresaFK_IdEmpresa);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=GuiaRemisionConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=GuiaRemisionConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=guiaremisionLogic.getGuiaRemisions()==null||guiaremisionLogic.getGuiaRemisions().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=guiaremisions==null|| guiaremisions.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						guiaremisionsAux=new ArrayList<GuiaRemision>();
						guiaremisionsAux.addAll(guiaremisionLogic.getGuiaRemisions());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							guiaremisionsAux=new ArrayList<GuiaRemision>();
							guiaremisionsAux.addAll(guiaremisions);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							guiaremisionLogic.getGuiaRemisionsFK_IdEmpresa(finalQueryGlobal,pagination,id_empresaFK_IdEmpresa);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=GuiaRemisionConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=GuiaRemisionConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteGuiaRemisions("FK_IdEmpresa",guiaremisionLogic.getGuiaRemisions());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteGuiaRemisions("FK_IdEmpresa",guiaremisions);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						guiaremisionLogic.setGuiaRemisions(new ArrayList<GuiaRemision>());
						guiaremisionLogic.getGuiaRemisions().addAll(guiaremisionsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							guiaremisions=new ArrayList<GuiaRemision>();
							guiaremisions.addAll(guiaremisionsAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdFactura")) {
				this.sDetalleReporte=GuiaRemisionConstantesFunciones.getDetalleIndiceFK_IdFactura(id_facturaFK_IdFactura);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					guiaremisionLogic.getGuiaRemisionsFK_IdFactura(finalQueryGlobal,pagination,id_facturaFK_IdFactura);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=GuiaRemisionConstantesFunciones.getDetalleIndiceFK_IdFactura(id_facturaFK_IdFactura);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=GuiaRemisionConstantesFunciones.getDetalleIndiceFK_IdFactura(id_facturaFK_IdFactura);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=guiaremisionLogic.getGuiaRemisions()==null||guiaremisionLogic.getGuiaRemisions().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=guiaremisions==null|| guiaremisions.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						guiaremisionsAux=new ArrayList<GuiaRemision>();
						guiaremisionsAux.addAll(guiaremisionLogic.getGuiaRemisions());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							guiaremisionsAux=new ArrayList<GuiaRemision>();
							guiaremisionsAux.addAll(guiaremisions);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							guiaremisionLogic.getGuiaRemisionsFK_IdFactura(finalQueryGlobal,pagination,id_facturaFK_IdFactura);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=GuiaRemisionConstantesFunciones.getDetalleIndiceFK_IdFactura(id_facturaFK_IdFactura);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=GuiaRemisionConstantesFunciones.getDetalleIndiceFK_IdFactura(id_facturaFK_IdFactura);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteGuiaRemisions("FK_IdFactura",guiaremisionLogic.getGuiaRemisions());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteGuiaRemisions("FK_IdFactura",guiaremisions);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						guiaremisionLogic.setGuiaRemisions(new ArrayList<GuiaRemision>());
						guiaremisionLogic.getGuiaRemisions().addAll(guiaremisionsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							guiaremisions=new ArrayList<GuiaRemision>();
							guiaremisions.addAll(guiaremisionsAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdFormato")) {
				this.sDetalleReporte=GuiaRemisionConstantesFunciones.getDetalleIndiceFK_IdFormato(id_formatoFK_IdFormato);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					guiaremisionLogic.getGuiaRemisionsFK_IdFormato(finalQueryGlobal,pagination,id_formatoFK_IdFormato);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=GuiaRemisionConstantesFunciones.getDetalleIndiceFK_IdFormato(id_formatoFK_IdFormato);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=GuiaRemisionConstantesFunciones.getDetalleIndiceFK_IdFormato(id_formatoFK_IdFormato);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=guiaremisionLogic.getGuiaRemisions()==null||guiaremisionLogic.getGuiaRemisions().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=guiaremisions==null|| guiaremisions.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						guiaremisionsAux=new ArrayList<GuiaRemision>();
						guiaremisionsAux.addAll(guiaremisionLogic.getGuiaRemisions());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							guiaremisionsAux=new ArrayList<GuiaRemision>();
							guiaremisionsAux.addAll(guiaremisions);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							guiaremisionLogic.getGuiaRemisionsFK_IdFormato(finalQueryGlobal,pagination,id_formatoFK_IdFormato);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=GuiaRemisionConstantesFunciones.getDetalleIndiceFK_IdFormato(id_formatoFK_IdFormato);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=GuiaRemisionConstantesFunciones.getDetalleIndiceFK_IdFormato(id_formatoFK_IdFormato);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteGuiaRemisions("FK_IdFormato",guiaremisionLogic.getGuiaRemisions());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteGuiaRemisions("FK_IdFormato",guiaremisions);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						guiaremisionLogic.setGuiaRemisions(new ArrayList<GuiaRemision>());
						guiaremisionLogic.getGuiaRemisions().addAll(guiaremisionsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							guiaremisions=new ArrayList<GuiaRemision>();
							guiaremisions.addAll(guiaremisionsAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdMoneda")) {
				this.sDetalleReporte=GuiaRemisionConstantesFunciones.getDetalleIndiceFK_IdMoneda(id_monedaFK_IdMoneda);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					guiaremisionLogic.getGuiaRemisionsFK_IdMoneda(finalQueryGlobal,pagination,id_monedaFK_IdMoneda);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=GuiaRemisionConstantesFunciones.getDetalleIndiceFK_IdMoneda(id_monedaFK_IdMoneda);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=GuiaRemisionConstantesFunciones.getDetalleIndiceFK_IdMoneda(id_monedaFK_IdMoneda);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=guiaremisionLogic.getGuiaRemisions()==null||guiaremisionLogic.getGuiaRemisions().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=guiaremisions==null|| guiaremisions.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						guiaremisionsAux=new ArrayList<GuiaRemision>();
						guiaremisionsAux.addAll(guiaremisionLogic.getGuiaRemisions());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							guiaremisionsAux=new ArrayList<GuiaRemision>();
							guiaremisionsAux.addAll(guiaremisions);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							guiaremisionLogic.getGuiaRemisionsFK_IdMoneda(finalQueryGlobal,pagination,id_monedaFK_IdMoneda);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=GuiaRemisionConstantesFunciones.getDetalleIndiceFK_IdMoneda(id_monedaFK_IdMoneda);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=GuiaRemisionConstantesFunciones.getDetalleIndiceFK_IdMoneda(id_monedaFK_IdMoneda);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteGuiaRemisions("FK_IdMoneda",guiaremisionLogic.getGuiaRemisions());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteGuiaRemisions("FK_IdMoneda",guiaremisions);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						guiaremisionLogic.setGuiaRemisions(new ArrayList<GuiaRemision>());
						guiaremisionLogic.getGuiaRemisions().addAll(guiaremisionsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							guiaremisions=new ArrayList<GuiaRemision>();
							guiaremisions.addAll(guiaremisionsAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdPeriodo")) {
				this.sDetalleReporte=GuiaRemisionConstantesFunciones.getDetalleIndiceFK_IdPeriodo(id_periodoFK_IdPeriodo);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					guiaremisionLogic.getGuiaRemisionsFK_IdPeriodo(finalQueryGlobal,pagination,id_periodoFK_IdPeriodo);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=GuiaRemisionConstantesFunciones.getDetalleIndiceFK_IdPeriodo(id_periodoFK_IdPeriodo);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=GuiaRemisionConstantesFunciones.getDetalleIndiceFK_IdPeriodo(id_periodoFK_IdPeriodo);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=guiaremisionLogic.getGuiaRemisions()==null||guiaremisionLogic.getGuiaRemisions().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=guiaremisions==null|| guiaremisions.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						guiaremisionsAux=new ArrayList<GuiaRemision>();
						guiaremisionsAux.addAll(guiaremisionLogic.getGuiaRemisions());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							guiaremisionsAux=new ArrayList<GuiaRemision>();
							guiaremisionsAux.addAll(guiaremisions);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							guiaremisionLogic.getGuiaRemisionsFK_IdPeriodo(finalQueryGlobal,pagination,id_periodoFK_IdPeriodo);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=GuiaRemisionConstantesFunciones.getDetalleIndiceFK_IdPeriodo(id_periodoFK_IdPeriodo);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=GuiaRemisionConstantesFunciones.getDetalleIndiceFK_IdPeriodo(id_periodoFK_IdPeriodo);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteGuiaRemisions("FK_IdPeriodo",guiaremisionLogic.getGuiaRemisions());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteGuiaRemisions("FK_IdPeriodo",guiaremisions);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						guiaremisionLogic.setGuiaRemisions(new ArrayList<GuiaRemision>());
						guiaremisionLogic.getGuiaRemisions().addAll(guiaremisionsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							guiaremisions=new ArrayList<GuiaRemision>();
							guiaremisions.addAll(guiaremisionsAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdSubCliente")) {
				this.sDetalleReporte=GuiaRemisionConstantesFunciones.getDetalleIndiceFK_IdSubCliente(id_sub_clienteFK_IdSubCliente);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					guiaremisionLogic.getGuiaRemisionsFK_IdSubCliente(finalQueryGlobal,pagination,id_sub_clienteFK_IdSubCliente);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=GuiaRemisionConstantesFunciones.getDetalleIndiceFK_IdSubCliente(id_sub_clienteFK_IdSubCliente);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=GuiaRemisionConstantesFunciones.getDetalleIndiceFK_IdSubCliente(id_sub_clienteFK_IdSubCliente);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=guiaremisionLogic.getGuiaRemisions()==null||guiaremisionLogic.getGuiaRemisions().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=guiaremisions==null|| guiaremisions.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						guiaremisionsAux=new ArrayList<GuiaRemision>();
						guiaremisionsAux.addAll(guiaremisionLogic.getGuiaRemisions());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							guiaremisionsAux=new ArrayList<GuiaRemision>();
							guiaremisionsAux.addAll(guiaremisions);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							guiaremisionLogic.getGuiaRemisionsFK_IdSubCliente(finalQueryGlobal,pagination,id_sub_clienteFK_IdSubCliente);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=GuiaRemisionConstantesFunciones.getDetalleIndiceFK_IdSubCliente(id_sub_clienteFK_IdSubCliente);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=GuiaRemisionConstantesFunciones.getDetalleIndiceFK_IdSubCliente(id_sub_clienteFK_IdSubCliente);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteGuiaRemisions("FK_IdSubCliente",guiaremisionLogic.getGuiaRemisions());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteGuiaRemisions("FK_IdSubCliente",guiaremisions);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						guiaremisionLogic.setGuiaRemisions(new ArrayList<GuiaRemision>());
						guiaremisionLogic.getGuiaRemisions().addAll(guiaremisionsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							guiaremisions=new ArrayList<GuiaRemision>();
							guiaremisions.addAll(guiaremisionsAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdSucursal")) {
				this.sDetalleReporte=GuiaRemisionConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					guiaremisionLogic.getGuiaRemisionsFK_IdSucursal(finalQueryGlobal,pagination,id_sucursalFK_IdSucursal);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=GuiaRemisionConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=GuiaRemisionConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=guiaremisionLogic.getGuiaRemisions()==null||guiaremisionLogic.getGuiaRemisions().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=guiaremisions==null|| guiaremisions.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						guiaremisionsAux=new ArrayList<GuiaRemision>();
						guiaremisionsAux.addAll(guiaremisionLogic.getGuiaRemisions());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							guiaremisionsAux=new ArrayList<GuiaRemision>();
							guiaremisionsAux.addAll(guiaremisions);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							guiaremisionLogic.getGuiaRemisionsFK_IdSucursal(finalQueryGlobal,pagination,id_sucursalFK_IdSucursal);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=GuiaRemisionConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=GuiaRemisionConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteGuiaRemisions("FK_IdSucursal",guiaremisionLogic.getGuiaRemisions());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteGuiaRemisions("FK_IdSucursal",guiaremisions);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						guiaremisionLogic.setGuiaRemisions(new ArrayList<GuiaRemision>());
						guiaremisionLogic.getGuiaRemisions().addAll(guiaremisionsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							guiaremisions=new ArrayList<GuiaRemision>();
							guiaremisions.addAll(guiaremisionsAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdTipoCambio")) {
				this.sDetalleReporte=GuiaRemisionConstantesFunciones.getDetalleIndiceFK_IdTipoCambio(id_tipo_cambioFK_IdTipoCambio);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					guiaremisionLogic.getGuiaRemisionsFK_IdTipoCambio(finalQueryGlobal,pagination,id_tipo_cambioFK_IdTipoCambio);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=GuiaRemisionConstantesFunciones.getDetalleIndiceFK_IdTipoCambio(id_tipo_cambioFK_IdTipoCambio);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=GuiaRemisionConstantesFunciones.getDetalleIndiceFK_IdTipoCambio(id_tipo_cambioFK_IdTipoCambio);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=guiaremisionLogic.getGuiaRemisions()==null||guiaremisionLogic.getGuiaRemisions().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=guiaremisions==null|| guiaremisions.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						guiaremisionsAux=new ArrayList<GuiaRemision>();
						guiaremisionsAux.addAll(guiaremisionLogic.getGuiaRemisions());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							guiaremisionsAux=new ArrayList<GuiaRemision>();
							guiaremisionsAux.addAll(guiaremisions);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							guiaremisionLogic.getGuiaRemisionsFK_IdTipoCambio(finalQueryGlobal,pagination,id_tipo_cambioFK_IdTipoCambio);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=GuiaRemisionConstantesFunciones.getDetalleIndiceFK_IdTipoCambio(id_tipo_cambioFK_IdTipoCambio);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=GuiaRemisionConstantesFunciones.getDetalleIndiceFK_IdTipoCambio(id_tipo_cambioFK_IdTipoCambio);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteGuiaRemisions("FK_IdTipoCambio",guiaremisionLogic.getGuiaRemisions());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteGuiaRemisions("FK_IdTipoCambio",guiaremisions);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						guiaremisionLogic.setGuiaRemisions(new ArrayList<GuiaRemision>());
						guiaremisionLogic.getGuiaRemisions().addAll(guiaremisionsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							guiaremisions=new ArrayList<GuiaRemision>();
							guiaremisions.addAll(guiaremisionsAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdTipoLlamada")) {
				this.sDetalleReporte=GuiaRemisionConstantesFunciones.getDetalleIndiceFK_IdTipoLlamada(id_tipo_llamadaFK_IdTipoLlamada);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					guiaremisionLogic.getGuiaRemisionsFK_IdTipoLlamada(finalQueryGlobal,pagination,id_tipo_llamadaFK_IdTipoLlamada);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=GuiaRemisionConstantesFunciones.getDetalleIndiceFK_IdTipoLlamada(id_tipo_llamadaFK_IdTipoLlamada);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=GuiaRemisionConstantesFunciones.getDetalleIndiceFK_IdTipoLlamada(id_tipo_llamadaFK_IdTipoLlamada);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=guiaremisionLogic.getGuiaRemisions()==null||guiaremisionLogic.getGuiaRemisions().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=guiaremisions==null|| guiaremisions.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						guiaremisionsAux=new ArrayList<GuiaRemision>();
						guiaremisionsAux.addAll(guiaremisionLogic.getGuiaRemisions());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							guiaremisionsAux=new ArrayList<GuiaRemision>();
							guiaremisionsAux.addAll(guiaremisions);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							guiaremisionLogic.getGuiaRemisionsFK_IdTipoLlamada(finalQueryGlobal,pagination,id_tipo_llamadaFK_IdTipoLlamada);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=GuiaRemisionConstantesFunciones.getDetalleIndiceFK_IdTipoLlamada(id_tipo_llamadaFK_IdTipoLlamada);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=GuiaRemisionConstantesFunciones.getDetalleIndiceFK_IdTipoLlamada(id_tipo_llamadaFK_IdTipoLlamada);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteGuiaRemisions("FK_IdTipoLlamada",guiaremisionLogic.getGuiaRemisions());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteGuiaRemisions("FK_IdTipoLlamada",guiaremisions);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						guiaremisionLogic.setGuiaRemisions(new ArrayList<GuiaRemision>());
						guiaremisionLogic.getGuiaRemisions().addAll(guiaremisionsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							guiaremisions=new ArrayList<GuiaRemision>();
							guiaremisions.addAll(guiaremisionsAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdTipoPrecio")) {
				this.sDetalleReporte=GuiaRemisionConstantesFunciones.getDetalleIndiceFK_IdTipoPrecio(id_tipo_precioFK_IdTipoPrecio);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					guiaremisionLogic.getGuiaRemisionsFK_IdTipoPrecio(finalQueryGlobal,pagination,id_tipo_precioFK_IdTipoPrecio);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=GuiaRemisionConstantesFunciones.getDetalleIndiceFK_IdTipoPrecio(id_tipo_precioFK_IdTipoPrecio);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=GuiaRemisionConstantesFunciones.getDetalleIndiceFK_IdTipoPrecio(id_tipo_precioFK_IdTipoPrecio);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=guiaremisionLogic.getGuiaRemisions()==null||guiaremisionLogic.getGuiaRemisions().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=guiaremisions==null|| guiaremisions.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						guiaremisionsAux=new ArrayList<GuiaRemision>();
						guiaremisionsAux.addAll(guiaremisionLogic.getGuiaRemisions());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							guiaremisionsAux=new ArrayList<GuiaRemision>();
							guiaremisionsAux.addAll(guiaremisions);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							guiaremisionLogic.getGuiaRemisionsFK_IdTipoPrecio(finalQueryGlobal,pagination,id_tipo_precioFK_IdTipoPrecio);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=GuiaRemisionConstantesFunciones.getDetalleIndiceFK_IdTipoPrecio(id_tipo_precioFK_IdTipoPrecio);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=GuiaRemisionConstantesFunciones.getDetalleIndiceFK_IdTipoPrecio(id_tipo_precioFK_IdTipoPrecio);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteGuiaRemisions("FK_IdTipoPrecio",guiaremisionLogic.getGuiaRemisions());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteGuiaRemisions("FK_IdTipoPrecio",guiaremisions);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						guiaremisionLogic.setGuiaRemisions(new ArrayList<GuiaRemision>());
						guiaremisionLogic.getGuiaRemisions().addAll(guiaremisionsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							guiaremisions=new ArrayList<GuiaRemision>();
							guiaremisions.addAll(guiaremisionsAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdTransporte")) {
				this.sDetalleReporte=GuiaRemisionConstantesFunciones.getDetalleIndiceFK_IdTransporte(id_transporteFK_IdTransporte);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					guiaremisionLogic.getGuiaRemisionsFK_IdTransporte(finalQueryGlobal,pagination,id_transporteFK_IdTransporte);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=GuiaRemisionConstantesFunciones.getDetalleIndiceFK_IdTransporte(id_transporteFK_IdTransporte);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=GuiaRemisionConstantesFunciones.getDetalleIndiceFK_IdTransporte(id_transporteFK_IdTransporte);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=guiaremisionLogic.getGuiaRemisions()==null||guiaremisionLogic.getGuiaRemisions().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=guiaremisions==null|| guiaremisions.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						guiaremisionsAux=new ArrayList<GuiaRemision>();
						guiaremisionsAux.addAll(guiaremisionLogic.getGuiaRemisions());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							guiaremisionsAux=new ArrayList<GuiaRemision>();
							guiaremisionsAux.addAll(guiaremisions);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							guiaremisionLogic.getGuiaRemisionsFK_IdTransporte(finalQueryGlobal,pagination,id_transporteFK_IdTransporte);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=GuiaRemisionConstantesFunciones.getDetalleIndiceFK_IdTransporte(id_transporteFK_IdTransporte);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=GuiaRemisionConstantesFunciones.getDetalleIndiceFK_IdTransporte(id_transporteFK_IdTransporte);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteGuiaRemisions("FK_IdTransporte",guiaremisionLogic.getGuiaRemisions());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteGuiaRemisions("FK_IdTransporte",guiaremisions);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						guiaremisionLogic.setGuiaRemisions(new ArrayList<GuiaRemision>());
						guiaremisionLogic.getGuiaRemisions().addAll(guiaremisionsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							guiaremisions=new ArrayList<GuiaRemision>();
							guiaremisions.addAll(guiaremisionsAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdTransportista")) {
				this.sDetalleReporte=GuiaRemisionConstantesFunciones.getDetalleIndiceFK_IdTransportista(id_transportistaFK_IdTransportista);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					guiaremisionLogic.getGuiaRemisionsFK_IdTransportista(finalQueryGlobal,pagination,id_transportistaFK_IdTransportista);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=GuiaRemisionConstantesFunciones.getDetalleIndiceFK_IdTransportista(id_transportistaFK_IdTransportista);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=GuiaRemisionConstantesFunciones.getDetalleIndiceFK_IdTransportista(id_transportistaFK_IdTransportista);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=guiaremisionLogic.getGuiaRemisions()==null||guiaremisionLogic.getGuiaRemisions().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=guiaremisions==null|| guiaremisions.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						guiaremisionsAux=new ArrayList<GuiaRemision>();
						guiaremisionsAux.addAll(guiaremisionLogic.getGuiaRemisions());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							guiaremisionsAux=new ArrayList<GuiaRemision>();
							guiaremisionsAux.addAll(guiaremisions);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							guiaremisionLogic.getGuiaRemisionsFK_IdTransportista(finalQueryGlobal,pagination,id_transportistaFK_IdTransportista);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=GuiaRemisionConstantesFunciones.getDetalleIndiceFK_IdTransportista(id_transportistaFK_IdTransportista);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=GuiaRemisionConstantesFunciones.getDetalleIndiceFK_IdTransportista(id_transportistaFK_IdTransportista);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteGuiaRemisions("FK_IdTransportista",guiaremisionLogic.getGuiaRemisions());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteGuiaRemisions("FK_IdTransportista",guiaremisions);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						guiaremisionLogic.setGuiaRemisions(new ArrayList<GuiaRemision>());
						guiaremisionLogic.getGuiaRemisions().addAll(guiaremisionsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							guiaremisions=new ArrayList<GuiaRemision>();
							guiaremisions.addAll(guiaremisionsAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdUsuario")) {
				this.sDetalleReporte=GuiaRemisionConstantesFunciones.getDetalleIndiceFK_IdUsuario(id_usuarioFK_IdUsuario);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					guiaremisionLogic.getGuiaRemisionsFK_IdUsuario(finalQueryGlobal,pagination,id_usuarioFK_IdUsuario);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=GuiaRemisionConstantesFunciones.getDetalleIndiceFK_IdUsuario(id_usuarioFK_IdUsuario);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=GuiaRemisionConstantesFunciones.getDetalleIndiceFK_IdUsuario(id_usuarioFK_IdUsuario);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=guiaremisionLogic.getGuiaRemisions()==null||guiaremisionLogic.getGuiaRemisions().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=guiaremisions==null|| guiaremisions.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						guiaremisionsAux=new ArrayList<GuiaRemision>();
						guiaremisionsAux.addAll(guiaremisionLogic.getGuiaRemisions());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							guiaremisionsAux=new ArrayList<GuiaRemision>();
							guiaremisionsAux.addAll(guiaremisions);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							guiaremisionLogic.getGuiaRemisionsFK_IdUsuario(finalQueryGlobal,pagination,id_usuarioFK_IdUsuario);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=GuiaRemisionConstantesFunciones.getDetalleIndiceFK_IdUsuario(id_usuarioFK_IdUsuario);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=GuiaRemisionConstantesFunciones.getDetalleIndiceFK_IdUsuario(id_usuarioFK_IdUsuario);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteGuiaRemisions("FK_IdUsuario",guiaremisionLogic.getGuiaRemisions());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteGuiaRemisions("FK_IdUsuario",guiaremisions);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						guiaremisionLogic.setGuiaRemisions(new ArrayList<GuiaRemision>());
						guiaremisionLogic.getGuiaRemisions().addAll(guiaremisionsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							guiaremisions=new ArrayList<GuiaRemision>();
							guiaremisions.addAll(guiaremisionsAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdVendedor")) {
				this.sDetalleReporte=GuiaRemisionConstantesFunciones.getDetalleIndiceFK_IdVendedor(id_vendedorFK_IdVendedor);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					guiaremisionLogic.getGuiaRemisionsFK_IdVendedor(finalQueryGlobal,pagination,id_vendedorFK_IdVendedor);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=GuiaRemisionConstantesFunciones.getDetalleIndiceFK_IdVendedor(id_vendedorFK_IdVendedor);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=GuiaRemisionConstantesFunciones.getDetalleIndiceFK_IdVendedor(id_vendedorFK_IdVendedor);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=guiaremisionLogic.getGuiaRemisions()==null||guiaremisionLogic.getGuiaRemisions().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=guiaremisions==null|| guiaremisions.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						guiaremisionsAux=new ArrayList<GuiaRemision>();
						guiaremisionsAux.addAll(guiaremisionLogic.getGuiaRemisions());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							guiaremisionsAux=new ArrayList<GuiaRemision>();
							guiaremisionsAux.addAll(guiaremisions);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							guiaremisionLogic.getGuiaRemisionsFK_IdVendedor(finalQueryGlobal,pagination,id_vendedorFK_IdVendedor);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=GuiaRemisionConstantesFunciones.getDetalleIndiceFK_IdVendedor(id_vendedorFK_IdVendedor);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=GuiaRemisionConstantesFunciones.getDetalleIndiceFK_IdVendedor(id_vendedorFK_IdVendedor);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteGuiaRemisions("FK_IdVendedor",guiaremisionLogic.getGuiaRemisions());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteGuiaRemisions("FK_IdVendedor",guiaremisions);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						guiaremisionLogic.setGuiaRemisions(new ArrayList<GuiaRemision>());
						guiaremisionLogic.getGuiaRemisions().addAll(guiaremisionsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							guiaremisions=new ArrayList<GuiaRemision>();
							guiaremisions.addAll(guiaremisionsAux);
						}
						//ARCHITECTURE
					}
				}

			} 
		
		
		
		this.redimensionarTablaDatos();
		//this.refrescarForeignKeysDescripcionesGuiaRemision();
		
		
		if(this.conTotales) {
			this.crearFilaTotales();
		}		
		} catch (JRException e) {
			throw e;
		} catch(Exception e) {
			throw e;
      	} finally {
      		//this.finishProcessGuiaRemision();
      	}
		
	}				
	
	public void redimensionarTablaDatos() throws Exception {
		int iSizeTabla=0;
				
		iSizeTabla=this.getSizeTablaDatos();
		
		//ARCHITECTURE
		/*
		if(Constantes.ISUSAEJBLOGICLAYER) {	
			iSizeTabla=guiaremisionLogic.getGuiaRemisions().size();
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			iSizeTabla=guiaremisions.size();
		}
		*/
		//ARCHITECTURE
											
		this.redimensionarTablaDatos(iSizeTabla);		
	}
	
	public Integer getSizeTablaDatos() throws Exception {
		Integer iSizeTabla=0;
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {	
			iSizeTabla=guiaremisionLogic.getGuiaRemisions().size();
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			iSizeTabla=guiaremisions.size();
		}
		//ARCHITECTURE
											
		return iSizeTabla;		
	}
	
			
	public Boolean permiteMantenimiento(GuiaRemision guiaremision) {
		Boolean permite=true;
		
		if(this.guiaremision.getsType().equals(Constantes2.S_TOTALES)) {
			permite=false;
		}
		
		return permite;
	}
	
	public void traerValoresTablaTotales() throws Exception {
	}
	
	
	public void traerValoresTablaOrderBy() throws Exception {
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.arrOrderBy=GuiaRemisionConstantesFunciones.getOrderByListaGuiaRemision();							
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			this.arrOrderBy=GuiaRemisionConstantesFunciones.getOrderByListaGuiaRemision();
		}		
	}
	
	
	public Boolean existeFilaTotales() throws Exception {
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(GuiaRemision guiaremision:guiaremisionLogic.getGuiaRemisions()) {
				if(guiaremision.getsType().equals(Constantes2.S_TOTALES)) {
					guiaremisionTotales=guiaremision;
					existe=true;
					break;
				}
			}
								
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(GuiaRemision guiaremision:this.guiaremisions) {
				if(guiaremision.getsType().equals(Constantes2.S_TOTALES)) {
					guiaremisionTotales=guiaremision;
					existe=true;
					break;
				}
			}
		}
		
		return existe;
	}
	
	public void crearFilaTotales() throws Exception {
		Boolean existe=false;
		
		existe=this.existeFilaTotales();
		
		if(!existe) {
			//SI NO ES UNO A UNO SE CREA FILA TOTALES
			this.guiaremisionAux=new GuiaRemision();
			this.guiaremisionAux.setsType(Constantes2.S_TOTALES);
			this.guiaremisionAux.setIsNew(false);
			this.guiaremisionAux.setIsChanged(false);
			this.guiaremisionAux.setIsDeleted(false);
				
			if(Constantes.ISUSAEJBLOGICLAYER) {
				GuiaRemisionConstantesFunciones.TotalizarValoresFilaGuiaRemision(this.guiaremisionLogic.getGuiaRemisions(),this.guiaremisionAux);
				
				this.guiaremisionLogic.getGuiaRemisions().add(this.guiaremisionAux);
				
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
				GuiaRemisionConstantesFunciones.TotalizarValoresFilaGuiaRemision(this.guiaremisions,this.guiaremisionAux);
				
				this.guiaremisions.add(this.guiaremisionAux);
			}
		}
	}
	
	public void quitarFilaTotales() throws Exception {
		guiaremisionTotales=new GuiaRemision();
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			existe=this.existeFilaTotales();
			
			if(existe) {
				this.guiaremisionLogic.getGuiaRemisions().remove(guiaremisionTotales);
			}			
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			existe=this.existeFilaTotales();
			
			if(existe) {
				this.guiaremisions.remove(guiaremisionTotales);
			}
		}
	}
	
	public void actualizarFilaTotales() throws Exception {
		guiaremisionTotales=new GuiaRemision();
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(GuiaRemision guiaremision:guiaremisionLogic.getGuiaRemisions()) {
				if(guiaremision.getsType().equals(Constantes2.S_TOTALES)) {
					guiaremisionTotales=guiaremision;
					existe=true;
					break;
				}
			}
			
			if(existe) {
				GuiaRemisionConstantesFunciones.TotalizarValoresFilaGuiaRemision(this.guiaremisionLogic.getGuiaRemisions(),guiaremisionTotales);
			}			
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(GuiaRemision guiaremision:this.guiaremisions) {
				if(guiaremision.getsType().equals(Constantes2.S_TOTALES)) {
					guiaremisionTotales=guiaremision;
					existe=true;
					break;
				}
			}
			
			if(existe) {
				GuiaRemisionConstantesFunciones.TotalizarValoresFilaGuiaRemision(this.guiaremisions,guiaremisionTotales);
			}
		}
	}		
	
	public void recargarInformacion()throws Exception {
		try {
			sAccionBusqueda="Todos";
			this.iNumeroPaginacionPagina=0;
			
			this.procesarBusqueda(sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);
		}	
	}		
	
	
	public void getGuiaRemisionsFK_IdCiudadDestino()throws Exception {
		try {
			sAccionBusqueda="FK_IdCiudadDestino";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getGuiaRemisionsFK_IdCiudadOrigen()throws Exception {
		try {
			sAccionBusqueda="FK_IdCiudadOrigen";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getGuiaRemisionsFK_IdCliente()throws Exception {
		try {
			sAccionBusqueda="FK_IdCliente";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getGuiaRemisionsFK_IdConsultor()throws Exception {
		try {
			sAccionBusqueda="FK_IdConsultor";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getGuiaRemisionsFK_IdEjercicio()throws Exception {
		try {
			sAccionBusqueda="FK_IdEjercicio";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getGuiaRemisionsFK_IdEmpleado()throws Exception {
		try {
			sAccionBusqueda="FK_IdEmpleado";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getGuiaRemisionsFK_IdEmpresa()throws Exception {
		try {
			sAccionBusqueda="FK_IdEmpresa";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getGuiaRemisionsFK_IdFactura()throws Exception {
		try {
			sAccionBusqueda="FK_IdFactura";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getGuiaRemisionsFK_IdFormato()throws Exception {
		try {
			sAccionBusqueda="FK_IdFormato";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getGuiaRemisionsFK_IdMoneda()throws Exception {
		try {
			sAccionBusqueda="FK_IdMoneda";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getGuiaRemisionsFK_IdPeriodo()throws Exception {
		try {
			sAccionBusqueda="FK_IdPeriodo";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getGuiaRemisionsFK_IdSubCliente()throws Exception {
		try {
			sAccionBusqueda="FK_IdSubCliente";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getGuiaRemisionsFK_IdSucursal()throws Exception {
		try {
			sAccionBusqueda="FK_IdSucursal";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getGuiaRemisionsFK_IdTipoCambio()throws Exception {
		try {
			sAccionBusqueda="FK_IdTipoCambio";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getGuiaRemisionsFK_IdTipoLlamada()throws Exception {
		try {
			sAccionBusqueda="FK_IdTipoLlamada";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getGuiaRemisionsFK_IdTipoPrecio()throws Exception {
		try {
			sAccionBusqueda="FK_IdTipoPrecio";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getGuiaRemisionsFK_IdTransporte()throws Exception {
		try {
			sAccionBusqueda="FK_IdTransporte";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getGuiaRemisionsFK_IdTransportista()throws Exception {
		try {
			sAccionBusqueda="FK_IdTransportista";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getGuiaRemisionsFK_IdUsuario()throws Exception {
		try {
			sAccionBusqueda="FK_IdUsuario";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getGuiaRemisionsFK_IdVendedor()throws Exception {
		try {
			sAccionBusqueda="FK_IdVendedor";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	
	
	public void getGuiaRemisionsFK_IdCiudadDestino(String sFinalQuery,Long id_ciudad_destino)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					guiaremisionLogic.getGuiaRemisionsFK_IdCiudadDestino(sFinalQuery,this.pagination,id_ciudad_destino);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getGuiaRemisionsFK_IdCiudadOrigen(String sFinalQuery,Long id_ciudad_origen)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					guiaremisionLogic.getGuiaRemisionsFK_IdCiudadOrigen(sFinalQuery,this.pagination,id_ciudad_origen);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getGuiaRemisionsFK_IdCliente(String sFinalQuery,Long id_cliente)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					guiaremisionLogic.getGuiaRemisionsFK_IdCliente(sFinalQuery,this.pagination,id_cliente);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getGuiaRemisionsFK_IdConsultor(String sFinalQuery,Long id_consultor)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					guiaremisionLogic.getGuiaRemisionsFK_IdConsultor(sFinalQuery,this.pagination,id_consultor);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getGuiaRemisionsFK_IdEjercicio(String sFinalQuery,Long id_ejercicio)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					guiaremisionLogic.getGuiaRemisionsFK_IdEjercicio(sFinalQuery,this.pagination,id_ejercicio);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getGuiaRemisionsFK_IdEmpleado(String sFinalQuery,Long id_empleado)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					guiaremisionLogic.getGuiaRemisionsFK_IdEmpleado(sFinalQuery,this.pagination,id_empleado);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getGuiaRemisionsFK_IdEmpresa(String sFinalQuery,Long id_empresa)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					guiaremisionLogic.getGuiaRemisionsFK_IdEmpresa(sFinalQuery,this.pagination,id_empresa);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getGuiaRemisionsFK_IdFactura(String sFinalQuery,Long id_factura)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					guiaremisionLogic.getGuiaRemisionsFK_IdFactura(sFinalQuery,this.pagination,id_factura);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getGuiaRemisionsFK_IdFormato(String sFinalQuery,Long id_formato)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					guiaremisionLogic.getGuiaRemisionsFK_IdFormato(sFinalQuery,this.pagination,id_formato);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getGuiaRemisionsFK_IdMoneda(String sFinalQuery,Long id_moneda)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					guiaremisionLogic.getGuiaRemisionsFK_IdMoneda(sFinalQuery,this.pagination,id_moneda);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getGuiaRemisionsFK_IdPeriodo(String sFinalQuery,Long id_periodo)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					guiaremisionLogic.getGuiaRemisionsFK_IdPeriodo(sFinalQuery,this.pagination,id_periodo);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getGuiaRemisionsFK_IdSubCliente(String sFinalQuery,Long id_sub_cliente)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					guiaremisionLogic.getGuiaRemisionsFK_IdSubCliente(sFinalQuery,this.pagination,id_sub_cliente);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getGuiaRemisionsFK_IdSucursal(String sFinalQuery,Long id_sucursal)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					guiaremisionLogic.getGuiaRemisionsFK_IdSucursal(sFinalQuery,this.pagination,id_sucursal);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getGuiaRemisionsFK_IdTipoCambio(String sFinalQuery,Long id_tipo_cambio)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					guiaremisionLogic.getGuiaRemisionsFK_IdTipoCambio(sFinalQuery,this.pagination,id_tipo_cambio);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getGuiaRemisionsFK_IdTipoLlamada(String sFinalQuery,Long id_tipo_llamada)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					guiaremisionLogic.getGuiaRemisionsFK_IdTipoLlamada(sFinalQuery,this.pagination,id_tipo_llamada);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getGuiaRemisionsFK_IdTipoPrecio(String sFinalQuery,Long id_tipo_precio)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					guiaremisionLogic.getGuiaRemisionsFK_IdTipoPrecio(sFinalQuery,this.pagination,id_tipo_precio);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getGuiaRemisionsFK_IdTransporte(String sFinalQuery,Long id_transporte)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					guiaremisionLogic.getGuiaRemisionsFK_IdTransporte(sFinalQuery,this.pagination,id_transporte);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getGuiaRemisionsFK_IdTransportista(String sFinalQuery,Long id_transportista)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					guiaremisionLogic.getGuiaRemisionsFK_IdTransportista(sFinalQuery,this.pagination,id_transportista);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getGuiaRemisionsFK_IdUsuario(String sFinalQuery,Long id_usuario)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					guiaremisionLogic.getGuiaRemisionsFK_IdUsuario(sFinalQuery,this.pagination,id_usuario);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getGuiaRemisionsFK_IdVendedor(String sFinalQuery,Long id_vendedor)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					guiaremisionLogic.getGuiaRemisionsFK_IdVendedor(sFinalQuery,this.pagination,id_vendedor);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	
	public void onLoad()throws Exception {		
		try {		
			isEntroOnLoad=true;
			//INTENTA TRAER DATOS DE BUSQUEDA ANTERIOR
			this.traerDatosBusquedaDesdeSession();
					
			//SINO SE CUMPLE VIENE DE PADRE FOREIGN O BUSQUEDA ANTIGUA
			if(this.sAccionBusqueda.equals("")) {
				this.sAccionBusqueda="Todos";
			}
								
			this.procesarBusqueda(sAccionBusqueda);
			
		} catch (Exception e) {
			throw e;
		}
	}		
	
	public void inicializarPermisosGuiaRemision() {
		this.isPermisoTodoGuiaRemision=false;
		this.isPermisoNuevoGuiaRemision=false;
		this.isPermisoActualizarGuiaRemision=false;
		this.isPermisoActualizarOriginalGuiaRemision=false;
		this.isPermisoEliminarGuiaRemision=false;
		this.isPermisoGuardarCambiosGuiaRemision=false;
		this.isPermisoConsultaGuiaRemision=false;
		this.isPermisoBusquedaGuiaRemision=false;
		this.isPermisoReporteGuiaRemision=false;		
		this.isPermisoOrdenGuiaRemision=false;		
		this.isPermisoPaginacionMedioGuiaRemision=false;		
		this.isPermisoPaginacionAltoGuiaRemision=false;
		this.isPermisoPaginacionTodoGuiaRemision=false;
		this.isPermisoCopiarGuiaRemision=false;		
		this.isPermisoVerFormGuiaRemision=false;		
		this.isPermisoDuplicarGuiaRemision=false;		
		this.isPermisoOrdenGuiaRemision=false;		
	}
	
	public void setPermisosUsuarioGuiaRemision(Boolean isPermiso) {
		this.isPermisoTodoGuiaRemision=isPermiso;
		this.isPermisoNuevoGuiaRemision=isPermiso;
		this.isPermisoActualizarGuiaRemision=isPermiso;
		this.isPermisoActualizarOriginalGuiaRemision=isPermiso;
		this.isPermisoEliminarGuiaRemision=isPermiso;
		this.isPermisoGuardarCambiosGuiaRemision=isPermiso;
		this.isPermisoConsultaGuiaRemision=isPermiso;
		this.isPermisoBusquedaGuiaRemision=isPermiso;
		this.isPermisoReporteGuiaRemision=isPermiso;
		this.isPermisoOrdenGuiaRemision=isPermiso;		
		this.isPermisoPaginacionMedioGuiaRemision=isPermiso;		
		this.isPermisoPaginacionAltoGuiaRemision=isPermiso;		
		this.isPermisoPaginacionTodoGuiaRemision=isPermiso;		
		this.isPermisoCopiarGuiaRemision=isPermiso;		
		this.isPermisoVerFormGuiaRemision=isPermiso;		
		this.isPermisoDuplicarGuiaRemision=isPermiso;
		this.isPermisoOrdenGuiaRemision=isPermiso;
	}
	
	public void setPermisosMantenimientoUsuarioGuiaRemision(Boolean isPermiso) {
		//this.isPermisoTodoGuiaRemision=isPermiso;
		this.isPermisoNuevoGuiaRemision=isPermiso;
		this.isPermisoActualizarGuiaRemision=isPermiso;
		this.isPermisoActualizarOriginalGuiaRemision=isPermiso;
		this.isPermisoEliminarGuiaRemision=isPermiso;
		this.isPermisoGuardarCambiosGuiaRemision=isPermiso;
		//this.isPermisoConsultaGuiaRemision=isPermiso;
		//this.isPermisoBusquedaGuiaRemision=isPermiso;
		//this.isPermisoReporteGuiaRemision=isPermiso;
		//this.isPermisoOrdenGuiaRemision=isPermiso;		
		//this.isPermisoPaginacionMedioGuiaRemision=isPermiso;		
		//this.isPermisoPaginacionAltoGuiaRemision=isPermiso;		
		//this.isPermisoPaginacionTodoGuiaRemision=isPermiso;		
		//this.isPermisoCopiarGuiaRemision=isPermiso;		
		//this.isPermisoDuplicarGuiaRemision=isPermiso;
		//this.isPermisoOrdenGuiaRemision=isPermiso;
	}
	
	public void inicializarSetPermisosUsuarioGuiaRemisionClasesRelacionadas() throws Exception {
		ArrayList<String> arrPaginas=new ArrayList<String>();		
		ArrayList<Opcion> opcionsFinal=new ArrayList<Opcion>();	
		
		arrPaginas.add(DetalleGuiaRemisionConstantesFunciones.SNOMBREOPCION);
		
		if(GuiaRemisionJInternalFrame.CON_LLAMADA_SIMPLE) {
			this.opcionsRelacionadas.addAll(this.sistemaReturnGeneral.getOpcionsRelacionadas());
			
		} else {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				opcionsFinal=sistemaLogicAdditional.tienePermisosOpcionesEnPaginaWeb(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, arrPaginas);
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}
			
			this.opcionsRelacionadas.addAll(opcionsFinal);
		}
		
		

		this.isTienePermisosDetalleGuiaRemision=false;
		this.isTienePermisosDetalleGuiaRemision=this.verificarGetPermisosUsuarioOpcionGuiaRemisionClaseRelacionada(this.opcionsRelacionadas,DetalleGuiaRemisionConstantesFunciones.SNOMBREOPCION);
		
	}
	
	public Boolean tienePermisosUsuarioEnPaginaWebGuiaRemision(String sPagina) throws Exception {
		Boolean tienePermisos=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			tienePermisos=sistemaLogicAdditional.tienePermisosEnPaginaWeb(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, sPagina);
		} else if(Constantes.ISUSAEJBREMOTE) {
		} else if(Constantes.ISUSAEJBHOME) {
		}
		
		return tienePermisos;
	}
	
	public void inicializarSetPermisosUsuarioGuiaRemisionClasesRelacionadas(Boolean conPermiso) throws Exception {
		
		this.isTienePermisosDetalleGuiaRemision=conPermiso;
	}
	
	public Boolean verificarGetPermisosUsuarioGuiaRemisionClaseRelacionada(ArrayList<String> arrPaginasFinal,String sPaginaActual) throws Exception {
		Boolean verificado=false;
		
		verificado=Funciones2.verificarGetPermisosUsuarioClaseRelacionada(arrPaginasFinal,sPaginaActual);				
		
		return verificado;
	}
	
	public Boolean verificarGetPermisosUsuarioOpcionGuiaRemisionClaseRelacionada(List<Opcion> opcionsFinal,String sPaginaActual) throws Exception {
		Boolean verificado=false;
		
		verificado=Funciones2.verificarGetPermisosUsuarioOpcionClaseRelacionada(opcionsFinal,sPaginaActual);				
		
		return verificado;
	}
	
	public void actualizarTabsSetPermisosUsuarioGuiaRemisionClasesRelacionadas() throws Exception {
		

		if(!this.isTienePermisosDetalleGuiaRemision && this.jInternalFrameDetalleFormGuiaRemision!=null && this.jInternalFrameDetalleFormGuiaRemision.detalleguiaremisionBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormGuiaRemision.jTabbedPaneRelacionesGuiaRemision.remove(this.jInternalFrameDetalleFormGuiaRemision.detalleguiaremisionBeanSwingJInternalFrame.getContentPane());
		}
	}
	
	public void setPermisosUsuarioGuiaRemision() throws Exception {
		
		PerfilOpcion perfilOpcionUsuario=new PerfilOpcion();		
		Long idOpcion=this.opcionActual.getId();
		
		if(GuiaRemisionJInternalFrame.CON_LLAMADA_SIMPLE) {
			perfilOpcionUsuario=this.sistemaReturnGeneral.getPerfilOpcion();
			
		} else {
			if(this.guiaremisionSessionBean.getEsGuardarRelacionado()) {
				idOpcion=0L;
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				perfilOpcionUsuario=sistemaLogicAdditional.traerPermisosPaginaWebPerfilOpcion(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, GuiaRemisionConstantesFunciones.SNOMBREOPCION,idOpcion);				
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}
		}
		
		if(perfilOpcionUsuario!=null && perfilOpcionUsuario.getId()>0) {
			this.isPermisoNuevoGuiaRemision=perfilOpcionUsuario.getingreso()||perfilOpcionUsuario.gettodo();
			this.isPermisoActualizarGuiaRemision=perfilOpcionUsuario.getmodificacion()||perfilOpcionUsuario.gettodo();
			this.isPermisoActualizarOriginalGuiaRemision=this.isPermisoActualizarGuiaRemision;
			this.isPermisoEliminarGuiaRemision=perfilOpcionUsuario.geteliminacion()||perfilOpcionUsuario.gettodo();
			this.isPermisoGuardarCambiosGuiaRemision=perfilOpcionUsuario.getguardar_cambios()||perfilOpcionUsuario.gettodo();
			this.isPermisoConsultaGuiaRemision=perfilOpcionUsuario.getconsulta()||perfilOpcionUsuario.gettodo();
			this.isPermisoBusquedaGuiaRemision=perfilOpcionUsuario.getbusqueda()||perfilOpcionUsuario.gettodo();
			this.isPermisoTodoGuiaRemision=perfilOpcionUsuario.gettodo()||perfilOpcionUsuario.gettodo();
			this.isPermisoReporteGuiaRemision=perfilOpcionUsuario.getreporte()||perfilOpcionUsuario.gettodo();
			this.isPermisoOrdenGuiaRemision=perfilOpcionUsuario.getorden()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionMedioGuiaRemision=perfilOpcionUsuario.getpaginacion_medio()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionAltoGuiaRemision=perfilOpcionUsuario.getpaginacion_alto()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionTodoGuiaRemision=perfilOpcionUsuario.getpaginacion_todo()||perfilOpcionUsuario.gettodo();
			this.isPermisoCopiarGuiaRemision=perfilOpcionUsuario.getcopiar()||perfilOpcionUsuario.gettodo();
			this.isPermisoVerFormGuiaRemision=true;//perfilOpcionUsuario.getver_form()||perfilOpcionUsuario.gettodo();
			this.isPermisoDuplicarGuiaRemision=perfilOpcionUsuario.getduplicar()||perfilOpcionUsuario.gettodo();
			this.isPermisoOrdenGuiaRemision=perfilOpcionUsuario.getorden()||perfilOpcionUsuario.gettodo();
			
			if(this.guiaremisionSessionBean.getEsGuardarRelacionado()) {
				this.opcionActual.setId(perfilOpcionUsuario.getid_opcion());
				
				this.jTableDatosGuiaRemision.setToolTipText(this.jTableDatosGuiaRemision.getToolTipText()+"_"+perfilOpcionUsuario.getid_opcion());		
			}
		} else {
			this.setPermisosUsuarioGuiaRemision(false);
		}
		
		//SI SE NECESITA PONER TODOS LOS PERMISOS POR DEFECTO
		//
		
	}
	
	public void setAccionesUsuarioGuiaRemision(Boolean esParaAccionesFormulario) throws Exception {		
		Reporte reporte=null;
		
		if(!esParaAccionesFormulario) {
			this.accions=new ArrayList<Accion>();
			
			if(GuiaRemisionJInternalFrame.CON_LLAMADA_SIMPLE) {
				this.accions=this.sistemaReturnGeneral.getAccions();
				
				
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.accions=sistemaLogicAdditional.getAccionesUsuario(this.usuarioActual,this.opcionActual,false);				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}
			
			if(this.accions.size()>0) {			
				for(Accion accion:this.accions) {
					reporte=new Reporte();
					reporte.setsCodigo(accion.getcodigo());
					reporte.setsDescripcion(accion.getnombre());
		
		
					this.tiposAcciones.add(reporte);
				}
			}	
			
			

			reporte=new Reporte();
			reporte.setsCodigo("");
			reporte.setsDescripcion("");

			this.tiposAcciones.add(reporte);
			
		} else {
			//ACCIONES FORMULARIO
			this.accionsFormulario=new ArrayList<Accion>();
			
			if(GuiaRemisionJInternalFrame.CON_LLAMADA_SIMPLE) {
				this.accionsFormulario=this.sistemaReturnGeneral.getAccionsFormulario();
			
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.accionsFormulario=sistemaLogicAdditional.getAccionesUsuario(this.usuarioActual,this.opcionActual,true);				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}
			
			if(this.accionsFormulario.size()>0) {			
				for(Accion accion:this.accionsFormulario) {
					reporte=new Reporte();
					reporte.setsCodigo(accion.getcodigo());
					reporte.setsDescripcion(accion.getnombre());
					
					this.tiposAccionesFormulario.add(reporte);
				}
			}	
			
			

			reporte=new Reporte();
			reporte.setsCodigo("");
			reporte.setsDescripcion("");

			this.tiposAccionesFormulario.add(reporte);
		}				
	}	 	
	
	public void setRelacionesUsuarioGuiaRemision() throws Exception {
		Reporte reporte=null;
		
		

		if(this.isTienePermisosDetalleGuiaRemision && this.guiaremisionConstantesFunciones.mostrarDetalleGuiaRemisionGuiaRemision && !GuiaRemisionConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Detalle Guia Remision");
			reporte.setsDescripcion("Detalle Guia Remision");
			this.tiposRelaciones.add(reporte);
		}
		
		
		//ORDENAR ALFABETICAMENTE
		Collections.sort(this.tiposRelaciones, new ReporteComparator());
		/*
		reporte=new Reporte();
		reporte.setsCodigo(accion.getcodigo());
		reporte.setsDescripcion(accion.getnombre());
			
		this.tiposRelaciones.add(reporte);
		*/
	}	
	
		
	@SuppressWarnings({ "unchecked", "rawtypes" } )
	public void inicializarCombosForeignKeyGuiaRemisionListas()throws Exception {
		try	{						
			
				this.empresasForeignKey=new ArrayList();
				this.sucursalsForeignKey=new ArrayList();
				this.ejerciciosForeignKey=new ArrayList();
				this.periodosForeignKey=new ArrayList();
				this.usuariosForeignKey=new ArrayList();
				this.formatosForeignKey=new ArrayList();
				this.tipopreciosForeignKey=new ArrayList();
				this.monedasForeignKey=new ArrayList();
				this.clientesForeignKey=new ArrayList();
				this.vendedorsForeignKey=new ArrayList();
				this.facturasForeignKey=new ArrayList();
				this.transportistasForeignKey=new ArrayList();
				this.consultorsForeignKey=new ArrayList();
				this.transportesForeignKey=new ArrayList();
				this.subclientesForeignKey=new ArrayList();
				this.empleadosForeignKey=new ArrayList();
				this.ciudadorigensForeignKey=new ArrayList();
				this.ciudaddestinosForeignKey=new ArrayList();
				this.tipollamadasForeignKey=new ArrayList();
				this.tipocambiosForeignKey=new ArrayList();
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void cargarCombosTodosForeignKeyGuiaRemisionListas(Boolean cargarCombosDependencia)throws Exception {
		try	{
			
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			String sFinalQueryCombo="";
			
			Modulo  moduloActualAux=new Modulo();
			
			if(GuiaRemisionJInternalFrame.ISLOAD_FKLOTE) {
				this.cargarCombosLoteForeignKeyGuiaRemisionListas(false);
			} else {
			
				this.cargarCombosForeignKeyEmpresaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeySucursalListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyEjercicioListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyPeriodoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyUsuarioListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyFormatoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTipoPrecioListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyMonedaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyClienteListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyVendedorListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyFacturaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTransportistaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyConsultorListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTransporteListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeySubClienteListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyEmpleadoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyCiudadOrigenListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyCiudadDestinoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTipoLlamadaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTipoCambioListas(cargarCombosDependencia,sFinalQueryCombo);
			}
		} catch(Exception e) {
			throw e;
		}		
	}		
	
	

	public void cargarCombosForeignKeyEmpresaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.empresasForeignKey==null||this.empresasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=EmpresaConstantesFunciones.getArrayColumnasGlobalesEmpresa(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EmpresaConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=EmpresaConstantesFunciones.SFINALQUERY;

				this.cargarCombosEmpresasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeySucursalListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.sucursalsForeignKey==null||this.sucursalsForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=SucursalConstantesFunciones.getArrayColumnasGlobalesSucursal(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,SucursalConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=SucursalConstantesFunciones.SFINALQUERY;

				this.cargarCombosSucursalsForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyEjercicioListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.ejerciciosForeignKey==null||this.ejerciciosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=EjercicioConstantesFunciones.getArrayColumnasGlobalesEjercicio(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EjercicioConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=EjercicioConstantesFunciones.SFINALQUERY;

				this.cargarCombosEjerciciosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyPeriodoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.periodosForeignKey==null||this.periodosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=PeriodoConstantesFunciones.getArrayColumnasGlobalesPeriodo(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,PeriodoConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=PeriodoConstantesFunciones.SFINALQUERY;

				this.cargarCombosPeriodosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyUsuarioListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.usuariosForeignKey==null||this.usuariosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=UsuarioConstantesFunciones.getArrayColumnasGlobalesUsuario(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,UsuarioConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=UsuarioConstantesFunciones.SFINALQUERY;

				this.cargarCombosUsuariosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyFormatoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.formatosForeignKey==null||this.formatosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=FormatoConstantesFunciones.getArrayColumnasGlobalesFormato(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,FormatoConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=FormatoConstantesFunciones.SFINALQUERY;

				this.cargarCombosFormatosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoPrecioListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.tipopreciosForeignKey==null||this.tipopreciosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TipoPrecioConstantesFunciones.getArrayColumnasGlobalesTipoPrecio(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoPrecioConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TipoPrecioConstantesFunciones.SFINALQUERY;

				this.cargarCombosTipoPreciosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyMonedaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.monedasForeignKey==null||this.monedasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=MonedaConstantesFunciones.getArrayColumnasGlobalesMoneda(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,MonedaConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=MonedaConstantesFunciones.SFINALQUERY;

				this.cargarCombosMonedasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyClienteListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.clientesForeignKey==null||this.clientesForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=ClienteConstantesFunciones.getArrayColumnasGlobalesCliente(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,ClienteConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=ClienteConstantesFunciones.SFINALQUERY;

				this.cargarCombosClientesForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyVendedorListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.vendedorsForeignKey==null||this.vendedorsForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=VendedorConstantesFunciones.getArrayColumnasGlobalesVendedor(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,VendedorConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=VendedorConstantesFunciones.SFINALQUERY;

				this.cargarCombosVendedorsForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyFacturaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.facturasForeignKey==null||this.facturasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=FacturaConstantesFunciones.getArrayColumnasGlobalesFactura(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,FacturaConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=FacturaConstantesFunciones.SFINALQUERY;

				this.cargarCombosFacturasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTransportistaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.transportistasForeignKey==null||this.transportistasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TransportistaConstantesFunciones.getArrayColumnasGlobalesTransportista(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TransportistaConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TransportistaConstantesFunciones.SFINALQUERY;

				this.cargarCombosTransportistasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyConsultorListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.consultorsForeignKey==null||this.consultorsForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=ConsultorConstantesFunciones.getArrayColumnasGlobalesConsultor(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,ConsultorConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=ConsultorConstantesFunciones.SFINALQUERY;

				this.cargarCombosConsultorsForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTransporteListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.transportesForeignKey==null||this.transportesForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TransporteConstantesFunciones.getArrayColumnasGlobalesTransporte(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TransporteConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TransporteConstantesFunciones.SFINALQUERY;

				this.cargarCombosTransportesForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeySubClienteListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.subclientesForeignKey==null||this.subclientesForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=SubClienteConstantesFunciones.getArrayColumnasGlobalesSubCliente(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,SubClienteConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=SubClienteConstantesFunciones.SFINALQUERY;

				this.cargarCombosSubClientesForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyEmpleadoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.empleadosForeignKey==null||this.empleadosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=EmpleadoConstantesFunciones.getArrayColumnasGlobalesEmpleado(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EmpleadoConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=EmpleadoConstantesFunciones.SFINALQUERY;

				this.cargarCombosEmpleadosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCiudadOrigenListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.ciudadorigensForeignKey==null||this.ciudadorigensForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=CiudadConstantesFunciones.getArrayColumnasGlobalesCiudad(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CiudadConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=CiudadConstantesFunciones.SFINALQUERY;

				this.cargarCombosCiudadOrigensForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCiudadDestinoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.ciudaddestinosForeignKey==null||this.ciudaddestinosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=CiudadConstantesFunciones.getArrayColumnasGlobalesCiudad(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CiudadConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=CiudadConstantesFunciones.SFINALQUERY;

				this.cargarCombosCiudadDestinosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoLlamadaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.tipollamadasForeignKey==null||this.tipollamadasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TipoLlamadaConstantesFunciones.getArrayColumnasGlobalesTipoLlamada(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoLlamadaConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TipoLlamadaConstantesFunciones.SFINALQUERY;

				this.cargarCombosTipoLlamadasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoCambioListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.tipocambiosForeignKey==null||this.tipocambiosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TipoCambioConstantesFunciones.getArrayColumnasGlobalesTipoCambio(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoCambioConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TipoCambioConstantesFunciones.SFINALQUERY;

				this.cargarCombosTipoCambiosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}
	
	public void cargarCombosLoteForeignKeyGuiaRemisionListas(Boolean cargarCombosDependencia)throws Exception {
		try	{
			
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			
			Modulo  moduloActualAux=new Modulo();
			
			
			GuiaRemisionParameterReturnGeneral guiaremisionReturnGeneral=new GuiaRemisionParameterReturnGeneral();
						
			


				String finalQueryGlobalEmpresa="";

				if(((this.empresasForeignKey==null||this.empresasForeignKey.size()<=0) && this.guiaremisionConstantesFunciones.cargarid_empresaGuiaRemision)
					 || (this.esRecargarFks && this.guiaremisionConstantesFunciones.cargarid_empresaGuiaRemision)) {

					if(!this.guiaremisionSessionBean.getisBusquedaDesdeForeignKeySesionEmpresa()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=EmpresaConstantesFunciones.getArrayColumnasGlobalesEmpresa(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalEmpresa=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EmpresaConstantesFunciones.TABLENAME);

						finalQueryGlobalEmpresa=Funciones.GetFinalQueryAppend(finalQueryGlobalEmpresa, "");
						finalQueryGlobalEmpresa+=EmpresaConstantesFunciones.SFINALQUERY;

						//this.cargarCombosEmpresasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalEmpresa=" WHERE " + ConstantesSql.ID + "="+guiaremisionSessionBean.getlidEmpresaActual();
					}
				} else {
					finalQueryGlobalEmpresa="NONE";
				}


				String finalQueryGlobalSucursal="";

				if(((this.sucursalsForeignKey==null||this.sucursalsForeignKey.size()<=0) && this.guiaremisionConstantesFunciones.cargarid_sucursalGuiaRemision)
					 || (this.esRecargarFks && this.guiaremisionConstantesFunciones.cargarid_sucursalGuiaRemision)) {

					if(!this.guiaremisionSessionBean.getisBusquedaDesdeForeignKeySesionSucursal()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=SucursalConstantesFunciones.getArrayColumnasGlobalesSucursal(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalSucursal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,SucursalConstantesFunciones.TABLENAME);

						finalQueryGlobalSucursal=Funciones.GetFinalQueryAppend(finalQueryGlobalSucursal, "");
						finalQueryGlobalSucursal+=SucursalConstantesFunciones.SFINALQUERY;

						//this.cargarCombosSucursalsForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalSucursal=" WHERE " + ConstantesSql.ID + "="+guiaremisionSessionBean.getlidSucursalActual();
					}
				} else {
					finalQueryGlobalSucursal="NONE";
				}


				String finalQueryGlobalEjercicio="";

				if(((this.ejerciciosForeignKey==null||this.ejerciciosForeignKey.size()<=0) && this.guiaremisionConstantesFunciones.cargarid_ejercicioGuiaRemision)
					 || (this.esRecargarFks && this.guiaremisionConstantesFunciones.cargarid_ejercicioGuiaRemision)) {

					if(!this.guiaremisionSessionBean.getisBusquedaDesdeForeignKeySesionEjercicio()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=EjercicioConstantesFunciones.getArrayColumnasGlobalesEjercicio(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalEjercicio=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EjercicioConstantesFunciones.TABLENAME);

						finalQueryGlobalEjercicio=Funciones.GetFinalQueryAppend(finalQueryGlobalEjercicio, "");
						finalQueryGlobalEjercicio+=EjercicioConstantesFunciones.SFINALQUERY;

						//this.cargarCombosEjerciciosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalEjercicio=" WHERE " + ConstantesSql.ID + "="+guiaremisionSessionBean.getlidEjercicioActual();
					}
				} else {
					finalQueryGlobalEjercicio="NONE";
				}


				String finalQueryGlobalPeriodo="";

				if(((this.periodosForeignKey==null||this.periodosForeignKey.size()<=0) && this.guiaremisionConstantesFunciones.cargarid_periodoGuiaRemision)
					 || (this.esRecargarFks && this.guiaremisionConstantesFunciones.cargarid_periodoGuiaRemision)) {

					if(!this.guiaremisionSessionBean.getisBusquedaDesdeForeignKeySesionPeriodo()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=PeriodoConstantesFunciones.getArrayColumnasGlobalesPeriodo(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalPeriodo=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,PeriodoConstantesFunciones.TABLENAME);

						finalQueryGlobalPeriodo=Funciones.GetFinalQueryAppend(finalQueryGlobalPeriodo, "");
						finalQueryGlobalPeriodo+=PeriodoConstantesFunciones.SFINALQUERY;

						//this.cargarCombosPeriodosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalPeriodo=" WHERE " + ConstantesSql.ID + "="+guiaremisionSessionBean.getlidPeriodoActual();
					}
				} else {
					finalQueryGlobalPeriodo="NONE";
				}


				String finalQueryGlobalUsuario="";

				if(((this.usuariosForeignKey==null||this.usuariosForeignKey.size()<=0) && this.guiaremisionConstantesFunciones.cargarid_usuarioGuiaRemision)
					 || (this.esRecargarFks && this.guiaremisionConstantesFunciones.cargarid_usuarioGuiaRemision)) {

					if(!this.guiaremisionSessionBean.getisBusquedaDesdeForeignKeySesionUsuario()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=UsuarioConstantesFunciones.getArrayColumnasGlobalesUsuario(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalUsuario=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,UsuarioConstantesFunciones.TABLENAME);

						finalQueryGlobalUsuario=Funciones.GetFinalQueryAppend(finalQueryGlobalUsuario, "");
						finalQueryGlobalUsuario+=UsuarioConstantesFunciones.SFINALQUERY;

						//this.cargarCombosUsuariosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalUsuario=" WHERE " + ConstantesSql.ID + "="+guiaremisionSessionBean.getlidUsuarioActual();
					}
				} else {
					finalQueryGlobalUsuario="NONE";
				}


				String finalQueryGlobalFormato="";

				if(((this.formatosForeignKey==null||this.formatosForeignKey.size()<=0) && this.guiaremisionConstantesFunciones.cargarid_formatoGuiaRemision)
					 || (this.esRecargarFks && this.guiaremisionConstantesFunciones.cargarid_formatoGuiaRemision)) {

					if(!this.guiaremisionSessionBean.getisBusquedaDesdeForeignKeySesionFormato()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=FormatoConstantesFunciones.getArrayColumnasGlobalesFormato(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalFormato=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,FormatoConstantesFunciones.TABLENAME);

						finalQueryGlobalFormato=Funciones.GetFinalQueryAppend(finalQueryGlobalFormato, "");
						finalQueryGlobalFormato+=FormatoConstantesFunciones.SFINALQUERY;

						//this.cargarCombosFormatosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalFormato=" WHERE " + ConstantesSql.ID + "="+guiaremisionSessionBean.getlidFormatoActual();
					}
				} else {
					finalQueryGlobalFormato="NONE";
				}


				String finalQueryGlobalTipoPrecio="";

				if(((this.tipopreciosForeignKey==null||this.tipopreciosForeignKey.size()<=0) && this.guiaremisionConstantesFunciones.cargarid_tipo_precioGuiaRemision)
					 || (this.esRecargarFks && this.guiaremisionConstantesFunciones.cargarid_tipo_precioGuiaRemision)) {

					if(!this.guiaremisionSessionBean.getisBusquedaDesdeForeignKeySesionTipoPrecio()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TipoPrecioConstantesFunciones.getArrayColumnasGlobalesTipoPrecio(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalTipoPrecio=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoPrecioConstantesFunciones.TABLENAME);

						finalQueryGlobalTipoPrecio=Funciones.GetFinalQueryAppend(finalQueryGlobalTipoPrecio, "");
						finalQueryGlobalTipoPrecio+=TipoPrecioConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTipoPreciosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTipoPrecio=" WHERE " + ConstantesSql.ID + "="+guiaremisionSessionBean.getlidTipoPrecioActual();
					}
				} else {
					finalQueryGlobalTipoPrecio="NONE";
				}


				String finalQueryGlobalMoneda="";

				if(((this.monedasForeignKey==null||this.monedasForeignKey.size()<=0) && this.guiaremisionConstantesFunciones.cargarid_monedaGuiaRemision)
					 || (this.esRecargarFks && this.guiaremisionConstantesFunciones.cargarid_monedaGuiaRemision)) {

					if(!this.guiaremisionSessionBean.getisBusquedaDesdeForeignKeySesionMoneda()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=MonedaConstantesFunciones.getArrayColumnasGlobalesMoneda(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalMoneda=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,MonedaConstantesFunciones.TABLENAME);

						finalQueryGlobalMoneda=Funciones.GetFinalQueryAppend(finalQueryGlobalMoneda, "");
						finalQueryGlobalMoneda+=MonedaConstantesFunciones.SFINALQUERY;

						//this.cargarCombosMonedasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalMoneda=" WHERE " + ConstantesSql.ID + "="+guiaremisionSessionBean.getlidMonedaActual();
					}
				} else {
					finalQueryGlobalMoneda="NONE";
				}


				String finalQueryGlobalCliente="";

				if(((this.clientesForeignKey==null||this.clientesForeignKey.size()<=0) && this.guiaremisionConstantesFunciones.cargarid_clienteGuiaRemision)
					 || (this.esRecargarFks && this.guiaremisionConstantesFunciones.cargarid_clienteGuiaRemision)) {

					if(!this.guiaremisionSessionBean.getisBusquedaDesdeForeignKeySesionCliente()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=ClienteConstantesFunciones.getArrayColumnasGlobalesCliente(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalCliente=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,ClienteConstantesFunciones.TABLENAME);

						finalQueryGlobalCliente=Funciones.GetFinalQueryAppend(finalQueryGlobalCliente, "");
						finalQueryGlobalCliente+=ClienteConstantesFunciones.SFINALQUERY;

						//this.cargarCombosClientesForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalCliente=" WHERE " + ConstantesSql.ID + "="+guiaremisionSessionBean.getlidClienteActual();
					}
				} else {
					finalQueryGlobalCliente="NONE";
				}


				String finalQueryGlobalVendedor="";

				if(((this.vendedorsForeignKey==null||this.vendedorsForeignKey.size()<=0) && this.guiaremisionConstantesFunciones.cargarid_vendedorGuiaRemision)
					 || (this.esRecargarFks && this.guiaremisionConstantesFunciones.cargarid_vendedorGuiaRemision)) {

					if(!this.guiaremisionSessionBean.getisBusquedaDesdeForeignKeySesionVendedor()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=VendedorConstantesFunciones.getArrayColumnasGlobalesVendedor(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalVendedor=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,VendedorConstantesFunciones.TABLENAME);

						finalQueryGlobalVendedor=Funciones.GetFinalQueryAppend(finalQueryGlobalVendedor, "");
						finalQueryGlobalVendedor+=VendedorConstantesFunciones.SFINALQUERY;

						//this.cargarCombosVendedorsForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalVendedor=" WHERE " + ConstantesSql.ID + "="+guiaremisionSessionBean.getlidVendedorActual();
					}
				} else {
					finalQueryGlobalVendedor="NONE";
				}


				String finalQueryGlobalFactura="";

				if(((this.facturasForeignKey==null||this.facturasForeignKey.size()<=0) && this.guiaremisionConstantesFunciones.cargarid_facturaGuiaRemision)
					 || (this.esRecargarFks && this.guiaremisionConstantesFunciones.cargarid_facturaGuiaRemision)) {

					if(!this.guiaremisionSessionBean.getisBusquedaDesdeForeignKeySesionFactura()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=FacturaConstantesFunciones.getArrayColumnasGlobalesFactura(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalFactura=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,FacturaConstantesFunciones.TABLENAME);

						finalQueryGlobalFactura=Funciones.GetFinalQueryAppend(finalQueryGlobalFactura, "");
						finalQueryGlobalFactura+=FacturaConstantesFunciones.SFINALQUERY;

						//this.cargarCombosFacturasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalFactura=" WHERE " + ConstantesSql.ID + "="+guiaremisionSessionBean.getlidFacturaActual();
					}
				} else {
					finalQueryGlobalFactura="NONE";
				}


				String finalQueryGlobalTransportista="";

				if(((this.transportistasForeignKey==null||this.transportistasForeignKey.size()<=0) && this.guiaremisionConstantesFunciones.cargarid_transportistaGuiaRemision)
					 || (this.esRecargarFks && this.guiaremisionConstantesFunciones.cargarid_transportistaGuiaRemision)) {

					if(!this.guiaremisionSessionBean.getisBusquedaDesdeForeignKeySesionTransportista()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TransportistaConstantesFunciones.getArrayColumnasGlobalesTransportista(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalTransportista=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TransportistaConstantesFunciones.TABLENAME);

						finalQueryGlobalTransportista=Funciones.GetFinalQueryAppend(finalQueryGlobalTransportista, "");
						finalQueryGlobalTransportista+=TransportistaConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTransportistasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTransportista=" WHERE " + ConstantesSql.ID + "="+guiaremisionSessionBean.getlidTransportistaActual();
					}
				} else {
					finalQueryGlobalTransportista="NONE";
				}


				String finalQueryGlobalConsultor="";

				if(((this.consultorsForeignKey==null||this.consultorsForeignKey.size()<=0) && this.guiaremisionConstantesFunciones.cargarid_consultorGuiaRemision)
					 || (this.esRecargarFks && this.guiaremisionConstantesFunciones.cargarid_consultorGuiaRemision)) {

					if(!this.guiaremisionSessionBean.getisBusquedaDesdeForeignKeySesionConsultor()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=ConsultorConstantesFunciones.getArrayColumnasGlobalesConsultor(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalConsultor=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,ConsultorConstantesFunciones.TABLENAME);

						finalQueryGlobalConsultor=Funciones.GetFinalQueryAppend(finalQueryGlobalConsultor, "");
						finalQueryGlobalConsultor+=ConsultorConstantesFunciones.SFINALQUERY;

						//this.cargarCombosConsultorsForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalConsultor=" WHERE " + ConstantesSql.ID + "="+guiaremisionSessionBean.getlidConsultorActual();
					}
				} else {
					finalQueryGlobalConsultor="NONE";
				}


				String finalQueryGlobalTransporte="";

				if(((this.transportesForeignKey==null||this.transportesForeignKey.size()<=0) && this.guiaremisionConstantesFunciones.cargarid_transporteGuiaRemision)
					 || (this.esRecargarFks && this.guiaremisionConstantesFunciones.cargarid_transporteGuiaRemision)) {

					if(!this.guiaremisionSessionBean.getisBusquedaDesdeForeignKeySesionTransporte()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TransporteConstantesFunciones.getArrayColumnasGlobalesTransporte(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalTransporte=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TransporteConstantesFunciones.TABLENAME);

						finalQueryGlobalTransporte=Funciones.GetFinalQueryAppend(finalQueryGlobalTransporte, "");
						finalQueryGlobalTransporte+=TransporteConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTransportesForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTransporte=" WHERE " + ConstantesSql.ID + "="+guiaremisionSessionBean.getlidTransporteActual();
					}
				} else {
					finalQueryGlobalTransporte="NONE";
				}


				String finalQueryGlobalSubCliente="";

				if(((this.subclientesForeignKey==null||this.subclientesForeignKey.size()<=0) && this.guiaremisionConstantesFunciones.cargarid_sub_clienteGuiaRemision)
					 || (this.esRecargarFks && this.guiaremisionConstantesFunciones.cargarid_sub_clienteGuiaRemision)) {

					if(!this.guiaremisionSessionBean.getisBusquedaDesdeForeignKeySesionSubCliente()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=SubClienteConstantesFunciones.getArrayColumnasGlobalesSubCliente(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalSubCliente=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,SubClienteConstantesFunciones.TABLENAME);

						finalQueryGlobalSubCliente=Funciones.GetFinalQueryAppend(finalQueryGlobalSubCliente, "");
						finalQueryGlobalSubCliente+=SubClienteConstantesFunciones.SFINALQUERY;

						//this.cargarCombosSubClientesForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalSubCliente=" WHERE " + ConstantesSql.ID + "="+guiaremisionSessionBean.getlidSubClienteActual();
					}
				} else {
					finalQueryGlobalSubCliente="NONE";
				}


				String finalQueryGlobalEmpleado="";

				if(((this.empleadosForeignKey==null||this.empleadosForeignKey.size()<=0) && this.guiaremisionConstantesFunciones.cargarid_empleadoGuiaRemision)
					 || (this.esRecargarFks && this.guiaremisionConstantesFunciones.cargarid_empleadoGuiaRemision)) {

					if(!this.guiaremisionSessionBean.getisBusquedaDesdeForeignKeySesionEmpleado()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=EmpleadoConstantesFunciones.getArrayColumnasGlobalesEmpleado(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalEmpleado=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EmpleadoConstantesFunciones.TABLENAME);

						finalQueryGlobalEmpleado=Funciones.GetFinalQueryAppend(finalQueryGlobalEmpleado, "");
						finalQueryGlobalEmpleado+=EmpleadoConstantesFunciones.SFINALQUERY;

						//this.cargarCombosEmpleadosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalEmpleado=" WHERE " + ConstantesSql.ID + "="+guiaremisionSessionBean.getlidEmpleadoActual();
					}
				} else {
					finalQueryGlobalEmpleado="NONE";
				}


				String finalQueryGlobalCiudadOrigen="";

				if(((this.ciudadorigensForeignKey==null||this.ciudadorigensForeignKey.size()<=0) && this.guiaremisionConstantesFunciones.cargarid_ciudad_origenGuiaRemision)
					 || (this.esRecargarFks && this.guiaremisionConstantesFunciones.cargarid_ciudad_origenGuiaRemision)) {

					if(!this.guiaremisionSessionBean.getisBusquedaDesdeForeignKeySesionCiudadOrigen()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=CiudadConstantesFunciones.getArrayColumnasGlobalesCiudad(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalCiudadOrigen=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CiudadConstantesFunciones.TABLENAME);

						finalQueryGlobalCiudadOrigen=Funciones.GetFinalQueryAppend(finalQueryGlobalCiudadOrigen, "");
						finalQueryGlobalCiudadOrigen+=CiudadConstantesFunciones.SFINALQUERY;

						//this.cargarCombosCiudadOrigensForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalCiudadOrigen=" WHERE " + ConstantesSql.ID + "="+guiaremisionSessionBean.getlidCiudadOrigenActual();
					}
				} else {
					finalQueryGlobalCiudadOrigen="NONE";
				}


				String finalQueryGlobalCiudadDestino="";

				if(((this.ciudaddestinosForeignKey==null||this.ciudaddestinosForeignKey.size()<=0) && this.guiaremisionConstantesFunciones.cargarid_ciudad_destinoGuiaRemision)
					 || (this.esRecargarFks && this.guiaremisionConstantesFunciones.cargarid_ciudad_destinoGuiaRemision)) {

					if(!this.guiaremisionSessionBean.getisBusquedaDesdeForeignKeySesionCiudadDestino()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=CiudadConstantesFunciones.getArrayColumnasGlobalesCiudad(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalCiudadDestino=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CiudadConstantesFunciones.TABLENAME);

						finalQueryGlobalCiudadDestino=Funciones.GetFinalQueryAppend(finalQueryGlobalCiudadDestino, "");
						finalQueryGlobalCiudadDestino+=CiudadConstantesFunciones.SFINALQUERY;

						//this.cargarCombosCiudadDestinosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalCiudadDestino=" WHERE " + ConstantesSql.ID + "="+guiaremisionSessionBean.getlidCiudadDestinoActual();
					}
				} else {
					finalQueryGlobalCiudadDestino="NONE";
				}


				String finalQueryGlobalTipoLlamada="";

				if(((this.tipollamadasForeignKey==null||this.tipollamadasForeignKey.size()<=0) && this.guiaremisionConstantesFunciones.cargarid_tipo_llamadaGuiaRemision)
					 || (this.esRecargarFks && this.guiaremisionConstantesFunciones.cargarid_tipo_llamadaGuiaRemision)) {

					if(!this.guiaremisionSessionBean.getisBusquedaDesdeForeignKeySesionTipoLlamada()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TipoLlamadaConstantesFunciones.getArrayColumnasGlobalesTipoLlamada(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalTipoLlamada=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoLlamadaConstantesFunciones.TABLENAME);

						finalQueryGlobalTipoLlamada=Funciones.GetFinalQueryAppend(finalQueryGlobalTipoLlamada, "");
						finalQueryGlobalTipoLlamada+=TipoLlamadaConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTipoLlamadasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTipoLlamada=" WHERE " + ConstantesSql.ID + "="+guiaremisionSessionBean.getlidTipoLlamadaActual();
					}
				} else {
					finalQueryGlobalTipoLlamada="NONE";
				}


				String finalQueryGlobalTipoCambio="";

				if(((this.tipocambiosForeignKey==null||this.tipocambiosForeignKey.size()<=0) && this.guiaremisionConstantesFunciones.cargarid_tipo_cambioGuiaRemision)
					 || (this.esRecargarFks && this.guiaremisionConstantesFunciones.cargarid_tipo_cambioGuiaRemision)) {

					if(!this.guiaremisionSessionBean.getisBusquedaDesdeForeignKeySesionTipoCambio()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TipoCambioConstantesFunciones.getArrayColumnasGlobalesTipoCambio(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalTipoCambio=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoCambioConstantesFunciones.TABLENAME);

						finalQueryGlobalTipoCambio=Funciones.GetFinalQueryAppend(finalQueryGlobalTipoCambio, "");
						finalQueryGlobalTipoCambio+=TipoCambioConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTipoCambiosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTipoCambio=" WHERE " + ConstantesSql.ID + "="+guiaremisionSessionBean.getlidTipoCambioActual();
					}
				} else {
					finalQueryGlobalTipoCambio="NONE";
				}
			
			//ARCHITECTURE			
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				guiaremisionReturnGeneral=guiaremisionLogic.cargarCombosLoteForeignKeyGuiaRemision(finalQueryGlobalEmpresa,finalQueryGlobalSucursal,finalQueryGlobalEjercicio,finalQueryGlobalPeriodo,finalQueryGlobalUsuario,finalQueryGlobalFormato,finalQueryGlobalTipoPrecio,finalQueryGlobalMoneda,finalQueryGlobalCliente,finalQueryGlobalVendedor,finalQueryGlobalFactura,finalQueryGlobalTransportista,finalQueryGlobalConsultor,finalQueryGlobalTransporte,finalQueryGlobalSubCliente,finalQueryGlobalEmpleado,finalQueryGlobalCiudadOrigen,finalQueryGlobalCiudadDestino,finalQueryGlobalTipoLlamada,finalQueryGlobalTipoCambio);//WithConnection
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}			
			//ARCHITECTURE
			
			

			if(!finalQueryGlobalEmpresa.equals("NONE")) {
				this.empresasForeignKey=guiaremisionReturnGeneral.getempresasForeignKey();
			}

			if(!finalQueryGlobalSucursal.equals("NONE")) {
				this.sucursalsForeignKey=guiaremisionReturnGeneral.getsucursalsForeignKey();
			}

			if(!finalQueryGlobalEjercicio.equals("NONE")) {
				this.ejerciciosForeignKey=guiaremisionReturnGeneral.getejerciciosForeignKey();
			}

			if(!finalQueryGlobalPeriodo.equals("NONE")) {
				this.periodosForeignKey=guiaremisionReturnGeneral.getperiodosForeignKey();
			}

			if(!finalQueryGlobalUsuario.equals("NONE")) {
				this.usuariosForeignKey=guiaremisionReturnGeneral.getusuariosForeignKey();
			}

			if(!finalQueryGlobalFormato.equals("NONE")) {
				this.formatosForeignKey=guiaremisionReturnGeneral.getformatosForeignKey();
			}

			if(!finalQueryGlobalTipoPrecio.equals("NONE")) {
				this.tipopreciosForeignKey=guiaremisionReturnGeneral.gettipopreciosForeignKey();
			}

			if(!finalQueryGlobalMoneda.equals("NONE")) {
				this.monedasForeignKey=guiaremisionReturnGeneral.getmonedasForeignKey();
			}

			if(!finalQueryGlobalCliente.equals("NONE")) {
				this.clientesForeignKey=guiaremisionReturnGeneral.getclientesForeignKey();
			}

			if(!finalQueryGlobalVendedor.equals("NONE")) {
				this.vendedorsForeignKey=guiaremisionReturnGeneral.getvendedorsForeignKey();
			}

			if(!finalQueryGlobalFactura.equals("NONE")) {
				this.facturasForeignKey=guiaremisionReturnGeneral.getfacturasForeignKey();
			}

			if(!finalQueryGlobalTransportista.equals("NONE")) {
				this.transportistasForeignKey=guiaremisionReturnGeneral.gettransportistasForeignKey();
			}

			if(!finalQueryGlobalConsultor.equals("NONE")) {
				this.consultorsForeignKey=guiaremisionReturnGeneral.getconsultorsForeignKey();
			}

			if(!finalQueryGlobalTransporte.equals("NONE")) {
				this.transportesForeignKey=guiaremisionReturnGeneral.gettransportesForeignKey();
			}

			if(!finalQueryGlobalSubCliente.equals("NONE")) {
				this.subclientesForeignKey=guiaremisionReturnGeneral.getsubclientesForeignKey();
			}

			if(!finalQueryGlobalEmpleado.equals("NONE")) {
				this.empleadosForeignKey=guiaremisionReturnGeneral.getempleadosForeignKey();
			}

			if(!finalQueryGlobalCiudadOrigen.equals("NONE")) {
				this.ciudadorigensForeignKey=guiaremisionReturnGeneral.getciudadorigensForeignKey();
			}

			if(!finalQueryGlobalCiudadDestino.equals("NONE")) {
				this.ciudaddestinosForeignKey=guiaremisionReturnGeneral.getciudaddestinosForeignKey();
			}

			if(!finalQueryGlobalTipoLlamada.equals("NONE")) {
				this.tipollamadasForeignKey=guiaremisionReturnGeneral.gettipollamadasForeignKey();
			}

			if(!finalQueryGlobalTipoCambio.equals("NONE")) {
				this.tipocambiosForeignKey=guiaremisionReturnGeneral.gettipocambiosForeignKey();
			}
			
			
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void addItemDefectoCombosTodosForeignKeyGuiaRemision()throws Exception {
		try {
			
			this.addItemDefectoCombosForeignKeyEmpresa();
			this.addItemDefectoCombosForeignKeySucursal();
			this.addItemDefectoCombosForeignKeyEjercicio();
			this.addItemDefectoCombosForeignKeyPeriodo();
			this.addItemDefectoCombosForeignKeyUsuario();
			this.addItemDefectoCombosForeignKeyFormato();
			this.addItemDefectoCombosForeignKeyTipoPrecio();
			this.addItemDefectoCombosForeignKeyMoneda();
			this.addItemDefectoCombosForeignKeyCliente();
			this.addItemDefectoCombosForeignKeyVendedor();
			this.addItemDefectoCombosForeignKeyFactura();
			this.addItemDefectoCombosForeignKeyTransportista();
			this.addItemDefectoCombosForeignKeyConsultor();
			this.addItemDefectoCombosForeignKeyTransporte();
			this.addItemDefectoCombosForeignKeySubCliente();
			this.addItemDefectoCombosForeignKeyEmpleado();
			this.addItemDefectoCombosForeignKeyCiudadOrigen();
			this.addItemDefectoCombosForeignKeyCiudadDestino();
			this.addItemDefectoCombosForeignKeyTipoLlamada();
			this.addItemDefectoCombosForeignKeyTipoCambio();
		} catch(Exception e) {
			throw e;
		}		
	}
	
	



	public void addItemDefectoCombosForeignKeyEmpresa()throws Exception {
		try {
			if(this.guiaremisionSessionBean==null) {
				this.guiaremisionSessionBean=new GuiaRemisionSessionBean();
			}

			if(!this.guiaremisionSessionBean.getisBusquedaDesdeForeignKeySesionEmpresa()) {
				Empresa empresa=new Empresa();
				EmpresaConstantesFunciones.setEmpresaDescripcion(empresa,Constantes.SMENSAJE_ESCOJA_OPCION);
				empresa.setId(null);

				if(!EmpresaConstantesFunciones.ExisteEnLista(this.empresasForeignKey,empresa,true)) {

					this.empresasForeignKey.add(0,empresa);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeySucursal()throws Exception {
		try {

			if(!this.guiaremisionSessionBean.getisBusquedaDesdeForeignKeySesionSucursal()) {
				Sucursal sucursal=new Sucursal();
				SucursalConstantesFunciones.setSucursalDescripcion(sucursal,Constantes.SMENSAJE_ESCOJA_OPCION);
				sucursal.setId(null);

				if(!SucursalConstantesFunciones.ExisteEnLista(this.sucursalsForeignKey,sucursal,true)) {

					this.sucursalsForeignKey.add(0,sucursal);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyEjercicio()throws Exception {
		try {

			if(!this.guiaremisionSessionBean.getisBusquedaDesdeForeignKeySesionEjercicio()) {
				Ejercicio ejercicio=new Ejercicio();
				EjercicioConstantesFunciones.setEjercicioDescripcion(ejercicio,Constantes.SMENSAJE_ESCOJA_OPCION);
				ejercicio.setId(null);

				if(!EjercicioConstantesFunciones.ExisteEnLista(this.ejerciciosForeignKey,ejercicio,true)) {

					this.ejerciciosForeignKey.add(0,ejercicio);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyPeriodo()throws Exception {
		try {

			if(!this.guiaremisionSessionBean.getisBusquedaDesdeForeignKeySesionPeriodo()) {
				Periodo periodo=new Periodo();
				PeriodoConstantesFunciones.setPeriodoDescripcion(periodo,Constantes.SMENSAJE_ESCOJA_OPCION);
				periodo.setId(null);

				if(!PeriodoConstantesFunciones.ExisteEnLista(this.periodosForeignKey,periodo,true)) {

					this.periodosForeignKey.add(0,periodo);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyUsuario()throws Exception {
		try {

			if(!this.guiaremisionSessionBean.getisBusquedaDesdeForeignKeySesionUsuario()) {
				Usuario usuario=new Usuario();
				UsuarioConstantesFunciones.setUsuarioDescripcion(usuario,Constantes.SMENSAJE_ESCOJA_OPCION);
				usuario.setId(null);

				if(!UsuarioConstantesFunciones.ExisteEnLista(this.usuariosForeignKey,usuario,true)) {

					this.usuariosForeignKey.add(0,usuario);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyFormato()throws Exception {
		try {

			if(!this.guiaremisionSessionBean.getisBusquedaDesdeForeignKeySesionFormato()) {
				Formato formato=new Formato();
				FormatoConstantesFunciones.setFormatoDescripcion(formato,Constantes.SMENSAJE_ESCOJA_OPCION);
				formato.setId(null);

				if(!FormatoConstantesFunciones.ExisteEnLista(this.formatosForeignKey,formato,true)) {

					this.formatosForeignKey.add(0,formato);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTipoPrecio()throws Exception {
		try {

			if(!this.guiaremisionSessionBean.getisBusquedaDesdeForeignKeySesionTipoPrecio()) {
				TipoPrecio tipoprecio=new TipoPrecio();
				TipoPrecioConstantesFunciones.setTipoPrecioDescripcion(tipoprecio,Constantes.SMENSAJE_ESCOJA_OPCION);
				tipoprecio.setId(null);

				if(!TipoPrecioConstantesFunciones.ExisteEnLista(this.tipopreciosForeignKey,tipoprecio,true)) {

					this.tipopreciosForeignKey.add(0,tipoprecio);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyMoneda()throws Exception {
		try {

			if(!this.guiaremisionSessionBean.getisBusquedaDesdeForeignKeySesionMoneda()) {
				Moneda moneda=new Moneda();
				MonedaConstantesFunciones.setMonedaDescripcion(moneda,Constantes.SMENSAJE_ESCOJA_OPCION);
				moneda.setId(null);

				if(!MonedaConstantesFunciones.ExisteEnLista(this.monedasForeignKey,moneda,true)) {

					this.monedasForeignKey.add(0,moneda);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyCliente()throws Exception {
		try {

			if(!this.guiaremisionSessionBean.getisBusquedaDesdeForeignKeySesionCliente()) {
				Cliente cliente=new Cliente();
				ClienteConstantesFunciones.setClienteDescripcion(cliente,Constantes.SMENSAJE_ESCOJA_OPCION);
				cliente.setId(null);

				if(!ClienteConstantesFunciones.ExisteEnLista(this.clientesForeignKey,cliente,true)) {

					this.clientesForeignKey.add(0,cliente);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyVendedor()throws Exception {
		try {

			if(!this.guiaremisionSessionBean.getisBusquedaDesdeForeignKeySesionVendedor()) {
				Vendedor vendedor=new Vendedor();
				VendedorConstantesFunciones.setVendedorDescripcion(vendedor,Constantes.SMENSAJE_ESCOJA_OPCION);
				vendedor.setId(null);

				if(!VendedorConstantesFunciones.ExisteEnLista(this.vendedorsForeignKey,vendedor,true)) {

					this.vendedorsForeignKey.add(0,vendedor);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyFactura()throws Exception {
		try {

			if(!this.guiaremisionSessionBean.getisBusquedaDesdeForeignKeySesionFactura()) {
				Factura factura=new Factura();
				FacturaConstantesFunciones.setFacturaDescripcion(factura,Constantes.SMENSAJE_ESCOJA_OPCION);
				factura.setId(null);

				if(!FacturaConstantesFunciones.ExisteEnLista(this.facturasForeignKey,factura,true)) {

					this.facturasForeignKey.add(0,factura);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTransportista()throws Exception {
		try {

			if(!this.guiaremisionSessionBean.getisBusquedaDesdeForeignKeySesionTransportista()) {
				Transportista transportista=new Transportista();
				TransportistaConstantesFunciones.setTransportistaDescripcion(transportista,Constantes.SMENSAJE_ESCOJA_OPCION);
				transportista.setId(null);

				if(!TransportistaConstantesFunciones.ExisteEnLista(this.transportistasForeignKey,transportista,true)) {

					this.transportistasForeignKey.add(0,transportista);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyConsultor()throws Exception {
		try {

			if(!this.guiaremisionSessionBean.getisBusquedaDesdeForeignKeySesionConsultor()) {
				Consultor consultor=new Consultor();
				ConsultorConstantesFunciones.setConsultorDescripcion(consultor,Constantes.SMENSAJE_ESCOJA_OPCION);
				consultor.setId(null);

				if(!ConsultorConstantesFunciones.ExisteEnLista(this.consultorsForeignKey,consultor,true)) {

					this.consultorsForeignKey.add(0,consultor);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTransporte()throws Exception {
		try {

			if(!this.guiaremisionSessionBean.getisBusquedaDesdeForeignKeySesionTransporte()) {
				Transporte transporte=new Transporte();
				TransporteConstantesFunciones.setTransporteDescripcion(transporte,Constantes.SMENSAJE_ESCOJA_OPCION);
				transporte.setId(null);

				if(!TransporteConstantesFunciones.ExisteEnLista(this.transportesForeignKey,transporte,true)) {

					this.transportesForeignKey.add(0,transporte);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeySubCliente()throws Exception {
		try {

			if(!this.guiaremisionSessionBean.getisBusquedaDesdeForeignKeySesionSubCliente()) {
				SubCliente subcliente=new SubCliente();
				SubClienteConstantesFunciones.setSubClienteDescripcion(subcliente,Constantes.SMENSAJE_ESCOJA_OPCION);
				subcliente.setId(null);

				if(!SubClienteConstantesFunciones.ExisteEnLista(this.subclientesForeignKey,subcliente,true)) {

					this.subclientesForeignKey.add(0,subcliente);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyEmpleado()throws Exception {
		try {

			if(!this.guiaremisionSessionBean.getisBusquedaDesdeForeignKeySesionEmpleado()) {
				Empleado empleado=new Empleado();
				EmpleadoConstantesFunciones.setEmpleadoDescripcion(empleado,Constantes.SMENSAJE_ESCOJA_OPCION);
				empleado.setId(null);

				if(!EmpleadoConstantesFunciones.ExisteEnLista(this.empleadosForeignKey,empleado,true)) {

					this.empleadosForeignKey.add(0,empleado);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyCiudadOrigen()throws Exception {
		try {

			if(!this.guiaremisionSessionBean.getisBusquedaDesdeForeignKeySesionCiudadOrigen()) {
				Ciudad ciudadorigen=new Ciudad();
				CiudadConstantesFunciones.setCiudadDescripcion(ciudadorigen,Constantes.SMENSAJE_ESCOJA_OPCION);
				ciudadorigen.setId(null);

				if(!CiudadConstantesFunciones.ExisteEnLista(this.ciudadorigensForeignKey,ciudadorigen,true)) {

					this.ciudadorigensForeignKey.add(0,ciudadorigen);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyCiudadDestino()throws Exception {
		try {

			if(!this.guiaremisionSessionBean.getisBusquedaDesdeForeignKeySesionCiudadDestino()) {
				Ciudad ciudaddestino=new Ciudad();
				CiudadConstantesFunciones.setCiudadDescripcion(ciudaddestino,Constantes.SMENSAJE_ESCOJA_OPCION);
				ciudaddestino.setId(null);

				if(!CiudadConstantesFunciones.ExisteEnLista(this.ciudaddestinosForeignKey,ciudaddestino,true)) {

					this.ciudaddestinosForeignKey.add(0,ciudaddestino);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTipoLlamada()throws Exception {
		try {

			if(!this.guiaremisionSessionBean.getisBusquedaDesdeForeignKeySesionTipoLlamada()) {
				TipoLlamada tipollamada=new TipoLlamada();
				TipoLlamadaConstantesFunciones.setTipoLlamadaDescripcion(tipollamada,Constantes.SMENSAJE_ESCOJA_OPCION);
				tipollamada.setId(null);

				if(!TipoLlamadaConstantesFunciones.ExisteEnLista(this.tipollamadasForeignKey,tipollamada,true)) {

					this.tipollamadasForeignKey.add(0,tipollamada);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTipoCambio()throws Exception {
		try {

			if(!this.guiaremisionSessionBean.getisBusquedaDesdeForeignKeySesionTipoCambio()) {
				TipoCambio tipocambio=new TipoCambio();
				TipoCambioConstantesFunciones.setTipoCambioDescripcion(tipocambio,Constantes.SMENSAJE_ESCOJA_OPCION);
				tipocambio.setId(null);

				if(!TipoCambioConstantesFunciones.ExisteEnLista(this.tipocambiosForeignKey,tipocambio,true)) {

					this.tipocambiosForeignKey.add(0,tipocambio);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void initActionsCombosTodosForeignKeyGuiaRemision()throws Exception {
		try {
			
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void initActionsCombosTodosForeignKeyGuiaRemision(String sFormularioTipoBusqueda)throws Exception {
		try {
			
		} catch(Exception e) {
			throw e;
		}		
	}
	
	


	
	


	
	public void setVariablesGlobalesCombosForeignKeyGuiaRemision()throws Exception {	
		try {
			if(this.parametroGeneralUsuario!=null && this.parametroGeneralUsuario.getId()>0) {
			
				this.setActualEmpresaForeignKey(this.parametroGeneralUsuario.getid_empresa(),false,"Formulario");
				this.setActualSucursalForeignKey(this.parametroGeneralUsuario.getid_sucursal(),false,"Formulario");
				this.setActualEjercicioForeignKey(this.parametroGeneralUsuario.getid_ejercicio(),false,"Formulario");
				this.setActualPeriodoForeignKey(this.parametroGeneralUsuario.getid_periodo(),false,"Formulario");
				this.setActualUsuarioForeignKey(this.parametroGeneralUsuario.getid_usuario(),false,"Formulario");
				this.setActualMonedaForeignKey(this.parametroGeneralUsuario.getid_moneda(),false,"Formulario");
			
			
				this.guiaremision.setfecha_emision(this.parametroGeneralUsuario.getfecha_sistema());
				this.guiaremision.setfecha_origen(this.parametroGeneralUsuario.getfecha_sistema());
				this.guiaremision.setfecha_destino(this.parametroGeneralUsuario.getfecha_sistema());
				this.guiaremision.setfecha(this.parametroGeneralUsuario.getfecha_sistema());
				this.guiaremision.setfecha_autorizacion(this.parametroGeneralUsuario.getfecha_sistema());
				this.guiaremision.setfecha_vencimiento(this.parametroGeneralUsuario.getfecha_sistema());
			}
			
			//INICIALIZA VARIABLES COMBOS GLOBALES AUXILIARES A FORMULARIO(Anio,Mes)
			this.setVariablesGlobalesAuxiliaresCombosForeignKeyGuiaRemision();
		
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesObjetoActualToFormularioForeignKeyGuiaRemision(GuiaRemision guiaremision)throws Exception {	
		try {
			
			this.setActualFormatoForeignKey(guiaremision.getid_formato(),false,"Formulario");
			this.setActualTipoPrecioForeignKey(guiaremision.getid_tipo_precio(),false,"Formulario");
			this.setActualClienteForeignKey(guiaremision.getid_cliente(),false,"Formulario");
			this.setActualVendedorForeignKey(guiaremision.getid_vendedor(),false,"Formulario");
			this.setActualFacturaForeignKey(guiaremision.getid_factura(),false,"Formulario");
			this.setActualTransportistaForeignKey(guiaremision.getid_transportista(),false,"Formulario");
			this.setActualConsultorForeignKey(guiaremision.getid_consultor(),false,"Formulario");
			this.setActualTransporteForeignKey(guiaremision.getid_transporte(),false,"Formulario");
			this.setActualSubClienteForeignKey(guiaremision.getid_sub_cliente(),false,"Formulario");
			this.setActualEmpleadoForeignKey(guiaremision.getid_empleado(),false,"Formulario");
			this.setActualCiudadOrigenForeignKey(guiaremision.getid_ciudad_origen(),false,"Formulario");
			this.setActualCiudadDestinoForeignKey(guiaremision.getid_ciudad_destino(),false,"Formulario");
			this.setActualTipoLlamadaForeignKey(guiaremision.getid_tipo_llamada(),false,"Formulario");
			this.setActualTipoCambioForeignKey(guiaremision.getid_tipo_cambio(),false,"Formulario");			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesObjetoActualToListasForeignKeyGuiaRemision(GuiaRemision guiaremision,String sTipoEvento)throws Exception {	
		try {
			
			

				if(guiaremision.getCliente()!=null && !sTipoEvento.equals("id_clienteGuiaRemision")) { //sTipoEvento Evita Bucle Infinito

					this.clientesForeignKey=new ArrayList<Cliente>();
					this.clientesForeignKey.add(guiaremision.getCliente());

					this.addItemDefectoCombosForeignKeyCliente();
					this.cargarCombosFrameClientesForeignKey("Todos");
				}

				if(guiaremision.getFactura()!=null && !sTipoEvento.equals("id_facturaGuiaRemision")) { //sTipoEvento Evita Bucle Infinito

					this.facturasForeignKey=new ArrayList<Factura>();
					this.facturasForeignKey.add(guiaremision.getFactura());

					this.addItemDefectoCombosForeignKeyFactura();
					this.cargarCombosFrameFacturasForeignKey("Todos");
				}

				if(guiaremision.getTipoCambio()!=null && !sTipoEvento.equals("id_tipo_cambioGuiaRemision")) { //sTipoEvento Evita Bucle Infinito

					this.tipocambiosForeignKey=new ArrayList<TipoCambio>();
					this.tipocambiosForeignKey.add(guiaremision.getTipoCambio());

					this.addItemDefectoCombosForeignKeyTipoCambio();
					this.cargarCombosFrameTipoCambiosForeignKey("Todos");
				}
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	/*
	public void setVariablesCombosFromBeanForeignKeyGuiaRemision()throws Exception {	
		try {
			
			this.setActualFormatoForeignKey(this.guiaremisionConstantesFunciones.getid_formato(),false,"Formulario");
			this.setActualTipoPrecioForeignKey(this.guiaremisionConstantesFunciones.getid_tipo_precio(),false,"Formulario");
			this.setActualClienteForeignKey(this.guiaremisionConstantesFunciones.getid_cliente(),false,"Formulario");
			this.setActualVendedorForeignKey(this.guiaremisionConstantesFunciones.getid_vendedor(),false,"Formulario");
			this.setActualFacturaForeignKey(this.guiaremisionConstantesFunciones.getid_factura(),false,"Formulario");
			this.setActualTransportistaForeignKey(this.guiaremisionConstantesFunciones.getid_transportista(),false,"Formulario");
			this.setActualConsultorForeignKey(this.guiaremisionConstantesFunciones.getid_consultor(),false,"Formulario");
			this.setActualTransporteForeignKey(this.guiaremisionConstantesFunciones.getid_transporte(),false,"Formulario");
			this.setActualSubClienteForeignKey(this.guiaremisionConstantesFunciones.getid_sub_cliente(),false,"Formulario");
			this.setActualEmpleadoForeignKey(this.guiaremisionConstantesFunciones.getid_empleado(),false,"Formulario");
			this.setActualCiudadOrigenForeignKey(this.guiaremisionConstantesFunciones.getid_ciudad_origen(),false,"Formulario");
			this.setActualCiudadDestinoForeignKey(this.guiaremisionConstantesFunciones.getid_ciudad_destino(),false,"Formulario");
			this.setActualTipoLlamadaForeignKey(this.guiaremisionConstantesFunciones.getid_tipo_llamada(),false,"Formulario");
			this.setActualTipoCambioForeignKey(this.guiaremisionConstantesFunciones.getid_tipo_cambio(),false,"Formulario");			
		} catch(Exception e) {
			throw e;
		}
	}
	*/
	
	public void setVariablesGlobalesAuxiliaresCombosForeignKeyGuiaRemision()throws Exception {	
		try {
			

				if(this.jInternalFrameDetalleFormGuiaRemision!=null) {
					Ejercicio ejercicioActual=(Ejercicio)this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_ejercicioGuiaRemision.getSelectedItem();
				}

				if(this.jInternalFrameDetalleFormGuiaRemision!=null) {
					Periodo periodoActual=(Periodo)this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_periodoGuiaRemision.getSelectedItem();
				}

				this.setActualUsuarioForeignKey(this.usuarioActual.getId(),false,"Formulario");
		
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesDefaultCombosForeignKeyGuiaRemision()throws Exception {	
		try {
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesParametroCombosForeignKeyGuiaRemision()throws Exception {	
		try {
			
		} catch(Exception e) {
			throw e;
		}
	}		
	
	public void cargarCombosParametroGuiaRemision()throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			
			//this.cargarDatosCliente();
			
			
			
		} catch(Exception e) {
			throw e;
		}		
	}
		
	public void cargarCombosFrameForeignKeyGuiaRemision()throws Exception {
		try {
			

			this.cargarCombosFrameEmpresasForeignKey("Todos");
			this.cargarCombosFrameSucursalsForeignKey("Todos");
			this.cargarCombosFrameEjerciciosForeignKey("Todos");
			this.cargarCombosFramePeriodosForeignKey("Todos");
			this.cargarCombosFrameUsuariosForeignKey("Todos");
			this.cargarCombosFrameFormatosForeignKey("Todos");
			this.cargarCombosFrameTipoPreciosForeignKey("Todos");
			this.cargarCombosFrameMonedasForeignKey("Todos");
			this.cargarCombosFrameClientesForeignKey("Todos");
			this.cargarCombosFrameVendedorsForeignKey("Todos");
			this.cargarCombosFrameFacturasForeignKey("Todos");
			this.cargarCombosFrameTransportistasForeignKey("Todos");
			this.cargarCombosFrameConsultorsForeignKey("Todos");
			this.cargarCombosFrameTransportesForeignKey("Todos");
			this.cargarCombosFrameSubClientesForeignKey("Todos");
			this.cargarCombosFrameEmpleadosForeignKey("Todos");
			this.cargarCombosFrameCiudadOrigensForeignKey("Todos");
			this.cargarCombosFrameCiudadDestinosForeignKey("Todos");
			this.cargarCombosFrameTipoLlamadasForeignKey("Todos");
			this.cargarCombosFrameTipoCambiosForeignKey("Todos");

		} catch(Exception e) {
			throw e;
		}		
	}		
	
	public void cargarCombosFrameForeignKeyGuiaRemision(String sFormularioTipoBusqueda)throws Exception {
		try {
			

			this.cargarCombosFrameEmpresasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameSucursalsForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameEjerciciosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFramePeriodosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameUsuariosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameFormatosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTipoPreciosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameMonedasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameClientesForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameVendedorsForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameFacturasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTransportistasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameConsultorsForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTransportesForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameSubClientesForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameEmpleadosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameCiudadOrigensForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameCiudadDestinosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTipoLlamadasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTipoCambiosForeignKey(sFormularioTipoBusqueda);

		} catch(Exception e) {
			throw e;
		}		
	}	
	
	public void setItemDefectoCombosForeignKeyGuiaRemision()throws Exception {
		try {
			



			if(this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_empresaGuiaRemision!=null && this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_empresaGuiaRemision.getItemCount()>0) {
				this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_empresaGuiaRemision.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_sucursalGuiaRemision!=null && this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_sucursalGuiaRemision.getItemCount()>0) {
				this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_sucursalGuiaRemision.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_ejercicioGuiaRemision!=null && this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_ejercicioGuiaRemision.getItemCount()>0) {
				this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_ejercicioGuiaRemision.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_periodoGuiaRemision!=null && this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_periodoGuiaRemision.getItemCount()>0) {
				this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_periodoGuiaRemision.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_usuarioGuiaRemision!=null && this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_usuarioGuiaRemision.getItemCount()>0) {
				this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_usuarioGuiaRemision.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_formatoGuiaRemision!=null && this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_formatoGuiaRemision.getItemCount()>0) {
				this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_formatoGuiaRemision.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_tipo_precioGuiaRemision!=null && this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_tipo_precioGuiaRemision.getItemCount()>0) {
				this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_tipo_precioGuiaRemision.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_monedaGuiaRemision!=null && this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_monedaGuiaRemision.getItemCount()>0) {
				this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_monedaGuiaRemision.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_clienteGuiaRemision!=null && this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_clienteGuiaRemision.getItemCount()>0) {
				this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_clienteGuiaRemision.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_vendedorGuiaRemision!=null && this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_vendedorGuiaRemision.getItemCount()>0) {
				this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_vendedorGuiaRemision.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_facturaGuiaRemision!=null && this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_facturaGuiaRemision.getItemCount()>0) {
				this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_facturaGuiaRemision.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_transportistaGuiaRemision!=null && this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_transportistaGuiaRemision.getItemCount()>0) {
				this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_transportistaGuiaRemision.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_consultorGuiaRemision!=null && this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_consultorGuiaRemision.getItemCount()>0) {
				this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_consultorGuiaRemision.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_transporteGuiaRemision!=null && this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_transporteGuiaRemision.getItemCount()>0) {
				this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_transporteGuiaRemision.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_sub_clienteGuiaRemision!=null && this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_sub_clienteGuiaRemision.getItemCount()>0) {
				this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_sub_clienteGuiaRemision.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_empleadoGuiaRemision!=null && this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_empleadoGuiaRemision.getItemCount()>0) {
				this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_empleadoGuiaRemision.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_ciudad_origenGuiaRemision!=null && this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_ciudad_origenGuiaRemision.getItemCount()>0) {
				this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_ciudad_origenGuiaRemision.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_ciudad_destinoGuiaRemision!=null && this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_ciudad_destinoGuiaRemision.getItemCount()>0) {
				this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_ciudad_destinoGuiaRemision.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_tipo_llamadaGuiaRemision!=null && this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_tipo_llamadaGuiaRemision.getItemCount()>0) {
				this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_tipo_llamadaGuiaRemision.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_tipo_cambioGuiaRemision!=null && this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_tipo_cambioGuiaRemision.getItemCount()>0) {
				this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_tipo_cambioGuiaRemision.setSelectedIndex(0);
			}
		} catch(Exception e) {
			throw e;
		}		
	}		
	
	








































	
	

	public GuiaRemisionBeanSwingJInternalFrame() throws Exception {
		super(false,PaginaTipo.PRINCIPAL);
	}
	
	public GuiaRemisionBeanSwingJInternalFrame(Boolean cargarRelaciones,PaginaTipo paginaTipo) throws Exception {
		super(cargarRelaciones,paginaTipo);
	}
	
	public GuiaRemisionBeanSwingJInternalFrame(Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,PaginaTipo paginaTipo) throws Exception {
		super(cargarRelaciones,paginaTipo);
		
		this.guiaremisionSessionBean=new GuiaRemisionSessionBean(); 
		this.guiaremisionConstantesFunciones=new GuiaRemisionConstantesFunciones(); 
		this.guiaremisionBean=new GuiaRemision();//(this.guiaremisionConstantesFunciones); 		
		this.guiaremisionReturnGeneral=new GuiaRemisionParameterReturnGeneral(); 
		
		this.guiaremisionSessionBean.setConGuardarRelaciones(conGuardarRelaciones);
		this.guiaremisionSessionBean.setEsGuardarRelacionado(esGuardarRelacionado);
				
	}
	
	public GuiaRemisionBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,Boolean cargarTodosDatos,PaginaTipo paginaTipo) throws Exception {
		this(blncargarCombostrForeignKey,blnCargarInformacionInicial,jdesktopPane,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo,conGuardarRelaciones,esGuardarRelacionado,cargarRelaciones,cargarTodosDatos);
	}
		
	public GuiaRemisionBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,Boolean cargarRelaciones,Boolean cargarTodosDatos,PaginaTipo paginaTipo) throws Exception {
		this(blncargarCombostrForeignKey,blnCargarInformacionInicial,jdesktopPane,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo,false,false,cargarRelaciones,cargarTodosDatos);
	}	
	
	public GuiaRemisionBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,PaginaTipo paginaTipo,Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,Boolean cargarTodosDatos) throws Exception //Boolean esParaBusquedaForeignKey
    {
		super(jdesktopPane,conGuardarRelaciones,esGuardarRelacionado,cargarRelaciones,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo);
		
		try {
			
			this.permiteRecargarForm=false;
			
			this.startProcessGuiaRemision(true);
			
			Boolean esParaBusquedaForeignKey=false;//ANTES USADO COMO PARAMETRO DEL CONSTRUCTOR
			
			if(paginaTipo.equals(PaginaTipo.BUSQUEDA)) {
				esParaBusquedaForeignKey=true;
			}
			
			//OBLIGA VALIDA CON GUARDAR RELACIONES, TAMBIEN EN SWING
			conGuardarRelaciones=true;
			
			
			//SE ASIGNA EN CLASE PADRE
			/*
			this.parametroGeneralSg=parametroGeneralSg;		
			this.parametroGeneralUsuario=parametroGeneralUsuario;	
			this.usuarioActual=usuarioActual;
			this.moduloActual=moduloActual;
			*/						
			
			long start_time=0;
			long end_time=0;
			
			if(Constantes2.ISDEVELOPING2) {
				start_time = System.currentTimeMillis();
			}
			
			if(!cargarTodosDatos) {
				this.sAccionBusqueda="NINGUNO";
			}
			
			this.guiaremisionConstantesFunciones=new GuiaRemisionConstantesFunciones(); 
			this.guiaremisionBean=new GuiaRemision();//this.guiaremisionConstantesFunciones); 			
			this.guiaremisionReturnGeneral=new GuiaRemisionParameterReturnGeneral(); 
		
			GuiaRemisionBeanSwingJInternalFrameAdditional.CargaInicialInicio(this, "NORMAL", null);
			
			this.setTitle(Funciones.GetTituloSistema(this.parametroGeneralSg,this.moduloActual,this.usuarioActual,"Guia Remision Mantenimiento",paginaTipo));			
			
			this.conTotales=false;
			
			this.conTotales=true;
			
			
			this.guiaremision=new GuiaRemision();
			this.guiaremisions = new ArrayList<GuiaRemision>();
			this.guiaremisionsAux = new ArrayList<GuiaRemision>();
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic=new GuiaRemisionLogic();
				this.guiaremisionLogic.getNewConnexionToDeep("");
			}
			
			//this.guiaremisionSessionBean.setConGuardarRelaciones(conGuardarRelaciones);
			//this.guiaremisionSessionBean.setEsGuardarRelacionado(esGuardarRelacionado);
			
			this.jDesktopPane=jdesktopPane;
			
			if(this.jDesktopPane.getClass().equals(JDesktopPaneMe.class)) {
				this.constantes2=((JDesktopPaneMe)this.jDesktopPane).constantes2;
			}
			
			if(!Constantes.CON_VARIAS_VENTANAS) {
    			MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameDetalleFormGuiaRemision);
				
				if(!this.conCargarMinimo) {
					
					if(this.jInternalFrameReporteDinamicoGuiaRemision!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameReporteDinamicoGuiaRemision);	
					}
					
					if(this.jInternalFrameImportacionGuiaRemision!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameImportacionGuiaRemision);							
					}
					
				}
				
				
				if(!this.conCargarMinimo) {
					
					if(this.jInternalFrameOrderByGuiaRemision!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameOrderByGuiaRemision);					
					}
					
				}
			}
			
			//DETALLE DATOS
			if(this.jInternalFrameDetalleFormGuiaRemision!=null) { //this.conCargarFormDetalle) {
				this.jDesktopPane.add(this.jInternalFrameDetalleFormGuiaRemision);
				this.jInternalFrameDetalleFormGuiaRemision.setVisible(false);
				this.jInternalFrameDetalleFormGuiaRemision.setSelected(false);						
			}
			
			if(!this.conCargarMinimo) {
				
				//REPORTE DINAMICO
				if(this.jInternalFrameReporteDinamicoGuiaRemision!=null) {
					this.jDesktopPane.add(this.jInternalFrameReporteDinamicoGuiaRemision);
					this.jInternalFrameReporteDinamicoGuiaRemision.setVisible(false);
					this.jInternalFrameReporteDinamicoGuiaRemision.setSelected(false);
				}
				
				//IMPORTACION
				if(this.jInternalFrameImportacionGuiaRemision!=null) {
					this.jDesktopPane.add(this.jInternalFrameImportacionGuiaRemision);
					this.jInternalFrameImportacionGuiaRemision.setVisible(false);
					this.jInternalFrameImportacionGuiaRemision.setSelected(false);
				}
				
				
			}
			
			
			if(!this.conCargarMinimo) {
				
				if(this.jInternalFrameOrderByGuiaRemision!=null) {
					this.jDesktopPane.add(this.jInternalFrameOrderByGuiaRemision);
					this.jInternalFrameOrderByGuiaRemision.setVisible(false);
					this.jInternalFrameOrderByGuiaRemision.setSelected(false);				
				}
				
			}
			
			
			//this.esParaBusquedaForeignKey=false;
			this.esParaBusquedaForeignKey=esParaBusquedaForeignKey;
			
			this.invalidValues=new InvalidValue[0];
			
			
			
			this.idGuiaRemisionActual=0L;
			this.rowIndexActual=0;
			
			
			this.iNumeroPaginacionPagina=0;
			this.iNumeroPaginacion=GuiaRemisionConstantesFunciones.INUMEROPAGINACION;
			this.pagination=new Pagination();
			this.datosCliente=new DatosCliente();
			this.lIdUsuarioSesion=0L;	
			this.sTipoArchivoReporte="";
			this.sTipoArchivoReporteDinamico="";
			this.sTipoReporte="";
			this.sTipoReporteDinamico="";
			this.sTipoPaginacion="";
			this.sTipoRelacion="";
			this.sTipoAccion="";
			this.sTipoAccionFormulario="";
			this.sTipoSeleccionar="";			
			this.sDetalleReporte="";
			this.sTipoReporteExtra="";
			this.sValorCampoGeneral="";
			this.sPathReporteDinamico="";			
			
			this.isMostrarNumeroPaginacion=false;
			this.isSeleccionarTodos=false;
			this.isSeleccionados=false;
			this.conGraficoReporte=false;
			this.isPostAccionNuevo=false;
			this.isPostAccionSinCerrar=false;
			this.isPostAccionSinMensaje=false;
			this.esReporteDinamico=false;
			this.esRecargarFks=false;
			this.esReporteAccionProceso=false;
			
			this.guiaremisionReturnGeneral=new GuiaRemisionParameterReturnGeneral();
			
			this.guiaremisionParameterGeneral=new GuiaRemisionParameterReturnGeneral();
			
			
			
			this.sistemaLogicAdditional=new SistemaLogicAdditional();
			
			this.sistemaLogicAdditional.setConnexion(this.guiaremisionLogic.getConnexion());			
			
			
			
			
			
			
			
			//VERIFICAR GLOBAL
			this.cargarDatosCliente();			
			
			
			if(!this.guiaremisionSessionBean.getEsGuardarRelacionado()) {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					if(!sistemaLogicAdditional.validarLicenciaCliente(this.datosCliente,this.moduloActual,this.usuarioActual)) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_CONTROLGLOBAL);
					}
					
				} else if(Constantes.ISUSAEJBREMOTE) {
					
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}			
			
			//VERIFICAR GLOBAL
			
			//VERIFICAR SESSION ACTUAL
			//this.cargarDatosCliente();
			
			this.sistemaReturnGeneral=new SistemaParameterReturnGeneral();
			
			SistemaParameterReturnGeneralAdditional.inicializarSinSeguridad(this.sistemaReturnGeneral);
			
			if(GuiaRemisionJInternalFrame.CON_LLAMADA_SIMPLE) {
				if(this.guiaremisionSessionBean.getEsGuardarRelacionado()) {
					this.opcionActual.setId(0L);
					
					//idOpcion=0L;					
				}
				
				ArrayList<String> arrPaginas=new ArrayList<String>();		
				ArrayList<Opcion> opcionsFinal=new ArrayList<Opcion>();	
				
				arrPaginas.add(DetalleGuiaRemisionConstantesFunciones.SNOMBREOPCION);
		
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					//this.sistemaReturnGeneral=sistemaLogicAdditional.validarCargarSesionUsuarioActualWithConnection(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual,Constantes.LIDSISTEMAACTUAL,GuiaRemisionConstantesFunciones.SNOMBREOPCION,this.opcionActual,this.guiaremisionSessionBean.getEsGuardarRelacionado(),this.guiaremisionSessionBean.getConGuardarRelaciones(),arrPaginas);
					
					this.sistemaReturnGeneral=sistemaLogicAdditional.validarCargarSesionUsuarioActual(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual,Constantes.LIDSISTEMAACTUAL,GuiaRemisionConstantesFunciones.SNOMBREOPCION,this.opcionActual,this.guiaremisionSessionBean.getEsGuardarRelacionado(),this.guiaremisionSessionBean.getConGuardarRelaciones(),arrPaginas);
					
					if(!this.sistemaReturnGeneral.getEsValidado()) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_SESIONACTUAL);
					}
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
					//FALTA
				}
			} else { 
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					if(!sistemaLogicAdditional.validarSesionUsuarioActual(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual)) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_SESIONACTUAL);
					}
				
				} else if(Constantes.ISUSAEJBREMOTE) {
					
				} else if(Constantes.ISUSAEJBHOME) {
				}
			} 
			//VERIFICAR SESSION ACTUAL
			
			
			this.sVisibilidadTablaBusquedas="table-row";
			this.sVisibilidadTablaElementos="none";
			this.sVisibilidadTablaAcciones="none";
			
			this.isVisibilidadCeldaNuevoGuiaRemision=false;
			this.isVisibilidadCeldaDuplicarGuiaRemision=true;
			this.isVisibilidadCeldaCopiarGuiaRemision=true;
			this.isVisibilidadCeldaVerFormGuiaRemision=true;
			this.isVisibilidadCeldaOrdenGuiaRemision=true;
			this.isVisibilidadCeldaNuevoRelacionesGuiaRemision=false;
			this.isVisibilidadCeldaModificarGuiaRemision=false;
			this.isVisibilidadCeldaActualizarGuiaRemision=false;
			this.isVisibilidadCeldaEliminarGuiaRemision=false;
			this.isVisibilidadCeldaCancelarGuiaRemision=false;
			this.isVisibilidadCeldaGuardarGuiaRemision=false;
			this.isVisibilidadCeldaGuardarCambiosGuiaRemision=false;
			
			
			this.isVisibilidadFK_IdCiudadDestino=true;
			this.isVisibilidadFK_IdCiudadOrigen=true;
			this.isVisibilidadFK_IdCliente=true;
			this.isVisibilidadFK_IdConsultor=true;
			this.isVisibilidadFK_IdEjercicio=true;
			this.isVisibilidadFK_IdEmpleado=true;
			this.isVisibilidadFK_IdEmpresa=true;
			this.isVisibilidadFK_IdFactura=true;
			this.isVisibilidadFK_IdFormato=true;
			this.isVisibilidadFK_IdMoneda=true;
			this.isVisibilidadFK_IdPeriodo=true;
			this.isVisibilidadFK_IdSubCliente=true;
			this.isVisibilidadFK_IdSucursal=true;
			this.isVisibilidadFK_IdTipoCambio=true;
			this.isVisibilidadFK_IdTipoLlamada=true;
			this.isVisibilidadFK_IdTipoPrecio=true;
			this.isVisibilidadFK_IdTransporte=true;
			this.isVisibilidadFK_IdTransportista=true;
			this.isVisibilidadFK_IdUsuario=true;
			this.isVisibilidadFK_IdVendedor=true;
			
			//ELEMENTOS TABLAS PARAMETOS
			
			
			
			//ELEMENTOS TABLAS PARAMETOS_FIN
			
			//this.actualizarEstadoCeldasBotonesGuiaRemision("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
						
			
			
			this.inicializarPermisosGuiaRemision();
			
			//INICIALIZAR FALSE, TALVEZ COMENTAR
			this.setPermisosUsuarioGuiaRemision(false);
			
			this.setPermisosUsuarioGuiaRemision();
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.guiaremisionSessionBean.getEsGuardarRelacionado() 
				|| (this.guiaremisionSessionBean.getEsGuardarRelacionado() && this.guiaremisionSessionBean.getConGuardarRelaciones())) {
				
				this.inicializarSetPermisosUsuarioGuiaRemisionClasesRelacionadas();
			}
			
			if(this.guiaremisionSessionBean.getConGuardarRelaciones()) {
				this.actualizarTabsSetPermisosUsuarioGuiaRemisionClasesRelacionadas();
			}
			
			
			
			//SOLO SE EJECUTA LA PRIMERA VEZ, BINDINGS SI FUNCIONA
			if(!GuiaRemisionJInternalFrame.ISBINDING_MANUAL) {
				this.inicializarActualizarBindingBotonesPermisosGuiaRemision();
			} else {
				this.inicializarActualizarBindingBotonesPermisosManualGuiaRemision();
			}
			
			if(!this.isPermisoBusquedaGuiaRemision) {
				//BYDAN_BUSQUEDAS
				
				this.jTabbedPaneBusquedasGuiaRemision.setVisible(false);				
				
			}
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.guiaremisionSessionBean.getEsGuardarRelacionado()) {				
				this.tiposArchivosReportes=Funciones.getListTiposArchivosReportes();
				this.tiposArchivosReportesDinamico=Funciones.getListTiposArchivosReportes();
				this.tiposReportes=Funciones.getListTiposReportes(true);
				this.tiposReportesDinamico=Funciones.getListTiposReportesDinamico(true);
				
				
				this.tiposReportes.add(new Reporte("RELACIONES","RELACIONES"));
				this.tiposReportesDinamico.add(new Reporte("RELACIONES","RELACIONES"));
				
				this.tiposGraficosReportes=Funciones2.getListTiposGraficosReportes();
				this.tiposPaginacion=Funciones2.getListTiposPaginacion(this.isPermisoPaginacionMedioGuiaRemision,this.isPermisoPaginacionMedioGuiaRemision,this.isPermisoPaginacionTodoGuiaRemision);
				this.tiposSeleccionar=Funciones2.getListTiposSeleccionar();
				this.tiposSeleccionar.addAll(GuiaRemisionConstantesFunciones.getTiposSeleccionarGuiaRemision());
				
				this.tiposColumnasSelect=GuiaRemisionConstantesFunciones.getTiposSeleccionarGuiaRemision(true);
				
				this.tiposRelacionesSelect=new ArrayList<Reporte>();								
				
				this.cargarTiposRelacionesSelectGuiaRemision();				
				//this.tiposRelacionesSelect=GuiaRemisionConstantesFunciones.getTiposRelacionesGuiaRemision(true);
				
			} else {
				this.tiposArchivosReportes=new ArrayList<Reporte>();
				this.tiposArchivosReportesDinamico=new ArrayList<Reporte>();
				this.tiposReportes=new ArrayList<Reporte>();
				this.tiposReportesDinamico=new ArrayList<Reporte>();
				this.tiposGraficosReportes=new ArrayList<Reporte>();
				this.tiposPaginacion=new ArrayList<Reporte>();
				this.tiposSeleccionar=new ArrayList<Reporte>();			
				this.tiposColumnasSelect=new ArrayList<Reporte>();	
				this.tiposRelacionesSelect=new ArrayList<Reporte>();	
			}
						
			
			//FUNCIONALIDAD_RELACIONADO
			//if(!this.guiaremisionSessionBean.getEsGuardarRelacionado()) {
				//SE ENCUENTRA MAS ADELANTE CON ACCIONES POR USUARIO
				//ACCIONES GENERALES Y POR USUARIO
				this.tiposRelaciones=Funciones2.getListTiposRelaciones();
				this.setRelacionesUsuarioGuiaRemision();
				
				this.tiposAcciones=Funciones2.getListTiposAcciones(true,false,true);
				this.setAccionesUsuarioGuiaRemision(false);	
				
				this.tiposAccionesFormulario=Funciones2.getListTiposAccionesFormulario(true,false,true);							
				this.setAccionesUsuarioGuiaRemision(true);	
				
				this.inicializarActualizarBindingtiposArchivosReportesAccionesGuiaRemision() ;
			
			/*
			} else {
				this.tiposAcciones=new ArrayList<Reporte>();
				this.tiposAccionesFormulario=new ArrayList<Reporte>();
			}
			*/						
			
			this.inicializarInvalidValues();
						
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			
			
			this.arrOrderBy= new  ArrayList<OrderBy>();
			
			
			this.arrDatoGeneralMinimos= new  ArrayList<DatoGeneralMinimo>();
			
			
			this.traerValoresTablaOrderBy();			
			
			
			this.isGuardarCambiosEnLote=false;
			this.isCargarCombosDependencia=false;
			
			
			this.detalleguiaremisionLogic=new DetalleGuiaRemisionLogic(); 
			jasperPrint = null;												
			
			//FK
			
			this.empresaLogic=new EmpresaLogic();
			this.sucursalLogic=new SucursalLogic();
			this.ejercicioLogic=new EjercicioLogic();
			this.periodoLogic=new PeriodoLogic();
			this.usuarioLogic=new UsuarioLogic();
			this.formatoLogic=new FormatoLogic();
			this.tipoprecioLogic=new TipoPrecioLogic();
			this.monedaLogic=new MonedaLogic();
			this.clienteLogic=new ClienteLogic();
			this.vendedorLogic=new VendedorLogic();
			this.facturaLogic=new FacturaLogic();
			this.transportistaLogic=new TransportistaLogic();
			this.consultorLogic=new ConsultorLogic();
			this.transporteLogic=new TransporteLogic();
			this.subclienteLogic=new SubClienteLogic();
			this.empleadoLogic=new EmpleadoLogic();
			this.ciudadorigenLogic=new CiudadLogic();
			this.ciudaddestinoLogic=new CiudadLogic();
			this.tipollamadaLogic=new TipoLlamadaLogic();
			this.tipocambioLogic=new TipoCambioLogic();
			
			//PARAMETROS
			
			
			/*
			if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {		
				hashtableEnv =  Funciones.getHashtableEnv();		
				initialContext = new InitialContext(hashtableEnv);	
			}
			*/
			/*
			if(Constantes.ISUSAEJBREMOTE) {
				guiaremisionImplementable= (GuiaRemisionImplementable) initialContext.lookup(Constantes.SEJBPACKAGE+Constantes.SEJBSEPARATOR+GuiaRemisionConstantesFunciones.SEJBNAME+Constantes.SEJBSEPARATOR+Constantes.SEJBREMOTE);
			} else if(Constantes.ISUSAEJBHOME) {
				guiaremisionImplementableHome= (GuiaRemisionImplementableHome) initialContext.lookup(Constantes.SEJBPACKAGE+Constantes.SEJBSEPARATOR+GuiaRemisionConstantesFunciones.SEJBNAME+Constantes.SEJBSEPARATOR+Constantes.SEJBLOCAL);
			}			
			*/
			
			
			this.guiaremisions= new ArrayList<GuiaRemision>();
			this.guiaremisionsEliminados= new ArrayList<GuiaRemision>();
						
			this.isEsNuevoGuiaRemision=false;
			this.esParaAccionDesdeFormularioGuiaRemision=false;
			this.isEsMantenimientoRelacionesRelacionadoUnico=false;
			this.isEsMantenimientoRelaciones=false;
			this.isEsMantenimientoRelacionado=false;
			this.isContieneImagenes=false;
			
			
			
			
			//BUSQUEDA INTERNA FK
			this.idClienteActual=0L;
			this.idFacturaActual=0L;
			this.idTipoCambioActual=0L;
			
			//INICIALIZAR LISTAS FK
			
			this.empresasForeignKey=new ArrayList<Empresa>() ;
			this.sucursalsForeignKey=new ArrayList<Sucursal>() ;
			this.ejerciciosForeignKey=new ArrayList<Ejercicio>() ;
			this.periodosForeignKey=new ArrayList<Periodo>() ;
			this.usuariosForeignKey=new ArrayList<Usuario>() ;
			this.formatosForeignKey=new ArrayList<Formato>() ;
			this.tipopreciosForeignKey=new ArrayList<TipoPrecio>() ;
			this.monedasForeignKey=new ArrayList<Moneda>() ;
			this.clientesForeignKey=new ArrayList<Cliente>() ;
			this.vendedorsForeignKey=new ArrayList<Vendedor>() ;
			this.facturasForeignKey=new ArrayList<Factura>() ;
			this.transportistasForeignKey=new ArrayList<Transportista>() ;
			this.consultorsForeignKey=new ArrayList<Consultor>() ;
			this.transportesForeignKey=new ArrayList<Transporte>() ;
			this.subclientesForeignKey=new ArrayList<SubCliente>() ;
			this.empleadosForeignKey=new ArrayList<Empleado>() ;
			this.ciudadorigensForeignKey=new ArrayList<Ciudad>() ;
			this.ciudaddestinosForeignKey=new ArrayList<Ciudad>() ;
			this.tipollamadasForeignKey=new ArrayList<TipoLlamada>() ;
			this.tipocambiosForeignKey=new ArrayList<TipoCambio>() ;
			
			
			
			
			if(blncargarCombostrForeignKey) {
				this.cargarCombosForeignKeyGuiaRemision(this.isCargarCombosDependencia);
			}
			
			this.cargarCombosParametroGuiaRemision();
			
			
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.guiaremisionSessionBean.getEsGuardarRelacionado()) {
				this.onLoad();
			}
						
			GuiaRemisionBeanSwingJInternalFrameAdditional.RecargarVentanaSegunOpcion(this,opcionActual);
			
			/*
			if(blnCargarInformacionInicial) {
				this.recargarInformacion();
			}
			*/
			//this.iNumeroPaginacionPagina=0;
			//this.iNumeroPaginacion=GuiaRemisionConstantesFunciones.INUMEROPAGINACION;
			
			this.actualizarEstadoCeldasBotonesGuiaRemision("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			//SOLO LA PRIMERA VEZ HACE LOS BINDINGS, SOLO AHI FUNCIONA
			this.inicializarActualizarBindingGuiaRemision(true); 
			
			//SE REDIMENSIONA SINO NO SE ACTUALIZA
			this.redimensionarTablaDatos();
			
			
			this.initActions();
			
			;
						
			if(this.jInternalFrameDetalleFormGuiaRemision!=null) {//if(this.conCargarFormDetalle) {
				this.cargarMenuRelaciones();
			}
			
			//OBLIGA CARGAR DETALLE, MEJOR DESHABILITAR, FALTA TALVEZ PONER EN SELECCIONAR
			//MAYBE
			//this.updateControlesFormularioGuiaRemision();
			
			if(!this.conCargarMinimo) {
				this.updateBusquedasFormularioGuiaRemision();
			}
			
			GuiaRemisionBeanSwingJInternalFrameAdditional.CargaInicial(this, "NORMAL", null);
			
			
			//SE REALIZA ESTO PARA QUE SE PUEDA RECORRER TAB SIN IMPORTAR ORDEN
			Boolean existeTabBusqueda=false;
			
			if(!this.conCargarMinimo) {
				//BYDAN_BUSQUEDAS
				
				
				for(int i=0; i<this.jTabbedPaneBusquedasGuiaRemision.getTabCount(); i++) {
					this.jTabbedPaneBusquedasGuiaRemision.setSelectedIndex(i);
						
					if(!existeTabBusqueda) {
						existeTabBusqueda=true;
					}
				}
					
				if(existeTabBusqueda) {
					this.jTabbedPaneBusquedasGuiaRemision.setSelectedIndex(0);
				}	
				
				
			}
			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.commitNewConnexionToDeep();
			}
			
			
			if(Constantes2.ISDEVELOPING2) {
				end_time = System.currentTimeMillis();			
				String sTipo="Load Ventana";
				Funciones2.getMensajeTiempoEjecucion(start_time, end_time, sTipo,false);
			}  
			
			this.finishProcessGuiaRemision(true);
			
			this.dEnd=(double)System.currentTimeMillis();
			
			this.dDif=this.dEnd - this.dStart;
			
			if(Constantes.ISDEVELOPING) {
				System.out.println("Tiempo(ms) Carga GuiaRemision: " + this.dDif); 
			}
			
			this.permiteRecargarForm=true;
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.closeNewConnexionToDeep();
			}
		}	 
    }
	
	public void cargarTiposRelacionesSelectGuiaRemision() {
		Reporte reporte=new Reporte();
		
	

		reporte=new Reporte();
		reporte.setsCodigo(DetalleGuiaRemisionConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(DetalleGuiaRemisionConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);
	}
	
	
	
	public void jTabbedPaneChangeListenerGeneral(String sTipo,ChangeEvent evt) { 	  
		Boolean procesaCargarParteTab=false;
			
		try {
			int iIndex=0;		    			
			String sTitle="";
			
			//TABBED PANE RELACIONES
			if(sTipo.equals("RelacionesGuiaRemision")) {
				iIndex=this.jInternalFrameDetalleFormGuiaRemision.jTabbedPaneRelacionesGuiaRemision.getSelectedIndex();		    
			
				sTitle=this.jInternalFrameDetalleFormGuiaRemision.jTabbedPaneRelacionesGuiaRemision.getTitleAt(iIndex);
				
				Integer intSelectedRow = 0;	
			
				intSelectedRow = this.jTableDatosGuiaRemision.getSelectedRow();	
				
				

				if(sTitle.equals("Detalle Guia Remisiones")) {
					if(!DetalleGuiaRemisionJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessGuiaRemision();

						this.cargarParteTabPanelRelacionadaDetalleGuiaRemision(iIndex,intSelectedRow);
					}
					
				}
				
			}
			
			//TABBED PANE RELACIONES FIN(EXTRA TAB)
			;
			
  		} catch(Exception e) {
  			e.printStackTrace();
  		} finally {
			if(procesaCargarParteTab) {				
				this.finishProcessGuiaRemision();	
			}
		}
    }
	
	

	public void cargarParteTabPanelRelacionadaDetalleGuiaRemision(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormGuiaRemision.cargarSessionConBeanSwingJInternalFrameDetalleGuiaRemision(false,true,iIndex);
		this.jButtonDetalleGuiaRemisionActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaDetalleGuiaRemision();

		//this.jTabbedPaneRelacionesGuiaRemision.updateUI();
		//this.jTabbedPaneRelacionesGuiaRemision.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesGuiaRemision.setSelectedIndex(iIndex);


	}
	
	public void jButtonRelacionActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
				 if(sTipo.equals("DetalleGuiaRemision")) {
				int row=this.jTableDatosGuiaRemision.getSelectedRow();
				jButtonDetalleGuiaRemisionActionPerformed(evt,row,true,false,null);
				}
  		} catch(Exception e) {
  			e.printStackTrace();
  		}
    }
	
	public void cargarMenuRelaciones() {	
		JMenuItem jmenuItem= new JMenuItem("General");
		String sLabelMenu="";
		
		if(!this.guiaremisionSessionBean.getEsGuardarRelacionado()) {
			for(Reporte reporte:this.tiposRelaciones) {
			

				if(reporte.getsCodigo().equals("Detalle Guia Remision")) {

					if(this.isTienePermisosDetalleGuiaRemision && this.guiaremisionConstantesFunciones.mostrarDetalleGuiaRemisionGuiaRemision && !GuiaRemisionConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Detalle Guia Remisiones"+"("+DetalleGuiaRemisionConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Detalle Guia Remisiones");

						if(guiaremisionConstantesFunciones.resaltarDetalleGuiaRemisionGuiaRemision!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(guiaremisionConstantesFunciones.resaltarDetalleGuiaRemisionGuiaRemision);
						}

						jmenuItem.setEnabled(this.guiaremisionConstantesFunciones.activarDetalleGuiaRemisionGuiaRemision);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"DetalleGuiaRemision"));

						

						this.jInternalFrameDetalleFormGuiaRemision.jmenuDetalleGuiaRemision.add(jmenuItem);

						
					}

					continue;
				}
			}
		}
	}		
	
	public void cargarCombosForeignKeyGuiaRemision(Boolean cargarCombosDependencia) throws Exception {   
		this.cargarCombosForeignKeyGuiaRemision(cargarCombosDependencia,true,true);
	}
	
	//CARGAR COMBOS EN LOTE
	public void cargarCombosForeignKeyGuiaRemision(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales) throws Exception {   
		this.cargarCombosTodosForeignKeyGuiaRemisionListas(cargarCombosDependencia);
				
		this.addItemDefectoCombosTodosForeignKeyGuiaRemision();
		
		this.cargarCombosFrameForeignKeyGuiaRemision();						
		
		if(conInitActions) {
			this.initActionsCombosTodosForeignKeyGuiaRemision();
		}
		
		if(conSetVariablesGlobales) {
			this.setVariablesGlobalesCombosForeignKeyGuiaRemision();
		}
	}
	
	

	public void cargarCombosForeignKeyFormato(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyFormatoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyFormato();
				this.cargarCombosFrameFormatosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaFormato(this.formatosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoPrecio(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTipoPrecioListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTipoPrecio();
				this.cargarCombosFrameTipoPreciosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaTipoPrecio(this.tipopreciosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCliente(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyClienteListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyCliente();
				this.cargarCombosFrameClientesForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaCliente(this.clientesForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyVendedor(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyVendedorListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyVendedor();
				this.cargarCombosFrameVendedorsForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaVendedor(this.vendedorsForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyFactura(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyFacturaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyFactura();
				this.cargarCombosFrameFacturasForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaFactura(this.facturasForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTransportista(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTransportistaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTransportista();
				this.cargarCombosFrameTransportistasForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaTransportista(this.transportistasForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyConsultor(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyConsultorListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyConsultor();
				this.cargarCombosFrameConsultorsForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaConsultor(this.consultorsForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTransporte(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTransporteListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTransporte();
				this.cargarCombosFrameTransportesForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaTransporte(this.transportesForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeySubCliente(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeySubClienteListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeySubCliente();
				this.cargarCombosFrameSubClientesForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaSubCliente(this.subclientesForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyEmpleado(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyEmpleadoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyEmpleado();
				this.cargarCombosFrameEmpleadosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaEmpleado(this.empleadosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCiudadOrigen(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyCiudadOrigenListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyCiudadOrigen();
				this.cargarCombosFrameCiudadOrigensForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaCiudadOrigen(this.ciudadorigensForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCiudadDestino(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyCiudadDestinoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyCiudadDestino();
				this.cargarCombosFrameCiudadDestinosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaCiudadDestino(this.ciudaddestinosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoLlamada(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTipoLlamadaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTipoLlamada();
				this.cargarCombosFrameTipoLlamadasForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaTipoLlamada(this.tipollamadasForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoCambio(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTipoCambioListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTipoCambio();
				this.cargarCombosFrameTipoCambiosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaTipoCambio(this.tipocambiosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}
	
	public void jButtonNuevoGuiaRemisionActionPerformed(ActionEvent evt,Boolean esRelaciones) throws Exception {   
		try {
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.FORM_RECARGAR;
			String sTipo="NUEVO_NORMAL";
			
			this.estaModoNuevo=true;
			
			if(this.guiaremisionSessionBean.getConGuardarRelaciones()) {
				this.dStart=(double)System.currentTimeMillis();
			}
				
			//if(this.esUsoDesdeHijo) {
			//	eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			//}
											
			if(this.jInternalFrameDetalleFormGuiaRemision==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}			
				
			GuiaRemisionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.guiaremision,new Object(),this.guiaremisionParameterGeneral,this.guiaremisionReturnGeneral);
			
			
			if(jTableDatosGuiaRemision.getRowCount()>=1) {
				jTableDatosGuiaRemision.removeRowSelectionInterval(0, jTableDatosGuiaRemision.getRowCount()-1);						
			}
			
			this.isEsNuevoGuiaRemision=true;
			
			//ESTABLECE SI ES RELACIONADO O NO 
			this.habilitarDeshabilitarTipoMantenimientoGuiaRemision(esRelaciones);
			
			this.nuevoPreparar(false); 
			this.habilitarDeshabilitarControlesGuiaRemision(true);			
			//this.guiaremision=new GuiaRemision();
			//this.guiaremision.setIsChanged(true);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesGuiaRemision(false) ;						
			 
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualGuiaRemision() ;
			
			if(GuiaRemisionJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetalleGuiaRemision(esRelaciones);
			}
					
			//Se Duplica, sin sentido
			//this.actualizarInformacion("EVENTO_NUEVO",false,this.guiaremision);	
			this.actualizarInformacion("INFO_PADRE",false,this.guiaremision);				
			
			GuiaRemisionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.guiaremision,new Object(),this.guiaremisionParameterGeneral,this.guiaremisionReturnGeneral);
			
			if(this.guiaremisionSessionBean.getConGuardarRelaciones()) {
				this.dEnd=(double)System.currentTimeMillis();					
				this.dDif=this.dEnd - this.dStart;
					
				if(Constantes.ISDEVELOPING) {
					System.out.println("Tiempo(ms) Nuevo Preparar GuiaRemision: " + this.dDif); 
				}
			}
			
			//false para que pueda generar eventos
			this.estaModoNuevo=false;
							
			//Con this.estaModoNuevo=false;, se permite actualizar y usar eventos control al mismo tiempo (FuncionTipo.LAST)			
			GuiaRemisionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.LAST,ControlTipo.FORM,EventoTipo.CLIC,EventoSubTipo.NEW,sTipo,this.guiaremision,new Object(),this.guiaremisionParameterGeneral,this.guiaremisionReturnGeneral);
			
		} catch(Exception e) {									
			FuncionesSwing.manageException(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoNuevo=false;			
		}
	}
	
	public void jButtonDuplicarGuiaRemisionActionPerformed(ActionEvent evt,Boolean esRelaciones) throws Exception {   
		try {
			Boolean soloDuplicarUno=false;
			Boolean conSeleccionarFilaTabla=false;
			
			this.estaModoNuevo=true;
			this.estaModoDuplicar=true;
			
			ArrayList<GuiaRemision> guiaremisionsSeleccionados=new ArrayList<GuiaRemision>();
			int intSelectedRow =-1;
			Integer iNumRowsSeleccionados=0;
			int[] arrNumRowsSeleccionados=null;
			
			//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
			if(conSeleccionarFilaTabla) {
				arrNumRowsSeleccionados=this.jTableDatosGuiaRemision.getSelectedRows();
				iNumRowsSeleccionados=this.jTableDatosGuiaRemision.getSelectedRows().length;			
			}
			
			guiaremisionsSeleccionados=this.getGuiaRemisionsSeleccionados(false);
				
			if((soloDuplicarUno && iNumRowsSeleccionados.equals(1)) || !soloDuplicarUno) {
				//LO HACE NUEVOPREPARAR
				//this.iIdNuevoGuiaRemision--;			
				//GuiaRemision guiaremisionAux= new GuiaRemision();			
				//guiaremisionAux.setId(this.iIdNuevoGuiaRemision);																
				
				//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
				//GuiaRemision guiaremisionOrigen=new GuiaRemision();
				//for(Integer iNumRowSeleccionado:arrNumRowsSeleccionados) {				
				
				for(GuiaRemision guiaremisionOrigen : guiaremisionsSeleccionados) {
					if(conSeleccionarFilaTabla) {
						if(!soloDuplicarUno) {
							//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
							//intSelectedRow =iNumRowSeleccionado;
						} else {
							intSelectedRow = this.jTableDatosGuiaRemision.getSelectedRow();
						}
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							guiaremisionOrigen =(GuiaRemision) this.guiaremisionLogic.getGuiaRemisions().toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							guiaremisionOrigen =(GuiaRemision) this.guiaremisions.toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
						}
					}
					
					this.aumentarTamanioFilaNuevaTablaGuiaRemision();
					
					if(this.conTotales) {
						this.quitarFilaTotales();
					}
					
					this.nuevoPreparar(true);
					
					this.guiaremision.setsType("DUPLICADO");
					
					this.setCopiarVariablesObjetosGuiaRemision(guiaremisionOrigen,this.guiaremision,true,true);
					
					this.setVariablesFormularioToObjetoActualForeignKeysGuiaRemision(this.guiaremision);
					
					//LO HACE NUEVOPREPARAR
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						this.guiaremisionLogic.getGuiaRemisions().add(this.guiaremisionAux);
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						this.guiaremisions.add(this.guiaremisionAux);				
					}
					*/
				}
				
				this.inicializarActualizarBindingTablaGuiaRemision(false);
				
				this.jTableDatosGuiaRemision.setRowSelectionInterval(this.getIndiceNuevoGuiaRemision(), this.getIndiceNuevoGuiaRemision());
				
				int iLastRow =  this.jTableDatosGuiaRemision.getRowCount () - 1;
				Rectangle rectangle = this.jTableDatosGuiaRemision.getCellRect(iLastRow, 0, true);
				
				this.jTableDatosGuiaRemision.scrollRectToVisible(rectangle);
				
				//FILA TOTALES
				if(this.conTotales) {
					this.crearFilaTotales();
					
					this.inicializarActualizarBindingTablaGuiaRemision(false);
				}
			} else {
				throw new Exception("DEBE ESTAR SELECCIONADO 1 REGISTRO");
			}
			
		} catch(Exception e) {			
			FuncionesSwing.manageException(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);
		
		} finally {
			this.estaModoNuevo=false;
			this.estaModoDuplicar=false;
		}
	}
	
	public void jButtonCopiarGuiaRemisionActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			Boolean conSeleccionarFilaTabla=false;
			Integer iNumRowsSeleccionados=0;
			int[] intSelectedRows =null;
			int intSelectedRow =0;
			
			this.estaModoCopiar=true;
			
			ArrayList<GuiaRemision> guiaremisionsSeleccionados=new ArrayList<GuiaRemision>();									
		
			GuiaRemision guiaremisionOrigen=new GuiaRemision();
			GuiaRemision guiaremisionDestino=new GuiaRemision();
				
			guiaremisionsSeleccionados=this.getGuiaRemisionsSeleccionados(false);
			
			if(conSeleccionarFilaTabla) {
				iNumRowsSeleccionados=this.jTableDatosGuiaRemision.getSelectedRows().length;	
			}
			
			if(iNumRowsSeleccionados.equals(2) || guiaremisionsSeleccionados.size()==2) {
				if(conSeleccionarFilaTabla) {
					intSelectedRows =this.jTableDatosGuiaRemision.getSelectedRows();
					intSelectedRow = intSelectedRows[0];	
									
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						guiaremisionOrigen =(GuiaRemision) this.guiaremisionLogic.getGuiaRemisions().toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						guiaremisionOrigen =(GuiaRemision) this.guiaremisions.toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					intSelectedRow = intSelectedRows[1];
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						guiaremisionDestino =(GuiaRemision) this.guiaremisionLogic.getGuiaRemisions().toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						guiaremisionDestino =(GuiaRemision) this.guiaremisions.toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				}
				
				guiaremisionOrigen =guiaremisionsSeleccionados.get(0);
				guiaremisionDestino =guiaremisionsSeleccionados.get(1);
				
				this.setCopiarVariablesObjetosGuiaRemision(guiaremisionOrigen,guiaremisionDestino,true,false);
				
				guiaremisionDestino.setsType("DUPLICADO");
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					actualizarLista(guiaremisionDestino,guiaremisionLogic.getGuiaRemisions());					
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(guiaremisionDestino,guiaremisions);
				}
				//ARCHITECTURE
				
				this.inicializarActualizarBindingTablaGuiaRemision(false);
				
				//this.jTableDatosGuiaRemision.setRowSelectionInterval(this.getIndiceNuevoGuiaRemision(), this.getIndiceNuevoGuiaRemision());
				
				int iLastRow =  this.jTableDatosGuiaRemision.getRowCount () - 1;
				Rectangle rectangle = this.jTableDatosGuiaRemision.getCellRect(iLastRow, 0, true);
				
				this.jTableDatosGuiaRemision.scrollRectToVisible(rectangle);
				
				//FILA TOTALES
				if(this.conTotales) {
					//this.crearFilaTotales();
					
					this.inicializarActualizarBindingTablaGuiaRemision(false);
				}
			} else {
				throw new Exception("DEBEN ESTAR SELECCIONADOS 2 REGISTROS");
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);
		
		}  finally {
			this.estaModoCopiar=false;
		}
	}
	
	public void jButtonVerFormGuiaRemisionActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			if(this.jInternalFrameDetalleFormGuiaRemision==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			this.jInternalFrameDetalleFormGuiaRemision.setSelected(true);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonMostrarOcultarGuiaRemisionActionPerformed(ActionEvent evt) throws Exception {   
		try {
			Boolean isVisible=this.jPanelParametrosReportesGuiaRemision.isVisible();
			
			//BYDAN_BUSQUEDAS
			
			this.jTabbedPaneBusquedasGuiaRemision.setVisible(!isVisible);			
			
			
			this.jPanelParametrosReportesGuiaRemision.setVisible(!isVisible);
			this.jPanelPaginacionGuiaRemision.setVisible(!isVisible);
			this.jPanelAccionesGuiaRemision.setVisible(!isVisible);
							
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarGuiaRemisionActionPerformed(ActionEvent evt) throws Exception {   
		try {
			this.closingInternalFrameGuiaRemision();
			
			//if(this.jInternalFrameParent==null) {
				//this.dispose();
			/*} else {
				this.setVisible(false);
	        	this.setSelected(false);	
			}*/			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarReporteDinamicoGuiaRemisionActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.cerrarFrameReporteDinamicoGuiaRemision();
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarImportacionGuiaRemisionActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.cerrarFrameImportacionGuiaRemision();
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);
		}
	}
	
	
	public void jButtonAbrirOrderByGuiaRemisionActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			
			this.abrirInicializarFrameOrderByGuiaRemision();
			
			this.abrirFrameOrderByGuiaRemision();
			
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarOrderByGuiaRemisionActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.cerrarFrameOrderByGuiaRemision();
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);
		}
	}
	
	public void abrirFrameDetalleGuiaRemision(Boolean esRelaciones) throws Exception {	    	        
	    try {
			//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false
			//this.jDesktopPane.add(jInternalFrameDetalleFormGuiaRemision);
			
			if(!esRelaciones) {
				if(this.jInternalFrameDetalleFormGuiaRemision.isMaximum()) {
					this.jInternalFrameDetalleFormGuiaRemision.setMaximum(false);
				}								
				
	    		this.jInternalFrameDetalleFormGuiaRemision.setSize(this.jInternalFrameDetalleFormGuiaRemision.iWidthFormulario,this.jInternalFrameDetalleFormGuiaRemision.iHeightFormulario);
	    	} else {
				if(this.iWidthScroll<this.jInternalFrameDetalleFormGuiaRemision.iWidthFormularioMaximo) {
	    			this.jInternalFrameDetalleFormGuiaRemision.setSize(this.iWidthScroll,this.iHeightScroll);
				} else {
					if(!this.jInternalFrameDetalleFormGuiaRemision.isMaximum()) {
						this.jInternalFrameDetalleFormGuiaRemision.setMaximum(true);
					}
				}
				
				if(this.jInternalFrameDetalleFormGuiaRemision.jContentPaneDetalleGuiaRemision.getWidth() > this.getWidth()) {
					this.jInternalFrameDetalleFormGuiaRemision.jTabbedPaneRelacionesGuiaRemision.setMinimumSize(new Dimension(this.jInternalFrameDetalleFormGuiaRemision.jContentPaneDetalleGuiaRemision.getWidth(),GuiaRemisionConstantesFunciones.ALTO_TABPANE_RELACIONES));
					this.jInternalFrameDetalleFormGuiaRemision.jTabbedPaneRelacionesGuiaRemision.setMaximumSize(new Dimension(this.jInternalFrameDetalleFormGuiaRemision.jContentPaneDetalleGuiaRemision.getWidth(),GuiaRemisionConstantesFunciones.ALTO_TABPANE_RELACIONES));
					this.jInternalFrameDetalleFormGuiaRemision.jTabbedPaneRelacionesGuiaRemision.setPreferredSize(new Dimension(this.jInternalFrameDetalleFormGuiaRemision.jContentPaneDetalleGuiaRemision.getWidth(),GuiaRemisionConstantesFunciones.ALTO_TABPANE_RELACIONES));
					
					Dimension dimension=new Dimension(); 
					
					

					if(DetalleGuiaRemisionJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaDetalleGuiaRemision();
					}
					
				}
	    	}
			
		
	       	this.jInternalFrameDetalleFormGuiaRemision.setVisible(true);
	        this.jInternalFrameDetalleFormGuiaRemision.setSelected(true);
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);
	    }
	}
	
	
	public void abrirInicializarFrameOrderByGuiaRemision() throws Exception {	    	        
	    try {
			if(this.jInternalFrameOrderByGuiaRemision==null) {
				
				if(!this.conCargarMinimo) {
					this.jInternalFrameOrderByGuiaRemision=new OrderByJInternalFrame(STIPO_TAMANIO_GENERAL,this.jButtonAbrirOrderByGuiaRemision,false,this);
				} else {
					this.jInternalFrameOrderByGuiaRemision=new OrderByJInternalFrame(STIPO_TAMANIO_GENERAL,this.jButtonAbrirOrderByGuiaRemision,true,this);
				}
				
				this.jDesktopPane.add(this.jInternalFrameOrderByGuiaRemision);
				this.jInternalFrameOrderByGuiaRemision.setVisible(false);
				this.jInternalFrameOrderByGuiaRemision.setSelected(false);
				
				this.jInternalFrameOrderByGuiaRemision.getjButtonCerrarOrderBy().addActionListener (new ButtonActionListener(this,"CerrarOrderByGuiaRemision"));
				
				this.inicializarActualizarBindingTablaOrderByGuiaRemision();
			}
		} catch (final Exception e) {
			
		}
	}
	
	
	
	public void abrirInicializarFrameImportacionGuiaRemision() throws Exception {	    	        
	    try {
			if(this.jInternalFrameImportacionGuiaRemision==null) {
				
				this.jInternalFrameImportacionGuiaRemision=new ImportacionJInternalFrame(GuiaRemisionConstantesFunciones.SCLASSWEBTITULO,this);			
				
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameImportacionGuiaRemision);							
				
				this.jDesktopPane.add(this.jInternalFrameImportacionGuiaRemision);
				this.jInternalFrameImportacionGuiaRemision.setVisible(false);
				this.jInternalFrameImportacionGuiaRemision.setSelected(false);


				this.jInternalFrameImportacionGuiaRemision.getjButtonCerrarImportacion().addActionListener (new ButtonActionListener(this,"CerrarImportacionGuiaRemision"));
				this.jInternalFrameImportacionGuiaRemision.getjButtonGenerarImportacion().addActionListener (new ButtonActionListener(this,"GenerarImportacionGuiaRemision"));
				this.jInternalFrameImportacionGuiaRemision.getjButtonAbrirImportacion().addActionListener (new ButtonActionListener(this,"AbrirImportacionGuiaRemision"));


			}
		} catch (final Exception e) {
			
		}
	}		
	
	
	
	public void abrirInicializarFrameReporteDinamicoGuiaRemision() throws Exception {	    	        
	    try {
			
			if(this.jInternalFrameReporteDinamicoGuiaRemision==null) {
				this.jInternalFrameReporteDinamicoGuiaRemision=new ReporteDinamicoJInternalFrame(GuiaRemisionConstantesFunciones.SCLASSWEBTITULO,this);	
				
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameReporteDinamicoGuiaRemision);	
	
	
				this.jDesktopPane.add(this.jInternalFrameReporteDinamicoGuiaRemision);
				this.jInternalFrameReporteDinamicoGuiaRemision.setVisible(false);
				this.jInternalFrameReporteDinamicoGuiaRemision.setSelected(false);
	
	
	
				this.jInternalFrameReporteDinamicoGuiaRemision.getjButtonCerrarReporteDinamico().addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoGuiaRemision"));
				this.jInternalFrameReporteDinamicoGuiaRemision.getjButtonGenerarReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoGuiaRemision"));
				this.jInternalFrameReporteDinamicoGuiaRemision.getjButtonGenerarExcelReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoGuiaRemision"));
	
				this.inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualGuiaRemision();
			}

		} catch (final Exception e) {
			
		}
	}	
	
	
	
		

	public void redimensionarTablaPanelRelacionadaDetalleGuiaRemision() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormGuiaRemision.detalleguiaremisionBeanSwingJInternalFrame.jScrollPanelDatosDetalleGuiaRemision.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormGuiaRemision.jContentPaneDetalleGuiaRemision.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormGuiaRemision.detalleguiaremisionBeanSwingJInternalFrame.jScrollPanelDatosDetalleGuiaRemision.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormGuiaRemision.detalleguiaremisionBeanSwingJInternalFrame.jScrollPanelDatosDetalleGuiaRemision.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormGuiaRemision.detalleguiaremisionBeanSwingJInternalFrame.jScrollPanelDatosDetalleGuiaRemision.setPreferredSize(dimension);


	}
					
	public void cerrarFrameDetalleGuiaRemision() throws Exception {	    	        
	    try {
			//this.jDesktopPane.add(jInternalFrameDetalleFormGuiaRemision);
			
	       	this.jInternalFrameDetalleFormGuiaRemision.setVisible(false);
	        this.jInternalFrameDetalleFormGuiaRemision.setSelected(false);
			
			//this.jInternalFrameDetalleFormGuiaRemision.dispose();
			//this.jInternalFrameDetalleFormGuiaRemision=null;
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);
	    }
	}
	
	
	public void abrirFrameReporteDinamicoGuiaRemision() throws Exception {	    	        
	    try {
			
			this.jInternalFrameReporteDinamicoGuiaRemision.setVisible(true);
	        this.jInternalFrameReporteDinamicoGuiaRemision.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void abrirFrameImportacionGuiaRemision() throws Exception {	    	        		
	    try {			
			this.jInternalFrameImportacionGuiaRemision.setVisible(true);
	        this.jInternalFrameImportacionGuiaRemision.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);
	    }		
	}	
	
	
	
	
	
	public void abrirFrameOrderByGuiaRemision() throws Exception {	    	        		
	    try {
			this.jInternalFrameOrderByGuiaRemision.setVisible(true);
	        this.jInternalFrameOrderByGuiaRemision.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void cerrarFrameOrderByGuiaRemision() throws Exception {	    	        		
	    try {			
			this.jInternalFrameOrderByGuiaRemision.setVisible(false);
	        this.jInternalFrameOrderByGuiaRemision.setSelected(false);			
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void cerrarFrameReporteDinamicoGuiaRemision() throws Exception {			
	    try {
			this.jInternalFrameReporteDinamicoGuiaRemision.setVisible(false);
	        this.jInternalFrameReporteDinamicoGuiaRemision.setSelected(false);			
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void cerrarFrameImportacionGuiaRemision() throws Exception {	    	        		
	    try {
			this.jInternalFrameImportacionGuiaRemision.setVisible(false);
	        this.jInternalFrameImportacionGuiaRemision.setSelected(false);
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	

				public void abrirFrameTreeVendedor(String sTipoProceso) { //throws Exception
					try {
						//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false
						//this.jDesktopPane.add(jInternalFrameTreeVendedor);
						VendedorBeanSwingJInternalFrame vendedorBeanSwingJInternalFrame=new VendedorBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
						vendedorBeanSwingJInternalFrame.setJInternalFrameParent(this);
						vendedorBeanSwingJInternalFrame.jInternalFrameTreeVendedor.setsTipoProceso(sTipoProceso);

						if(sTipoProceso.equals("BUSQUEDA_FK")) {
							vendedorBeanSwingJInternalFrame.jInternalFrameTreeVendedor.sTipoBusqueda="Vendedor";
						}

						vendedorBeanSwingJInternalFrame.getTodosVendedorArbol();
						vendedorBeanSwingJInternalFrame.jInternalFrameTreeVendedor.setVendedors(vendedorBeanSwingJInternalFrame.vendedorsArbol);
						vendedorBeanSwingJInternalFrame.jInternalFrameTreeVendedor.CargarTreeVendedor();
						vendedorBeanSwingJInternalFrame.jInternalFrameTreeVendedor.setVisible(true);
						vendedorBeanSwingJInternalFrame.jInternalFrameTreeVendedor.setSelected(true);

						//SE CAMBIA PARENT ORIGINAL PARA QUE RETORNE EN ESTE FORMULARIO
						vendedorBeanSwingJInternalFrame.jInternalFrameTreeVendedor.jInternalFrameParent=this;
						TitledBorder titledBorderGuiaRemision=(TitledBorder)this.jScrollPanelDatosGuiaRemision.getBorder();
						TitledBorder titledBorderVendedor=(TitledBorder)vendedorBeanSwingJInternalFrame.jScrollPanelDatosVendedor.getBorder();

						titledBorderVendedor.setTitle(titledBorderGuiaRemision.getTitle() + " -> Vendedor");


						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,vendedorBeanSwingJInternalFrame);
						}
						this.jDesktopPane.add(vendedorBeanSwingJInternalFrame);

					} catch (Exception e) {
						e.getStackTrace();
						//Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
					}
				}

				public void cerrarFrameTreeVendedor(VendedorBeanSwingJInternalFrame jInternalFrameTreeVendedor) throws Exception {
					try {
						//jDesktopPane.add(jInternalFrameTreeVendedor);
						jInternalFrameTreeVendedor.setVisible(false);
						jInternalFrameTreeVendedor.setSelected(false);
						//jInternalFrameTreeVendedor.dispose();
						//jInternalFrameTreeVendedor=null;
					} catch (final java.beans.PropertyVetoException e) {
						FuncionesSwing.manageException(this, e,logger);
					}
				}
	
	public void jButtonModificarGuiaRemisionActionPerformed(ActionEvent evt) throws Exception {   
		try {
			this.modificarGuiaRemision(evt,-1,false);
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);
		}
	}
	
	public void modificarGuiaRemision(ActionEvent evt,int rowIndex,Boolean esRelaciones) throws Exception {   
		try {
			int intSelectedRow = 0;	
			
			if(rowIndex>=0) {
				intSelectedRow=rowIndex;
			} else {
				intSelectedRow = this.jTableDatosGuiaRemision.getSelectedRow();
			}
			
			this.habilitarDeshabilitarControlesGuiaRemision(true);
			//this.isEsNuevoGuiaRemision=false;
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremision =(GuiaRemision) this.guiaremisionLogic.getGuiaRemisions().toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.guiaremision =(GuiaRemision) this.guiaremisions.toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
			}
			//ARCHITECTURE
			
			this.actualizarEstadoCeldasBotonesGuiaRemision("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesGuiaRemision(false) ;
			
			if(guiaremisionSessionBean.getConGuardarRelaciones()) {
			

				if(this.jInternalFrameDetalleFormGuiaRemision.detalleguiaremisionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormGuiaRemision.detalleguiaremisionBeanSwingJInternalFrame.detalleguiaremisionSessionBean.getEsGuardarRelacionado() && DetalleGuiaRemisionJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonDetalleGuiaRemisionActionPerformed(null,intSelectedRow,false,true,null);
				}
			}
			
			if(GuiaRemisionJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetalleGuiaRemision(esRelaciones);
			}
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualGuiaRemision(false) ;
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarFilaTablaGuiaRemisionActual() { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL
			Integer intSelectedRow = this.jTableDatosGuiaRemision.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremision =(GuiaRemision) this.guiaremisionLogic.getGuiaRemisions().toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.guiaremision =(GuiaRemision) this.guiaremisions.toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void seleccionarGuiaRemision(ActionEvent evt,int rowIndex) throws Exception {   
		try {
			
			if(this.jInternalFrameDetalleFormGuiaRemision==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			int intSelectedRow = 0;	
			
			if(rowIndex>=0) {
				intSelectedRow=rowIndex;
			} else {
				intSelectedRow = this.jTableDatosGuiaRemision.getSelectedRow();
			}
			
			//this.habilitarDeshabilitarControlesGuiaRemision(true);
			//this.isEsNuevoGuiaRemision=false;
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremision =(GuiaRemision) this.guiaremisionLogic.getGuiaRemisions().toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.guiaremision =(GuiaRemision) this.guiaremisions.toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
			}
			//ARCHITECTURE
			
			this.jInternalFrameParent.setIdCombosCodigoDesdeBusquedaForeignKey(this.guiaremision.getId(),this.sTipoBusqueda);
			
			this.dispose();
			
			//this.actualizarEstadoCeldasBotonesGuiaRemision("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
			//NO FUNCIONA BINDINGS
			/*
			this.inicializarActualizarBindingBotonesGuiaRemision(false) ;
			
			if(GuiaRemisionJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetalleGuiaRemision(esRelaciones);
			}
			*/
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualGuiaRemision(false) ;
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);
		}
	}		
	
	public void setIdCombosCodigoDesdeBusquedaForeignKey(Long id,String sType)throws Exception{
		
		try {
			
			if(sType.equals("Cliente")) {
				if(!this.guiaremisionConstantesFunciones.cargarid_clienteGuiaRemision) {
					this.cargarCombosClientesForeignKeyLista(" where id="+id);
					//this.inicializarActualizarBindingGuiaRemision(false,false);
					this.cargarCombosFrameClientesForeignKey("Todos");
				}

				this.setCombosCodigoDesdeBusquedaid_cliente (id);

				this.recargarComboTablaCliente(this.clientesForeignKey);

			}
			
			if(sType.equals("Factura")) {
				if(!this.guiaremisionConstantesFunciones.cargarid_facturaGuiaRemision) {
					this.cargarCombosFacturasForeignKeyLista(" where id="+id);
					//this.inicializarActualizarBindingGuiaRemision(false,false);
					this.cargarCombosFrameFacturasForeignKey("Todos");
				}

				this.setCombosCodigoDesdeBusquedaid_factura (id);

				this.recargarComboTablaFactura(this.facturasForeignKey);

			}
			
			if(sType.equals("TipoCambio")) {
				if(!this.guiaremisionConstantesFunciones.cargarid_tipo_cambioGuiaRemision) {
					this.cargarCombosTipoCambiosForeignKeyLista(" where id="+id);
					//this.inicializarActualizarBindingGuiaRemision(false,false);
					this.cargarCombosFrameTipoCambiosForeignKey("Todos");
				}

				this.setCombosCodigoDesdeBusquedaid_tipo_cambio (id);

				this.recargarComboTablaTipoCambio(this.tipocambiosForeignKey);

			}
		} catch(Exception e) {
			throw e;
		}
	}
	
						
	
	public void recargarComboTablaFormato(List<Formato> formatosForeignKey)throws Exception{
		TableColumn tableColumnFormato=this.jTableDatosGuiaRemision.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosGuiaRemision,GuiaRemisionConstantesFunciones.LABEL_IDFORMATO));
		TableCellEditor tableCellEditorFormato =tableColumnFormato.getCellEditor();

		FormatoTableCell formatoTableCellFk=(FormatoTableCell)tableCellEditorFormato;

		if(formatoTableCellFk!=null) {
			formatoTableCellFk.setformatosForeignKey(formatosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosGuiaRemision.getSelectedRow();

		//if(intSelectedRow<=0) {
			//formatoTableCellFk.setRowActual(intSelectedRow);
			//formatoTableCellFk.setformatosForeignKeyActual(formatosForeignKey);
		//}


		if(formatoTableCellFk!=null) {
			formatoTableCellFk.RecargarFormatosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaTipoPrecio(List<TipoPrecio> tipopreciosForeignKey)throws Exception{
		TableColumn tableColumnTipoPrecio=this.jTableDatosGuiaRemision.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosGuiaRemision,GuiaRemisionConstantesFunciones.LABEL_IDTIPOPRECIO));
		TableCellEditor tableCellEditorTipoPrecio =tableColumnTipoPrecio.getCellEditor();

		TipoPrecioTableCell tipoprecioTableCellFk=(TipoPrecioTableCell)tableCellEditorTipoPrecio;

		if(tipoprecioTableCellFk!=null) {
			tipoprecioTableCellFk.settipopreciosForeignKey(tipopreciosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosGuiaRemision.getSelectedRow();

		//if(intSelectedRow<=0) {
			//tipoprecioTableCellFk.setRowActual(intSelectedRow);
			//tipoprecioTableCellFk.settipopreciosForeignKeyActual(tipopreciosForeignKey);
		//}


		if(tipoprecioTableCellFk!=null) {
			tipoprecioTableCellFk.RecargarTipoPreciosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
		
	
	public void recargarComboTablaCliente(List<Cliente> clientesForeignKey)throws Exception{
		TableColumn tableColumnCliente=this.jTableDatosGuiaRemision.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosGuiaRemision,GuiaRemisionConstantesFunciones.LABEL_IDCLIENTE));
		TableCellEditor tableCellEditorCliente =tableColumnCliente.getCellEditor();

		ClienteTableCell clienteTableCellFk=(ClienteTableCell)tableCellEditorCliente;

		if(clienteTableCellFk!=null) {
			clienteTableCellFk.setclientesForeignKey(clientesForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosGuiaRemision.getSelectedRow();

		//if(intSelectedRow<=0) {
			//clienteTableCellFk.setRowActual(intSelectedRow);
			//clienteTableCellFk.setclientesForeignKeyActual(clientesForeignKey);
		//}


		if(clienteTableCellFk!=null) {
			clienteTableCellFk.RecargarClientesForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaVendedor(List<Vendedor> vendedorsForeignKey)throws Exception{
		TableColumn tableColumnVendedor=this.jTableDatosGuiaRemision.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosGuiaRemision,GuiaRemisionConstantesFunciones.LABEL_IDVENDEDOR));
		TableCellEditor tableCellEditorVendedor =tableColumnVendedor.getCellEditor();

		VendedorTableCell vendedorTableCellFk=(VendedorTableCell)tableCellEditorVendedor;

		if(vendedorTableCellFk!=null) {
			vendedorTableCellFk.setvendedorsForeignKey(vendedorsForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosGuiaRemision.getSelectedRow();

		//if(intSelectedRow<=0) {
			//vendedorTableCellFk.setRowActual(intSelectedRow);
			//vendedorTableCellFk.setvendedorsForeignKeyActual(vendedorsForeignKey);
		//}


		if(vendedorTableCellFk!=null) {
			vendedorTableCellFk.RecargarVendedorsForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaFactura(List<Factura> facturasForeignKey)throws Exception{
		TableColumn tableColumnFactura=this.jTableDatosGuiaRemision.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosGuiaRemision,GuiaRemisionConstantesFunciones.LABEL_IDFACTURA));
		TableCellEditor tableCellEditorFactura =tableColumnFactura.getCellEditor();

		FacturaTableCell facturaTableCellFk=(FacturaTableCell)tableCellEditorFactura;

		if(facturaTableCellFk!=null) {
			facturaTableCellFk.setfacturasForeignKey(facturasForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosGuiaRemision.getSelectedRow();

		//if(intSelectedRow<=0) {
			//facturaTableCellFk.setRowActual(intSelectedRow);
			//facturaTableCellFk.setfacturasForeignKeyActual(facturasForeignKey);
		//}


		if(facturaTableCellFk!=null) {
			facturaTableCellFk.RecargarFacturasForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaTransportista(List<Transportista> transportistasForeignKey)throws Exception{
		TableColumn tableColumnTransportista=this.jTableDatosGuiaRemision.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosGuiaRemision,GuiaRemisionConstantesFunciones.LABEL_IDTRANSPORTISTA));
		TableCellEditor tableCellEditorTransportista =tableColumnTransportista.getCellEditor();

		TransportistaTableCell transportistaTableCellFk=(TransportistaTableCell)tableCellEditorTransportista;

		if(transportistaTableCellFk!=null) {
			transportistaTableCellFk.settransportistasForeignKey(transportistasForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosGuiaRemision.getSelectedRow();

		//if(intSelectedRow<=0) {
			//transportistaTableCellFk.setRowActual(intSelectedRow);
			//transportistaTableCellFk.settransportistasForeignKeyActual(transportistasForeignKey);
		//}


		if(transportistaTableCellFk!=null) {
			transportistaTableCellFk.RecargarTransportistasForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaConsultor(List<Consultor> consultorsForeignKey)throws Exception{
		TableColumn tableColumnConsultor=this.jTableDatosGuiaRemision.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosGuiaRemision,GuiaRemisionConstantesFunciones.LABEL_IDCONSULTOR));
		TableCellEditor tableCellEditorConsultor =tableColumnConsultor.getCellEditor();

		ConsultorTableCell consultorTableCellFk=(ConsultorTableCell)tableCellEditorConsultor;

		if(consultorTableCellFk!=null) {
			consultorTableCellFk.setconsultorsForeignKey(consultorsForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosGuiaRemision.getSelectedRow();

		//if(intSelectedRow<=0) {
			//consultorTableCellFk.setRowActual(intSelectedRow);
			//consultorTableCellFk.setconsultorsForeignKeyActual(consultorsForeignKey);
		//}


		if(consultorTableCellFk!=null) {
			consultorTableCellFk.RecargarConsultorsForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaTransporte(List<Transporte> transportesForeignKey)throws Exception{
		TableColumn tableColumnTransporte=this.jTableDatosGuiaRemision.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosGuiaRemision,GuiaRemisionConstantesFunciones.LABEL_IDTRANSPORTE));
		TableCellEditor tableCellEditorTransporte =tableColumnTransporte.getCellEditor();

		TransporteTableCell transporteTableCellFk=(TransporteTableCell)tableCellEditorTransporte;

		if(transporteTableCellFk!=null) {
			transporteTableCellFk.settransportesForeignKey(transportesForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosGuiaRemision.getSelectedRow();

		//if(intSelectedRow<=0) {
			//transporteTableCellFk.setRowActual(intSelectedRow);
			//transporteTableCellFk.settransportesForeignKeyActual(transportesForeignKey);
		//}


		if(transporteTableCellFk!=null) {
			transporteTableCellFk.RecargarTransportesForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaSubCliente(List<SubCliente> subclientesForeignKey)throws Exception{
		TableColumn tableColumnSubCliente=this.jTableDatosGuiaRemision.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosGuiaRemision,GuiaRemisionConstantesFunciones.LABEL_IDSUBCLIENTE));
		TableCellEditor tableCellEditorSubCliente =tableColumnSubCliente.getCellEditor();

		SubClienteTableCell subclienteTableCellFk=(SubClienteTableCell)tableCellEditorSubCliente;

		if(subclienteTableCellFk!=null) {
			subclienteTableCellFk.setsubclientesForeignKey(subclientesForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosGuiaRemision.getSelectedRow();

		//if(intSelectedRow<=0) {
			//subclienteTableCellFk.setRowActual(intSelectedRow);
			//subclienteTableCellFk.setsubclientesForeignKeyActual(subclientesForeignKey);
		//}


		if(subclienteTableCellFk!=null) {
			subclienteTableCellFk.RecargarSubClientesForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaEmpleado(List<Empleado> empleadosForeignKey)throws Exception{
		TableColumn tableColumnEmpleado=this.jTableDatosGuiaRemision.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosGuiaRemision,GuiaRemisionConstantesFunciones.LABEL_IDEMPLEADO));
		TableCellEditor tableCellEditorEmpleado =tableColumnEmpleado.getCellEditor();

		EmpleadoTableCell empleadoTableCellFk=(EmpleadoTableCell)tableCellEditorEmpleado;

		if(empleadoTableCellFk!=null) {
			empleadoTableCellFk.setempleadosForeignKey(empleadosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosGuiaRemision.getSelectedRow();

		//if(intSelectedRow<=0) {
			//empleadoTableCellFk.setRowActual(intSelectedRow);
			//empleadoTableCellFk.setempleadosForeignKeyActual(empleadosForeignKey);
		//}


		if(empleadoTableCellFk!=null) {
			empleadoTableCellFk.RecargarEmpleadosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaCiudadOrigen(List<Ciudad> ciudadorigensForeignKey)throws Exception{
		TableColumn tableColumnCiudadOrigen=this.jTableDatosGuiaRemision.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosGuiaRemision,GuiaRemisionConstantesFunciones.LABEL_IDCIUDADORIGEN));
		TableCellEditor tableCellEditorCiudadOrigen =tableColumnCiudadOrigen.getCellEditor();

		CiudadTableCell ciudadTableCellFk=(CiudadTableCell)tableCellEditorCiudadOrigen;

		if(ciudadTableCellFk!=null) {
			ciudadTableCellFk.setciudadsForeignKey(ciudadorigensForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosGuiaRemision.getSelectedRow();

		//if(intSelectedRow<=0) {
			//ciudadTableCellFk.setRowActual(intSelectedRow);
			//ciudadTableCellFk.setciudadsForeignKeyActual(ciudadorigensForeignKey);
		//}


		if(ciudadTableCellFk!=null) {
			ciudadTableCellFk.RecargarCiudadsForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaCiudadDestino(List<Ciudad> ciudaddestinosForeignKey)throws Exception{
		TableColumn tableColumnCiudadDestino=this.jTableDatosGuiaRemision.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosGuiaRemision,GuiaRemisionConstantesFunciones.LABEL_IDCIUDADDESTINO));
		TableCellEditor tableCellEditorCiudadDestino =tableColumnCiudadDestino.getCellEditor();

		CiudadTableCell ciudadTableCellFk=(CiudadTableCell)tableCellEditorCiudadDestino;

		if(ciudadTableCellFk!=null) {
			ciudadTableCellFk.setciudadsForeignKey(ciudaddestinosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosGuiaRemision.getSelectedRow();

		//if(intSelectedRow<=0) {
			//ciudadTableCellFk.setRowActual(intSelectedRow);
			//ciudadTableCellFk.setciudadsForeignKeyActual(ciudaddestinosForeignKey);
		//}


		if(ciudadTableCellFk!=null) {
			ciudadTableCellFk.RecargarCiudadsForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaTipoLlamada(List<TipoLlamada> tipollamadasForeignKey)throws Exception{
		TableColumn tableColumnTipoLlamada=this.jTableDatosGuiaRemision.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosGuiaRemision,GuiaRemisionConstantesFunciones.LABEL_IDTIPOLLAMADA));
		TableCellEditor tableCellEditorTipoLlamada =tableColumnTipoLlamada.getCellEditor();

		TipoLlamadaTableCell tipollamadaTableCellFk=(TipoLlamadaTableCell)tableCellEditorTipoLlamada;

		if(tipollamadaTableCellFk!=null) {
			tipollamadaTableCellFk.settipollamadasForeignKey(tipollamadasForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosGuiaRemision.getSelectedRow();

		//if(intSelectedRow<=0) {
			//tipollamadaTableCellFk.setRowActual(intSelectedRow);
			//tipollamadaTableCellFk.settipollamadasForeignKeyActual(tipollamadasForeignKey);
		//}


		if(tipollamadaTableCellFk!=null) {
			tipollamadaTableCellFk.RecargarTipoLlamadasForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaTipoCambio(List<TipoCambio> tipocambiosForeignKey)throws Exception{
		TableColumn tableColumnTipoCambio=this.jTableDatosGuiaRemision.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosGuiaRemision,GuiaRemisionConstantesFunciones.LABEL_IDTIPOCAMBIO));
		TableCellEditor tableCellEditorTipoCambio =tableColumnTipoCambio.getCellEditor();

		TipoCambioTableCell tipocambioTableCellFk=(TipoCambioTableCell)tableCellEditorTipoCambio;

		if(tipocambioTableCellFk!=null) {
			tipocambioTableCellFk.settipocambiosForeignKey(tipocambiosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosGuiaRemision.getSelectedRow();

		//if(intSelectedRow<=0) {
			//tipocambioTableCellFk.setRowActual(intSelectedRow);
			//tipocambioTableCellFk.settipocambiosForeignKeyActual(tipocambiosForeignKey);
		//}


		if(tipocambioTableCellFk!=null) {
			tipocambioTableCellFk.RecargarTipoCambiosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	

	public void setCombosCodigoDesdeBusquedaid_cliente (Long id) throws Exception {
		this.setActualClienteForeignKey(id,true,"Todos");

	};
	

	public void setCombosCodigoDesdeBusquedaid_factura (Long id) throws Exception {
		this.setActualFacturaForeignKey(id,true,"Todos");

	};
	

	public void setCombosCodigoDesdeBusquedaid_tipo_cambio (Long id) throws Exception {
		this.setActualTipoCambioForeignKey(id,true,"Todos");

	};
	
	public void jButtonActualizarGuiaRemisionActionPerformed(ActionEvent evt) throws Exception {   
		try	{
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.getNewConnexionToDeep("");
			}
			
			this.inicializarActualizarBindingParametrosReportesGuiaRemision(false);
			
			//if(!this.isEsNuevoGuiaRemision) {								
				int intSelectedRow = this.jTableDatosGuiaRemision.getSelectedRow();	
				
				//SE PIEDE INDICE SELECTED CON FILA TOTALES, ASEGURARSE QUE OBJETO ACTUAL ESTE EN FORMULARIO
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremision =(GuiaRemision) this.guiaremisionLogic.getGuiaRemisions().toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.guiaremision =(GuiaRemision) this.guiaremisions.toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
			//}
				
			if(GuiaRemisionJInternalFrame.ISBINDING_MANUAL_TABLA) {
				this.setVariablesFormularioToObjetoActualGuiaRemision(this.guiaremision,true);
				this.setVariablesFormularioToObjetoActualForeignKeysGuiaRemision(this.guiaremision);
				
			}
			
			if(this.permiteMantenimiento(this.guiaremision)) {	
				this.actualizar();
				
				if(!this.isGuardarCambiosEnLote && !this.guiaremisionSessionBean.getEsGuardarRelacionado()) {
					this.procesarBusqueda(sAccionBusqueda);
					
					this.isEsNuevoGuiaRemision=true;
					this.inicializarActualizarBindingTablaGuiaRemision(false);
					this.isEsNuevoGuiaRemision=false;
				
				} else {					
					
					//PARA RELACIONADO ACTUALIZAR FILA TOTALES
					this.isEsNuevoGuiaRemision=true;
					this.procesoActualizarFilaTotales(false,"MANTENIMIENTO");
					this.isEsNuevoGuiaRemision=false;
				}
						
								
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingBotonesGuiaRemision(false);
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualGuiaRemision(false);
				
				this.habilitarDeshabilitarControlesGuiaRemision(false);
			
												
				
				if(GuiaRemisionJInternalFrame.CON_DATOS_FRAME) {
					if(!this.isPostAccionSinCerrar) {
						this.cerrarFrameDetalleGuiaRemision();
					}
				}
				
				if(this.isPostAccionNuevo) {
					this.jButtonNuevoGuiaRemisionActionPerformed(evt,guiaremisionSessionBean.getConGuardarRelaciones());
				} else {
					if(this.isPostAccionSinCerrar) {
						Integer intSelectedRowActual=this.getIndiceActualGuiaRemision(this.guiaremision,intSelectedRow);
						
						if(intSelectedRow>-1) {
							this.jTableDatosGuiaRemision.setRowSelectionInterval(intSelectedRowActual, intSelectedRowActual);
							this.jButtonIdActionPerformed(evt,intSelectedRowActual,guiaremisionSessionBean.getConGuardarRelaciones(),false);
						}
					}
				}
				
				this.cancelar(false);
				
			} else {
				JOptionPane.showMessageDialog(this,"ESTE REGISTRO NO PUEDE ACTUALIZARSE","EDITAR",JOptionPane.ERROR_MESSAGE);
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.commitNewConnexionToDeep();
			}
			
			
			if(this.jInternalFrameParent!=null) { //&& this.isEsMantenimientoRelacionado) {
				Boolean esUsoDesdeHijoLocal=true;
				String sTipo="Formulario";
				Boolean conIrServidorAplicacionParent=false;
				Long id=this.guiaremision.getId();
				ArrayList<String> arrClasses=new ArrayList<String>();
				
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();
				
				generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
				generalEntityParameterGeneral.setsDominio("Formulario");
				generalEntityParameterGeneral.setsDominioTipo(GuiaRemision.class.getName());
				
				this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",GuiaRemision.class.getName(),sTipo,"FORMULARIO",esControlTabla,conIrServidorAplicacionParent,
					id,this, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.FORM,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
					evt,generalEntityParameterGeneral,this);
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonEliminarGuiaRemisionActionPerformed(ActionEvent evt) throws Exception {   
		try	{
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.getNewConnexionToDeep("");
			}
			
			int intSelectedRow = this.jTableDatosGuiaRemision.getSelectedRow();	       
							
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremision =(GuiaRemision) this.guiaremisionLogic.getGuiaRemisions().toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
				this.guiaremision.setIsDeleted(true);
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.guiaremision =(GuiaRemision) this.guiaremisions.toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
				this.guiaremision.setIsDeleted(true);
			}
			//ARCHITECTURE
			
			if(this.permiteMantenimiento(this.guiaremision)) {
				this.eliminar();
				
				if(!this.isGuardarCambiosEnLote && !this.guiaremisionSessionBean.getEsGuardarRelacionado()) {
					this.procesarBusqueda(sAccionBusqueda);
				}
				
				((GuiaRemisionModel) this.jTableDatosGuiaRemision.getModel()).fireTableRowsDeleted(intSelectedRow,intSelectedRow);
				
				this.isEsNuevoGuiaRemision=true;
				this.inicializarActualizarBindingTablaGuiaRemision(false);
				this.isEsNuevoGuiaRemision=false;									
					
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingBotonesGuiaRemision(false);
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualGuiaRemision(false);
				
				this.habilitarDeshabilitarControlesGuiaRemision(false);
				
				
				
				if(GuiaRemisionJInternalFrame.CON_DATOS_FRAME) {
					this.cerrarFrameDetalleGuiaRemision();
				}
			} else {
				JOptionPane.showMessageDialog(this,"ESTE REGISTRO NO PUEDE ACTUALIZARSE","EDITAR",JOptionPane.ERROR_MESSAGE);
			}	
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.closeNewConnexionToDeep();
			}
		}		
	}
		
	public void jButtonCancelarGuiaRemisionActionPerformed(ActionEvent evt) throws Exception {                                         	   	       
	  	try {
			if(jTableDatosGuiaRemision.getRowCount()>=1) {
				jTableDatosGuiaRemision.removeRowSelectionInterval(0, jTableDatosGuiaRemision.getRowCount()-1);						
			}
						
			this.invalidValues=new InvalidValue[0];
			this.habilitarDeshabilitarControlesGuiaRemision(false);
			this.cancelar(true);			
			this.inicializarActualizarBindingTablaGuiaRemision(false);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesGuiaRemision(false) ;
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualGuiaRemision(false) ;
			
			this.isEsNuevoGuiaRemision=false;
			
			if(GuiaRemisionJInternalFrame.CON_DATOS_FRAME) {
				this.cerrarFrameDetalleGuiaRemision();
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonGuardarCambiosGuiaRemisionActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.getNewConnexionToDeep("");
			}
			
			//this.estaModoGuardarCambios=true;
			
	    	this.guardarCambios();
			
			if(!this.isErrorGuardar) {
				this.procesarBusqueda(this.sAccionBusqueda);
				
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingGuiaRemision(false);
				
				//SI ES MANUAL
				if(GuiaRemisionJInternalFrame.ISBINDING_MANUAL) {				
					//this.inicializarActualizarBindingManualGuiaRemision();				
				}
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.closeNewConnexionToDeep();
			}
			
			//this.estaModoGuardarCambios=false;
		}
	}
	
	public void jButtonNuevoGuardarCambiosGuiaRemisionActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			
			this.estaModoNuevo=true;
			this.estaModoNuevoGuardarCambios=true;
			
			//LO HACE NUEVOPREPARAR
			//this.iIdNuevoGuiaRemision--;			
			//GuiaRemision guiaremisionAux= new GuiaRemision();			
			//guiaremisionAux.setId(this.iIdNuevoGuiaRemision);
			
			if(this.jInternalFrameDetalleFormGuiaRemision==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			this.aumentarTamanioFilaNuevaTablaGuiaRemision();
			
			if(this.conTotales) {
				this.quitarFilaTotales();
			}
			
			this.nuevoPreparar(true);
			
			this.setVariablesFormularioToObjetoActualForeignKeysGuiaRemision(this.guiaremision);
			
			this.guiaremision.setsType("NUEVO_GUARDAR_CAMBIOS");
			
			//LO HACE NUEVOPREPARAR
			/*
			if(Constantes.ISUSAEJBLOGICLAYER) {				
				this.guiaremisionLogic.getGuiaRemisions().add(this.guiaremisionAux);
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				this.guiaremisions.add(this.guiaremisionAux);				
			}
			*/
			
			this.inicializarActualizarBindingTablaGuiaRemision(false);
			
			this.jTableDatosGuiaRemision.setRowSelectionInterval(this.getIndiceNuevoGuiaRemision(), this.getIndiceNuevoGuiaRemision());
			
			int iLastRow =  this.jTableDatosGuiaRemision.getRowCount () - 1;
			Rectangle rectangle = this.jTableDatosGuiaRemision.getCellRect(iLastRow, 0, true);
			
			this.jTableDatosGuiaRemision.scrollRectToVisible(rectangle);
			
			//FILA TOTALES
			if(this.conTotales) {
				this.crearFilaTotales();
				
				this.inicializarActualizarBindingTablaGuiaRemision(false);
			}

		} catch(Exception e) {									
			FuncionesSwing.manageException(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoNuevo=false;
			this.estaModoNuevoGuardarCambios=false;
		}
	}		
	
	public void jButtonRecargarInformacionGuiaRemisionActionPerformed(ActionEvent evt) throws Exception {    		
		try {
			this.iNumeroPaginacionPagina=0;
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.getNewConnexionToDeep("");
			}
			
			this.inicializarActualizarBindingGuiaRemision(false,false);
			
	    	this.recargarInformacion();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingGuiaRemision(false);
			
			//SI ES MANUAL
			if(GuiaRemisionJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualGuiaRemision();
			}
			
			//this.abrirFrameTreeGuiaRemision();
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.closeNewConnexionToDeep();
			}
		}	
	}
	
	
	public void jButtonGenerarImportacionGuiaRemisionActionPerformed(ActionEvent evt) throws Exception {    				
		BufferedReader bufferedReader = null;
		String sXmlStringFile="";
		String sPath="";
		this.arrDatoGeneralMinimos= new  ArrayList<DatoGeneralMinimo>();
		DatoGeneralMinimo datoGeneralMinimo=new DatoGeneralMinimo();
		String sLine="";
		
		try {			
			if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE PROCESAR IMPORTACION DE Guia RemisionES ?", "MANTENIMIENTO DE Guia Remision", JOptionPane.OK_CANCEL_OPTION) == 0) {
				bufferedReader = new BufferedReader(new FileReader(this.jInternalFrameImportacionGuiaRemision.getFileImportacion().getAbsolutePath()));
								
				while ((sLine = bufferedReader.readLine()) != null) {
					datoGeneralMinimo=new DatoGeneralMinimo();
					datoGeneralMinimo.setsDescripcion(sLine);
					
					this.arrDatoGeneralMinimos.add(datoGeneralMinimo);
				}
				
				this.actualizarParametrosGeneralGuiaRemision();
						
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {						
					this.guiaremisionReturnGeneral=guiaremisionLogic.procesarImportacionGuiaRemisionsWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this.arrDatoGeneralMinimos,this.guiaremisionParameterGeneral);
						
				} else if(Constantes.ISUSAEJBREMOTE) {
						
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
						
				this.procesarGuiaRemisionReturnGeneral();
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedReader != null) {
				bufferedReader.close();
			}	
		}				
	}
	
	
	
	public void jButtonAbrirImportacionGuiaRemisionActionPerformed(ActionEvent evt) throws Exception {    				
		BufferedWriter bufferedWriter = null;
		String sXmlStringFile="";
		String sPath="";
		
		try {
			int iReturnArchivo = this.jInternalFrameImportacionGuiaRemision.getjFileChooserImportacion().showOpenDialog(this);
 
            if (iReturnArchivo == JFileChooser.APPROVE_OPTION) {
            	this.jInternalFrameImportacionGuiaRemision.setFileImportacion(this.jInternalFrameImportacionGuiaRemision.getjFileChooserImportacion().getSelectedFile());
            	
				this.jInternalFrameImportacionGuiaRemision.getjTextFieldPathArchivoImportacion().setText(this.jInternalFrameImportacionGuiaRemision.getFileImportacion().getName());
				
				//System.out.println("ARCHIVO ESCOGIDO: "+this.fileImportacionGuiaRemision.getName());
				
            } else {
                //System.out.println("CANCELAR SELECCION");
				this.jInternalFrameImportacionGuiaRemision.getjTextFieldPathArchivoImportacion().setText("SELECCION CANCELADA");
            }			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedWriter != null) {
				bufferedWriter.close();
			}	
		}		
	}
	
	
	public void jButtonGenerarReporteDinamicoGuiaRemisionActionPerformed(ActionEvent evt) throws Exception {    		
		BufferedWriter bufferedWriter = null;
		String sXmlStringFile="";
		String sPath="";
		
		try {	
		
		ArrayList<GuiaRemision> guiaremisionsSeleccionados=new ArrayList<GuiaRemision>();		

		guiaremisionsSeleccionados=this.getGuiaRemisionsSeleccionados(true);
		
		
		this.sTipoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoGuiaRemision.getjComboBoxTiposReportesDinamico().getSelectedItem()).getsCodigo();
		
		this.sTipoArchivoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoGuiaRemision.getjComboBoxTiposArchivosReportesDinamico().getSelectedItem()).getsCodigo();			
		
		
		this.sTipoArchivoReporte=this.sTipoArchivoReporteDinamico;
		
		//this.sTipoReporteExtra="Base";
		
			InputStream reportFile=null;
			InputStream imageFile=null;
			
			imageFile=AuxiliarImagenes.class.getResourceAsStream("LogoReporte.jpg");			
				
		
		
			reportFile = AuxiliarReportes.class.getResourceAsStream("GuiaRemisionBaseDesign.jrxml");	
			
			sPath=this.parametroGeneralUsuario.getpath_exportar()+"GuiaRemisionBaseDesign.jrxml";
			
			sXmlStringFile=Funciones2.getStringFromInputStream(reportFile);
						
			bufferedWriter = new BufferedWriter(new FileWriter(sPath));
			
			
			sXmlStringFile=this.actualizarReporteDinamico(sXmlStringFile);
			
			
			bufferedWriter.write(sXmlStringFile);
			
			bufferedWriter.close();
			
			try{JasperCompileManager.compileReportToFile(sPath);}catch(Exception e){e.printStackTrace();}
			
			this.actualizarVariablesTipoReporte(false,true,false,sPath);
			
			/*
			this.esReporteDinamico=true;
			this.sPathReporteDinamico=sPath.replace(".jrxml",".jasper");
			this.sTipoReporteExtra="";
			*/
			
			this.generarReporteGuiaRemisions("Todos",guiaremisionsSeleccionados );

			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.guiaremisionSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				//DEBE APARECER EL REPORTE DIRECTAMENTE
				//JOptionPane.showMessageDialog(this,"GENERADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Guia Remision",JOptionPane.INFORMATION_MESSAGE);
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedWriter != null) {
				bufferedWriter.close();
			}	
		}
	}		
	
	
	public String actualizarReporteDinamico(String sXmlStringFile) {				
		Reporte reporte=new Reporte();
		Integer iAnchoMaximoVertical=535;//781,782
		Integer iAnchoMaximoHorizontal=782;
		Integer iAnchoSum=0;
		Integer iAnchoColumna=0;
		
		Integer iAnchoMargenes=60;
		String sWidthGrafico="535";
		
		for(int index:this.jInternalFrameReporteDinamicoGuiaRemision.getjListColumnasSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoGuiaRemision.getjListColumnasSelectReporte().getModel().getElementAt(index);
			
			switch(reporte.getsCodigo()) {
				
				case GuiaRemisionConstantesFunciones.LABEL_IDEMPRESA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Empresa_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Empresa_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Empresa_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Empresa_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case GuiaRemisionConstantesFunciones.LABEL_IDSUCURSAL:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Sucursal_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Sucursal_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Sucursal_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Sucursal_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case GuiaRemisionConstantesFunciones.LABEL_IDEJERCICIO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Ejercicio_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Ejercicio_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Ejercicio_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Ejercicio_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case GuiaRemisionConstantesFunciones.LABEL_IDPERIODO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Periodo_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Periodo_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Periodo_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Periodo_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case GuiaRemisionConstantesFunciones.LABEL_IDUSUARIO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Usuario_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Usuario_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Usuario_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Usuario_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case GuiaRemisionConstantesFunciones.LABEL_SECUENCIAL:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_cuencial_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_cuencial_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_cuencial_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_cuencial_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case GuiaRemisionConstantesFunciones.LABEL_FECHAEMISION:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_chaEmision_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_chaEmision_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_chaEmision_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_chaEmision_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case GuiaRemisionConstantesFunciones.LABEL_IDFORMATO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Formato_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Formato_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Formato_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Formato_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case GuiaRemisionConstantesFunciones.LABEL_IDTIPOPRECIO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_TipoPrecio_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_TipoPrecio_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_TipoPrecio_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_TipoPrecio_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case GuiaRemisionConstantesFunciones.LABEL_IDMONEDA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Moneda_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Moneda_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Moneda_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Moneda_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case GuiaRemisionConstantesFunciones.LABEL_NUMEROCAMION:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_meroCamion_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_meroCamion_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_meroCamion_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_meroCamion_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case GuiaRemisionConstantesFunciones.LABEL_IDCLIENTE:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Cliente_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Cliente_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Cliente_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Cliente_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case GuiaRemisionConstantesFunciones.LABEL_IDVENDEDOR:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Vendedor_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Vendedor_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Vendedor_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Vendedor_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case GuiaRemisionConstantesFunciones.LABEL_IDFACTURA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Factura_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Factura_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Factura_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Factura_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case GuiaRemisionConstantesFunciones.LABEL_IDTRANSPORTISTA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Transportista_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Transportista_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Transportista_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Transportista_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case GuiaRemisionConstantesFunciones.LABEL_IDENTIFICACION:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_entificacion_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_entificacion_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_entificacion_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_entificacion_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case GuiaRemisionConstantesFunciones.LABEL_FECHAORIGEN:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_chaOrigen_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_chaOrigen_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_chaOrigen_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_chaOrigen_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case GuiaRemisionConstantesFunciones.LABEL_FECHADESTINO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_chaDestino_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_chaDestino_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_chaDestino_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_chaDestino_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case GuiaRemisionConstantesFunciones.LABEL_TRANSPORTECODIGO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_ansporteCodigo_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_ansporteCodigo_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_ansporteCodigo_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_ansporteCodigo_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case GuiaRemisionConstantesFunciones.LABEL_CANTIDADBULTOS:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_ntidadBultos_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_ntidadBultos_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_ntidadBultos_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_ntidadBultos_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case GuiaRemisionConstantesFunciones.LABEL_IDCONSULTOR:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Consultor_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Consultor_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Consultor_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Consultor_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case GuiaRemisionConstantesFunciones.LABEL_IDTRANSPORTE:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Transporte_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Transporte_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Transporte_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Transporte_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case GuiaRemisionConstantesFunciones.LABEL_IDSUBCLIENTE:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_SubCliente_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_SubCliente_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_SubCliente_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_SubCliente_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case GuiaRemisionConstantesFunciones.LABEL_IDEMPLEADO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Empleado_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Empleado_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Empleado_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Empleado_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case GuiaRemisionConstantesFunciones.LABEL_IDCIUDADORIGEN:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_CiudadOrigen_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_CiudadOrigen_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_CiudadOrigen_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_CiudadOrigen_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case GuiaRemisionConstantesFunciones.LABEL_IDCIUDADDESTINO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_CiudadDestino_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_CiudadDestino_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_CiudadDestino_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_CiudadDestino_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case GuiaRemisionConstantesFunciones.LABEL_IDTIPOLLAMADA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_TipoLlamada_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_TipoLlamada_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_TipoLlamada_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_TipoLlamada_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case GuiaRemisionConstantesFunciones.LABEL_HORAINICIO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_raInicio_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_raInicio_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_raInicio_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_raInicio_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case GuiaRemisionConstantesFunciones.LABEL_HORAFIN:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_raFin_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_raFin_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_raFin_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_raFin_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case GuiaRemisionConstantesFunciones.LABEL_CUPO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_po_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_po_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_po_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_po_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case GuiaRemisionConstantesFunciones.LABEL_SALDO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_ldo_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_ldo_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_ldo_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_ldo_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case GuiaRemisionConstantesFunciones.LABEL_DOCUMENTO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_cumento_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_cumento_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_cumento_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_cumento_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case GuiaRemisionConstantesFunciones.LABEL_DISPONIBLE:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_sponible_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_sponible_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_sponible_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_sponible_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case GuiaRemisionConstantesFunciones.LABEL_DESCRIPCION:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_scripcion_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_scripcion_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_scripcion_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_scripcion_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case GuiaRemisionConstantesFunciones.LABEL_TOTALIVA:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_talIva_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_talIva_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_talIva_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_talIva_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case GuiaRemisionConstantesFunciones.LABEL_TOTALSINIVA:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_talSinIva_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_talSinIva_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_talSinIva_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_talSinIva_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case GuiaRemisionConstantesFunciones.LABEL_DESCUENTO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_scuento_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_scuento_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_scuento_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_scuento_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case GuiaRemisionConstantesFunciones.LABEL_FLETE:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_ete_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_ete_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_ete_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_ete_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case GuiaRemisionConstantesFunciones.LABEL_OTRO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_ro_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_ro_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_ro_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_ro_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case GuiaRemisionConstantesFunciones.LABEL_FINANCIAMIENTO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_nanciamiento_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_nanciamiento_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_nanciamiento_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_nanciamiento_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case GuiaRemisionConstantesFunciones.LABEL_IVA:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_a_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_a_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_a_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_a_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case GuiaRemisionConstantesFunciones.LABEL_TOTAL:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_tal_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_tal_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_tal_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_tal_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case GuiaRemisionConstantesFunciones.LABEL_MONTORETENCION:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_ntoRetencion_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_ntoRetencion_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_ntoRetencion_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_ntoRetencion_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case GuiaRemisionConstantesFunciones.LABEL_IDTIPOCAMBIO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_TipoCambio_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_TipoCambio_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_TipoCambio_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_TipoCambio_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case GuiaRemisionConstantesFunciones.LABEL_FECHA:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_cha_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_cha_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_cha_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_cha_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case GuiaRemisionConstantesFunciones.LABEL_RUCCLIENTE:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_cCliente_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_cCliente_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_cCliente_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_cCliente_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case GuiaRemisionConstantesFunciones.LABEL_NOMBRECLIENTE:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_mbreCliente_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_mbreCliente_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_mbreCliente_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_mbreCliente_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case GuiaRemisionConstantesFunciones.LABEL_TELEFONOCLIENTE:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_lefonoCliente_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_lefonoCliente_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_lefonoCliente_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_lefonoCliente_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case GuiaRemisionConstantesFunciones.LABEL_DIRECCIONCLIENTE:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_reccionCliente_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_reccionCliente_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_reccionCliente_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_reccionCliente_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case GuiaRemisionConstantesFunciones.LABEL_NUMEROPREIMPRESO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_meroPreImpreso_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_meroPreImpreso_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_meroPreImpreso_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_meroPreImpreso_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case GuiaRemisionConstantesFunciones.LABEL_PESOBRUTO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_soBruto_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_soBruto_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_soBruto_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_soBruto_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case GuiaRemisionConstantesFunciones.LABEL_FECHAAUTORIZACION:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_chaAutorizacion_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_chaAutorizacion_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_chaAutorizacion_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_chaAutorizacion_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case GuiaRemisionConstantesFunciones.LABEL_FECHAVENCIMIENTO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_chaVencimiento_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_chaVencimiento_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_chaVencimiento_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_chaVencimiento_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;
					
				default :
					break;
			}
		}
		
		iAnchoSum+=iAnchoMargenes;
		
		if(iAnchoSum>iAnchoMaximoVertical) {
			sXmlStringFile=sXmlStringFile.replace("595", "842");
			//sXmlStringFile=sXmlStringFile.replace("842", "595");
			sXmlStringFile=sXmlStringFile.replace("535", "782");
			sXmlStringFile=sXmlStringFile.replace("Portrait", "Landscape");			
			sWidthGrafico="782";
		
		} else {
			sXmlStringFile=sXmlStringFile.replace("842", "595");
			//sXmlStringFile=sXmlStringFile.replace("595", "842");
			sXmlStringFile=sXmlStringFile.replace("782", "535");
			sXmlStringFile=sXmlStringFile.replace("Landscape", "Portrait");
			sWidthGrafico="535";
		}
		
		if(this.jInternalFrameReporteDinamicoGuiaRemision.getjCheckBoxConGraficoDinamico().isSelected()) {
			sXmlStringFile=this.actualizarGraficoReporteDinamico(sXmlStringFile,sWidthGrafico);
		} else {
			sXmlStringFile=sXmlStringFile.replace("colancho_summary_colancho", "30");
		}
		
		return sXmlStringFile;
	}
	
	
	
	public String actualizarGraficoReporteDinamico(String sXmlStringFile,String sWidthGrafico) {		
		String strGrafico="";		
		String sTipo="NORMAL";
		String strCategorySeries="";
		String sNombreCampoCategoria="";
		String sNombreCampoCategoriaValor="";
		Reporte reporte=new Reporte();
		Reporte reporteCategoriaValor=new Reporte();
		Reporte reporteTipoGraficoReporte=new Reporte();
		Boolean existe=false;
		
		sXmlStringFile=sXmlStringFile.replace("colancho_summary_colancho", "280");
		
		//CATEGORIA GRAFICO				
		reporte=((Reporte)this.jInternalFrameReporteDinamicoGuiaRemision.getjComboBoxColumnaCategoriaGrafico().getSelectedItem());
				
		//TIPO GRAFICO REPORTE
		reporteTipoGraficoReporte=((Reporte)this.jInternalFrameReporteDinamicoGuiaRemision.getjComboBoxTiposGraficosReportesDinamico().getSelectedItem());
		
		String sTipoGraficoReporte=reporteTipoGraficoReporte.getsCodigo();
		
		switch(reporte.getsCodigo()) {
			
				case GuiaRemisionConstantesFunciones.LABEL_IDEMPRESA:
					sNombreCampoCategoria="id_empresa";
					break;

				case GuiaRemisionConstantesFunciones.LABEL_IDSUCURSAL:
					sNombreCampoCategoria="id_sucursal";
					break;

				case GuiaRemisionConstantesFunciones.LABEL_IDEJERCICIO:
					sNombreCampoCategoria="id_ejercicio";
					break;

				case GuiaRemisionConstantesFunciones.LABEL_IDPERIODO:
					sNombreCampoCategoria="id_periodo";
					break;

				case GuiaRemisionConstantesFunciones.LABEL_IDUSUARIO:
					sNombreCampoCategoria="id_usuario";
					break;

				case GuiaRemisionConstantesFunciones.LABEL_SECUENCIAL:
					sNombreCampoCategoria="secuencial";
					break;

				case GuiaRemisionConstantesFunciones.LABEL_FECHAEMISION:
					sNombreCampoCategoria="fecha_emision";
					break;

				case GuiaRemisionConstantesFunciones.LABEL_IDFORMATO:
					sNombreCampoCategoria="id_formato";
					break;

				case GuiaRemisionConstantesFunciones.LABEL_IDTIPOPRECIO:
					sNombreCampoCategoria="id_tipo_precio";
					break;

				case GuiaRemisionConstantesFunciones.LABEL_IDMONEDA:
					sNombreCampoCategoria="id_moneda";
					break;

				case GuiaRemisionConstantesFunciones.LABEL_NUMEROCAMION:
					sNombreCampoCategoria="numero_camion";
					break;

				case GuiaRemisionConstantesFunciones.LABEL_IDCLIENTE:
					sNombreCampoCategoria="id_cliente";
					break;

				case GuiaRemisionConstantesFunciones.LABEL_IDVENDEDOR:
					sNombreCampoCategoria="id_vendedor";
					break;

				case GuiaRemisionConstantesFunciones.LABEL_IDFACTURA:
					sNombreCampoCategoria="id_factura";
					break;

				case GuiaRemisionConstantesFunciones.LABEL_IDTRANSPORTISTA:
					sNombreCampoCategoria="id_transportista";
					break;

				case GuiaRemisionConstantesFunciones.LABEL_IDENTIFICACION:
					sNombreCampoCategoria="identificacion";
					break;

				case GuiaRemisionConstantesFunciones.LABEL_FECHAORIGEN:
					sNombreCampoCategoria="fecha_origen";
					break;

				case GuiaRemisionConstantesFunciones.LABEL_FECHADESTINO:
					sNombreCampoCategoria="fecha_destino";
					break;

				case GuiaRemisionConstantesFunciones.LABEL_TRANSPORTECODIGO:
					sNombreCampoCategoria="transporte_codigo";
					break;

				case GuiaRemisionConstantesFunciones.LABEL_CANTIDADBULTOS:
					sNombreCampoCategoria="cantidad_bultos";
					break;

				case GuiaRemisionConstantesFunciones.LABEL_IDCONSULTOR:
					sNombreCampoCategoria="id_consultor";
					break;

				case GuiaRemisionConstantesFunciones.LABEL_IDTRANSPORTE:
					sNombreCampoCategoria="id_transporte";
					break;

				case GuiaRemisionConstantesFunciones.LABEL_IDSUBCLIENTE:
					sNombreCampoCategoria="id_sub_cliente";
					break;

				case GuiaRemisionConstantesFunciones.LABEL_IDEMPLEADO:
					sNombreCampoCategoria="id_empleado";
					break;

				case GuiaRemisionConstantesFunciones.LABEL_IDCIUDADORIGEN:
					sNombreCampoCategoria="id_ciudad_origen";
					break;

				case GuiaRemisionConstantesFunciones.LABEL_IDCIUDADDESTINO:
					sNombreCampoCategoria="id_ciudad_destino";
					break;

				case GuiaRemisionConstantesFunciones.LABEL_IDTIPOLLAMADA:
					sNombreCampoCategoria="id_tipo_llamada";
					break;

				case GuiaRemisionConstantesFunciones.LABEL_HORAINICIO:
					sNombreCampoCategoria="hora_inicio";
					break;

				case GuiaRemisionConstantesFunciones.LABEL_HORAFIN:
					sNombreCampoCategoria="hora_fin";
					break;

				case GuiaRemisionConstantesFunciones.LABEL_CUPO:
					sNombreCampoCategoria="cupo";
					break;

				case GuiaRemisionConstantesFunciones.LABEL_SALDO:
					sNombreCampoCategoria="saldo";
					break;

				case GuiaRemisionConstantesFunciones.LABEL_DOCUMENTO:
					sNombreCampoCategoria="documento";
					break;

				case GuiaRemisionConstantesFunciones.LABEL_DISPONIBLE:
					sNombreCampoCategoria="disponible";
					break;

				case GuiaRemisionConstantesFunciones.LABEL_DESCRIPCION:
					sNombreCampoCategoria="descripcion";
					break;

				case GuiaRemisionConstantesFunciones.LABEL_TOTALIVA:
					sNombreCampoCategoria="total_iva";
					break;

				case GuiaRemisionConstantesFunciones.LABEL_TOTALSINIVA:
					sNombreCampoCategoria="total_sin_iva";
					break;

				case GuiaRemisionConstantesFunciones.LABEL_DESCUENTO:
					sNombreCampoCategoria="descuento";
					break;

				case GuiaRemisionConstantesFunciones.LABEL_FLETE:
					sNombreCampoCategoria="flete";
					break;

				case GuiaRemisionConstantesFunciones.LABEL_OTRO:
					sNombreCampoCategoria="otro";
					break;

				case GuiaRemisionConstantesFunciones.LABEL_FINANCIAMIENTO:
					sNombreCampoCategoria="financiamiento";
					break;

				case GuiaRemisionConstantesFunciones.LABEL_IVA:
					sNombreCampoCategoria="iva";
					break;

				case GuiaRemisionConstantesFunciones.LABEL_TOTAL:
					sNombreCampoCategoria="total";
					break;

				case GuiaRemisionConstantesFunciones.LABEL_MONTORETENCION:
					sNombreCampoCategoria="monto_retencion";
					break;

				case GuiaRemisionConstantesFunciones.LABEL_IDTIPOCAMBIO:
					sNombreCampoCategoria="id_tipo_cambio";
					break;

				case GuiaRemisionConstantesFunciones.LABEL_FECHA:
					sNombreCampoCategoria="fecha";
					break;

				case GuiaRemisionConstantesFunciones.LABEL_RUCCLIENTE:
					sNombreCampoCategoria="ruc_cliente";
					break;

				case GuiaRemisionConstantesFunciones.LABEL_NOMBRECLIENTE:
					sNombreCampoCategoria="nombre_cliente";
					break;

				case GuiaRemisionConstantesFunciones.LABEL_TELEFONOCLIENTE:
					sNombreCampoCategoria="telefono_cliente";
					break;

				case GuiaRemisionConstantesFunciones.LABEL_DIRECCIONCLIENTE:
					sNombreCampoCategoria="direccion_cliente";
					break;

				case GuiaRemisionConstantesFunciones.LABEL_NUMEROPREIMPRESO:
					sNombreCampoCategoria="numero_pre_impreso";
					break;

				case GuiaRemisionConstantesFunciones.LABEL_PESOBRUTO:
					sNombreCampoCategoria="peso_bruto";
					break;

				case GuiaRemisionConstantesFunciones.LABEL_FECHAAUTORIZACION:
					sNombreCampoCategoria="fecha_autorizacion";
					break;

				case GuiaRemisionConstantesFunciones.LABEL_FECHAVENCIMIENTO:
					sNombreCampoCategoria="fecha_vencimiento";
					break;
					
			default :
				break;
		}		
		//CATEGORIA GRAFICO
		
		//CATEGORIA VALOR				
		reporteCategoriaValor=((Reporte)this.jInternalFrameReporteDinamicoGuiaRemision.getjComboBoxColumnaCategoriaValor().getSelectedItem());
		
		switch(reporteCategoriaValor.getsCodigo()) {
			
				case GuiaRemisionConstantesFunciones.LABEL_IDEMPRESA:
					sNombreCampoCategoriaValor="id_empresa";
					break;

				case GuiaRemisionConstantesFunciones.LABEL_IDSUCURSAL:
					sNombreCampoCategoriaValor="id_sucursal";
					break;

				case GuiaRemisionConstantesFunciones.LABEL_IDEJERCICIO:
					sNombreCampoCategoriaValor="id_ejercicio";
					break;

				case GuiaRemisionConstantesFunciones.LABEL_IDPERIODO:
					sNombreCampoCategoriaValor="id_periodo";
					break;

				case GuiaRemisionConstantesFunciones.LABEL_IDUSUARIO:
					sNombreCampoCategoriaValor="id_usuario";
					break;

				case GuiaRemisionConstantesFunciones.LABEL_SECUENCIAL:
					sNombreCampoCategoriaValor="secuencial";
					break;

				case GuiaRemisionConstantesFunciones.LABEL_FECHAEMISION:
					sNombreCampoCategoriaValor="fecha_emision";
					break;

				case GuiaRemisionConstantesFunciones.LABEL_IDFORMATO:
					sNombreCampoCategoriaValor="id_formato";
					break;

				case GuiaRemisionConstantesFunciones.LABEL_IDTIPOPRECIO:
					sNombreCampoCategoriaValor="id_tipo_precio";
					break;

				case GuiaRemisionConstantesFunciones.LABEL_IDMONEDA:
					sNombreCampoCategoriaValor="id_moneda";
					break;

				case GuiaRemisionConstantesFunciones.LABEL_NUMEROCAMION:
					sNombreCampoCategoriaValor="numero_camion";
					break;

				case GuiaRemisionConstantesFunciones.LABEL_IDCLIENTE:
					sNombreCampoCategoriaValor="id_cliente";
					break;

				case GuiaRemisionConstantesFunciones.LABEL_IDVENDEDOR:
					sNombreCampoCategoriaValor="id_vendedor";
					break;

				case GuiaRemisionConstantesFunciones.LABEL_IDFACTURA:
					sNombreCampoCategoriaValor="id_factura";
					break;

				case GuiaRemisionConstantesFunciones.LABEL_IDTRANSPORTISTA:
					sNombreCampoCategoriaValor="id_transportista";
					break;

				case GuiaRemisionConstantesFunciones.LABEL_IDENTIFICACION:
					sNombreCampoCategoriaValor="identificacion";
					break;

				case GuiaRemisionConstantesFunciones.LABEL_FECHAORIGEN:
					sNombreCampoCategoriaValor="fecha_origen";
					break;

				case GuiaRemisionConstantesFunciones.LABEL_FECHADESTINO:
					sNombreCampoCategoriaValor="fecha_destino";
					break;

				case GuiaRemisionConstantesFunciones.LABEL_TRANSPORTECODIGO:
					sNombreCampoCategoriaValor="transporte_codigo";
					break;

				case GuiaRemisionConstantesFunciones.LABEL_CANTIDADBULTOS:
					sNombreCampoCategoriaValor="cantidad_bultos";
					break;

				case GuiaRemisionConstantesFunciones.LABEL_IDCONSULTOR:
					sNombreCampoCategoriaValor="id_consultor";
					break;

				case GuiaRemisionConstantesFunciones.LABEL_IDTRANSPORTE:
					sNombreCampoCategoriaValor="id_transporte";
					break;

				case GuiaRemisionConstantesFunciones.LABEL_IDSUBCLIENTE:
					sNombreCampoCategoriaValor="id_sub_cliente";
					break;

				case GuiaRemisionConstantesFunciones.LABEL_IDEMPLEADO:
					sNombreCampoCategoriaValor="id_empleado";
					break;

				case GuiaRemisionConstantesFunciones.LABEL_IDCIUDADORIGEN:
					sNombreCampoCategoriaValor="id_ciudad_origen";
					break;

				case GuiaRemisionConstantesFunciones.LABEL_IDCIUDADDESTINO:
					sNombreCampoCategoriaValor="id_ciudad_destino";
					break;

				case GuiaRemisionConstantesFunciones.LABEL_IDTIPOLLAMADA:
					sNombreCampoCategoriaValor="id_tipo_llamada";
					break;

				case GuiaRemisionConstantesFunciones.LABEL_HORAINICIO:
					sNombreCampoCategoriaValor="hora_inicio";
					break;

				case GuiaRemisionConstantesFunciones.LABEL_HORAFIN:
					sNombreCampoCategoriaValor="hora_fin";
					break;

				case GuiaRemisionConstantesFunciones.LABEL_CUPO:
					sNombreCampoCategoriaValor="cupo";
					break;

				case GuiaRemisionConstantesFunciones.LABEL_SALDO:
					sNombreCampoCategoriaValor="saldo";
					break;

				case GuiaRemisionConstantesFunciones.LABEL_DOCUMENTO:
					sNombreCampoCategoriaValor="documento";
					break;

				case GuiaRemisionConstantesFunciones.LABEL_DISPONIBLE:
					sNombreCampoCategoriaValor="disponible";
					break;

				case GuiaRemisionConstantesFunciones.LABEL_DESCRIPCION:
					sNombreCampoCategoriaValor="descripcion";
					break;

				case GuiaRemisionConstantesFunciones.LABEL_TOTALIVA:
					sNombreCampoCategoriaValor="total_iva";
					break;

				case GuiaRemisionConstantesFunciones.LABEL_TOTALSINIVA:
					sNombreCampoCategoriaValor="total_sin_iva";
					break;

				case GuiaRemisionConstantesFunciones.LABEL_DESCUENTO:
					sNombreCampoCategoriaValor="descuento";
					break;

				case GuiaRemisionConstantesFunciones.LABEL_FLETE:
					sNombreCampoCategoriaValor="flete";
					break;

				case GuiaRemisionConstantesFunciones.LABEL_OTRO:
					sNombreCampoCategoriaValor="otro";
					break;

				case GuiaRemisionConstantesFunciones.LABEL_FINANCIAMIENTO:
					sNombreCampoCategoriaValor="financiamiento";
					break;

				case GuiaRemisionConstantesFunciones.LABEL_IVA:
					sNombreCampoCategoriaValor="iva";
					break;

				case GuiaRemisionConstantesFunciones.LABEL_TOTAL:
					sNombreCampoCategoriaValor="total";
					break;

				case GuiaRemisionConstantesFunciones.LABEL_MONTORETENCION:
					sNombreCampoCategoriaValor="monto_retencion";
					break;

				case GuiaRemisionConstantesFunciones.LABEL_IDTIPOCAMBIO:
					sNombreCampoCategoriaValor="id_tipo_cambio";
					break;

				case GuiaRemisionConstantesFunciones.LABEL_FECHA:
					sNombreCampoCategoriaValor="fecha";
					break;

				case GuiaRemisionConstantesFunciones.LABEL_RUCCLIENTE:
					sNombreCampoCategoriaValor="ruc_cliente";
					break;

				case GuiaRemisionConstantesFunciones.LABEL_NOMBRECLIENTE:
					sNombreCampoCategoriaValor="nombre_cliente";
					break;

				case GuiaRemisionConstantesFunciones.LABEL_TELEFONOCLIENTE:
					sNombreCampoCategoriaValor="telefono_cliente";
					break;

				case GuiaRemisionConstantesFunciones.LABEL_DIRECCIONCLIENTE:
					sNombreCampoCategoriaValor="direccion_cliente";
					break;

				case GuiaRemisionConstantesFunciones.LABEL_NUMEROPREIMPRESO:
					sNombreCampoCategoriaValor="numero_pre_impreso";
					break;

				case GuiaRemisionConstantesFunciones.LABEL_PESOBRUTO:
					sNombreCampoCategoriaValor="peso_bruto";
					break;

				case GuiaRemisionConstantesFunciones.LABEL_FECHAAUTORIZACION:
					sNombreCampoCategoriaValor="fecha_autorizacion";
					break;

				case GuiaRemisionConstantesFunciones.LABEL_FECHAVENCIMIENTO:
					sNombreCampoCategoriaValor="fecha_vencimiento";
					break;
					
			default :
				break;
		}	
		//CATEGORIA VALOR
		
		//VALORES GRAFICO
		for(int index:this.jInternalFrameReporteDinamicoGuiaRemision.getjListColumnasValoresGrafico().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoGuiaRemision.getjListColumnasValoresGrafico().getModel().getElementAt(index);
			
			switch(reporte.getsCodigo()) {
				
				case GuiaRemisionConstantesFunciones.LABEL_IDEMPRESA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Empresa",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_empresa");
					break;

				case GuiaRemisionConstantesFunciones.LABEL_IDSUCURSAL:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Sucursal",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_sucursal");
					break;

				case GuiaRemisionConstantesFunciones.LABEL_IDEJERCICIO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Ejercicio",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_ejercicio");
					break;

				case GuiaRemisionConstantesFunciones.LABEL_IDPERIODO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Periodo",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_periodo");
					break;

				case GuiaRemisionConstantesFunciones.LABEL_IDUSUARIO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Usuario",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_usuario");
					break;

				case GuiaRemisionConstantesFunciones.LABEL_SECUENCIAL:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Nro Guia",sNombreCampoCategoria,sNombreCampoCategoriaValor,"secuencial");
					break;

				case GuiaRemisionConstantesFunciones.LABEL_FECHAEMISION:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Fecha Emision",sNombreCampoCategoria,sNombreCampoCategoriaValor,"fecha_emision");
					break;

				case GuiaRemisionConstantesFunciones.LABEL_IDFORMATO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Formato",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_formato");
					break;

				case GuiaRemisionConstantesFunciones.LABEL_IDTIPOPRECIO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Tipo Precio",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_tipo_precio");
					break;

				case GuiaRemisionConstantesFunciones.LABEL_IDMONEDA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Moneda",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_moneda");
					break;

				case GuiaRemisionConstantesFunciones.LABEL_NUMEROCAMION:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Numero Camion",sNombreCampoCategoria,sNombreCampoCategoriaValor,"numero_camion");
					break;

				case GuiaRemisionConstantesFunciones.LABEL_IDCLIENTE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Cliente",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_cliente");
					break;

				case GuiaRemisionConstantesFunciones.LABEL_IDVENDEDOR:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Vendedor",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_vendedor");
					break;

				case GuiaRemisionConstantesFunciones.LABEL_IDFACTURA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Factura",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_factura");
					break;

				case GuiaRemisionConstantesFunciones.LABEL_IDTRANSPORTISTA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Transportista",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_transportista");
					break;

				case GuiaRemisionConstantesFunciones.LABEL_IDENTIFICACION:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Identificacion",sNombreCampoCategoria,sNombreCampoCategoriaValor,"identificacion");
					break;

				case GuiaRemisionConstantesFunciones.LABEL_FECHAORIGEN:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Fecha Origen",sNombreCampoCategoria,sNombreCampoCategoriaValor,"fecha_origen");
					break;

				case GuiaRemisionConstantesFunciones.LABEL_FECHADESTINO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Fecha Destino",sNombreCampoCategoria,sNombreCampoCategoriaValor,"fecha_destino");
					break;

				case GuiaRemisionConstantesFunciones.LABEL_TRANSPORTECODIGO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Transporte Codigo",sNombreCampoCategoria,sNombreCampoCategoriaValor,"transporte_codigo");
					break;

				case GuiaRemisionConstantesFunciones.LABEL_CANTIDADBULTOS:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Cantidad Bultos",sNombreCampoCategoria,sNombreCampoCategoriaValor,"cantidad_bultos");
					break;

				case GuiaRemisionConstantesFunciones.LABEL_IDCONSULTOR:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Consultor",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_consultor");
					break;

				case GuiaRemisionConstantesFunciones.LABEL_IDTRANSPORTE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Transporte",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_transporte");
					break;

				case GuiaRemisionConstantesFunciones.LABEL_IDSUBCLIENTE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Sub Cliente",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_sub_cliente");
					break;

				case GuiaRemisionConstantesFunciones.LABEL_IDEMPLEADO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Empleado",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_empleado");
					break;

				case GuiaRemisionConstantesFunciones.LABEL_IDCIUDADORIGEN:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Ciudad Origen",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_ciudad_origen");
					break;

				case GuiaRemisionConstantesFunciones.LABEL_IDCIUDADDESTINO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Ciudad Destino",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_ciudad_destino");
					break;

				case GuiaRemisionConstantesFunciones.LABEL_IDTIPOLLAMADA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Tipo Llamada",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_tipo_llamada");
					break;

				case GuiaRemisionConstantesFunciones.LABEL_HORAINICIO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Hora Inicio",sNombreCampoCategoria,sNombreCampoCategoriaValor,"hora_inicio");
					break;

				case GuiaRemisionConstantesFunciones.LABEL_HORAFIN:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Hora Fin",sNombreCampoCategoria,sNombreCampoCategoriaValor,"hora_fin");
					break;

				case GuiaRemisionConstantesFunciones.LABEL_CUPO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Cupo",sNombreCampoCategoria,sNombreCampoCategoriaValor,"cupo");
					break;

				case GuiaRemisionConstantesFunciones.LABEL_SALDO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Saldo",sNombreCampoCategoria,sNombreCampoCategoriaValor,"saldo");
					break;

				case GuiaRemisionConstantesFunciones.LABEL_DOCUMENTO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Documento",sNombreCampoCategoria,sNombreCampoCategoriaValor,"documento");
					break;

				case GuiaRemisionConstantesFunciones.LABEL_DISPONIBLE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Disponible",sNombreCampoCategoria,sNombreCampoCategoriaValor,"disponible");
					break;

				case GuiaRemisionConstantesFunciones.LABEL_DESCRIPCION:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Descripcion",sNombreCampoCategoria,sNombreCampoCategoriaValor,"descripcion");
					break;

				case GuiaRemisionConstantesFunciones.LABEL_TOTALIVA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Total Iva",sNombreCampoCategoria,sNombreCampoCategoriaValor,"total_iva");
					break;

				case GuiaRemisionConstantesFunciones.LABEL_TOTALSINIVA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Total Sin Iva",sNombreCampoCategoria,sNombreCampoCategoriaValor,"total_sin_iva");
					break;

				case GuiaRemisionConstantesFunciones.LABEL_DESCUENTO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Descuento",sNombreCampoCategoria,sNombreCampoCategoriaValor,"descuento");
					break;

				case GuiaRemisionConstantesFunciones.LABEL_FLETE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Flete",sNombreCampoCategoria,sNombreCampoCategoriaValor,"flete");
					break;

				case GuiaRemisionConstantesFunciones.LABEL_OTRO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Otro",sNombreCampoCategoria,sNombreCampoCategoriaValor,"otro");
					break;

				case GuiaRemisionConstantesFunciones.LABEL_FINANCIAMIENTO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Financiamiento",sNombreCampoCategoria,sNombreCampoCategoriaValor,"financiamiento");
					break;

				case GuiaRemisionConstantesFunciones.LABEL_IVA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Iva",sNombreCampoCategoria,sNombreCampoCategoriaValor,"iva");
					break;

				case GuiaRemisionConstantesFunciones.LABEL_TOTAL:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Total",sNombreCampoCategoria,sNombreCampoCategoriaValor,"total");
					break;

				case GuiaRemisionConstantesFunciones.LABEL_MONTORETENCION:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Monto Retencion",sNombreCampoCategoria,sNombreCampoCategoriaValor,"monto_retencion");
					break;

				case GuiaRemisionConstantesFunciones.LABEL_IDTIPOCAMBIO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Tipo Cambio",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_tipo_cambio");
					break;

				case GuiaRemisionConstantesFunciones.LABEL_FECHA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Fecha",sNombreCampoCategoria,sNombreCampoCategoriaValor,"fecha");
					break;

				case GuiaRemisionConstantesFunciones.LABEL_RUCCLIENTE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Ruc Cliente",sNombreCampoCategoria,sNombreCampoCategoriaValor,"ruc_cliente");
					break;

				case GuiaRemisionConstantesFunciones.LABEL_NOMBRECLIENTE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Nombre Cliente",sNombreCampoCategoria,sNombreCampoCategoriaValor,"nombre_cliente");
					break;

				case GuiaRemisionConstantesFunciones.LABEL_TELEFONOCLIENTE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Telefono Cliente",sNombreCampoCategoria,sNombreCampoCategoriaValor,"telefono_cliente");
					break;

				case GuiaRemisionConstantesFunciones.LABEL_DIRECCIONCLIENTE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Direccion Cliente",sNombreCampoCategoria,sNombreCampoCategoriaValor,"direccion_cliente");
					break;

				case GuiaRemisionConstantesFunciones.LABEL_NUMEROPREIMPRESO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Numero Pre Impreso",sNombreCampoCategoria,sNombreCampoCategoriaValor,"numero_pre_impreso");
					break;

				case GuiaRemisionConstantesFunciones.LABEL_PESOBRUTO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Peso Bruto",sNombreCampoCategoria,sNombreCampoCategoriaValor,"peso_bruto");
					break;

				case GuiaRemisionConstantesFunciones.LABEL_FECHAAUTORIZACION:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Fecha Autorizacion",sNombreCampoCategoria,sNombreCampoCategoriaValor,"fecha_autorizacion");
					break;

				case GuiaRemisionConstantesFunciones.LABEL_FECHAVENCIMIENTO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Fecha Vencimiento",sNombreCampoCategoria,sNombreCampoCategoriaValor,"fecha_vencimiento");
					break;
					
				default :
					break;
			}
		}
		//VALORES GRAFICO
		//if(sTipoGraficoReporte.equals("BARRAS") || sTipoGraficoReporte.equals("BARRAS_3D") || sTipoGraficoReporte.equals("BARRAS_XY") ||
		//   sTipoGraficoReporte.equals("PASTEL") || sTipoGraficoReporte.equals("PASTEL_3D") || sTipoGraficoReporte.equals("APILADO")) {
			
			existe=true;
			strGrafico=FuncionesReporte.getStringGraficoReporte(sTipoGraficoReporte,sWidthGrafico,strCategorySeries);			
		//}
		
		if(existe) {
			sXmlStringFile=sXmlStringFile.replace("<!--GRAFICO-->", strGrafico);
		}												
		
		return sXmlStringFile;
	}
	
	
	//@SuppressWarnings("deprecation")
	
	public void jButtonGenerarExcelReporteDinamicoGuiaRemisionActionPerformed(ActionEvent evt) throws Exception {		
		ArrayList<GuiaRemision> guiaremisionsSeleccionados=new ArrayList<GuiaRemision>();		
		
		guiaremisionsSeleccionados=this.getGuiaRemisionsSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"guiaremision";//.xls";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		Boolean existeFilas=false;
		
		Workbook workbook = null;
		FileOutputStream fileOutputStream=null;
		Reporte reporte=new Reporte();
		
		try {
			
			if(sTipoArchivoReporte=="EXCEL2") {
				workbook = new HSSFWorkbook();
				sPath+=".xls";
			
			} else if(sTipoArchivoReporte=="EXCEL2_2") {
				workbook = new XSSFWorkbook();
				sPath+=".xlsx";			
			}
		
			Sheet sheet = workbook.createSheet("GuiaRemisions");
						
		    			
			Integer iRow=0;
			Integer iCell=0;
			
			Row row = sheet.createRow(iRow);
			Cell cell = row.createCell(iCell);
			//cell.setCellValue("Blahblah");
			
			for(int index:this.jInternalFrameReporteDinamicoGuiaRemision.getjListColumnasSelectReporte().getSelectedIndices()) {
				reporte=(Reporte)this.jInternalFrameReporteDinamicoGuiaRemision.getjListColumnasSelectReporte().getModel().getElementAt(index);
				
				switch(reporte.getsCodigo()) {
					
				case GuiaRemisionConstantesFunciones.LABEL_IDEMPRESA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(GuiaRemisionConstantesFunciones.LABEL_IDEMPRESA);
					iRow++;

					for(GuiaRemision guiaremision:guiaremisionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(guiaremision.getempresa_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case GuiaRemisionConstantesFunciones.LABEL_IDSUCURSAL:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(GuiaRemisionConstantesFunciones.LABEL_IDSUCURSAL);
					iRow++;

					for(GuiaRemision guiaremision:guiaremisionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(guiaremision.getsucursal_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case GuiaRemisionConstantesFunciones.LABEL_IDEJERCICIO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(GuiaRemisionConstantesFunciones.LABEL_IDEJERCICIO);
					iRow++;

					for(GuiaRemision guiaremision:guiaremisionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(guiaremision.getejercicio_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case GuiaRemisionConstantesFunciones.LABEL_IDPERIODO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(GuiaRemisionConstantesFunciones.LABEL_IDPERIODO);
					iRow++;

					for(GuiaRemision guiaremision:guiaremisionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(guiaremision.getperiodo_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case GuiaRemisionConstantesFunciones.LABEL_IDUSUARIO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(GuiaRemisionConstantesFunciones.LABEL_IDUSUARIO);
					iRow++;

					for(GuiaRemision guiaremision:guiaremisionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(guiaremision.getusuario_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case GuiaRemisionConstantesFunciones.LABEL_SECUENCIAL:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(GuiaRemisionConstantesFunciones.LABEL_SECUENCIAL);
					iRow++;

					for(GuiaRemision guiaremision:guiaremisionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(guiaremision.getsecuencial());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case GuiaRemisionConstantesFunciones.LABEL_FECHAEMISION:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(GuiaRemisionConstantesFunciones.LABEL_FECHAEMISION);
					iRow++;

					for(GuiaRemision guiaremision:guiaremisionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(guiaremision.getfecha_emision());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case GuiaRemisionConstantesFunciones.LABEL_IDFORMATO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(GuiaRemisionConstantesFunciones.LABEL_IDFORMATO);
					iRow++;

					for(GuiaRemision guiaremision:guiaremisionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(guiaremision.getformato_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case GuiaRemisionConstantesFunciones.LABEL_IDTIPOPRECIO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(GuiaRemisionConstantesFunciones.LABEL_IDTIPOPRECIO);
					iRow++;

					for(GuiaRemision guiaremision:guiaremisionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(guiaremision.gettipoprecio_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case GuiaRemisionConstantesFunciones.LABEL_IDMONEDA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(GuiaRemisionConstantesFunciones.LABEL_IDMONEDA);
					iRow++;

					for(GuiaRemision guiaremision:guiaremisionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(guiaremision.getmoneda_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case GuiaRemisionConstantesFunciones.LABEL_NUMEROCAMION:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(GuiaRemisionConstantesFunciones.LABEL_NUMEROCAMION);
					iRow++;

					for(GuiaRemision guiaremision:guiaremisionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(guiaremision.getnumero_camion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case GuiaRemisionConstantesFunciones.LABEL_IDCLIENTE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(GuiaRemisionConstantesFunciones.LABEL_IDCLIENTE);
					iRow++;

					for(GuiaRemision guiaremision:guiaremisionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(guiaremision.getcliente_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case GuiaRemisionConstantesFunciones.LABEL_IDVENDEDOR:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(GuiaRemisionConstantesFunciones.LABEL_IDVENDEDOR);
					iRow++;

					for(GuiaRemision guiaremision:guiaremisionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(guiaremision.getvendedor_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case GuiaRemisionConstantesFunciones.LABEL_IDFACTURA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(GuiaRemisionConstantesFunciones.LABEL_IDFACTURA);
					iRow++;

					for(GuiaRemision guiaremision:guiaremisionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(guiaremision.getfactura_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case GuiaRemisionConstantesFunciones.LABEL_IDTRANSPORTISTA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(GuiaRemisionConstantesFunciones.LABEL_IDTRANSPORTISTA);
					iRow++;

					for(GuiaRemision guiaremision:guiaremisionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(guiaremision.gettransportista_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case GuiaRemisionConstantesFunciones.LABEL_IDENTIFICACION:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(GuiaRemisionConstantesFunciones.LABEL_IDENTIFICACION);
					iRow++;

					for(GuiaRemision guiaremision:guiaremisionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(guiaremision.getidentificacion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case GuiaRemisionConstantesFunciones.LABEL_FECHAORIGEN:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(GuiaRemisionConstantesFunciones.LABEL_FECHAORIGEN);
					iRow++;

					for(GuiaRemision guiaremision:guiaremisionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(guiaremision.getfecha_origen());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case GuiaRemisionConstantesFunciones.LABEL_FECHADESTINO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(GuiaRemisionConstantesFunciones.LABEL_FECHADESTINO);
					iRow++;

					for(GuiaRemision guiaremision:guiaremisionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(guiaremision.getfecha_destino());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case GuiaRemisionConstantesFunciones.LABEL_TRANSPORTECODIGO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(GuiaRemisionConstantesFunciones.LABEL_TRANSPORTECODIGO);
					iRow++;

					for(GuiaRemision guiaremision:guiaremisionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(guiaremision.gettransporte_codigo());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case GuiaRemisionConstantesFunciones.LABEL_CANTIDADBULTOS:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(GuiaRemisionConstantesFunciones.LABEL_CANTIDADBULTOS);
					iRow++;

					for(GuiaRemision guiaremision:guiaremisionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(guiaremision.getcantidad_bultos());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case GuiaRemisionConstantesFunciones.LABEL_IDCONSULTOR:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(GuiaRemisionConstantesFunciones.LABEL_IDCONSULTOR);
					iRow++;

					for(GuiaRemision guiaremision:guiaremisionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(guiaremision.getconsultor_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case GuiaRemisionConstantesFunciones.LABEL_IDTRANSPORTE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(GuiaRemisionConstantesFunciones.LABEL_IDTRANSPORTE);
					iRow++;

					for(GuiaRemision guiaremision:guiaremisionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(guiaremision.gettransporte_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case GuiaRemisionConstantesFunciones.LABEL_IDSUBCLIENTE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(GuiaRemisionConstantesFunciones.LABEL_IDSUBCLIENTE);
					iRow++;

					for(GuiaRemision guiaremision:guiaremisionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(guiaremision.getsubcliente_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case GuiaRemisionConstantesFunciones.LABEL_IDEMPLEADO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(GuiaRemisionConstantesFunciones.LABEL_IDEMPLEADO);
					iRow++;

					for(GuiaRemision guiaremision:guiaremisionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(guiaremision.getempleado_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case GuiaRemisionConstantesFunciones.LABEL_IDCIUDADORIGEN:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(GuiaRemisionConstantesFunciones.LABEL_IDCIUDADORIGEN);
					iRow++;

					for(GuiaRemision guiaremision:guiaremisionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(guiaremision.getciudadorigen_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case GuiaRemisionConstantesFunciones.LABEL_IDCIUDADDESTINO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(GuiaRemisionConstantesFunciones.LABEL_IDCIUDADDESTINO);
					iRow++;

					for(GuiaRemision guiaremision:guiaremisionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(guiaremision.getciudaddestino_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case GuiaRemisionConstantesFunciones.LABEL_IDTIPOLLAMADA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(GuiaRemisionConstantesFunciones.LABEL_IDTIPOLLAMADA);
					iRow++;

					for(GuiaRemision guiaremision:guiaremisionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(guiaremision.gettipollamada_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case GuiaRemisionConstantesFunciones.LABEL_HORAINICIO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(GuiaRemisionConstantesFunciones.LABEL_HORAINICIO);
					iRow++;

					for(GuiaRemision guiaremision:guiaremisionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(guiaremision.gethora_inicio());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case GuiaRemisionConstantesFunciones.LABEL_HORAFIN:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(GuiaRemisionConstantesFunciones.LABEL_HORAFIN);
					iRow++;

					for(GuiaRemision guiaremision:guiaremisionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(guiaremision.gethora_fin());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case GuiaRemisionConstantesFunciones.LABEL_CUPO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(GuiaRemisionConstantesFunciones.LABEL_CUPO);
					iRow++;

					for(GuiaRemision guiaremision:guiaremisionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(guiaremision.getcupo());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case GuiaRemisionConstantesFunciones.LABEL_SALDO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(GuiaRemisionConstantesFunciones.LABEL_SALDO);
					iRow++;

					for(GuiaRemision guiaremision:guiaremisionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(guiaremision.getsaldo());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case GuiaRemisionConstantesFunciones.LABEL_DOCUMENTO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(GuiaRemisionConstantesFunciones.LABEL_DOCUMENTO);
					iRow++;

					for(GuiaRemision guiaremision:guiaremisionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(guiaremision.getdocumento());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case GuiaRemisionConstantesFunciones.LABEL_DISPONIBLE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(GuiaRemisionConstantesFunciones.LABEL_DISPONIBLE);
					iRow++;

					for(GuiaRemision guiaremision:guiaremisionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(guiaremision.getdisponible());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case GuiaRemisionConstantesFunciones.LABEL_DESCRIPCION:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(GuiaRemisionConstantesFunciones.LABEL_DESCRIPCION);
					iRow++;

					for(GuiaRemision guiaremision:guiaremisionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(guiaremision.getdescripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case GuiaRemisionConstantesFunciones.LABEL_TOTALIVA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(GuiaRemisionConstantesFunciones.LABEL_TOTALIVA);
					iRow++;

					for(GuiaRemision guiaremision:guiaremisionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(guiaremision.gettotal_iva());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case GuiaRemisionConstantesFunciones.LABEL_TOTALSINIVA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(GuiaRemisionConstantesFunciones.LABEL_TOTALSINIVA);
					iRow++;

					for(GuiaRemision guiaremision:guiaremisionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(guiaremision.gettotal_sin_iva());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case GuiaRemisionConstantesFunciones.LABEL_DESCUENTO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(GuiaRemisionConstantesFunciones.LABEL_DESCUENTO);
					iRow++;

					for(GuiaRemision guiaremision:guiaremisionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(guiaremision.getdescuento());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case GuiaRemisionConstantesFunciones.LABEL_FLETE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(GuiaRemisionConstantesFunciones.LABEL_FLETE);
					iRow++;

					for(GuiaRemision guiaremision:guiaremisionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(guiaremision.getflete());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case GuiaRemisionConstantesFunciones.LABEL_OTRO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(GuiaRemisionConstantesFunciones.LABEL_OTRO);
					iRow++;

					for(GuiaRemision guiaremision:guiaremisionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(guiaremision.getotro());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case GuiaRemisionConstantesFunciones.LABEL_FINANCIAMIENTO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(GuiaRemisionConstantesFunciones.LABEL_FINANCIAMIENTO);
					iRow++;

					for(GuiaRemision guiaremision:guiaremisionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(guiaremision.getfinanciamiento());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case GuiaRemisionConstantesFunciones.LABEL_IVA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(GuiaRemisionConstantesFunciones.LABEL_IVA);
					iRow++;

					for(GuiaRemision guiaremision:guiaremisionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(guiaremision.getiva());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case GuiaRemisionConstantesFunciones.LABEL_TOTAL:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(GuiaRemisionConstantesFunciones.LABEL_TOTAL);
					iRow++;

					for(GuiaRemision guiaremision:guiaremisionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(guiaremision.gettotal());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case GuiaRemisionConstantesFunciones.LABEL_MONTORETENCION:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(GuiaRemisionConstantesFunciones.LABEL_MONTORETENCION);
					iRow++;

					for(GuiaRemision guiaremision:guiaremisionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(guiaremision.getmonto_retencion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case GuiaRemisionConstantesFunciones.LABEL_IDTIPOCAMBIO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(GuiaRemisionConstantesFunciones.LABEL_IDTIPOCAMBIO);
					iRow++;

					for(GuiaRemision guiaremision:guiaremisionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(guiaremision.gettipocambio_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case GuiaRemisionConstantesFunciones.LABEL_FECHA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(GuiaRemisionConstantesFunciones.LABEL_FECHA);
					iRow++;

					for(GuiaRemision guiaremision:guiaremisionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(guiaremision.getfecha());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case GuiaRemisionConstantesFunciones.LABEL_RUCCLIENTE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(GuiaRemisionConstantesFunciones.LABEL_RUCCLIENTE);
					iRow++;

					for(GuiaRemision guiaremision:guiaremisionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(guiaremision.getruc_cliente());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case GuiaRemisionConstantesFunciones.LABEL_NOMBRECLIENTE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(GuiaRemisionConstantesFunciones.LABEL_NOMBRECLIENTE);
					iRow++;

					for(GuiaRemision guiaremision:guiaremisionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(guiaremision.getnombre_cliente());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case GuiaRemisionConstantesFunciones.LABEL_TELEFONOCLIENTE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(GuiaRemisionConstantesFunciones.LABEL_TELEFONOCLIENTE);
					iRow++;

					for(GuiaRemision guiaremision:guiaremisionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(guiaremision.gettelefono_cliente());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case GuiaRemisionConstantesFunciones.LABEL_DIRECCIONCLIENTE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(GuiaRemisionConstantesFunciones.LABEL_DIRECCIONCLIENTE);
					iRow++;

					for(GuiaRemision guiaremision:guiaremisionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(guiaremision.getdireccion_cliente());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case GuiaRemisionConstantesFunciones.LABEL_NUMEROPREIMPRESO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(GuiaRemisionConstantesFunciones.LABEL_NUMEROPREIMPRESO);
					iRow++;

					for(GuiaRemision guiaremision:guiaremisionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(guiaremision.getnumero_pre_impreso());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case GuiaRemisionConstantesFunciones.LABEL_PESOBRUTO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(GuiaRemisionConstantesFunciones.LABEL_PESOBRUTO);
					iRow++;

					for(GuiaRemision guiaremision:guiaremisionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(guiaremision.getpeso_bruto());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case GuiaRemisionConstantesFunciones.LABEL_FECHAAUTORIZACION:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(GuiaRemisionConstantesFunciones.LABEL_FECHAAUTORIZACION);
					iRow++;

					for(GuiaRemision guiaremision:guiaremisionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(guiaremision.getfecha_autorizacion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case GuiaRemisionConstantesFunciones.LABEL_FECHAVENCIMIENTO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(GuiaRemisionConstantesFunciones.LABEL_FECHAVENCIMIENTO);
					iRow++;

					for(GuiaRemision guiaremision:guiaremisionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(guiaremision.getfecha_vencimiento());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;
					
					default :
						break;
				}
			}
			
			
			//if(conCabecera) {
			//	this.getFilaCabeceraExportarExcelGuiaRemision(row);				
			//	iRow++;
			//}				
			
			//for(GuiaRemision guiaremisionAux:guiaremisionsSeleccionados) {
			//	row = sheet.createRow(iRow);
				
			//	this.getFilaDatosExportarExcelGuiaRemision(guiaremisionAux,row);
				
			//	iRow++;
			//}
			
			
			
			fileOutputStream = new FileOutputStream(new File(sPath));
		    
			workbook.write(fileOutputStream);
			
			//fileOutputStream.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.guiaremisionSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Guia Remision",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			
       		if (fileOutputStream != null) {
				fileOutputStream.close();
			}			
		}				
	}	
	
	
	
	
	public void buscarPorId(Long idActual) throws Exception {    		
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.getNewConnexionToDeep("");
			}
			
			this.idActual=idActual;
			this.iNumeroPaginacionPagina=0;
			
			this.procesarBusqueda("PorId");
				    	
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingGuiaRemision(false);
			
			//SI ES MANUAL
			if(GuiaRemisionJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualGuiaRemision();
			}	
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger);
			
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonAnterioresGuiaRemisionActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			//this.iNumeroPaginacion-=this.iNumeroPaginacion;
			/*
			if(this.iNumeroPaginacion<0) {
				this.iNumeroPaginacion=0;
			}
			*/
			//this.iNumeroPaginacionPagina=10;			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.getNewConnexionToDeep("");
			}
			
			this.anteriores();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingGuiaRemision(false);
			
			//SI ES MANUAL
			if(GuiaRemisionJInternalFrame.ISBINDING_MANUAL) {
	    		//this.inicializarActualizarBindingManualGuiaRemision();
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonSiguientesGuiaRemisionActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			//this.iNumeroPaginacion+=this.iNumeroPaginacion;
			//this.iNumeroPaginacionPagina=10;			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.getNewConnexionToDeep("");
			}
			
			this.siguientes();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingGuiaRemision(false);
			
			//SI ES MANUAL
			if(GuiaRemisionJInternalFrame.ISBINDING_MANUAL) {
	    		//this.inicializarActualizarBindingManualGuiaRemision();
			}		
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void aumentarTamanioFilaNuevaTablaGuiaRemision() throws Exception {		
		Dimension dimensionMinimum=this.jTableDatosGuiaRemision.getMinimumSize();
		Dimension dimensionMaximum=this.jTableDatosGuiaRemision.getMaximumSize();
		Dimension dimensionPreferred=this.jTableDatosGuiaRemision.getPreferredSize();
	
		double iHeightConFilaNueva=dimensionPreferred.getHeight();
		
		iHeightConFilaNueva+=this.jTableDatosGuiaRemision.getRowHeight();
		
		dimensionMinimum.setSize(dimensionMinimum.getWidth(),iHeightConFilaNueva);
		dimensionMaximum.setSize(dimensionMaximum.getWidth(),iHeightConFilaNueva);
		dimensionPreferred.setSize(dimensionPreferred.getWidth(),iHeightConFilaNueva);
		
		this.jTableDatosGuiaRemision.setMinimumSize(dimensionMinimum);
		this.jTableDatosGuiaRemision.setMaximumSize(dimensionMaximum);
		this.jTableDatosGuiaRemision.setPreferredSize(dimensionPreferred);	
	}
	
	public void inicializarActualizarBindingGuiaRemision(Boolean esInicializar) throws Exception {
		this.inicializarActualizarBindingGuiaRemision(esInicializar,true);
	}
	
	public void inicializarActualizarBindingGuiaRemision(Boolean esInicializar,Boolean conTabla) throws Exception {		
		if(conTabla) {
			this.inicializarActualizarBindingTablaGuiaRemision(esInicializar);
		}
		
		this.inicializarActualizarBindingBotonesGuiaRemision(esInicializar);
		
		//FUNCIONALIDAD_RELACIONADO
		if(!this.guiaremisionSessionBean.getEsGuardarRelacionado()) {
			try{this.inicializarActualizarBindingBusquedasGuiaRemision(esInicializar);}catch(Exception e){e.printStackTrace();}
			
			//this.inicializarActualizarBindingtiposArchivosReportesAccionesGuiaRemision(esInicializar) ;
			
			this.inicializarActualizarBindingParametrosReportesGuiaRemision(esInicializar) ;
		}
		
		if(esInicializar) {
			if( !GuiaRemisionJInternalFrame.ISBINDING_MANUAL_TABLA ||
			   	!GuiaRemisionJInternalFrame.ISBINDING_MANUAL) {
			   	
			}
		}
	}
	
	public void inicializarActualizarBindingManualGuiaRemision() throws Exception {		
		//NO SE NECESITA HACER BINDING OTRA VEZ
		//this.inicializarActualizarBindingTablaGuiaRemision();
		
		this.inicializarActualizarBindingBotonesManualGuiaRemision(true);
		
		//FUNCIONALIDAD_RELACIONADO
		if(!this.guiaremisionSessionBean.getEsGuardarRelacionado()) {
			
			this.inicializarActualizarBindingBusquedasManualGuiaRemision();			
			
			
			//this.inicializarActualizarBindingtiposArchivosReportesAccionesGuiaRemision() ;
			
			this.inicializarActualizarBindingParametrosReportesPostAccionesManualGuiaRemision(false) ;			
			
		}
	}
	
	public void inicializarActualizarBindingParametrosReportesPostAccionesManualGuiaRemision(Boolean esSetControles) throws Exception {
		try	{					
			if(!esSetControles) {
				this.isSeleccionarTodos=this.jCheckBoxSeleccionarTodosGuiaRemision.isSelected();
				this.isSeleccionados=this.jCheckBoxSeleccionadosGuiaRemision.isSelected();
				
				
				this.conGraficoReporte=this.jCheckBoxConGraficoReporteGuiaRemision.isSelected();															
				
				
				if(this.jInternalFrameDetalleFormGuiaRemision!=null) {
				this.isPostAccionNuevo=this.jInternalFrameDetalleFormGuiaRemision.jCheckBoxPostAccionNuevoGuiaRemision.isSelected();
				this.isPostAccionSinCerrar=this.jInternalFrameDetalleFormGuiaRemision.jCheckBoxPostAccionSinCerrarGuiaRemision.isSelected();
				this.isPostAccionSinMensaje=this.jInternalFrameDetalleFormGuiaRemision.jCheckBoxPostAccionSinMensajeGuiaRemision.isSelected();
				}
			
			} else {
				this.jCheckBoxSeleccionarTodosGuiaRemision.setSelected(this.isSeleccionarTodos);
				this.jCheckBoxSeleccionadosGuiaRemision.setSelected(this.isSeleccionados);
				
				
				this.jCheckBoxConGraficoReporteGuiaRemision.setSelected(this.conGraficoReporte);				
				
				
				if(this.jInternalFrameDetalleFormGuiaRemision!=null) {
				this.jInternalFrameDetalleFormGuiaRemision.jCheckBoxPostAccionNuevoGuiaRemision.setSelected(this.isPostAccionNuevo);
				this.jInternalFrameDetalleFormGuiaRemision.jCheckBoxPostAccionSinCerrarGuiaRemision.setSelected(this.isPostAccionSinCerrar);
				this.jInternalFrameDetalleFormGuiaRemision.jCheckBoxPostAccionSinMensajeGuiaRemision.setSelected(this.isPostAccionSinMensaje);
				}
			}
			
			
			if(this.jComboBoxTiposPaginacionGuiaRemision.getSelectedItem()!=null) {
				this.sTipoPaginacion=((Reporte)this.jComboBoxTiposPaginacionGuiaRemision.getSelectedItem()).getsCodigo();			
			}
			
			
			
			if(this.jInternalFrameDetalleFormGuiaRemision!=null) {
			this.sTipoAccionFormulario=((Reporte)this.jInternalFrameDetalleFormGuiaRemision.jComboBoxTiposAccionesFormularioGuiaRemision.getSelectedItem()).getsCodigo();
			}
			
			
			
			if(!this.conCargarMinimo) {
				this.sTipoArchivoReporte=((Reporte)this.jComboBoxTiposArchivosReportesGuiaRemision.getSelectedItem()).getsCodigo();			
				
				if(this.jInternalFrameReporteDinamicoGuiaRemision!=null) {
					this.sTipoArchivoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoGuiaRemision.getjComboBoxTiposArchivosReportesDinamico().getSelectedItem()).getsCodigo();			
				}
				
				this.sTipoRelacion=((Reporte)this.jComboBoxTiposRelacionesGuiaRemision.getSelectedItem()).getsCodigo();
									
				this.sTipoAccion=((Reporte)this.jComboBoxTiposAccionesGuiaRemision.getSelectedItem()).getsCodigo();
													
				this.sTipoSeleccionar=((Reporte)this.jComboBoxTiposSeleccionarGuiaRemision.getSelectedItem()).getsCodigo();
									
				this.sTipoReporte=((Reporte)this.jComboBoxTiposReportesGuiaRemision.getSelectedItem()).getsCodigo();							
					
				if(this.jInternalFrameReporteDinamicoGuiaRemision!=null) {
					this.sTipoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoGuiaRemision.getjComboBoxTiposReportesDinamico().getSelectedItem()).getsCodigo();							
				}
				
				this.sTipoGraficoReporte=((Reporte)this.jComboBoxTiposGraficosReportesGuiaRemision.getSelectedItem()).getsCodigo();											
			}			
			
			this.sValorCampoGeneral=this.jTextFieldValorCampoGeneralGuiaRemision.getText();						
			
			
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void inicializarActualizarBindingParametrosReportesGuiaRemision(Boolean esInicializar) throws Exception {
		try	{	
			if(GuiaRemisionJInternalFrame.ISBINDING_MANUAL) {
				this. inicializarActualizarBindingParametrosReportesPostAccionesManualGuiaRemision(false);
			} else {
			}
		} catch(Exception e) {
			throw e;
		}
	}	
	
	public void inicializarActualizarBindingtiposArchivosReportesAccionesGuiaRemision() throws Exception {
		try	{
			if(GuiaRemisionJInternalFrame.ISBINDING_MANUAL) {
				this.inicializarActualizarBindingtiposArchivosReportesAccionesManualGuiaRemision();
			} else {
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesAccionesManualFormDetalleGuiaRemision() throws Exception {
		//TIPOS ACCIONES FORMULARIO	
		this.jInternalFrameDetalleFormGuiaRemision.jComboBoxTiposAccionesFormularioGuiaRemision.removeAllItems();
				
		for(Reporte reporte:this.tiposAccionesFormulario) {
			this.jInternalFrameDetalleFormGuiaRemision.jComboBoxTiposAccionesFormularioGuiaRemision.addItem(reporte);
		}
		
		//TIPOS ACCIONES FORMULARIO
	}
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesAccionesManualGuiaRemision() throws Exception {
		try	{
			
			//TIPOS ARCHIVOS REPORTES
			this.jComboBoxTiposArchivosReportesGuiaRemision.removeAllItems();
				
			for(Reporte reporte:this.tiposArchivosReportes) {
				this.jComboBoxTiposArchivosReportesGuiaRemision.addItem(reporte);
			}
			
			
				
			//TIPOS REPORTES
			this.jComboBoxTiposReportesGuiaRemision.removeAllItems();
				
			for(Reporte reporte:this.tiposReportes) {
				this.jComboBoxTiposReportesGuiaRemision.addItem(reporte);
			}
			
			
			//TIPOS GRAFICOS REPORTES
			this.jComboBoxTiposGraficosReportesGuiaRemision.removeAllItems();
				
			for(Reporte reporte:this.tiposGraficosReportes) {
				this.jComboBoxTiposGraficosReportesGuiaRemision.addItem(reporte);
			}
			
			
			//TIPOS PAGINACION
			this.jComboBoxTiposPaginacionGuiaRemision.removeAllItems();
				
			for(Reporte reporte:this.tiposPaginacion) {
				this.jComboBoxTiposPaginacionGuiaRemision.addItem(reporte);
			}
			
			
			if(!this.guiaremisionSessionBean.getEsGuardarRelacionado()) {
				this.jComboBoxTiposPaginacionGuiaRemision.setSelectedItem(Funciones2.getTipoPaginacionDefecto("NORMAL",this.tiposPaginacion));
			} else {
				this.jComboBoxTiposPaginacionGuiaRemision.setSelectedItem(Funciones2.getTipoPaginacionDefecto("RELACIONADO",this.tiposPaginacion));
			}
				
				
			//TIPOS ACCIONES	
			this.jComboBoxTiposRelacionesGuiaRemision.removeAllItems();
				
			for(Reporte reporte:this.tiposRelaciones) {
				this.jComboBoxTiposRelacionesGuiaRemision.addItem(reporte);
			}
			
			//TIPOS ACCIONES
				
				
			//TIPOS ACCIONES	
			this.jComboBoxTiposAccionesGuiaRemision.removeAllItems();
				
			for(Reporte reporte:this.tiposAcciones) {
				this.jComboBoxTiposAccionesGuiaRemision.addItem(reporte);
			}
			
			//TIPOS ACCIONES			
			
			
			
			//TIPOS ACCIONES FORMULARIO	
			if(this.jInternalFrameDetalleFormGuiaRemision!=null) { //if(this.conCargarFormDetalle) {
				this.jInternalFrameDetalleFormGuiaRemision.jComboBoxTiposAccionesFormularioGuiaRemision.removeAllItems();
				
				for(Reporte reporte:this.tiposAccionesFormulario) {
					this.jInternalFrameDetalleFormGuiaRemision.jComboBoxTiposAccionesFormularioGuiaRemision.addItem(reporte);
				}
				
			}
			//TIPOS ACCIONES FORMULARIO
			
			
			
			//TIPOS SELECCIONAR
			this.jComboBoxTiposSeleccionarGuiaRemision.removeAllItems();
				
			for(Reporte reporte:this.tiposSeleccionar) {
				this.jComboBoxTiposSeleccionarGuiaRemision.addItem(reporte);
			}
			
			
			if(this.tiposSeleccionar!=null && this.tiposSeleccionar.size()>1) {
				this.jComboBoxTiposSeleccionarGuiaRemision.setSelectedIndex(1);
			}
				
			//REPORTE DINAMICO
			this.inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualGuiaRemision();
							
			//TIPOS COLUMNAS SELECT
			//TIPOS SELECCIONAR
			
			
		} catch(Exception e) {
			throw e;
		}
	}		
	
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualGuiaRemision() throws Exception {
		try	{
			DefaultListModel<Reporte> defaultListModel=new DefaultListModel<Reporte>();
			
			
			//TIPOS ARCHIVOS REPORTES DINAMICO
			if(this.jInternalFrameReporteDinamicoGuiaRemision!=null) {
				this.jInternalFrameReporteDinamicoGuiaRemision.getjComboBoxTiposArchivosReportesDinamico().removeAllItems();
					
				for(Reporte reporte:this.tiposArchivosReportesDinamico) {
					this.jInternalFrameReporteDinamicoGuiaRemision.getjComboBoxTiposArchivosReportesDinamico().addItem(reporte);
				}
				
			}
			
			//TIPOS REPORTES DINAMICO
			if(this.jInternalFrameReporteDinamicoGuiaRemision!=null) {
				this.jInternalFrameReporteDinamicoGuiaRemision.getjComboBoxTiposReportesDinamico().removeAllItems();
					
				for(Reporte reporte:this.tiposReportesDinamico) {
					this.jInternalFrameReporteDinamicoGuiaRemision.getjComboBoxTiposReportesDinamico().addItem(reporte);
				}
				
			}
			
			defaultListModel=new DefaultListModel<Reporte>();
			
			if(this.jInternalFrameReporteDinamicoGuiaRemision!=null) {
				
				if(this.jInternalFrameReporteDinamicoGuiaRemision.getjListColumnasSelectReporte()!=null) {
					this.jInternalFrameReporteDinamicoGuiaRemision.getjListColumnasSelectReporte().removeAll();
						
					for(Reporte reporte:this.tiposColumnasSelect) {
						defaultListModel.addElement(reporte);
					}						
						
					this.jInternalFrameReporteDinamicoGuiaRemision.getjListColumnasSelectReporte().setModel(defaultListModel);									
						
				}	
					
				//TIPOS RELACIONES SELECT
				//TIPOS SELECCIONAR
				defaultListModel=new DefaultListModel<Reporte>();
				if(this.jInternalFrameReporteDinamicoGuiaRemision.getjListRelacionesSelectReporte()!=null) {
					this.jInternalFrameReporteDinamicoGuiaRemision.getjListRelacionesSelectReporte().removeAll();
						
					for(Reporte reporte:this.tiposRelacionesSelect) {
						defaultListModel.addElement(reporte);
					}						
						
					this.jInternalFrameReporteDinamicoGuiaRemision.getjListRelacionesSelectReporte().setModel(defaultListModel);									
						
				}	
				
				
				//TIPOS COLUMNAS CATEGORIA DINAMICO
				if(this.jInternalFrameReporteDinamicoGuiaRemision.getjComboBoxColumnaCategoriaGrafico()!=null) {
					this.jInternalFrameReporteDinamicoGuiaRemision.getjComboBoxColumnaCategoriaGrafico().removeAllItems();
						
					ArrayList<Reporte> tiposColumnasCategoria=GuiaRemisionConstantesFunciones.getTiposSeleccionarGuiaRemision(true,true,false,true,true);
						
					for(Reporte reporte:tiposColumnasCategoria) {//this.tiposSeleccionar
						this.jInternalFrameReporteDinamicoGuiaRemision.getjComboBoxColumnaCategoriaGrafico().addItem(reporte);
					}
					
				}
					
				//TIPOS COLUMNAS CATEGORIA VALOR DINAMICO
				if(this.jInternalFrameReporteDinamicoGuiaRemision.getjComboBoxColumnaCategoriaValor()!=null) {
					this.jInternalFrameReporteDinamicoGuiaRemision.getjComboBoxColumnaCategoriaValor().removeAllItems();
						
					ArrayList<Reporte> tiposColumnasCategoriaValor=GuiaRemisionConstantesFunciones.getTiposSeleccionarGuiaRemision(false,false,true,false,false);
						
					for(Reporte reporte:tiposColumnasCategoriaValor) {//this.tiposSeleccionar
						this.jInternalFrameReporteDinamicoGuiaRemision.getjComboBoxColumnaCategoriaValor().addItem(reporte);
					}
					
				}
					
				//TIPOS COLUMNAS VALOR
				defaultListModel=new DefaultListModel<Reporte>();
					
				if(this.jInternalFrameReporteDinamicoGuiaRemision.getjListColumnasValoresGrafico()!=null) {
					this.jInternalFrameReporteDinamicoGuiaRemision.getjListColumnasValoresGrafico().removeAll();
						
					ArrayList<Reporte> tiposColumnasValor=GuiaRemisionConstantesFunciones.getTiposSeleccionarGuiaRemision(false,false,true,false,false);
						
					for(Reporte reporte:tiposColumnasValor) {//this.tiposSeleccionar
						defaultListModel.addElement(reporte);
					}						
						
					this.jInternalFrameReporteDinamicoGuiaRemision.getjListColumnasValoresGrafico().setModel(defaultListModel);									
						
				}
					
				//TIPOS GRAFICOS REPORTES DINAMICOS
				if(this.jInternalFrameReporteDinamicoGuiaRemision.getjComboBoxTiposGraficosReportesDinamico()!=null) {
					this.jInternalFrameReporteDinamicoGuiaRemision.getjComboBoxTiposGraficosReportesDinamico().removeAllItems();
						
					for(Reporte reporte:this.tiposGraficosReportes) {
						this.jInternalFrameReporteDinamicoGuiaRemision.getjComboBoxTiposGraficosReportesDinamico().addItem(reporte);
					}
					
				}
			
			
			}
		} catch(Exception e) {
			throw e;
		}
	}	
	
	
	
	public void inicializarActualizarBindingBusquedasManualGuiaRemision()  throws Exception {				
		//BYDAN_BUSQUEDAS		
		
		if(this.jComboBoxid_ciudad_destinoFK_IdCiudadDestinoGuiaRemision.getSelectedItem()!=null){this.id_ciudad_destinoFK_IdCiudadDestino=((Ciudad)this.jComboBoxid_ciudad_destinoFK_IdCiudadDestinoGuiaRemision.getSelectedItem()).getId();}
		if(this.jComboBoxid_ciudad_origenFK_IdCiudadOrigenGuiaRemision.getSelectedItem()!=null){this.id_ciudad_origenFK_IdCiudadOrigen=((Ciudad)this.jComboBoxid_ciudad_origenFK_IdCiudadOrigenGuiaRemision.getSelectedItem()).getId();}
		if(this.jComboBoxid_clienteFK_IdClienteGuiaRemision.getSelectedItem()!=null){this.id_clienteFK_IdCliente=((Cliente)this.jComboBoxid_clienteFK_IdClienteGuiaRemision.getSelectedItem()).getId();}
		if(this.jComboBoxid_consultorFK_IdConsultorGuiaRemision.getSelectedItem()!=null){this.id_consultorFK_IdConsultor=((Consultor)this.jComboBoxid_consultorFK_IdConsultorGuiaRemision.getSelectedItem()).getId();}
		if(this.jComboBoxid_empleadoFK_IdEmpleadoGuiaRemision.getSelectedItem()!=null){this.id_empleadoFK_IdEmpleado=((Empleado)this.jComboBoxid_empleadoFK_IdEmpleadoGuiaRemision.getSelectedItem()).getId();}
		if(this.jComboBoxid_facturaFK_IdFacturaGuiaRemision.getSelectedItem()!=null){this.id_facturaFK_IdFactura=((Factura)this.jComboBoxid_facturaFK_IdFacturaGuiaRemision.getSelectedItem()).getId();}
		if(this.jComboBoxid_formatoFK_IdFormatoGuiaRemision.getSelectedItem()!=null){this.id_formatoFK_IdFormato=((Formato)this.jComboBoxid_formatoFK_IdFormatoGuiaRemision.getSelectedItem()).getId();}
		if(this.jComboBoxid_sub_clienteFK_IdSubClienteGuiaRemision.getSelectedItem()!=null){this.id_sub_clienteFK_IdSubCliente=((SubCliente)this.jComboBoxid_sub_clienteFK_IdSubClienteGuiaRemision.getSelectedItem()).getId();}
		if(this.jComboBoxid_tipo_cambioFK_IdTipoCambioGuiaRemision.getSelectedItem()!=null){this.id_tipo_cambioFK_IdTipoCambio=((TipoCambio)this.jComboBoxid_tipo_cambioFK_IdTipoCambioGuiaRemision.getSelectedItem()).getId();}
		if(this.jComboBoxid_tipo_llamadaFK_IdTipoLlamadaGuiaRemision.getSelectedItem()!=null){this.id_tipo_llamadaFK_IdTipoLlamada=((TipoLlamada)this.jComboBoxid_tipo_llamadaFK_IdTipoLlamadaGuiaRemision.getSelectedItem()).getId();}
		if(this.jComboBoxid_tipo_precioFK_IdTipoPrecioGuiaRemision.getSelectedItem()!=null){this.id_tipo_precioFK_IdTipoPrecio=((TipoPrecio)this.jComboBoxid_tipo_precioFK_IdTipoPrecioGuiaRemision.getSelectedItem()).getId();}
		if(this.jComboBoxid_transporteFK_IdTransporteGuiaRemision.getSelectedItem()!=null){this.id_transporteFK_IdTransporte=((Transporte)this.jComboBoxid_transporteFK_IdTransporteGuiaRemision.getSelectedItem()).getId();}
		if(this.jComboBoxid_transportistaFK_IdTransportistaGuiaRemision.getSelectedItem()!=null){this.id_transportistaFK_IdTransportista=((Transportista)this.jComboBoxid_transportistaFK_IdTransportistaGuiaRemision.getSelectedItem()).getId();}
		if(this.jComboBoxid_vendedorFK_IdVendedorGuiaRemision.getSelectedItem()!=null){this.id_vendedorFK_IdVendedor=((Vendedor)this.jComboBoxid_vendedorFK_IdVendedorGuiaRemision.getSelectedItem()).getId();}
		
	}
	
	
	
	
	public void inicializarActualizarBindingBusquedasGuiaRemision(Boolean esInicializar) throws Exception {				
		if(GuiaRemisionJInternalFrame.ISBINDING_MANUAL) {
			
			this.inicializarActualizarBindingBusquedasManualGuiaRemision();			
			
		} else {
		}
	}		
		
	public void inicializarActualizarBindingTablaGuiaRemision() throws Exception {
		this.inicializarActualizarBindingTablaGuiaRemision(false);
	}
	
	
	public void inicializarActualizarBindingTablaOrderByGuiaRemision() {
		//TABLA OrderBy	
		TableColumn tableColumn=new TableColumn();
		Integer iWidthTableDefinicionOrderBy=0;			
			
		this.jInternalFrameOrderByGuiaRemision.getjTableDatosOrderBy().setModel(new TablaGeneralOrderByModel(this.arrOrderBy));
					
		//DEFINIR RENDERERS OrderBy
		tableColumn=this.jInternalFrameOrderByGuiaRemision.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderByGuiaRemision.getjTableDatosOrderBy(),OrderBy.ISSELECTED));			
		//tableColumn.addPropertyChangeListener(new GuiaRemisionPropertyChangeListener());
					
		tableColumn.setPreferredWidth(50); 	 
		tableColumn.setWidth(50); 	 
		tableColumn.setMinWidth(50);
		tableColumn.setMaxWidth(50);
				
		iWidthTableDefinicionOrderBy+=50;
					
		tableColumn=this.jInternalFrameOrderByGuiaRemision.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderByGuiaRemision.getjTableDatosOrderBy(),OrderBy.NOMBRE));
		//tableColumn.addPropertyChangeListener(new GuiaRemisionPropertyChangeListener());
					
		tableColumn.setPreferredWidth(150); 	 
		tableColumn.setWidth(150); 	 
		tableColumn.setMinWidth(150);
		tableColumn.setMaxWidth(150);
				
		iWidthTableDefinicionOrderBy+=150;
					
		//tableColumn=this.jTableDatosGuiaRemisionOrderBy.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosGuiaRemisionOrderBy,OrderBy.NOMBREDB));			
		////tableColumn.addPropertyChangeListener(new GuiaRemisionPropertyChangeListener());
								
		tableColumn=this.jInternalFrameOrderByGuiaRemision.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderByGuiaRemision.getjTableDatosOrderBy(),OrderBy.ESDESC));
		//tableColumn.addPropertyChangeListener(new GuiaRemisionPropertyChangeListener());
												
		tableColumn.setPreferredWidth(50); 	 
		tableColumn.setWidth(50); 	 
		tableColumn.setMinWidth(50);
		tableColumn.setMaxWidth(50);
				
		((AbstractTableModel) this.jInternalFrameOrderByGuiaRemision.getjTableDatosOrderBy().getModel()).fireTableDataChanged();
				
		iWidthTableDefinicionOrderBy+=50;
	}
	
	
	
	public void inicializarActualizarBindingTablaGuiaRemision(Boolean esInicializar) throws Exception {
		Boolean isNoExiste=false;
		Integer iCountNumeroColumnasNormal=0;
		Integer iCountNumeroColumnasFk=0;
		
		this.iWidthTableDefinicion=0;
		
		int iSizeTabla=0;
		
		iSizeTabla=this.getSizeTablaDatos();
		
	if(esInicializar || ConstantesSwing.FORZAR_INICIALIZAR_TABLA) {//esInicializar
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			isNoExiste=guiaremisionLogic.getGuiaRemisions().size()==0;
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			isNoExiste=guiaremisions.size()==0;
		}
		//ARCHITECTURE
			
		if(isNoExiste) {
			if(this.iNumeroPaginacion-this.iNumeroPaginacion>0) {
				this.iNumeroPaginacion-=this.iNumeroPaginacion;
			}
		}
		
		TableColumn tableColumn=new TableColumn();
		
		if(GuiaRemisionJInternalFrame.ISBINDING_MANUAL_TABLA) {
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.jTableDatosGuiaRemision.setModel(new GuiaRemisionModel(this.guiaremisionLogic.getGuiaRemisions(),this));
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.jTableDatosGuiaRemision.setModel(new GuiaRemisionModel(this.guiaremisions,this));
			}
			//ARCHITECTURE
			
							
			
			
			if(this.jInternalFrameOrderByGuiaRemision!=null && this.jInternalFrameOrderByGuiaRemision.getjTableDatosOrderBy()!=null) {
				this.inicializarActualizarBindingTablaOrderByGuiaRemision();
			}
			
								
			//DEFINIR RENDERERS
			tableColumn=this.jTableDatosGuiaRemision.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosGuiaRemision,Constantes2.S_SELECCIONAR));
			//tableColumn.addPropertyChangeListener(new GuiaRemisionPropertyChangeListener());
			tableColumn.setCellRenderer(new BooleanRenderer(true,"Seleccionar "+GuiaRemisionConstantesFunciones.SCLASSWEBTITULO,guiaremisionConstantesFunciones.resaltarSeleccionarGuiaRemision,iSizeTabla,true,false,"","",this));
			tableColumn.setCellEditor(new BooleanEditorRenderer(true,"Seleccionar "+GuiaRemisionConstantesFunciones.SCLASSWEBTITULO,guiaremisionConstantesFunciones.resaltarSeleccionarGuiaRemision,false,"","",this));			
			
			tableColumn.setPreferredWidth(50); 	 
			tableColumn.setWidth(50); 	 
			tableColumn.setMinWidth(50); 
			tableColumn.setMaxWidth(50); 
			
			this.iWidthTableDefinicion+=50;
			
			


			tableColumn=this.jTableDatosGuiaRemision.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosGuiaRemision,GuiaRemisionConstantesFunciones.LABEL_ID));

		if(this.guiaremisionConstantesFunciones.mostraridGuiaRemision && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,GuiaRemisionConstantesFunciones.LABEL_ID,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.guiaremisionConstantesFunciones.resaltaridGuiaRemision,this.guiaremisionConstantesFunciones.activaridGuiaRemision,iSizeTabla,this,true,"idGuiaRemision","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.guiaremisionConstantesFunciones.resaltaridGuiaRemision,this.guiaremisionConstantesFunciones.activaridGuiaRemision,this,true,"idGuiaRemision","BASICO",false));

			tableColumn.setPreferredWidth(50);
			tableColumn.setWidth(50);
			tableColumn.setMinWidth(50);
			tableColumn.setMaxWidth(50);

			this.iWidthTableDefinicion+=50;
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosGuiaRemision.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosGuiaRemision,GuiaRemisionConstantesFunciones.LABEL_IDEMPRESA));

		if(this.guiaremisionConstantesFunciones.mostrarid_empresaGuiaRemision && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,GuiaRemisionConstantesFunciones.LABEL_IDEMPRESA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new EmpresaTableCell(this.empresasForeignKey,this.guiaremisionConstantesFunciones.resaltarid_empresaGuiaRemision,this,this.guiaremisionConstantesFunciones.activarid_empresaGuiaRemision,iSizeTabla));
			tableColumn.setCellEditor(new EmpresaTableCell(this.empresasForeignKey,this.guiaremisionConstantesFunciones.resaltarid_empresaGuiaRemision,this,this.guiaremisionConstantesFunciones.activarid_empresaGuiaRemision,false,"id_empresaGuiaRemision","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new GuiaRemisionPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosGuiaRemision.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosGuiaRemision,GuiaRemisionConstantesFunciones.LABEL_IDSUCURSAL));

		if(this.guiaremisionConstantesFunciones.mostrarid_sucursalGuiaRemision && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,GuiaRemisionConstantesFunciones.LABEL_IDSUCURSAL,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new SucursalTableCell(this.sucursalsForeignKey,this.guiaremisionConstantesFunciones.resaltarid_sucursalGuiaRemision,this,this.guiaremisionConstantesFunciones.activarid_sucursalGuiaRemision,iSizeTabla));
			tableColumn.setCellEditor(new SucursalTableCell(this.sucursalsForeignKey,this.guiaremisionConstantesFunciones.resaltarid_sucursalGuiaRemision,this,this.guiaremisionConstantesFunciones.activarid_sucursalGuiaRemision,false,"id_sucursalGuiaRemision","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new GuiaRemisionPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosGuiaRemision.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosGuiaRemision,GuiaRemisionConstantesFunciones.LABEL_IDEJERCICIO));

		if(this.guiaremisionConstantesFunciones.mostrarid_ejercicioGuiaRemision && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,GuiaRemisionConstantesFunciones.LABEL_IDEJERCICIO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new EjercicioTableCell(this.ejerciciosForeignKey,this.guiaremisionConstantesFunciones.resaltarid_ejercicioGuiaRemision,this,this.guiaremisionConstantesFunciones.activarid_ejercicioGuiaRemision,iSizeTabla));
			tableColumn.setCellEditor(new EjercicioTableCell(this.ejerciciosForeignKey,this.guiaremisionConstantesFunciones.resaltarid_ejercicioGuiaRemision,this,this.guiaremisionConstantesFunciones.activarid_ejercicioGuiaRemision,false,"id_ejercicioGuiaRemision","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new GuiaRemisionPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosGuiaRemision.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosGuiaRemision,GuiaRemisionConstantesFunciones.LABEL_IDPERIODO));

		if(this.guiaremisionConstantesFunciones.mostrarid_periodoGuiaRemision && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,GuiaRemisionConstantesFunciones.LABEL_IDPERIODO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new PeriodoTableCell(this.periodosForeignKey,this.guiaremisionConstantesFunciones.resaltarid_periodoGuiaRemision,this,this.guiaremisionConstantesFunciones.activarid_periodoGuiaRemision,iSizeTabla));
			tableColumn.setCellEditor(new PeriodoTableCell(this.periodosForeignKey,this.guiaremisionConstantesFunciones.resaltarid_periodoGuiaRemision,this,this.guiaremisionConstantesFunciones.activarid_periodoGuiaRemision,false,"id_periodoGuiaRemision","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new GuiaRemisionPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosGuiaRemision.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosGuiaRemision,GuiaRemisionConstantesFunciones.LABEL_IDUSUARIO));

		if(this.guiaremisionConstantesFunciones.mostrarid_usuarioGuiaRemision && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,GuiaRemisionConstantesFunciones.LABEL_IDUSUARIO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new UsuarioTableCell(this.usuariosForeignKey,this.guiaremisionConstantesFunciones.resaltarid_usuarioGuiaRemision,this,this.guiaremisionConstantesFunciones.activarid_usuarioGuiaRemision,iSizeTabla));
			tableColumn.setCellEditor(new UsuarioTableCell(this.usuariosForeignKey,this.guiaremisionConstantesFunciones.resaltarid_usuarioGuiaRemision,this,this.guiaremisionConstantesFunciones.activarid_usuarioGuiaRemision,false,"id_usuarioGuiaRemision","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new GuiaRemisionPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosGuiaRemision.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosGuiaRemision,GuiaRemisionConstantesFunciones.LABEL_SECUENCIAL));

		if(this.guiaremisionConstantesFunciones.mostrarsecuencialGuiaRemision && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,GuiaRemisionConstantesFunciones.LABEL_SECUENCIAL,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.guiaremisionConstantesFunciones.resaltarsecuencialGuiaRemision,this.guiaremisionConstantesFunciones.activarsecuencialGuiaRemision,iSizeTabla,this,true,"secuencialGuiaRemision","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.guiaremisionConstantesFunciones.resaltarsecuencialGuiaRemision,this.guiaremisionConstantesFunciones.activarsecuencialGuiaRemision,this,true,"secuencialGuiaRemision","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new GuiaRemisionPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosGuiaRemision.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosGuiaRemision,GuiaRemisionConstantesFunciones.LABEL_FECHAEMISION));

		if(this.guiaremisionConstantesFunciones.mostrarfecha_emisionGuiaRemision && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,GuiaRemisionConstantesFunciones.LABEL_FECHAEMISION,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new DateRenderer(this.guiaremisionConstantesFunciones.resaltarfecha_emisionGuiaRemision,this.guiaremisionConstantesFunciones.activarfecha_emisionGuiaRemision,iSizeTabla,this,true,"fecha_emisionGuiaRemision","BASICO"));
			tableColumn.setCellEditor(new DateEditorRenderer(this.guiaremisionConstantesFunciones.resaltarfecha_emisionGuiaRemision,this.guiaremisionConstantesFunciones.activarfecha_emisionGuiaRemision,this,true,"fecha_emisionGuiaRemision","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30);
			//tableColumn.addPropertyChangeListener(new GuiaRemisionPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosGuiaRemision.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosGuiaRemision,GuiaRemisionConstantesFunciones.LABEL_IDFORMATO));

		if(this.guiaremisionConstantesFunciones.mostrarid_formatoGuiaRemision && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,GuiaRemisionConstantesFunciones.LABEL_IDFORMATO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new FormatoTableCell(this.formatosForeignKey,this.guiaremisionConstantesFunciones.resaltarid_formatoGuiaRemision,this,this.guiaremisionConstantesFunciones.activarid_formatoGuiaRemision,iSizeTabla));
			tableColumn.setCellEditor(new FormatoTableCell(this.formatosForeignKey,this.guiaremisionConstantesFunciones.resaltarid_formatoGuiaRemision,this,this.guiaremisionConstantesFunciones.activarid_formatoGuiaRemision,true,"id_formatoGuiaRemision","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new GuiaRemisionPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosGuiaRemision.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosGuiaRemision,GuiaRemisionConstantesFunciones.LABEL_IDTIPOPRECIO));

		if(this.guiaremisionConstantesFunciones.mostrarid_tipo_precioGuiaRemision && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,GuiaRemisionConstantesFunciones.LABEL_IDTIPOPRECIO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new TipoPrecioTableCell(this.tipopreciosForeignKey,this.guiaremisionConstantesFunciones.resaltarid_tipo_precioGuiaRemision,this,this.guiaremisionConstantesFunciones.activarid_tipo_precioGuiaRemision,iSizeTabla));
			tableColumn.setCellEditor(new TipoPrecioTableCell(this.tipopreciosForeignKey,this.guiaremisionConstantesFunciones.resaltarid_tipo_precioGuiaRemision,this,this.guiaremisionConstantesFunciones.activarid_tipo_precioGuiaRemision,true,"id_tipo_precioGuiaRemision","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new GuiaRemisionPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosGuiaRemision.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosGuiaRemision,GuiaRemisionConstantesFunciones.LABEL_IDMONEDA));

		if(this.guiaremisionConstantesFunciones.mostrarid_monedaGuiaRemision && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,GuiaRemisionConstantesFunciones.LABEL_IDMONEDA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new MonedaTableCell(this.monedasForeignKey,this.guiaremisionConstantesFunciones.resaltarid_monedaGuiaRemision,this,this.guiaremisionConstantesFunciones.activarid_monedaGuiaRemision,iSizeTabla));
			tableColumn.setCellEditor(new MonedaTableCell(this.monedasForeignKey,this.guiaremisionConstantesFunciones.resaltarid_monedaGuiaRemision,this,this.guiaremisionConstantesFunciones.activarid_monedaGuiaRemision,false,"id_monedaGuiaRemision","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new GuiaRemisionPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosGuiaRemision.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosGuiaRemision,GuiaRemisionConstantesFunciones.LABEL_NUMEROCAMION));

		if(this.guiaremisionConstantesFunciones.mostrarnumero_camionGuiaRemision && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,GuiaRemisionConstantesFunciones.LABEL_NUMEROCAMION,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.guiaremisionConstantesFunciones.resaltarnumero_camionGuiaRemision,this.guiaremisionConstantesFunciones.activarnumero_camionGuiaRemision,iSizeTabla,this,true,"numero_camionGuiaRemision","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.guiaremisionConstantesFunciones.resaltarnumero_camionGuiaRemision,this.guiaremisionConstantesFunciones.activarnumero_camionGuiaRemision,this,true,"numero_camionGuiaRemision","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new GuiaRemisionPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosGuiaRemision.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosGuiaRemision,GuiaRemisionConstantesFunciones.LABEL_IDCLIENTE));

		if(this.guiaremisionConstantesFunciones.mostrarid_clienteGuiaRemision && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,GuiaRemisionConstantesFunciones.LABEL_IDCLIENTE,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new ClienteTableCell(this.clientesForeignKey,this.guiaremisionConstantesFunciones.resaltarid_clienteGuiaRemision,this,this.guiaremisionConstantesFunciones.activarid_clienteGuiaRemision,iSizeTabla));
			tableColumn.setCellEditor(new ClienteTableCell(this.clientesForeignKey,this.guiaremisionConstantesFunciones.resaltarid_clienteGuiaRemision,this,this.guiaremisionConstantesFunciones.activarid_clienteGuiaRemision,true,"id_clienteGuiaRemision","CON_BUSQUEDA"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75);
			//tableColumn.addPropertyChangeListener(new GuiaRemisionPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosGuiaRemision.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosGuiaRemision,GuiaRemisionConstantesFunciones.LABEL_IDVENDEDOR));

		if(this.guiaremisionConstantesFunciones.mostrarid_vendedorGuiaRemision && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,GuiaRemisionConstantesFunciones.LABEL_IDVENDEDOR,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new VendedorTableCell(this.vendedorsForeignKey,this.guiaremisionConstantesFunciones.resaltarid_vendedorGuiaRemision,this,this.guiaremisionConstantesFunciones.activarid_vendedorGuiaRemision,iSizeTabla));
			tableColumn.setCellEditor(new VendedorTableCell(this.vendedorsForeignKey,this.guiaremisionConstantesFunciones.resaltarid_vendedorGuiaRemision,this,this.guiaremisionConstantesFunciones.activarid_vendedorGuiaRemision,true,"id_vendedorGuiaRemision","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new GuiaRemisionPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosGuiaRemision.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosGuiaRemision,GuiaRemisionConstantesFunciones.LABEL_IDFACTURA));

		if(this.guiaremisionConstantesFunciones.mostrarid_facturaGuiaRemision && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,GuiaRemisionConstantesFunciones.LABEL_IDFACTURA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new FacturaTableCell(this.facturasForeignKey,this.guiaremisionConstantesFunciones.resaltarid_facturaGuiaRemision,this,this.guiaremisionConstantesFunciones.activarid_facturaGuiaRemision,iSizeTabla));
			tableColumn.setCellEditor(new FacturaTableCell(this.facturasForeignKey,this.guiaremisionConstantesFunciones.resaltarid_facturaGuiaRemision,this,this.guiaremisionConstantesFunciones.activarid_facturaGuiaRemision,true,"id_facturaGuiaRemision","CON_BUSQUEDA"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new GuiaRemisionPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosGuiaRemision.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosGuiaRemision,GuiaRemisionConstantesFunciones.LABEL_IDTRANSPORTISTA));

		if(this.guiaremisionConstantesFunciones.mostrarid_transportistaGuiaRemision && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,GuiaRemisionConstantesFunciones.LABEL_IDTRANSPORTISTA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new TransportistaTableCell(this.transportistasForeignKey,this.guiaremisionConstantesFunciones.resaltarid_transportistaGuiaRemision,this,this.guiaremisionConstantesFunciones.activarid_transportistaGuiaRemision,iSizeTabla));
			tableColumn.setCellEditor(new TransportistaTableCell(this.transportistasForeignKey,this.guiaremisionConstantesFunciones.resaltarid_transportistaGuiaRemision,this,this.guiaremisionConstantesFunciones.activarid_transportistaGuiaRemision,true,"id_transportistaGuiaRemision","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new GuiaRemisionPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosGuiaRemision.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosGuiaRemision,GuiaRemisionConstantesFunciones.LABEL_IDENTIFICACION));

		if(this.guiaremisionConstantesFunciones.mostraridentificacionGuiaRemision && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,GuiaRemisionConstantesFunciones.LABEL_IDENTIFICACION,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.guiaremisionConstantesFunciones.resaltaridentificacionGuiaRemision,this.guiaremisionConstantesFunciones.activaridentificacionGuiaRemision,iSizeTabla,this,true,"identificacionGuiaRemision","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.guiaremisionConstantesFunciones.resaltaridentificacionGuiaRemision,this.guiaremisionConstantesFunciones.activaridentificacionGuiaRemision,this,true,"identificacionGuiaRemision","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new GuiaRemisionPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosGuiaRemision.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosGuiaRemision,GuiaRemisionConstantesFunciones.LABEL_FECHAORIGEN));

		if(this.guiaremisionConstantesFunciones.mostrarfecha_origenGuiaRemision && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,GuiaRemisionConstantesFunciones.LABEL_FECHAORIGEN,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new DateRenderer(this.guiaremisionConstantesFunciones.resaltarfecha_origenGuiaRemision,this.guiaremisionConstantesFunciones.activarfecha_origenGuiaRemision,iSizeTabla,this,true,"fecha_origenGuiaRemision","BASICO"));
			tableColumn.setCellEditor(new DateEditorRenderer(this.guiaremisionConstantesFunciones.resaltarfecha_origenGuiaRemision,this.guiaremisionConstantesFunciones.activarfecha_origenGuiaRemision,this,true,"fecha_origenGuiaRemision","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30);
			//tableColumn.addPropertyChangeListener(new GuiaRemisionPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosGuiaRemision.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosGuiaRemision,GuiaRemisionConstantesFunciones.LABEL_FECHADESTINO));

		if(this.guiaremisionConstantesFunciones.mostrarfecha_destinoGuiaRemision && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,GuiaRemisionConstantesFunciones.LABEL_FECHADESTINO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new DateRenderer(this.guiaremisionConstantesFunciones.resaltarfecha_destinoGuiaRemision,this.guiaremisionConstantesFunciones.activarfecha_destinoGuiaRemision,iSizeTabla,this,true,"fecha_destinoGuiaRemision","BASICO"));
			tableColumn.setCellEditor(new DateEditorRenderer(this.guiaremisionConstantesFunciones.resaltarfecha_destinoGuiaRemision,this.guiaremisionConstantesFunciones.activarfecha_destinoGuiaRemision,this,true,"fecha_destinoGuiaRemision","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30);
			//tableColumn.addPropertyChangeListener(new GuiaRemisionPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosGuiaRemision.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosGuiaRemision,GuiaRemisionConstantesFunciones.LABEL_TRANSPORTECODIGO));

		if(this.guiaremisionConstantesFunciones.mostrartransporte_codigoGuiaRemision && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,GuiaRemisionConstantesFunciones.LABEL_TRANSPORTECODIGO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.guiaremisionConstantesFunciones.resaltartransporte_codigoGuiaRemision,this.guiaremisionConstantesFunciones.activartransporte_codigoGuiaRemision,iSizeTabla,this,true,"transporte_codigoGuiaRemision","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.guiaremisionConstantesFunciones.resaltartransporte_codigoGuiaRemision,this.guiaremisionConstantesFunciones.activartransporte_codigoGuiaRemision,this,true,"transporte_codigoGuiaRemision","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new GuiaRemisionPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosGuiaRemision.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosGuiaRemision,GuiaRemisionConstantesFunciones.LABEL_CANTIDADBULTOS));

		if(this.guiaremisionConstantesFunciones.mostrarcantidad_bultosGuiaRemision && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,GuiaRemisionConstantesFunciones.LABEL_CANTIDADBULTOS,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.guiaremisionConstantesFunciones.resaltarcantidad_bultosGuiaRemision,this.guiaremisionConstantesFunciones.activarcantidad_bultosGuiaRemision,iSizeTabla,this,true,"cantidad_bultosGuiaRemision","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.guiaremisionConstantesFunciones.resaltarcantidad_bultosGuiaRemision,this.guiaremisionConstantesFunciones.activarcantidad_bultosGuiaRemision,this,true,"cantidad_bultosGuiaRemision","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new GuiaRemisionPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosGuiaRemision.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosGuiaRemision,GuiaRemisionConstantesFunciones.LABEL_IDCONSULTOR));

		if(this.guiaremisionConstantesFunciones.mostrarid_consultorGuiaRemision && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,GuiaRemisionConstantesFunciones.LABEL_IDCONSULTOR,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new ConsultorTableCell(this.consultorsForeignKey,this.guiaremisionConstantesFunciones.resaltarid_consultorGuiaRemision,this,this.guiaremisionConstantesFunciones.activarid_consultorGuiaRemision,iSizeTabla));
			tableColumn.setCellEditor(new ConsultorTableCell(this.consultorsForeignKey,this.guiaremisionConstantesFunciones.resaltarid_consultorGuiaRemision,this,this.guiaremisionConstantesFunciones.activarid_consultorGuiaRemision,true,"id_consultorGuiaRemision","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new GuiaRemisionPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosGuiaRemision.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosGuiaRemision,GuiaRemisionConstantesFunciones.LABEL_IDTRANSPORTE));

		if(this.guiaremisionConstantesFunciones.mostrarid_transporteGuiaRemision && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,GuiaRemisionConstantesFunciones.LABEL_IDTRANSPORTE,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new TransporteTableCell(this.transportesForeignKey,this.guiaremisionConstantesFunciones.resaltarid_transporteGuiaRemision,this,this.guiaremisionConstantesFunciones.activarid_transporteGuiaRemision,iSizeTabla));
			tableColumn.setCellEditor(new TransporteTableCell(this.transportesForeignKey,this.guiaremisionConstantesFunciones.resaltarid_transporteGuiaRemision,this,this.guiaremisionConstantesFunciones.activarid_transporteGuiaRemision,true,"id_transporteGuiaRemision","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new GuiaRemisionPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosGuiaRemision.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosGuiaRemision,GuiaRemisionConstantesFunciones.LABEL_IDSUBCLIENTE));

		if(this.guiaremisionConstantesFunciones.mostrarid_sub_clienteGuiaRemision && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,GuiaRemisionConstantesFunciones.LABEL_IDSUBCLIENTE,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new SubClienteTableCell(this.subclientesForeignKey,this.guiaremisionConstantesFunciones.resaltarid_sub_clienteGuiaRemision,this,this.guiaremisionConstantesFunciones.activarid_sub_clienteGuiaRemision,iSizeTabla));
			tableColumn.setCellEditor(new SubClienteTableCell(this.subclientesForeignKey,this.guiaremisionConstantesFunciones.resaltarid_sub_clienteGuiaRemision,this,this.guiaremisionConstantesFunciones.activarid_sub_clienteGuiaRemision,true,"id_sub_clienteGuiaRemision","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new GuiaRemisionPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosGuiaRemision.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosGuiaRemision,GuiaRemisionConstantesFunciones.LABEL_IDEMPLEADO));

		if(this.guiaremisionConstantesFunciones.mostrarid_empleadoGuiaRemision && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,GuiaRemisionConstantesFunciones.LABEL_IDEMPLEADO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new EmpleadoTableCell(this.empleadosForeignKey,this.guiaremisionConstantesFunciones.resaltarid_empleadoGuiaRemision,this,this.guiaremisionConstantesFunciones.activarid_empleadoGuiaRemision,iSizeTabla));
			tableColumn.setCellEditor(new EmpleadoTableCell(this.empleadosForeignKey,this.guiaremisionConstantesFunciones.resaltarid_empleadoGuiaRemision,this,this.guiaremisionConstantesFunciones.activarid_empleadoGuiaRemision,true,"id_empleadoGuiaRemision","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,100));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,100));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,100));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,100));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,100);
			//tableColumn.addPropertyChangeListener(new GuiaRemisionPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosGuiaRemision.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosGuiaRemision,GuiaRemisionConstantesFunciones.LABEL_IDCIUDADORIGEN));

		if(this.guiaremisionConstantesFunciones.mostrarid_ciudad_origenGuiaRemision && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,GuiaRemisionConstantesFunciones.LABEL_IDCIUDADORIGEN,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new CiudadTableCell(this.ciudadorigensForeignKey,this.guiaremisionConstantesFunciones.resaltarid_ciudad_origenGuiaRemision,this,this.guiaremisionConstantesFunciones.activarid_ciudad_origenGuiaRemision,iSizeTabla));
			tableColumn.setCellEditor(new CiudadTableCell(this.ciudadorigensForeignKey,this.guiaremisionConstantesFunciones.resaltarid_ciudad_origenGuiaRemision,this,this.guiaremisionConstantesFunciones.activarid_ciudad_origenGuiaRemision,true,"id_ciudad_origenGuiaRemision","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new GuiaRemisionPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosGuiaRemision.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosGuiaRemision,GuiaRemisionConstantesFunciones.LABEL_IDCIUDADDESTINO));

		if(this.guiaremisionConstantesFunciones.mostrarid_ciudad_destinoGuiaRemision && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,GuiaRemisionConstantesFunciones.LABEL_IDCIUDADDESTINO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new CiudadTableCell(this.ciudaddestinosForeignKey,this.guiaremisionConstantesFunciones.resaltarid_ciudad_destinoGuiaRemision,this,this.guiaremisionConstantesFunciones.activarid_ciudad_destinoGuiaRemision,iSizeTabla));
			tableColumn.setCellEditor(new CiudadTableCell(this.ciudaddestinosForeignKey,this.guiaremisionConstantesFunciones.resaltarid_ciudad_destinoGuiaRemision,this,this.guiaremisionConstantesFunciones.activarid_ciudad_destinoGuiaRemision,true,"id_ciudad_destinoGuiaRemision","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new GuiaRemisionPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosGuiaRemision.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosGuiaRemision,GuiaRemisionConstantesFunciones.LABEL_IDTIPOLLAMADA));

		if(this.guiaremisionConstantesFunciones.mostrarid_tipo_llamadaGuiaRemision && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,GuiaRemisionConstantesFunciones.LABEL_IDTIPOLLAMADA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new TipoLlamadaTableCell(this.tipollamadasForeignKey,this.guiaremisionConstantesFunciones.resaltarid_tipo_llamadaGuiaRemision,this,this.guiaremisionConstantesFunciones.activarid_tipo_llamadaGuiaRemision,iSizeTabla));
			tableColumn.setCellEditor(new TipoLlamadaTableCell(this.tipollamadasForeignKey,this.guiaremisionConstantesFunciones.resaltarid_tipo_llamadaGuiaRemision,this,this.guiaremisionConstantesFunciones.activarid_tipo_llamadaGuiaRemision,true,"id_tipo_llamadaGuiaRemision","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new GuiaRemisionPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosGuiaRemision.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosGuiaRemision,GuiaRemisionConstantesFunciones.LABEL_HORAINICIO));

		if(this.guiaremisionConstantesFunciones.mostrarhora_inicioGuiaRemision && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,GuiaRemisionConstantesFunciones.LABEL_HORAINICIO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TimeRenderer(this.guiaremisionConstantesFunciones.resaltarhora_inicioGuiaRemision,this.guiaremisionConstantesFunciones.activarhora_inicioGuiaRemision,iSizeTabla,this,true,"hora_inicioGuiaRemision","BASICO"));
			tableColumn.setCellEditor(new TimeEditorRenderer(this.guiaremisionConstantesFunciones.resaltarhora_inicioGuiaRemision,this.guiaremisionConstantesFunciones.activarhora_inicioGuiaRemision,iSizeTabla,this,true,"hora_inicioGuiaRemision","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30);
			//tableColumn.addPropertyChangeListener(new GuiaRemisionPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosGuiaRemision.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosGuiaRemision,GuiaRemisionConstantesFunciones.LABEL_HORAFIN));

		if(this.guiaremisionConstantesFunciones.mostrarhora_finGuiaRemision && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,GuiaRemisionConstantesFunciones.LABEL_HORAFIN,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TimeRenderer(this.guiaremisionConstantesFunciones.resaltarhora_finGuiaRemision,this.guiaremisionConstantesFunciones.activarhora_finGuiaRemision,iSizeTabla,this,true,"hora_finGuiaRemision","BASICO"));
			tableColumn.setCellEditor(new TimeEditorRenderer(this.guiaremisionConstantesFunciones.resaltarhora_finGuiaRemision,this.guiaremisionConstantesFunciones.activarhora_finGuiaRemision,iSizeTabla,this,true,"hora_finGuiaRemision","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30);
			//tableColumn.addPropertyChangeListener(new GuiaRemisionPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosGuiaRemision.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosGuiaRemision,GuiaRemisionConstantesFunciones.LABEL_CUPO));

		if(this.guiaremisionConstantesFunciones.mostrarcupoGuiaRemision && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,GuiaRemisionConstantesFunciones.LABEL_CUPO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.guiaremisionConstantesFunciones.resaltarcupoGuiaRemision,this.guiaremisionConstantesFunciones.activarcupoGuiaRemision,iSizeTabla,this,true,"cupoGuiaRemision","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.guiaremisionConstantesFunciones.resaltarcupoGuiaRemision,this.guiaremisionConstantesFunciones.activarcupoGuiaRemision,this,true,"cupoGuiaRemision","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new GuiaRemisionPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosGuiaRemision.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosGuiaRemision,GuiaRemisionConstantesFunciones.LABEL_SALDO));

		if(this.guiaremisionConstantesFunciones.mostrarsaldoGuiaRemision && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,GuiaRemisionConstantesFunciones.LABEL_SALDO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.guiaremisionConstantesFunciones.resaltarsaldoGuiaRemision,this.guiaremisionConstantesFunciones.activarsaldoGuiaRemision,iSizeTabla,this,true,"saldoGuiaRemision","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.guiaremisionConstantesFunciones.resaltarsaldoGuiaRemision,this.guiaremisionConstantesFunciones.activarsaldoGuiaRemision,this,true,"saldoGuiaRemision","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new GuiaRemisionPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosGuiaRemision.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosGuiaRemision,GuiaRemisionConstantesFunciones.LABEL_DOCUMENTO));

		if(this.guiaremisionConstantesFunciones.mostrardocumentoGuiaRemision && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,GuiaRemisionConstantesFunciones.LABEL_DOCUMENTO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.guiaremisionConstantesFunciones.resaltardocumentoGuiaRemision,this.guiaremisionConstantesFunciones.activardocumentoGuiaRemision,iSizeTabla,this,true,"documentoGuiaRemision","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.guiaremisionConstantesFunciones.resaltardocumentoGuiaRemision,this.guiaremisionConstantesFunciones.activardocumentoGuiaRemision,this,true,"documentoGuiaRemision","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new GuiaRemisionPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosGuiaRemision.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosGuiaRemision,GuiaRemisionConstantesFunciones.LABEL_DISPONIBLE));

		if(this.guiaremisionConstantesFunciones.mostrardisponibleGuiaRemision && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,GuiaRemisionConstantesFunciones.LABEL_DISPONIBLE,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.guiaremisionConstantesFunciones.resaltardisponibleGuiaRemision,this.guiaremisionConstantesFunciones.activardisponibleGuiaRemision,iSizeTabla,this,true,"disponibleGuiaRemision","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.guiaremisionConstantesFunciones.resaltardisponibleGuiaRemision,this.guiaremisionConstantesFunciones.activardisponibleGuiaRemision,this,true,"disponibleGuiaRemision","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new GuiaRemisionPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosGuiaRemision.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosGuiaRemision,GuiaRemisionConstantesFunciones.LABEL_DESCRIPCION));

		if(this.guiaremisionConstantesFunciones.mostrardescripcionGuiaRemision && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,GuiaRemisionConstantesFunciones.LABEL_DESCRIPCION,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.guiaremisionConstantesFunciones.resaltardescripcionGuiaRemision,this.guiaremisionConstantesFunciones.activardescripcionGuiaRemision,iSizeTabla,this,true,"descripcionGuiaRemision","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.guiaremisionConstantesFunciones.resaltardescripcionGuiaRemision,this.guiaremisionConstantesFunciones.activardescripcionGuiaRemision,this,true,"descripcionGuiaRemision","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new GuiaRemisionPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosGuiaRemision.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosGuiaRemision,GuiaRemisionConstantesFunciones.LABEL_TOTALIVA));

		if(this.guiaremisionConstantesFunciones.mostrartotal_ivaGuiaRemision && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,GuiaRemisionConstantesFunciones.LABEL_TOTALIVA,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.guiaremisionConstantesFunciones.resaltartotal_ivaGuiaRemision,this.guiaremisionConstantesFunciones.activartotal_ivaGuiaRemision,iSizeTabla,this,true,"total_ivaGuiaRemision","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.guiaremisionConstantesFunciones.resaltartotal_ivaGuiaRemision,this.guiaremisionConstantesFunciones.activartotal_ivaGuiaRemision,this,true,"total_ivaGuiaRemision","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new GuiaRemisionPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosGuiaRemision.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosGuiaRemision,GuiaRemisionConstantesFunciones.LABEL_TOTALSINIVA));

		if(this.guiaremisionConstantesFunciones.mostrartotal_sin_ivaGuiaRemision && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,GuiaRemisionConstantesFunciones.LABEL_TOTALSINIVA,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.guiaremisionConstantesFunciones.resaltartotal_sin_ivaGuiaRemision,this.guiaremisionConstantesFunciones.activartotal_sin_ivaGuiaRemision,iSizeTabla,this,true,"total_sin_ivaGuiaRemision","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.guiaremisionConstantesFunciones.resaltartotal_sin_ivaGuiaRemision,this.guiaremisionConstantesFunciones.activartotal_sin_ivaGuiaRemision,this,true,"total_sin_ivaGuiaRemision","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new GuiaRemisionPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosGuiaRemision.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosGuiaRemision,GuiaRemisionConstantesFunciones.LABEL_DESCUENTO));

		if(this.guiaremisionConstantesFunciones.mostrardescuentoGuiaRemision && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,GuiaRemisionConstantesFunciones.LABEL_DESCUENTO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.guiaremisionConstantesFunciones.resaltardescuentoGuiaRemision,this.guiaremisionConstantesFunciones.activardescuentoGuiaRemision,iSizeTabla,this,true,"descuentoGuiaRemision","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.guiaremisionConstantesFunciones.resaltardescuentoGuiaRemision,this.guiaremisionConstantesFunciones.activardescuentoGuiaRemision,this,true,"descuentoGuiaRemision","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new GuiaRemisionPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosGuiaRemision.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosGuiaRemision,GuiaRemisionConstantesFunciones.LABEL_FLETE));

		if(this.guiaremisionConstantesFunciones.mostrarfleteGuiaRemision && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,GuiaRemisionConstantesFunciones.LABEL_FLETE,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.guiaremisionConstantesFunciones.resaltarfleteGuiaRemision,this.guiaremisionConstantesFunciones.activarfleteGuiaRemision,iSizeTabla,this,true,"fleteGuiaRemision","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.guiaremisionConstantesFunciones.resaltarfleteGuiaRemision,this.guiaremisionConstantesFunciones.activarfleteGuiaRemision,this,true,"fleteGuiaRemision","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new GuiaRemisionPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosGuiaRemision.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosGuiaRemision,GuiaRemisionConstantesFunciones.LABEL_OTRO));

		if(this.guiaremisionConstantesFunciones.mostrarotroGuiaRemision && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,GuiaRemisionConstantesFunciones.LABEL_OTRO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.guiaremisionConstantesFunciones.resaltarotroGuiaRemision,this.guiaremisionConstantesFunciones.activarotroGuiaRemision,iSizeTabla,this,true,"otroGuiaRemision","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.guiaremisionConstantesFunciones.resaltarotroGuiaRemision,this.guiaremisionConstantesFunciones.activarotroGuiaRemision,this,true,"otroGuiaRemision","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new GuiaRemisionPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosGuiaRemision.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosGuiaRemision,GuiaRemisionConstantesFunciones.LABEL_FINANCIAMIENTO));

		if(this.guiaremisionConstantesFunciones.mostrarfinanciamientoGuiaRemision && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,GuiaRemisionConstantesFunciones.LABEL_FINANCIAMIENTO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.guiaremisionConstantesFunciones.resaltarfinanciamientoGuiaRemision,this.guiaremisionConstantesFunciones.activarfinanciamientoGuiaRemision,iSizeTabla,this,true,"financiamientoGuiaRemision","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.guiaremisionConstantesFunciones.resaltarfinanciamientoGuiaRemision,this.guiaremisionConstantesFunciones.activarfinanciamientoGuiaRemision,this,true,"financiamientoGuiaRemision","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new GuiaRemisionPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosGuiaRemision.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosGuiaRemision,GuiaRemisionConstantesFunciones.LABEL_IVA));

		if(this.guiaremisionConstantesFunciones.mostrarivaGuiaRemision && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,GuiaRemisionConstantesFunciones.LABEL_IVA,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.guiaremisionConstantesFunciones.resaltarivaGuiaRemision,this.guiaremisionConstantesFunciones.activarivaGuiaRemision,iSizeTabla,this,true,"ivaGuiaRemision","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.guiaremisionConstantesFunciones.resaltarivaGuiaRemision,this.guiaremisionConstantesFunciones.activarivaGuiaRemision,this,true,"ivaGuiaRemision","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new GuiaRemisionPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosGuiaRemision.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosGuiaRemision,GuiaRemisionConstantesFunciones.LABEL_TOTAL));

		if(this.guiaremisionConstantesFunciones.mostrartotalGuiaRemision && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,GuiaRemisionConstantesFunciones.LABEL_TOTAL,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.guiaremisionConstantesFunciones.resaltartotalGuiaRemision,this.guiaremisionConstantesFunciones.activartotalGuiaRemision,iSizeTabla,this,true,"totalGuiaRemision","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.guiaremisionConstantesFunciones.resaltartotalGuiaRemision,this.guiaremisionConstantesFunciones.activartotalGuiaRemision,this,true,"totalGuiaRemision","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new GuiaRemisionPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}
			
		} else {
		}			
					
		if(!this.guiaremisionSessionBean.getEsGuardarRelacionado()
			&& !this.esParaBusquedaForeignKey) {
			

			if(this.isTienePermisosDetalleGuiaRemision && this.guiaremisionConstantesFunciones.mostrarDetalleGuiaRemisionGuiaRemision && !GuiaRemisionConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Detalle Guia Remisiones");
				tableColumn.setHeaderValue("Detalle Guia Remisiones");
				tableColumn.setCellRenderer(new DetalleGuiaRemisionTableCell(guiaremisionConstantesFunciones.resaltarDetalleGuiaRemisionGuiaRemision,this,this.guiaremisionConstantesFunciones.activarDetalleGuiaRemisionGuiaRemision));
				tableColumn.setCellEditor(new DetalleGuiaRemisionTableCell(guiaremisionConstantesFunciones.resaltarDetalleGuiaRemisionGuiaRemision,this,this.guiaremisionConstantesFunciones.activarDetalleGuiaRemisionGuiaRemision));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosGuiaRemision.addColumn(tableColumn);
			}
		}
		
		if(true) {
			String sLabelColumnAccion="Editar";
			String sLabelColumnAccionEli="Eli";
			
			if(this.esParaBusquedaForeignKey)  {
				sLabelColumnAccion="Seleccionar";
				
				//LO MISMO QUE ELSE
				tableColumn= new TableColumn();
				tableColumn.setIdentifier(sLabelColumnAccion);
				tableColumn.setHeaderValue(sLabelColumnAccion);
				tableColumn.setCellRenderer(new IdTableCell(this,false,false,this.guiaremisionSessionBean.getEsGuardarRelacionado(),iSizeTabla));
				tableColumn.setCellEditor(new IdTableCell(this,false,false,this.guiaremisionSessionBean.getEsGuardarRelacionado(),iSizeTabla));
	
				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				
				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
				
				this.jTableDatosGuiaRemision.addColumn(tableColumn);
			
			} else {				
				
				//LO MISMO QUE IF
				
				//tableColumn= new TableColumn();
				//tableColumn.setIdentifier(sLabelColumnAccion);
				//tableColumn.setHeaderValue(sLabelColumnAccion);
				//tableColumn.setCellRenderer(new IdTableCell(this,false,false,this.guiaremisionSessionBean.getEsGuardarRelacionado(),iSizeTabla));
				//tableColumn.setCellEditor(new IdTableCell(this,false,false,this.guiaremisionSessionBean.getEsGuardarRelacionado(),iSizeTabla));
		
				//tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				//tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				//tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				//tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				
				//this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
				
				//this.jTableDatosGuiaRemision.addColumn(tableColumn);				
					
				//ELIMINAR
				if(this.isPermisoEliminarGuiaRemision && this.isPermisoGuardarCambiosGuiaRemision) {
					//tableColumn= new TableColumn();
					//tableColumn.setIdentifier(Constantes2.S_ELI);
					//tableColumn.setHeaderValue(sLabelColumnAccionEli);
					//tableColumn.setCellRenderer(new IdTableCell(this,false,true,this.guiaremisionSessionBean.getEsGuardarRelacionado(),iSizeTabla));
					//tableColumn.setCellEditor(new IdTableCell(this,false,true,this.guiaremisionSessionBean.getEsGuardarRelacionado(),iSizeTabla));
			
					//tableColumn.setPreferredWidth(65); 	 
					//tableColumn.setWidth(65); 	 
					//tableColumn.setMinWidth(65); 
					//tableColumn.setMaxWidth(65);
					
					//this.iWidthTableDefinicion+=65;
						
					//this.jTableDatosGuiaRemision.addColumn(tableColumn);
				}
			}			
						
			if(this.conMaximoRelaciones && this.guiaremisionSessionBean.getConGuardarRelaciones()) {
				if(this.conFuncionalidadRelaciones) {
					tableColumn= new TableColumn();
					tableColumn.setIdentifier("Editar Rel");
					tableColumn.setHeaderValue("Editar Rel");
					tableColumn.setCellRenderer(new IdTableCell(this,true,false,iSizeTabla));
					tableColumn.setCellEditor(new IdTableCell(this,true,false,iSizeTabla));
		
					tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
					tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
					tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 
					tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 
					
					this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
				
					this.jTableDatosGuiaRemision.addColumn(tableColumn);
				}
			}
			
			/*
			tableColumn= new TableColumn();
			tableColumn.setIdentifier(Constantes2.S_SELECCIONAR);
			tableColumn.setHeaderValue(Constantes2.S_SELECCIONAR);
			tableColumn.setCellRenderer(new IdSeleccionarTableCell(this));
			tableColumn.setCellEditor(new IdSeleccionarTableCell(this));
			
			tableColumn.setPreferredWidth(30); 	 
			tableColumn.setWidth(30); 	 
			tableColumn.setMinWidth(30); 
			
			this.iWidthTableDefinicion+=30;
			
			this.jTableDatosGuiaRemision.addColumn(tableColumn);
			*/
		}
		
		Integer iUltimaColumna=0;//1
		Integer iNuevaPosicionColumna=0;
		
		
		//PERMITE ELIMINAR SIMPLE
		if(!this.esParaBusquedaForeignKey)  {
			if(this.isPermisoEliminarGuiaRemision && this.isPermisoGuardarCambiosGuiaRemision) {
				//iUltimaColumna++;
			}	
		}
		
		//PERMITE EDITAR SIMPLE
		//iUltimaColumna++;	
		
				
		if(this.conFuncionalidadRelaciones) {
			if(this.conMaximoRelaciones && this.guiaremisionSessionBean.getConGuardarRelaciones()) {			
				//PERMITE EDITAR RELACIONES
				iUltimaColumna++;//2
			}
		}
		
		//MOVIA SELECCIONAR
		//iUltimaColumna++;
		
		if(!this.esParaBusquedaForeignKey)  {
			if(this.isPermisoEliminarGuiaRemision && this.isPermisoGuardarCambiosGuiaRemision) {
				////REUBICA ELIMINAR SIMPLE
				//jTableDatosGuiaRemision.moveColumn(this.jTableDatosGuiaRemision.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1,-2 o -3
					
				//iUltimaColumna--;
			}
		}
		//REUBICA EDITAR SIMPLE
		//jTableDatosGuiaRemision.moveColumn(this.jTableDatosGuiaRemision.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1,-2 o -3				
		
		
		if(this.conFuncionalidadRelaciones) {
			if(this.conMaximoRelaciones && this.guiaremisionSessionBean.getConGuardarRelaciones()) {	
				if(iUltimaColumna>1) {
					iUltimaColumna--;
				}
				
				//iNuevaPosicionColumna++;
				
				//REUBICA EDITAR RELACIONES
				jTableDatosGuiaRemision.moveColumn(this.jTableDatosGuiaRemision.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1
			}
		}
		
		
		//REUBICABA SELECCIONAR
		/*
		if(iUltimaColumna>1) {
			iUltimaColumna--;
		}
		
		//iNuevaPosicionColumna++;
			
		//REUBICA SELECCIONAR FILA CHECK
		jTableDatosGuiaRemision.moveColumn(this.jTableDatosGuiaRemision.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1		
		*/
		
		//DEFINEN HEADERS
		final TableCellRenderer tableHeaderDefaultCellRenderer = this.jTableDatosGuiaRemision.getTableHeader().getDefaultRenderer();
		
		this.jTableDatosGuiaRemision.getTableHeader().setDefaultRenderer(new TableCellRendererHeader(this.jTableDatosGuiaRemision,tableHeaderDefaultCellRenderer));
	    
		TableColumn column=null;
		
		if(!GuiaRemisionJInternalFrame.ISBINDING_MANUAL_TABLA) {
			for(int i = 0; i < this.jTableDatosGuiaRemision.getColumnModel().getColumnCount(); i++) { 
				column = this.jTableDatosGuiaRemision.getColumnModel().getColumn(i); 
				
				if(column.getIdentifier()!=null) {
					//SI SE UTILIZA UN HEADER ES GENERICO
					//column.setHeaderRenderer(new HeaderRenderer(column.getIdentifier().toString()));
				}
				
				if(column.getIdentifier()!=null && column.getIdentifier().equals(Constantes2.S_ELI)) {
					continue;
				}
				
				if(column.getIdentifier()!=null && column.getIdentifier().equals(Constantes2.S_SELECCIONAR)) {
					if(!GuiaRemisionJInternalFrame.ISBINDING_MANUAL_TABLA) {
						column.setPreferredWidth(50); 	 
						column.setWidth(50); 	 
						column.setMinWidth(50); 	
						column.setMaxWidth(50); 
						
						this.iWidthTableDefinicion+=50;
					}
					
				} else {
					if(!GuiaRemisionJInternalFrame.ISBINDING_MANUAL_TABLA) {
						column.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
						column.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
						column.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 	
						column.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 	
						
						this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
					}
				}
			}
		}
		
		this.jTableDatosGuiaRemision.setSelectionBackground(FuncionesSwing.getColorSelectedBackground());
		this.jTableDatosGuiaRemision.setSelectionForeground(FuncionesSwing.getColorSelectedForeground());
		
		/*
		this.jTableDatosGuiaRemision.setDefaultRenderer(Object.class, new DefaultTableCellRenderer() {
			private static final long serialVersionUID = 1L;
			
		    @Override
		    public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
		        final Component component= super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
		        //POR DEFECTO ES MEJOR, SE PIERDE DATOS AL SELECCIONAR BLANCO LETRAS BLANCAS
				component.setBackground(row % 2 == 0 ? FuncionesSwing.getColorTextFields(Constantes2.S_FONDOCONTROL_COLOR) : Funciones2.getColorFilaTabla2()); //FuncionesSwing.getColorTextFields(Constantes2.S_FONDOCONTROL_COLOR)
				component.setForeground(Funciones2.getColorTextoFilaTabla1());
				
				try {
		        	int iSize=-999;
		        	
		        	if(conTotales) {
						//FILA TOTALES OTRO COLOR, SI TABLA NO ES UNO A UNO
			        	if(Constantes.ISUSAEJBLOGICLAYER) {
							iSize=guiaremisionLogic.getGuiaRemisions().size()-1;
								
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							iSize=guiaremisions.size()-1;
						}
						
						if(iSize==row) {
							component.setBackground(Funciones2.getColorFilaTablaTotales());
						}
		        	}
					
					//POR EFICIENCIA NO UTILIZAR					
					//if (component instanceof JComponent) {
		            //    JComponent jcomponent = (JComponent) component;		                 		                
		        	//}				
					
				} catch (Exception e) {
					e.printStackTrace();
				}
				
		        return component;
		    }
		});
		*/
		
		//ESTA EN LA DEFINICION DE LA TABLA
		//this.jTableDatosGuiaRemision.setRowHeight(Constantes.ISWING_ALTO_FILA_TABLA);
		
		/*
		column=this.jTableDatosGuiaRemision.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSistema,Constantes2.S_SELECCIONAR));
		
		if(column!=null) {
			column.setPreferredWidth(25); 	 
			column.setWidth(25); 	 
			column.setMinWidth(25); 	
		}
		*/
			
			//CopyTableToTableTotal();
		} else {
			
			this.actualizarVisualTableDatosGuiaRemision();
			
		}
	}
	
	/*
	//COPY_TABLES
	/* FALTARIA RESOLVER:
	   1 SOLO SCROLL PARA 2 TABLAS
	   COPIA EXACTA DE COLUMNAS DE UNA TABLA A OTRA, SI SE MODIFICA TAMANIO TAMBIEN LA OTRA
	*/
	
	public void jButtonIdActionPerformed(ActionEvent evt,int rowIndex,Boolean esRelaciones,Boolean esEliminar) { 
		try {
			if(!esEliminar) {
				this.estaModoSeleccionar=true;
				
				//this.isEsNuevoGuiaRemision=false;
					
				GuiaRemisionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.SELECTED,"FORM",this.guiaremision,new Object(),this.guiaremisionParameterGeneral,this.guiaremisionReturnGeneral);
			
				if(this.guiaremisionSessionBean.getConGuardarRelaciones()) {
					this.dStart=(double)System.currentTimeMillis();
				}
				
				if(this.jInternalFrameDetalleFormGuiaRemision==null) {
					this.inicializarFormDetalle();
				}
				
				this.inicializarInvalidValues();
				
				int intSelectedRow = 0;
				
				if(rowIndex>=0) {
					intSelectedRow=rowIndex;
					this.jTableDatosGuiaRemision.getSelectionModel().setSelectionInterval(intSelectedRow, intSelectedRow);
				} else {	
					intSelectedRow=this.jTableDatosGuiaRemision.getSelectedRow();	       
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremision =(GuiaRemision) this.guiaremisionLogic.getGuiaRemisions().toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.guiaremision =(GuiaRemision) this.guiaremisions.toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//PUEDE SER PARA DUPLICADO O NUEVO TABLA
				
				if(this.guiaremision.getsType().equals("DUPLICADO")
				   || this.guiaremision.getsType().equals("NUEVO_GUARDAR_CAMBIOS")) {
					
					this.isEsNuevoGuiaRemision=true;
				
				} else {
					this.isEsNuevoGuiaRemision=false;	
				}
				
				//CONTROL VERSION ANTERIOR
				/*
				if(!this.guiaremisionSessionBean.getEsGuardarRelacionado()) {
					if(this.guiaremision.getId()>=0 && !this.guiaremision.getIsNew()) {						
						this.isEsNuevoGuiaRemision=false;
						
					} else {
						this.isEsNuevoGuiaRemision=true;
					}
					
				} else {
					//CONTROLAR PARA RELACIONADO
				}
				*/
				
				//ESTABLECE SI ES RELACIONADO O NO 
				this.habilitarDeshabilitarTipoMantenimientoGuiaRemision(esRelaciones);						
				
				this.seleccionarGuiaRemision(evt,null,rowIndex);
				
				//SELECCIONA ACTUAL PERO AUN NO SE HA INGRESADO AL SISTEMA
				//SE DESHABILITA POR GUARDAR CAMBIOS
				/*
				if(this.guiaremision.getId()<0) {
					this.isEsNuevoGuiaRemision=true;
				}
				*/
				
				if(!this.esParaBusquedaForeignKey) {
					this.modificarGuiaRemision(evt,rowIndex,esRelaciones);
				} else {
					this.seleccionarGuiaRemision(evt,rowIndex);
				}	
				
				if(this.guiaremisionSessionBean.getConGuardarRelaciones()) {
					this.dEnd=(double)System.currentTimeMillis();					
					this.dDif=this.dEnd - this.dStart;
					
					if(Constantes.ISDEVELOPING) {
						System.out.println("Tiempo(ms) Seleccion GuiaRemision: " + this.dDif); 
					}
				}								
				
				GuiaRemisionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.SELECTED,"FORM",this.guiaremision,new Object(),this.guiaremisionParameterGeneral,this.guiaremisionReturnGeneral);
				
			} else {
				this.estaModoEliminarGuardarCambios=true;
				
				this.seleccionarGuiaRemision(evt,null,rowIndex);
				
				if(this.permiteMantenimiento(this.guiaremision)) {
					if(this.guiaremision.getId()>0) {
						this.guiaremision.setIsDeleted(true);
						
						this.guiaremisionsEliminados.add(this.guiaremision);
					}
					
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						this.guiaremisionLogic.getGuiaRemisions().remove(this.guiaremision);
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						this.guiaremisions.remove(this.guiaremision);				
					}
					
					
					((GuiaRemisionModel) this.jTableDatosGuiaRemision.getModel()).fireTableRowsDeleted(rowIndex,rowIndex);
					
					this.actualizarFilaTotales();
					
					this.inicializarActualizarBindingTablaGuiaRemision(false);					
				}								
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException2(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoSeleccionar=false;				
			this.estaModoEliminarGuardarCambios=false;
		}
	}
	
	
	public void seleccionarGuiaRemision(ActionEvent evt,javax.swing.event.ListSelectionEvent evt2,int rowIndex) throws Exception { 
		try {
			//SI PUEDE SER NUEVO Y SELECCIONAR (PARA DUPLICAR Y NUEVO TABLA)
			//if(!this.isEsNuevoGuiaRemision) {
			
			if(this.jInternalFrameDetalleFormGuiaRemision==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
				int intSelectedRow = 0;
				
				if(rowIndex>=0) {
					intSelectedRow=rowIndex;
					this.jTableDatosGuiaRemision.getSelectionModel().setSelectionInterval(intSelectedRow, intSelectedRow);
				} else {	
					intSelectedRow=this.jTableDatosGuiaRemision.getSelectedRow();	       
				}
				
				//CUANDO SE RECARGA TABLA TAMBIEN SE SELECCIONA PERO CON -1 POR LO QUE SE NECESITA VALIDAR ANTES
				if(intSelectedRow<0) {
					return;
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremision =(GuiaRemision) this.guiaremisionLogic.getGuiaRemisions().toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.guiaremision =(GuiaRemision) this.guiaremisions.toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
				}
				
				if(GuiaRemisionJInternalFrame.ISBINDING_MANUAL_TABLA) {
					this.setVariablesObjetoActualToFormularioGuiaRemision(this.guiaremision);
				}
				
				//ARCHITECTURE
				try {
					

					//Empresa
					if(!this.guiaremisionConstantesFunciones.cargarid_empresaGuiaRemision || this.guiaremisionConstantesFunciones.event_dependid_empresaGuiaRemision) {
						//this.cargarCombosEmpresasForeignKeyLista(" where id="+this.guiaremision.getid_empresa());
									//this.inicializarActualizarBindingGuiaRemision(false,false);
						this.empresasForeignKey=new ArrayList<Empresa>();

						if(guiaremision.getEmpresa()!=null) {
							this.empresasForeignKey.add(guiaremision.getEmpresa());
						}

						this.addItemDefectoCombosForeignKeyEmpresa();
						this.cargarCombosFrameEmpresasForeignKey("Todos");
					}
					this.setActualEmpresaForeignKey(this.guiaremision.getid_empresa(),false,"Formulario");

					//Sucursal
					if(!this.guiaremisionConstantesFunciones.cargarid_sucursalGuiaRemision || this.guiaremisionConstantesFunciones.event_dependid_sucursalGuiaRemision) {
						//this.cargarCombosSucursalsForeignKeyLista(" where id="+this.guiaremision.getid_sucursal());
									//this.inicializarActualizarBindingGuiaRemision(false,false);
						this.sucursalsForeignKey=new ArrayList<Sucursal>();

						if(guiaremision.getSucursal()!=null) {
							this.sucursalsForeignKey.add(guiaremision.getSucursal());
						}

						this.addItemDefectoCombosForeignKeySucursal();
						this.cargarCombosFrameSucursalsForeignKey("Todos");
					}
					this.setActualSucursalForeignKey(this.guiaremision.getid_sucursal(),false,"Formulario");

					//Ejercicio
					if(!this.guiaremisionConstantesFunciones.cargarid_ejercicioGuiaRemision || this.guiaremisionConstantesFunciones.event_dependid_ejercicioGuiaRemision) {
						//this.cargarCombosEjerciciosForeignKeyLista(" where id="+this.guiaremision.getid_ejercicio());
									//this.inicializarActualizarBindingGuiaRemision(false,false);
						this.ejerciciosForeignKey=new ArrayList<Ejercicio>();

						if(guiaremision.getEjercicio()!=null) {
							this.ejerciciosForeignKey.add(guiaremision.getEjercicio());
						}

						this.addItemDefectoCombosForeignKeyEjercicio();
						this.cargarCombosFrameEjerciciosForeignKey("Todos");
					}
					this.setActualEjercicioForeignKey(this.guiaremision.getid_ejercicio(),false,"Formulario");

					//Periodo
					if(!this.guiaremisionConstantesFunciones.cargarid_periodoGuiaRemision || this.guiaremisionConstantesFunciones.event_dependid_periodoGuiaRemision) {
						//this.cargarCombosPeriodosForeignKeyLista(" where id="+this.guiaremision.getid_periodo());
									//this.inicializarActualizarBindingGuiaRemision(false,false);
						this.periodosForeignKey=new ArrayList<Periodo>();

						if(guiaremision.getPeriodo()!=null) {
							this.periodosForeignKey.add(guiaremision.getPeriodo());
						}

						this.addItemDefectoCombosForeignKeyPeriodo();
						this.cargarCombosFramePeriodosForeignKey("Todos");
					}
					this.setActualPeriodoForeignKey(this.guiaremision.getid_periodo(),false,"Formulario");

					//Usuario
					if(!this.guiaremisionConstantesFunciones.cargarid_usuarioGuiaRemision || this.guiaremisionConstantesFunciones.event_dependid_usuarioGuiaRemision) {
						//this.cargarCombosUsuariosForeignKeyLista(" where id="+this.guiaremision.getid_usuario());
									//this.inicializarActualizarBindingGuiaRemision(false,false);
						this.usuariosForeignKey=new ArrayList<Usuario>();

						if(guiaremision.getUsuario()!=null) {
							this.usuariosForeignKey.add(guiaremision.getUsuario());
						}

						this.addItemDefectoCombosForeignKeyUsuario();
						this.cargarCombosFrameUsuariosForeignKey("Todos");
					}
					this.setActualUsuarioForeignKey(this.guiaremision.getid_usuario(),false,"Formulario");

					//Formato
					if(!this.guiaremisionConstantesFunciones.cargarid_formatoGuiaRemision || this.guiaremisionConstantesFunciones.event_dependid_formatoGuiaRemision) {
						//this.cargarCombosFormatosForeignKeyLista(" where id="+this.guiaremision.getid_formato());
									//this.inicializarActualizarBindingGuiaRemision(false,false);
						this.formatosForeignKey=new ArrayList<Formato>();

						if(guiaremision.getFormato()!=null) {
							this.formatosForeignKey.add(guiaremision.getFormato());
						}

						this.addItemDefectoCombosForeignKeyFormato();
						this.cargarCombosFrameFormatosForeignKey("Todos");
					}
					this.setActualFormatoForeignKey(this.guiaremision.getid_formato(),false,"Formulario");

					//TipoPrecio
					if(!this.guiaremisionConstantesFunciones.cargarid_tipo_precioGuiaRemision || this.guiaremisionConstantesFunciones.event_dependid_tipo_precioGuiaRemision) {
						//this.cargarCombosTipoPreciosForeignKeyLista(" where id="+this.guiaremision.getid_tipo_precio());
									//this.inicializarActualizarBindingGuiaRemision(false,false);
						this.tipopreciosForeignKey=new ArrayList<TipoPrecio>();

						if(guiaremision.getTipoPrecio()!=null) {
							this.tipopreciosForeignKey.add(guiaremision.getTipoPrecio());
						}

						this.addItemDefectoCombosForeignKeyTipoPrecio();
						this.cargarCombosFrameTipoPreciosForeignKey("Todos");
					}
					this.setActualTipoPrecioForeignKey(this.guiaremision.getid_tipo_precio(),false,"Formulario");

					//Moneda
					if(!this.guiaremisionConstantesFunciones.cargarid_monedaGuiaRemision || this.guiaremisionConstantesFunciones.event_dependid_monedaGuiaRemision) {
						//this.cargarCombosMonedasForeignKeyLista(" where id="+this.guiaremision.getid_moneda());
									//this.inicializarActualizarBindingGuiaRemision(false,false);
						this.monedasForeignKey=new ArrayList<Moneda>();

						if(guiaremision.getMoneda()!=null) {
							this.monedasForeignKey.add(guiaremision.getMoneda());
						}

						this.addItemDefectoCombosForeignKeyMoneda();
						this.cargarCombosFrameMonedasForeignKey("Todos");
					}
					this.setActualMonedaForeignKey(this.guiaremision.getid_moneda(),false,"Formulario");

					//Cliente
					if(!this.guiaremisionConstantesFunciones.cargarid_clienteGuiaRemision || this.guiaremisionConstantesFunciones.event_dependid_clienteGuiaRemision) {
						//this.cargarCombosClientesForeignKeyLista(" where id="+this.guiaremision.getid_cliente());
									//this.inicializarActualizarBindingGuiaRemision(false,false);
						this.clientesForeignKey=new ArrayList<Cliente>();

						if(guiaremision.getCliente()!=null) {
							this.clientesForeignKey.add(guiaremision.getCliente());
						}

						this.addItemDefectoCombosForeignKeyCliente();
						this.cargarCombosFrameClientesForeignKey("Todos");
					}
					this.setActualClienteForeignKey(this.guiaremision.getid_cliente(),false,"Formulario");

					//Vendedor
					if(!this.guiaremisionConstantesFunciones.cargarid_vendedorGuiaRemision || this.guiaremisionConstantesFunciones.event_dependid_vendedorGuiaRemision) {
						//this.cargarCombosVendedorsForeignKeyLista(" where id="+this.guiaremision.getid_vendedor());
									//this.inicializarActualizarBindingGuiaRemision(false,false);
						this.vendedorsForeignKey=new ArrayList<Vendedor>();

						if(guiaremision.getVendedor()!=null) {
							this.vendedorsForeignKey.add(guiaremision.getVendedor());
						}

						this.addItemDefectoCombosForeignKeyVendedor();
						this.cargarCombosFrameVendedorsForeignKey("Todos");
					}
					this.setActualVendedorForeignKey(this.guiaremision.getid_vendedor(),false,"Formulario");

					//Factura
					if(!this.guiaremisionConstantesFunciones.cargarid_facturaGuiaRemision || this.guiaremisionConstantesFunciones.event_dependid_facturaGuiaRemision) {
						//this.cargarCombosFacturasForeignKeyLista(" where id="+this.guiaremision.getid_factura());
									//this.inicializarActualizarBindingGuiaRemision(false,false);
						this.facturasForeignKey=new ArrayList<Factura>();

						if(guiaremision.getFactura()!=null) {
							this.facturasForeignKey.add(guiaremision.getFactura());
						}

						this.addItemDefectoCombosForeignKeyFactura();
						this.cargarCombosFrameFacturasForeignKey("Todos");
					}
					this.setActualFacturaForeignKey(this.guiaremision.getid_factura(),false,"Formulario");

					//Transportista
					if(!this.guiaremisionConstantesFunciones.cargarid_transportistaGuiaRemision || this.guiaremisionConstantesFunciones.event_dependid_transportistaGuiaRemision) {
						//this.cargarCombosTransportistasForeignKeyLista(" where id="+this.guiaremision.getid_transportista());
									//this.inicializarActualizarBindingGuiaRemision(false,false);
						this.transportistasForeignKey=new ArrayList<Transportista>();

						if(guiaremision.getTransportista()!=null) {
							this.transportistasForeignKey.add(guiaremision.getTransportista());
						}

						this.addItemDefectoCombosForeignKeyTransportista();
						this.cargarCombosFrameTransportistasForeignKey("Todos");
					}
					this.setActualTransportistaForeignKey(this.guiaremision.getid_transportista(),false,"Formulario");

					//Consultor
					if(!this.guiaremisionConstantesFunciones.cargarid_consultorGuiaRemision || this.guiaremisionConstantesFunciones.event_dependid_consultorGuiaRemision) {
						//this.cargarCombosConsultorsForeignKeyLista(" where id="+this.guiaremision.getid_consultor());
									//this.inicializarActualizarBindingGuiaRemision(false,false);
						this.consultorsForeignKey=new ArrayList<Consultor>();

						if(guiaremision.getConsultor()!=null) {
							this.consultorsForeignKey.add(guiaremision.getConsultor());
						}

						this.addItemDefectoCombosForeignKeyConsultor();
						this.cargarCombosFrameConsultorsForeignKey("Todos");
					}
					this.setActualConsultorForeignKey(this.guiaremision.getid_consultor(),false,"Formulario");

					//Transporte
					if(!this.guiaremisionConstantesFunciones.cargarid_transporteGuiaRemision || this.guiaremisionConstantesFunciones.event_dependid_transporteGuiaRemision) {
						//this.cargarCombosTransportesForeignKeyLista(" where id="+this.guiaremision.getid_transporte());
									//this.inicializarActualizarBindingGuiaRemision(false,false);
						this.transportesForeignKey=new ArrayList<Transporte>();

						if(guiaremision.getTransporte()!=null) {
							this.transportesForeignKey.add(guiaremision.getTransporte());
						}

						this.addItemDefectoCombosForeignKeyTransporte();
						this.cargarCombosFrameTransportesForeignKey("Todos");
					}
					this.setActualTransporteForeignKey(this.guiaremision.getid_transporte(),false,"Formulario");

					//SubCliente
					if(!this.guiaremisionConstantesFunciones.cargarid_sub_clienteGuiaRemision || this.guiaremisionConstantesFunciones.event_dependid_sub_clienteGuiaRemision) {
						//this.cargarCombosSubClientesForeignKeyLista(" where id="+this.guiaremision.getid_sub_cliente());
									//this.inicializarActualizarBindingGuiaRemision(false,false);
						this.subclientesForeignKey=new ArrayList<SubCliente>();

						if(guiaremision.getSubCliente()!=null) {
							this.subclientesForeignKey.add(guiaremision.getSubCliente());
						}

						this.addItemDefectoCombosForeignKeySubCliente();
						this.cargarCombosFrameSubClientesForeignKey("Todos");
					}
					this.setActualSubClienteForeignKey(this.guiaremision.getid_sub_cliente(),false,"Formulario");

					//Empleado
					if(!this.guiaremisionConstantesFunciones.cargarid_empleadoGuiaRemision || this.guiaremisionConstantesFunciones.event_dependid_empleadoGuiaRemision) {
						//this.cargarCombosEmpleadosForeignKeyLista(" where id="+this.guiaremision.getid_empleado());
									//this.inicializarActualizarBindingGuiaRemision(false,false);
						this.empleadosForeignKey=new ArrayList<Empleado>();

						if(guiaremision.getEmpleado()!=null) {
							this.empleadosForeignKey.add(guiaremision.getEmpleado());
						}

						this.addItemDefectoCombosForeignKeyEmpleado();
						this.cargarCombosFrameEmpleadosForeignKey("Todos");
					}
					this.setActualEmpleadoForeignKey(this.guiaremision.getid_empleado(),false,"Formulario");

					//CiudadOrigen
					if(!this.guiaremisionConstantesFunciones.cargarid_ciudad_origenGuiaRemision || this.guiaremisionConstantesFunciones.event_dependid_ciudad_origenGuiaRemision) {
						//this.cargarCombosCiudadOrigensForeignKeyLista(" where id="+this.guiaremision.getid_ciudad_origen());
									//this.inicializarActualizarBindingGuiaRemision(false,false);
						this.ciudadorigensForeignKey=new ArrayList<Ciudad>();

						if(guiaremision.getCiudadOrigen()!=null) {
							this.ciudadorigensForeignKey.add(guiaremision.getCiudadOrigen());
						}

						this.addItemDefectoCombosForeignKeyCiudadOrigen();
						this.cargarCombosFrameCiudadOrigensForeignKey("Todos");
					}
					this.setActualCiudadOrigenForeignKey(this.guiaremision.getid_ciudad_origen(),false,"Formulario");

					//CiudadDestino
					if(!this.guiaremisionConstantesFunciones.cargarid_ciudad_destinoGuiaRemision || this.guiaremisionConstantesFunciones.event_dependid_ciudad_destinoGuiaRemision) {
						//this.cargarCombosCiudadDestinosForeignKeyLista(" where id="+this.guiaremision.getid_ciudad_destino());
									//this.inicializarActualizarBindingGuiaRemision(false,false);
						this.ciudaddestinosForeignKey=new ArrayList<Ciudad>();

						if(guiaremision.getCiudadDestino()!=null) {
							this.ciudaddestinosForeignKey.add(guiaremision.getCiudadDestino());
						}

						this.addItemDefectoCombosForeignKeyCiudadDestino();
						this.cargarCombosFrameCiudadDestinosForeignKey("Todos");
					}
					this.setActualCiudadDestinoForeignKey(this.guiaremision.getid_ciudad_destino(),false,"Formulario");

					//TipoLlamada
					if(!this.guiaremisionConstantesFunciones.cargarid_tipo_llamadaGuiaRemision || this.guiaremisionConstantesFunciones.event_dependid_tipo_llamadaGuiaRemision) {
						//this.cargarCombosTipoLlamadasForeignKeyLista(" where id="+this.guiaremision.getid_tipo_llamada());
									//this.inicializarActualizarBindingGuiaRemision(false,false);
						this.tipollamadasForeignKey=new ArrayList<TipoLlamada>();

						if(guiaremision.getTipoLlamada()!=null) {
							this.tipollamadasForeignKey.add(guiaremision.getTipoLlamada());
						}

						this.addItemDefectoCombosForeignKeyTipoLlamada();
						this.cargarCombosFrameTipoLlamadasForeignKey("Todos");
					}
					this.setActualTipoLlamadaForeignKey(this.guiaremision.getid_tipo_llamada(),false,"Formulario");

					//TipoCambio
					if(!this.guiaremisionConstantesFunciones.cargarid_tipo_cambioGuiaRemision || this.guiaremisionConstantesFunciones.event_dependid_tipo_cambioGuiaRemision) {
						//this.cargarCombosTipoCambiosForeignKeyLista(" where id="+this.guiaremision.getid_tipo_cambio());
									//this.inicializarActualizarBindingGuiaRemision(false,false);
						this.tipocambiosForeignKey=new ArrayList<TipoCambio>();

						if(guiaremision.getTipoCambio()!=null) {
							this.tipocambiosForeignKey.add(guiaremision.getTipoCambio());
						}

						this.addItemDefectoCombosForeignKeyTipoCambio();
						this.cargarCombosFrameTipoCambiosForeignKey("Todos");
					}
					this.setActualTipoCambioForeignKey(this.guiaremision.getid_tipo_cambio(),false,"Formulario");
				} catch(Exception e) {
					throw e;
				}
				
				this.actualizarEstadoCeldasBotonesGuiaRemision("s", this.isGuardarCambiosEnLote, this.isEsMantenimientoRelacionado);
				
				//NO FUNCIONA BINDING PERO SE MANTIENE
				this.inicializarActualizarBindingBotonesGuiaRemision(false) ;
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualGuiaRemision() ;
			//}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setVariablesObjetoActualToFormularioTodoGuiaRemision(GuiaRemision guiaremision) throws Exception { 
		this.setVariablesObjetoActualToFormularioTodoGuiaRemision(guiaremision,false,"NINGUNO");
	}
	
	public void setVariablesObjetoActualToFormularioTodoGuiaRemision(GuiaRemision guiaremision,Boolean conCargarListasDesdeObjetoActual,String sTipoEvento) throws Exception { 
		this.setVariablesObjetoActualToFormularioGuiaRemision(guiaremision);
		
		if(conCargarListasDesdeObjetoActual) {
			this.setVariablesObjetoActualToListasForeignKeyGuiaRemision(guiaremision,sTipoEvento);
		}
		
		this.setVariablesObjetoActualToFormularioForeignKeyGuiaRemision(guiaremision);
	}
	
	public void setVariablesObjetoActualToFormularioGuiaRemision(GuiaRemision guiaremision) throws Exception { 
		try {			
			Image imageActual=null;
			ImageIcon imageIcon = null;
			
			if(this.jInternalFrameDetalleFormGuiaRemision==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			
			this.jInternalFrameDetalleFormGuiaRemision.jLabelidGuiaRemision.setText(guiaremision.getId().toString());
			this.jInternalFrameDetalleFormGuiaRemision.jTextFieldsecuencialGuiaRemision.setText(guiaremision.getsecuencial());
			this.jInternalFrameDetalleFormGuiaRemision.jDateChooserfecha_emisionGuiaRemision.setDate(guiaremision.getfecha_emision());
			this.jInternalFrameDetalleFormGuiaRemision.jTextFieldnumero_camionGuiaRemision.setText(guiaremision.getnumero_camion());
			this.jInternalFrameDetalleFormGuiaRemision.jTextFieldidentificacionGuiaRemision.setText(guiaremision.getidentificacion());
			this.jInternalFrameDetalleFormGuiaRemision.jDateChooserfecha_origenGuiaRemision.setDate(guiaremision.getfecha_origen());
			this.jInternalFrameDetalleFormGuiaRemision.jDateChooserfecha_destinoGuiaRemision.setDate(guiaremision.getfecha_destino());
			this.jInternalFrameDetalleFormGuiaRemision.jTextAreatransporte_codigoGuiaRemision.setText(guiaremision.gettransporte_codigo());
			this.jInternalFrameDetalleFormGuiaRemision.jTextFieldcantidad_bultosGuiaRemision.setText(guiaremision.getcantidad_bultos().toString());
			this.jInternalFrameDetalleFormGuiaRemision.jSpinnerhora_inicioGuiaRemision.setValue(guiaremision.gethora_inicio());
			this.jInternalFrameDetalleFormGuiaRemision.jSpinnerhora_finGuiaRemision.setValue(guiaremision.gethora_fin());
			this.jInternalFrameDetalleFormGuiaRemision.jTextFieldcupoGuiaRemision.setText(guiaremision.getcupo().toString());
			this.jInternalFrameDetalleFormGuiaRemision.jTextFieldsaldoGuiaRemision.setText(guiaremision.getsaldo().toString());
			this.jInternalFrameDetalleFormGuiaRemision.jTextFielddocumentoGuiaRemision.setText(guiaremision.getdocumento().toString());
			this.jInternalFrameDetalleFormGuiaRemision.jTextFielddisponibleGuiaRemision.setText(guiaremision.getdisponible().toString());
			this.jInternalFrameDetalleFormGuiaRemision.jTextAreadescripcionGuiaRemision.setText(guiaremision.getdescripcion());
			this.jInternalFrameDetalleFormGuiaRemision.jTextFieldtotal_ivaGuiaRemision.setText(guiaremision.gettotal_iva().toString());
			this.jInternalFrameDetalleFormGuiaRemision.jTextFieldtotal_sin_ivaGuiaRemision.setText(guiaremision.gettotal_sin_iva().toString());
			this.jInternalFrameDetalleFormGuiaRemision.jTextFielddescuentoGuiaRemision.setText(guiaremision.getdescuento().toString());
			this.jInternalFrameDetalleFormGuiaRemision.jTextFieldfleteGuiaRemision.setText(guiaremision.getflete().toString());
			this.jInternalFrameDetalleFormGuiaRemision.jTextFieldotroGuiaRemision.setText(guiaremision.getotro().toString());
			this.jInternalFrameDetalleFormGuiaRemision.jTextFieldfinanciamientoGuiaRemision.setText(guiaremision.getfinanciamiento().toString());
			this.jInternalFrameDetalleFormGuiaRemision.jTextFieldivaGuiaRemision.setText(guiaremision.getiva().toString());
			this.jInternalFrameDetalleFormGuiaRemision.jTextFieldtotalGuiaRemision.setText(guiaremision.gettotal().toString());
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);
		}
	}
		
	public void actualizarInformacion(String sTipo,GuiaRemision guiaremisionLocal) throws Exception {
		this.actualizarInformacion(sTipo,false,guiaremisionLocal);
	}	
	
	public void actualizarInformacion(String sTipo,Boolean conParametroObjeto,GuiaRemision guiaremisionLocal) throws Exception {
		
		if(!conParametroObjeto) {
			if(!this.getEsControlTabla()) {
				guiaremisionLocal=this.guiaremision;
			} else {
				guiaremisionLocal=this.guiaremisionAnterior;
			}
		}
		
		if(this.permiteMantenimiento(guiaremisionLocal)) {
			if(sTipo.equals("EVENTO_CONTROL")) { // || sTipo.equals("EVENTO_NUEVO")
				if(!this.esControlTabla) {
					this.setVariablesFormularioToObjetoActualTodoGuiaRemision(guiaremisionLocal,true);
					
					if(guiaremisionSessionBean.getConGuardarRelaciones()) {
						this.actualizarRelaciones(guiaremisionLocal);
					}
				}
			
			} else if(sTipo.equals("INFO_PADRE")) {
				
				if(this.guiaremisionSessionBean.getEsGuardarRelacionado()) {
					this.actualizarRelacionFkPadreActual(guiaremisionLocal);
				}
			}
		}
	}
	
	public void setVariablesFormularioToObjetoActualTodoGuiaRemision(GuiaRemision guiaremision,Boolean conColumnasBase) throws Exception { 
		this.setVariablesFormularioToObjetoActualGuiaRemision(guiaremision,conColumnasBase);
		this.setVariablesFormularioToObjetoActualForeignKeysGuiaRemision(guiaremision);
	}
	
	public void setVariablesFormularioToObjetoActualGuiaRemision(GuiaRemision guiaremision,Boolean conColumnasBase) throws Exception { 
		this.setVariablesFormularioToObjetoActualGuiaRemision(guiaremision,conColumnasBase,true);
	}
	
	public void setVariablesFormularioToObjetoActualGuiaRemision(GuiaRemision guiaremision,Boolean conColumnasBase,Boolean conInicializarInvalidValues) throws Exception { 
		String sMensajeCampoActual="";
		Boolean estaValidado=true;
		try {
			
			if(this.jInternalFrameDetalleFormGuiaRemision==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			if(conInicializarInvalidValues) {
				this.inicializarInvalidValues();
			}
			
			

		try {
			if(this.jInternalFrameDetalleFormGuiaRemision.jLabelidGuiaRemision.getText()==null || this.jInternalFrameDetalleFormGuiaRemision.jLabelidGuiaRemision.getText()=="" || this.jInternalFrameDetalleFormGuiaRemision.jLabelidGuiaRemision.getText()=="Id") {
				this.jInternalFrameDetalleFormGuiaRemision.jLabelidGuiaRemision.setText("0");
			}

			if(conColumnasBase) {guiaremision.setId(Long.parseLong(this.jInternalFrameDetalleFormGuiaRemision.jLabelidGuiaRemision.getText()));}
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+GuiaRemisionConstantesFunciones.LABEL_ID+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormGuiaRemision.jLabelIdGuiaRemision,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			guiaremision.setsecuencial(this.jInternalFrameDetalleFormGuiaRemision.jTextFieldsecuencialGuiaRemision.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+GuiaRemisionConstantesFunciones.LABEL_SECUENCIAL+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormGuiaRemision.jLabelsecuencialGuiaRemision,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			guiaremision.setfecha_emision(this.jInternalFrameDetalleFormGuiaRemision.jDateChooserfecha_emisionGuiaRemision.getDate());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+GuiaRemisionConstantesFunciones.LABEL_FECHAEMISION+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormGuiaRemision.jLabelfecha_emisionGuiaRemision,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			guiaremision.setnumero_camion(this.jInternalFrameDetalleFormGuiaRemision.jTextFieldnumero_camionGuiaRemision.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+GuiaRemisionConstantesFunciones.LABEL_NUMEROCAMION+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormGuiaRemision.jLabelnumero_camionGuiaRemision,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			guiaremision.setidentificacion(this.jInternalFrameDetalleFormGuiaRemision.jTextFieldidentificacionGuiaRemision.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+GuiaRemisionConstantesFunciones.LABEL_IDENTIFICACION+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormGuiaRemision.jLabelidentificacionGuiaRemision,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			guiaremision.setfecha_origen(this.jInternalFrameDetalleFormGuiaRemision.jDateChooserfecha_origenGuiaRemision.getDate());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+GuiaRemisionConstantesFunciones.LABEL_FECHAORIGEN+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormGuiaRemision.jLabelfecha_origenGuiaRemision,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			guiaremision.setfecha_destino(this.jInternalFrameDetalleFormGuiaRemision.jDateChooserfecha_destinoGuiaRemision.getDate());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+GuiaRemisionConstantesFunciones.LABEL_FECHADESTINO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormGuiaRemision.jLabelfecha_destinoGuiaRemision,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			guiaremision.settransporte_codigo(this.jInternalFrameDetalleFormGuiaRemision.jTextAreatransporte_codigoGuiaRemision.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+GuiaRemisionConstantesFunciones.LABEL_TRANSPORTECODIGO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormGuiaRemision.jLabeltransporte_codigoGuiaRemision,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			guiaremision.setcantidad_bultos(Integer.parseInt(this.jInternalFrameDetalleFormGuiaRemision.jTextFieldcantidad_bultosGuiaRemision.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+GuiaRemisionConstantesFunciones.LABEL_CANTIDADBULTOS+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormGuiaRemision.jLabelcantidad_bultosGuiaRemision,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			guiaremision.sethora_inicio(new Time(((Date)this.jInternalFrameDetalleFormGuiaRemision.jSpinnerhora_inicioGuiaRemision.getValue()).getTime()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+GuiaRemisionConstantesFunciones.LABEL_HORAINICIO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormGuiaRemision.jLabelhora_inicioGuiaRemision,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			guiaremision.sethora_fin(new Time(((Date)this.jInternalFrameDetalleFormGuiaRemision.jSpinnerhora_finGuiaRemision.getValue()).getTime()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+GuiaRemisionConstantesFunciones.LABEL_HORAFIN+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormGuiaRemision.jLabelhora_finGuiaRemision,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			guiaremision.setcupo(Double.parseDouble(this.jInternalFrameDetalleFormGuiaRemision.jTextFieldcupoGuiaRemision.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+GuiaRemisionConstantesFunciones.LABEL_CUPO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormGuiaRemision.jLabelcupoGuiaRemision,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			guiaremision.setsaldo(Double.parseDouble(this.jInternalFrameDetalleFormGuiaRemision.jTextFieldsaldoGuiaRemision.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+GuiaRemisionConstantesFunciones.LABEL_SALDO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormGuiaRemision.jLabelsaldoGuiaRemision,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			guiaremision.setdocumento(Double.parseDouble(this.jInternalFrameDetalleFormGuiaRemision.jTextFielddocumentoGuiaRemision.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+GuiaRemisionConstantesFunciones.LABEL_DOCUMENTO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormGuiaRemision.jLabeldocumentoGuiaRemision,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			guiaremision.setdisponible(Double.parseDouble(this.jInternalFrameDetalleFormGuiaRemision.jTextFielddisponibleGuiaRemision.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+GuiaRemisionConstantesFunciones.LABEL_DISPONIBLE+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormGuiaRemision.jLabeldisponibleGuiaRemision,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			guiaremision.setdescripcion(this.jInternalFrameDetalleFormGuiaRemision.jTextAreadescripcionGuiaRemision.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+GuiaRemisionConstantesFunciones.LABEL_DESCRIPCION+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormGuiaRemision.jLabeldescripcionGuiaRemision,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			guiaremision.settotal_iva(Double.parseDouble(this.jInternalFrameDetalleFormGuiaRemision.jTextFieldtotal_ivaGuiaRemision.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+GuiaRemisionConstantesFunciones.LABEL_TOTALIVA+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormGuiaRemision.jLabeltotal_ivaGuiaRemision,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			guiaremision.settotal_sin_iva(Double.parseDouble(this.jInternalFrameDetalleFormGuiaRemision.jTextFieldtotal_sin_ivaGuiaRemision.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+GuiaRemisionConstantesFunciones.LABEL_TOTALSINIVA+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormGuiaRemision.jLabeltotal_sin_ivaGuiaRemision,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			guiaremision.setdescuento(Double.parseDouble(this.jInternalFrameDetalleFormGuiaRemision.jTextFielddescuentoGuiaRemision.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+GuiaRemisionConstantesFunciones.LABEL_DESCUENTO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormGuiaRemision.jLabeldescuentoGuiaRemision,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			guiaremision.setflete(Double.parseDouble(this.jInternalFrameDetalleFormGuiaRemision.jTextFieldfleteGuiaRemision.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+GuiaRemisionConstantesFunciones.LABEL_FLETE+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormGuiaRemision.jLabelfleteGuiaRemision,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			guiaremision.setotro(Double.parseDouble(this.jInternalFrameDetalleFormGuiaRemision.jTextFieldotroGuiaRemision.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+GuiaRemisionConstantesFunciones.LABEL_OTRO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormGuiaRemision.jLabelotroGuiaRemision,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			guiaremision.setfinanciamiento(Double.parseDouble(this.jInternalFrameDetalleFormGuiaRemision.jTextFieldfinanciamientoGuiaRemision.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+GuiaRemisionConstantesFunciones.LABEL_FINANCIAMIENTO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormGuiaRemision.jLabelfinanciamientoGuiaRemision,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			guiaremision.setiva(Double.parseDouble(this.jInternalFrameDetalleFormGuiaRemision.jTextFieldivaGuiaRemision.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+GuiaRemisionConstantesFunciones.LABEL_IVA+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormGuiaRemision.jLabelivaGuiaRemision,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			guiaremision.settotal(Double.parseDouble(this.jInternalFrameDetalleFormGuiaRemision.jTextFieldtotalGuiaRemision.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+GuiaRemisionConstantesFunciones.LABEL_TOTAL+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormGuiaRemision.jLabeltotalGuiaRemision,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}
			
			if(!estaValidado) {
				throw new Exception(sMensajeCampoActual);
			}
		} catch(NumberFormatException e) {
			throw new Exception(sMensajeCampoActual);
			//FuncionesSwing.manageException(this, e,logger,MovimientoInventarioConstantesFunciones.CLASSNAME);
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setVariablesForeignKeyObjetoBeanDefectoActualToObjetoActualGuiaRemision(GuiaRemision guiaremisionBean,GuiaRemision guiaremision,Boolean conDefault,Boolean conColumnasBase) throws Exception { 
		try {
			
			if(conDefault || (!conDefault && guiaremisionBean.getid_formato()!=null && !guiaremisionBean.getid_formato().equals(null))) {guiaremision.setid_formato(guiaremisionBean.getid_formato());}
			if(conDefault || (!conDefault && guiaremisionBean.getid_tipo_precio()!=null && !guiaremisionBean.getid_tipo_precio().equals(-1L))) {guiaremision.setid_tipo_precio(guiaremisionBean.getid_tipo_precio());}
			if(conDefault || (!conDefault && guiaremisionBean.getid_cliente()!=null && !guiaremisionBean.getid_cliente().equals(-1L))) {guiaremision.setid_cliente(guiaremisionBean.getid_cliente());}
			if(conDefault || (!conDefault && guiaremisionBean.getid_vendedor()!=null && !guiaremisionBean.getid_vendedor().equals(null))) {guiaremision.setid_vendedor(guiaremisionBean.getid_vendedor());}
			if(conDefault || (!conDefault && guiaremisionBean.getid_factura()!=null && !guiaremisionBean.getid_factura().equals(null))) {guiaremision.setid_factura(guiaremisionBean.getid_factura());}
			if(conDefault || (!conDefault && guiaremisionBean.getid_transportista()!=null && !guiaremisionBean.getid_transportista().equals(null))) {guiaremision.setid_transportista(guiaremisionBean.getid_transportista());}
			if(conDefault || (!conDefault && guiaremisionBean.getid_consultor()!=null && !guiaremisionBean.getid_consultor().equals(-1L))) {guiaremision.setid_consultor(guiaremisionBean.getid_consultor());}
			if(conDefault || (!conDefault && guiaremisionBean.getid_transporte()!=null && !guiaremisionBean.getid_transporte().equals(-1L))) {guiaremision.setid_transporte(guiaremisionBean.getid_transporte());}
			if(conDefault || (!conDefault && guiaremisionBean.getid_sub_cliente()!=null && !guiaremisionBean.getid_sub_cliente().equals(-1L))) {guiaremision.setid_sub_cliente(guiaremisionBean.getid_sub_cliente());}
			if(conDefault || (!conDefault && guiaremisionBean.getid_empleado()!=null && !guiaremisionBean.getid_empleado().equals(-1L))) {guiaremision.setid_empleado(guiaremisionBean.getid_empleado());}
			if(conDefault || (!conDefault && guiaremisionBean.getid_ciudad_origen()!=null && !guiaremisionBean.getid_ciudad_origen().equals(null))) {guiaremision.setid_ciudad_origen(guiaremisionBean.getid_ciudad_origen());}
			if(conDefault || (!conDefault && guiaremisionBean.getid_ciudad_destino()!=null && !guiaremisionBean.getid_ciudad_destino().equals(null))) {guiaremision.setid_ciudad_destino(guiaremisionBean.getid_ciudad_destino());}
			if(conDefault || (!conDefault && guiaremisionBean.getid_tipo_llamada()!=null && !guiaremisionBean.getid_tipo_llamada().equals(-1L))) {guiaremision.setid_tipo_llamada(guiaremisionBean.getid_tipo_llamada());}
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setCopiarVariablesObjetosGuiaRemision(GuiaRemision guiaremisionOrigen,GuiaRemision guiaremision,Boolean conDefault,Boolean conColumnasBase) throws Exception { 
		try {
			
			if(conColumnasBase) {if(conDefault || (!conDefault && guiaremisionOrigen.getId()!=null && !guiaremisionOrigen.getId().equals(0L))) {guiaremision.setId(guiaremisionOrigen.getId());}}
			if(conDefault || (!conDefault && guiaremisionOrigen.getsecuencial()!=null && !guiaremisionOrigen.getsecuencial().equals(""))) {guiaremision.setsecuencial(guiaremisionOrigen.getsecuencial());}
			if(conDefault || (!conDefault && guiaremisionOrigen.getfecha_emision()!=null && !guiaremisionOrigen.getfecha_emision().equals(new Date()))) {guiaremision.setfecha_emision(guiaremisionOrigen.getfecha_emision());}
			if(conDefault || (!conDefault && guiaremisionOrigen.getid_formato()!=null && !guiaremisionOrigen.getid_formato().equals(null))) {guiaremision.setid_formato(guiaremisionOrigen.getid_formato());}
			if(conDefault || (!conDefault && guiaremisionOrigen.getid_tipo_precio()!=null && !guiaremisionOrigen.getid_tipo_precio().equals(-1L))) {guiaremision.setid_tipo_precio(guiaremisionOrigen.getid_tipo_precio());}
			if(conDefault || (!conDefault && guiaremisionOrigen.getnumero_camion()!=null && !guiaremisionOrigen.getnumero_camion().equals(""))) {guiaremision.setnumero_camion(guiaremisionOrigen.getnumero_camion());}
			if(conDefault || (!conDefault && guiaremisionOrigen.getid_cliente()!=null && !guiaremisionOrigen.getid_cliente().equals(-1L))) {guiaremision.setid_cliente(guiaremisionOrigen.getid_cliente());}
			if(conDefault || (!conDefault && guiaremisionOrigen.getid_vendedor()!=null && !guiaremisionOrigen.getid_vendedor().equals(null))) {guiaremision.setid_vendedor(guiaremisionOrigen.getid_vendedor());}
			if(conDefault || (!conDefault && guiaremisionOrigen.getid_factura()!=null && !guiaremisionOrigen.getid_factura().equals(null))) {guiaremision.setid_factura(guiaremisionOrigen.getid_factura());}
			if(conDefault || (!conDefault && guiaremisionOrigen.getid_transportista()!=null && !guiaremisionOrigen.getid_transportista().equals(null))) {guiaremision.setid_transportista(guiaremisionOrigen.getid_transportista());}
			if(conDefault || (!conDefault && guiaremisionOrigen.getidentificacion()!=null && !guiaremisionOrigen.getidentificacion().equals(""))) {guiaremision.setidentificacion(guiaremisionOrigen.getidentificacion());}
			if(conDefault || (!conDefault && guiaremisionOrigen.getfecha_origen()!=null && !guiaremisionOrigen.getfecha_origen().equals(new Date()))) {guiaremision.setfecha_origen(guiaremisionOrigen.getfecha_origen());}
			if(conDefault || (!conDefault && guiaremisionOrigen.getfecha_destino()!=null && !guiaremisionOrigen.getfecha_destino().equals(new Date()))) {guiaremision.setfecha_destino(guiaremisionOrigen.getfecha_destino());}
			if(conDefault || (!conDefault && guiaremisionOrigen.gettransporte_codigo()!=null && !guiaremisionOrigen.gettransporte_codigo().equals(""))) {guiaremision.settransporte_codigo(guiaremisionOrigen.gettransporte_codigo());}
			if(conDefault || (!conDefault && guiaremisionOrigen.getcantidad_bultos()!=null && !guiaremisionOrigen.getcantidad_bultos().equals(0))) {guiaremision.setcantidad_bultos(guiaremisionOrigen.getcantidad_bultos());}
			if(conDefault || (!conDefault && guiaremisionOrigen.getid_consultor()!=null && !guiaremisionOrigen.getid_consultor().equals(-1L))) {guiaremision.setid_consultor(guiaremisionOrigen.getid_consultor());}
			if(conDefault || (!conDefault && guiaremisionOrigen.getid_transporte()!=null && !guiaremisionOrigen.getid_transporte().equals(-1L))) {guiaremision.setid_transporte(guiaremisionOrigen.getid_transporte());}
			if(conDefault || (!conDefault && guiaremisionOrigen.getid_sub_cliente()!=null && !guiaremisionOrigen.getid_sub_cliente().equals(-1L))) {guiaremision.setid_sub_cliente(guiaremisionOrigen.getid_sub_cliente());}
			if(conDefault || (!conDefault && guiaremisionOrigen.getid_empleado()!=null && !guiaremisionOrigen.getid_empleado().equals(-1L))) {guiaremision.setid_empleado(guiaremisionOrigen.getid_empleado());}
			if(conDefault || (!conDefault && guiaremisionOrigen.getid_ciudad_origen()!=null && !guiaremisionOrigen.getid_ciudad_origen().equals(null))) {guiaremision.setid_ciudad_origen(guiaremisionOrigen.getid_ciudad_origen());}
			if(conDefault || (!conDefault && guiaremisionOrigen.getid_ciudad_destino()!=null && !guiaremisionOrigen.getid_ciudad_destino().equals(null))) {guiaremision.setid_ciudad_destino(guiaremisionOrigen.getid_ciudad_destino());}
			if(conDefault || (!conDefault && guiaremisionOrigen.getid_tipo_llamada()!=null && !guiaremisionOrigen.getid_tipo_llamada().equals(-1L))) {guiaremision.setid_tipo_llamada(guiaremisionOrigen.getid_tipo_llamada());}
			if(conDefault || (!conDefault && guiaremisionOrigen.gethora_inicio()!=null && !guiaremisionOrigen.gethora_inicio().equals(new Time((new Date()).getTime())))) {guiaremision.sethora_inicio(guiaremisionOrigen.gethora_inicio());}
			if(conDefault || (!conDefault && guiaremisionOrigen.gethora_fin()!=null && !guiaremisionOrigen.gethora_fin().equals(new Time((new Date()).getTime())))) {guiaremision.sethora_fin(guiaremisionOrigen.gethora_fin());}
			if(conDefault || (!conDefault && guiaremisionOrigen.getcupo()!=null && !guiaremisionOrigen.getcupo().equals(0.0))) {guiaremision.setcupo(guiaremisionOrigen.getcupo());}
			if(conDefault || (!conDefault && guiaremisionOrigen.getsaldo()!=null && !guiaremisionOrigen.getsaldo().equals(0.0))) {guiaremision.setsaldo(guiaremisionOrigen.getsaldo());}
			if(conDefault || (!conDefault && guiaremisionOrigen.getdocumento()!=null && !guiaremisionOrigen.getdocumento().equals(0.0))) {guiaremision.setdocumento(guiaremisionOrigen.getdocumento());}
			if(conDefault || (!conDefault && guiaremisionOrigen.getdisponible()!=null && !guiaremisionOrigen.getdisponible().equals(0.0))) {guiaremision.setdisponible(guiaremisionOrigen.getdisponible());}
			if(conDefault || (!conDefault && guiaremisionOrigen.getdescripcion()!=null && !guiaremisionOrigen.getdescripcion().equals(""))) {guiaremision.setdescripcion(guiaremisionOrigen.getdescripcion());}
			if(conDefault || (!conDefault && guiaremisionOrigen.gettotal_iva()!=null && !guiaremisionOrigen.gettotal_iva().equals(0.0))) {guiaremision.settotal_iva(guiaremisionOrigen.gettotal_iva());}
			if(conDefault || (!conDefault && guiaremisionOrigen.gettotal_sin_iva()!=null && !guiaremisionOrigen.gettotal_sin_iva().equals(0.0))) {guiaremision.settotal_sin_iva(guiaremisionOrigen.gettotal_sin_iva());}
			if(conDefault || (!conDefault && guiaremisionOrigen.getdescuento()!=null && !guiaremisionOrigen.getdescuento().equals(0.0))) {guiaremision.setdescuento(guiaremisionOrigen.getdescuento());}
			if(conDefault || (!conDefault && guiaremisionOrigen.getflete()!=null && !guiaremisionOrigen.getflete().equals(0.0))) {guiaremision.setflete(guiaremisionOrigen.getflete());}
			if(conDefault || (!conDefault && guiaremisionOrigen.getotro()!=null && !guiaremisionOrigen.getotro().equals(0.0))) {guiaremision.setotro(guiaremisionOrigen.getotro());}
			if(conDefault || (!conDefault && guiaremisionOrigen.getfinanciamiento()!=null && !guiaremisionOrigen.getfinanciamiento().equals(0.0))) {guiaremision.setfinanciamiento(guiaremisionOrigen.getfinanciamiento());}
			if(conDefault || (!conDefault && guiaremisionOrigen.getiva()!=null && !guiaremisionOrigen.getiva().equals(0.0))) {guiaremision.setiva(guiaremisionOrigen.getiva());}
			if(conDefault || (!conDefault && guiaremisionOrigen.gettotal()!=null && !guiaremisionOrigen.gettotal().equals(0.0))) {guiaremision.settotal(guiaremisionOrigen.gettotal());}
			if(conDefault || (!conDefault && guiaremisionOrigen.getmonto_retencion()!=null && !guiaremisionOrigen.getmonto_retencion().equals(0.0))) {guiaremision.setmonto_retencion(guiaremisionOrigen.getmonto_retencion());}
			if(conDefault || (!conDefault && guiaremisionOrigen.getid_tipo_cambio()!=null && !guiaremisionOrigen.getid_tipo_cambio().equals(null))) {guiaremision.setid_tipo_cambio(guiaremisionOrigen.getid_tipo_cambio());}
			if(conDefault || (!conDefault && guiaremisionOrigen.getfecha()!=null && !guiaremisionOrigen.getfecha().equals(new Date()))) {guiaremision.setfecha(guiaremisionOrigen.getfecha());}
			if(conDefault || (!conDefault && guiaremisionOrigen.getruc_cliente()!=null && !guiaremisionOrigen.getruc_cliente().equals(""))) {guiaremision.setruc_cliente(guiaremisionOrigen.getruc_cliente());}
			if(conDefault || (!conDefault && guiaremisionOrigen.getnombre_cliente()!=null && !guiaremisionOrigen.getnombre_cliente().equals(""))) {guiaremision.setnombre_cliente(guiaremisionOrigen.getnombre_cliente());}
			if(conDefault || (!conDefault && guiaremisionOrigen.gettelefono_cliente()!=null && !guiaremisionOrigen.gettelefono_cliente().equals(""))) {guiaremision.settelefono_cliente(guiaremisionOrigen.gettelefono_cliente());}
			if(conDefault || (!conDefault && guiaremisionOrigen.getdireccion_cliente()!=null && !guiaremisionOrigen.getdireccion_cliente().equals(""))) {guiaremision.setdireccion_cliente(guiaremisionOrigen.getdireccion_cliente());}
			if(conDefault || (!conDefault && guiaremisionOrigen.getnumero_pre_impreso()!=null && !guiaremisionOrigen.getnumero_pre_impreso().equals(""))) {guiaremision.setnumero_pre_impreso(guiaremisionOrigen.getnumero_pre_impreso());}
			if(conDefault || (!conDefault && guiaremisionOrigen.getpeso_bruto()!=null && !guiaremisionOrigen.getpeso_bruto().equals(0.0))) {guiaremision.setpeso_bruto(guiaremisionOrigen.getpeso_bruto());}
			if(conDefault || (!conDefault && guiaremisionOrigen.getfecha_autorizacion()!=null && !guiaremisionOrigen.getfecha_autorizacion().equals(new Date()))) {guiaremision.setfecha_autorizacion(guiaremisionOrigen.getfecha_autorizacion());}
			if(conDefault || (!conDefault && guiaremisionOrigen.getfecha_vencimiento()!=null && !guiaremisionOrigen.getfecha_vencimiento().equals(new Date()))) {guiaremision.setfecha_vencimiento(guiaremisionOrigen.getfecha_vencimiento());}
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);
		}
	}
	
	/*
	public void setVariablesObjetoBeanActualToFormularioGuiaRemision(GuiaRemision guiaremision) throws Exception { 
		try {
			
			this.jInternalFrameDetalleFormGuiaRemision.jLabelidGuiaRemision.setText(guiaremision.getId().toString());
			this.jInternalFrameDetalleFormGuiaRemision.jTextFieldsecuencialGuiaRemision.setText(guiaremision.getsecuencial());
			this.jInternalFrameDetalleFormGuiaRemision.jDateChooserfecha_emisionGuiaRemision.setDate(guiaremision.getfecha_emision());
			this.jInternalFrameDetalleFormGuiaRemision.jTextFieldnumero_camionGuiaRemision.setText(guiaremision.getnumero_camion());
			this.jInternalFrameDetalleFormGuiaRemision.jTextFieldidentificacionGuiaRemision.setText(guiaremision.getidentificacion());
			this.jInternalFrameDetalleFormGuiaRemision.jDateChooserfecha_origenGuiaRemision.setDate(guiaremision.getfecha_origen());
			this.jInternalFrameDetalleFormGuiaRemision.jDateChooserfecha_destinoGuiaRemision.setDate(guiaremision.getfecha_destino());
			this.jInternalFrameDetalleFormGuiaRemision.jTextAreatransporte_codigoGuiaRemision.setText(guiaremision.gettransporte_codigo());
			this.jInternalFrameDetalleFormGuiaRemision.jTextFieldcantidad_bultosGuiaRemision.setText(guiaremision.getcantidad_bultos().toString());
			this.jInternalFrameDetalleFormGuiaRemision.jSpinnerhora_inicioGuiaRemision.setValue(guiaremision.gethora_inicio());
			this.jInternalFrameDetalleFormGuiaRemision.jSpinnerhora_finGuiaRemision.setValue(guiaremision.gethora_fin());
			this.jInternalFrameDetalleFormGuiaRemision.jTextFieldcupoGuiaRemision.setText(guiaremision.getcupo().toString());
			this.jInternalFrameDetalleFormGuiaRemision.jTextFieldsaldoGuiaRemision.setText(guiaremision.getsaldo().toString());
			this.jInternalFrameDetalleFormGuiaRemision.jTextFielddocumentoGuiaRemision.setText(guiaremision.getdocumento().toString());
			this.jInternalFrameDetalleFormGuiaRemision.jTextFielddisponibleGuiaRemision.setText(guiaremision.getdisponible().toString());
			this.jInternalFrameDetalleFormGuiaRemision.jTextAreadescripcionGuiaRemision.setText(guiaremision.getdescripcion());
			this.jInternalFrameDetalleFormGuiaRemision.jTextFieldtotal_ivaGuiaRemision.setText(guiaremision.gettotal_iva().toString());
			this.jInternalFrameDetalleFormGuiaRemision.jTextFieldtotal_sin_ivaGuiaRemision.setText(guiaremision.gettotal_sin_iva().toString());
			this.jInternalFrameDetalleFormGuiaRemision.jTextFielddescuentoGuiaRemision.setText(guiaremision.getdescuento().toString());
			this.jInternalFrameDetalleFormGuiaRemision.jTextFieldfleteGuiaRemision.setText(guiaremision.getflete().toString());
			this.jInternalFrameDetalleFormGuiaRemision.jTextFieldotroGuiaRemision.setText(guiaremision.getotro().toString());
			this.jInternalFrameDetalleFormGuiaRemision.jTextFieldfinanciamientoGuiaRemision.setText(guiaremision.getfinanciamiento().toString());
			this.jInternalFrameDetalleFormGuiaRemision.jTextFieldivaGuiaRemision.setText(guiaremision.getiva().toString());
			this.jInternalFrameDetalleFormGuiaRemision.jTextFieldtotalGuiaRemision.setText(guiaremision.gettotal().toString());
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesObjetoBeanActualToFormularioGuiaRemision(GuiaRemisionBean guiaremisionBean) throws Exception { 
		try {
			
			this.jInternalFrameDetalleFormGuiaRemision.jLabelidGuiaRemision.setText(guiaremisionBean.getId().toString());
			this.jInternalFrameDetalleFormGuiaRemision.jTextFieldsecuencialGuiaRemision.setText(guiaremisionBean.getsecuencial());
			this.jInternalFrameDetalleFormGuiaRemision.jDateChooserfecha_emisionGuiaRemision.setDate(guiaremisionBean.getfecha_emision());
			this.jInternalFrameDetalleFormGuiaRemision.jTextFieldnumero_camionGuiaRemision.setText(guiaremisionBean.getnumero_camion());
			this.jInternalFrameDetalleFormGuiaRemision.jTextFieldidentificacionGuiaRemision.setText(guiaremisionBean.getidentificacion());
			this.jInternalFrameDetalleFormGuiaRemision.jDateChooserfecha_origenGuiaRemision.setDate(guiaremisionBean.getfecha_origen());
			this.jInternalFrameDetalleFormGuiaRemision.jDateChooserfecha_destinoGuiaRemision.setDate(guiaremisionBean.getfecha_destino());
			this.jInternalFrameDetalleFormGuiaRemision.jTextAreatransporte_codigoGuiaRemision.setText(guiaremisionBean.gettransporte_codigo());
			this.jInternalFrameDetalleFormGuiaRemision.jTextFieldcantidad_bultosGuiaRemision.setText(guiaremisionBean.getcantidad_bultos().toString());
			this.jInternalFrameDetalleFormGuiaRemision.jSpinnerhora_inicioGuiaRemision.setValue(guiaremisionBean.gethora_inicio());
			this.jInternalFrameDetalleFormGuiaRemision.jSpinnerhora_finGuiaRemision.setValue(guiaremisionBean.gethora_fin());
			this.jInternalFrameDetalleFormGuiaRemision.jTextFieldcupoGuiaRemision.setText(guiaremisionBean.getcupo().toString());
			this.jInternalFrameDetalleFormGuiaRemision.jTextFieldsaldoGuiaRemision.setText(guiaremisionBean.getsaldo().toString());
			this.jInternalFrameDetalleFormGuiaRemision.jTextFielddocumentoGuiaRemision.setText(guiaremisionBean.getdocumento().toString());
			this.jInternalFrameDetalleFormGuiaRemision.jTextFielddisponibleGuiaRemision.setText(guiaremisionBean.getdisponible().toString());
			this.jInternalFrameDetalleFormGuiaRemision.jTextAreadescripcionGuiaRemision.setText(guiaremisionBean.getdescripcion());
			this.jInternalFrameDetalleFormGuiaRemision.jTextFieldtotal_ivaGuiaRemision.setText(guiaremisionBean.gettotal_iva().toString());
			this.jInternalFrameDetalleFormGuiaRemision.jTextFieldtotal_sin_ivaGuiaRemision.setText(guiaremisionBean.gettotal_sin_iva().toString());
			this.jInternalFrameDetalleFormGuiaRemision.jTextFielddescuentoGuiaRemision.setText(guiaremisionBean.getdescuento().toString());
			this.jInternalFrameDetalleFormGuiaRemision.jTextFieldfleteGuiaRemision.setText(guiaremisionBean.getflete().toString());
			this.jInternalFrameDetalleFormGuiaRemision.jTextFieldotroGuiaRemision.setText(guiaremisionBean.getotro().toString());
			this.jInternalFrameDetalleFormGuiaRemision.jTextFieldfinanciamientoGuiaRemision.setText(guiaremisionBean.getfinanciamiento().toString());
			this.jInternalFrameDetalleFormGuiaRemision.jTextFieldivaGuiaRemision.setText(guiaremisionBean.getiva().toString());
			this.jInternalFrameDetalleFormGuiaRemision.jTextFieldtotalGuiaRemision.setText(guiaremisionBean.gettotal().toString());
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesObjetoReturnGeneralToBeanGuiaRemision(GuiaRemisionParameterReturnGeneral guiaremisionReturnGeneral,GuiaRemisionBean guiaremisionBean,Boolean conDefault) throws Exception { 
		try {
			GuiaRemision guiaremisionLocal=new GuiaRemision();
			
			guiaremisionLocal=guiaremisionReturnGeneral.getGuiaRemision();
			
			
			if(conColumnasBase) {if(conDefault || (!conDefault && guiaremisionLocal.getId()!=null && !guiaremisionLocal.getId().equals(0L))) {guiaremisionBean.setId(guiaremisionLocal.getId());}}
			if(conDefault || (!conDefault && guiaremisionLocal.getsecuencial()!=null && !guiaremisionLocal.getsecuencial().equals(""))) {guiaremisionBean.setsecuencial(guiaremisionLocal.getsecuencial());}
			if(conDefault || (!conDefault && guiaremisionLocal.getfecha_emision()!=null && !guiaremisionLocal.getfecha_emision().equals(new Date()))) {guiaremisionBean.setfecha_emision(guiaremisionLocal.getfecha_emision());}
			if(conDefault || (!conDefault && guiaremisionLocal.getid_formato()!=null && !guiaremisionLocal.getid_formato().equals(null))) {guiaremisionBean.setid_formato(guiaremisionLocal.getid_formato());}
			if(conDefault || (!conDefault && guiaremisionLocal.getid_tipo_precio()!=null && !guiaremisionLocal.getid_tipo_precio().equals(-1L))) {guiaremisionBean.setid_tipo_precio(guiaremisionLocal.getid_tipo_precio());}
			if(conDefault || (!conDefault && guiaremisionLocal.getnumero_camion()!=null && !guiaremisionLocal.getnumero_camion().equals(""))) {guiaremisionBean.setnumero_camion(guiaremisionLocal.getnumero_camion());}
			if(conDefault || (!conDefault && guiaremisionLocal.getid_cliente()!=null && !guiaremisionLocal.getid_cliente().equals(-1L))) {guiaremisionBean.setid_cliente(guiaremisionLocal.getid_cliente());}
			if(conDefault || (!conDefault && guiaremisionLocal.getid_vendedor()!=null && !guiaremisionLocal.getid_vendedor().equals(null))) {guiaremisionBean.setid_vendedor(guiaremisionLocal.getid_vendedor());}
			if(conDefault || (!conDefault && guiaremisionLocal.getid_factura()!=null && !guiaremisionLocal.getid_factura().equals(null))) {guiaremisionBean.setid_factura(guiaremisionLocal.getid_factura());}
			if(conDefault || (!conDefault && guiaremisionLocal.getid_transportista()!=null && !guiaremisionLocal.getid_transportista().equals(null))) {guiaremisionBean.setid_transportista(guiaremisionLocal.getid_transportista());}
			if(conDefault || (!conDefault && guiaremisionLocal.getidentificacion()!=null && !guiaremisionLocal.getidentificacion().equals(""))) {guiaremisionBean.setidentificacion(guiaremisionLocal.getidentificacion());}
			if(conDefault || (!conDefault && guiaremisionLocal.getfecha_origen()!=null && !guiaremisionLocal.getfecha_origen().equals(new Date()))) {guiaremisionBean.setfecha_origen(guiaremisionLocal.getfecha_origen());}
			if(conDefault || (!conDefault && guiaremisionLocal.getfecha_destino()!=null && !guiaremisionLocal.getfecha_destino().equals(new Date()))) {guiaremisionBean.setfecha_destino(guiaremisionLocal.getfecha_destino());}
			if(conDefault || (!conDefault && guiaremisionLocal.gettransporte_codigo()!=null && !guiaremisionLocal.gettransporte_codigo().equals(""))) {guiaremisionBean.settransporte_codigo(guiaremisionLocal.gettransporte_codigo());}
			if(conDefault || (!conDefault && guiaremisionLocal.getcantidad_bultos()!=null && !guiaremisionLocal.getcantidad_bultos().equals(0))) {guiaremisionBean.setcantidad_bultos(guiaremisionLocal.getcantidad_bultos());}
			if(conDefault || (!conDefault && guiaremisionLocal.getid_consultor()!=null && !guiaremisionLocal.getid_consultor().equals(-1L))) {guiaremisionBean.setid_consultor(guiaremisionLocal.getid_consultor());}
			if(conDefault || (!conDefault && guiaremisionLocal.getid_transporte()!=null && !guiaremisionLocal.getid_transporte().equals(-1L))) {guiaremisionBean.setid_transporte(guiaremisionLocal.getid_transporte());}
			if(conDefault || (!conDefault && guiaremisionLocal.getid_sub_cliente()!=null && !guiaremisionLocal.getid_sub_cliente().equals(-1L))) {guiaremisionBean.setid_sub_cliente(guiaremisionLocal.getid_sub_cliente());}
			if(conDefault || (!conDefault && guiaremisionLocal.getid_empleado()!=null && !guiaremisionLocal.getid_empleado().equals(-1L))) {guiaremisionBean.setid_empleado(guiaremisionLocal.getid_empleado());}
			if(conDefault || (!conDefault && guiaremisionLocal.getid_ciudad_origen()!=null && !guiaremisionLocal.getid_ciudad_origen().equals(null))) {guiaremisionBean.setid_ciudad_origen(guiaremisionLocal.getid_ciudad_origen());}
			if(conDefault || (!conDefault && guiaremisionLocal.getid_ciudad_destino()!=null && !guiaremisionLocal.getid_ciudad_destino().equals(null))) {guiaremisionBean.setid_ciudad_destino(guiaremisionLocal.getid_ciudad_destino());}
			if(conDefault || (!conDefault && guiaremisionLocal.getid_tipo_llamada()!=null && !guiaremisionLocal.getid_tipo_llamada().equals(-1L))) {guiaremisionBean.setid_tipo_llamada(guiaremisionLocal.getid_tipo_llamada());}
			if(conDefault || (!conDefault && guiaremisionLocal.gethora_inicio()!=null && !guiaremisionLocal.gethora_inicio().equals(new Time((new Date()).getTime())))) {guiaremisionBean.sethora_inicio(guiaremisionLocal.gethora_inicio());}
			if(conDefault || (!conDefault && guiaremisionLocal.gethora_fin()!=null && !guiaremisionLocal.gethora_fin().equals(new Time((new Date()).getTime())))) {guiaremisionBean.sethora_fin(guiaremisionLocal.gethora_fin());}
			if(conDefault || (!conDefault && guiaremisionLocal.getcupo()!=null && !guiaremisionLocal.getcupo().equals(0.0))) {guiaremisionBean.setcupo(guiaremisionLocal.getcupo());}
			if(conDefault || (!conDefault && guiaremisionLocal.getsaldo()!=null && !guiaremisionLocal.getsaldo().equals(0.0))) {guiaremisionBean.setsaldo(guiaremisionLocal.getsaldo());}
			if(conDefault || (!conDefault && guiaremisionLocal.getdocumento()!=null && !guiaremisionLocal.getdocumento().equals(0.0))) {guiaremisionBean.setdocumento(guiaremisionLocal.getdocumento());}
			if(conDefault || (!conDefault && guiaremisionLocal.getdisponible()!=null && !guiaremisionLocal.getdisponible().equals(0.0))) {guiaremisionBean.setdisponible(guiaremisionLocal.getdisponible());}
			if(conDefault || (!conDefault && guiaremisionLocal.getdescripcion()!=null && !guiaremisionLocal.getdescripcion().equals(""))) {guiaremisionBean.setdescripcion(guiaremisionLocal.getdescripcion());}
			if(conDefault || (!conDefault && guiaremisionLocal.gettotal_iva()!=null && !guiaremisionLocal.gettotal_iva().equals(0.0))) {guiaremisionBean.settotal_iva(guiaremisionLocal.gettotal_iva());}
			if(conDefault || (!conDefault && guiaremisionLocal.gettotal_sin_iva()!=null && !guiaremisionLocal.gettotal_sin_iva().equals(0.0))) {guiaremisionBean.settotal_sin_iva(guiaremisionLocal.gettotal_sin_iva());}
			if(conDefault || (!conDefault && guiaremisionLocal.getdescuento()!=null && !guiaremisionLocal.getdescuento().equals(0.0))) {guiaremisionBean.setdescuento(guiaremisionLocal.getdescuento());}
			if(conDefault || (!conDefault && guiaremisionLocal.getflete()!=null && !guiaremisionLocal.getflete().equals(0.0))) {guiaremisionBean.setflete(guiaremisionLocal.getflete());}
			if(conDefault || (!conDefault && guiaremisionLocal.getotro()!=null && !guiaremisionLocal.getotro().equals(0.0))) {guiaremisionBean.setotro(guiaremisionLocal.getotro());}
			if(conDefault || (!conDefault && guiaremisionLocal.getfinanciamiento()!=null && !guiaremisionLocal.getfinanciamiento().equals(0.0))) {guiaremisionBean.setfinanciamiento(guiaremisionLocal.getfinanciamiento());}
			if(conDefault || (!conDefault && guiaremisionLocal.getiva()!=null && !guiaremisionLocal.getiva().equals(0.0))) {guiaremisionBean.setiva(guiaremisionLocal.getiva());}
			if(conDefault || (!conDefault && guiaremisionLocal.gettotal()!=null && !guiaremisionLocal.gettotal().equals(0.0))) {guiaremisionBean.settotal(guiaremisionLocal.gettotal());}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	@SuppressWarnings("rawtypes")
	public static void setActualComboBoxGuiaRemisionGenerico(Long idGuiaRemisionSeleccionado,JComboBox jComboBoxGuiaRemision,List<GuiaRemision> guiaremisionsLocal)throws Exception {
		try {
			GuiaRemision  guiaremisionTemp=null;

			for(GuiaRemision guiaremisionAux:guiaremisionsLocal) {
				if(guiaremisionAux.getId()!=null && guiaremisionAux.getId().equals(idGuiaRemisionSeleccionado)) {
					guiaremisionTemp=guiaremisionAux;
					break;
				}
			}

			jComboBoxGuiaRemision.setSelectedItem(guiaremisionTemp);

		} catch(Exception e) {
			throw e;
		}
	}
	
	@SuppressWarnings("rawtypes")
	public static void setHotKeysComboBoxGuiaRemisionGenerico(JComboBox jComboBoxGuiaRemision,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda)throws Exception {
		try {
			//GLOBAL(id_empresa,id_sucursal,id_ejercicio)
			//BASICO(normal)
			//CON_BUSQUEDA(Permite buscar Fk)
			
			String sKeyStrokeName="";
			KeyStroke keyStrokeControl=null;
			
			if(!sTipoBusqueda.equals("GLOBAL")) {
				
				//BUSCAR
				sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_BUSCAR");
				keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_BUSCAR");
				
				jComboBoxGuiaRemision.getInputMap().put(keyStrokeControl, sKeyStrokeName);
				jComboBoxGuiaRemision.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction+"Busqueda"));
				//BUSCAR
				
				
				//ACTUALIZAR
				sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_ACTUALIZAR");
				keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_ACTUALIZAR");
				
				jComboBoxGuiaRemision.getInputMap().put(keyStrokeControl, sKeyStrokeName);
				jComboBoxGuiaRemision.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction+"Update"));
				//ACTUALIZAR
				
				if(sTipoBusqueda.contains("CON_EVENT_CHANGE")) {
					if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
						jComboBoxGuiaRemision.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
						jComboBoxGuiaRemision.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));						
					}
					
					/*
					if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
						jComboBoxGuiaRemision.addItemListener(new ComboBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
					} else {
						jComboBoxGuiaRemision.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
					}
					*/
				}								
				
				//CON_BUSQUEDA								
				if(sTipoBusqueda.contains("CON_BUSQUEDA")) {
					sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_BUSQUEDA");
					keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_BUSQUEDA");
							
					jComboBoxGuiaRemision.getInputMap().put(keyStrokeControl, sKeyStrokeName);
					jComboBoxGuiaRemision.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction));
				}
				//CON_BUSQUEDA
				
				
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	@SuppressWarnings("rawtypes")
	public void setHotKeysComboBoxGenerico(JComboBox jComboBox,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		if(sTipoBusqueda.contains("CON_EVENT_CHANGE")) {
			if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
				jComboBox.addItemListener(new ComboBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
				jComboBox.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
			} else {
				jComboBox.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
				jComboBox.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
			}
		}
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJTextFieldGenerico(JTextField jTextField,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jTextField.addFocusListener(new TextFieldFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		jTextField.addActionListener(new TextFieldActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJTextAreaGenerico(JTextArea jTextArea,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jTextArea.addFocusListener(new TextAreaFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//NO EXISTE
		//jTextArea.addActionListener(new TextAreaActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJLabelGenerico(JLabel jLabel,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jLabel.addFocusListener(new LabelFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//NO EXISTE
		//jLabel.addActionListener(new LabelActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJCheckBoxGenerico(JCheckBox jCheckBox,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jCheckBox.addFocusListener(new CheckBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//SI SE DEFINE AL CAMBIAR VALOR, ESTE NUEVO VALOR NO SE ENVIA AL EVENTO
		//jCheckBox.addItemListener(new CheckBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJDateChooserGenerico(JDateChooser jDateChooser,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		FuncionesSwing.addDateListener(jDateChooser, jInternalFrameBase, sNombreHotKeyAbstractAction);
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJButtonGenerico(JButton jButton,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jButton.addActionListener(new ButtonActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	public void jButtonRelacionActionPerformed(String sTipo,ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado) {
		//ABRIR RELACIONES
		try {
			
		if(sTipo.equals("DetalleGuiaRemision")) {
			jButtonDetalleGuiaRemisionActionPerformed(evt,rowIndex,true,false,null);
		}
		} catch (Exception e) {
			FuncionesSwing.manageException2(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);
		}
	}
	
	public String getDescripcionFk(String sTipo,JTable table,Object value,int intSelectedRow) throws Exception {
		//DESCRIPCIONES FK		
		String sDescripcion="";
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			guiaremision=(GuiaRemision) guiaremisionLogic.getGuiaRemisions().toArray()[table.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE) {
			guiaremision =(GuiaRemision) guiaremisions.toArray()[table.convertRowIndexToModel(intSelectedRow)];
		}
					
		
		if(sTipo.equals("Empresa")) {
			//sDescripcion=this.getActualEmpresaForeignKeyDescripcion((Long)value);
			if(!guiaremision.getIsNew() && !guiaremision.getIsChanged() && !guiaremision.getIsDeleted()) {
				sDescripcion=guiaremision.getempresa_descripcion();
			} else {
				//sDescripcion=this.getActualEmpresaForeignKeyDescripcion((Long)value);
				sDescripcion=guiaremision.getempresa_descripcion();
			}
		}

		if(sTipo.equals("Sucursal")) {
			//sDescripcion=this.getActualSucursalForeignKeyDescripcion((Long)value);
			if(!guiaremision.getIsNew() && !guiaremision.getIsChanged() && !guiaremision.getIsDeleted()) {
				sDescripcion=guiaremision.getsucursal_descripcion();
			} else {
				//sDescripcion=this.getActualSucursalForeignKeyDescripcion((Long)value);
				sDescripcion=guiaremision.getsucursal_descripcion();
			}
		}

		if(sTipo.equals("Ejercicio")) {
			//sDescripcion=this.getActualEjercicioForeignKeyDescripcion((Long)value);
			if(!guiaremision.getIsNew() && !guiaremision.getIsChanged() && !guiaremision.getIsDeleted()) {
				sDescripcion=guiaremision.getejercicio_descripcion();
			} else {
				//sDescripcion=this.getActualEjercicioForeignKeyDescripcion((Long)value);
				sDescripcion=guiaremision.getejercicio_descripcion();
			}
		}

		if(sTipo.equals("Periodo")) {
			//sDescripcion=this.getActualPeriodoForeignKeyDescripcion((Long)value);
			if(!guiaremision.getIsNew() && !guiaremision.getIsChanged() && !guiaremision.getIsDeleted()) {
				sDescripcion=guiaremision.getperiodo_descripcion();
			} else {
				//sDescripcion=this.getActualPeriodoForeignKeyDescripcion((Long)value);
				sDescripcion=guiaremision.getperiodo_descripcion();
			}
		}

		if(sTipo.equals("Usuario")) {
			//sDescripcion=this.getActualUsuarioForeignKeyDescripcion((Long)value);
			if(!guiaremision.getIsNew() && !guiaremision.getIsChanged() && !guiaremision.getIsDeleted()) {
				sDescripcion=guiaremision.getusuario_descripcion();
			} else {
				//sDescripcion=this.getActualUsuarioForeignKeyDescripcion((Long)value);
				sDescripcion=guiaremision.getusuario_descripcion();
			}
		}

		if(sTipo.equals("Formato")) {
			//sDescripcion=this.getActualFormatoForeignKeyDescripcion((Long)value);
			if(!guiaremision.getIsNew() && !guiaremision.getIsChanged() && !guiaremision.getIsDeleted()) {
				sDescripcion=guiaremision.getformato_descripcion();
			} else {
				//sDescripcion=this.getActualFormatoForeignKeyDescripcion((Long)value);
				sDescripcion=guiaremision.getformato_descripcion();
			}
		}

		if(sTipo.equals("TipoPrecio")) {
			//sDescripcion=this.getActualTipoPrecioForeignKeyDescripcion((Long)value);
			if(!guiaremision.getIsNew() && !guiaremision.getIsChanged() && !guiaremision.getIsDeleted()) {
				sDescripcion=guiaremision.gettipoprecio_descripcion();
			} else {
				//sDescripcion=this.getActualTipoPrecioForeignKeyDescripcion((Long)value);
				sDescripcion=guiaremision.gettipoprecio_descripcion();
			}
		}

		if(sTipo.equals("Moneda")) {
			//sDescripcion=this.getActualMonedaForeignKeyDescripcion((Long)value);
			if(!guiaremision.getIsNew() && !guiaremision.getIsChanged() && !guiaremision.getIsDeleted()) {
				sDescripcion=guiaremision.getmoneda_descripcion();
			} else {
				//sDescripcion=this.getActualMonedaForeignKeyDescripcion((Long)value);
				sDescripcion=guiaremision.getmoneda_descripcion();
			}
		}

		if(sTipo.equals("Cliente")) {
			//sDescripcion=this.getActualClienteForeignKeyDescripcion((Long)value);
			if(!guiaremision.getIsNew() && !guiaremision.getIsChanged() && !guiaremision.getIsDeleted()) {
				sDescripcion=guiaremision.getcliente_descripcion();
			} else {
				//sDescripcion=this.getActualClienteForeignKeyDescripcion((Long)value);
				sDescripcion=guiaremision.getcliente_descripcion();
			}
		}

		if(sTipo.equals("Vendedor")) {
			//sDescripcion=this.getActualVendedorForeignKeyDescripcion((Long)value);
			if(!guiaremision.getIsNew() && !guiaremision.getIsChanged() && !guiaremision.getIsDeleted()) {
				sDescripcion=guiaremision.getvendedor_descripcion();
			} else {
				//sDescripcion=this.getActualVendedorForeignKeyDescripcion((Long)value);
				sDescripcion=guiaremision.getvendedor_descripcion();
			}
		}

		if(sTipo.equals("Factura")) {
			//sDescripcion=this.getActualFacturaForeignKeyDescripcion((Long)value);
			if(!guiaremision.getIsNew() && !guiaremision.getIsChanged() && !guiaremision.getIsDeleted()) {
				sDescripcion=guiaremision.getfactura_descripcion();
			} else {
				//sDescripcion=this.getActualFacturaForeignKeyDescripcion((Long)value);
				sDescripcion=guiaremision.getfactura_descripcion();
			}
		}

		if(sTipo.equals("Transportista")) {
			//sDescripcion=this.getActualTransportistaForeignKeyDescripcion((Long)value);
			if(!guiaremision.getIsNew() && !guiaremision.getIsChanged() && !guiaremision.getIsDeleted()) {
				sDescripcion=guiaremision.gettransportista_descripcion();
			} else {
				//sDescripcion=this.getActualTransportistaForeignKeyDescripcion((Long)value);
				sDescripcion=guiaremision.gettransportista_descripcion();
			}
		}

		if(sTipo.equals("Consultor")) {
			//sDescripcion=this.getActualConsultorForeignKeyDescripcion((Long)value);
			if(!guiaremision.getIsNew() && !guiaremision.getIsChanged() && !guiaremision.getIsDeleted()) {
				sDescripcion=guiaremision.getconsultor_descripcion();
			} else {
				//sDescripcion=this.getActualConsultorForeignKeyDescripcion((Long)value);
				sDescripcion=guiaremision.getconsultor_descripcion();
			}
		}

		if(sTipo.equals("Transporte")) {
			//sDescripcion=this.getActualTransporteForeignKeyDescripcion((Long)value);
			if(!guiaremision.getIsNew() && !guiaremision.getIsChanged() && !guiaremision.getIsDeleted()) {
				sDescripcion=guiaremision.gettransporte_descripcion();
			} else {
				//sDescripcion=this.getActualTransporteForeignKeyDescripcion((Long)value);
				sDescripcion=guiaremision.gettransporte_descripcion();
			}
		}

		if(sTipo.equals("SubCliente")) {
			//sDescripcion=this.getActualSubClienteForeignKeyDescripcion((Long)value);
			if(!guiaremision.getIsNew() && !guiaremision.getIsChanged() && !guiaremision.getIsDeleted()) {
				sDescripcion=guiaremision.getsubcliente_descripcion();
			} else {
				//sDescripcion=this.getActualSubClienteForeignKeyDescripcion((Long)value);
				sDescripcion=guiaremision.getsubcliente_descripcion();
			}
		}

		if(sTipo.equals("Empleado")) {
			//sDescripcion=this.getActualEmpleadoForeignKeyDescripcion((Long)value);
			if(!guiaremision.getIsNew() && !guiaremision.getIsChanged() && !guiaremision.getIsDeleted()) {
				sDescripcion=guiaremision.getempleado_descripcion();
			} else {
				//sDescripcion=this.getActualEmpleadoForeignKeyDescripcion((Long)value);
				sDescripcion=guiaremision.getempleado_descripcion();
			}
		}

		if(sTipo.equals("CiudadOrigen")) {
			//sDescripcion=this.getActualCiudadOrigenForeignKeyDescripcion((Long)value);
			if(!guiaremision.getIsNew() && !guiaremision.getIsChanged() && !guiaremision.getIsDeleted()) {
				sDescripcion=guiaremision.getciudadorigen_descripcion();
			} else {
				//sDescripcion=this.getActualCiudadOrigenForeignKeyDescripcion((Long)value);
				sDescripcion=guiaremision.getciudadorigen_descripcion();
			}
		}

		if(sTipo.equals("CiudadDestino")) {
			//sDescripcion=this.getActualCiudadDestinoForeignKeyDescripcion((Long)value);
			if(!guiaremision.getIsNew() && !guiaremision.getIsChanged() && !guiaremision.getIsDeleted()) {
				sDescripcion=guiaremision.getciudaddestino_descripcion();
			} else {
				//sDescripcion=this.getActualCiudadDestinoForeignKeyDescripcion((Long)value);
				sDescripcion=guiaremision.getciudaddestino_descripcion();
			}
		}

		if(sTipo.equals("TipoLlamada")) {
			//sDescripcion=this.getActualTipoLlamadaForeignKeyDescripcion((Long)value);
			if(!guiaremision.getIsNew() && !guiaremision.getIsChanged() && !guiaremision.getIsDeleted()) {
				sDescripcion=guiaremision.gettipollamada_descripcion();
			} else {
				//sDescripcion=this.getActualTipoLlamadaForeignKeyDescripcion((Long)value);
				sDescripcion=guiaremision.gettipollamada_descripcion();
			}
		}

		if(sTipo.equals("TipoCambio")) {
			//sDescripcion=this.getActualTipoCambioForeignKeyDescripcion((Long)value);
			if(!guiaremision.getIsNew() && !guiaremision.getIsChanged() && !guiaremision.getIsDeleted()) {
				sDescripcion=guiaremision.gettipocambio_descripcion();
			} else {
				//sDescripcion=this.getActualTipoCambioForeignKeyDescripcion((Long)value);
				sDescripcion=guiaremision.gettipocambio_descripcion();
			}
		}

		
		return sDescripcion;
	}
	
	public Color getColorFk(String sTipo,JTable table,Object value,int intSelectedRow) throws Exception {
		//DESCRIPCIONES FK		
		Color color=Color.WHITE;
		
		GuiaRemision guiaremisionRow=new GuiaRemision();
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			guiaremisionRow=(GuiaRemision) guiaremisionLogic.getGuiaRemisions().toArray()[table.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE) {
			guiaremisionRow=(GuiaRemision) guiaremisions.toArray()[table.convertRowIndexToModel(intSelectedRow)];
		}
					
		
		
		return color;
	}
	
	
	
	
	public void jButtonDetalleGuiaRemisionActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,GuiaRemision guiaremision) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormGuiaRemision==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.guiaremision = (GuiaRemision)this.guiaremisionLogic.getGuiaRemisions().toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.guiaremision = (GuiaRemision)this.guiaremisions.toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(guiaremision!=null) {
						this.guiaremision = guiaremision;
					} else {
						this.guiaremision = new GuiaRemision();
					}
				}

				if(this.isTienePermisosDetalleGuiaRemision && this.permiteMantenimiento(this.guiaremision)) {
					DetalleGuiaRemisionBeanSwingJInternalFrame detalleguiaremisionBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormGuiaRemision.detalleguiaremisionBeanSwingJInternalFramePopup=new DetalleGuiaRemisionBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormGuiaRemision.detalleguiaremisionBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						detalleguiaremisionBeanSwingJInternalFrame=this.jInternalFrameDetalleFormGuiaRemision.detalleguiaremisionBeanSwingJInternalFramePopup;
					} else {
						detalleguiaremisionBeanSwingJInternalFrame=this.jInternalFrameDetalleFormGuiaRemision.detalleguiaremisionBeanSwingJInternalFrame;
					}

					List<GuiaRemision> guiaremisions=new ArrayList<GuiaRemision>();
					guiaremisions.add(this.guiaremision);
					if(!esRelacionado) {
						//detalleguiaremisionBeanSwingJInternalFrame.detalleguiaremisionSessionBean.setConGuardarRelaciones(false);
						//detalleguiaremisionBeanSwingJInternalFrame.detalleguiaremisionSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					detalleguiaremisionBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormGuiaRemision.cargarDetalleGuiaRemisionBeanSwingJInternalFrame(guiaremisions,this.guiaremision,detalleguiaremisionBeanSwingJInternalFrame,/*conInicializar,*/detalleguiaremisionBeanSwingJInternalFrame.detalleguiaremisionSessionBean.getConGuardarRelaciones(),detalleguiaremisionBeanSwingJInternalFrame.detalleguiaremisionSessionBean.getEsGuardarRelacionado());
					detalleguiaremisionBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						detalleguiaremisionBeanSwingJInternalFrame.actualizarEstadoPanelsDetalleGuiaRemision("no_relacionado");

						detalleguiaremisionBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(DetalleGuiaRemisionConstantesFunciones.ITAMANIOFILATABLA + (DetalleGuiaRemisionConstantesFunciones.ITAMANIOFILATABLA/2));

						detalleguiaremisionBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderGuiaRemision=(TitledBorder)this.jScrollPanelDatosGuiaRemision.getBorder();
						TitledBorder titledBorderDetalleGuiaRemision=(TitledBorder)detalleguiaremisionBeanSwingJInternalFrame.jScrollPanelDatosDetalleGuiaRemision.getBorder();

						titledBorderDetalleGuiaRemision.setTitle(titledBorderGuiaRemision.getTitle() + " -> Detalle Guia Remision");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,detalleguiaremisionBeanSwingJInternalFrame);
						}

						detalleguiaremisionBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(detalleguiaremisionBeanSwingJInternalFrame);

						detalleguiaremisionBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.guiaremisionSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Detalle Guia Remision",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.closeNewConnexionToDeep();
				}

			}
		}

	
	
	
	public void refrescarBindingTabla(Boolean blnSoloTabla) {
	}
	
	public void inicializarActualizarBindingBotonesManualGuiaRemision(Boolean esSetControles) {						
		if(esSetControles) {
			this.jButtonNuevoGuiaRemision.setVisible((this.isVisibilidadCeldaNuevoGuiaRemision && this.isPermisoNuevoGuiaRemision));			
			this.jButtonDuplicarGuiaRemision.setVisible((this.isVisibilidadCeldaDuplicarGuiaRemision && this.isPermisoDuplicarGuiaRemision));			
			this.jButtonCopiarGuiaRemision.setVisible((this.isVisibilidadCeldaCopiarGuiaRemision && this.isPermisoCopiarGuiaRemision));
			this.jButtonVerFormGuiaRemision.setVisible((this.isVisibilidadCeldaVerFormGuiaRemision && this.isPermisoVerFormGuiaRemision));
			
			this.jButtonAbrirOrderByGuiaRemision.setVisible((this.isVisibilidadCeldaOrdenGuiaRemision && this.isPermisoOrdenGuiaRemision));			
			
			this.jButtonNuevoRelacionesGuiaRemision.setVisible((this.isVisibilidadCeldaNuevoRelacionesGuiaRemision && this.isPermisoNuevoGuiaRemision));			
			this.jButtonNuevoGuardarCambiosGuiaRemision.setVisible((this.isVisibilidadCeldaNuevoGuiaRemision && this.isPermisoNuevoGuiaRemision && this.isPermisoGuardarCambiosGuiaRemision));
			
			if(this.jInternalFrameDetalleFormGuiaRemision!=null) {
			this.jInternalFrameDetalleFormGuiaRemision.jButtonModificarGuiaRemision.setVisible((this.isVisibilidadCeldaModificarGuiaRemision && this.isPermisoActualizarGuiaRemision));	
			this.jInternalFrameDetalleFormGuiaRemision.jButtonActualizarGuiaRemision.setVisible((this.isVisibilidadCeldaActualizarGuiaRemision && this.isPermisoActualizarGuiaRemision));	
			this.jInternalFrameDetalleFormGuiaRemision.jButtonEliminarGuiaRemision.setVisible((this.isVisibilidadCeldaEliminarGuiaRemision && this.isPermisoEliminarGuiaRemision));
			this.jInternalFrameDetalleFormGuiaRemision.jButtonCancelarGuiaRemision.setVisible(this.isVisibilidadCeldaCancelarGuiaRemision);							
			this.jInternalFrameDetalleFormGuiaRemision.jButtonGuardarCambiosGuiaRemision.setVisible((this.isVisibilidadCeldaGuardarGuiaRemision && this.isPermisoGuardarCambiosGuiaRemision));			
			
			}
						
			this.jButtonGuardarCambiosTablaGuiaRemision.setVisible((this.isVisibilidadCeldaGuardarCambiosGuiaRemision && this.isPermisoGuardarCambiosGuiaRemision));							
			
			//TOOLBAR
			
			this.jButtonNuevoToolBarGuiaRemision.setVisible((this.isVisibilidadCeldaNuevoGuiaRemision && this.isPermisoNuevoGuiaRemision));						
			this.jButtonDuplicarToolBarGuiaRemision.setVisible((this.isVisibilidadCeldaDuplicarGuiaRemision && this.isPermisoDuplicarGuiaRemision));						
			this.jButtonCopiarToolBarGuiaRemision.setVisible((this.isVisibilidadCeldaCopiarGuiaRemision && this.isPermisoCopiarGuiaRemision));			
			this.jButtonVerFormToolBarGuiaRemision.setVisible((this.isVisibilidadCeldaVerFormGuiaRemision && this.isPermisoVerFormGuiaRemision));			
			this.jButtonAbrirOrderByToolBarGuiaRemision.setVisible((this.isVisibilidadCeldaOrdenGuiaRemision && this.isPermisoOrdenGuiaRemision));
			this.jButtonNuevoRelacionesToolBarGuiaRemision.setVisible((this.isVisibilidadCeldaNuevoRelacionesGuiaRemision && this.isPermisoNuevoGuiaRemision));			
			this.jButtonNuevoGuardarCambiosToolBarGuiaRemision.setVisible((this.isVisibilidadCeldaNuevoGuiaRemision && this.isPermisoNuevoGuiaRemision && this.isPermisoGuardarCambiosGuiaRemision));			
			
			if(this.jInternalFrameDetalleFormGuiaRemision!=null) {
			this.jInternalFrameDetalleFormGuiaRemision.jButtonModificarToolBarGuiaRemision.setVisible((this.isVisibilidadCeldaModificarGuiaRemision && this.isPermisoActualizarGuiaRemision));	
			this.jInternalFrameDetalleFormGuiaRemision.jButtonActualizarToolBarGuiaRemision.setVisible((this.isVisibilidadCeldaActualizarGuiaRemision  && this.isPermisoActualizarGuiaRemision));	
			this.jInternalFrameDetalleFormGuiaRemision.jButtonEliminarToolBarGuiaRemision.setVisible((this.isVisibilidadCeldaEliminarGuiaRemision && this.isPermisoEliminarGuiaRemision));
			this.jInternalFrameDetalleFormGuiaRemision.jButtonCancelarToolBarGuiaRemision.setVisible(this.isVisibilidadCeldaCancelarGuiaRemision);				
			this.jInternalFrameDetalleFormGuiaRemision.jButtonGuardarCambiosToolBarGuiaRemision.setVisible((this.isVisibilidadCeldaGuardarGuiaRemision && this.isPermisoGuardarCambiosGuiaRemision));									
			}
			
			this.jButtonGuardarCambiosTablaToolBarGuiaRemision.setVisible((this.isVisibilidadCeldaGuardarCambiosGuiaRemision && this.isPermisoGuardarCambiosGuiaRemision));									
			
			//TOOLBAR
			
			//MENUS
			
			this.jMenuItemNuevoGuiaRemision.setVisible((this.isVisibilidadCeldaNuevoGuiaRemision && this.isPermisoNuevoGuiaRemision));			
			this.jMenuItemDuplicarGuiaRemision.setVisible((this.isVisibilidadCeldaDuplicarGuiaRemision && this.isPermisoDuplicarGuiaRemision));			
			this.jMenuItemCopiarGuiaRemision.setVisible((this.isVisibilidadCeldaCopiarGuiaRemision && this.isPermisoCopiarGuiaRemision));			
			this.jMenuItemVerFormGuiaRemision.setVisible((this.isVisibilidadCeldaVerFormGuiaRemision && this.isPermisoVerFormGuiaRemision));			
			this.jMenuItemAbrirOrderByGuiaRemision.setVisible((this.isVisibilidadCeldaOrdenGuiaRemision && this.isPermisoOrdenGuiaRemision));			
			//this.jMenuItemMostrarOcultarGuiaRemision.setVisible((this.isVisibilidadCeldaOrdenGuiaRemision && this.isPermisoOrdenGuiaRemision));
			this.jMenuItemDetalleAbrirOrderByGuiaRemision.setVisible((this.isVisibilidadCeldaOrdenGuiaRemision && this.isPermisoOrdenGuiaRemision));			
			//this.jMenuItemDetalleMostrarOcultarGuiaRemision.setVisible((this.isVisibilidadCeldaOrdenGuiaRemision && this.isPermisoOrdenGuiaRemision));			
			this.jMenuItemNuevoRelacionesGuiaRemision.setVisible((this.isVisibilidadCeldaNuevoRelacionesGuiaRemision && this.isPermisoNuevoGuiaRemision));			
			this.jMenuItemNuevoGuardarCambiosGuiaRemision.setVisible((this.isVisibilidadCeldaNuevoGuiaRemision && this.isPermisoNuevoGuiaRemision && this.isPermisoGuardarCambiosGuiaRemision));									
			
			if(this.jInternalFrameDetalleFormGuiaRemision!=null) {
			this.jInternalFrameDetalleFormGuiaRemision.jMenuItemModificarGuiaRemision.setVisible((this.isVisibilidadCeldaModificarGuiaRemision && this.isPermisoActualizarGuiaRemision));	
			this.jInternalFrameDetalleFormGuiaRemision.jMenuItemActualizarGuiaRemision.setVisible((this.isVisibilidadCeldaActualizarGuiaRemision && this.isPermisoActualizarGuiaRemision));	
			this.jInternalFrameDetalleFormGuiaRemision.jMenuItemEliminarGuiaRemision.setVisible((this.isVisibilidadCeldaEliminarGuiaRemision && this.isPermisoEliminarGuiaRemision));
			this.jInternalFrameDetalleFormGuiaRemision.jMenuItemCancelarGuiaRemision.setVisible(this.isVisibilidadCeldaCancelarGuiaRemision);				
			}
			
			this.jMenuItemGuardarCambiosGuiaRemision.setVisible((this.isVisibilidadCeldaGuardarGuiaRemision && this.isPermisoGuardarCambiosGuiaRemision));						
			this.jMenuItemGuardarCambiosTablaGuiaRemision.setVisible((this.isVisibilidadCeldaGuardarCambiosGuiaRemision && this.isPermisoGuardarCambiosGuiaRemision));						
			
			//MENUS
			
		} else {
			this.isVisibilidadCeldaNuevoGuiaRemision=this.jButtonNuevoGuiaRemision.isVisible();
			this.isVisibilidadCeldaDuplicarGuiaRemision=this.jButtonDuplicarGuiaRemision.isVisible();
			this.isVisibilidadCeldaCopiarGuiaRemision=this.jButtonCopiarGuiaRemision.isVisible();
			this.isVisibilidadCeldaVerFormGuiaRemision=this.jButtonVerFormGuiaRemision.isVisible();
			
			this.isVisibilidadCeldaOrdenGuiaRemision=this.jButtonAbrirOrderByGuiaRemision.isVisible();			
			
			this.isVisibilidadCeldaNuevoRelacionesGuiaRemision=this.jButtonNuevoRelacionesGuiaRemision.isVisible();
			this.isVisibilidadCeldaModificarGuiaRemision=this.jButtonModificarGuiaRemision.isVisible();
			
			if(this.jInternalFrameDetalleFormGuiaRemision!=null) {
			this.isVisibilidadCeldaActualizarGuiaRemision=this.jInternalFrameDetalleFormGuiaRemision.jButtonActualizarGuiaRemision.isVisible();
			this.isVisibilidadCeldaEliminarGuiaRemision=this.jInternalFrameDetalleFormGuiaRemision.jButtonEliminarGuiaRemision.isVisible();
			this.isVisibilidadCeldaCancelarGuiaRemision=this.jInternalFrameDetalleFormGuiaRemision.jButtonCancelarGuiaRemision.isVisible();
			this.isVisibilidadCeldaGuardarGuiaRemision=this.jInternalFrameDetalleFormGuiaRemision.jButtonGuardarCambiosGuiaRemision.isVisible();			
			}
			
			this.isVisibilidadCeldaGuardarCambiosGuiaRemision=this.jButtonGuardarCambiosTablaGuiaRemision.isVisible();
			
			//TOOLBAR
			
			this.isVisibilidadCeldaNuevoGuiaRemision=this.jButtonNuevoToolBarGuiaRemision.isVisible();
			this.isVisibilidadCeldaNuevoRelacionesGuiaRemision=this.jButtonNuevoRelacionesToolBarGuiaRemision.isVisible();
			
			if(this.jInternalFrameDetalleFormGuiaRemision!=null) {
			this.isVisibilidadCeldaModificarGuiaRemision=this.jInternalFrameDetalleFormGuiaRemision.jButtonModificarToolBarGuiaRemision.isVisible();
			this.isVisibilidadCeldaActualizarGuiaRemision=this.jInternalFrameDetalleFormGuiaRemision.jButtonActualizarToolBarGuiaRemision.isVisible();
			this.isVisibilidadCeldaEliminarGuiaRemision=this.jInternalFrameDetalleFormGuiaRemision.jButtonEliminarToolBarGuiaRemision.isVisible();
			this.isVisibilidadCeldaCancelarGuiaRemision=this.jInternalFrameDetalleFormGuiaRemision.jButtonCancelarToolBarGuiaRemision.isVisible();
			}
			
			this.isVisibilidadCeldaGuardarGuiaRemision=this.jButtonGuardarCambiosToolBarGuiaRemision.isVisible();
			this.isVisibilidadCeldaGuardarCambiosGuiaRemision=this.jButtonGuardarCambiosTablaToolBarGuiaRemision.isVisible();						
			
			//TOOLBAR
			
			//MENUS
			
			this.isVisibilidadCeldaNuevoGuiaRemision=this.jMenuItemNuevoGuiaRemision.isVisible();
			this.isVisibilidadCeldaNuevoRelacionesGuiaRemision=this.jMenuItemNuevoRelacionesGuiaRemision.isVisible();
			
			if(this.jInternalFrameDetalleFormGuiaRemision!=null) {
			this.isVisibilidadCeldaModificarGuiaRemision=this.jInternalFrameDetalleFormGuiaRemision.jMenuItemModificarGuiaRemision.isVisible();
			this.isVisibilidadCeldaActualizarGuiaRemision=this.jInternalFrameDetalleFormGuiaRemision.jMenuItemActualizarGuiaRemision.isVisible();
			this.isVisibilidadCeldaEliminarGuiaRemision=this.jInternalFrameDetalleFormGuiaRemision.jMenuItemEliminarGuiaRemision.isVisible();
			this.isVisibilidadCeldaCancelarGuiaRemision=this.jInternalFrameDetalleFormGuiaRemision.jMenuItemCancelarGuiaRemision.isVisible();
			}
			
			this.isVisibilidadCeldaGuardarGuiaRemision=this.jMenuItemGuardarCambiosGuiaRemision.isVisible();
			this.isVisibilidadCeldaGuardarCambiosGuiaRemision=this.jMenuItemGuardarCambiosTablaGuiaRemision.isVisible();						
			
			//MENUS
		}
	}
	
	public void inicializarActualizarBindingBotonesGuiaRemision(Boolean esInicializar) {
		if(GuiaRemisionJInternalFrame.ISBINDING_MANUAL) {			
			if(this.guiaremisionSessionBean.getConGuardarRelaciones()) {
				//if(this.guiaremisionSessionBean.getEsGuardarRelacionado()) {
				
				this.actualizarEstadoCeldasBotonesConGuardarRelacionesGuiaRemision();
			}
			
			this.inicializarActualizarBindingBotonesManualGuiaRemision(true);
			
		} else {	
		}
	}		
	
	public void inicializarActualizarBindingBotonesPermisosManualGuiaRemision() {
		this.jButtonNuevoGuiaRemision.setVisible(this.isPermisoNuevoGuiaRemision);			
		this.jButtonDuplicarGuiaRemision.setVisible(this.isPermisoDuplicarGuiaRemision);			
		this.jButtonCopiarGuiaRemision.setVisible(this.isPermisoCopiarGuiaRemision);			
		this.jButtonVerFormGuiaRemision.setVisible(this.isPermisoVerFormGuiaRemision);			
		
		this.jButtonAbrirOrderByGuiaRemision.setVisible(this.isPermisoOrdenGuiaRemision);					
		
		this.jButtonNuevoRelacionesGuiaRemision.setVisible(this.isPermisoNuevoGuiaRemision);			
		
		if(this.jInternalFrameDetalleFormGuiaRemision!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormGuiaRemision.jButtonModificarGuiaRemision.setVisible(this.isPermisoActualizarGuiaRemision);	
			this.jInternalFrameDetalleFormGuiaRemision.jButtonActualizarGuiaRemision.setVisible(this.isPermisoActualizarGuiaRemision);	
			this.jInternalFrameDetalleFormGuiaRemision.jButtonEliminarGuiaRemision.setVisible(this.isPermisoEliminarGuiaRemision);
			this.jInternalFrameDetalleFormGuiaRemision.jButtonCancelarGuiaRemision.setVisible(this.isVisibilidadCeldaCancelarGuiaRemision);						
			this.jInternalFrameDetalleFormGuiaRemision.jButtonGuardarCambiosGuiaRemision.setVisible(this.isPermisoGuardarCambiosGuiaRemision);							
		}
		
		this.jButtonGuardarCambiosTablaGuiaRemision.setVisible(this.isPermisoActualizarGuiaRemision);
	}
	
	public void inicializarActualizarBindingBotonesPermisosManualFormDetalleGuiaRemision() {
		this.jInternalFrameDetalleFormGuiaRemision.jButtonModificarGuiaRemision.setVisible(this.isPermisoActualizarGuiaRemision);	
		this.jInternalFrameDetalleFormGuiaRemision.jButtonActualizarGuiaRemision.setVisible(this.isPermisoActualizarGuiaRemision);	
		this.jInternalFrameDetalleFormGuiaRemision.jButtonEliminarGuiaRemision.setVisible(this.isPermisoEliminarGuiaRemision);
		this.jInternalFrameDetalleFormGuiaRemision.jButtonCancelarGuiaRemision.setVisible(this.isVisibilidadCeldaCancelarGuiaRemision);							
		this.jInternalFrameDetalleFormGuiaRemision.jButtonGuardarCambiosGuiaRemision.setVisible((this.isVisibilidadCeldaGuardarGuiaRemision && this.isPermisoGuardarCambiosGuiaRemision));			
	}
	
	public void inicializarActualizarBindingBotonesPermisosGuiaRemision() {
		if(GuiaRemisionJInternalFrame.ISBINDING_MANUAL) {
			this.inicializarActualizarBindingBotonesPermisosManualGuiaRemision();
		} else {
		}
	}
	
	
	public void refrescarBindingBotonesGuiaRemision() {
	}
	
	public void jTableDatosGuiaRemisionListSelectionListener(javax.swing.event.ListSelectionEvent evt) throws Exception { 
		try {
			this.seleccionarGuiaRemision(null,evt,-1);
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);
		}
	}
	
	
	public void jButtonidGuiaRemisionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosGuiaRemision.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualGuiaRemision(this.getguiaremision(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysGuiaRemision(this.guiaremision);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.guiaremision =(GuiaRemision) this.guiaremisionLogic.getGuiaRemisions().toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.guiaremision =(GuiaRemision) this.guiaremisions.toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.guiaremision==null) {
						this.guiaremision = new GuiaRemision();
					}

					this.setVariablesFormularioToObjetoActualGuiaRemision(this.guiaremision,true);
					this.setVariablesFormularioToObjetoActualForeignKeysGuiaRemision(this.guiaremision);
				}

				if(this.guiaremision.getId()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id = "+this.guiaremision.getId().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingGuiaRemision(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_empresaGuiaRemisionUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoempresa=true;

			idTienePermisoempresa=this.tienePermisosUsuarioEnPaginaWebGuiaRemision(EmpresaConstantesFunciones.CLASSNAME);

			if(idTienePermisoempresa) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosGuiaRemision.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosGuiaRemision.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosGuiaRemision.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremision =(GuiaRemision) this.guiaremisionLogic.getGuiaRemisions().toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.guiaremision =(GuiaRemision) this.guiaremisions.toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualGuiaRemision(this.getguiaremision(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysGuiaRemision(this.guiaremision);

				this.empresaBeanSwingJInternalFrame=new EmpresaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.empresaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.empresaBeanSwingJInternalFrame.getEmpresaLogic().setConnexion(this.guiaremisionLogic.getConnexion());

				if(this.guiaremision.getid_empresa()!=null) {
					this.empresaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.empresaBeanSwingJInternalFrame.setIdActual(this.guiaremision.getid_empresa());
					this.empresaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.empresaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.empresaBeanSwingJInternalFrame.inicializarActualizarBindingTablaEmpresa();
				}

				JInternalFrameBase jinternalFrame =this.empresaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderGuiaRemision=(TitledBorder)this.jScrollPanelDatosGuiaRemision.getBorder();
				TitledBorder titledBorderempresa=(TitledBorder)this.empresaBeanSwingJInternalFrame.jScrollPanelDatosEmpresa.getBorder();

				titledBorderempresa.setTitle(titledBorderGuiaRemision.getTitle() + " -> Empresa");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_empresaGuiaRemisionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosGuiaRemision.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualGuiaRemision(this.getguiaremision(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysGuiaRemision(this.guiaremision);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.guiaremision =(GuiaRemision) this.guiaremisionLogic.getGuiaRemisions().toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.guiaremision =(GuiaRemision) this.guiaremisions.toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.guiaremision==null) {
						this.guiaremision = new GuiaRemision();
					}

					this.setVariablesFormularioToObjetoActualGuiaRemision(this.guiaremision,true);
					this.setVariablesFormularioToObjetoActualForeignKeysGuiaRemision(this.guiaremision);
				}

				if(this.guiaremision.getid_empresa()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_empresa = "+this.guiaremision.getid_empresa().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingGuiaRemision(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_sucursalGuiaRemisionUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisosucursal=true;

			idTienePermisosucursal=this.tienePermisosUsuarioEnPaginaWebGuiaRemision(SucursalConstantesFunciones.CLASSNAME);

			if(idTienePermisosucursal) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosGuiaRemision.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosGuiaRemision.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosGuiaRemision.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremision =(GuiaRemision) this.guiaremisionLogic.getGuiaRemisions().toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.guiaremision =(GuiaRemision) this.guiaremisions.toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualGuiaRemision(this.getguiaremision(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysGuiaRemision(this.guiaremision);

				this.sucursalBeanSwingJInternalFrame=new SucursalBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.sucursalBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.sucursalBeanSwingJInternalFrame.getSucursalLogic().setConnexion(this.guiaremisionLogic.getConnexion());

				if(this.guiaremision.getid_sucursal()!=null) {
					this.sucursalBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.sucursalBeanSwingJInternalFrame.setIdActual(this.guiaremision.getid_sucursal());
					this.sucursalBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.sucursalBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.sucursalBeanSwingJInternalFrame.inicializarActualizarBindingTablaSucursal();
				}

				JInternalFrameBase jinternalFrame =this.sucursalBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderGuiaRemision=(TitledBorder)this.jScrollPanelDatosGuiaRemision.getBorder();
				TitledBorder titledBordersucursal=(TitledBorder)this.sucursalBeanSwingJInternalFrame.jScrollPanelDatosSucursal.getBorder();

				titledBordersucursal.setTitle(titledBorderGuiaRemision.getTitle() + " -> Sucursal");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_sucursalGuiaRemisionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosGuiaRemision.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualGuiaRemision(this.getguiaremision(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysGuiaRemision(this.guiaremision);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.guiaremision =(GuiaRemision) this.guiaremisionLogic.getGuiaRemisions().toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.guiaremision =(GuiaRemision) this.guiaremisions.toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.guiaremision==null) {
						this.guiaremision = new GuiaRemision();
					}

					this.setVariablesFormularioToObjetoActualGuiaRemision(this.guiaremision,true);
					this.setVariablesFormularioToObjetoActualForeignKeysGuiaRemision(this.guiaremision);
				}

				if(this.guiaremision.getid_sucursal()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_sucursal = "+this.guiaremision.getid_sucursal().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingGuiaRemision(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_ejercicioGuiaRemisionUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoejercicio=true;

			idTienePermisoejercicio=this.tienePermisosUsuarioEnPaginaWebGuiaRemision(EjercicioConstantesFunciones.CLASSNAME);

			if(idTienePermisoejercicio) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosGuiaRemision.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosGuiaRemision.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosGuiaRemision.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremision =(GuiaRemision) this.guiaremisionLogic.getGuiaRemisions().toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.guiaremision =(GuiaRemision) this.guiaremisions.toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualGuiaRemision(this.getguiaremision(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysGuiaRemision(this.guiaremision);

				this.ejercicioBeanSwingJInternalFrame=new EjercicioBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.ejercicioBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.ejercicioBeanSwingJInternalFrame.getEjercicioLogic().setConnexion(this.guiaremisionLogic.getConnexion());

				if(this.guiaremision.getid_ejercicio()!=null) {
					this.ejercicioBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.ejercicioBeanSwingJInternalFrame.setIdActual(this.guiaremision.getid_ejercicio());
					this.ejercicioBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.ejercicioBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.ejercicioBeanSwingJInternalFrame.inicializarActualizarBindingTablaEjercicio();
				}

				JInternalFrameBase jinternalFrame =this.ejercicioBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderGuiaRemision=(TitledBorder)this.jScrollPanelDatosGuiaRemision.getBorder();
				TitledBorder titledBorderejercicio=(TitledBorder)this.ejercicioBeanSwingJInternalFrame.jScrollPanelDatosEjercicio.getBorder();

				titledBorderejercicio.setTitle(titledBorderGuiaRemision.getTitle() + " -> Ejercicio");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_ejercicioGuiaRemisionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosGuiaRemision.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualGuiaRemision(this.getguiaremision(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysGuiaRemision(this.guiaremision);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.guiaremision =(GuiaRemision) this.guiaremisionLogic.getGuiaRemisions().toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.guiaremision =(GuiaRemision) this.guiaremisions.toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.guiaremision==null) {
						this.guiaremision = new GuiaRemision();
					}

					this.setVariablesFormularioToObjetoActualGuiaRemision(this.guiaremision,true);
					this.setVariablesFormularioToObjetoActualForeignKeysGuiaRemision(this.guiaremision);
				}

				if(this.guiaremision.getid_ejercicio()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_ejercicio = "+this.guiaremision.getid_ejercicio().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingGuiaRemision(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_periodoGuiaRemisionUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoperiodo=true;

			idTienePermisoperiodo=this.tienePermisosUsuarioEnPaginaWebGuiaRemision(PeriodoConstantesFunciones.CLASSNAME);

			if(idTienePermisoperiodo) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosGuiaRemision.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosGuiaRemision.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosGuiaRemision.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremision =(GuiaRemision) this.guiaremisionLogic.getGuiaRemisions().toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.guiaremision =(GuiaRemision) this.guiaremisions.toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualGuiaRemision(this.getguiaremision(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysGuiaRemision(this.guiaremision);

				this.periodoBeanSwingJInternalFrame=new PeriodoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.periodoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.periodoBeanSwingJInternalFrame.getPeriodoLogic().setConnexion(this.guiaremisionLogic.getConnexion());

				if(this.guiaremision.getid_periodo()!=null) {
					this.periodoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.periodoBeanSwingJInternalFrame.setIdActual(this.guiaremision.getid_periodo());
					this.periodoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.periodoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.periodoBeanSwingJInternalFrame.inicializarActualizarBindingTablaPeriodo();
				}

				JInternalFrameBase jinternalFrame =this.periodoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderGuiaRemision=(TitledBorder)this.jScrollPanelDatosGuiaRemision.getBorder();
				TitledBorder titledBorderperiodo=(TitledBorder)this.periodoBeanSwingJInternalFrame.jScrollPanelDatosPeriodo.getBorder();

				titledBorderperiodo.setTitle(titledBorderGuiaRemision.getTitle() + " -> Periodo");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_periodoGuiaRemisionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosGuiaRemision.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualGuiaRemision(this.getguiaremision(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysGuiaRemision(this.guiaremision);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.guiaremision =(GuiaRemision) this.guiaremisionLogic.getGuiaRemisions().toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.guiaremision =(GuiaRemision) this.guiaremisions.toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.guiaremision==null) {
						this.guiaremision = new GuiaRemision();
					}

					this.setVariablesFormularioToObjetoActualGuiaRemision(this.guiaremision,true);
					this.setVariablesFormularioToObjetoActualForeignKeysGuiaRemision(this.guiaremision);
				}

				if(this.guiaremision.getid_periodo()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_periodo = "+this.guiaremision.getid_periodo().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingGuiaRemision(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_usuarioGuiaRemisionUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisousuario=true;

			idTienePermisousuario=this.tienePermisosUsuarioEnPaginaWebGuiaRemision(UsuarioConstantesFunciones.CLASSNAME);

			if(idTienePermisousuario) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosGuiaRemision.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosGuiaRemision.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosGuiaRemision.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremision =(GuiaRemision) this.guiaremisionLogic.getGuiaRemisions().toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.guiaremision =(GuiaRemision) this.guiaremisions.toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualGuiaRemision(this.getguiaremision(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysGuiaRemision(this.guiaremision);

				this.usuarioBeanSwingJInternalFrame=new UsuarioBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.usuarioBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.usuarioBeanSwingJInternalFrame.getUsuarioLogic().setConnexion(this.guiaremisionLogic.getConnexion());

				if(this.guiaremision.getid_usuario()!=null) {
					this.usuarioBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.usuarioBeanSwingJInternalFrame.setIdActual(this.guiaremision.getid_usuario());
					this.usuarioBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.usuarioBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.usuarioBeanSwingJInternalFrame.inicializarActualizarBindingTablaUsuario();
				}

				JInternalFrameBase jinternalFrame =this.usuarioBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderGuiaRemision=(TitledBorder)this.jScrollPanelDatosGuiaRemision.getBorder();
				TitledBorder titledBorderusuario=(TitledBorder)this.usuarioBeanSwingJInternalFrame.jScrollPanelDatosUsuario.getBorder();

				titledBorderusuario.setTitle(titledBorderGuiaRemision.getTitle() + " -> Usuario");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_usuarioGuiaRemisionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosGuiaRemision.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualGuiaRemision(this.getguiaremision(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysGuiaRemision(this.guiaremision);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.guiaremision =(GuiaRemision) this.guiaremisionLogic.getGuiaRemisions().toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.guiaremision =(GuiaRemision) this.guiaremisions.toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.guiaremision==null) {
						this.guiaremision = new GuiaRemision();
					}

					this.setVariablesFormularioToObjetoActualGuiaRemision(this.guiaremision,true);
					this.setVariablesFormularioToObjetoActualForeignKeysGuiaRemision(this.guiaremision);
				}

				if(this.guiaremision.getid_usuario()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_usuario = "+this.guiaremision.getid_usuario().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingGuiaRemision(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonsecuencialGuiaRemisionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosGuiaRemision.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualGuiaRemision(this.getguiaremision(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysGuiaRemision(this.guiaremision);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.guiaremision =(GuiaRemision) this.guiaremisionLogic.getGuiaRemisions().toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.guiaremision =(GuiaRemision) this.guiaremisions.toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.guiaremision==null) {
						this.guiaremision = new GuiaRemision();
					}

					this.setVariablesFormularioToObjetoActualGuiaRemision(this.guiaremision,true);
					this.setVariablesFormularioToObjetoActualForeignKeysGuiaRemision(this.guiaremision);
				}

				if(this.guiaremision.getsecuencial()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where secuencial like '%"+this.guiaremision.getsecuencial()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingGuiaRemision(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonfecha_emisionGuiaRemisionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosGuiaRemision.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualGuiaRemision(this.getguiaremision(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysGuiaRemision(this.guiaremision);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.guiaremision =(GuiaRemision) this.guiaremisionLogic.getGuiaRemisions().toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.guiaremision =(GuiaRemision) this.guiaremisions.toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.guiaremision==null) {
						this.guiaremision = new GuiaRemision();
					}

					this.setVariablesFormularioToObjetoActualGuiaRemision(this.guiaremision,true);
					this.setVariablesFormularioToObjetoActualForeignKeysGuiaRemision(this.guiaremision);
				}

				if(this.guiaremision.getfecha_emision()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where fecha_emision = '"+Funciones2.getStringPostgresDate(this.guiaremision.getfecha_emision())+"' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingGuiaRemision(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_formatoGuiaRemisionUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoformato=true;

			idTienePermisoformato=this.tienePermisosUsuarioEnPaginaWebGuiaRemision(FormatoConstantesFunciones.CLASSNAME);

			if(idTienePermisoformato) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosGuiaRemision.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosGuiaRemision.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosGuiaRemision.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremision =(GuiaRemision) this.guiaremisionLogic.getGuiaRemisions().toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.guiaremision =(GuiaRemision) this.guiaremisions.toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualGuiaRemision(this.getguiaremision(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysGuiaRemision(this.guiaremision);

				this.formatoBeanSwingJInternalFrame=new FormatoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.formatoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.formatoBeanSwingJInternalFrame.getFormatoLogic().setConnexion(this.guiaremisionLogic.getConnexion());

				if(this.guiaremision.getid_formato()!=null) {
					this.formatoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.formatoBeanSwingJInternalFrame.setIdActual(this.guiaremision.getid_formato());
					this.formatoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.formatoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.formatoBeanSwingJInternalFrame.inicializarActualizarBindingTablaFormato();
				}

				JInternalFrameBase jinternalFrame =this.formatoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderGuiaRemision=(TitledBorder)this.jScrollPanelDatosGuiaRemision.getBorder();
				TitledBorder titledBorderformato=(TitledBorder)this.formatoBeanSwingJInternalFrame.jScrollPanelDatosFormato.getBorder();

				titledBorderformato.setTitle(titledBorderGuiaRemision.getTitle() + " -> Formato");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_formatoGuiaRemisionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosGuiaRemision.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualGuiaRemision(this.getguiaremision(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysGuiaRemision(this.guiaremision);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.guiaremision =(GuiaRemision) this.guiaremisionLogic.getGuiaRemisions().toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.guiaremision =(GuiaRemision) this.guiaremisions.toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.guiaremision==null) {
						this.guiaremision = new GuiaRemision();
					}

					this.setVariablesFormularioToObjetoActualGuiaRemision(this.guiaremision,true);
					this.setVariablesFormularioToObjetoActualForeignKeysGuiaRemision(this.guiaremision);
				}

				if(this.guiaremision.getid_formato()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_formato = "+this.guiaremision.getid_formato().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingGuiaRemision(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_tipo_precioGuiaRemisionUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotipoprecio=true;

			idTienePermisotipoprecio=this.tienePermisosUsuarioEnPaginaWebGuiaRemision(TipoPrecioConstantesFunciones.CLASSNAME);

			if(idTienePermisotipoprecio) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosGuiaRemision.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosGuiaRemision.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosGuiaRemision.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremision =(GuiaRemision) this.guiaremisionLogic.getGuiaRemisions().toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.guiaremision =(GuiaRemision) this.guiaremisions.toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualGuiaRemision(this.getguiaremision(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysGuiaRemision(this.guiaremision);

				this.tipoprecioBeanSwingJInternalFrame=new TipoPrecioBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.tipoprecioBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.tipoprecioBeanSwingJInternalFrame.getTipoPrecioLogic().setConnexion(this.guiaremisionLogic.getConnexion());

				if(this.guiaremision.getid_tipo_precio()!=null) {
					this.tipoprecioBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.tipoprecioBeanSwingJInternalFrame.setIdActual(this.guiaremision.getid_tipo_precio());
					this.tipoprecioBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.tipoprecioBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.tipoprecioBeanSwingJInternalFrame.inicializarActualizarBindingTablaTipoPrecio();
				}

				JInternalFrameBase jinternalFrame =this.tipoprecioBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderGuiaRemision=(TitledBorder)this.jScrollPanelDatosGuiaRemision.getBorder();
				TitledBorder titledBordertipoprecio=(TitledBorder)this.tipoprecioBeanSwingJInternalFrame.jScrollPanelDatosTipoPrecio.getBorder();

				titledBordertipoprecio.setTitle(titledBorderGuiaRemision.getTitle() + " -> Tipo Precio");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_tipo_precioGuiaRemisionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosGuiaRemision.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualGuiaRemision(this.getguiaremision(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysGuiaRemision(this.guiaremision);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.guiaremision =(GuiaRemision) this.guiaremisionLogic.getGuiaRemisions().toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.guiaremision =(GuiaRemision) this.guiaremisions.toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.guiaremision==null) {
						this.guiaremision = new GuiaRemision();
					}

					this.setVariablesFormularioToObjetoActualGuiaRemision(this.guiaremision,true);
					this.setVariablesFormularioToObjetoActualForeignKeysGuiaRemision(this.guiaremision);
				}

				if(this.guiaremision.getid_tipo_precio()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_tipo_precio = "+this.guiaremision.getid_tipo_precio().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingGuiaRemision(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_monedaGuiaRemisionUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisomoneda=true;

			idTienePermisomoneda=this.tienePermisosUsuarioEnPaginaWebGuiaRemision(MonedaConstantesFunciones.CLASSNAME);

			if(idTienePermisomoneda) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosGuiaRemision.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosGuiaRemision.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosGuiaRemision.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremision =(GuiaRemision) this.guiaremisionLogic.getGuiaRemisions().toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.guiaremision =(GuiaRemision) this.guiaremisions.toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualGuiaRemision(this.getguiaremision(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysGuiaRemision(this.guiaremision);

				this.monedaBeanSwingJInternalFrame=new MonedaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.monedaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.monedaBeanSwingJInternalFrame.getMonedaLogic().setConnexion(this.guiaremisionLogic.getConnexion());

				if(this.guiaremision.getid_moneda()!=null) {
					this.monedaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.monedaBeanSwingJInternalFrame.setIdActual(this.guiaremision.getid_moneda());
					this.monedaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.monedaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.monedaBeanSwingJInternalFrame.inicializarActualizarBindingTablaMoneda();
				}

				JInternalFrameBase jinternalFrame =this.monedaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderGuiaRemision=(TitledBorder)this.jScrollPanelDatosGuiaRemision.getBorder();
				TitledBorder titledBordermoneda=(TitledBorder)this.monedaBeanSwingJInternalFrame.jScrollPanelDatosMoneda.getBorder();

				titledBordermoneda.setTitle(titledBorderGuiaRemision.getTitle() + " -> Moneda");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_monedaGuiaRemisionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosGuiaRemision.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualGuiaRemision(this.getguiaremision(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysGuiaRemision(this.guiaremision);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.guiaremision =(GuiaRemision) this.guiaremisionLogic.getGuiaRemisions().toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.guiaremision =(GuiaRemision) this.guiaremisions.toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.guiaremision==null) {
						this.guiaremision = new GuiaRemision();
					}

					this.setVariablesFormularioToObjetoActualGuiaRemision(this.guiaremision,true);
					this.setVariablesFormularioToObjetoActualForeignKeysGuiaRemision(this.guiaremision);
				}

				if(this.guiaremision.getid_moneda()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_moneda = "+this.guiaremision.getid_moneda().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingGuiaRemision(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonnumero_camionGuiaRemisionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosGuiaRemision.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualGuiaRemision(this.getguiaremision(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysGuiaRemision(this.guiaremision);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.guiaremision =(GuiaRemision) this.guiaremisionLogic.getGuiaRemisions().toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.guiaremision =(GuiaRemision) this.guiaremisions.toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.guiaremision==null) {
						this.guiaremision = new GuiaRemision();
					}

					this.setVariablesFormularioToObjetoActualGuiaRemision(this.guiaremision,true);
					this.setVariablesFormularioToObjetoActualForeignKeysGuiaRemision(this.guiaremision);
				}

				if(this.guiaremision.getnumero_camion()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where numero_camion like '%"+this.guiaremision.getnumero_camion()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingGuiaRemision(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_clienteGuiaRemisionActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {
			this.clienteBeanSwingJInternalFrame=new ClienteBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
			this.clienteBeanSwingJInternalFrame.setJInternalFrameParent(this);
			this.clienteBeanSwingJInternalFrame.sTipoBusqueda="Cliente";

			if(!this.sFinalQueryGeneral_cliente.equals("")) {
				this.clienteBeanSwingJInternalFrame.setsFinalQueryGeneral(this.sFinalQueryGeneral_cliente);
				this.clienteBeanSwingJInternalFrame.sAccionBusqueda="Query";


				this.clienteBeanSwingJInternalFrame.procesarBusqueda(this.clienteBeanSwingJInternalFrame.sAccionBusqueda);
				this.clienteBeanSwingJInternalFrame.inicializarActualizarBindingCliente(false);
			}

			if(!this.sFinalQueryComboCliente.equals("") && false) {
			}


			JInternalFrameBase jinternalFrame =this.clienteBeanSwingJInternalFrame;
			jinternalFrame.setAutoscrolls(true);
			//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
			jinternalFrame.setVisible(true); 


			TitledBorder titledBorderGuiaRemision=null;
			TitledBorder titledBordercliente=null;

			if(!this.jScrollPanelDatosGuiaRemision.getBorder().getClass().equals(EmptyBorder.class)) {
				titledBorderGuiaRemision=(TitledBorder)this.jScrollPanelDatosGuiaRemision.getBorder();
				titledBordercliente=(TitledBorder)this.clienteBeanSwingJInternalFrame.jScrollPanelDatosCliente.getBorder();

				titledBordercliente.setTitle(titledBorderGuiaRemision.getTitle() + " -> Cliente");
			}

			if(!Constantes.CON_VARIAS_VENTANAS) {
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
			}

			this.jDesktopPane.add(jinternalFrame);

			jinternalFrame.setSelected(true);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);
		}
	}

	public void jButtonid_clienteGuiaRemisionUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisocliente=true;

			idTienePermisocliente=this.tienePermisosUsuarioEnPaginaWebGuiaRemision(ClienteConstantesFunciones.CLASSNAME);

			if(idTienePermisocliente) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosGuiaRemision.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosGuiaRemision.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosGuiaRemision.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremision =(GuiaRemision) this.guiaremisionLogic.getGuiaRemisions().toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.guiaremision =(GuiaRemision) this.guiaremisions.toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualGuiaRemision(this.getguiaremision(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysGuiaRemision(this.guiaremision);

				this.clienteBeanSwingJInternalFrame=new ClienteBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.clienteBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.clienteBeanSwingJInternalFrame.getClienteLogic().setConnexion(this.guiaremisionLogic.getConnexion());

				if(this.guiaremision.getid_cliente()!=null) {
					this.clienteBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.clienteBeanSwingJInternalFrame.setIdActual(this.guiaremision.getid_cliente());
					this.clienteBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.clienteBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.clienteBeanSwingJInternalFrame.inicializarActualizarBindingTablaCliente();
				}

				JInternalFrameBase jinternalFrame =this.clienteBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderGuiaRemision=(TitledBorder)this.jScrollPanelDatosGuiaRemision.getBorder();
				TitledBorder titledBordercliente=(TitledBorder)this.clienteBeanSwingJInternalFrame.jScrollPanelDatosCliente.getBorder();

				titledBordercliente.setTitle(titledBorderGuiaRemision.getTitle() + " -> Cliente");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_clienteGuiaRemisionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosGuiaRemision.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualGuiaRemision(this.getguiaremision(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysGuiaRemision(this.guiaremision);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.guiaremision =(GuiaRemision) this.guiaremisionLogic.getGuiaRemisions().toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.guiaremision =(GuiaRemision) this.guiaremisions.toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.guiaremision==null) {
						this.guiaremision = new GuiaRemision();
					}

					this.setVariablesFormularioToObjetoActualGuiaRemision(this.guiaremision,true);
					this.setVariablesFormularioToObjetoActualForeignKeysGuiaRemision(this.guiaremision);
				}

				if(this.guiaremision.getid_cliente()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_cliente = "+this.guiaremision.getid_cliente().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingGuiaRemision(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_vendedorGuiaRemisionUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisovendedor=true;

			idTienePermisovendedor=this.tienePermisosUsuarioEnPaginaWebGuiaRemision(VendedorConstantesFunciones.CLASSNAME);

			if(idTienePermisovendedor) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosGuiaRemision.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosGuiaRemision.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosGuiaRemision.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremision =(GuiaRemision) this.guiaremisionLogic.getGuiaRemisions().toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.guiaremision =(GuiaRemision) this.guiaremisions.toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualGuiaRemision(this.getguiaremision(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysGuiaRemision(this.guiaremision);

				this.vendedorBeanSwingJInternalFrame=new VendedorBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.vendedorBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.vendedorBeanSwingJInternalFrame.getVendedorLogic().setConnexion(this.guiaremisionLogic.getConnexion());

				if(this.guiaremision.getid_vendedor()!=null) {
					this.vendedorBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.vendedorBeanSwingJInternalFrame.setIdActual(this.guiaremision.getid_vendedor());
					this.vendedorBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.vendedorBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.vendedorBeanSwingJInternalFrame.inicializarActualizarBindingTablaVendedor();
				}

				JInternalFrameBase jinternalFrame =this.vendedorBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderGuiaRemision=(TitledBorder)this.jScrollPanelDatosGuiaRemision.getBorder();
				TitledBorder titledBordervendedor=(TitledBorder)this.vendedorBeanSwingJInternalFrame.jScrollPanelDatosVendedor.getBorder();

				titledBordervendedor.setTitle(titledBorderGuiaRemision.getTitle() + " -> Vendedor");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_vendedorGuiaRemisionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosGuiaRemision.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualGuiaRemision(this.getguiaremision(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysGuiaRemision(this.guiaremision);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.guiaremision =(GuiaRemision) this.guiaremisionLogic.getGuiaRemisions().toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.guiaremision =(GuiaRemision) this.guiaremisions.toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.guiaremision==null) {
						this.guiaremision = new GuiaRemision();
					}

					this.setVariablesFormularioToObjetoActualGuiaRemision(this.guiaremision,true);
					this.setVariablesFormularioToObjetoActualForeignKeysGuiaRemision(this.guiaremision);
				}

				if(this.guiaremision.getid_vendedor()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_vendedor = "+this.guiaremision.getid_vendedor().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingGuiaRemision(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_facturaGuiaRemisionActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {
			this.facturaBeanSwingJInternalFrame=new FacturaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
			this.facturaBeanSwingJInternalFrame.setJInternalFrameParent(this);
			this.facturaBeanSwingJInternalFrame.sTipoBusqueda="Factura";

			if(!this.sFinalQueryGeneral_factura.equals("")) {
				this.facturaBeanSwingJInternalFrame.setsFinalQueryGeneral(this.sFinalQueryGeneral_factura);
				this.facturaBeanSwingJInternalFrame.sAccionBusqueda="Query";


				this.facturaBeanSwingJInternalFrame.procesarBusqueda(this.facturaBeanSwingJInternalFrame.sAccionBusqueda);
				this.facturaBeanSwingJInternalFrame.inicializarActualizarBindingFactura(false);
			}

			if(!this.sFinalQueryComboFactura.equals("") && false) {
			}


			JInternalFrameBase jinternalFrame =this.facturaBeanSwingJInternalFrame;
			jinternalFrame.setAutoscrolls(true);
			//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
			jinternalFrame.setVisible(true); 


			TitledBorder titledBorderGuiaRemision=null;
			TitledBorder titledBorderfactura=null;

			if(!this.jScrollPanelDatosGuiaRemision.getBorder().getClass().equals(EmptyBorder.class)) {
				titledBorderGuiaRemision=(TitledBorder)this.jScrollPanelDatosGuiaRemision.getBorder();
				titledBorderfactura=(TitledBorder)this.facturaBeanSwingJInternalFrame.jScrollPanelDatosFactura.getBorder();

				titledBorderfactura.setTitle(titledBorderGuiaRemision.getTitle() + " -> Factura");
			}

			if(!Constantes.CON_VARIAS_VENTANAS) {
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
			}

			this.jDesktopPane.add(jinternalFrame);

			jinternalFrame.setSelected(true);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);
		}
	}

	public void jButtonid_facturaGuiaRemisionUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisofactura=true;

			idTienePermisofactura=this.tienePermisosUsuarioEnPaginaWebGuiaRemision(FacturaConstantesFunciones.CLASSNAME);

			if(idTienePermisofactura) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosGuiaRemision.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosGuiaRemision.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosGuiaRemision.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremision =(GuiaRemision) this.guiaremisionLogic.getGuiaRemisions().toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.guiaremision =(GuiaRemision) this.guiaremisions.toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualGuiaRemision(this.getguiaremision(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysGuiaRemision(this.guiaremision);

				this.facturaBeanSwingJInternalFrame=new FacturaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.facturaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.facturaBeanSwingJInternalFrame.getFacturaLogic().setConnexion(this.guiaremisionLogic.getConnexion());

				if(this.guiaremision.getid_factura()!=null) {
					this.facturaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.facturaBeanSwingJInternalFrame.setIdActual(this.guiaremision.getid_factura());
					this.facturaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.facturaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.facturaBeanSwingJInternalFrame.inicializarActualizarBindingTablaFactura();
				}

				JInternalFrameBase jinternalFrame =this.facturaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderGuiaRemision=(TitledBorder)this.jScrollPanelDatosGuiaRemision.getBorder();
				TitledBorder titledBorderfactura=(TitledBorder)this.facturaBeanSwingJInternalFrame.jScrollPanelDatosFactura.getBorder();

				titledBorderfactura.setTitle(titledBorderGuiaRemision.getTitle() + " -> Factura");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_facturaGuiaRemisionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosGuiaRemision.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualGuiaRemision(this.getguiaremision(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysGuiaRemision(this.guiaremision);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.guiaremision =(GuiaRemision) this.guiaremisionLogic.getGuiaRemisions().toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.guiaremision =(GuiaRemision) this.guiaremisions.toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.guiaremision==null) {
						this.guiaremision = new GuiaRemision();
					}

					this.setVariablesFormularioToObjetoActualGuiaRemision(this.guiaremision,true);
					this.setVariablesFormularioToObjetoActualForeignKeysGuiaRemision(this.guiaremision);
				}

				if(this.guiaremision.getid_factura()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_factura = "+this.guiaremision.getid_factura().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingGuiaRemision(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_transportistaGuiaRemisionUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotransportista=true;

			idTienePermisotransportista=this.tienePermisosUsuarioEnPaginaWebGuiaRemision(TransportistaConstantesFunciones.CLASSNAME);

			if(idTienePermisotransportista) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosGuiaRemision.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosGuiaRemision.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosGuiaRemision.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremision =(GuiaRemision) this.guiaremisionLogic.getGuiaRemisions().toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.guiaremision =(GuiaRemision) this.guiaremisions.toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualGuiaRemision(this.getguiaremision(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysGuiaRemision(this.guiaremision);

				this.transportistaBeanSwingJInternalFrame=new TransportistaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.transportistaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.transportistaBeanSwingJInternalFrame.getTransportistaLogic().setConnexion(this.guiaremisionLogic.getConnexion());

				if(this.guiaremision.getid_transportista()!=null) {
					this.transportistaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.transportistaBeanSwingJInternalFrame.setIdActual(this.guiaremision.getid_transportista());
					this.transportistaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.transportistaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.transportistaBeanSwingJInternalFrame.inicializarActualizarBindingTablaTransportista();
				}

				JInternalFrameBase jinternalFrame =this.transportistaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderGuiaRemision=(TitledBorder)this.jScrollPanelDatosGuiaRemision.getBorder();
				TitledBorder titledBordertransportista=(TitledBorder)this.transportistaBeanSwingJInternalFrame.jScrollPanelDatosTransportista.getBorder();

				titledBordertransportista.setTitle(titledBorderGuiaRemision.getTitle() + " -> Transportista");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_transportistaGuiaRemisionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosGuiaRemision.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualGuiaRemision(this.getguiaremision(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysGuiaRemision(this.guiaremision);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.guiaremision =(GuiaRemision) this.guiaremisionLogic.getGuiaRemisions().toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.guiaremision =(GuiaRemision) this.guiaremisions.toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.guiaremision==null) {
						this.guiaremision = new GuiaRemision();
					}

					this.setVariablesFormularioToObjetoActualGuiaRemision(this.guiaremision,true);
					this.setVariablesFormularioToObjetoActualForeignKeysGuiaRemision(this.guiaremision);
				}

				if(this.guiaremision.getid_transportista()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_transportista = "+this.guiaremision.getid_transportista().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingGuiaRemision(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonidentificacionGuiaRemisionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosGuiaRemision.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualGuiaRemision(this.getguiaremision(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysGuiaRemision(this.guiaremision);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.guiaremision =(GuiaRemision) this.guiaremisionLogic.getGuiaRemisions().toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.guiaremision =(GuiaRemision) this.guiaremisions.toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.guiaremision==null) {
						this.guiaremision = new GuiaRemision();
					}

					this.setVariablesFormularioToObjetoActualGuiaRemision(this.guiaremision,true);
					this.setVariablesFormularioToObjetoActualForeignKeysGuiaRemision(this.guiaremision);
				}

				if(this.guiaremision.getidentificacion()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where identificacion like '%"+this.guiaremision.getidentificacion()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingGuiaRemision(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonfecha_origenGuiaRemisionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosGuiaRemision.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualGuiaRemision(this.getguiaremision(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysGuiaRemision(this.guiaremision);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.guiaremision =(GuiaRemision) this.guiaremisionLogic.getGuiaRemisions().toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.guiaremision =(GuiaRemision) this.guiaremisions.toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.guiaremision==null) {
						this.guiaremision = new GuiaRemision();
					}

					this.setVariablesFormularioToObjetoActualGuiaRemision(this.guiaremision,true);
					this.setVariablesFormularioToObjetoActualForeignKeysGuiaRemision(this.guiaremision);
				}

				if(this.guiaremision.getfecha_origen()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where fecha_origen = '"+Funciones2.getStringPostgresDate(this.guiaremision.getfecha_origen())+"' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingGuiaRemision(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonfecha_destinoGuiaRemisionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosGuiaRemision.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualGuiaRemision(this.getguiaremision(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysGuiaRemision(this.guiaremision);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.guiaremision =(GuiaRemision) this.guiaremisionLogic.getGuiaRemisions().toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.guiaremision =(GuiaRemision) this.guiaremisions.toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.guiaremision==null) {
						this.guiaremision = new GuiaRemision();
					}

					this.setVariablesFormularioToObjetoActualGuiaRemision(this.guiaremision,true);
					this.setVariablesFormularioToObjetoActualForeignKeysGuiaRemision(this.guiaremision);
				}

				if(this.guiaremision.getfecha_destino()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where fecha_destino = '"+Funciones2.getStringPostgresDate(this.guiaremision.getfecha_destino())+"' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingGuiaRemision(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtontransporte_codigoGuiaRemisionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosGuiaRemision.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualGuiaRemision(this.getguiaremision(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysGuiaRemision(this.guiaremision);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.guiaremision =(GuiaRemision) this.guiaremisionLogic.getGuiaRemisions().toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.guiaremision =(GuiaRemision) this.guiaremisions.toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.guiaremision==null) {
						this.guiaremision = new GuiaRemision();
					}

					this.setVariablesFormularioToObjetoActualGuiaRemision(this.guiaremision,true);
					this.setVariablesFormularioToObjetoActualForeignKeysGuiaRemision(this.guiaremision);
				}

				if(this.guiaremision.gettransporte_codigo()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where transporte_codigo like '%"+this.guiaremision.gettransporte_codigo()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingGuiaRemision(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtoncantidad_bultosGuiaRemisionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosGuiaRemision.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualGuiaRemision(this.getguiaremision(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysGuiaRemision(this.guiaremision);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.guiaremision =(GuiaRemision) this.guiaremisionLogic.getGuiaRemisions().toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.guiaremision =(GuiaRemision) this.guiaremisions.toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.guiaremision==null) {
						this.guiaremision = new GuiaRemision();
					}

					this.setVariablesFormularioToObjetoActualGuiaRemision(this.guiaremision,true);
					this.setVariablesFormularioToObjetoActualForeignKeysGuiaRemision(this.guiaremision);
				}

				if(this.guiaremision.getcantidad_bultos()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where cantidad_bultos = "+this.guiaremision.getcantidad_bultos().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingGuiaRemision(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_consultorGuiaRemisionUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoconsultor=true;

			idTienePermisoconsultor=this.tienePermisosUsuarioEnPaginaWebGuiaRemision(ConsultorConstantesFunciones.CLASSNAME);

			if(idTienePermisoconsultor) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosGuiaRemision.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosGuiaRemision.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosGuiaRemision.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremision =(GuiaRemision) this.guiaremisionLogic.getGuiaRemisions().toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.guiaremision =(GuiaRemision) this.guiaremisions.toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualGuiaRemision(this.getguiaremision(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysGuiaRemision(this.guiaremision);

				this.consultorBeanSwingJInternalFrame=new ConsultorBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.consultorBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.consultorBeanSwingJInternalFrame.getConsultorLogic().setConnexion(this.guiaremisionLogic.getConnexion());

				if(this.guiaremision.getid_consultor()!=null) {
					this.consultorBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.consultorBeanSwingJInternalFrame.setIdActual(this.guiaremision.getid_consultor());
					this.consultorBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.consultorBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.consultorBeanSwingJInternalFrame.inicializarActualizarBindingTablaConsultor();
				}

				JInternalFrameBase jinternalFrame =this.consultorBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderGuiaRemision=(TitledBorder)this.jScrollPanelDatosGuiaRemision.getBorder();
				TitledBorder titledBorderconsultor=(TitledBorder)this.consultorBeanSwingJInternalFrame.jScrollPanelDatosConsultor.getBorder();

				titledBorderconsultor.setTitle(titledBorderGuiaRemision.getTitle() + " -> Consultor");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_consultorGuiaRemisionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosGuiaRemision.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualGuiaRemision(this.getguiaremision(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysGuiaRemision(this.guiaremision);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.guiaremision =(GuiaRemision) this.guiaremisionLogic.getGuiaRemisions().toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.guiaremision =(GuiaRemision) this.guiaremisions.toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.guiaremision==null) {
						this.guiaremision = new GuiaRemision();
					}

					this.setVariablesFormularioToObjetoActualGuiaRemision(this.guiaremision,true);
					this.setVariablesFormularioToObjetoActualForeignKeysGuiaRemision(this.guiaremision);
				}

				if(this.guiaremision.getid_consultor()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_consultor = "+this.guiaremision.getid_consultor().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingGuiaRemision(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_transporteGuiaRemisionUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotransporte=true;

			idTienePermisotransporte=this.tienePermisosUsuarioEnPaginaWebGuiaRemision(TransporteConstantesFunciones.CLASSNAME);

			if(idTienePermisotransporte) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosGuiaRemision.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosGuiaRemision.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosGuiaRemision.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremision =(GuiaRemision) this.guiaremisionLogic.getGuiaRemisions().toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.guiaremision =(GuiaRemision) this.guiaremisions.toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualGuiaRemision(this.getguiaremision(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysGuiaRemision(this.guiaremision);

				this.transporteBeanSwingJInternalFrame=new TransporteBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.transporteBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.transporteBeanSwingJInternalFrame.getTransporteLogic().setConnexion(this.guiaremisionLogic.getConnexion());

				if(this.guiaremision.getid_transporte()!=null) {
					this.transporteBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.transporteBeanSwingJInternalFrame.setIdActual(this.guiaremision.getid_transporte());
					this.transporteBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.transporteBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.transporteBeanSwingJInternalFrame.inicializarActualizarBindingTablaTransporte();
				}

				JInternalFrameBase jinternalFrame =this.transporteBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderGuiaRemision=(TitledBorder)this.jScrollPanelDatosGuiaRemision.getBorder();
				TitledBorder titledBordertransporte=(TitledBorder)this.transporteBeanSwingJInternalFrame.jScrollPanelDatosTransporte.getBorder();

				titledBordertransporte.setTitle(titledBorderGuiaRemision.getTitle() + " -> Transporte");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_transporteGuiaRemisionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosGuiaRemision.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualGuiaRemision(this.getguiaremision(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysGuiaRemision(this.guiaremision);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.guiaremision =(GuiaRemision) this.guiaremisionLogic.getGuiaRemisions().toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.guiaremision =(GuiaRemision) this.guiaremisions.toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.guiaremision==null) {
						this.guiaremision = new GuiaRemision();
					}

					this.setVariablesFormularioToObjetoActualGuiaRemision(this.guiaremision,true);
					this.setVariablesFormularioToObjetoActualForeignKeysGuiaRemision(this.guiaremision);
				}

				if(this.guiaremision.getid_transporte()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_transporte = "+this.guiaremision.getid_transporte().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingGuiaRemision(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_sub_clienteGuiaRemisionUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisosubcliente=true;

			idTienePermisosubcliente=this.tienePermisosUsuarioEnPaginaWebGuiaRemision(SubClienteConstantesFunciones.CLASSNAME);

			if(idTienePermisosubcliente) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosGuiaRemision.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosGuiaRemision.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosGuiaRemision.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremision =(GuiaRemision) this.guiaremisionLogic.getGuiaRemisions().toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.guiaremision =(GuiaRemision) this.guiaremisions.toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualGuiaRemision(this.getguiaremision(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysGuiaRemision(this.guiaremision);

				this.subclienteBeanSwingJInternalFrame=new SubClienteBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.subclienteBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.subclienteBeanSwingJInternalFrame.getSubClienteLogic().setConnexion(this.guiaremisionLogic.getConnexion());

				if(this.guiaremision.getid_sub_cliente()!=null) {
					this.subclienteBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.subclienteBeanSwingJInternalFrame.setIdActual(this.guiaremision.getid_sub_cliente());
					this.subclienteBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.subclienteBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.subclienteBeanSwingJInternalFrame.inicializarActualizarBindingTablaSubCliente();
				}

				JInternalFrameBase jinternalFrame =this.subclienteBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderGuiaRemision=(TitledBorder)this.jScrollPanelDatosGuiaRemision.getBorder();
				TitledBorder titledBordersubcliente=(TitledBorder)this.subclienteBeanSwingJInternalFrame.jScrollPanelDatosSubCliente.getBorder();

				titledBordersubcliente.setTitle(titledBorderGuiaRemision.getTitle() + " -> Sub Cliente");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_sub_clienteGuiaRemisionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosGuiaRemision.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualGuiaRemision(this.getguiaremision(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysGuiaRemision(this.guiaremision);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.guiaremision =(GuiaRemision) this.guiaremisionLogic.getGuiaRemisions().toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.guiaremision =(GuiaRemision) this.guiaremisions.toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.guiaremision==null) {
						this.guiaremision = new GuiaRemision();
					}

					this.setVariablesFormularioToObjetoActualGuiaRemision(this.guiaremision,true);
					this.setVariablesFormularioToObjetoActualForeignKeysGuiaRemision(this.guiaremision);
				}

				if(this.guiaremision.getid_sub_cliente()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_sub_cliente = "+this.guiaremision.getid_sub_cliente().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingGuiaRemision(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_empleadoGuiaRemisionUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoempleado=true;

			idTienePermisoempleado=this.tienePermisosUsuarioEnPaginaWebGuiaRemision(EmpleadoConstantesFunciones.CLASSNAME);

			if(idTienePermisoempleado) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosGuiaRemision.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosGuiaRemision.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosGuiaRemision.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremision =(GuiaRemision) this.guiaremisionLogic.getGuiaRemisions().toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.guiaremision =(GuiaRemision) this.guiaremisions.toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualGuiaRemision(this.getguiaremision(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysGuiaRemision(this.guiaremision);

				this.empleadoBeanSwingJInternalFrame=new EmpleadoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.empleadoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.empleadoBeanSwingJInternalFrame.getEmpleadoLogic().setConnexion(this.guiaremisionLogic.getConnexion());

				if(this.guiaremision.getid_empleado()!=null) {
					this.empleadoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.empleadoBeanSwingJInternalFrame.setIdActual(this.guiaremision.getid_empleado());
					this.empleadoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.empleadoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.empleadoBeanSwingJInternalFrame.inicializarActualizarBindingTablaEmpleado();
				}

				JInternalFrameBase jinternalFrame =this.empleadoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderGuiaRemision=(TitledBorder)this.jScrollPanelDatosGuiaRemision.getBorder();
				TitledBorder titledBorderempleado=(TitledBorder)this.empleadoBeanSwingJInternalFrame.jScrollPanelDatosEmpleado.getBorder();

				titledBorderempleado.setTitle(titledBorderGuiaRemision.getTitle() + " -> Empleado");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_empleadoGuiaRemisionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosGuiaRemision.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualGuiaRemision(this.getguiaremision(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysGuiaRemision(this.guiaremision);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.guiaremision =(GuiaRemision) this.guiaremisionLogic.getGuiaRemisions().toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.guiaremision =(GuiaRemision) this.guiaremisions.toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.guiaremision==null) {
						this.guiaremision = new GuiaRemision();
					}

					this.setVariablesFormularioToObjetoActualGuiaRemision(this.guiaremision,true);
					this.setVariablesFormularioToObjetoActualForeignKeysGuiaRemision(this.guiaremision);
				}

				if(this.guiaremision.getid_empleado()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_empleado = "+this.guiaremision.getid_empleado().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingGuiaRemision(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_ciudad_origenGuiaRemisionUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisociudadorigen=true;

			idTienePermisociudadorigen=this.tienePermisosUsuarioEnPaginaWebGuiaRemision(CiudadConstantesFunciones.CLASSNAME);

			if(idTienePermisociudadorigen) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosGuiaRemision.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosGuiaRemision.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosGuiaRemision.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremision =(GuiaRemision) this.guiaremisionLogic.getGuiaRemisions().toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.guiaremision =(GuiaRemision) this.guiaremisions.toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualGuiaRemision(this.getguiaremision(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysGuiaRemision(this.guiaremision);

				this.ciudadorigenBeanSwingJInternalFrame=new CiudadBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.ciudadorigenBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.ciudadorigenBeanSwingJInternalFrame.getCiudadLogic().setConnexion(this.guiaremisionLogic.getConnexion());

				if(this.guiaremision.getid_ciudad_origen()!=null) {
					this.ciudadorigenBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.ciudadorigenBeanSwingJInternalFrame.setIdActual(this.guiaremision.getid_ciudad_origen());
					this.ciudadorigenBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.ciudadorigenBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.ciudadorigenBeanSwingJInternalFrame.inicializarActualizarBindingTablaCiudad();
				}

				JInternalFrameBase jinternalFrame =this.ciudadorigenBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderGuiaRemision=(TitledBorder)this.jScrollPanelDatosGuiaRemision.getBorder();
				TitledBorder titledBorderciudadorigen=(TitledBorder)this.ciudadorigenBeanSwingJInternalFrame.jScrollPanelDatosCiudad.getBorder();

				titledBorderciudadorigen.setTitle(titledBorderGuiaRemision.getTitle() + " -> Ciudad");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_ciudad_origenGuiaRemisionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosGuiaRemision.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualGuiaRemision(this.getguiaremision(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysGuiaRemision(this.guiaremision);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.guiaremision =(GuiaRemision) this.guiaremisionLogic.getGuiaRemisions().toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.guiaremision =(GuiaRemision) this.guiaremisions.toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.guiaremision==null) {
						this.guiaremision = new GuiaRemision();
					}

					this.setVariablesFormularioToObjetoActualGuiaRemision(this.guiaremision,true);
					this.setVariablesFormularioToObjetoActualForeignKeysGuiaRemision(this.guiaremision);
				}

				if(this.guiaremision.getid_ciudad_origen()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_ciudad_origen = "+this.guiaremision.getid_ciudad_origen().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingGuiaRemision(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_ciudad_destinoGuiaRemisionUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisociudaddestino=true;

			idTienePermisociudaddestino=this.tienePermisosUsuarioEnPaginaWebGuiaRemision(CiudadConstantesFunciones.CLASSNAME);

			if(idTienePermisociudaddestino) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosGuiaRemision.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosGuiaRemision.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosGuiaRemision.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremision =(GuiaRemision) this.guiaremisionLogic.getGuiaRemisions().toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.guiaremision =(GuiaRemision) this.guiaremisions.toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualGuiaRemision(this.getguiaremision(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysGuiaRemision(this.guiaremision);

				this.ciudaddestinoBeanSwingJInternalFrame=new CiudadBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.ciudaddestinoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.ciudaddestinoBeanSwingJInternalFrame.getCiudadLogic().setConnexion(this.guiaremisionLogic.getConnexion());

				if(this.guiaremision.getid_ciudad_destino()!=null) {
					this.ciudaddestinoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.ciudaddestinoBeanSwingJInternalFrame.setIdActual(this.guiaremision.getid_ciudad_destino());
					this.ciudaddestinoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.ciudaddestinoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.ciudaddestinoBeanSwingJInternalFrame.inicializarActualizarBindingTablaCiudad();
				}

				JInternalFrameBase jinternalFrame =this.ciudaddestinoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderGuiaRemision=(TitledBorder)this.jScrollPanelDatosGuiaRemision.getBorder();
				TitledBorder titledBorderciudaddestino=(TitledBorder)this.ciudaddestinoBeanSwingJInternalFrame.jScrollPanelDatosCiudad.getBorder();

				titledBorderciudaddestino.setTitle(titledBorderGuiaRemision.getTitle() + " -> Ciudad");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_ciudad_destinoGuiaRemisionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosGuiaRemision.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualGuiaRemision(this.getguiaremision(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysGuiaRemision(this.guiaremision);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.guiaremision =(GuiaRemision) this.guiaremisionLogic.getGuiaRemisions().toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.guiaremision =(GuiaRemision) this.guiaremisions.toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.guiaremision==null) {
						this.guiaremision = new GuiaRemision();
					}

					this.setVariablesFormularioToObjetoActualGuiaRemision(this.guiaremision,true);
					this.setVariablesFormularioToObjetoActualForeignKeysGuiaRemision(this.guiaremision);
				}

				if(this.guiaremision.getid_ciudad_destino()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_ciudad_destino = "+this.guiaremision.getid_ciudad_destino().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingGuiaRemision(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_tipo_llamadaGuiaRemisionUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotipollamada=true;

			idTienePermisotipollamada=this.tienePermisosUsuarioEnPaginaWebGuiaRemision(TipoLlamadaConstantesFunciones.CLASSNAME);

			if(idTienePermisotipollamada) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosGuiaRemision.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosGuiaRemision.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosGuiaRemision.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremision =(GuiaRemision) this.guiaremisionLogic.getGuiaRemisions().toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.guiaremision =(GuiaRemision) this.guiaremisions.toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualGuiaRemision(this.getguiaremision(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysGuiaRemision(this.guiaremision);

				this.tipollamadaBeanSwingJInternalFrame=new TipoLlamadaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.tipollamadaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.tipollamadaBeanSwingJInternalFrame.getTipoLlamadaLogic().setConnexion(this.guiaremisionLogic.getConnexion());

				if(this.guiaremision.getid_tipo_llamada()!=null) {
					this.tipollamadaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.tipollamadaBeanSwingJInternalFrame.setIdActual(this.guiaremision.getid_tipo_llamada());
					this.tipollamadaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.tipollamadaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.tipollamadaBeanSwingJInternalFrame.inicializarActualizarBindingTablaTipoLlamada();
				}

				JInternalFrameBase jinternalFrame =this.tipollamadaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderGuiaRemision=(TitledBorder)this.jScrollPanelDatosGuiaRemision.getBorder();
				TitledBorder titledBordertipollamada=(TitledBorder)this.tipollamadaBeanSwingJInternalFrame.jScrollPanelDatosTipoLlamada.getBorder();

				titledBordertipollamada.setTitle(titledBorderGuiaRemision.getTitle() + " -> Tipo Llamada");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_tipo_llamadaGuiaRemisionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosGuiaRemision.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualGuiaRemision(this.getguiaremision(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysGuiaRemision(this.guiaremision);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.guiaremision =(GuiaRemision) this.guiaremisionLogic.getGuiaRemisions().toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.guiaremision =(GuiaRemision) this.guiaremisions.toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.guiaremision==null) {
						this.guiaremision = new GuiaRemision();
					}

					this.setVariablesFormularioToObjetoActualGuiaRemision(this.guiaremision,true);
					this.setVariablesFormularioToObjetoActualForeignKeysGuiaRemision(this.guiaremision);
				}

				if(this.guiaremision.getid_tipo_llamada()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_tipo_llamada = "+this.guiaremision.getid_tipo_llamada().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingGuiaRemision(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonhora_inicioGuiaRemisionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosGuiaRemision.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualGuiaRemision(this.getguiaremision(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysGuiaRemision(this.guiaremision);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.guiaremision =(GuiaRemision) this.guiaremisionLogic.getGuiaRemisions().toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.guiaremision =(GuiaRemision) this.guiaremisions.toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.guiaremision==null) {
						this.guiaremision = new GuiaRemision();
					}

					this.setVariablesFormularioToObjetoActualGuiaRemision(this.guiaremision,true);
					this.setVariablesFormularioToObjetoActualForeignKeysGuiaRemision(this.guiaremision);
				}

				if(this.guiaremision.gethora_inicio()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where hora_inicio = "+this.guiaremision.gethora_inicio().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingGuiaRemision(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonhora_finGuiaRemisionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosGuiaRemision.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualGuiaRemision(this.getguiaremision(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysGuiaRemision(this.guiaremision);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.guiaremision =(GuiaRemision) this.guiaremisionLogic.getGuiaRemisions().toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.guiaremision =(GuiaRemision) this.guiaremisions.toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.guiaremision==null) {
						this.guiaremision = new GuiaRemision();
					}

					this.setVariablesFormularioToObjetoActualGuiaRemision(this.guiaremision,true);
					this.setVariablesFormularioToObjetoActualForeignKeysGuiaRemision(this.guiaremision);
				}

				if(this.guiaremision.gethora_fin()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where hora_fin = "+this.guiaremision.gethora_fin().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingGuiaRemision(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtoncupoGuiaRemisionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosGuiaRemision.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualGuiaRemision(this.getguiaremision(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysGuiaRemision(this.guiaremision);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.guiaremision =(GuiaRemision) this.guiaremisionLogic.getGuiaRemisions().toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.guiaremision =(GuiaRemision) this.guiaremisions.toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.guiaremision==null) {
						this.guiaremision = new GuiaRemision();
					}

					this.setVariablesFormularioToObjetoActualGuiaRemision(this.guiaremision,true);
					this.setVariablesFormularioToObjetoActualForeignKeysGuiaRemision(this.guiaremision);
				}

				if(this.guiaremision.getcupo()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where cupo = "+this.guiaremision.getcupo().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingGuiaRemision(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonsaldoGuiaRemisionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosGuiaRemision.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualGuiaRemision(this.getguiaremision(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysGuiaRemision(this.guiaremision);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.guiaremision =(GuiaRemision) this.guiaremisionLogic.getGuiaRemisions().toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.guiaremision =(GuiaRemision) this.guiaremisions.toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.guiaremision==null) {
						this.guiaremision = new GuiaRemision();
					}

					this.setVariablesFormularioToObjetoActualGuiaRemision(this.guiaremision,true);
					this.setVariablesFormularioToObjetoActualForeignKeysGuiaRemision(this.guiaremision);
				}

				if(this.guiaremision.getsaldo()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where saldo = "+this.guiaremision.getsaldo().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingGuiaRemision(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtondocumentoGuiaRemisionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosGuiaRemision.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualGuiaRemision(this.getguiaremision(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysGuiaRemision(this.guiaremision);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.guiaremision =(GuiaRemision) this.guiaremisionLogic.getGuiaRemisions().toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.guiaremision =(GuiaRemision) this.guiaremisions.toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.guiaremision==null) {
						this.guiaremision = new GuiaRemision();
					}

					this.setVariablesFormularioToObjetoActualGuiaRemision(this.guiaremision,true);
					this.setVariablesFormularioToObjetoActualForeignKeysGuiaRemision(this.guiaremision);
				}

				if(this.guiaremision.getdocumento()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where documento = "+this.guiaremision.getdocumento().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingGuiaRemision(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtondisponibleGuiaRemisionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosGuiaRemision.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualGuiaRemision(this.getguiaremision(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysGuiaRemision(this.guiaremision);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.guiaremision =(GuiaRemision) this.guiaremisionLogic.getGuiaRemisions().toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.guiaremision =(GuiaRemision) this.guiaremisions.toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.guiaremision==null) {
						this.guiaremision = new GuiaRemision();
					}

					this.setVariablesFormularioToObjetoActualGuiaRemision(this.guiaremision,true);
					this.setVariablesFormularioToObjetoActualForeignKeysGuiaRemision(this.guiaremision);
				}

				if(this.guiaremision.getdisponible()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where disponible = "+this.guiaremision.getdisponible().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingGuiaRemision(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtondescripcionGuiaRemisionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosGuiaRemision.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualGuiaRemision(this.getguiaremision(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysGuiaRemision(this.guiaremision);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.guiaremision =(GuiaRemision) this.guiaremisionLogic.getGuiaRemisions().toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.guiaremision =(GuiaRemision) this.guiaremisions.toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.guiaremision==null) {
						this.guiaremision = new GuiaRemision();
					}

					this.setVariablesFormularioToObjetoActualGuiaRemision(this.guiaremision,true);
					this.setVariablesFormularioToObjetoActualForeignKeysGuiaRemision(this.guiaremision);
				}

				if(this.guiaremision.getdescripcion()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where descripcion like '%"+this.guiaremision.getdescripcion()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingGuiaRemision(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtontotal_ivaGuiaRemisionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosGuiaRemision.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualGuiaRemision(this.getguiaremision(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysGuiaRemision(this.guiaremision);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.guiaremision =(GuiaRemision) this.guiaremisionLogic.getGuiaRemisions().toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.guiaremision =(GuiaRemision) this.guiaremisions.toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.guiaremision==null) {
						this.guiaremision = new GuiaRemision();
					}

					this.setVariablesFormularioToObjetoActualGuiaRemision(this.guiaremision,true);
					this.setVariablesFormularioToObjetoActualForeignKeysGuiaRemision(this.guiaremision);
				}

				if(this.guiaremision.gettotal_iva()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where total_iva = "+this.guiaremision.gettotal_iva().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingGuiaRemision(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtontotal_sin_ivaGuiaRemisionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosGuiaRemision.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualGuiaRemision(this.getguiaremision(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysGuiaRemision(this.guiaremision);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.guiaremision =(GuiaRemision) this.guiaremisionLogic.getGuiaRemisions().toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.guiaremision =(GuiaRemision) this.guiaremisions.toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.guiaremision==null) {
						this.guiaremision = new GuiaRemision();
					}

					this.setVariablesFormularioToObjetoActualGuiaRemision(this.guiaremision,true);
					this.setVariablesFormularioToObjetoActualForeignKeysGuiaRemision(this.guiaremision);
				}

				if(this.guiaremision.gettotal_sin_iva()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where total_sin_iva = "+this.guiaremision.gettotal_sin_iva().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingGuiaRemision(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtondescuentoGuiaRemisionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosGuiaRemision.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualGuiaRemision(this.getguiaremision(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysGuiaRemision(this.guiaremision);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.guiaremision =(GuiaRemision) this.guiaremisionLogic.getGuiaRemisions().toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.guiaremision =(GuiaRemision) this.guiaremisions.toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.guiaremision==null) {
						this.guiaremision = new GuiaRemision();
					}

					this.setVariablesFormularioToObjetoActualGuiaRemision(this.guiaremision,true);
					this.setVariablesFormularioToObjetoActualForeignKeysGuiaRemision(this.guiaremision);
				}

				if(this.guiaremision.getdescuento()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where descuento = "+this.guiaremision.getdescuento().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingGuiaRemision(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonfleteGuiaRemisionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosGuiaRemision.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualGuiaRemision(this.getguiaremision(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysGuiaRemision(this.guiaremision);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.guiaremision =(GuiaRemision) this.guiaremisionLogic.getGuiaRemisions().toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.guiaremision =(GuiaRemision) this.guiaremisions.toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.guiaremision==null) {
						this.guiaremision = new GuiaRemision();
					}

					this.setVariablesFormularioToObjetoActualGuiaRemision(this.guiaremision,true);
					this.setVariablesFormularioToObjetoActualForeignKeysGuiaRemision(this.guiaremision);
				}

				if(this.guiaremision.getflete()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where flete = "+this.guiaremision.getflete().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingGuiaRemision(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonotroGuiaRemisionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosGuiaRemision.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualGuiaRemision(this.getguiaremision(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysGuiaRemision(this.guiaremision);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.guiaremision =(GuiaRemision) this.guiaremisionLogic.getGuiaRemisions().toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.guiaremision =(GuiaRemision) this.guiaremisions.toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.guiaremision==null) {
						this.guiaremision = new GuiaRemision();
					}

					this.setVariablesFormularioToObjetoActualGuiaRemision(this.guiaremision,true);
					this.setVariablesFormularioToObjetoActualForeignKeysGuiaRemision(this.guiaremision);
				}

				if(this.guiaremision.getotro()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where otro = "+this.guiaremision.getotro().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingGuiaRemision(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonfinanciamientoGuiaRemisionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosGuiaRemision.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualGuiaRemision(this.getguiaremision(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysGuiaRemision(this.guiaremision);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.guiaremision =(GuiaRemision) this.guiaremisionLogic.getGuiaRemisions().toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.guiaremision =(GuiaRemision) this.guiaremisions.toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.guiaremision==null) {
						this.guiaremision = new GuiaRemision();
					}

					this.setVariablesFormularioToObjetoActualGuiaRemision(this.guiaremision,true);
					this.setVariablesFormularioToObjetoActualForeignKeysGuiaRemision(this.guiaremision);
				}

				if(this.guiaremision.getfinanciamiento()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where financiamiento = "+this.guiaremision.getfinanciamiento().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingGuiaRemision(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonivaGuiaRemisionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosGuiaRemision.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualGuiaRemision(this.getguiaremision(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysGuiaRemision(this.guiaremision);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.guiaremision =(GuiaRemision) this.guiaremisionLogic.getGuiaRemisions().toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.guiaremision =(GuiaRemision) this.guiaremisions.toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.guiaremision==null) {
						this.guiaremision = new GuiaRemision();
					}

					this.setVariablesFormularioToObjetoActualGuiaRemision(this.guiaremision,true);
					this.setVariablesFormularioToObjetoActualForeignKeysGuiaRemision(this.guiaremision);
				}

				if(this.guiaremision.getiva()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where iva = "+this.guiaremision.getiva().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingGuiaRemision(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtontotalGuiaRemisionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosGuiaRemision.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualGuiaRemision(this.getguiaremision(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysGuiaRemision(this.guiaremision);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.guiaremision =(GuiaRemision) this.guiaremisionLogic.getGuiaRemisions().toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.guiaremision =(GuiaRemision) this.guiaremisions.toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.guiaremision==null) {
						this.guiaremision = new GuiaRemision();
					}

					this.setVariablesFormularioToObjetoActualGuiaRemision(this.guiaremision,true);
					this.setVariablesFormularioToObjetoActualForeignKeysGuiaRemision(this.guiaremision);
				}

				if(this.guiaremision.gettotal()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where total = "+this.guiaremision.gettotal().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingGuiaRemision(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonmonto_retencionGuiaRemisionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosGuiaRemision.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualGuiaRemision(this.getguiaremision(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysGuiaRemision(this.guiaremision);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.guiaremision =(GuiaRemision) this.guiaremisionLogic.getGuiaRemisions().toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.guiaremision =(GuiaRemision) this.guiaremisions.toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.guiaremision==null) {
						this.guiaremision = new GuiaRemision();
					}

					this.setVariablesFormularioToObjetoActualGuiaRemision(this.guiaremision,true);
					this.setVariablesFormularioToObjetoActualForeignKeysGuiaRemision(this.guiaremision);
				}

				if(this.guiaremision.getmonto_retencion()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where monto_retencion = "+this.guiaremision.getmonto_retencion().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingGuiaRemision(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_tipo_cambioGuiaRemisionActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {
			this.tipocambioBeanSwingJInternalFrame=new TipoCambioBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
			this.tipocambioBeanSwingJInternalFrame.setJInternalFrameParent(this);
			this.tipocambioBeanSwingJInternalFrame.sTipoBusqueda="TipoCambio";

			if(!this.sFinalQueryGeneral_tipocambio.equals("")) {
				this.tipocambioBeanSwingJInternalFrame.setsFinalQueryGeneral(this.sFinalQueryGeneral_tipocambio);
				this.tipocambioBeanSwingJInternalFrame.sAccionBusqueda="Query";


				this.tipocambioBeanSwingJInternalFrame.procesarBusqueda(this.tipocambioBeanSwingJInternalFrame.sAccionBusqueda);
				this.tipocambioBeanSwingJInternalFrame.inicializarActualizarBindingTipoCambio(false);
			}

			if(!this.sFinalQueryComboTipoCambio.equals("") && false) {
			}


			JInternalFrameBase jinternalFrame =this.tipocambioBeanSwingJInternalFrame;
			jinternalFrame.setAutoscrolls(true);
			//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
			jinternalFrame.setVisible(true); 


			TitledBorder titledBorderGuiaRemision=null;
			TitledBorder titledBordertipocambio=null;

			if(!this.jScrollPanelDatosGuiaRemision.getBorder().getClass().equals(EmptyBorder.class)) {
				titledBorderGuiaRemision=(TitledBorder)this.jScrollPanelDatosGuiaRemision.getBorder();
				titledBordertipocambio=(TitledBorder)this.tipocambioBeanSwingJInternalFrame.jScrollPanelDatosTipoCambio.getBorder();

				titledBordertipocambio.setTitle(titledBorderGuiaRemision.getTitle() + " -> Tipo Cambio");
			}

			if(!Constantes.CON_VARIAS_VENTANAS) {
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
			}

			this.jDesktopPane.add(jinternalFrame);

			jinternalFrame.setSelected(true);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);
		}
	}

	public void jButtonid_tipo_cambioGuiaRemisionUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotipocambio=true;

			idTienePermisotipocambio=this.tienePermisosUsuarioEnPaginaWebGuiaRemision(TipoCambioConstantesFunciones.CLASSNAME);

			if(idTienePermisotipocambio) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosGuiaRemision.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosGuiaRemision.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosGuiaRemision.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremision =(GuiaRemision) this.guiaremisionLogic.getGuiaRemisions().toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.guiaremision =(GuiaRemision) this.guiaremisions.toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualGuiaRemision(this.getguiaremision(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysGuiaRemision(this.guiaremision);

				this.tipocambioBeanSwingJInternalFrame=new TipoCambioBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.tipocambioBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.tipocambioBeanSwingJInternalFrame.getTipoCambioLogic().setConnexion(this.guiaremisionLogic.getConnexion());

				if(this.guiaremision.getid_tipo_cambio()!=null) {
					this.tipocambioBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.tipocambioBeanSwingJInternalFrame.setIdActual(this.guiaremision.getid_tipo_cambio());
					this.tipocambioBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.tipocambioBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.tipocambioBeanSwingJInternalFrame.inicializarActualizarBindingTablaTipoCambio();
				}

				JInternalFrameBase jinternalFrame =this.tipocambioBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderGuiaRemision=(TitledBorder)this.jScrollPanelDatosGuiaRemision.getBorder();
				TitledBorder titledBordertipocambio=(TitledBorder)this.tipocambioBeanSwingJInternalFrame.jScrollPanelDatosTipoCambio.getBorder();

				titledBordertipocambio.setTitle(titledBorderGuiaRemision.getTitle() + " -> Tipo Cambio");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_tipo_cambioGuiaRemisionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosGuiaRemision.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualGuiaRemision(this.getguiaremision(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysGuiaRemision(this.guiaremision);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.guiaremision =(GuiaRemision) this.guiaremisionLogic.getGuiaRemisions().toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.guiaremision =(GuiaRemision) this.guiaremisions.toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.guiaremision==null) {
						this.guiaremision = new GuiaRemision();
					}

					this.setVariablesFormularioToObjetoActualGuiaRemision(this.guiaremision,true);
					this.setVariablesFormularioToObjetoActualForeignKeysGuiaRemision(this.guiaremision);
				}

				if(this.guiaremision.getid_tipo_cambio()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_tipo_cambio = "+this.guiaremision.getid_tipo_cambio().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingGuiaRemision(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonfechaGuiaRemisionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosGuiaRemision.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualGuiaRemision(this.getguiaremision(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysGuiaRemision(this.guiaremision);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.guiaremision =(GuiaRemision) this.guiaremisionLogic.getGuiaRemisions().toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.guiaremision =(GuiaRemision) this.guiaremisions.toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.guiaremision==null) {
						this.guiaremision = new GuiaRemision();
					}

					this.setVariablesFormularioToObjetoActualGuiaRemision(this.guiaremision,true);
					this.setVariablesFormularioToObjetoActualForeignKeysGuiaRemision(this.guiaremision);
				}

				if(this.guiaremision.getfecha()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where fecha = '"+Funciones2.getStringPostgresDate(this.guiaremision.getfecha())+"' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingGuiaRemision(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonruc_clienteGuiaRemisionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosGuiaRemision.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualGuiaRemision(this.getguiaremision(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysGuiaRemision(this.guiaremision);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.guiaremision =(GuiaRemision) this.guiaremisionLogic.getGuiaRemisions().toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.guiaremision =(GuiaRemision) this.guiaremisions.toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.guiaremision==null) {
						this.guiaremision = new GuiaRemision();
					}

					this.setVariablesFormularioToObjetoActualGuiaRemision(this.guiaremision,true);
					this.setVariablesFormularioToObjetoActualForeignKeysGuiaRemision(this.guiaremision);
				}

				if(this.guiaremision.getruc_cliente()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where ruc_cliente like '%"+this.guiaremision.getruc_cliente()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingGuiaRemision(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonnombre_clienteGuiaRemisionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosGuiaRemision.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualGuiaRemision(this.getguiaremision(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysGuiaRemision(this.guiaremision);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.guiaremision =(GuiaRemision) this.guiaremisionLogic.getGuiaRemisions().toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.guiaremision =(GuiaRemision) this.guiaremisions.toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.guiaremision==null) {
						this.guiaremision = new GuiaRemision();
					}

					this.setVariablesFormularioToObjetoActualGuiaRemision(this.guiaremision,true);
					this.setVariablesFormularioToObjetoActualForeignKeysGuiaRemision(this.guiaremision);
				}

				if(this.guiaremision.getnombre_cliente()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where nombre_cliente like '%"+this.guiaremision.getnombre_cliente()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingGuiaRemision(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtontelefono_clienteGuiaRemisionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosGuiaRemision.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualGuiaRemision(this.getguiaremision(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysGuiaRemision(this.guiaremision);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.guiaremision =(GuiaRemision) this.guiaremisionLogic.getGuiaRemisions().toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.guiaremision =(GuiaRemision) this.guiaremisions.toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.guiaremision==null) {
						this.guiaremision = new GuiaRemision();
					}

					this.setVariablesFormularioToObjetoActualGuiaRemision(this.guiaremision,true);
					this.setVariablesFormularioToObjetoActualForeignKeysGuiaRemision(this.guiaremision);
				}

				if(this.guiaremision.gettelefono_cliente()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where telefono_cliente like '%"+this.guiaremision.gettelefono_cliente()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingGuiaRemision(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtondireccion_clienteGuiaRemisionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosGuiaRemision.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualGuiaRemision(this.getguiaremision(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysGuiaRemision(this.guiaremision);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.guiaremision =(GuiaRemision) this.guiaremisionLogic.getGuiaRemisions().toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.guiaremision =(GuiaRemision) this.guiaremisions.toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.guiaremision==null) {
						this.guiaremision = new GuiaRemision();
					}

					this.setVariablesFormularioToObjetoActualGuiaRemision(this.guiaremision,true);
					this.setVariablesFormularioToObjetoActualForeignKeysGuiaRemision(this.guiaremision);
				}

				if(this.guiaremision.getdireccion_cliente()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where direccion_cliente like '%"+this.guiaremision.getdireccion_cliente()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingGuiaRemision(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonnumero_pre_impresoGuiaRemisionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosGuiaRemision.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualGuiaRemision(this.getguiaremision(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysGuiaRemision(this.guiaremision);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.guiaremision =(GuiaRemision) this.guiaremisionLogic.getGuiaRemisions().toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.guiaremision =(GuiaRemision) this.guiaremisions.toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.guiaremision==null) {
						this.guiaremision = new GuiaRemision();
					}

					this.setVariablesFormularioToObjetoActualGuiaRemision(this.guiaremision,true);
					this.setVariablesFormularioToObjetoActualForeignKeysGuiaRemision(this.guiaremision);
				}

				if(this.guiaremision.getnumero_pre_impreso()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where numero_pre_impreso like '%"+this.guiaremision.getnumero_pre_impreso()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingGuiaRemision(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonpeso_brutoGuiaRemisionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosGuiaRemision.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualGuiaRemision(this.getguiaremision(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysGuiaRemision(this.guiaremision);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.guiaremision =(GuiaRemision) this.guiaremisionLogic.getGuiaRemisions().toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.guiaremision =(GuiaRemision) this.guiaremisions.toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.guiaremision==null) {
						this.guiaremision = new GuiaRemision();
					}

					this.setVariablesFormularioToObjetoActualGuiaRemision(this.guiaremision,true);
					this.setVariablesFormularioToObjetoActualForeignKeysGuiaRemision(this.guiaremision);
				}

				if(this.guiaremision.getpeso_bruto()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where peso_bruto = "+this.guiaremision.getpeso_bruto().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingGuiaRemision(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonfecha_autorizacionGuiaRemisionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosGuiaRemision.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualGuiaRemision(this.getguiaremision(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysGuiaRemision(this.guiaremision);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.guiaremision =(GuiaRemision) this.guiaremisionLogic.getGuiaRemisions().toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.guiaremision =(GuiaRemision) this.guiaremisions.toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.guiaremision==null) {
						this.guiaremision = new GuiaRemision();
					}

					this.setVariablesFormularioToObjetoActualGuiaRemision(this.guiaremision,true);
					this.setVariablesFormularioToObjetoActualForeignKeysGuiaRemision(this.guiaremision);
				}

				if(this.guiaremision.getfecha_autorizacion()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where fecha_autorizacion = '"+Funciones2.getStringPostgresDate(this.guiaremision.getfecha_autorizacion())+"' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingGuiaRemision(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonfecha_vencimientoGuiaRemisionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosGuiaRemision.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualGuiaRemision(this.getguiaremision(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysGuiaRemision(this.guiaremision);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.guiaremision =(GuiaRemision) this.guiaremisionLogic.getGuiaRemisions().toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.guiaremision =(GuiaRemision) this.guiaremisions.toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.guiaremision==null) {
						this.guiaremision = new GuiaRemision();
					}

					this.setVariablesFormularioToObjetoActualGuiaRemision(this.guiaremision,true);
					this.setVariablesFormularioToObjetoActualForeignKeysGuiaRemision(this.guiaremision);
				}

				if(this.guiaremision.getfecha_vencimiento()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where fecha_vencimiento = '"+Funciones2.getStringPostgresDate(this.guiaremision.getfecha_vencimiento())+"' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingGuiaRemision(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionLogic.closeNewConnexionToDeep();
				}

			}
		}

	
	
	public void jButtonFK_IdCiudadDestinoGuiaRemisionActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingGuiaRemision(false,false);

			this.getGuiaRemisionsFK_IdCiudadDestino();

			this.inicializarActualizarBindingGuiaRemision(false);

			//if(GuiaRemisionBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingGuiaRemision(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdCiudadOrigenGuiaRemisionActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingGuiaRemision(false,false);

			this.getGuiaRemisionsFK_IdCiudadOrigen();

			this.inicializarActualizarBindingGuiaRemision(false);

			//if(GuiaRemisionBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingGuiaRemision(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdClienteGuiaRemisionActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingGuiaRemision(false,false);

			this.getGuiaRemisionsFK_IdCliente();

			this.inicializarActualizarBindingGuiaRemision(false);

			//if(GuiaRemisionBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingGuiaRemision(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdConsultorGuiaRemisionActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingGuiaRemision(false,false);

			this.getGuiaRemisionsFK_IdConsultor();

			this.inicializarActualizarBindingGuiaRemision(false);

			//if(GuiaRemisionBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingGuiaRemision(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdEjercicioGuiaRemisionActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingGuiaRemision(false,false);

			this.getGuiaRemisionsFK_IdEjercicio();

			this.inicializarActualizarBindingGuiaRemision(false);

			//if(GuiaRemisionBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingGuiaRemision(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdEmpleadoGuiaRemisionActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingGuiaRemision(false,false);

			this.getGuiaRemisionsFK_IdEmpleado();

			this.inicializarActualizarBindingGuiaRemision(false);

			//if(GuiaRemisionBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingGuiaRemision(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdEmpresaGuiaRemisionActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingGuiaRemision(false,false);

			this.getGuiaRemisionsFK_IdEmpresa();

			this.inicializarActualizarBindingGuiaRemision(false);

			//if(GuiaRemisionBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingGuiaRemision(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdFacturaGuiaRemisionActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingGuiaRemision(false,false);

			this.getGuiaRemisionsFK_IdFactura();

			this.inicializarActualizarBindingGuiaRemision(false);

			//if(GuiaRemisionBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingGuiaRemision(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdFormatoGuiaRemisionActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingGuiaRemision(false,false);

			this.getGuiaRemisionsFK_IdFormato();

			this.inicializarActualizarBindingGuiaRemision(false);

			//if(GuiaRemisionBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingGuiaRemision(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdMonedaGuiaRemisionActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingGuiaRemision(false,false);

			this.getGuiaRemisionsFK_IdMoneda();

			this.inicializarActualizarBindingGuiaRemision(false);

			//if(GuiaRemisionBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingGuiaRemision(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdPeriodoGuiaRemisionActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingGuiaRemision(false,false);

			this.getGuiaRemisionsFK_IdPeriodo();

			this.inicializarActualizarBindingGuiaRemision(false);

			//if(GuiaRemisionBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingGuiaRemision(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdSubClienteGuiaRemisionActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingGuiaRemision(false,false);

			this.getGuiaRemisionsFK_IdSubCliente();

			this.inicializarActualizarBindingGuiaRemision(false);

			//if(GuiaRemisionBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingGuiaRemision(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdSucursalGuiaRemisionActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingGuiaRemision(false,false);

			this.getGuiaRemisionsFK_IdSucursal();

			this.inicializarActualizarBindingGuiaRemision(false);

			//if(GuiaRemisionBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingGuiaRemision(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdTipoCambioGuiaRemisionActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingGuiaRemision(false,false);

			this.getGuiaRemisionsFK_IdTipoCambio();

			this.inicializarActualizarBindingGuiaRemision(false);

			//if(GuiaRemisionBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingGuiaRemision(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdTipoLlamadaGuiaRemisionActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingGuiaRemision(false,false);

			this.getGuiaRemisionsFK_IdTipoLlamada();

			this.inicializarActualizarBindingGuiaRemision(false);

			//if(GuiaRemisionBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingGuiaRemision(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdTipoPrecioGuiaRemisionActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingGuiaRemision(false,false);

			this.getGuiaRemisionsFK_IdTipoPrecio();

			this.inicializarActualizarBindingGuiaRemision(false);

			//if(GuiaRemisionBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingGuiaRemision(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdTransporteGuiaRemisionActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingGuiaRemision(false,false);

			this.getGuiaRemisionsFK_IdTransporte();

			this.inicializarActualizarBindingGuiaRemision(false);

			//if(GuiaRemisionBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingGuiaRemision(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdTransportistaGuiaRemisionActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingGuiaRemision(false,false);

			this.getGuiaRemisionsFK_IdTransportista();

			this.inicializarActualizarBindingGuiaRemision(false);

			//if(GuiaRemisionBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingGuiaRemision(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdUsuarioGuiaRemisionActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingGuiaRemision(false,false);

			this.getGuiaRemisionsFK_IdUsuario();

			this.inicializarActualizarBindingGuiaRemision(false);

			//if(GuiaRemisionBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingGuiaRemision(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdVendedorGuiaRemisionActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingGuiaRemision(false,false);

			this.getGuiaRemisionsFK_IdVendedor();

			this.inicializarActualizarBindingGuiaRemision(false);

			//if(GuiaRemisionBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingGuiaRemision(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.guiaremisionLogic.closeNewConnexionToDeep();
			}
		}
	}

	
	public void closingInternalFrameGuiaRemision() {
		if(this.jInternalFrameDetalleFormGuiaRemision!=null) {
		

		if(this.jInternalFrameDetalleFormGuiaRemision.detalleguiaremisionBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormGuiaRemision.detalleguiaremisionBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormGuiaRemision.detalleguiaremisionBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormGuiaRemision.detalleguiaremisionBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormGuiaRemision.detalleguiaremisionBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormGuiaRemision.detalleguiaremisionBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormGuiaRemision.detalleguiaremisionBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormGuiaRemision.detalleguiaremisionBeanSwingJInternalFramePopup=null;
		}	
		
		
		}
		
		if(this.jInternalFrameDetalleFormGuiaRemision!=null) {
			this.jInternalFrameDetalleFormGuiaRemision.setVisible(false);	    			
			this.jInternalFrameDetalleFormGuiaRemision.dispose();
			this.jInternalFrameDetalleFormGuiaRemision=null;
		}
		
		
		if(this.jInternalFrameReporteDinamicoGuiaRemision!=null) {
			this.jInternalFrameReporteDinamicoGuiaRemision.setVisible(false);	    			
			this.jInternalFrameReporteDinamicoGuiaRemision.dispose();
			this.jInternalFrameReporteDinamicoGuiaRemision=null;
		}
		
		if(this.jInternalFrameImportacionGuiaRemision!=null) {
			this.jInternalFrameImportacionGuiaRemision.setVisible(false);	    			
			this.jInternalFrameImportacionGuiaRemision.dispose();
			this.jInternalFrameImportacionGuiaRemision=null;
		}		
		
		
		this.setVisible(false);
		this.dispose();
		//this=null;
	}
	
	
	
	public void jButtonActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {			
			this.startProcessGuiaRemision();
			
			GuiaRemisionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.BUTTON,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.guiaremision,new Object(),this.guiaremisionParameterGeneral,this.guiaremisionReturnGeneral);
			
			
			if(sTipo.equals("NuevoGuiaRemision")) {
				jButtonNuevoGuiaRemisionActionPerformed(evt,false);
			} else if(sTipo.equals("DuplicarGuiaRemision")) {
				jButtonDuplicarGuiaRemisionActionPerformed(evt,false);
			} else if(sTipo.equals("CopiarGuiaRemision")) {
				jButtonCopiarGuiaRemisionActionPerformed(evt);
			} else if(sTipo.equals("VerFormGuiaRemision")) {
				jButtonVerFormGuiaRemisionActionPerformed(evt);
			} else if(sTipo.equals("NuevoToolBarGuiaRemision")) {
				jButtonNuevoGuiaRemisionActionPerformed(evt,false);
			} else if(sTipo.equals("DuplicarToolBarGuiaRemision")) {
				jButtonDuplicarGuiaRemisionActionPerformed(evt,false);
			} else if(sTipo.equals("MenuItemNuevoGuiaRemision")) {
				jButtonNuevoGuiaRemisionActionPerformed(evt,false);
			} else if(sTipo.equals("MenuItemDuplicarGuiaRemision")) {
				jButtonDuplicarGuiaRemisionActionPerformed(evt,false);
			} else if(sTipo.equals("NuevoRelacionesGuiaRemision")) {
				jButtonNuevoGuiaRemisionActionPerformed(evt,true);
			} else if(sTipo.equals("NuevoRelacionesToolBarGuiaRemision")) {
				jButtonNuevoGuiaRemisionActionPerformed(evt,true);
			} else if(sTipo.equals("MenuItemNuevoRelacionesGuiaRemision")) {
				jButtonNuevoGuiaRemisionActionPerformed(evt,true);
			} else if(sTipo.equals("ModificarGuiaRemision")) {
				jButtonModificarGuiaRemisionActionPerformed(evt);
			} else if(sTipo.equals("ModificarToolBarGuiaRemision")) {
				jButtonModificarGuiaRemisionActionPerformed(evt);
			} else if(sTipo.equals("MenuItemModificarGuiaRemision")) {
				jButtonModificarGuiaRemisionActionPerformed(evt);
			} else if(sTipo.equals("ActualizarGuiaRemision")) {
				jButtonActualizarGuiaRemisionActionPerformed(evt);
			} else if(sTipo.equals("ActualizarToolBarGuiaRemision")) {
				jButtonActualizarGuiaRemisionActionPerformed(evt);
			} else if(sTipo.equals("MenuItemActualizarGuiaRemision")) {
				jButtonActualizarGuiaRemisionActionPerformed(evt);
			} else if(sTipo.equals("EliminarGuiaRemision")) {
				jButtonEliminarGuiaRemisionActionPerformed(evt);
			} else if(sTipo.equals("EliminarToolBarGuiaRemision")) {
				jButtonEliminarGuiaRemisionActionPerformed(evt);
			} else if(sTipo.equals("MenuItemEliminarGuiaRemision")) {
				jButtonEliminarGuiaRemisionActionPerformed(evt);
			} else if(sTipo.equals("CancelarGuiaRemision")) {
				jButtonCancelarGuiaRemisionActionPerformed(evt);
			} else if(sTipo.equals("CancelarToolBarGuiaRemision")) {
				jButtonCancelarGuiaRemisionActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCancelarGuiaRemision")) {
				jButtonCancelarGuiaRemisionActionPerformed(evt);
			} else if(sTipo.equals("CerrarGuiaRemision")) {
				jButtonCerrarGuiaRemisionActionPerformed(evt);
			} else if(sTipo.equals("CerrarToolBarGuiaRemision")) {
				jButtonCerrarGuiaRemisionActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCerrarGuiaRemision")) {
				jButtonCerrarGuiaRemisionActionPerformed(evt);
			} else if(sTipo.equals("MostrarOcultarToolBarGuiaRemision")) {
				jButtonMostrarOcultarGuiaRemisionActionPerformed(evt);
			} else if(sTipo.equals("MenuItemDetalleCerrarGuiaRemision")) {
				jButtonCancelarGuiaRemisionActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosGuiaRemision")) {
				jButtonGuardarCambiosGuiaRemisionActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosToolBarGuiaRemision")) {
				jButtonGuardarCambiosGuiaRemisionActionPerformed(evt);
			} else if(sTipo.equals("CopiarToolBarGuiaRemision")) {
				jButtonCopiarGuiaRemisionActionPerformed(evt);
			} else if(sTipo.equals("VerFormToolBarGuiaRemision")) {
				jButtonVerFormGuiaRemisionActionPerformed(evt);
			} else if(sTipo.equals("MenuItemGuardarCambiosGuiaRemision")) {
				jButtonGuardarCambiosGuiaRemisionActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCopiarGuiaRemision")) {
				jButtonCopiarGuiaRemisionActionPerformed(evt);
			} else if(sTipo.equals("MenuItemVerFormGuiaRemision")) {
				jButtonVerFormGuiaRemisionActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosTablaGuiaRemision")) {
				jButtonGuardarCambiosGuiaRemisionActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosTablaToolBarGuiaRemision")) {
				jButtonGuardarCambiosGuiaRemisionActionPerformed(evt);
			} else if(sTipo.equals("MenuItemGuardarCambiosTablaGuiaRemision")) {
				jButtonGuardarCambiosGuiaRemisionActionPerformed(evt);
			} else if(sTipo.equals("RecargarInformacionGuiaRemision")) {
				jButtonRecargarInformacionGuiaRemisionActionPerformed(evt);
			} else if(sTipo.equals("RecargarInformacionToolBarGuiaRemision")) {
				jButtonRecargarInformacionGuiaRemisionActionPerformed(evt);
			} else if(sTipo.equals("MenuItemRecargarInformacionGuiaRemision")) {
				jButtonRecargarInformacionGuiaRemisionActionPerformed(evt);
			}
			else if(sTipo.equals("AnterioresGuiaRemision")) {
				jButtonAnterioresGuiaRemisionActionPerformed(evt);
			} else if(sTipo.equals("AnterioresToolBarGuiaRemision")) {
				jButtonAnterioresGuiaRemisionActionPerformed(evt);
			} else if(sTipo.equals("MenuItemAnterioreGuiaRemision")) {
				jButtonAnterioresGuiaRemisionActionPerformed(evt);
			} else if(sTipo.equals("SiguientesGuiaRemision")) {
				jButtonSiguientesGuiaRemisionActionPerformed(evt);
			} else if(sTipo.equals("SiguientesToolBarGuiaRemision")) {
				jButtonSiguientesGuiaRemisionActionPerformed(evt);
			} else if(sTipo.equals("MenuItemSiguientesGuiaRemision")) {
				jButtonSiguientesGuiaRemisionActionPerformed(evt);
			} else if(sTipo.equals("MenuItemAbrirOrderByGuiaRemision") || sTipo.equals("MenuItemDetalleAbrirOrderByGuiaRemision")) {
				jButtonAbrirOrderByGuiaRemisionActionPerformed(evt);
			} else if(sTipo.equals("MenuItemMostrarOcultarGuiaRemision") || sTipo.equals("MenuItemDetalleMostrarOcultarGuiaRemision")) {
				jButtonMostrarOcultarGuiaRemisionActionPerformed(evt);
			} else if(sTipo.equals("NuevoGuardarCambiosGuiaRemision")) {
				jButtonNuevoGuardarCambiosGuiaRemisionActionPerformed(evt);
			} else if(sTipo.equals("NuevoGuardarCambiosToolBarGuiaRemision")) {
				jButtonNuevoGuardarCambiosGuiaRemisionActionPerformed(evt);
			} else if(sTipo.equals("MenuItemNuevoGuardarCambiosGuiaRemision")) {
				jButtonNuevoGuardarCambiosGuiaRemisionActionPerformed(evt);
			} 
			else if(sTipo.equals("CerrarReporteDinamicoGuiaRemision")) {
				jButtonCerrarReporteDinamicoGuiaRemisionActionPerformed(evt);
			} else if(sTipo.equals("GenerarReporteDinamicoGuiaRemision")) {
				jButtonGenerarReporteDinamicoGuiaRemisionActionPerformed(evt);
			} else if(sTipo.equals("GenerarExcelReporteDinamicoGuiaRemision")) {
				
				jButtonGenerarExcelReporteDinamicoGuiaRemisionActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarImportacionGuiaRemision")) {
				jButtonCerrarImportacionGuiaRemisionActionPerformed(evt);
			} else if(sTipo.equals("GenerarImportacionGuiaRemision")) {
				
				jButtonGenerarImportacionGuiaRemisionActionPerformed(evt);
				
			} else if(sTipo.equals("AbrirImportacionGuiaRemision")) {
				
				jButtonAbrirImportacionGuiaRemisionActionPerformed(evt);
				
			} else if(sTipo.equals("TiposAccionesGuiaRemision")) {
				jComboBoxTiposAccionesGuiaRemisionActionListener(evt,false);
			} else if(sTipo.equals("TiposRelacionesGuiaRemision")) {
				jComboBoxTiposRelacionesGuiaRemisionActionListener(evt);
			} else if(sTipo.equals("TiposAccionesFormularioGuiaRemision")) {
				jComboBoxTiposAccionesGuiaRemisionActionListener(evt,true);
			} else if(sTipo.equals("TiposSeleccionarGuiaRemision")) {
				
				jComboBoxTiposSeleccionarGuiaRemisionActionListener(evt);
				
			} else if(sTipo.equals("ValorCampoGeneralGuiaRemision")) {
				jTextFieldValorCampoGeneralGuiaRemisionActionListener(evt);
			}
			
			
			else if(sTipo.equals("AbrirOrderByGuiaRemision")) {
				jButtonAbrirOrderByGuiaRemisionActionPerformed(evt);
				
			} else if(sTipo.equals("AbrirOrderByToolBarGuiaRemision")) {
				jButtonAbrirOrderByGuiaRemisionActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarOrderByGuiaRemision")) {
				jButtonCerrarOrderByGuiaRemisionActionPerformed(evt);
			} 
						
			
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("idGuiaRemisionBusqueda")) {
				this.jButtonidGuiaRemisionBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_empresaGuiaRemisionUpdate")) {
				this.jButtonid_empresaGuiaRemisionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_empresaGuiaRemisionBusqueda")) {
				this.jButtonid_empresaGuiaRemisionBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_sucursalGuiaRemisionUpdate")) {
				this.jButtonid_sucursalGuiaRemisionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_sucursalGuiaRemisionBusqueda")) {
				this.jButtonid_sucursalGuiaRemisionBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_ejercicioGuiaRemisionUpdate")) {
				this.jButtonid_ejercicioGuiaRemisionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_ejercicioGuiaRemisionBusqueda")) {
				this.jButtonid_ejercicioGuiaRemisionBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_periodoGuiaRemisionUpdate")) {
				this.jButtonid_periodoGuiaRemisionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_periodoGuiaRemisionBusqueda")) {
				this.jButtonid_periodoGuiaRemisionBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_usuarioGuiaRemisionUpdate")) {
				this.jButtonid_usuarioGuiaRemisionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_usuarioGuiaRemisionBusqueda")) {
				this.jButtonid_usuarioGuiaRemisionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("secuencialGuiaRemisionBusqueda")) {
				this.jButtonsecuencialGuiaRemisionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fecha_emisionGuiaRemisionBusqueda")) {
				this.jButtonfecha_emisionGuiaRemisionBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_formatoGuiaRemisionUpdate")) {
				this.jButtonid_formatoGuiaRemisionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_formatoGuiaRemisionBusqueda")) {
				this.jButtonid_formatoGuiaRemisionBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_precioGuiaRemisionUpdate")) {
				this.jButtonid_tipo_precioGuiaRemisionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_precioGuiaRemisionBusqueda")) {
				this.jButtonid_tipo_precioGuiaRemisionBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_monedaGuiaRemisionUpdate")) {
				this.jButtonid_monedaGuiaRemisionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_monedaGuiaRemisionBusqueda")) {
				this.jButtonid_monedaGuiaRemisionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("numero_camionGuiaRemisionBusqueda")) {
				this.jButtonnumero_camionGuiaRemisionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_clienteGuiaRemision")) {
				this.jButtonid_clienteGuiaRemisionActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_clienteGuiaRemisionUpdate")) {
				this.jButtonid_clienteGuiaRemisionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_clienteGuiaRemisionBusqueda")) {
				this.jButtonid_clienteGuiaRemisionBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_vendedorGuiaRemisionUpdate")) {
				this.jButtonid_vendedorGuiaRemisionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_vendedorGuiaRemisionBusqueda")) {
				this.jButtonid_vendedorGuiaRemisionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_facturaGuiaRemision")) {
				this.jButtonid_facturaGuiaRemisionActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_facturaGuiaRemisionUpdate")) {
				this.jButtonid_facturaGuiaRemisionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_facturaGuiaRemisionBusqueda")) {
				this.jButtonid_facturaGuiaRemisionBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_transportistaGuiaRemisionUpdate")) {
				this.jButtonid_transportistaGuiaRemisionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_transportistaGuiaRemisionBusqueda")) {
				this.jButtonid_transportistaGuiaRemisionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("identificacionGuiaRemisionBusqueda")) {
				this.jButtonidentificacionGuiaRemisionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fecha_origenGuiaRemisionBusqueda")) {
				this.jButtonfecha_origenGuiaRemisionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fecha_destinoGuiaRemisionBusqueda")) {
				this.jButtonfecha_destinoGuiaRemisionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("transporte_codigoGuiaRemisionBusqueda")) {
				this.jButtontransporte_codigoGuiaRemisionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("cantidad_bultosGuiaRemisionBusqueda")) {
				this.jButtoncantidad_bultosGuiaRemisionBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_consultorGuiaRemisionUpdate")) {
				this.jButtonid_consultorGuiaRemisionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_consultorGuiaRemisionBusqueda")) {
				this.jButtonid_consultorGuiaRemisionBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_transporteGuiaRemisionUpdate")) {
				this.jButtonid_transporteGuiaRemisionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_transporteGuiaRemisionBusqueda")) {
				this.jButtonid_transporteGuiaRemisionBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_sub_clienteGuiaRemisionUpdate")) {
				this.jButtonid_sub_clienteGuiaRemisionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_sub_clienteGuiaRemisionBusqueda")) {
				this.jButtonid_sub_clienteGuiaRemisionBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_empleadoGuiaRemisionUpdate")) {
				this.jButtonid_empleadoGuiaRemisionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_empleadoGuiaRemisionBusqueda")) {
				this.jButtonid_empleadoGuiaRemisionBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_ciudad_origenGuiaRemisionUpdate")) {
				this.jButtonid_ciudad_origenGuiaRemisionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_ciudad_origenGuiaRemisionBusqueda")) {
				this.jButtonid_ciudad_origenGuiaRemisionBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_ciudad_destinoGuiaRemisionUpdate")) {
				this.jButtonid_ciudad_destinoGuiaRemisionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_ciudad_destinoGuiaRemisionBusqueda")) {
				this.jButtonid_ciudad_destinoGuiaRemisionBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_llamadaGuiaRemisionUpdate")) {
				this.jButtonid_tipo_llamadaGuiaRemisionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_llamadaGuiaRemisionBusqueda")) {
				this.jButtonid_tipo_llamadaGuiaRemisionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("hora_inicioGuiaRemisionBusqueda")) {
				this.jButtonhora_inicioGuiaRemisionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("hora_finGuiaRemisionBusqueda")) {
				this.jButtonhora_finGuiaRemisionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("cupoGuiaRemisionBusqueda")) {
				this.jButtoncupoGuiaRemisionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("saldoGuiaRemisionBusqueda")) {
				this.jButtonsaldoGuiaRemisionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("documentoGuiaRemisionBusqueda")) {
				this.jButtondocumentoGuiaRemisionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("disponibleGuiaRemisionBusqueda")) {
				this.jButtondisponibleGuiaRemisionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("descripcionGuiaRemisionBusqueda")) {
				this.jButtondescripcionGuiaRemisionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("total_ivaGuiaRemisionBusqueda")) {
				this.jButtontotal_ivaGuiaRemisionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("total_sin_ivaGuiaRemisionBusqueda")) {
				this.jButtontotal_sin_ivaGuiaRemisionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("descuentoGuiaRemisionBusqueda")) {
				this.jButtondescuentoGuiaRemisionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fleteGuiaRemisionBusqueda")) {
				this.jButtonfleteGuiaRemisionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("otroGuiaRemisionBusqueda")) {
				this.jButtonotroGuiaRemisionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("financiamientoGuiaRemisionBusqueda")) {
				this.jButtonfinanciamientoGuiaRemisionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("ivaGuiaRemisionBusqueda")) {
				this.jButtonivaGuiaRemisionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("totalGuiaRemisionBusqueda")) {
				this.jButtontotalGuiaRemisionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("monto_retencionGuiaRemisionBusqueda")) {
				this.jButtonmonto_retencionGuiaRemisionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_tipo_cambioGuiaRemision")) {
				this.jButtonid_tipo_cambioGuiaRemisionActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_cambioGuiaRemisionUpdate")) {
				this.jButtonid_tipo_cambioGuiaRemisionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_cambioGuiaRemisionBusqueda")) {
				this.jButtonid_tipo_cambioGuiaRemisionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fechaGuiaRemisionBusqueda")) {
				this.jButtonfechaGuiaRemisionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("ruc_clienteGuiaRemisionBusqueda")) {
				this.jButtonruc_clienteGuiaRemisionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("nombre_clienteGuiaRemisionBusqueda")) {
				this.jButtonnombre_clienteGuiaRemisionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("telefono_clienteGuiaRemisionBusqueda")) {
				this.jButtontelefono_clienteGuiaRemisionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("direccion_clienteGuiaRemisionBusqueda")) {
				this.jButtondireccion_clienteGuiaRemisionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("numero_pre_impresoGuiaRemisionBusqueda")) {
				this.jButtonnumero_pre_impresoGuiaRemisionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("peso_brutoGuiaRemisionBusqueda")) {
				this.jButtonpeso_brutoGuiaRemisionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fecha_autorizacionGuiaRemisionBusqueda")) {
				this.jButtonfecha_autorizacionGuiaRemisionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fecha_vencimientoGuiaRemisionBusqueda")) {
				this.jButtonfecha_vencimientoGuiaRemisionBusquedaActionPerformed(evt);
			}
			
			
			else if(sTipo.equals("id_clienteGuiaRemision")) {
				this.jButtonid_clienteGuiaRemisionActionPerformed(evt);
			}
			else if(sTipo.equals("id_facturaGuiaRemision")) {
				this.jButtonid_facturaGuiaRemisionActionPerformed(evt);
			}
			else if(sTipo.equals("id_tipo_cambioGuiaRemision")) {
				this.jButtonid_tipo_cambioGuiaRemisionActionPerformed(evt);
			}
			
			
			else if(sTipo.equals("FK_IdCiudadDestinoGuiaRemision")) {
				this.jButtonFK_IdCiudadDestinoGuiaRemisionActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdCiudadOrigenGuiaRemision")) {
				this.jButtonFK_IdCiudadOrigenGuiaRemisionActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdClienteGuiaRemision")) {
				this.jButtonFK_IdClienteGuiaRemisionActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdConsultorGuiaRemision")) {
				this.jButtonFK_IdConsultorGuiaRemisionActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdEmpleadoGuiaRemision")) {
				this.jButtonFK_IdEmpleadoGuiaRemisionActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdFacturaGuiaRemision")) {
				this.jButtonFK_IdFacturaGuiaRemisionActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdFormatoGuiaRemision")) {
				this.jButtonFK_IdFormatoGuiaRemisionActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdSubClienteGuiaRemision")) {
				this.jButtonFK_IdSubClienteGuiaRemisionActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdTipoCambioGuiaRemision")) {
				this.jButtonFK_IdTipoCambioGuiaRemisionActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdTipoLlamadaGuiaRemision")) {
				this.jButtonFK_IdTipoLlamadaGuiaRemisionActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdTipoPrecioGuiaRemision")) {
				this.jButtonFK_IdTipoPrecioGuiaRemisionActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdTransporteGuiaRemision")) {
				this.jButtonFK_IdTransporteGuiaRemisionActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdTransportistaGuiaRemision")) {
				this.jButtonFK_IdTransportistaGuiaRemisionActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdVendedorGuiaRemision")) {
				this.jButtonFK_IdVendedorGuiaRemisionActionPerformed(evt);
			}
			
			;
			
			
			GuiaRemisionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.BUTTON,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.guiaremision,new Object(),this.guiaremisionParameterGeneral,this.guiaremisionReturnGeneral);
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);
			
  		} finally {
      		this.finishProcessGuiaRemision();
      	}
    }
	
	//FUNCIONA AL APLASTAR ENTER
	public void jTextFieldActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaGuiaRemisionActual();
			
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				Container containerParent=null;
				JTextField jTextField=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParent=jTextField.getParent();
						
				if(containerParent!=null && containerParent.getClass().equals(JTableMe.class)) {
					esControlTabla=true;
				}
						
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.guiaremision);
				
				this.actualizarInformacion("INFO_PADRE",false,this.guiaremision);
				
				GuiaRemisionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.guiaremision,new Object(),this.guiaremisionParameterGeneral,this.guiaremisionReturnGeneral);
				
				


				
				GuiaRemisionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.guiaremision,new Object(),this.guiaremisionParameterGeneral,this.guiaremisionReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(GuiaRemision.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",GuiaRemision.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
				}
				
			} catch(Exception e) {
  				FuncionesSwing.manageException2(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);
  			}
    }
	
	public Boolean existeCambioValor(ControlTipo controlTipo,String sTipo) throws Exception {
		Boolean existeCambio=true;
		
		try {
			GuiaRemision guiaremisionLocal=null;
			
			if(!this.getEsControlTabla()) {
				guiaremisionLocal=this.guiaremision;
			} else {
				guiaremisionLocal=this.guiaremisionAnterior;
			}
			
			if(controlTipo.equals(ControlTipo.TEXTBOX)) {
				


			}
		
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);
  		}
		
		return existeCambio;
	}
	
	public void jTextFieldFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTBOX,sTipo)) {
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextField jTextField=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParent=jTextField.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.guiaremision);
				
				this.actualizarInformacion("INFO_PADRE",false,this.guiaremision);
				
				GuiaRemisionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.guiaremision,new Object(),this.guiaremisionParameterGeneral,this.guiaremisionReturnGeneral);
							
				
				


				
				GuiaRemisionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.guiaremision,new Object(),this.guiaremisionParameterGeneral,this.guiaremisionReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(GuiaRemision.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",GuiaRemision.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextFieldFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaGuiaRemisionActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosGuiaRemision.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionAnterior =(GuiaRemision) this.guiaremisionLogic.getGuiaRemisions().toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.guiaremisionAnterior =(GuiaRemision) this.guiaremisions.toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);
  		}
    }	
	
	//CUANDO SE CAMBIA ALGUN FORMATO(TIPO DE LETRA,NEGRILLA,ETC)
	public void jTextFieldChangedUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			/*
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			//System.out.println("UPDATE");
			
			Boolean esControlTabla=false;
			//JTextField jTextField=null;
			Container containerParent=null;
			Component componentOpposite=null;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			GuiaRemisionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.guiaremision,new Object(),this.guiaremisionParameterGeneral,this.guiaremisionReturnGeneral);
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			//jTextField=(JTextField)evt.getSource();
			
			containerParent=jTextField.getParent();
					
			componentOpposite=null;//evt.getOppositeComponent();
			
			if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
				|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
			) {					
				esControlTabla=true;
			}
			
			this.esControlTabla=esControlTabla;
			
			


			
			GuiaRemisionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.guiaremision,new Object(),this.guiaremisionParameterGeneral,this.guiaremisionReturnGeneral);
			*/
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);
  		}
    }
	
	//CUANDO SE QUITA ALGUN CARACTER
	public void jTextFieldRemoveUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			//System.out.println("REMOVE");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);
  		}
    }
	
	//CUANDO SE INGRESA ALGUN CARACTER
	public void jTextFieldInsertUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			//System.out.println("INSERT");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);
  		}
    }
	
	//FUNCIONA AL APLASTAR ENTER
	public void jFormattedTextFieldActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaGuiaRemisionActual();
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				Container containerParent=null;
				Container containerParentAux=null;
				JFormattedTextField JFormattedTextField=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				JFormattedTextField=(JFormattedTextField)evt.getSource();
				
				containerParentAux=JFormattedTextField.getParent();
				
				if(containerParentAux!=null && containerParentAux.getClass().equals(JDateChooser.class)) {
					containerParent=containerParentAux.getParent();
				}
				
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.guiaremision);
				
				this.actualizarInformacion("INFO_PADRE",false,this.guiaremision);
				
				GuiaRemisionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.guiaremision,new Object(),this.guiaremisionParameterGeneral,this.guiaremisionReturnGeneral);
								
						
				


				
				GuiaRemisionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.guiaremision,new Object(),this.guiaremisionParameterGeneral,this.guiaremisionReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(GuiaRemision.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",GuiaRemision.class.getName(),sTipo,"DATE",esControlTabla,conIrServidorAplicacionParent,
							id,JFormattedTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jFormattedTextFieldFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTBOX,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextField jTextField=null;
				Container containerParent=null;
				Container containerParentAux=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParentAux=jTextField.getParent();
						
				if(containerParentAux!=null && containerParentAux.getClass().equals(JDateChooser.class)) {
					containerParent=containerParentAux.getParent();
				}
				
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.guiaremision);
				
				this.actualizarInformacion("INFO_PADRE",false,this.guiaremision);
				
				GuiaRemisionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.guiaremision,new Object(),this.guiaremisionParameterGeneral,this.guiaremisionReturnGeneral);
								
				
				


				
				GuiaRemisionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.guiaremision,new Object(),this.guiaremisionParameterGeneral,this.guiaremisionReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(GuiaRemision.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",GuiaRemision.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jFormattedTextFieldFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaGuiaRemisionActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosGuiaRemision.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionAnterior =(GuiaRemision) this.guiaremisionLogic.getGuiaRemisions().toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.guiaremisionAnterior =(GuiaRemision) this.guiaremisions.toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.DATE,sTipo)) {
				this.actualizarInformacion("EVENTO_CONTROL",false,this.guiaremision);
				
				this.actualizarInformacion("INFO_PADRE",false,this.guiaremision);
			}	
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaGuiaRemisionActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosGuiaRemision.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionAnterior =(GuiaRemision) this.guiaremisionLogic.getGuiaRemisions().toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.guiaremisionAnterior =(GuiaRemision) this.guiaremisions.toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaGuiaRemisionActual();
				
			this.actualizarInformacion("EVENTO_CONTROL",false,this.guiaremision);
			
			this.actualizarInformacion("INFO_PADRE",false,this.guiaremision);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jTextAreaFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTAREA,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextArea jTextArea=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextArea=(JTextArea)evt.getSource();
				
				containerParent=jTextArea.getParent();
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.guiaremision);
				
				this.actualizarInformacion("INFO_PADRE",false,this.guiaremision);
				
				GuiaRemisionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.guiaremision,new Object(),this.guiaremisionParameterGeneral,this.guiaremisionReturnGeneral);
							
				
				


				
				GuiaRemisionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.guiaremision,new Object(),this.guiaremisionParameterGeneral,this.guiaremisionReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(GuiaRemision.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",GuiaRemision.class.getName(),sTipo,"TEXTAREA",esControlTabla,conIrServidorAplicacionParent,
							id,jTextArea, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaGuiaRemisionActual();
			
				//SELECCIONA FILA A OBJETO ANTERIOR
				Integer intSelectedRow = this.jTableDatosGuiaRemision.getSelectedRow();
						
				if(intSelectedRow!=null && intSelectedRow>-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.guiaremisionAnterior =(GuiaRemision) this.guiaremisionLogic.getGuiaRemisions().toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
						this.guiaremisionAnterior =(GuiaRemision) this.guiaremisions.toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					//System.out.println(this.banco);
				}
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaChangedUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			/*
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			//System.out.println("UPDATE");
			
			Boolean esControlTabla=false;
			//JTextArea jTextArea=null;
			Container containerParent=null;
			Component componentOpposite=null;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			GuiaRemisionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.guiaremision,new Object(),this.guiaremisionParameterGeneral,this.guiaremisionReturnGeneral);
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			//jTextArea=(JTextArea)evt.getSource();
			
			containerParent=jTextArea.getParent();
			componentOpposite=null;//evt.getOppositeComponent();
			
			if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
				|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
			) {
				esControlTabla=true;
			}
			
			this.esControlTabla=esControlTabla;
			
			


			
			GuiaRemisionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.guiaremision,new Object(),this.guiaremisionParameterGeneral,this.guiaremisionReturnGeneral);
			
			*/
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaRemoveUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			//System.out.println("REMOVE");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaInsertUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			
			//System.out.println("INSERT");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO EXISTE O NO ES APLICABLE
	public void jTextAreaActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaGuiaRemisionActual();
			
			this.actualizarInformacion("EVENTO_CONTROL",false,this.guiaremision);
			
			this.actualizarInformacion("INFO_PADRE",false,this.guiaremision);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jLabelFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JLabel jLabel=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jLabel=(JLabel)evt.getSource();
				
				containerParent=jLabel.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.guiaremision);
				
				this.actualizarInformacion("INFO_PADRE",false,this.guiaremision);
				
				GuiaRemisionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.guiaremision,new Object(),this.guiaremisionParameterGeneral,this.guiaremisionReturnGeneral);
								
				
				


				
				GuiaRemisionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.guiaremision,new Object(),this.guiaremisionParameterGeneral,this.guiaremisionReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(GuiaRemision.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",GuiaRemision.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jLabel, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}	
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jLabelFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaGuiaRemisionActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosGuiaRemision.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionAnterior =(GuiaRemision) this.guiaremisionLogic.getGuiaRemisions().toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.guiaremisionAnterior =(GuiaRemision) this.guiaremisions.toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO EXISTE O NO ES APLICABLE
	public void jLabelActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaGuiaRemisionActual();
				
			this.actualizarInformacion("EVENTO_CONTROL",false,this.guiaremision);
			
			this.actualizarInformacion("INFO_PADRE",false,this.guiaremision);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxItemListenerGeneral(String sTipo,ItemEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaGuiaRemisionActual();
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JCheckBox jCheckBox=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
							
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jCheckBox=(JCheckBox)evt.getSource();
				
				containerParent=jCheckBox.getParent();
						
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.guiaremision);
				
				this.actualizarInformacion("INFO_PADRE",false,this.guiaremision);
				
				GuiaRemisionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.guiaremision,new Object(),this.guiaremisionParameterGeneral,this.guiaremisionReturnGeneral);
												
				
				if(sTipo.equals("SeleccionarTodosGuiaRemision")) {
					jCheckBoxSeleccionarTodosGuiaRemisionItemListener(evt);
				
				} else if(sTipo.equals("SeleccionadosGuiaRemision")) {
					jCheckBoxSeleccionadosGuiaRemisionItemListener(evt);
				
				} else if(sTipo.equals("NuevoToolBarGuiaRemision")) {
					
				}
				
				


				
				
				GuiaRemisionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.guiaremision,new Object(),this.guiaremisionParameterGeneral,this.guiaremisionReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(GuiaRemision.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",GuiaRemision.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jCheckBox, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}	
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.CHECKBOX,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JCheckBox jCheckBox=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jCheckBox=(JCheckBox)evt.getSource();
				
				containerParent=jCheckBox.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				//this.actualizarInformacion("EVENTO_CONTROL",false,this.guiaremision);
				
				//this.actualizarInformacion("INFO_PADRE",false,this.guiaremision);
				
				GuiaRemisionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.guiaremision,new Object(),this.guiaremisionParameterGeneral,this.guiaremisionReturnGeneral);
												
				
				


				
				
				GuiaRemisionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.guiaremision,new Object(),this.guiaremisionParameterGeneral,this.guiaremisionReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
				
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(GuiaRemision.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",GuiaRemision.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jCheckBox, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaGuiaRemisionActual();
			
				//SELECCIONA FILA A OBJETO ANTERIOR
				Integer intSelectedRow = this.jTableDatosGuiaRemision.getSelectedRow();
						
				if(intSelectedRow!=null && intSelectedRow>-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.guiaremisionAnterior =(GuiaRemision) this.guiaremisionLogic.getGuiaRemisions().toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
						this.guiaremisionAnterior =(GuiaRemision) this.guiaremisions.toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					//System.out.println(this.banco);
				}
			}
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaGuiaRemisionActual();
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.guiaremision);
				
				this.actualizarInformacion("INFO_PADRE",false,this.guiaremision);
				
				GuiaRemisionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.guiaremision,new Object(),this.guiaremisionParameterGeneral,this.guiaremisionReturnGeneral);
				
				
				GuiaRemisionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.guiaremision,new Object(),this.guiaremisionParameterGeneral,this.guiaremisionReturnGeneral);
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO SE UTILIZA, SE USA EL DE ABAJO, IGUAL SE DEJA EL CODIGO COMO RESPALDO Y ES CASI IGUAL
	//ERROR:SI SE USA,AL HACER CLIC EN EL MISMO ELEMENTO O EJECUTAR SELECTEDITEM, SIEMPRE SE EJECUTA COMO SI ESCOGIERA OTRO ELEMENTO(NO DEBERIA)
	//@SuppressWarnings("rawtypes")
	public void jComboBoxActionPerformedGeneral(String sTipo,ActionEvent evt) {		
		try {
			/*		
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			Container containerParent=null;
			Component componentOpposite=null;
			Boolean esControlTabla=false;
				
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			GuiaRemisionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.guiaremision,new Object(),this.guiaremisionParameterGeneral,this.guiaremisionReturnGeneral);
			JComboBox jComboBoxGenerico=null;						
			
			if(evt.getSource().getClass().equals(JComboBox.class)
				|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
					
				jComboBoxGenerico=(JComboBox)evt.getSource();
				
				containerParent=jComboBoxGenerico.getParent();
				
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
			}
			
			String sFinalQueryCombo="";
			
			


			
			GuiaRemisionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.guiaremision,new Object(),this.guiaremisionParameterGeneral,this.guiaremisionReturnGeneral);
			*/						
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);
  		}		
    }
	
	@SuppressWarnings("rawtypes")
	public void jComboBoxItemStateChangedGeneral(String sTipo,ItemEvent evt) { 	  
		try {
			if (evt.getStateChange() == ItemEvent.SELECTED && this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaGuiaRemisionActual();
			
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
			
			
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				Container containerParent=null;
				Component componentOpposite=null;
				Boolean esControlTabla=false;
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				JComboBox jComboBoxGenerico=null;						
				
				if(evt.getSource().getClass().equals(JComboBox.class)
					|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
						
					jComboBoxGenerico=(JComboBox)evt.getSource();
					
					containerParent=jComboBoxGenerico.getParent();
					
					componentOpposite=null;//evt.getOppositeComponent();
					
					if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
					) {					
						esControlTabla=true;
					}		
					
					this.esControlTabla=esControlTabla;
				}
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.guiaremision);
				
				this.actualizarInformacion("INFO_PADRE",false,this.guiaremision);
				
				GuiaRemisionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.guiaremision,new Object(),this.guiaremisionParameterGeneral,this.guiaremisionReturnGeneral);
				
				
				String sFinalQueryCombo="";
				
				


				
				GuiaRemisionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.guiaremision,new Object(),this.guiaremisionParameterGeneral,this.guiaremisionReturnGeneral);
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
				
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(GuiaRemision.class.getName());
								
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",GuiaRemision.class.getName(),sTipo,"COMBOBOX",esControlTabla,conIrServidorAplicacionParent,
							id,jComboBoxGenerico, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);
  		}
    }
	
	//@SuppressWarnings("rawtypes")
	public void jComboBoxFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		//MANEJADO EN ITEMLISTENER
		/*
		try {
			if(this.permiteManejarEventosControl()) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				
				//if(this.esUsoDesdeHijo) {
				//	eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				//}
				
				
				Container containerParent=null;
				Component componentOpposite=null;
				Boolean esControlTabla=false;
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
			
				this.actualizarInformacion("EVENTO_CONTROL",false,this.guiaremision);
				
				this.actualizarInformacion("INFO_PADRE",false,this.guiaremision);
				
				GuiaRemisionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.guiaremision,new Object(),this.guiaremisionParameterGeneral,this.guiaremisionReturnGeneral);
				JComboBox jComboBoxGenerico=null;						
				
				if(evt.getSource().getClass().equals(JComboBox.class)
					|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
						
					jComboBoxGenerico=(JComboBox)evt.getSource();
					
					containerParent=jComboBoxGenerico.getParent();
					
					componentOpposite=evt.getOppositeComponent();
					
					if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
					) {					
						esControlTabla=true;
					}
					
					this.esControlTabla=esControlTabla;
				}
				
				String sFinalQueryCombo="";
				
				


				
				GuiaRemisionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.guiaremision,new Object(),this.guiaremisionParameterGeneral,this.guiaremisionReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(GuiaRemision.class.getName());
				
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",GuiaRemision.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jComboBoxGenerico, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);
  		}
		
		*/
    }
	
	public void jComboBoxFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaGuiaRemisionActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosGuiaRemision.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.guiaremisionAnterior =(GuiaRemision) this.guiaremisionLogic.getGuiaRemisions().toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.guiaremisionAnterior =(GuiaRemision) this.guiaremisions.toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);
  		}
    }		
	
	public void tableValueChangedGeneral(String sTipo,ListSelectionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				GuiaRemisionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TABLE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.guiaremision,new Object(),this.guiaremisionParameterGeneral,this.guiaremisionReturnGeneral);
				
				if(sTipo.equals("TableDatosSeleccionarGuiaRemision")) {
					//BYDAN_DESHABILITADO
					//try {jTableDatosGuiaRemisionListSelectionListener(e);}catch(Exception e1){e1.printStackTrace();}
					
					//SOLO CUANDO MOUSE ES SOLTADO
					if (!evt.getValueIsAdjusting()) {
						//SELECCIONA FILA A OBJETO ACTUAL
						Integer intSelectedRow = this.jTableDatosGuiaRemision.getSelectedRow();
						
						if(intSelectedRow!=null && intSelectedRow>-1) {
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								this.guiaremision =(GuiaRemision) this.guiaremisionLogic.getGuiaRemisions().toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
							} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
								this.guiaremision =(GuiaRemision) this.guiaremisions.toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(intSelectedRow)];
							}
							//ARCHITECTURE
							
							//System.out.println(this.guiaremision);
						}
					}
					
				} else if(sTipo.equals("jButtonCancelarGuiaRemision")) {
				
				}
				
				GuiaRemisionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TABLE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.guiaremision,new Object(),this.guiaremisionParameterGeneral,this.guiaremisionReturnGeneral);
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void tableMouseAdapterGeneral(String sTipo,MouseEvent evt) { 	  
		try {
			GuiaRemisionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TABLE,EventoTipo.MOUSE,EventoSubTipo.CLICKED,sTipo,this.guiaremision,new Object(),this.guiaremisionParameterGeneral,this.guiaremisionReturnGeneral);
			
			if(sTipo.equals("DatosSeleccionarGuiaRemision")) {
				if (evt.getClickCount() == 2) {
					jButtonIdActionPerformed(null,jTableDatosGuiaRemision.getSelectedRow(),false,false);
				}	
			} else if(sTipo.equals("jButtonCancelarGuiaRemision")) {
			
			}
			
			GuiaRemisionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TABLE,EventoTipo.MOUSE,EventoSubTipo.CLICKED,sTipo,this.guiaremision,new Object(),this.guiaremisionParameterGeneral,this.guiaremisionReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);
  		}
    }
	
	;
	
	public void jButtonActionPerformedTecladoGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			this.startProcessGuiaRemision();
			
			GuiaRemisionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.KEY,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.guiaremision,new Object(),this.guiaremisionParameterGeneral,this.guiaremisionReturnGeneral);
			
			if(sTipo.equals("NuevoGuiaRemision")) {
				jButtonNuevoGuiaRemisionActionPerformed(evt,false);
				
			} else if(sTipo.equals("DuplicarGuiaRemision")) {
				jButtonDuplicarGuiaRemisionActionPerformed(evt,false);
				
			} else if(sTipo.equals("CopiarGuiaRemision")) {
				jButtonCopiarGuiaRemisionActionPerformed(evt);
				
			} else if(sTipo.equals("VerFormGuiaRemision")) {
				jButtonVerFormGuiaRemisionActionPerformed(evt);
				
			} else if(sTipo.equals("NuevoRelacionesGuiaRemision")) {
				jButtonNuevoGuiaRemisionActionPerformed(evt,true);
				
			} else if(sTipo.equals("ModificarGuiaRemision")) {
				jButtonModificarGuiaRemisionActionPerformed(evt);
				
			} else if(sTipo.equals("ActualizarGuiaRemision")) {
				jButtonActualizarGuiaRemisionActionPerformed(evt);
				
			} else if(sTipo.equals("EliminarGuiaRemision")) {
				jButtonEliminarGuiaRemisionActionPerformed(evt);
				
			} else if(sTipo.equals("GuardarCambiosTablaGuiaRemision")) {
				jButtonGuardarCambiosGuiaRemisionActionPerformed(evt);
				
			} else if(sTipo.equals("CancelarGuiaRemision")) {
				jButtonCancelarGuiaRemisionActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarGuiaRemision")) {
				jButtonCerrarGuiaRemisionActionPerformed(evt);
				
			} else if(sTipo.equals("GuardarCambiosGuiaRemision")) {
				jButtonGuardarCambiosGuiaRemisionActionPerformed(evt);
			
			} else if(sTipo.equals("NuevoGuardarCambiosGuiaRemision")) {
				jButtonNuevoGuardarCambiosGuiaRemisionActionPerformed(evt);
			
			} else if(sTipo.equals("AbrirOrderByGuiaRemision")) {
				jButtonAbrirOrderByGuiaRemisionActionPerformed(evt);
			
			} else if(sTipo.equals("RecargarInformacionGuiaRemision")) {
				jButtonRecargarInformacionGuiaRemisionActionPerformed(evt);
			
			} else if(sTipo.equals("AnterioresGuiaRemision")) {
				jButtonAnterioresGuiaRemisionActionPerformed(evt);			
			
			}  else if(sTipo.equals("SiguientesGuiaRemision")) {
				jButtonSiguientesGuiaRemisionActionPerformed(evt);			
			} 
			
			
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("idGuiaRemisionBusqueda")) {
				this.jButtonidGuiaRemisionBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_empresaGuiaRemisionUpdate")) {
				this.jButtonid_empresaGuiaRemisionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_empresaGuiaRemisionBusqueda")) {
				this.jButtonid_empresaGuiaRemisionBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_sucursalGuiaRemisionUpdate")) {
				this.jButtonid_sucursalGuiaRemisionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_sucursalGuiaRemisionBusqueda")) {
				this.jButtonid_sucursalGuiaRemisionBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_ejercicioGuiaRemisionUpdate")) {
				this.jButtonid_ejercicioGuiaRemisionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_ejercicioGuiaRemisionBusqueda")) {
				this.jButtonid_ejercicioGuiaRemisionBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_periodoGuiaRemisionUpdate")) {
				this.jButtonid_periodoGuiaRemisionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_periodoGuiaRemisionBusqueda")) {
				this.jButtonid_periodoGuiaRemisionBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_usuarioGuiaRemisionUpdate")) {
				this.jButtonid_usuarioGuiaRemisionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_usuarioGuiaRemisionBusqueda")) {
				this.jButtonid_usuarioGuiaRemisionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("secuencialGuiaRemisionBusqueda")) {
				this.jButtonsecuencialGuiaRemisionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fecha_emisionGuiaRemisionBusqueda")) {
				this.jButtonfecha_emisionGuiaRemisionBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_formatoGuiaRemisionUpdate")) {
				this.jButtonid_formatoGuiaRemisionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_formatoGuiaRemisionBusqueda")) {
				this.jButtonid_formatoGuiaRemisionBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_precioGuiaRemisionUpdate")) {
				this.jButtonid_tipo_precioGuiaRemisionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_precioGuiaRemisionBusqueda")) {
				this.jButtonid_tipo_precioGuiaRemisionBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_monedaGuiaRemisionUpdate")) {
				this.jButtonid_monedaGuiaRemisionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_monedaGuiaRemisionBusqueda")) {
				this.jButtonid_monedaGuiaRemisionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("numero_camionGuiaRemisionBusqueda")) {
				this.jButtonnumero_camionGuiaRemisionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_clienteGuiaRemision")) {
				this.jButtonid_clienteGuiaRemisionActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_clienteGuiaRemisionUpdate")) {
				this.jButtonid_clienteGuiaRemisionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_clienteGuiaRemisionBusqueda")) {
				this.jButtonid_clienteGuiaRemisionBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_vendedorGuiaRemisionUpdate")) {
				this.jButtonid_vendedorGuiaRemisionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_vendedorGuiaRemisionBusqueda")) {
				this.jButtonid_vendedorGuiaRemisionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_facturaGuiaRemision")) {
				this.jButtonid_facturaGuiaRemisionActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_facturaGuiaRemisionUpdate")) {
				this.jButtonid_facturaGuiaRemisionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_facturaGuiaRemisionBusqueda")) {
				this.jButtonid_facturaGuiaRemisionBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_transportistaGuiaRemisionUpdate")) {
				this.jButtonid_transportistaGuiaRemisionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_transportistaGuiaRemisionBusqueda")) {
				this.jButtonid_transportistaGuiaRemisionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("identificacionGuiaRemisionBusqueda")) {
				this.jButtonidentificacionGuiaRemisionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fecha_origenGuiaRemisionBusqueda")) {
				this.jButtonfecha_origenGuiaRemisionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fecha_destinoGuiaRemisionBusqueda")) {
				this.jButtonfecha_destinoGuiaRemisionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("transporte_codigoGuiaRemisionBusqueda")) {
				this.jButtontransporte_codigoGuiaRemisionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("cantidad_bultosGuiaRemisionBusqueda")) {
				this.jButtoncantidad_bultosGuiaRemisionBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_consultorGuiaRemisionUpdate")) {
				this.jButtonid_consultorGuiaRemisionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_consultorGuiaRemisionBusqueda")) {
				this.jButtonid_consultorGuiaRemisionBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_transporteGuiaRemisionUpdate")) {
				this.jButtonid_transporteGuiaRemisionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_transporteGuiaRemisionBusqueda")) {
				this.jButtonid_transporteGuiaRemisionBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_sub_clienteGuiaRemisionUpdate")) {
				this.jButtonid_sub_clienteGuiaRemisionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_sub_clienteGuiaRemisionBusqueda")) {
				this.jButtonid_sub_clienteGuiaRemisionBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_empleadoGuiaRemisionUpdate")) {
				this.jButtonid_empleadoGuiaRemisionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_empleadoGuiaRemisionBusqueda")) {
				this.jButtonid_empleadoGuiaRemisionBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_ciudad_origenGuiaRemisionUpdate")) {
				this.jButtonid_ciudad_origenGuiaRemisionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_ciudad_origenGuiaRemisionBusqueda")) {
				this.jButtonid_ciudad_origenGuiaRemisionBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_ciudad_destinoGuiaRemisionUpdate")) {
				this.jButtonid_ciudad_destinoGuiaRemisionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_ciudad_destinoGuiaRemisionBusqueda")) {
				this.jButtonid_ciudad_destinoGuiaRemisionBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_llamadaGuiaRemisionUpdate")) {
				this.jButtonid_tipo_llamadaGuiaRemisionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_llamadaGuiaRemisionBusqueda")) {
				this.jButtonid_tipo_llamadaGuiaRemisionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("hora_inicioGuiaRemisionBusqueda")) {
				this.jButtonhora_inicioGuiaRemisionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("hora_finGuiaRemisionBusqueda")) {
				this.jButtonhora_finGuiaRemisionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("cupoGuiaRemisionBusqueda")) {
				this.jButtoncupoGuiaRemisionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("saldoGuiaRemisionBusqueda")) {
				this.jButtonsaldoGuiaRemisionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("documentoGuiaRemisionBusqueda")) {
				this.jButtondocumentoGuiaRemisionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("disponibleGuiaRemisionBusqueda")) {
				this.jButtondisponibleGuiaRemisionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("descripcionGuiaRemisionBusqueda")) {
				this.jButtondescripcionGuiaRemisionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("total_ivaGuiaRemisionBusqueda")) {
				this.jButtontotal_ivaGuiaRemisionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("total_sin_ivaGuiaRemisionBusqueda")) {
				this.jButtontotal_sin_ivaGuiaRemisionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("descuentoGuiaRemisionBusqueda")) {
				this.jButtondescuentoGuiaRemisionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fleteGuiaRemisionBusqueda")) {
				this.jButtonfleteGuiaRemisionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("otroGuiaRemisionBusqueda")) {
				this.jButtonotroGuiaRemisionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("financiamientoGuiaRemisionBusqueda")) {
				this.jButtonfinanciamientoGuiaRemisionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("ivaGuiaRemisionBusqueda")) {
				this.jButtonivaGuiaRemisionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("totalGuiaRemisionBusqueda")) {
				this.jButtontotalGuiaRemisionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("monto_retencionGuiaRemisionBusqueda")) {
				this.jButtonmonto_retencionGuiaRemisionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_tipo_cambioGuiaRemision")) {
				this.jButtonid_tipo_cambioGuiaRemisionActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_cambioGuiaRemisionUpdate")) {
				this.jButtonid_tipo_cambioGuiaRemisionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_cambioGuiaRemisionBusqueda")) {
				this.jButtonid_tipo_cambioGuiaRemisionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fechaGuiaRemisionBusqueda")) {
				this.jButtonfechaGuiaRemisionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("ruc_clienteGuiaRemisionBusqueda")) {
				this.jButtonruc_clienteGuiaRemisionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("nombre_clienteGuiaRemisionBusqueda")) {
				this.jButtonnombre_clienteGuiaRemisionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("telefono_clienteGuiaRemisionBusqueda")) {
				this.jButtontelefono_clienteGuiaRemisionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("direccion_clienteGuiaRemisionBusqueda")) {
				this.jButtondireccion_clienteGuiaRemisionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("numero_pre_impresoGuiaRemisionBusqueda")) {
				this.jButtonnumero_pre_impresoGuiaRemisionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("peso_brutoGuiaRemisionBusqueda")) {
				this.jButtonpeso_brutoGuiaRemisionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fecha_autorizacionGuiaRemisionBusqueda")) {
				this.jButtonfecha_autorizacionGuiaRemisionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fecha_vencimientoGuiaRemisionBusqueda")) {
				this.jButtonfecha_vencimientoGuiaRemisionBusquedaActionPerformed(evt);
			}
			
			GuiaRemisionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.KEY,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.guiaremision,new Object(),this.guiaremisionParameterGeneral,this.guiaremisionReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);
			
  		}  finally {
      		this.finishProcessGuiaRemision();
      	}
    }
	
	public void internalFrameClosingInternalFrameGeneral(String sTipo,InternalFrameEvent evt) { 	  
		try {
			GuiaRemisionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.WINDOW,EventoTipo.CLIC,EventoSubTipo.CLOSING,sTipo,this.guiaremision,new Object(),this.guiaremisionParameterGeneral,this.guiaremisionReturnGeneral);
			
			if(sTipo.equals("CloseInternalFrameGuiaRemision")) {
				closingInternalFrameGuiaRemision();
				
			} else if(sTipo.equals("jButtonCancelarGuiaRemision")) {
				JInternalFrameBase jInternalFrameDetalleFormGuiaRemision = (JInternalFrameBase)evt.getSource();
	            	
	            GuiaRemisionBeanSwingJInternalFrame jInternalFrameParent=(GuiaRemisionBeanSwingJInternalFrame)jInternalFrameDetalleFormGuiaRemision.getjInternalFrameParent();
	            
				jInternalFrameParent.jButtonCancelarGuiaRemisionActionPerformed(null);
			}
			
			GuiaRemisionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.WINDOW,EventoTipo.CLIC,EventoSubTipo.CLOSING,sTipo,this.guiaremision,new Object(),this.guiaremisionParameterGeneral,this.guiaremisionReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void recargarFormGuiaRemision(String sTipo,String sDominio,EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,String sTipoGeneral,ArrayList<Classe> classes,Boolean conIrServidorAplicacion) throws Exception {
		this.recargarFormGuiaRemision(sTipo,sDominio,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipoGeneral,classes,conIrServidorAplicacion,false);
	}
	
	public void recargarFormGuiaRemision(String sTipo,String sDominio,EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,String sTipoGeneral,ArrayList<Classe> classes,Boolean conIrServidorAplicacion,Boolean esControlTabla) throws Exception {
		if(this.permiteRecargarForm && this.permiteMantenimiento(this.guiaremision)) {
			if(!esControlTabla) {
				if(GuiaRemisionJInternalFrame.ISBINDING_MANUAL_TABLA) {			
					this.setVariablesFormularioToObjetoActualGuiaRemision(this.guiaremision,true,false);
					this.setVariablesFormularioToObjetoActualForeignKeysGuiaRemision(this.guiaremision);			
				}
				
				if(this.guiaremisionSessionBean.getEstaModoGuardarRelaciones()) {
					this.setVariablesFormularioRelacionesToObjetoActualGuiaRemision(this.guiaremision,classes);				
				}
			
				if(conIrServidorAplicacion) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {						
						this.guiaremisionReturnGeneral=guiaremisionLogic.procesarEventosGuiaRemisionsWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.guiaremisionLogic.getGuiaRemisions(),this.guiaremision,this.guiaremisionParameterGeneral,this.isEsNuevoGuiaRemision,classes);//this.guiaremisionLogic.getGuiaRemision()//sTipoGeneral
									
					} else if(Constantes.ISUSAEJBREMOTE) {
									
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE
					
					//ACTUALIZA VARIABLES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
					//this.setVariablesObjetoReturnGeneralToBeanGuiaRemision(this.guiaremisionReturnGeneral,this.guiaremisionBean,false);
						
					//ACTUALIZA VARIABLES RELACIONES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
					if(this.guiaremisionSessionBean.getEstaModoGuardarRelaciones()) {
						//this.setVariablesRelacionesObjetoReturnGeneralToBeanGuiaRemision(classes,this.guiaremisionReturnGeneral,this.guiaremisionBean,false);
					}
						
					if(this.guiaremisionReturnGeneral.getConRecargarPropiedades()) {
						//INICIALIZA VARIABLES COMBOS NORMALES (FK)
						this.setVariablesObjetoActualToFormularioForeignKeyGuiaRemision(this.guiaremisionReturnGeneral.getGuiaRemision());
							
						//INICIALIZA VARIABLES NORMALES A FORMULARIO(SIN FK)
						this.setVariablesObjetoActualToFormularioGuiaRemision(this.guiaremisionReturnGeneral.getGuiaRemision());	
					}
						
					if(this.guiaremisionReturnGeneral.getConRecargarRelaciones()) {
						//INICIALIZA VARIABLES RELACIONES A FORMULARIO
						this.setVariablesRelacionesObjetoActualToFormularioGuiaRemision(this.guiaremisionReturnGeneral.getGuiaRemision(),classes);//this.guiaremisionBean);	
					}									
					
				} else {				
					//INICIALIZA VARIABLES RELACIONES A FORMULARIO
					this.setVariablesRelacionesObjetoActualToFormularioGuiaRemision(this.guiaremision,classes);//this.guiaremisionBean);									
				}
			
				if(GuiaRemisionJInternalFrame.ISBINDING_MANUAL_TABLA) {
					this.setVariablesFormularioToObjetoActualGuiaRemision(this.guiaremision,true,false);
					this.setVariablesFormularioToObjetoActualForeignKeysGuiaRemision(this.guiaremision);				
				}
				
			} else {
				
				if(((controlTipo.equals(ControlTipo.TEXTBOX) || controlTipo.equals(ControlTipo.DATE)
					|| controlTipo.equals(ControlTipo.TEXTAREA) || controlTipo.equals(ControlTipo.COMBOBOX)
					)				
					&& eventoTipo.equals(EventoTipo.CHANGE)
					)
					
					|| (controlTipo.equals(ControlTipo.CHECKBOX) && eventoTipo.equals(EventoTipo.CLIC))
					
				) { // && sTipoGeneral.equals("TEXTBOX")
					
					if(this.guiaremisionAnterior!=null) {
						this.guiaremision=this.guiaremisionAnterior;
					}
				}
				
				if(conIrServidorAplicacion) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {						
						this.guiaremisionReturnGeneral=guiaremisionLogic.procesarEventosGuiaRemisionsWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.guiaremisionLogic.getGuiaRemisions(),this.guiaremision,this.guiaremisionParameterGeneral,this.isEsNuevoGuiaRemision,classes);//this.guiaremisionLogic.getGuiaRemision()//sTipoGeneral
									
					} else if(Constantes.ISUSAEJBREMOTE) {
									
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//NO ENTENDIBLE PORQUE PONER
					//if(this.guiaremisionSessionBean.getEstaModoGuardarRelaciones() 
					//	|| this.guiaremisionSessionBean.getEsGuardarRelacionado())	{
						actualizarLista(this.guiaremisionReturnGeneral.getGuiaRemision(),guiaremisionLogic.getGuiaRemisions());
					//}
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(this.guiaremisionReturnGeneral.getGuiaRemision(),this.guiaremisions);
				}
				//ARCHITECTURE
				
				//this.jTableDatosGuiaRemision.repaint();
				
				//((AbstractTableModel) this.jTableDatosGuiaRemision.getModel()).fireTableDataChanged();
				
				this.actualizarVisualTableDatosGuiaRemision();
			}
		}
	}
	
	public void actualizarVisualTableDatosGuiaRemision() throws Exception {
		
		GuiaRemisionModel guiaremisionModel=(GuiaRemisionModel)this.jTableDatosGuiaRemision.getModel();
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			guiaremisionModel.guiaremisions=this.guiaremisionLogic.getGuiaRemisions();
		
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
			guiaremisionModel.guiaremisions=this.guiaremisions;
		}
		
		
		((GuiaRemisionModel) this.jTableDatosGuiaRemision.getModel()).fireTableDataChanged();
	}
	
	public void actualizarVisualTableDatosEventosVistaGuiaRemision() throws Exception {
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.actualizarLista(this.getguiaremisionAnterior(),this.guiaremisionLogic.getGuiaRemisions());
					
		} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
			this.actualizarLista(this.getguiaremisionAnterior(),this.guiaremisions);
		}
		//ARCHITECTURE
						
		this.actualizarFilaTotales();
						
		this.actualizarVisualTableDatosGuiaRemision();	
	}
	
	public void setVariablesRelacionesObjetoActualToFormularioGuiaRemision(GuiaRemision guiaremision,ArrayList<Classe> classes) throws Exception { 
		try {
			
			for(Classe clas:classes) {
				if(clas.clas.equals(DetalleGuiaRemision.class)) {
					this.jInternalFrameDetalleFormGuiaRemision.detalleguiaremisionBeanSwingJInternalFrame.detalleguiaremisionLogic.setDetalleGuiaRemisions(guiaremision.getDetalleGuiaRemisions());
					this.jInternalFrameDetalleFormGuiaRemision.detalleguiaremisionBeanSwingJInternalFrame.inicializarActualizarBindingTablaDetalleGuiaRemision(false);
					break;
				}
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setEventoParentGeneral(Boolean esUsoDesdeHijo,String sDominio,String sDominioTipo,String sTipo,String sTipoGeneral,Boolean esControlTabla,Boolean conIrServidorAplicacion,
						Long id,Component control, EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,ArrayList<String> arrClasses,
						Object evt,GeneralEntityParameterReturnGeneral generalEntityParameterGeneral,Object otro) { 	  
		try {
			
			if(this.permiteManejarEventosControl()) {
				
				//BASE COPIADO DESDE TEXTFIELLOSTFOCUS
				
				//EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				Boolean conTodasRelaciones=false;
				
				this.esUsoDesdeHijo=esUsoDesdeHijo;
										
				GuiaRemisionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.guiaremision,new Object(),generalEntityParameterGeneral,this.guiaremisionReturnGeneral);
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				for(String sClasse:arrClasses) {
					if(sClasse.equals("TODOS")) {
						conTodasRelaciones=true;
						break;
					}
				}
				
				if(this.guiaremisionSessionBean.getConGuardarRelaciones()) {
					if(conTodasRelaciones) {
						classes=GuiaRemisionConstantesFunciones.getClassesRelationshipsOfGuiaRemision(new ArrayList<Classe>(),DeepLoadType.NONE);
					} else {
						classes=GuiaRemisionConstantesFunciones.getClassesRelationshipsFromStringsOfGuiaRemision(arrClasses,DeepLoadType.NONE);
					}
				}
	
				this.classesActual=new ArrayList<Classe>();
				this.classesActual.addAll(classes);
	
				this.recargarFormGuiaRemision(sTipo,sDominio,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipoGeneral,classes,conIrServidorAplicacion,esControlTabla);
										
				GuiaRemisionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.guiaremision,new Object(),generalEntityParameterGeneral,this.guiaremisionReturnGeneral);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);
  		}
    }
	
	/*
	public void setVariablesRelacionesObjetoBeanActualToFormularioGuiaRemision(GuiaRemisionBean guiaremisionBean) throws Exception { 
		try {
			
			for(Classe clas:classes) {
				if(clas.clas.equals(DetalleGuiaRemision.class)) {
					this.jInternalFrameDetalleFormGuiaRemision.detalleguiaremisionBeanSwingJInternalFrame.detalleguiaremisionLogic.setDetalleGuiaRemisions(guiaremision.getDetalleGuiaRemisions());
					this.jInternalFrameDetalleFormGuiaRemision.detalleguiaremisionBeanSwingJInternalFrame.inicializarActualizarBindingTablaDetalleGuiaRemision(false);
					break;
				}
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesRelacionesObjetoReturnGeneralToBeanGuiaRemision(ArrayList<Classe> classes,GuiaRemisionReturnGeneral guiaremisionReturnGeneral,GuiaRemisionBean guiaremisionBean,Boolean conDefault) throws Exception {
		
			this.guiaremisionBean.setDetalleGuiaRemisions(guiaremisionReturnGeneral.getGuiaRemision().getDetalleGuiaRemisions());
	}
	*/
	
	public void setVariablesFormularioRelacionesToObjetoActualGuiaRemision(GuiaRemision guiaremision,ArrayList<Classe> classes) throws Exception {
		
			for(Classe clas:classes) {
				if(clas.clas.equals(DetalleGuiaRemision.class)) {
					guiaremision.setDetalleGuiaRemisions(this.jInternalFrameDetalleFormGuiaRemision.detalleguiaremisionBeanSwingJInternalFrame.detalleguiaremisionLogic.getDetalleGuiaRemisions());
					break;
				}
			}
	}
	
	public Boolean permiteManejarEventosControl() {
		Boolean permite=true;				
		
		if(this.estaModoNuevo || this.estaModoSeleccionar || this.estaModoEliminarGuardarCambios) {
			permite=false;
			
		} 
		
		//NO DEBE MEZCLARSE CONCEPTOS
		/*	
		if(!paraTabla && !this.permiteMantenimiento(this.guiaremision)) {
			System.out.println("ERROR:EL OBJETO ACTUAL NO PUEDE SER FILA TOTALES");
				
			//JOptionPane.showMessageDialog(this,"EL OBJETO ACTUAL NO PUEDE SER FILA TOTALES","EVENTO",JOptionPane.ERROR_MESSAGE);			
		}
		*/
		
		return permite;
	}
	
	public void inicializarFormDetalle() throws Exception {
		
		this.jInternalFrameDetalleFormGuiaRemision = new GuiaRemisionDetalleFormJInternalFrame(jDesktopPane,this.guiaremisionSessionBean.getConGuardarRelaciones(),this.guiaremisionSessionBean.getEsGuardarRelacionado(),this.cargarRelaciones,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo);
		
		this.jDesktopPane.add(this.jInternalFrameDetalleFormGuiaRemision);
		this.jInternalFrameDetalleFormGuiaRemision.setVisible(false);
		this.jInternalFrameDetalleFormGuiaRemision.setSelected(false);						
		
		this.jInternalFrameDetalleFormGuiaRemision.setJInternalFrameParent(this);
		
		this.jInternalFrameDetalleFormGuiaRemision.guiaremisionLogic=this.guiaremisionLogic;
		
		this.cargarCombosFrameForeignKeyGuiaRemision("Formulario");
		
		this.inicializarActualizarBindingBotonesPermisosManualFormDetalleGuiaRemision();
		this.inicializarActualizarBindingtiposArchivosReportesAccionesManualFormDetalleGuiaRemision();
		
		this.initActionsFormDetalle();		
		
		this.initActionsCombosTodosForeignKeyGuiaRemision("Formulario");
		
		//TALVEZ conSetVariablesGlobales COMO if() 
		this.setVariablesGlobalesCombosForeignKeyGuiaRemision();
		
		this.cargarMenuRelaciones();
		
	}
	
	public void initActionsFormDetalle() {	
		
		this.jInternalFrameDetalleFormGuiaRemision.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"jButtonCancelarGuiaRemision"));
		
		this.jInternalFrameDetalleFormGuiaRemision.jButtonModificarGuiaRemision.addActionListener(new ButtonActionListener(this,"ModificarGuiaRemision"));

		
		this.jInternalFrameDetalleFormGuiaRemision.jButtonModificarToolBarGuiaRemision.addActionListener(new ButtonActionListener(this,"ModificarToolBarGuiaRemision"));
					
		this.jInternalFrameDetalleFormGuiaRemision.jMenuItemModificarGuiaRemision.addActionListener(new ButtonActionListener(this,"MenuItemModificarGuiaRemision"));		
		
		
		
		this.jInternalFrameDetalleFormGuiaRemision.jButtonActualizarGuiaRemision.addActionListener (new ButtonActionListener(this,"ActualizarGuiaRemision"));
		
		
		this.jInternalFrameDetalleFormGuiaRemision.jButtonActualizarToolBarGuiaRemision.addActionListener(new ButtonActionListener(this,"ActualizarToolBarGuiaRemision"));
						
		this.jInternalFrameDetalleFormGuiaRemision.jMenuItemActualizarGuiaRemision.addActionListener (new ButtonActionListener(this,"MenuItemActualizarGuiaRemision"));		
		
		
		
		this.jInternalFrameDetalleFormGuiaRemision.jButtonEliminarGuiaRemision.addActionListener (new ButtonActionListener(this,"EliminarGuiaRemision"));
		
		
		this.jInternalFrameDetalleFormGuiaRemision.jButtonEliminarToolBarGuiaRemision.addActionListener (new ButtonActionListener(this,"EliminarToolBarGuiaRemision"));
								
		this.jInternalFrameDetalleFormGuiaRemision.jMenuItemEliminarGuiaRemision.addActionListener (new ButtonActionListener(this,"MenuItemEliminarGuiaRemision"));		
		
		
		
		this.jInternalFrameDetalleFormGuiaRemision.jButtonCancelarGuiaRemision.addActionListener (new ButtonActionListener(this,"CancelarGuiaRemision"));
		
		
		this.jInternalFrameDetalleFormGuiaRemision.jButtonCancelarToolBarGuiaRemision.addActionListener (new ButtonActionListener(this,"CancelarToolBarGuiaRemision"));
					
		this.jInternalFrameDetalleFormGuiaRemision.jMenuItemCancelarGuiaRemision.addActionListener (new ButtonActionListener(this,"MenuItemCancelarGuiaRemision"));		
		
		
		
		
		
		this.jInternalFrameDetalleFormGuiaRemision.jMenuItemDetalleCerrarGuiaRemision.addActionListener (new ButtonActionListener(this,"MenuItemDetalleCerrarGuiaRemision"));		
		
		
		
		this.jInternalFrameDetalleFormGuiaRemision.jButtonGuardarCambiosToolBarGuiaRemision.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarGuiaRemision"));
		
		
		
		this.jInternalFrameDetalleFormGuiaRemision.jButtonGuardarCambiosToolBarGuiaRemision.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarGuiaRemision"));
		
		
		
		this.jInternalFrameDetalleFormGuiaRemision.jComboBoxTiposAccionesFormularioGuiaRemision.addActionListener (new ButtonActionListener(this,"TiposAccionesFormularioGuiaRemision"));
		
		
				
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGuiaRemision.jButtonidGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"idGuiaRemisionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormGuiaRemision.jButtonid_empresaGuiaRemisionUpdate.addActionListener(new ButtonActionListener(this,"id_empresaGuiaRemisionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGuiaRemision.jButtonid_empresaGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"id_empresaGuiaRemisionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormGuiaRemision.jButtonid_sucursalGuiaRemisionUpdate.addActionListener(new ButtonActionListener(this,"id_sucursalGuiaRemisionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGuiaRemision.jButtonid_sucursalGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"id_sucursalGuiaRemisionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormGuiaRemision.jButtonid_ejercicioGuiaRemisionUpdate.addActionListener(new ButtonActionListener(this,"id_ejercicioGuiaRemisionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGuiaRemision.jButtonid_ejercicioGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"id_ejercicioGuiaRemisionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormGuiaRemision.jButtonid_periodoGuiaRemisionUpdate.addActionListener(new ButtonActionListener(this,"id_periodoGuiaRemisionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGuiaRemision.jButtonid_periodoGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"id_periodoGuiaRemisionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormGuiaRemision.jButtonid_usuarioGuiaRemisionUpdate.addActionListener(new ButtonActionListener(this,"id_usuarioGuiaRemisionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGuiaRemision.jButtonid_usuarioGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"id_usuarioGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGuiaRemision.jButtonsecuencialGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"secuencialGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGuiaRemision.jButtonfecha_emisionGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"fecha_emisionGuiaRemisionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormGuiaRemision.jButtonid_formatoGuiaRemisionUpdate.addActionListener(new ButtonActionListener(this,"id_formatoGuiaRemisionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGuiaRemision.jButtonid_formatoGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"id_formatoGuiaRemisionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormGuiaRemision.jButtonid_tipo_precioGuiaRemisionUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_precioGuiaRemisionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGuiaRemision.jButtonid_tipo_precioGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_precioGuiaRemisionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormGuiaRemision.jButtonid_monedaGuiaRemisionUpdate.addActionListener(new ButtonActionListener(this,"id_monedaGuiaRemisionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGuiaRemision.jButtonid_monedaGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"id_monedaGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGuiaRemision.jButtonnumero_camionGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"numero_camionGuiaRemisionBusqueda"));
		//jButtonid_clienteGuiaRemision.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_clienteGuiaRemisionActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormGuiaRemision.jButtonid_clienteGuiaRemision.addActionListener(new ButtonActionListener(this,"id_clienteGuiaRemision"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormGuiaRemision.jButtonid_clienteGuiaRemisionUpdate.addActionListener(new ButtonActionListener(this,"id_clienteGuiaRemisionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGuiaRemision.jButtonid_clienteGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"id_clienteGuiaRemisionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormGuiaRemision.jButtonid_vendedorGuiaRemisionUpdate.addActionListener(new ButtonActionListener(this,"id_vendedorGuiaRemisionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGuiaRemision.jButtonid_vendedorGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"id_vendedorGuiaRemisionBusqueda"));
		//jButtonid_facturaGuiaRemision.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_facturaGuiaRemisionActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormGuiaRemision.jButtonid_facturaGuiaRemision.addActionListener(new ButtonActionListener(this,"id_facturaGuiaRemision"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormGuiaRemision.jButtonid_facturaGuiaRemisionUpdate.addActionListener(new ButtonActionListener(this,"id_facturaGuiaRemisionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGuiaRemision.jButtonid_facturaGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"id_facturaGuiaRemisionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormGuiaRemision.jButtonid_transportistaGuiaRemisionUpdate.addActionListener(new ButtonActionListener(this,"id_transportistaGuiaRemisionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGuiaRemision.jButtonid_transportistaGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"id_transportistaGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGuiaRemision.jButtonidentificacionGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"identificacionGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGuiaRemision.jButtonfecha_origenGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"fecha_origenGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGuiaRemision.jButtonfecha_destinoGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"fecha_destinoGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGuiaRemision.jButtontransporte_codigoGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"transporte_codigoGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGuiaRemision.jButtoncantidad_bultosGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"cantidad_bultosGuiaRemisionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormGuiaRemision.jButtonid_consultorGuiaRemisionUpdate.addActionListener(new ButtonActionListener(this,"id_consultorGuiaRemisionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGuiaRemision.jButtonid_consultorGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"id_consultorGuiaRemisionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormGuiaRemision.jButtonid_transporteGuiaRemisionUpdate.addActionListener(new ButtonActionListener(this,"id_transporteGuiaRemisionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGuiaRemision.jButtonid_transporteGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"id_transporteGuiaRemisionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormGuiaRemision.jButtonid_sub_clienteGuiaRemisionUpdate.addActionListener(new ButtonActionListener(this,"id_sub_clienteGuiaRemisionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGuiaRemision.jButtonid_sub_clienteGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"id_sub_clienteGuiaRemisionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormGuiaRemision.jButtonid_empleadoGuiaRemisionUpdate.addActionListener(new ButtonActionListener(this,"id_empleadoGuiaRemisionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGuiaRemision.jButtonid_empleadoGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"id_empleadoGuiaRemisionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormGuiaRemision.jButtonid_ciudad_origenGuiaRemisionUpdate.addActionListener(new ButtonActionListener(this,"id_ciudad_origenGuiaRemisionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGuiaRemision.jButtonid_ciudad_origenGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"id_ciudad_origenGuiaRemisionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormGuiaRemision.jButtonid_ciudad_destinoGuiaRemisionUpdate.addActionListener(new ButtonActionListener(this,"id_ciudad_destinoGuiaRemisionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGuiaRemision.jButtonid_ciudad_destinoGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"id_ciudad_destinoGuiaRemisionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormGuiaRemision.jButtonid_tipo_llamadaGuiaRemisionUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_llamadaGuiaRemisionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGuiaRemision.jButtonid_tipo_llamadaGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_llamadaGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGuiaRemision.jButtonhora_inicioGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"hora_inicioGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGuiaRemision.jButtonhora_finGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"hora_finGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGuiaRemision.jButtoncupoGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"cupoGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGuiaRemision.jButtonsaldoGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"saldoGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGuiaRemision.jButtondocumentoGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"documentoGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGuiaRemision.jButtondisponibleGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"disponibleGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGuiaRemision.jButtondescripcionGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"descripcionGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGuiaRemision.jButtontotal_ivaGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"total_ivaGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGuiaRemision.jButtontotal_sin_ivaGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"total_sin_ivaGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGuiaRemision.jButtondescuentoGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"descuentoGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGuiaRemision.jButtonfleteGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"fleteGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGuiaRemision.jButtonotroGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"otroGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGuiaRemision.jButtonfinanciamientoGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"financiamientoGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGuiaRemision.jButtonivaGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"ivaGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGuiaRemision.jButtontotalGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"totalGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGuiaRemision.jButtonmonto_retencionGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"monto_retencionGuiaRemisionBusqueda"));
		//jButtonid_tipo_cambioGuiaRemision.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_tipo_cambioGuiaRemisionActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormGuiaRemision.jButtonid_tipo_cambioGuiaRemision.addActionListener(new ButtonActionListener(this,"id_tipo_cambioGuiaRemision"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormGuiaRemision.jButtonid_tipo_cambioGuiaRemisionUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_cambioGuiaRemisionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGuiaRemision.jButtonid_tipo_cambioGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_cambioGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGuiaRemision.jButtonfechaGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"fechaGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGuiaRemision.jButtonruc_clienteGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"ruc_clienteGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGuiaRemision.jButtonnombre_clienteGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"nombre_clienteGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGuiaRemision.jButtontelefono_clienteGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"telefono_clienteGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGuiaRemision.jButtondireccion_clienteGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"direccion_clienteGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGuiaRemision.jButtonnumero_pre_impresoGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"numero_pre_impresoGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGuiaRemision.jButtonpeso_brutoGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"peso_brutoGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGuiaRemision.jButtonfecha_autorizacionGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"fecha_autorizacionGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGuiaRemision.jButtonfecha_vencimientoGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"fecha_vencimientoGuiaRemisionBusqueda"));
		
		
		;

		//TABBED PANE RELACIONES
		this.jInternalFrameDetalleFormGuiaRemision.jTabbedPaneRelacionesGuiaRemision.addChangeListener(new TabbedPaneChangeListener(this,"RelacionesGuiaRemision"));
		
		;		
		//TABBED PANE RELACIONES FIN(EXTRA TAB)	
	}
	
	public void initActions() {				
		this.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"CloseInternalFrameGuiaRemision"));
		
		if(this.jInternalFrameDetalleFormGuiaRemision!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormGuiaRemision.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"jButtonCancelarGuiaRemision"));
		}
		
		this.jTableDatosGuiaRemision.getSelectionModel().addListSelectionListener(new TableListSelectionListener(this,"TableDatosSeleccionarGuiaRemision"));
		
		this.jTableDatosGuiaRemision.addMouseListener(new TableMouseAdapter(this,"DatosSeleccionarGuiaRemision"));
		
		this.jButtonNuevoGuiaRemision.addActionListener(new ButtonActionListener(this,"NuevoGuiaRemision"));
		
		this.jButtonDuplicarGuiaRemision.addActionListener(new ButtonActionListener(this,"DuplicarGuiaRemision"));
		
		this.jButtonCopiarGuiaRemision.addActionListener(new ButtonActionListener(this,"CopiarGuiaRemision"));
		
		this.jButtonVerFormGuiaRemision.addActionListener(new ButtonActionListener(this,"VerFormGuiaRemision"));
		
		
		this.jButtonNuevoToolBarGuiaRemision.addActionListener(new ButtonActionListener(this,"NuevoToolBarGuiaRemision"));
			
		this.jButtonDuplicarToolBarGuiaRemision.addActionListener(new ButtonActionListener(this,"DuplicarToolBarGuiaRemision"));
			
		this.jMenuItemNuevoGuiaRemision.addActionListener (new ButtonActionListener(this,"MenuItemNuevoGuiaRemision"));
			
		this.jMenuItemDuplicarGuiaRemision.addActionListener (new ButtonActionListener(this,"MenuItemDuplicarGuiaRemision"));		
		
		
		this.jButtonNuevoRelacionesGuiaRemision.addActionListener (new ButtonActionListener(this,"NuevoRelacionesGuiaRemision"));
		
		
		this.jButtonNuevoRelacionesToolBarGuiaRemision.addActionListener(new ButtonActionListener(this,"NuevoRelacionesToolBarGuiaRemision"));
			
		this.jMenuItemNuevoRelacionesGuiaRemision.addActionListener(new ButtonActionListener(this,"MenuItemNuevoRelacionesGuiaRemision"));		
		
		
		if(this.jInternalFrameDetalleFormGuiaRemision!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormGuiaRemision.jButtonModificarGuiaRemision.addActionListener(new ButtonActionListener(this,"ModificarGuiaRemision"));
		}
		
		
		if(this.jInternalFrameDetalleFormGuiaRemision!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormGuiaRemision.jButtonModificarToolBarGuiaRemision.addActionListener(new ButtonActionListener(this,"ModificarToolBarGuiaRemision"));
			
			this.jInternalFrameDetalleFormGuiaRemision.jMenuItemModificarGuiaRemision.addActionListener(new ButtonActionListener(this,"MenuItemModificarGuiaRemision"));		
		}
		
		
		if(this.jInternalFrameDetalleFormGuiaRemision!=null) { //if(this.conCargarFormDetalle) {			
			this.jInternalFrameDetalleFormGuiaRemision.jButtonActualizarGuiaRemision.addActionListener (new ButtonActionListener(this,"ActualizarGuiaRemision"));
		}
		
		
		if(this.jInternalFrameDetalleFormGuiaRemision!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormGuiaRemision.jButtonActualizarToolBarGuiaRemision.addActionListener(new ButtonActionListener(this,"ActualizarToolBarGuiaRemision"));
				
			this.jInternalFrameDetalleFormGuiaRemision.jMenuItemActualizarGuiaRemision.addActionListener (new ButtonActionListener(this,"MenuItemActualizarGuiaRemision"));		
		}
		
		
		if(this.jInternalFrameDetalleFormGuiaRemision!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormGuiaRemision.jButtonEliminarGuiaRemision.addActionListener (new ButtonActionListener(this,"EliminarGuiaRemision"));
		}
		
		
		if(this.jInternalFrameDetalleFormGuiaRemision!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormGuiaRemision.jButtonEliminarToolBarGuiaRemision.addActionListener (new ButtonActionListener(this,"EliminarToolBarGuiaRemision"));
						
			this.jInternalFrameDetalleFormGuiaRemision.jMenuItemEliminarGuiaRemision.addActionListener (new ButtonActionListener(this,"MenuItemEliminarGuiaRemision"));		
		}
		
		
		if(this.jInternalFrameDetalleFormGuiaRemision!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormGuiaRemision.jButtonCancelarGuiaRemision.addActionListener (new ButtonActionListener(this,"CancelarGuiaRemision"));
		}
		
		
		if(this.jInternalFrameDetalleFormGuiaRemision!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormGuiaRemision.jButtonCancelarToolBarGuiaRemision.addActionListener (new ButtonActionListener(this,"CancelarToolBarGuiaRemision"));
			
			this.jInternalFrameDetalleFormGuiaRemision.jMenuItemCancelarGuiaRemision.addActionListener (new ButtonActionListener(this,"MenuItemCancelarGuiaRemision"));		
		}
		
		this.jButtonMostrarOcultarTablaToolBarGuiaRemision.addActionListener (new ButtonActionListener(this,"MostrarOcultarToolBarGuiaRemision"));		
		
		
		this.jButtonCerrarGuiaRemision.addActionListener (new ButtonActionListener(this,"CerrarGuiaRemision"));
		
		
		this.jButtonCerrarToolBarGuiaRemision.addActionListener (new ButtonActionListener(this,"CerrarToolBarGuiaRemision"));
			
		this.jMenuItemCerrarGuiaRemision.addActionListener (new ButtonActionListener(this,"MenuItemCerrarGuiaRemision"));
			
		if(this.jInternalFrameDetalleFormGuiaRemision!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormGuiaRemision.jMenuItemDetalleCerrarGuiaRemision.addActionListener (new ButtonActionListener(this,"MenuItemDetalleCerrarGuiaRemision"));		
		}
		
		
		if(this.jInternalFrameDetalleFormGuiaRemision!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormGuiaRemision.jButtonGuardarCambiosGuiaRemision.addActionListener (new ButtonActionListener(this,"GuardarCambiosGuiaRemision"));
		}
		
		
		if(this.jInternalFrameDetalleFormGuiaRemision!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormGuiaRemision.jButtonGuardarCambiosToolBarGuiaRemision.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarGuiaRemision"));
		}
		
		this.jButtonCopiarToolBarGuiaRemision.addActionListener (new ButtonActionListener(this,"CopiarToolBarGuiaRemision"));
			
		this.jButtonVerFormToolBarGuiaRemision.addActionListener (new ButtonActionListener(this,"VerFormToolBarGuiaRemision"));
		
		this.jMenuItemGuardarCambiosGuiaRemision.addActionListener (new ButtonActionListener(this,"MenuItemGuardarCambiosGuiaRemision"));
			
		this.jMenuItemCopiarGuiaRemision.addActionListener (new ButtonActionListener(this,"MenuItemCopiarGuiaRemision"));		
		
		this.jMenuItemVerFormGuiaRemision.addActionListener (new ButtonActionListener(this,"MenuItemVerFormGuiaRemision"));		
		
		
		this.jButtonGuardarCambiosTablaGuiaRemision.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaGuiaRemision"));
		
		
		this.jButtonGuardarCambiosTablaToolBarGuiaRemision.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaToolBarGuiaRemision"));
			
		this.jMenuItemGuardarCambiosTablaGuiaRemision.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaGuiaRemision"));		
		
		
		
		this.jButtonRecargarInformacionGuiaRemision.addActionListener (new ButtonActionListener(this,"RecargarInformacionGuiaRemision"));
					
		this.jButtonRecargarInformacionToolBarGuiaRemision.addActionListener (new ButtonActionListener(this,"RecargarInformacionToolBarGuiaRemision"));
		
		this.jMenuItemRecargarInformacionGuiaRemision.addActionListener (new ButtonActionListener(this,"MenuItemRecargarInformacionGuiaRemision"));		
		
		
		
		this.jButtonAnterioresGuiaRemision.addActionListener (new ButtonActionListener(this,"AnterioresGuiaRemision"));
		
		
		this.jButtonAnterioresToolBarGuiaRemision.addActionListener (new ButtonActionListener(this,"AnterioresToolBarGuiaRemision"));
		
		this.jMenuItemAnterioresGuiaRemision.addActionListener (new ButtonActionListener(this,"MenuItemAnterioresGuiaRemision"));		
		
		
		this.jButtonSiguientesGuiaRemision.addActionListener (new ButtonActionListener(this,"SiguientesGuiaRemision"));
		
		
		this.jButtonSiguientesToolBarGuiaRemision.addActionListener (new ButtonActionListener(this,"SiguientesToolBarGuiaRemision"));
			
		this.jMenuItemSiguientesGuiaRemision.addActionListener (new ButtonActionListener(this,"MenuItemSiguientesGuiaRemision"));
			
		this.jMenuItemAbrirOrderByGuiaRemision.addActionListener (new ButtonActionListener(this,"MenuItemAbrirOrderByGuiaRemision"));
			
		this.jMenuItemMostrarOcultarGuiaRemision.addActionListener (new ButtonActionListener(this,"MenuItemMostrarOcultarGuiaRemision"));
			
		this.jMenuItemDetalleAbrirOrderByGuiaRemision.addActionListener (new ButtonActionListener(this,"MenuItemDetalleAbrirOrderByGuiaRemision"));
			
		this.jMenuItemDetalleMostarOcultarGuiaRemision.addActionListener (new ButtonActionListener(this,"MenuItemDetalleMostrarOcultarGuiaRemision"));		
		
		
		this.jButtonNuevoGuardarCambiosGuiaRemision.addActionListener (new ButtonActionListener(this,"NuevoGuardarCambiosGuiaRemision"));
		
		
		this.jButtonNuevoGuardarCambiosToolBarGuiaRemision.addActionListener (new ButtonActionListener(this,"NuevoGuardarCambiosToolBarGuiaRemision"));
			
		this.jMenuItemNuevoGuardarCambiosGuiaRemision.addActionListener (new ButtonActionListener(this,"MenuItemNuevoGuardarCambiosGuiaRemision"));		
		
		
		
		//SELECCIONAR TODOS
		
		this.jCheckBoxSeleccionarTodosGuiaRemision.addItemListener(new CheckBoxItemListener(this,"SeleccionarTodosGuiaRemision"));

		this.jCheckBoxSeleccionadosGuiaRemision.addItemListener(new CheckBoxItemListener(this,"SeleccionadosGuiaRemision"));
		
		if(this.jInternalFrameDetalleFormGuiaRemision!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormGuiaRemision.jComboBoxTiposAccionesFormularioGuiaRemision.addActionListener (new ButtonActionListener(this,"TiposAccionesFormularioGuiaRemision"));
		}
		
		
		this.jComboBoxTiposRelacionesGuiaRemision.addActionListener (new ButtonActionListener(this,"TiposRelacionesGuiaRemision"));
			
		this.jComboBoxTiposAccionesGuiaRemision.addActionListener (new ButtonActionListener(this,"TiposAccionesGuiaRemision"));
					
		this.jComboBoxTiposSeleccionarGuiaRemision.addActionListener (new ButtonActionListener(this,"TiposSeleccionarGuiaRemision"));
			
		this.jTextFieldValorCampoGeneralGuiaRemision.addActionListener (new ButtonActionListener(this,"ValorCampoGeneralGuiaRemision"));		
		
		
		if(this.jInternalFrameDetalleFormGuiaRemision!=null) { //if(this.conCargarFormDetalle) {
		
		
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGuiaRemision.jButtonidGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"idGuiaRemisionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormGuiaRemision.jButtonid_empresaGuiaRemisionUpdate.addActionListener(new ButtonActionListener(this,"id_empresaGuiaRemisionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGuiaRemision.jButtonid_empresaGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"id_empresaGuiaRemisionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormGuiaRemision.jButtonid_sucursalGuiaRemisionUpdate.addActionListener(new ButtonActionListener(this,"id_sucursalGuiaRemisionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGuiaRemision.jButtonid_sucursalGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"id_sucursalGuiaRemisionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormGuiaRemision.jButtonid_ejercicioGuiaRemisionUpdate.addActionListener(new ButtonActionListener(this,"id_ejercicioGuiaRemisionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGuiaRemision.jButtonid_ejercicioGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"id_ejercicioGuiaRemisionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormGuiaRemision.jButtonid_periodoGuiaRemisionUpdate.addActionListener(new ButtonActionListener(this,"id_periodoGuiaRemisionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGuiaRemision.jButtonid_periodoGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"id_periodoGuiaRemisionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormGuiaRemision.jButtonid_usuarioGuiaRemisionUpdate.addActionListener(new ButtonActionListener(this,"id_usuarioGuiaRemisionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGuiaRemision.jButtonid_usuarioGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"id_usuarioGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGuiaRemision.jButtonsecuencialGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"secuencialGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGuiaRemision.jButtonfecha_emisionGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"fecha_emisionGuiaRemisionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormGuiaRemision.jButtonid_formatoGuiaRemisionUpdate.addActionListener(new ButtonActionListener(this,"id_formatoGuiaRemisionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGuiaRemision.jButtonid_formatoGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"id_formatoGuiaRemisionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormGuiaRemision.jButtonid_tipo_precioGuiaRemisionUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_precioGuiaRemisionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGuiaRemision.jButtonid_tipo_precioGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_precioGuiaRemisionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormGuiaRemision.jButtonid_monedaGuiaRemisionUpdate.addActionListener(new ButtonActionListener(this,"id_monedaGuiaRemisionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGuiaRemision.jButtonid_monedaGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"id_monedaGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGuiaRemision.jButtonnumero_camionGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"numero_camionGuiaRemisionBusqueda"));
		//jButtonid_clienteGuiaRemision.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_clienteGuiaRemisionActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormGuiaRemision.jButtonid_clienteGuiaRemision.addActionListener(new ButtonActionListener(this,"id_clienteGuiaRemision"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormGuiaRemision.jButtonid_clienteGuiaRemisionUpdate.addActionListener(new ButtonActionListener(this,"id_clienteGuiaRemisionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGuiaRemision.jButtonid_clienteGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"id_clienteGuiaRemisionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormGuiaRemision.jButtonid_vendedorGuiaRemisionUpdate.addActionListener(new ButtonActionListener(this,"id_vendedorGuiaRemisionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGuiaRemision.jButtonid_vendedorGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"id_vendedorGuiaRemisionBusqueda"));
		//jButtonid_facturaGuiaRemision.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_facturaGuiaRemisionActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormGuiaRemision.jButtonid_facturaGuiaRemision.addActionListener(new ButtonActionListener(this,"id_facturaGuiaRemision"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormGuiaRemision.jButtonid_facturaGuiaRemisionUpdate.addActionListener(new ButtonActionListener(this,"id_facturaGuiaRemisionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGuiaRemision.jButtonid_facturaGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"id_facturaGuiaRemisionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormGuiaRemision.jButtonid_transportistaGuiaRemisionUpdate.addActionListener(new ButtonActionListener(this,"id_transportistaGuiaRemisionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGuiaRemision.jButtonid_transportistaGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"id_transportistaGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGuiaRemision.jButtonidentificacionGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"identificacionGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGuiaRemision.jButtonfecha_origenGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"fecha_origenGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGuiaRemision.jButtonfecha_destinoGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"fecha_destinoGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGuiaRemision.jButtontransporte_codigoGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"transporte_codigoGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGuiaRemision.jButtoncantidad_bultosGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"cantidad_bultosGuiaRemisionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormGuiaRemision.jButtonid_consultorGuiaRemisionUpdate.addActionListener(new ButtonActionListener(this,"id_consultorGuiaRemisionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGuiaRemision.jButtonid_consultorGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"id_consultorGuiaRemisionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormGuiaRemision.jButtonid_transporteGuiaRemisionUpdate.addActionListener(new ButtonActionListener(this,"id_transporteGuiaRemisionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGuiaRemision.jButtonid_transporteGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"id_transporteGuiaRemisionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormGuiaRemision.jButtonid_sub_clienteGuiaRemisionUpdate.addActionListener(new ButtonActionListener(this,"id_sub_clienteGuiaRemisionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGuiaRemision.jButtonid_sub_clienteGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"id_sub_clienteGuiaRemisionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormGuiaRemision.jButtonid_empleadoGuiaRemisionUpdate.addActionListener(new ButtonActionListener(this,"id_empleadoGuiaRemisionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGuiaRemision.jButtonid_empleadoGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"id_empleadoGuiaRemisionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormGuiaRemision.jButtonid_ciudad_origenGuiaRemisionUpdate.addActionListener(new ButtonActionListener(this,"id_ciudad_origenGuiaRemisionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGuiaRemision.jButtonid_ciudad_origenGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"id_ciudad_origenGuiaRemisionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormGuiaRemision.jButtonid_ciudad_destinoGuiaRemisionUpdate.addActionListener(new ButtonActionListener(this,"id_ciudad_destinoGuiaRemisionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGuiaRemision.jButtonid_ciudad_destinoGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"id_ciudad_destinoGuiaRemisionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormGuiaRemision.jButtonid_tipo_llamadaGuiaRemisionUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_llamadaGuiaRemisionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGuiaRemision.jButtonid_tipo_llamadaGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_llamadaGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGuiaRemision.jButtonhora_inicioGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"hora_inicioGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGuiaRemision.jButtonhora_finGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"hora_finGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGuiaRemision.jButtoncupoGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"cupoGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGuiaRemision.jButtonsaldoGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"saldoGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGuiaRemision.jButtondocumentoGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"documentoGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGuiaRemision.jButtondisponibleGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"disponibleGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGuiaRemision.jButtondescripcionGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"descripcionGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGuiaRemision.jButtontotal_ivaGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"total_ivaGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGuiaRemision.jButtontotal_sin_ivaGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"total_sin_ivaGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGuiaRemision.jButtondescuentoGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"descuentoGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGuiaRemision.jButtonfleteGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"fleteGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGuiaRemision.jButtonotroGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"otroGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGuiaRemision.jButtonfinanciamientoGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"financiamientoGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGuiaRemision.jButtonivaGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"ivaGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGuiaRemision.jButtontotalGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"totalGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGuiaRemision.jButtonmonto_retencionGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"monto_retencionGuiaRemisionBusqueda"));
		//jButtonid_tipo_cambioGuiaRemision.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_tipo_cambioGuiaRemisionActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormGuiaRemision.jButtonid_tipo_cambioGuiaRemision.addActionListener(new ButtonActionListener(this,"id_tipo_cambioGuiaRemision"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormGuiaRemision.jButtonid_tipo_cambioGuiaRemisionUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_cambioGuiaRemisionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGuiaRemision.jButtonid_tipo_cambioGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_cambioGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGuiaRemision.jButtonfechaGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"fechaGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGuiaRemision.jButtonruc_clienteGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"ruc_clienteGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGuiaRemision.jButtonnombre_clienteGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"nombre_clienteGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGuiaRemision.jButtontelefono_clienteGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"telefono_clienteGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGuiaRemision.jButtondireccion_clienteGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"direccion_clienteGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGuiaRemision.jButtonnumero_pre_impresoGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"numero_pre_impresoGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGuiaRemision.jButtonpeso_brutoGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"peso_brutoGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGuiaRemision.jButtonfecha_autorizacionGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"fecha_autorizacionGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGuiaRemision.jButtonfecha_vencimientoGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"fecha_vencimientoGuiaRemisionBusqueda"));
		}
		
		if(!this.conCargarMinimo) {
		//BYDAN_BUSQUEDAS
		
		
			this.jButtonFK_IdCiudadDestinoGuiaRemision.addActionListener(new ButtonActionListener(this,"FK_IdCiudadDestinoGuiaRemision"));

			this.jButtonFK_IdCiudadOrigenGuiaRemision.addActionListener(new ButtonActionListener(this,"FK_IdCiudadOrigenGuiaRemision"));

			this.jButtonFK_IdClienteGuiaRemision.addActionListener(new ButtonActionListener(this,"FK_IdClienteGuiaRemision"));

			this.jButtonBuscarFK_IdClienteid_clienteGuiaRemision.addActionListener(new ButtonActionListener(this,"id_clienteGuiaRemision"));

			this.jButtonFK_IdConsultorGuiaRemision.addActionListener(new ButtonActionListener(this,"FK_IdConsultorGuiaRemision"));

			this.jButtonFK_IdEmpleadoGuiaRemision.addActionListener(new ButtonActionListener(this,"FK_IdEmpleadoGuiaRemision"));

			this.jButtonFK_IdFacturaGuiaRemision.addActionListener(new ButtonActionListener(this,"FK_IdFacturaGuiaRemision"));

			this.jButtonBuscarFK_IdFacturaid_facturaGuiaRemision.addActionListener(new ButtonActionListener(this,"id_facturaGuiaRemision"));

			this.jButtonFK_IdFormatoGuiaRemision.addActionListener(new ButtonActionListener(this,"FK_IdFormatoGuiaRemision"));

			this.jButtonFK_IdSubClienteGuiaRemision.addActionListener(new ButtonActionListener(this,"FK_IdSubClienteGuiaRemision"));

			this.jButtonFK_IdTipoCambioGuiaRemision.addActionListener(new ButtonActionListener(this,"FK_IdTipoCambioGuiaRemision"));

			this.jButtonBuscarFK_IdTipoCambioid_tipo_cambioGuiaRemision.addActionListener(new ButtonActionListener(this,"id_tipo_cambioGuiaRemision"));

			this.jButtonFK_IdTipoLlamadaGuiaRemision.addActionListener(new ButtonActionListener(this,"FK_IdTipoLlamadaGuiaRemision"));

			this.jButtonFK_IdTipoPrecioGuiaRemision.addActionListener(new ButtonActionListener(this,"FK_IdTipoPrecioGuiaRemision"));

			this.jButtonFK_IdTransporteGuiaRemision.addActionListener(new ButtonActionListener(this,"FK_IdTransporteGuiaRemision"));

			this.jButtonFK_IdTransportistaGuiaRemision.addActionListener(new ButtonActionListener(this,"FK_IdTransportistaGuiaRemision"));

			this.jButtonFK_IdVendedorGuiaRemision.addActionListener(new ButtonActionListener(this,"FK_IdVendedorGuiaRemision"));
		
		
		
			//REPORTE DINAMICO
			
			if(this.jInternalFrameReporteDinamicoGuiaRemision!=null) {
				this.jInternalFrameReporteDinamicoGuiaRemision.getjButtonCerrarReporteDinamico().addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoGuiaRemision"));
				this.jInternalFrameReporteDinamicoGuiaRemision.getjButtonGenerarReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoGuiaRemision"));
				this.jInternalFrameReporteDinamicoGuiaRemision.getjButtonGenerarExcelReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoGuiaRemision"));
			}
			
			//this.jButtonCerrarReporteDinamicoGuiaRemision.addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoGuiaRemision"));				
			//this.jButtonGenerarReporteDinamicoGuiaRemision.addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoGuiaRemision"));
			//this.jButtonGenerarExcelReporteDinamicoGuiaRemision.addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoGuiaRemision"));
				
				
			//IMPORTACION			
			if(this.jInternalFrameImportacionGuiaRemision!=null) {
				this.jInternalFrameImportacionGuiaRemision.getjButtonCerrarImportacion().addActionListener (new ButtonActionListener(this,"CerrarImportacionGuiaRemision"));
				this.jInternalFrameImportacionGuiaRemision.getjButtonGenerarImportacion().addActionListener (new ButtonActionListener(this,"GenerarImportacionGuiaRemision"));
				this.jInternalFrameImportacionGuiaRemision.getjButtonAbrirImportacion().addActionListener (new ButtonActionListener(this,"AbrirImportacionGuiaRemision"));
			}
			
			//ORDER BY
			this.jButtonAbrirOrderByGuiaRemision.addActionListener (new ButtonActionListener(this,"AbrirOrderByGuiaRemision"));
			
			this.jButtonAbrirOrderByToolBarGuiaRemision.addActionListener (new ButtonActionListener(this,"AbrirOrderByToolBarGuiaRemision"));			
			
			if(this.jInternalFrameOrderByGuiaRemision!=null) {
				this.jInternalFrameOrderByGuiaRemision.getjButtonCerrarOrderBy().addActionListener (new ButtonActionListener(this,"CerrarOrderByGuiaRemision"));				
			}
			
			
		}
		
		
		
		if(!this.conCargarMinimo) {
			if(this.jInternalFrameDetalleFormGuiaRemision!=null) { //if(this.conCargarFormDetalle) {
			;
			}
		}
		
		
		//TABBED PANE RELACIONES
		if(this.jInternalFrameDetalleFormGuiaRemision!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormGuiaRemision.jTabbedPaneRelacionesGuiaRemision.addChangeListener(new TabbedPaneChangeListener(this,"RelacionesGuiaRemision"));
		
		;
		}
		//TABBED PANE RELACIONES FIN(EXTRA TAB)		
	}
	
	/*
	public void initActions() {
		String sMapKey = "";
		InputMap inputMap =null;
		
		this.addInternalFrameListener(new javax.swing.event.InternalFrameAdapter() {
            public void internalFrameClosing(InternalFrameEvent event) {          	
            	try {
            		closingInternalFrameGuiaRemision();
				} catch (Exception e) {
					e.printStackTrace();
				}
            }
        });
		
		this.jInternalFrameDetalleFormGuiaRemision.addInternalFrameListener(new javax.swing.event.InternalFrameAdapter() {
	        public void internalFrameClosing(InternalFrameEvent event) {
	            JInternalFrameBase jInternalFrameDetalleFormGuiaRemision = (JInternalFrameBase)event.getSource();
	            	
	            GuiaRemisionBeanSwingJInternalFrame jInternalFrameParent=(GuiaRemisionBeanSwingJInternalFrame)jInternalFrameDetalleFormGuiaRemision.getjInternalFrameParent();
	                
	            try {
					jInternalFrameParent.jButtonCancelarGuiaRemisionActionPerformed(null);
					
					//jInternalFrameParent.dispose();
					//jInternalFrameParent=null;
					
				} catch (Exception e) {
					e.printStackTrace();
				}
	        }
	    });
			
		this.jTableDatosGuiaRemision.getSelectionModel().addListSelectionListener (
	                new ListSelectionListener() {
	                    public void valueChanged(ListSelectionEvent e) {
							//BYDAN_DESHABILITADO
	                    	//try {jTableDatosGuiaRemisionListSelectionListener(e);}catch(Exception e1){e1.printStackTrace();}
	                    }
	                }
	     );
		
		this.jTableDatosGuiaRemision.addMouseListener(new MouseAdapter() {
			   public void mouseClicked(MouseEvent evt) {
				      if (evt.getClickCount() == 2) {
				    	  jButtonIdActionPerformed(null,jTableDatosGuiaRemision.getSelectedRow(),false,false);
				      }
				   }
		});
		
		this.jButtonNuevoGuiaRemision.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuiaRemisionActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoToolBarGuiaRemision.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuiaRemisionActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoGuiaRemision.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuiaRemisionActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "NuevoGuiaRemision";
		inputMap = this.jButtonNuevoGuiaRemision.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_N , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonNuevoGuiaRemision.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonNuevoGuiaRemisionActionPerformed(evt,false);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonNuevoRelacionesGuiaRemision.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuiaRemisionActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoRelacionesToolBarGuiaRemision.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuiaRemisionActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoRelacionesGuiaRemision.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuiaRemisionActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "NuevoRelacionesGuiaRemision";
		inputMap = this.jButtonNuevoRelacionesGuiaRemision.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_R , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonNuevoRelacionesGuiaRemision.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonNuevoGuiaRemisionActionPerformed(evt,true);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonModificarGuiaRemision.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarGuiaRemisionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonModificarToolBarGuiaRemision.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarGuiaRemisionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemModificarGuiaRemision.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarGuiaRemisionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "ModificarGuiaRemision";
		inputMap = this.jButtonModificarGuiaRemision.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_M , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonModificarGuiaRemision.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonModificarGuiaRemisionActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonActualizarGuiaRemision.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarGuiaRemisionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonActualizarToolBarGuiaRemision.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarGuiaRemisionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemActualizarGuiaRemision.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarGuiaRemisionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "ActualizarGuiaRemision";
		inputMap = this.jButtonActualizarGuiaRemision.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_G , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonActualizarGuiaRemision.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonActualizarGuiaRemisionActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonEliminarGuiaRemision.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarGuiaRemisionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonEliminarToolBarGuiaRemision.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarGuiaRemisionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
				
		this.jMenuItemEliminarGuiaRemision.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarGuiaRemisionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "EliminarGuiaRemision";
		inputMap = this.jButtonEliminarGuiaRemision.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_E , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonEliminarGuiaRemision.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonEliminarGuiaRemisionActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonCancelarGuiaRemision.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarGuiaRemisionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonCancelarToolBarGuiaRemision.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarGuiaRemisionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemCancelarGuiaRemision.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarGuiaRemisionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "CancelarGuiaRemision";
		inputMap = this.jButtonCancelarGuiaRemision.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_Q , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonCancelarGuiaRemision.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonCancelarGuiaRemisionActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonCerrarGuiaRemision.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarGuiaRemisionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonCerrarToolBarGuiaRemision.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarGuiaRemisionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemCerrarGuiaRemision.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarGuiaRemisionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemDetalleCerrarGuiaRemision.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  //try {jButtonCerrarGuiaRemisionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
					try {jButtonCancelarGuiaRemisionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "CerrarGuiaRemision";
		inputMap = this.jButtonCerrarGuiaRemision.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_C , KeyEvent.ALT_MASK), sMapKey);
			
		this.jButtonCerrarGuiaRemision.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonCerrarGuiaRemisionActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jInternalFrameDetalleFormGuiaRemision.jButtonGuardarCambiosGuiaRemision.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosGuiaRemisionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosToolBarGuiaRemision.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosGuiaRemisionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemGuardarCambiosGuiaRemision.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosGuiaRemisionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosTablaGuiaRemision.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosGuiaRemisionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosTablaToolBarGuiaRemision.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosGuiaRemisionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemGuardarCambiosTablaGuiaRemision.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosGuiaRemisionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "GuardarCambiosGuiaRemision";
		inputMap = this.jInternalFrameDetalleFormGuiaRemision.jButtonGuardarCambiosGuiaRemision.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_G , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jInternalFrameDetalleFormGuiaRemision.jButtonGuardarCambiosGuiaRemision.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonGuardarCambiosGuiaRemisionActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonRecargarInformacionGuiaRemision.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionGuiaRemisionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonRecargarInformacionToolBarGuiaRemision.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionGuiaRemisionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemRecargarInformacionGuiaRemision.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionGuiaRemisionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		
		this.jButtonAnterioresGuiaRemision.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresGuiaRemisionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonAnterioresToolBarGuiaRemision.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresGuiaRemisionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemAnterioresGuiaRemision.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresGuiaRemisionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonSiguientesGuiaRemision.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesGuiaRemisionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonSiguientesToolBarGuiaRemision.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesGuiaRemisionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemSiguientesGuiaRemision.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesGuiaRemisionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoGuardarCambiosGuiaRemision.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosGuiaRemisionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoGuardarCambiosToolBarGuiaRemision.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosGuiaRemisionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoGuardarCambiosGuiaRemision.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosGuiaRemisionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		
		//SELECCIONAR TODOS
		this.jCheckBoxSeleccionarTodosGuiaRemision.addItemListener(new ItemListener() {		
			public void itemStateChanged(ItemEvent evt) {
				try {jCheckBoxSeleccionarTodosGuiaRemisionItemListener(evt);}catch(Exception e){e.printStackTrace();}
			}
		});

		this.jComboBoxTiposAccionesGuiaRemision.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jComboBoxTiposAccionesGuiaRemisionActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		this.jComboBoxTiposSeleccionarGuiaRemision.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jComboBoxTiposSeleccionarGuiaRemisionActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		this.jTextFieldValorCampoGeneralGuiaRemision.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jTextFieldValorCampoGeneralGuiaRemisionActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGuiaRemision.jButtonidGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"idGuiaRemisionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormGuiaRemision.jButtonid_empresaGuiaRemisionUpdate.addActionListener(new ButtonActionListener(this,"id_empresaGuiaRemisionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGuiaRemision.jButtonid_empresaGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"id_empresaGuiaRemisionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormGuiaRemision.jButtonid_sucursalGuiaRemisionUpdate.addActionListener(new ButtonActionListener(this,"id_sucursalGuiaRemisionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGuiaRemision.jButtonid_sucursalGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"id_sucursalGuiaRemisionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormGuiaRemision.jButtonid_ejercicioGuiaRemisionUpdate.addActionListener(new ButtonActionListener(this,"id_ejercicioGuiaRemisionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGuiaRemision.jButtonid_ejercicioGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"id_ejercicioGuiaRemisionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormGuiaRemision.jButtonid_periodoGuiaRemisionUpdate.addActionListener(new ButtonActionListener(this,"id_periodoGuiaRemisionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGuiaRemision.jButtonid_periodoGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"id_periodoGuiaRemisionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormGuiaRemision.jButtonid_usuarioGuiaRemisionUpdate.addActionListener(new ButtonActionListener(this,"id_usuarioGuiaRemisionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGuiaRemision.jButtonid_usuarioGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"id_usuarioGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGuiaRemision.jButtonsecuencialGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"secuencialGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGuiaRemision.jButtonfecha_emisionGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"fecha_emisionGuiaRemisionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormGuiaRemision.jButtonid_formatoGuiaRemisionUpdate.addActionListener(new ButtonActionListener(this,"id_formatoGuiaRemisionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGuiaRemision.jButtonid_formatoGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"id_formatoGuiaRemisionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormGuiaRemision.jButtonid_tipo_precioGuiaRemisionUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_precioGuiaRemisionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGuiaRemision.jButtonid_tipo_precioGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_precioGuiaRemisionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormGuiaRemision.jButtonid_monedaGuiaRemisionUpdate.addActionListener(new ButtonActionListener(this,"id_monedaGuiaRemisionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGuiaRemision.jButtonid_monedaGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"id_monedaGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGuiaRemision.jButtonnumero_camionGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"numero_camionGuiaRemisionBusqueda"));
		//jButtonid_clienteGuiaRemision.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_clienteGuiaRemisionActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormGuiaRemision.jButtonid_clienteGuiaRemision.addActionListener(new ButtonActionListener(this,"id_clienteGuiaRemision"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormGuiaRemision.jButtonid_clienteGuiaRemisionUpdate.addActionListener(new ButtonActionListener(this,"id_clienteGuiaRemisionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGuiaRemision.jButtonid_clienteGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"id_clienteGuiaRemisionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormGuiaRemision.jButtonid_vendedorGuiaRemisionUpdate.addActionListener(new ButtonActionListener(this,"id_vendedorGuiaRemisionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGuiaRemision.jButtonid_vendedorGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"id_vendedorGuiaRemisionBusqueda"));
		//jButtonid_facturaGuiaRemision.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_facturaGuiaRemisionActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormGuiaRemision.jButtonid_facturaGuiaRemision.addActionListener(new ButtonActionListener(this,"id_facturaGuiaRemision"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormGuiaRemision.jButtonid_facturaGuiaRemisionUpdate.addActionListener(new ButtonActionListener(this,"id_facturaGuiaRemisionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGuiaRemision.jButtonid_facturaGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"id_facturaGuiaRemisionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormGuiaRemision.jButtonid_transportistaGuiaRemisionUpdate.addActionListener(new ButtonActionListener(this,"id_transportistaGuiaRemisionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGuiaRemision.jButtonid_transportistaGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"id_transportistaGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGuiaRemision.jButtonidentificacionGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"identificacionGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGuiaRemision.jButtonfecha_origenGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"fecha_origenGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGuiaRemision.jButtonfecha_destinoGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"fecha_destinoGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGuiaRemision.jButtontransporte_codigoGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"transporte_codigoGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGuiaRemision.jButtoncantidad_bultosGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"cantidad_bultosGuiaRemisionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormGuiaRemision.jButtonid_consultorGuiaRemisionUpdate.addActionListener(new ButtonActionListener(this,"id_consultorGuiaRemisionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGuiaRemision.jButtonid_consultorGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"id_consultorGuiaRemisionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormGuiaRemision.jButtonid_transporteGuiaRemisionUpdate.addActionListener(new ButtonActionListener(this,"id_transporteGuiaRemisionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGuiaRemision.jButtonid_transporteGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"id_transporteGuiaRemisionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormGuiaRemision.jButtonid_sub_clienteGuiaRemisionUpdate.addActionListener(new ButtonActionListener(this,"id_sub_clienteGuiaRemisionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGuiaRemision.jButtonid_sub_clienteGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"id_sub_clienteGuiaRemisionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormGuiaRemision.jButtonid_empleadoGuiaRemisionUpdate.addActionListener(new ButtonActionListener(this,"id_empleadoGuiaRemisionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGuiaRemision.jButtonid_empleadoGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"id_empleadoGuiaRemisionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormGuiaRemision.jButtonid_ciudad_origenGuiaRemisionUpdate.addActionListener(new ButtonActionListener(this,"id_ciudad_origenGuiaRemisionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGuiaRemision.jButtonid_ciudad_origenGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"id_ciudad_origenGuiaRemisionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormGuiaRemision.jButtonid_ciudad_destinoGuiaRemisionUpdate.addActionListener(new ButtonActionListener(this,"id_ciudad_destinoGuiaRemisionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGuiaRemision.jButtonid_ciudad_destinoGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"id_ciudad_destinoGuiaRemisionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormGuiaRemision.jButtonid_tipo_llamadaGuiaRemisionUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_llamadaGuiaRemisionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGuiaRemision.jButtonid_tipo_llamadaGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_llamadaGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGuiaRemision.jButtonhora_inicioGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"hora_inicioGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGuiaRemision.jButtonhora_finGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"hora_finGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGuiaRemision.jButtoncupoGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"cupoGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGuiaRemision.jButtonsaldoGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"saldoGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGuiaRemision.jButtondocumentoGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"documentoGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGuiaRemision.jButtondisponibleGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"disponibleGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGuiaRemision.jButtondescripcionGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"descripcionGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGuiaRemision.jButtontotal_ivaGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"total_ivaGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGuiaRemision.jButtontotal_sin_ivaGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"total_sin_ivaGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGuiaRemision.jButtondescuentoGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"descuentoGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGuiaRemision.jButtonfleteGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"fleteGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGuiaRemision.jButtonotroGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"otroGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGuiaRemision.jButtonfinanciamientoGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"financiamientoGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGuiaRemision.jButtonivaGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"ivaGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGuiaRemision.jButtontotalGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"totalGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGuiaRemision.jButtonmonto_retencionGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"monto_retencionGuiaRemisionBusqueda"));
		//jButtonid_tipo_cambioGuiaRemision.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_tipo_cambioGuiaRemisionActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormGuiaRemision.jButtonid_tipo_cambioGuiaRemision.addActionListener(new ButtonActionListener(this,"id_tipo_cambioGuiaRemision"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormGuiaRemision.jButtonid_tipo_cambioGuiaRemisionUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_cambioGuiaRemisionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGuiaRemision.jButtonid_tipo_cambioGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_cambioGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGuiaRemision.jButtonfechaGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"fechaGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGuiaRemision.jButtonruc_clienteGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"ruc_clienteGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGuiaRemision.jButtonnombre_clienteGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"nombre_clienteGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGuiaRemision.jButtontelefono_clienteGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"telefono_clienteGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGuiaRemision.jButtondireccion_clienteGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"direccion_clienteGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGuiaRemision.jButtonnumero_pre_impresoGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"numero_pre_impresoGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGuiaRemision.jButtonpeso_brutoGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"peso_brutoGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGuiaRemision.jButtonfecha_autorizacionGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"fecha_autorizacionGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormGuiaRemision.jButtonfecha_vencimientoGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"fecha_vencimientoGuiaRemisionBusqueda"));
		
		
		this.jButtonFK_IdCiudadDestinoGuiaRemision.addActionListener(new ButtonActionListener(this,"FK_IdCiudadDestinoGuiaRemision"));

		this.jButtonFK_IdCiudadOrigenGuiaRemision.addActionListener(new ButtonActionListener(this,"FK_IdCiudadOrigenGuiaRemision"));

		this.jButtonFK_IdClienteGuiaRemision.addActionListener(new ButtonActionListener(this,"FK_IdClienteGuiaRemision"));

		this.jButtonBuscarFK_IdClienteid_clienteGuiaRemision.addActionListener(new ButtonActionListener(this,"id_clienteGuiaRemision"));

		this.jButtonFK_IdConsultorGuiaRemision.addActionListener(new ButtonActionListener(this,"FK_IdConsultorGuiaRemision"));

		this.jButtonFK_IdEmpleadoGuiaRemision.addActionListener(new ButtonActionListener(this,"FK_IdEmpleadoGuiaRemision"));

		this.jButtonFK_IdFacturaGuiaRemision.addActionListener(new ButtonActionListener(this,"FK_IdFacturaGuiaRemision"));

		this.jButtonBuscarFK_IdFacturaid_facturaGuiaRemision.addActionListener(new ButtonActionListener(this,"id_facturaGuiaRemision"));

		this.jButtonFK_IdFormatoGuiaRemision.addActionListener(new ButtonActionListener(this,"FK_IdFormatoGuiaRemision"));

		this.jButtonFK_IdSubClienteGuiaRemision.addActionListener(new ButtonActionListener(this,"FK_IdSubClienteGuiaRemision"));

		this.jButtonFK_IdTipoCambioGuiaRemision.addActionListener(new ButtonActionListener(this,"FK_IdTipoCambioGuiaRemision"));

		this.jButtonBuscarFK_IdTipoCambioid_tipo_cambioGuiaRemision.addActionListener(new ButtonActionListener(this,"id_tipo_cambioGuiaRemision"));

		this.jButtonFK_IdTipoLlamadaGuiaRemision.addActionListener(new ButtonActionListener(this,"FK_IdTipoLlamadaGuiaRemision"));

		this.jButtonFK_IdTipoPrecioGuiaRemision.addActionListener(new ButtonActionListener(this,"FK_IdTipoPrecioGuiaRemision"));

		this.jButtonFK_IdTransporteGuiaRemision.addActionListener(new ButtonActionListener(this,"FK_IdTransporteGuiaRemision"));

		this.jButtonFK_IdTransportistaGuiaRemision.addActionListener(new ButtonActionListener(this,"FK_IdTransportistaGuiaRemision"));

		this.jButtonFK_IdVendedorGuiaRemision.addActionListener(new ButtonActionListener(this,"FK_IdVendedorGuiaRemision"));

		
		//REPORTE DINAMICO
		this.jButtonCerrarReporteDinamicoGuiaRemision.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarReporteDinamicoGuiaRemisionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarReporteDinamicoGuiaRemision.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarReporteDinamicoGuiaRemisionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarExcelReporteDinamicoGuiaRemision.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarExcelReporteDinamicoGuiaRemisionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		//IMPORTACION
		this.jButtonCerrarImportacionGuiaRemision.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarImportacionGuiaRemisionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarImportacionGuiaRemision.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarImportacionGuiaRemisionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonAbrirImportacionGuiaRemision.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAbrirImportacionGuiaRemisionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
	}
	*/
	
	
	public void jComboBoxTiposSeleccionarGuiaRemisionActionListener(ActionEvent evt) throws Exception {    		
		try {			
			Reporte reporte=(Reporte)this.jComboBoxTiposSeleccionarGuiaRemision.getSelectedItem();
			
			//if(reporte.getsCodigo().equals("SELECCIONAR")) {
			//}					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);
		}
	}	
	
	
	
	public void seleccionarTodosGuiaRemision(Boolean conSeleccionarTodos) throws Exception {    		
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {				
				for(GuiaRemision guiaremisionAux:this.guiaremisionLogic.getGuiaRemisions()) {
					guiaremisionAux.setIsSelected(conSeleccionarTodos);
				}			
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(GuiaRemision guiaremisionAux:guiaremisions) {
					guiaremisionAux.setIsSelected(conSeleccionarTodos);
				}
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionarTodosGuiaRemisionItemListener(ItemEvent evt) throws Exception {    		
		try {			
			this.inicializarActualizarBindingGuiaRemision(false,false);
			
			//JCheckBox jCheckBox=(JCheckBox)evt.getSource();			
			//System.out.println("ok");		
			
			Boolean existe=false;
			
			if(sTipoSeleccionar.equals("COLUMNAS")) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					for(GuiaRemision guiaremisionAux:this.guiaremisionLogic.getGuiaRemisions()) {
						guiaremisionAux.setIsSelected(this.isSeleccionarTodos);
					}			
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(GuiaRemision guiaremisionAux:guiaremisions) {
						guiaremisionAux.setIsSelected(this.isSeleccionarTodos);
					}
				}
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					for(GuiaRemision guiaremisionAux:this.guiaremisionLogic.getGuiaRemisions()) {
					
					}	
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(GuiaRemision guiaremisionAux:guiaremisions) {
						
					}
				}
			}
					
			if(existe) {
				this.inicializarActualizarBindingTablaGuiaRemision(false);
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}	
			
			//TableCellRenderer tableCellRenderer=null;			
			
			//TableCellEditor tableCellEditor=null;						
						
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			/*
			for(int i = 0; i < this.jTableDatosGuiaRemision.getRowCount(); i++) {				
				tableCellRenderer=this.jTableDatosSistema.getCellRenderer(i, 2);
				tableCellEditor=this.jTableDatosSistema.getCellEditor(i, 2);
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellRenderer;				
				idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellEditor;
				
				if(idSeleccionarTableCell.jCheckBoxId!=null) {
					idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				}
				
				//System.out.println(idSeleccionarTableCell.valor);
				
				//this.jTableDatosGuiaRemision.getModel().setValueAt(jCheckBox.isSelected(), i, Funciones2.getColumnIndexByName(this.jTableDatosGuiaRemision,Constantes2.S_SELECCIONAR));
		    } 
			*/
					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionadosGuiaRemisionItemListener(ItemEvent evt) throws Exception {    		
		try {			
			this.inicializarActualizarBindingGuiaRemision(false,false);
			
			//JCheckBox jCheckBox=(JCheckBox)evt.getSource();			
			//System.out.println("ok");		
			
			Boolean existe=false;
			int[] arrNumRowsSeleccionados=null;
			
			arrNumRowsSeleccionados=this.jTableDatosGuiaRemision.getSelectedRows();
			
			GuiaRemision guiaremisionLocal=new GuiaRemision();
			
			//this.seleccionarTodosGuiaRemision(false);
			
			for(Integer iNumRowSeleccionado:arrNumRowsSeleccionados) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {
					guiaremisionLocal =(GuiaRemision) this.guiaremisionLogic.getGuiaRemisions().toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(iNumRowSeleccionado)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					guiaremisionLocal =(GuiaRemision) this.guiaremisions.toArray()[this.jTableDatosGuiaRemision.convertRowIndexToModel(iNumRowSeleccionado)];
				}
				
				guiaremisionLocal.setIsSelected(this.isSeleccionados);
			}
			
			/*
			if(sTipoSeleccionar.equals("SELECCIONAR")) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					for(GuiaRemision guiaremisionAux:this.guiaremisionLogic.getGuiaRemisions()) {
						guiaremisionAux.setIsSelected(this.isSeleccionados);
					}			
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(GuiaRemision guiaremisionAux:guiaremisions) {
						guiaremisionAux.setIsSelected(this.isSeleccionados);
					}
				}
			}
			*/
			
			//if(existe) {
				this.inicializarActualizarBindingTablaGuiaRemision(false);
			/*
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}	
			*/
			
			
			//TableCellRenderer tableCellRenderer=null;			
			
			//TableCellEditor tableCellEditor=null;						
						
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			/*
			for(int i = 0; i < this.jTableDatosGuiaRemision.getRowCount(); i++) {				
				tableCellRenderer=this.jTableDatosSistema.getCellRenderer(i, 2);
				tableCellEditor=this.jTableDatosSistema.getCellEditor(i, 2);
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellRenderer;				
				idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellEditor;
				
				if(idSeleccionarTableCell.jCheckBoxId!=null) {
					idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				}
				
				//System.out.println(idSeleccionarTableCell.valor);
				
				//this.jTableDatosGuiaRemision.getModel().setValueAt(jCheckBox.isSelected(), i, Funciones2.getColumnIndexByName(this.jTableDatosGuiaRemision,Constantes2.S_SELECCIONAR));
		    } 
			*/
					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionarActualGuiaRemisionItemListener(ItemEvent evt,Long idActual) throws Exception {    		
		try {
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);
		}
	}
	
	public void ejecutarAuxiliarGuiaRemisionParaAjaxPostBack() throws Exception {    		
		try {
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jTextFieldValorCampoGeneralGuiaRemisionActionListener(ActionEvent evt) throws Exception {    		
		try {
			this.inicializarActualizarBindingGuiaRemision(false,false);
			
			//System.out.println(this.jTextFieldValorCampoGeneralGuiaRemision.getText());		
			
			Boolean existe=false;
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				for(GuiaRemision guiaremisionAux:this.guiaremisionLogic.getGuiaRemisions()) {
				
						if(sTipoSeleccionar.equals(GuiaRemisionConstantesFunciones.LABEL_SECUENCIAL)) {
							existe=true;
							guiaremisionAux.setsecuencial(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(GuiaRemisionConstantesFunciones.LABEL_FECHAEMISION)) {
							existe=true;
							guiaremisionAux.setfecha_emision(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(GuiaRemisionConstantesFunciones.LABEL_NUMEROCAMION)) {
							existe=true;
							guiaremisionAux.setnumero_camion(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(GuiaRemisionConstantesFunciones.LABEL_IDENTIFICACION)) {
							existe=true;
							guiaremisionAux.setidentificacion(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(GuiaRemisionConstantesFunciones.LABEL_FECHAORIGEN)) {
							existe=true;
							guiaremisionAux.setfecha_origen(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(GuiaRemisionConstantesFunciones.LABEL_FECHADESTINO)) {
							existe=true;
							guiaremisionAux.setfecha_destino(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(GuiaRemisionConstantesFunciones.LABEL_TRANSPORTECODIGO)) {
							existe=true;
							guiaremisionAux.settransporte_codigo(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(GuiaRemisionConstantesFunciones.LABEL_CANTIDADBULTOS)) {
							existe=true;
							guiaremisionAux.setcantidad_bultos(Integer.parseInt(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(GuiaRemisionConstantesFunciones.LABEL_HORAINICIO)) {
							existe=true;
							guiaremisionAux.sethora_inicio(Time.valueOf(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(GuiaRemisionConstantesFunciones.LABEL_HORAFIN)) {
							existe=true;
							guiaremisionAux.sethora_fin(Time.valueOf(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(GuiaRemisionConstantesFunciones.LABEL_CUPO)) {
							existe=true;
							guiaremisionAux.setcupo(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(GuiaRemisionConstantesFunciones.LABEL_SALDO)) {
							existe=true;
							guiaremisionAux.setsaldo(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(GuiaRemisionConstantesFunciones.LABEL_DOCUMENTO)) {
							existe=true;
							guiaremisionAux.setdocumento(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(GuiaRemisionConstantesFunciones.LABEL_DISPONIBLE)) {
							existe=true;
							guiaremisionAux.setdisponible(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(GuiaRemisionConstantesFunciones.LABEL_DESCRIPCION)) {
							existe=true;
							guiaremisionAux.setdescripcion(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(GuiaRemisionConstantesFunciones.LABEL_TOTALIVA)) {
							existe=true;
							guiaremisionAux.settotal_iva(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(GuiaRemisionConstantesFunciones.LABEL_TOTALSINIVA)) {
							existe=true;
							guiaremisionAux.settotal_sin_iva(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(GuiaRemisionConstantesFunciones.LABEL_DESCUENTO)) {
							existe=true;
							guiaremisionAux.setdescuento(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(GuiaRemisionConstantesFunciones.LABEL_FLETE)) {
							existe=true;
							guiaremisionAux.setflete(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(GuiaRemisionConstantesFunciones.LABEL_OTRO)) {
							existe=true;
							guiaremisionAux.setotro(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(GuiaRemisionConstantesFunciones.LABEL_FINANCIAMIENTO)) {
							existe=true;
							guiaremisionAux.setfinanciamiento(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(GuiaRemisionConstantesFunciones.LABEL_IVA)) {
							existe=true;
							guiaremisionAux.setiva(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(GuiaRemisionConstantesFunciones.LABEL_TOTAL)) {
							existe=true;
							guiaremisionAux.settotal(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(GuiaRemisionConstantesFunciones.LABEL_MONTORETENCION)) {
							existe=true;
							guiaremisionAux.setmonto_retencion(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(GuiaRemisionConstantesFunciones.LABEL_FECHA)) {
							existe=true;
							guiaremisionAux.setfecha(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(GuiaRemisionConstantesFunciones.LABEL_RUCCLIENTE)) {
							existe=true;
							guiaremisionAux.setruc_cliente(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(GuiaRemisionConstantesFunciones.LABEL_NOMBRECLIENTE)) {
							existe=true;
							guiaremisionAux.setnombre_cliente(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(GuiaRemisionConstantesFunciones.LABEL_TELEFONOCLIENTE)) {
							existe=true;
							guiaremisionAux.settelefono_cliente(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(GuiaRemisionConstantesFunciones.LABEL_DIRECCIONCLIENTE)) {
							existe=true;
							guiaremisionAux.setdireccion_cliente(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(GuiaRemisionConstantesFunciones.LABEL_NUMEROPREIMPRESO)) {
							existe=true;
							guiaremisionAux.setnumero_pre_impreso(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(GuiaRemisionConstantesFunciones.LABEL_PESOBRUTO)) {
							existe=true;
							guiaremisionAux.setpeso_bruto(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(GuiaRemisionConstantesFunciones.LABEL_FECHAAUTORIZACION)) {
							existe=true;
							guiaremisionAux.setfecha_autorizacion(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(GuiaRemisionConstantesFunciones.LABEL_FECHAVENCIMIENTO)) {
							existe=true;
							guiaremisionAux.setfecha_vencimiento(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
				}	
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(GuiaRemision guiaremisionAux:guiaremisions) {
					
						if(sTipoSeleccionar.equals(GuiaRemisionConstantesFunciones.LABEL_SECUENCIAL)) {
							existe=true;
							guiaremisionAux.setsecuencial(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(GuiaRemisionConstantesFunciones.LABEL_FECHAEMISION)) {
							existe=true;
							guiaremisionAux.setfecha_emision(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(GuiaRemisionConstantesFunciones.LABEL_NUMEROCAMION)) {
							existe=true;
							guiaremisionAux.setnumero_camion(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(GuiaRemisionConstantesFunciones.LABEL_IDENTIFICACION)) {
							existe=true;
							guiaremisionAux.setidentificacion(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(GuiaRemisionConstantesFunciones.LABEL_FECHAORIGEN)) {
							existe=true;
							guiaremisionAux.setfecha_origen(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(GuiaRemisionConstantesFunciones.LABEL_FECHADESTINO)) {
							existe=true;
							guiaremisionAux.setfecha_destino(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(GuiaRemisionConstantesFunciones.LABEL_TRANSPORTECODIGO)) {
							existe=true;
							guiaremisionAux.settransporte_codigo(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(GuiaRemisionConstantesFunciones.LABEL_CANTIDADBULTOS)) {
							existe=true;
							guiaremisionAux.setcantidad_bultos(Integer.parseInt(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(GuiaRemisionConstantesFunciones.LABEL_HORAINICIO)) {
							existe=true;
							guiaremisionAux.sethora_inicio(Time.valueOf(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(GuiaRemisionConstantesFunciones.LABEL_HORAFIN)) {
							existe=true;
							guiaremisionAux.sethora_fin(Time.valueOf(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(GuiaRemisionConstantesFunciones.LABEL_CUPO)) {
							existe=true;
							guiaremisionAux.setcupo(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(GuiaRemisionConstantesFunciones.LABEL_SALDO)) {
							existe=true;
							guiaremisionAux.setsaldo(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(GuiaRemisionConstantesFunciones.LABEL_DOCUMENTO)) {
							existe=true;
							guiaremisionAux.setdocumento(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(GuiaRemisionConstantesFunciones.LABEL_DISPONIBLE)) {
							existe=true;
							guiaremisionAux.setdisponible(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(GuiaRemisionConstantesFunciones.LABEL_DESCRIPCION)) {
							existe=true;
							guiaremisionAux.setdescripcion(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(GuiaRemisionConstantesFunciones.LABEL_TOTALIVA)) {
							existe=true;
							guiaremisionAux.settotal_iva(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(GuiaRemisionConstantesFunciones.LABEL_TOTALSINIVA)) {
							existe=true;
							guiaremisionAux.settotal_sin_iva(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(GuiaRemisionConstantesFunciones.LABEL_DESCUENTO)) {
							existe=true;
							guiaremisionAux.setdescuento(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(GuiaRemisionConstantesFunciones.LABEL_FLETE)) {
							existe=true;
							guiaremisionAux.setflete(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(GuiaRemisionConstantesFunciones.LABEL_OTRO)) {
							existe=true;
							guiaremisionAux.setotro(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(GuiaRemisionConstantesFunciones.LABEL_FINANCIAMIENTO)) {
							existe=true;
							guiaremisionAux.setfinanciamiento(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(GuiaRemisionConstantesFunciones.LABEL_IVA)) {
							existe=true;
							guiaremisionAux.setiva(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(GuiaRemisionConstantesFunciones.LABEL_TOTAL)) {
							existe=true;
							guiaremisionAux.settotal(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(GuiaRemisionConstantesFunciones.LABEL_MONTORETENCION)) {
							existe=true;
							guiaremisionAux.setmonto_retencion(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(GuiaRemisionConstantesFunciones.LABEL_FECHA)) {
							existe=true;
							guiaremisionAux.setfecha(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(GuiaRemisionConstantesFunciones.LABEL_RUCCLIENTE)) {
							existe=true;
							guiaremisionAux.setruc_cliente(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(GuiaRemisionConstantesFunciones.LABEL_NOMBRECLIENTE)) {
							existe=true;
							guiaremisionAux.setnombre_cliente(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(GuiaRemisionConstantesFunciones.LABEL_TELEFONOCLIENTE)) {
							existe=true;
							guiaremisionAux.settelefono_cliente(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(GuiaRemisionConstantesFunciones.LABEL_DIRECCIONCLIENTE)) {
							existe=true;
							guiaremisionAux.setdireccion_cliente(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(GuiaRemisionConstantesFunciones.LABEL_NUMEROPREIMPRESO)) {
							existe=true;
							guiaremisionAux.setnumero_pre_impreso(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(GuiaRemisionConstantesFunciones.LABEL_PESOBRUTO)) {
							existe=true;
							guiaremisionAux.setpeso_bruto(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(GuiaRemisionConstantesFunciones.LABEL_FECHAAUTORIZACION)) {
							existe=true;
							guiaremisionAux.setfecha_autorizacion(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(GuiaRemisionConstantesFunciones.LABEL_FECHAVENCIMIENTO)) {
							existe=true;
							guiaremisionAux.setfecha_vencimiento(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
				}
			}
								
			if(existe) {
				this.inicializarActualizarBindingTablaGuiaRemision(false);
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jComboBoxTiposAccionesGuiaRemisionActionListener(ActionEvent evt,Boolean esParaAccionDesdeFormulario) throws Exception {    				
		Boolean conSplash=true;
		
		try {							
		
			this.inicializarActualizarBindingGuiaRemision(false,false);
			
			Reporte reporte=new Reporte();
			
			this.esParaAccionDesdeFormularioGuiaRemision=esParaAccionDesdeFormulario;
			
			if(!esParaAccionDesdeFormulario) {
				
				reporte=(Reporte)this.jComboBoxTiposAccionesGuiaRemision.getSelectedItem();
				
			} else {
				reporte=(Reporte)this.jInternalFrameDetalleFormGuiaRemision.jComboBoxTiposAccionesFormularioGuiaRemision.getSelectedItem();
			}
			String sTipoAccionLocal=this.sTipoAccion;
			
			if(!esParaAccionDesdeFormulario) {
				sTipoAccionLocal=this.sTipoAccion;
			} else {
				sTipoAccionLocal=this.sTipoAccionFormulario;
			}
			
			if(sTipoAccionLocal.equals("GENERAR REPORTE")) {//reporte.getsCodigo().equals("GENERAR REPORTE")) {
				if(this.isPermisoReporteGuiaRemision) {				
					conSplash=true;//false;										
					
					//this.startProcessGuiaRemision(conSplash);
				
					this.generarReporteGuiaRemisionsSeleccionados();
				} else {
					JOptionPane.showMessageDialog(this,"NO TIENE PERMISO PARA GENERAR REPORTES","REPORTE",JOptionPane.ERROR_MESSAGE);					
				}
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesGuiaRemision.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormGuiaRemision.jComboBoxTiposAccionesFormularioGuiaRemision.setSelectedIndex(0);					
				}
			} else if(sTipoAccionLocal.equals("GENERAR REPORTE DINAMICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.mostrarReporteDinamicoGuiaRemisionsSeleccionados();
				//this.jComboBoxTiposAccionesGuiaRemision.setSelectedIndex(0);					
			}  else if(sTipoAccionLocal.equals("GENERAR_REPORTE_GROUP_GENERICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.generarReporteGroupGenericoGuiaRemisionsSeleccionados(false);
				//this.jComboBoxTiposAccionesGuiaRemision.setSelectedIndex(0);					
			} else if(sTipoAccionLocal.equals("GENERAR_REPORTE_TOTALES_GROUP_GENERICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.generarReporteGroupGenericoGuiaRemisionsSeleccionados(true);
				//this.jComboBoxTiposAccionesGuiaRemision.setSelectedIndex(0);					
			} else if(sTipoAccionLocal.equals("EXPORTAR_DATOS")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//this.startProcessGuiaRemision();
				
				this.exportarGuiaRemisionsSeleccionados();
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesGuiaRemision.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormGuiaRemision.jComboBoxTiposAccionesFormularioGuiaRemision.setSelectedIndex(0);					
				}					
			} else if(sTipoAccionLocal.equals("IMPORTAR_DATOS")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				this.mostrarImportacionGuiaRemisions();
				//this.importarGuiaRemisions();
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesGuiaRemision.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormGuiaRemision.jComboBoxTiposAccionesFormularioGuiaRemision.setSelectedIndex(0);					
				}					
			} else if(sTipoAccionLocal.equals("EXPORTAR_DATOS_EXCEL")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//this.startProcessGuiaRemision();
				//SE EXPORTA SEGUN TIPO ARCHIVO SELECCIONADO
				//this.exportarExcelGuiaRemisionsSeleccionados();
				//this.jComboBoxTiposAccionesGuiaRemision.setSelectedIndex(0);					
			}  else if(sTipoAccionLocal.equals("RECARGAR_FK")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {								
				if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE RECARGAR REFERENCIAS ?", "MANTENIMIENTO DE Guia Remision", JOptionPane.OK_CANCEL_OPTION) == 0) {
				
				//this.startProcessGuiaRemision();
				
					if(!esParaAccionDesdeFormulario || (esParaAccionDesdeFormulario && this.isEsNuevoGuiaRemision)) {
						this.esRecargarFks=true;
						this.cargarCombosForeignKeyGuiaRemision(false,false,false);
						this.esRecargarFks=false;
						
						JOptionPane.showMessageDialog(this,"PROCESO EJECUTADO CORRECTAMENTE","MANTENIMIENTO DE Guia Remision",JOptionPane.INFORMATION_MESSAGE);
					} else {
						JOptionPane.showMessageDialog(this,"ESTE PROCESO SOLO FUNCIONA AL INGRESAR UN NUEVO ELEMENTO","MANTENIMIENTO",JOptionPane.ERROR_MESSAGE);	
					}
					
					
				}
				
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesGuiaRemision.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormGuiaRemision.jComboBoxTiposAccionesFormularioGuiaRemision.setSelectedIndex(0);					
				}	
			} 			
			else if(GuiaRemisionBeanSwingJInternalFrame.EsProcesoReporte(reporte.getsCodigo())){
				if(this.isPermisoReporteGuiaRemision) {				
					if(this.tieneElementosSeleccionados()) {
						this.quitarFilaTotales();
						
						conSplash=false;
						
						//this.startProcessGuiaRemision(conSplash);
					
						//this.actualizarParametrosGeneralGuiaRemision();
						
						this.generarReporteProcesoAccionGuiaRemisionsSeleccionados(reporte.getsCodigo());
						
						if(!esParaAccionDesdeFormulario) {
							
							this.jComboBoxTiposAccionesGuiaRemision.setSelectedIndex(0);					
							
						} else {
							this.jInternalFrameDetalleFormGuiaRemision.jComboBoxTiposAccionesFormularioGuiaRemision.setSelectedIndex(0);					
						}
					} else {
						JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO TIENE PERMISO PARA GENERAR REPORTES","REPORTE",JOptionPane.ERROR_MESSAGE);					
				}
			} 
			else if(GuiaRemisionBeanSwingJInternalFrameAdditional.EsProcesoAccionNormal(reporte.getsCodigo())){
				if(this.tieneElementosSeleccionados()) {
					this.quitarFilaTotales();
					
					if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE PROCESAR "+reporte.getsDescripcion()+" EN PROCESO Guia RemisionES SELECCIONADOS?", "MANTENIMIENTO DE Guia Remision", JOptionPane.OK_CANCEL_OPTION) == 0) {
						//this.startProcessGuiaRemision();
				
						this.actualizarParametrosGeneralGuiaRemision();
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {						
							this.guiaremisionReturnGeneral=guiaremisionLogic.procesarAccionGuiaRemisionsWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,sTipoAccionLocal,this.guiaremisionLogic.getGuiaRemisions(),this.guiaremisionParameterGeneral);
						
						} else if(Constantes.ISUSAEJBREMOTE) {
						
						} else if(Constantes.ISUSAEJBHOME) {
						}
						//ARCHITECTURE
						
						this.procesarGuiaRemisionReturnGeneral();
					
					if(!esParaAccionDesdeFormulario) {
						
						this.jComboBoxTiposAccionesGuiaRemision.setSelectedIndex(0);					
						
					} else {
						this.jInternalFrameDetalleFormGuiaRemision.jComboBoxTiposAccionesFormularioGuiaRemision.setSelectedIndex(0);					
					}
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
				}				
			} 
			else {
				if(this.tieneElementosSeleccionados()) {
					this.quitarFilaTotales();
					
					this.actualizarParametrosGeneralGuiaRemision();
					
					GuiaRemisionBeanSwingJInternalFrameAdditional.ProcesarAccion(reporte.getsCodigo(),reporte.getsDescripcion(),this);
					
					this.procesarGuiaRemisionReturnGeneral();
					
					if(!esParaAccionDesdeFormulario) {
						
						this.jComboBoxTiposAccionesGuiaRemision.setSelectedIndex(0);					
						
					} else {
						this.jInternalFrameDetalleFormGuiaRemision.jComboBoxTiposAccionesFormularioGuiaRemision.setSelectedIndex(0);					
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
				}
			}
		} catch(Exception e) {
			this.esRecargarFks=false;
			
			FuncionesSwing.manageException(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);
		
		}  finally {
      		//this.finishProcessGuiaRemision(conSplash);
      	}
	}
	
	public void jComboBoxTiposRelacionesGuiaRemisionActionListener(ActionEvent evt) throws Exception {    				
		Boolean conSplash=true;
		
		try {			
			this.startProcessGuiaRemision();
			
			if(this.jInternalFrameDetalleFormGuiaRemision==null) { //if(!this.conCargarFormDetalle) {			
				this.inicializarFormDetalle();
			}
			
			ArrayList<GuiaRemision> guiaremisionsSeleccionados=new ArrayList<GuiaRemision>();		
			GuiaRemision guiaremision=new GuiaRemision();
			
			int rowIndex=-1;//CON ESTO SE DESHABILITA SELECCION POR INDICE
			
			this.inicializarActualizarBindingGuiaRemision(false,false);
			
			Reporte reporte=new Reporte();
			
			
			reporte=(Reporte)this.jComboBoxTiposRelacionesGuiaRemision.getSelectedItem();
			
			
			
			
			guiaremisionsSeleccionados=this.getGuiaRemisionsSeleccionados(true);
			//this.sTipoAccion;
			
			if(guiaremisionsSeleccionados.size()==1) {
				for(GuiaRemision guiaremisionAux:guiaremisionsSeleccionados) {
					guiaremision=guiaremisionAux;
				}
				
				if(this.sTipoAccion.equals("NONE")) {
				
				}
				
				else if(this.sTipoRelacion.equals("Detalle Guia Remision")) {
					jButtonDetalleGuiaRemisionActionPerformed(null,rowIndex,true,false,guiaremision);
				}
			} else {
				JOptionPane.showMessageDialog(this,"SELECCIONE SOLO UN REGISTRO","RELACIONES",JOptionPane.ERROR_MESSAGE);
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);
		
		}  finally {
			this.finishProcessGuiaRemision();
			
      		//this.finishProcessGuiaRemision(conSplash);
      	}
	}
			
	public static Boolean EsProcesoReporte(String sTipoProceso) throws Exception {
		Boolean esProcesoAccionRepoorte=false;

		if(sTipoProceso.contains("REPORTE_")) {
			 esProcesoAccionRepoorte=true;
		}

		return esProcesoAccionRepoorte;
	}
	
	public void procesarGuiaRemisionReturnGeneral() throws Exception {
		if(this.guiaremisionReturnGeneral.getConRetornoEstaProcesado()) {
			JOptionPane.showMessageDialog(this,this.guiaremisionReturnGeneral.getsMensajeProceso(),"PROCESO",JOptionPane.INFORMATION_MESSAGE);
		}
		
		if(this.guiaremisionReturnGeneral.getConMostrarMensaje()) {
			JOptionPane.showMessageDialog(this,this.guiaremisionReturnGeneral.getsMensajeProceso(),"PROCESO",FuncionesSwing.getColorSelectedBackground(this.guiaremisionReturnGeneral.getsTipoMensaje()));
		}
		
		if(this.guiaremisionReturnGeneral.getConRecargarInformacion()) {
			this.procesarBusqueda(this.sAccionBusqueda);
			
			this.inicializarActualizarBindingGuiaRemision(false);
		}
		
		if(this.guiaremisionReturnGeneral.getConRetornoLista() || this.guiaremisionReturnGeneral.getConRetornoObjeto()) {
			if(this.guiaremisionReturnGeneral.getConRetornoLista()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.guiaremisionLogic.setGuiaRemisions(this.guiaremisionReturnGeneral.getGuiaRemisions());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
			
			if(this.guiaremisionReturnGeneral.getConRetornoObjeto()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.guiaremisionLogic.setGuiaRemision(this.guiaremisionReturnGeneral.getGuiaRemision());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
			
			this.inicializarActualizarBindingGuiaRemision(false);
		}
	}
	
	public void actualizarParametrosGeneralGuiaRemision() throws Exception {
		
		
	}
	
	public ArrayList<GuiaRemision> getGuiaRemisionsSeleccionados(Boolean conSeleccionarTodosAutomatico) throws Exception {
		ArrayList<GuiaRemision> guiaremisionsSeleccionados=new ArrayList<GuiaRemision>();
		Boolean existe=false;
		
		if(!this.esParaAccionDesdeFormularioGuiaRemision) {
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				
				for(GuiaRemision guiaremisionAux:guiaremisionLogic.getGuiaRemisions()) {
					if(guiaremisionAux.getIsSelected()) {
						guiaremisionsSeleccionados.add(guiaremisionAux);				
					}
				}
				
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(GuiaRemision guiaremisionAux:this.guiaremisions) {
					if(guiaremisionAux.getIsSelected()) {
						guiaremisionsSeleccionados.add(guiaremisionAux);				
					}
				}
			}
			
			if(guiaremisionsSeleccionados.size()>0) {
				existe=true;
			}
			
			//SI NO ESTA NINGUNO SELECCIONADO SE SELECCIONA TODOS
			if(!existe) {
				if(conSeleccionarTodosAutomatico) {
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						guiaremisionsSeleccionados.addAll(this.guiaremisionLogic.getGuiaRemisions());
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						guiaremisionsSeleccionados.addAll(this.guiaremisions);				
					}
				}
			}
		} else {
			guiaremisionsSeleccionados.add(this.guiaremision);
		}
		
		return guiaremisionsSeleccionados;
	}
	
	public void actualizarVariablesTipoReporte(Boolean esReporteNormal,Boolean esReporteDinamico,Boolean esReporteAccionProceso,String sPath) {
		if(esReporteNormal) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=false;
			this.sPathReporteDinamico="";
			this.esReporteAccionProceso=false;
			
		} else if(esReporteAccionProceso) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=false;
			this.sPathReporteDinamico="";
			this.esReporteAccionProceso=true;
			
		} else if(esReporteDinamico) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=true;
			this.esReporteAccionProceso=false;
			this.sPathReporteDinamico=sPath.replace(".jrxml",".jasper");			
		}
	}
	
	public void generarReporteGuiaRemisionsSeleccionados() throws Exception {
		Boolean existe=false;
		
		if(this.sTipoReporte.equals("NORMAL") || this.sTipoReporte.equals("FORMULARIO")) {
			existe=true;								
			this.generarReporteNormalGuiaRemisionsSeleccionados();
			
		} else if(this.sTipoReporte.equals("DINAMICO")) {
			existe=true;
			this.mostrarReporteDinamicoGuiaRemisionsSeleccionados();
			
		} else if(this.sTipoReporte.equals("GRUPO_GENERICO")) {
			existe=true;
			this.generarReporteGroupGenericoGuiaRemisionsSeleccionados(false);
			
		} else if(this.sTipoReporte.equals("TOTALES_GRUPO_GENERICO")) {
			existe=true;
			this.generarReporteGroupGenericoGuiaRemisionsSeleccionados(true);
		}
		else if(this.sTipoReporte.equals("RELACIONES")) {
			//SI SE GENERA REPORTE RELACIONES
			existe=true;
			this.generarReporteRelacionesGuiaRemisionsSeleccionados();
		}					
		
		if(!existe) {
			JOptionPane.showMessageDialog(this,"SELECCIONE UN TIPO DE REPORTE VALIDO","REPORTE DE Guia Remision",JOptionPane.ERROR_MESSAGE);
		}
	}
	
	public void generarReporteRelacionesGuiaRemisionsSeleccionados() throws Exception {
		ArrayList<GuiaRemision> guiaremisionsSeleccionados=new ArrayList<GuiaRemision>();		
		
		guiaremisionsSeleccionados=this.getGuiaRemisionsSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
					
		//this.sTipoReporteExtra="MasterRelaciones";
		
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		
		this.generarReporteGuiaRemisions("Todos",guiaremisionsSeleccionados);
		
	}	
	
	public void generarReporteNormalGuiaRemisionsSeleccionados() throws Exception {
		ArrayList<GuiaRemision> guiaremisionsSeleccionados=new ArrayList<GuiaRemision>();		
		
		guiaremisionsSeleccionados=this.getGuiaRemisionsSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
								
		if(this.sTipoReporte.equals("FORMULARIO")) {
			this.sTipoReporteExtra="Vertical";					
		}
		
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		this.generarReporteGuiaRemisions("Todos",guiaremisionsSeleccionados);
	}		
	
	public void generarReporteProcesoAccionGuiaRemisionsSeleccionados(String sProcesoReporte) throws Exception {
		ArrayList<GuiaRemision> guiaremisionsSeleccionados=new ArrayList<GuiaRemision>();
		
		guiaremisionsSeleccionados=this.getGuiaRemisionsSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(false,false,true,"");
		
		/*
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		this.sTipoReporteExtra=sProcesoReporte.toLowerCase();
		
		this.esReporteAccionProceso=true;
		this.generarReporteGuiaRemisions("Todos",guiaremisionsSeleccionados);
		this.esReporteAccionProceso=false;
	}
	
	
	public void mostrarReporteDinamicoGuiaRemisionsSeleccionados() throws Exception {
		ArrayList<GuiaRemision> guiaremisionsSeleccionados=new ArrayList<GuiaRemision>();		
		
		
		this.abrirInicializarFrameReporteDinamicoGuiaRemision();
		
		
		guiaremisionsSeleccionados=this.getGuiaRemisionsSeleccionados(true);
		
		this.sTipoReporteExtra="";
		//this.actualizarVariablesTipoReporte(true,false,false,"");
		
		
		this.abrirFrameReporteDinamicoGuiaRemision();
		
		
		//this.generarReporteGuiaRemisions("Todos",guiaremisionsSeleccionados ,guiaremisionImplementable,guiaremisionImplementableHome);
	}
	
	public void mostrarImportacionGuiaRemisions() throws Exception {
		//this.sTipoReporteExtra="";
		//this.actualizarVariablesTipoReporte(true,false,false,"");
		
		
		this.abrirInicializarFrameImportacionGuiaRemision();
		
		this.abrirFrameImportacionGuiaRemision();		
		
			
		//this.generarReporteGuiaRemisions("Todos",guiaremisionsSeleccionados ,guiaremisionImplementable,guiaremisionImplementableHome);
	}
	
	public void importarGuiaRemisions() throws Exception {		
	
	}
	
	public void exportarGuiaRemisionsSeleccionados() throws Exception {
		Boolean existe=false;
		
		if(this.sTipoArchivoReporte.equals("EXCEL")) {
			existe=true;
			this.exportarExcelGuiaRemisionsSeleccionados();
			
		} else if(this.sTipoArchivoReporte.equals("TEXTO")) {
			existe=true;
			this.exportarTextoGuiaRemisionsSeleccionados();
		
		} else if(this.sTipoArchivoReporte.equals("XML")) {
			existe=true;
			this.exportarXmlGuiaRemisionsSeleccionados();
		} 
		
		if(!existe) {
			JOptionPane.showMessageDialog(this,"SELECCIONE UN TIPO DE ARCHIVO VALIDO","EXPORTACION DE Guia Remision",JOptionPane.ERROR_MESSAGE);
		}
	}
	
	public void exportarTextoGuiaRemisionsSeleccionados() throws Exception {
		ArrayList<GuiaRemision> guiaremisionsSeleccionados=new ArrayList<GuiaRemision>();		
		
		guiaremisionsSeleccionados=this.getGuiaRemisionsSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"guiaremision."+"txt";//Funciones2.getTipoExtensionArchivoExportar(this.parametroGeneralUsuario);
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		BufferedWriter bufferedWriter = null;
		FileWriter fileWriter=null;
		
		fileWriter=new FileWriter(sPath);
		
		bufferedWriter = new BufferedWriter(fileWriter);
		
		try {
			if(conCabecera) {
				sFilaCabecera=this.getFilaCabeceraExportarGuiaRemision(sDelimiter);
				
				bufferedWriter.write(sFilaCabecera);
			}				
			
			for(GuiaRemision guiaremisionAux:guiaremisionsSeleccionados) {
				sFilaDatos=this.getFilaDatosExportarGuiaRemision(guiaremisionAux,sDelimiter);
				
				bufferedWriter.write(sFilaDatos);
				
				//guiaremisionAux.setsDetalleGeneralEntityReporte(guiaremisionAux.toString());			
			}
			
			bufferedWriter.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.guiaremisionSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Guia Remision",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {
       		if (bufferedWriter != null) {
				bufferedWriter.close();
			}
		}
	}
	
	public String getFilaCabeceraExportarGuiaRemision(String sDelimiter) {
		String sFilaCabecera="";
		
		
		sFilaCabecera+=GuiaRemisionConstantesFunciones.LABEL_ID;

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
			sFilaCabecera+=sDelimiter;
		sFilaCabecera+=GuiaRemisionConstantesFunciones.LABEL_VERSIONROW;
		}

		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=GuiaRemisionConstantesFunciones.LABEL_IDEMPRESA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=GuiaRemisionConstantesFunciones.LABEL_IDSUCURSAL;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=GuiaRemisionConstantesFunciones.LABEL_IDEJERCICIO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=GuiaRemisionConstantesFunciones.LABEL_IDPERIODO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=GuiaRemisionConstantesFunciones.LABEL_IDUSUARIO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=GuiaRemisionConstantesFunciones.LABEL_SECUENCIAL;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=GuiaRemisionConstantesFunciones.LABEL_FECHAEMISION;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=GuiaRemisionConstantesFunciones.LABEL_IDFORMATO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=GuiaRemisionConstantesFunciones.LABEL_IDTIPOPRECIO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=GuiaRemisionConstantesFunciones.LABEL_IDMONEDA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=GuiaRemisionConstantesFunciones.LABEL_NUMEROCAMION;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=GuiaRemisionConstantesFunciones.LABEL_IDCLIENTE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=GuiaRemisionConstantesFunciones.LABEL_IDVENDEDOR;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=GuiaRemisionConstantesFunciones.LABEL_IDFACTURA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=GuiaRemisionConstantesFunciones.LABEL_IDTRANSPORTISTA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=GuiaRemisionConstantesFunciones.LABEL_IDENTIFICACION;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=GuiaRemisionConstantesFunciones.LABEL_FECHAORIGEN;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=GuiaRemisionConstantesFunciones.LABEL_FECHADESTINO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=GuiaRemisionConstantesFunciones.LABEL_TRANSPORTECODIGO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=GuiaRemisionConstantesFunciones.LABEL_CANTIDADBULTOS;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=GuiaRemisionConstantesFunciones.LABEL_IDCONSULTOR;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=GuiaRemisionConstantesFunciones.LABEL_IDTRANSPORTE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=GuiaRemisionConstantesFunciones.LABEL_IDSUBCLIENTE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=GuiaRemisionConstantesFunciones.LABEL_IDEMPLEADO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=GuiaRemisionConstantesFunciones.LABEL_IDCIUDADORIGEN;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=GuiaRemisionConstantesFunciones.LABEL_IDCIUDADDESTINO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=GuiaRemisionConstantesFunciones.LABEL_IDTIPOLLAMADA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=GuiaRemisionConstantesFunciones.LABEL_HORAINICIO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=GuiaRemisionConstantesFunciones.LABEL_HORAFIN;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=GuiaRemisionConstantesFunciones.LABEL_CUPO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=GuiaRemisionConstantesFunciones.LABEL_SALDO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=GuiaRemisionConstantesFunciones.LABEL_DOCUMENTO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=GuiaRemisionConstantesFunciones.LABEL_DISPONIBLE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=GuiaRemisionConstantesFunciones.LABEL_DESCRIPCION;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=GuiaRemisionConstantesFunciones.LABEL_TOTALIVA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=GuiaRemisionConstantesFunciones.LABEL_TOTALSINIVA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=GuiaRemisionConstantesFunciones.LABEL_DESCUENTO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=GuiaRemisionConstantesFunciones.LABEL_FLETE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=GuiaRemisionConstantesFunciones.LABEL_OTRO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=GuiaRemisionConstantesFunciones.LABEL_FINANCIAMIENTO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=GuiaRemisionConstantesFunciones.LABEL_IVA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=GuiaRemisionConstantesFunciones.LABEL_TOTAL;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=GuiaRemisionConstantesFunciones.LABEL_MONTORETENCION;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=GuiaRemisionConstantesFunciones.LABEL_IDTIPOCAMBIO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=GuiaRemisionConstantesFunciones.LABEL_FECHA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=GuiaRemisionConstantesFunciones.LABEL_RUCCLIENTE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=GuiaRemisionConstantesFunciones.LABEL_NOMBRECLIENTE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=GuiaRemisionConstantesFunciones.LABEL_TELEFONOCLIENTE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=GuiaRemisionConstantesFunciones.LABEL_DIRECCIONCLIENTE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=GuiaRemisionConstantesFunciones.LABEL_NUMEROPREIMPRESO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=GuiaRemisionConstantesFunciones.LABEL_PESOBRUTO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=GuiaRemisionConstantesFunciones.LABEL_FECHAAUTORIZACION;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=GuiaRemisionConstantesFunciones.LABEL_FECHAVENCIMIENTO;
		
		return sFilaCabecera;
	}
	
	public String getFilaDatosExportarGuiaRemision(GuiaRemision guiaremision,String sDelimiter) {
		String sFilaDatos="";
		
		sFilaDatos+="\r\n";
		
		
		sFilaDatos+=guiaremision.getId().toString();

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
			sFilaDatos+=sDelimiter;
		sFilaDatos+=guiaremision.getVersionRow().toString();
		}

		sFilaDatos+=sDelimiter;
		sFilaDatos+=guiaremision.getempresa_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=guiaremision.getsucursal_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=guiaremision.getejercicio_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=guiaremision.getperiodo_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=guiaremision.getusuario_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=guiaremision.getsecuencial();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=guiaremision.getfecha_emision().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=guiaremision.getformato_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=guiaremision.gettipoprecio_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=guiaremision.getmoneda_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=guiaremision.getnumero_camion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=guiaremision.getcliente_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=guiaremision.getvendedor_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=guiaremision.getfactura_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=guiaremision.gettransportista_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=guiaremision.getidentificacion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=guiaremision.getfecha_origen().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=guiaremision.getfecha_destino().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=guiaremision.gettransporte_codigo();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=guiaremision.getcantidad_bultos().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=guiaremision.getconsultor_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=guiaremision.gettransporte_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=guiaremision.getsubcliente_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=guiaremision.getempleado_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=guiaremision.getciudadorigen_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=guiaremision.getciudaddestino_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=guiaremision.gettipollamada_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=guiaremision.gethora_inicio().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=guiaremision.gethora_fin().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=guiaremision.getcupo().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=guiaremision.getsaldo().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=guiaremision.getdocumento().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=guiaremision.getdisponible().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=guiaremision.getdescripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=guiaremision.gettotal_iva().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=guiaremision.gettotal_sin_iva().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=guiaremision.getdescuento().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=guiaremision.getflete().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=guiaremision.getotro().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=guiaremision.getfinanciamiento().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=guiaremision.getiva().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=guiaremision.gettotal().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=guiaremision.getmonto_retencion().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=guiaremision.gettipocambio_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=guiaremision.getfecha().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=guiaremision.getruc_cliente();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=guiaremision.getnombre_cliente();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=guiaremision.gettelefono_cliente();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=guiaremision.getdireccion_cliente();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=guiaremision.getnumero_pre_impreso();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=guiaremision.getpeso_bruto().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=guiaremision.getfecha_autorizacion().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=guiaremision.getfecha_vencimiento().toString();
		
		return sFilaDatos;
	}
	
	//@SuppressWarnings("deprecation")
	public void exportarExcelGuiaRemisionsSeleccionados() throws Exception {
		ArrayList<GuiaRemision> guiaremisionsSeleccionados=new ArrayList<GuiaRemision>();		
		
		guiaremisionsSeleccionados=this.getGuiaRemisionsSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"guiaremision.xls";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		FileOutputStream fileOutputStream=null;
		
		try {
			HSSFWorkbook workbook = new HSSFWorkbook();
			HSSFSheet sheet = workbook.createSheet("GuiaRemisions");
						
		    			
			Integer iRow=0;
			Integer iCell=0;
			
			HSSFRow row = sheet.createRow(iRow);
			HSSFCell cell = row.createCell(iCell);
			//cell.setCellValue("Blahblah");

			if(conCabecera) {
				this.getFilaCabeceraExportarExcelGuiaRemision(row);				
				iRow++;
			}				
			
			for(GuiaRemision guiaremisionAux:guiaremisionsSeleccionados) {
				row = sheet.createRow(iRow);
				
				this.getFilaDatosExportarExcelGuiaRemision(guiaremisionAux,row);
				
				iRow++;
			}
			
			
			fileOutputStream = new FileOutputStream(new File(sPath));
		    
			workbook.write(fileOutputStream);
			
			//fileOutputStream.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.guiaremisionSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Guia Remision",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			
       		if (fileOutputStream != null) {
				fileOutputStream.close();
			}			
		}
	}		
	
	public void exportarXmlGuiaRemisionsSeleccionados() throws Exception {
		ArrayList<GuiaRemision> guiaremisionsSeleccionados=new ArrayList<GuiaRemision>();		
		
		guiaremisionsSeleccionados=this.getGuiaRemisionsSeleccionados(true);
		
		//String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		//Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		//String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"guiaremision.xml";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		DocumentBuilderFactory documentBuilderFactory=null;
		DocumentBuilder documentBuilder =null;
		
		try {
			documentBuilderFactory = DocumentBuilderFactory.newInstance();
			documentBuilder = documentBuilderFactory.newDocumentBuilder();
	
			Document document = documentBuilder.newDocument();
			Element elementRoot = document.createElement("guiaremisions");
			
			document.appendChild(elementRoot);
		    			
												
			Element element = null;//document.createElement("guiaremision");
			//elementRoot.appendChild(element);
		
			for(GuiaRemision guiaremisionAux:guiaremisionsSeleccionados) {
				element = document.createElement("guiaremision");
				elementRoot.appendChild(element);
			
				this.setFilaDatosExportarXmlGuiaRemision(guiaremisionAux,document,element);
			}
			
			TransformerFactory transformerFactory = TransformerFactory.newInstance();
			Transformer transformer = transformerFactory.newTransformer();
			DOMSource domSource = new DOMSource(document);
			
			StreamResult streamResult = new StreamResult(new File(sPath));
	
			transformer.transform(domSource, streamResult);
						
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.guiaremisionSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Guia Remision",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			       				
		}
	}	
	
	//@SuppressWarnings("deprecation")
	public void getFilaCabeceraExportarExcelGuiaRemision(HSSFRow row) {
		Integer iColumn=0;
		
		
		HSSFCell cell =null;
		cell = row.createCell(iColumn++);cell.setCellValue(GuiaRemisionConstantesFunciones.LABEL_ID);

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
		cell = row.createCell(iColumn++);cell.setCellValue(GuiaRemisionConstantesFunciones.LABEL_VERSIONROW);
		}

		cell = row.createCell(iColumn++);cell.setCellValue(GuiaRemisionConstantesFunciones.LABEL_IDEMPRESA);
		cell = row.createCell(iColumn++);cell.setCellValue(GuiaRemisionConstantesFunciones.LABEL_IDSUCURSAL);
		cell = row.createCell(iColumn++);cell.setCellValue(GuiaRemisionConstantesFunciones.LABEL_IDEJERCICIO);
		cell = row.createCell(iColumn++);cell.setCellValue(GuiaRemisionConstantesFunciones.LABEL_IDPERIODO);
		cell = row.createCell(iColumn++);cell.setCellValue(GuiaRemisionConstantesFunciones.LABEL_IDUSUARIO);
		cell = row.createCell(iColumn++);cell.setCellValue(GuiaRemisionConstantesFunciones.LABEL_SECUENCIAL);
		cell = row.createCell(iColumn++);cell.setCellValue(GuiaRemisionConstantesFunciones.LABEL_FECHAEMISION);
		cell = row.createCell(iColumn++);cell.setCellValue(GuiaRemisionConstantesFunciones.LABEL_IDFORMATO);
		cell = row.createCell(iColumn++);cell.setCellValue(GuiaRemisionConstantesFunciones.LABEL_IDTIPOPRECIO);
		cell = row.createCell(iColumn++);cell.setCellValue(GuiaRemisionConstantesFunciones.LABEL_IDMONEDA);
		cell = row.createCell(iColumn++);cell.setCellValue(GuiaRemisionConstantesFunciones.LABEL_NUMEROCAMION);
		cell = row.createCell(iColumn++);cell.setCellValue(GuiaRemisionConstantesFunciones.LABEL_IDCLIENTE);
		cell = row.createCell(iColumn++);cell.setCellValue(GuiaRemisionConstantesFunciones.LABEL_IDVENDEDOR);
		cell = row.createCell(iColumn++);cell.setCellValue(GuiaRemisionConstantesFunciones.LABEL_IDFACTURA);
		cell = row.createCell(iColumn++);cell.setCellValue(GuiaRemisionConstantesFunciones.LABEL_IDTRANSPORTISTA);
		cell = row.createCell(iColumn++);cell.setCellValue(GuiaRemisionConstantesFunciones.LABEL_IDENTIFICACION);
		cell = row.createCell(iColumn++);cell.setCellValue(GuiaRemisionConstantesFunciones.LABEL_FECHAORIGEN);
		cell = row.createCell(iColumn++);cell.setCellValue(GuiaRemisionConstantesFunciones.LABEL_FECHADESTINO);
		cell = row.createCell(iColumn++);cell.setCellValue(GuiaRemisionConstantesFunciones.LABEL_TRANSPORTECODIGO);
		cell = row.createCell(iColumn++);cell.setCellValue(GuiaRemisionConstantesFunciones.LABEL_CANTIDADBULTOS);
		cell = row.createCell(iColumn++);cell.setCellValue(GuiaRemisionConstantesFunciones.LABEL_IDCONSULTOR);
		cell = row.createCell(iColumn++);cell.setCellValue(GuiaRemisionConstantesFunciones.LABEL_IDTRANSPORTE);
		cell = row.createCell(iColumn++);cell.setCellValue(GuiaRemisionConstantesFunciones.LABEL_IDSUBCLIENTE);
		cell = row.createCell(iColumn++);cell.setCellValue(GuiaRemisionConstantesFunciones.LABEL_IDEMPLEADO);
		cell = row.createCell(iColumn++);cell.setCellValue(GuiaRemisionConstantesFunciones.LABEL_IDCIUDADORIGEN);
		cell = row.createCell(iColumn++);cell.setCellValue(GuiaRemisionConstantesFunciones.LABEL_IDCIUDADDESTINO);
		cell = row.createCell(iColumn++);cell.setCellValue(GuiaRemisionConstantesFunciones.LABEL_IDTIPOLLAMADA);
		cell = row.createCell(iColumn++);cell.setCellValue(GuiaRemisionConstantesFunciones.LABEL_HORAINICIO);
		cell = row.createCell(iColumn++);cell.setCellValue(GuiaRemisionConstantesFunciones.LABEL_HORAFIN);
		cell = row.createCell(iColumn++);cell.setCellValue(GuiaRemisionConstantesFunciones.LABEL_CUPO);
		cell = row.createCell(iColumn++);cell.setCellValue(GuiaRemisionConstantesFunciones.LABEL_SALDO);
		cell = row.createCell(iColumn++);cell.setCellValue(GuiaRemisionConstantesFunciones.LABEL_DOCUMENTO);
		cell = row.createCell(iColumn++);cell.setCellValue(GuiaRemisionConstantesFunciones.LABEL_DISPONIBLE);
		cell = row.createCell(iColumn++);cell.setCellValue(GuiaRemisionConstantesFunciones.LABEL_DESCRIPCION);
		cell = row.createCell(iColumn++);cell.setCellValue(GuiaRemisionConstantesFunciones.LABEL_TOTALIVA);
		cell = row.createCell(iColumn++);cell.setCellValue(GuiaRemisionConstantesFunciones.LABEL_TOTALSINIVA);
		cell = row.createCell(iColumn++);cell.setCellValue(GuiaRemisionConstantesFunciones.LABEL_DESCUENTO);
		cell = row.createCell(iColumn++);cell.setCellValue(GuiaRemisionConstantesFunciones.LABEL_FLETE);
		cell = row.createCell(iColumn++);cell.setCellValue(GuiaRemisionConstantesFunciones.LABEL_OTRO);
		cell = row.createCell(iColumn++);cell.setCellValue(GuiaRemisionConstantesFunciones.LABEL_FINANCIAMIENTO);
		cell = row.createCell(iColumn++);cell.setCellValue(GuiaRemisionConstantesFunciones.LABEL_IVA);
		cell = row.createCell(iColumn++);cell.setCellValue(GuiaRemisionConstantesFunciones.LABEL_TOTAL);
		cell = row.createCell(iColumn++);cell.setCellValue(GuiaRemisionConstantesFunciones.LABEL_MONTORETENCION);
		cell = row.createCell(iColumn++);cell.setCellValue(GuiaRemisionConstantesFunciones.LABEL_IDTIPOCAMBIO);
		cell = row.createCell(iColumn++);cell.setCellValue(GuiaRemisionConstantesFunciones.LABEL_FECHA);
		cell = row.createCell(iColumn++);cell.setCellValue(GuiaRemisionConstantesFunciones.LABEL_RUCCLIENTE);
		cell = row.createCell(iColumn++);cell.setCellValue(GuiaRemisionConstantesFunciones.LABEL_NOMBRECLIENTE);
		cell = row.createCell(iColumn++);cell.setCellValue(GuiaRemisionConstantesFunciones.LABEL_TELEFONOCLIENTE);
		cell = row.createCell(iColumn++);cell.setCellValue(GuiaRemisionConstantesFunciones.LABEL_DIRECCIONCLIENTE);
		cell = row.createCell(iColumn++);cell.setCellValue(GuiaRemisionConstantesFunciones.LABEL_NUMEROPREIMPRESO);
		cell = row.createCell(iColumn++);cell.setCellValue(GuiaRemisionConstantesFunciones.LABEL_PESOBRUTO);
		cell = row.createCell(iColumn++);cell.setCellValue(GuiaRemisionConstantesFunciones.LABEL_FECHAAUTORIZACION);
		cell = row.createCell(iColumn++);cell.setCellValue(GuiaRemisionConstantesFunciones.LABEL_FECHAVENCIMIENTO);
	}
	
	//@SuppressWarnings("deprecation")
	public void getFilaDatosExportarExcelGuiaRemision(GuiaRemision guiaremision,HSSFRow row) {
		Integer iColumn=0;
		
		
		HSSFCell cell =null;
		cell = row.createCell(iColumn++);cell.setCellValue(guiaremision.getId());
		cell = row.createCell(iColumn++);cell.setCellValue(guiaremision.getempresa_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(guiaremision.getsucursal_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(guiaremision.getejercicio_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(guiaremision.getperiodo_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(guiaremision.getusuario_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(guiaremision.getsecuencial());
		cell = row.createCell(iColumn++);cell.setCellValue(guiaremision.getfecha_emision());
		cell = row.createCell(iColumn++);cell.setCellValue(guiaremision.getformato_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(guiaremision.gettipoprecio_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(guiaremision.getmoneda_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(guiaremision.getnumero_camion());
		cell = row.createCell(iColumn++);cell.setCellValue(guiaremision.getcliente_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(guiaremision.getvendedor_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(guiaremision.getfactura_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(guiaremision.gettransportista_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(guiaremision.getidentificacion());
		cell = row.createCell(iColumn++);cell.setCellValue(guiaremision.getfecha_origen());
		cell = row.createCell(iColumn++);cell.setCellValue(guiaremision.getfecha_destino());
		cell = row.createCell(iColumn++);cell.setCellValue(guiaremision.gettransporte_codigo());
		cell = row.createCell(iColumn++);cell.setCellValue(guiaremision.getcantidad_bultos());
		cell = row.createCell(iColumn++);cell.setCellValue(guiaremision.getconsultor_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(guiaremision.gettransporte_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(guiaremision.getsubcliente_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(guiaremision.getempleado_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(guiaremision.getciudadorigen_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(guiaremision.getciudaddestino_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(guiaremision.gettipollamada_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(guiaremision.gethora_inicio());
		cell = row.createCell(iColumn++);cell.setCellValue(guiaremision.gethora_fin());
		cell = row.createCell(iColumn++);cell.setCellValue(guiaremision.getcupo());
		cell = row.createCell(iColumn++);cell.setCellValue(guiaremision.getsaldo());
		cell = row.createCell(iColumn++);cell.setCellValue(guiaremision.getdocumento());
		cell = row.createCell(iColumn++);cell.setCellValue(guiaremision.getdisponible());
		cell = row.createCell(iColumn++);cell.setCellValue(guiaremision.getdescripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(guiaremision.gettotal_iva());
		cell = row.createCell(iColumn++);cell.setCellValue(guiaremision.gettotal_sin_iva());
		cell = row.createCell(iColumn++);cell.setCellValue(guiaremision.getdescuento());
		cell = row.createCell(iColumn++);cell.setCellValue(guiaremision.getflete());
		cell = row.createCell(iColumn++);cell.setCellValue(guiaremision.getotro());
		cell = row.createCell(iColumn++);cell.setCellValue(guiaremision.getfinanciamiento());
		cell = row.createCell(iColumn++);cell.setCellValue(guiaremision.getiva());
		cell = row.createCell(iColumn++);cell.setCellValue(guiaremision.gettotal());
		cell = row.createCell(iColumn++);cell.setCellValue(guiaremision.getmonto_retencion());
		cell = row.createCell(iColumn++);cell.setCellValue(guiaremision.gettipocambio_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(guiaremision.getfecha());
		cell = row.createCell(iColumn++);cell.setCellValue(guiaremision.getruc_cliente());
		cell = row.createCell(iColumn++);cell.setCellValue(guiaremision.getnombre_cliente());
		cell = row.createCell(iColumn++);cell.setCellValue(guiaremision.gettelefono_cliente());
		cell = row.createCell(iColumn++);cell.setCellValue(guiaremision.getdireccion_cliente());
		cell = row.createCell(iColumn++);cell.setCellValue(guiaremision.getnumero_pre_impreso());
		cell = row.createCell(iColumn++);cell.setCellValue(guiaremision.getpeso_bruto());
		cell = row.createCell(iColumn++);cell.setCellValue(guiaremision.getfecha_autorizacion());
		cell = row.createCell(iColumn++);cell.setCellValue(guiaremision.getfecha_vencimiento());				
	}
	
	public void setFilaDatosExportarXmlGuiaRemision(GuiaRemision guiaremision,Document document,Element element) {
		/*
		Element lastname = document.createElement("lastname");
		lastname.appendChild(document.createTextNode("mook kim"));
		element.appendChild(lastname);
		*/
		

		Element elementId = document.createElement(GuiaRemisionConstantesFunciones.ID);
		elementId.appendChild(document.createTextNode(guiaremision.getId().toString().trim()));
		element.appendChild(elementId);

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){

		Element elementVersionRow = document.createElement(GuiaRemisionConstantesFunciones.VERSIONROW);
		elementVersionRow.appendChild(document.createTextNode(guiaremision.getVersionRow().toString().trim()));
		element.appendChild(elementVersionRow);
		}


		Element elementempresa_descripcion = document.createElement(GuiaRemisionConstantesFunciones.IDEMPRESA);
		elementempresa_descripcion.appendChild(document.createTextNode(guiaremision.getempresa_descripcion()));
		element.appendChild(elementempresa_descripcion);

		Element elementsucursal_descripcion = document.createElement(GuiaRemisionConstantesFunciones.IDSUCURSAL);
		elementsucursal_descripcion.appendChild(document.createTextNode(guiaremision.getsucursal_descripcion()));
		element.appendChild(elementsucursal_descripcion);

		Element elementejercicio_descripcion = document.createElement(GuiaRemisionConstantesFunciones.IDEJERCICIO);
		elementejercicio_descripcion.appendChild(document.createTextNode(guiaremision.getejercicio_descripcion()));
		element.appendChild(elementejercicio_descripcion);

		Element elementperiodo_descripcion = document.createElement(GuiaRemisionConstantesFunciones.IDPERIODO);
		elementperiodo_descripcion.appendChild(document.createTextNode(guiaremision.getperiodo_descripcion()));
		element.appendChild(elementperiodo_descripcion);

		Element elementusuario_descripcion = document.createElement(GuiaRemisionConstantesFunciones.IDUSUARIO);
		elementusuario_descripcion.appendChild(document.createTextNode(guiaremision.getusuario_descripcion()));
		element.appendChild(elementusuario_descripcion);

		Element elementsecuencial = document.createElement(GuiaRemisionConstantesFunciones.SECUENCIAL);
		elementsecuencial.appendChild(document.createTextNode(guiaremision.getsecuencial().trim()));
		element.appendChild(elementsecuencial);

		Element elementfecha_emision = document.createElement(GuiaRemisionConstantesFunciones.FECHAEMISION);
		elementfecha_emision.appendChild(document.createTextNode(guiaremision.getfecha_emision().toString().trim()));
		element.appendChild(elementfecha_emision);

		Element elementformato_descripcion = document.createElement(GuiaRemisionConstantesFunciones.IDFORMATO);
		elementformato_descripcion.appendChild(document.createTextNode(guiaremision.getformato_descripcion()));
		element.appendChild(elementformato_descripcion);

		Element elementtipoprecio_descripcion = document.createElement(GuiaRemisionConstantesFunciones.IDTIPOPRECIO);
		elementtipoprecio_descripcion.appendChild(document.createTextNode(guiaremision.gettipoprecio_descripcion()));
		element.appendChild(elementtipoprecio_descripcion);

		Element elementmoneda_descripcion = document.createElement(GuiaRemisionConstantesFunciones.IDMONEDA);
		elementmoneda_descripcion.appendChild(document.createTextNode(guiaremision.getmoneda_descripcion()));
		element.appendChild(elementmoneda_descripcion);

		Element elementnumero_camion = document.createElement(GuiaRemisionConstantesFunciones.NUMEROCAMION);
		elementnumero_camion.appendChild(document.createTextNode(guiaremision.getnumero_camion().trim()));
		element.appendChild(elementnumero_camion);

		Element elementcliente_descripcion = document.createElement(GuiaRemisionConstantesFunciones.IDCLIENTE);
		elementcliente_descripcion.appendChild(document.createTextNode(guiaremision.getcliente_descripcion()));
		element.appendChild(elementcliente_descripcion);

		Element elementvendedor_descripcion = document.createElement(GuiaRemisionConstantesFunciones.IDVENDEDOR);
		elementvendedor_descripcion.appendChild(document.createTextNode(guiaremision.getvendedor_descripcion()));
		element.appendChild(elementvendedor_descripcion);

		Element elementfactura_descripcion = document.createElement(GuiaRemisionConstantesFunciones.IDFACTURA);
		elementfactura_descripcion.appendChild(document.createTextNode(guiaremision.getfactura_descripcion()));
		element.appendChild(elementfactura_descripcion);

		Element elementtransportista_descripcion = document.createElement(GuiaRemisionConstantesFunciones.IDTRANSPORTISTA);
		elementtransportista_descripcion.appendChild(document.createTextNode(guiaremision.gettransportista_descripcion()));
		element.appendChild(elementtransportista_descripcion);

		Element elementidentificacion = document.createElement(GuiaRemisionConstantesFunciones.IDENTIFICACION);
		elementidentificacion.appendChild(document.createTextNode(guiaremision.getidentificacion().trim()));
		element.appendChild(elementidentificacion);

		Element elementfecha_origen = document.createElement(GuiaRemisionConstantesFunciones.FECHAORIGEN);
		elementfecha_origen.appendChild(document.createTextNode(guiaremision.getfecha_origen().toString().trim()));
		element.appendChild(elementfecha_origen);

		Element elementfecha_destino = document.createElement(GuiaRemisionConstantesFunciones.FECHADESTINO);
		elementfecha_destino.appendChild(document.createTextNode(guiaremision.getfecha_destino().toString().trim()));
		element.appendChild(elementfecha_destino);

		Element elementtransporte_codigo = document.createElement(GuiaRemisionConstantesFunciones.TRANSPORTECODIGO);
		elementtransporte_codigo.appendChild(document.createTextNode(guiaremision.gettransporte_codigo().trim()));
		element.appendChild(elementtransporte_codigo);

		Element elementcantidad_bultos = document.createElement(GuiaRemisionConstantesFunciones.CANTIDADBULTOS);
		elementcantidad_bultos.appendChild(document.createTextNode(guiaremision.getcantidad_bultos().toString().trim()));
		element.appendChild(elementcantidad_bultos);

		Element elementconsultor_descripcion = document.createElement(GuiaRemisionConstantesFunciones.IDCONSULTOR);
		elementconsultor_descripcion.appendChild(document.createTextNode(guiaremision.getconsultor_descripcion()));
		element.appendChild(elementconsultor_descripcion);

		Element elementtransporte_descripcion = document.createElement(GuiaRemisionConstantesFunciones.IDTRANSPORTE);
		elementtransporte_descripcion.appendChild(document.createTextNode(guiaremision.gettransporte_descripcion()));
		element.appendChild(elementtransporte_descripcion);

		Element elementsubcliente_descripcion = document.createElement(GuiaRemisionConstantesFunciones.IDSUBCLIENTE);
		elementsubcliente_descripcion.appendChild(document.createTextNode(guiaremision.getsubcliente_descripcion()));
		element.appendChild(elementsubcliente_descripcion);

		Element elementempleado_descripcion = document.createElement(GuiaRemisionConstantesFunciones.IDEMPLEADO);
		elementempleado_descripcion.appendChild(document.createTextNode(guiaremision.getempleado_descripcion()));
		element.appendChild(elementempleado_descripcion);

		Element elementciudadorigen_descripcion = document.createElement(GuiaRemisionConstantesFunciones.IDCIUDADORIGEN);
		elementciudadorigen_descripcion.appendChild(document.createTextNode(guiaremision.getciudadorigen_descripcion()));
		element.appendChild(elementciudadorigen_descripcion);

		Element elementciudaddestino_descripcion = document.createElement(GuiaRemisionConstantesFunciones.IDCIUDADDESTINO);
		elementciudaddestino_descripcion.appendChild(document.createTextNode(guiaremision.getciudaddestino_descripcion()));
		element.appendChild(elementciudaddestino_descripcion);

		Element elementtipollamada_descripcion = document.createElement(GuiaRemisionConstantesFunciones.IDTIPOLLAMADA);
		elementtipollamada_descripcion.appendChild(document.createTextNode(guiaremision.gettipollamada_descripcion()));
		element.appendChild(elementtipollamada_descripcion);

		Element elementhora_inicio = document.createElement(GuiaRemisionConstantesFunciones.HORAINICIO);
		elementhora_inicio.appendChild(document.createTextNode(guiaremision.gethora_inicio().toString().trim()));
		element.appendChild(elementhora_inicio);

		Element elementhora_fin = document.createElement(GuiaRemisionConstantesFunciones.HORAFIN);
		elementhora_fin.appendChild(document.createTextNode(guiaremision.gethora_fin().toString().trim()));
		element.appendChild(elementhora_fin);

		Element elementcupo = document.createElement(GuiaRemisionConstantesFunciones.CUPO);
		elementcupo.appendChild(document.createTextNode(guiaremision.getcupo().toString().trim()));
		element.appendChild(elementcupo);

		Element elementsaldo = document.createElement(GuiaRemisionConstantesFunciones.SALDO);
		elementsaldo.appendChild(document.createTextNode(guiaremision.getsaldo().toString().trim()));
		element.appendChild(elementsaldo);

		Element elementdocumento = document.createElement(GuiaRemisionConstantesFunciones.DOCUMENTO);
		elementdocumento.appendChild(document.createTextNode(guiaremision.getdocumento().toString().trim()));
		element.appendChild(elementdocumento);

		Element elementdisponible = document.createElement(GuiaRemisionConstantesFunciones.DISPONIBLE);
		elementdisponible.appendChild(document.createTextNode(guiaremision.getdisponible().toString().trim()));
		element.appendChild(elementdisponible);

		Element elementdescripcion = document.createElement(GuiaRemisionConstantesFunciones.DESCRIPCION);
		elementdescripcion.appendChild(document.createTextNode(guiaremision.getdescripcion().trim()));
		element.appendChild(elementdescripcion);

		Element elementtotal_iva = document.createElement(GuiaRemisionConstantesFunciones.TOTALIVA);
		elementtotal_iva.appendChild(document.createTextNode(guiaremision.gettotal_iva().toString().trim()));
		element.appendChild(elementtotal_iva);

		Element elementtotal_sin_iva = document.createElement(GuiaRemisionConstantesFunciones.TOTALSINIVA);
		elementtotal_sin_iva.appendChild(document.createTextNode(guiaremision.gettotal_sin_iva().toString().trim()));
		element.appendChild(elementtotal_sin_iva);

		Element elementdescuento = document.createElement(GuiaRemisionConstantesFunciones.DESCUENTO);
		elementdescuento.appendChild(document.createTextNode(guiaremision.getdescuento().toString().trim()));
		element.appendChild(elementdescuento);

		Element elementflete = document.createElement(GuiaRemisionConstantesFunciones.FLETE);
		elementflete.appendChild(document.createTextNode(guiaremision.getflete().toString().trim()));
		element.appendChild(elementflete);

		Element elementotro = document.createElement(GuiaRemisionConstantesFunciones.OTRO);
		elementotro.appendChild(document.createTextNode(guiaremision.getotro().toString().trim()));
		element.appendChild(elementotro);

		Element elementfinanciamiento = document.createElement(GuiaRemisionConstantesFunciones.FINANCIAMIENTO);
		elementfinanciamiento.appendChild(document.createTextNode(guiaremision.getfinanciamiento().toString().trim()));
		element.appendChild(elementfinanciamiento);

		Element elementiva = document.createElement(GuiaRemisionConstantesFunciones.IVA);
		elementiva.appendChild(document.createTextNode(guiaremision.getiva().toString().trim()));
		element.appendChild(elementiva);

		Element elementtotal = document.createElement(GuiaRemisionConstantesFunciones.TOTAL);
		elementtotal.appendChild(document.createTextNode(guiaremision.gettotal().toString().trim()));
		element.appendChild(elementtotal);

		Element elementmonto_retencion = document.createElement(GuiaRemisionConstantesFunciones.MONTORETENCION);
		elementmonto_retencion.appendChild(document.createTextNode(guiaremision.getmonto_retencion().toString().trim()));
		element.appendChild(elementmonto_retencion);

		Element elementtipocambio_descripcion = document.createElement(GuiaRemisionConstantesFunciones.IDTIPOCAMBIO);
		elementtipocambio_descripcion.appendChild(document.createTextNode(guiaremision.gettipocambio_descripcion()));
		element.appendChild(elementtipocambio_descripcion);

		Element elementfecha = document.createElement(GuiaRemisionConstantesFunciones.FECHA);
		elementfecha.appendChild(document.createTextNode(guiaremision.getfecha().toString().trim()));
		element.appendChild(elementfecha);

		Element elementruc_cliente = document.createElement(GuiaRemisionConstantesFunciones.RUCCLIENTE);
		elementruc_cliente.appendChild(document.createTextNode(guiaremision.getruc_cliente().trim()));
		element.appendChild(elementruc_cliente);

		Element elementnombre_cliente = document.createElement(GuiaRemisionConstantesFunciones.NOMBRECLIENTE);
		elementnombre_cliente.appendChild(document.createTextNode(guiaremision.getnombre_cliente().trim()));
		element.appendChild(elementnombre_cliente);

		Element elementtelefono_cliente = document.createElement(GuiaRemisionConstantesFunciones.TELEFONOCLIENTE);
		elementtelefono_cliente.appendChild(document.createTextNode(guiaremision.gettelefono_cliente().trim()));
		element.appendChild(elementtelefono_cliente);

		Element elementdireccion_cliente = document.createElement(GuiaRemisionConstantesFunciones.DIRECCIONCLIENTE);
		elementdireccion_cliente.appendChild(document.createTextNode(guiaremision.getdireccion_cliente().trim()));
		element.appendChild(elementdireccion_cliente);

		Element elementnumero_pre_impreso = document.createElement(GuiaRemisionConstantesFunciones.NUMEROPREIMPRESO);
		elementnumero_pre_impreso.appendChild(document.createTextNode(guiaremision.getnumero_pre_impreso().trim()));
		element.appendChild(elementnumero_pre_impreso);

		Element elementpeso_bruto = document.createElement(GuiaRemisionConstantesFunciones.PESOBRUTO);
		elementpeso_bruto.appendChild(document.createTextNode(guiaremision.getpeso_bruto().toString().trim()));
		element.appendChild(elementpeso_bruto);

		Element elementfecha_autorizacion = document.createElement(GuiaRemisionConstantesFunciones.FECHAAUTORIZACION);
		elementfecha_autorizacion.appendChild(document.createTextNode(guiaremision.getfecha_autorizacion().toString().trim()));
		element.appendChild(elementfecha_autorizacion);

		Element elementfecha_vencimiento = document.createElement(GuiaRemisionConstantesFunciones.FECHAVENCIMIENTO);
		elementfecha_vencimiento.appendChild(document.createTextNode(guiaremision.getfecha_vencimiento().toString().trim()));
		element.appendChild(elementfecha_vencimiento);
	}
	
	public void generarReporteGroupGenericoGuiaRemisionsSeleccionados(Boolean soloTotales) throws Exception {
		ArrayList<GuiaRemision> guiaremisionsSeleccionados=new ArrayList<GuiaRemision>();
		
		guiaremisionsSeleccionados=this.getGuiaRemisionsSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
		
		/*
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		if(!soloTotales) {
			this.sTipoReporteExtra=Constantes2.S_REPORTE_EXTRA_GROUP_GENERICO;
		} else {
			this.sTipoReporteExtra=Constantes2.S_REPORTE_EXTRA_GROUP_TOTALES_GENERICO;
		}
		
		this.setColumnaDescripcionReporteGroupGenericoGuiaRemision(guiaremisionsSeleccionados);
		
		this.generarReporteGuiaRemisions("Todos",guiaremisionsSeleccionados);
	}
	
	public void setColumnaDescripcionReporteGroupGenericoGuiaRemision(ArrayList<GuiaRemision> guiaremisionsSeleccionados) throws Exception {    		
		try {
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			
			Boolean existe=false;
			
			for(GuiaRemision guiaremisionAux:guiaremisionsSeleccionados) {
				guiaremisionAux.setsDetalleGeneralEntityReporte(guiaremisionAux.toString());
			
				if(sTipoSeleccionar.equals(GuiaRemisionConstantesFunciones.LABEL_IDEMPRESA)) {
					existe=true;
					guiaremisionAux.setsDescripcionGeneralEntityReporte1(guiaremisionAux.getempresa_descripcion());
				}
				 else if(sTipoSeleccionar.equals(GuiaRemisionConstantesFunciones.LABEL_IDSUCURSAL)) {
					existe=true;
					guiaremisionAux.setsDescripcionGeneralEntityReporte1(guiaremisionAux.getsucursal_descripcion());
				}
				 else if(sTipoSeleccionar.equals(GuiaRemisionConstantesFunciones.LABEL_IDEJERCICIO)) {
					existe=true;
					guiaremisionAux.setsDescripcionGeneralEntityReporte1(guiaremisionAux.getejercicio_descripcion());
				}
				 else if(sTipoSeleccionar.equals(GuiaRemisionConstantesFunciones.LABEL_IDPERIODO)) {
					existe=true;
					guiaremisionAux.setsDescripcionGeneralEntityReporte1(guiaremisionAux.getperiodo_descripcion());
				}
				 else if(sTipoSeleccionar.equals(GuiaRemisionConstantesFunciones.LABEL_IDUSUARIO)) {
					existe=true;
					guiaremisionAux.setsDescripcionGeneralEntityReporte1(guiaremisionAux.getusuario_descripcion());
				}
				 else if(sTipoSeleccionar.equals(GuiaRemisionConstantesFunciones.LABEL_SECUENCIAL)) {
					existe=true;
					guiaremisionAux.setsDescripcionGeneralEntityReporte1(guiaremisionAux.getsecuencial());
				}
				 else if(sTipoSeleccionar.equals(GuiaRemisionConstantesFunciones.LABEL_FECHAEMISION)) {
					existe=true;
					guiaremisionAux.setsDescripcionGeneralEntityReporte1(Funciones2.getStringPostgresDate(guiaremisionAux.getfecha_emision()));
				}
				 else if(sTipoSeleccionar.equals(GuiaRemisionConstantesFunciones.LABEL_IDFORMATO)) {
					existe=true;
					guiaremisionAux.setsDescripcionGeneralEntityReporte1(guiaremisionAux.getformato_descripcion());
				}
				 else if(sTipoSeleccionar.equals(GuiaRemisionConstantesFunciones.LABEL_IDTIPOPRECIO)) {
					existe=true;
					guiaremisionAux.setsDescripcionGeneralEntityReporte1(guiaremisionAux.gettipoprecio_descripcion());
				}
				 else if(sTipoSeleccionar.equals(GuiaRemisionConstantesFunciones.LABEL_IDMONEDA)) {
					existe=true;
					guiaremisionAux.setsDescripcionGeneralEntityReporte1(guiaremisionAux.getmoneda_descripcion());
				}
				 else if(sTipoSeleccionar.equals(GuiaRemisionConstantesFunciones.LABEL_NUMEROCAMION)) {
					existe=true;
					guiaremisionAux.setsDescripcionGeneralEntityReporte1(guiaremisionAux.getnumero_camion());
				}
				 else if(sTipoSeleccionar.equals(GuiaRemisionConstantesFunciones.LABEL_IDCLIENTE)) {
					existe=true;
					guiaremisionAux.setsDescripcionGeneralEntityReporte1(guiaremisionAux.getcliente_descripcion());
				}
				 else if(sTipoSeleccionar.equals(GuiaRemisionConstantesFunciones.LABEL_IDVENDEDOR)) {
					existe=true;
					guiaremisionAux.setsDescripcionGeneralEntityReporte1(guiaremisionAux.getvendedor_descripcion());
				}
				 else if(sTipoSeleccionar.equals(GuiaRemisionConstantesFunciones.LABEL_IDFACTURA)) {
					existe=true;
					guiaremisionAux.setsDescripcionGeneralEntityReporte1(guiaremisionAux.getfactura_descripcion());
				}
				 else if(sTipoSeleccionar.equals(GuiaRemisionConstantesFunciones.LABEL_IDTRANSPORTISTA)) {
					existe=true;
					guiaremisionAux.setsDescripcionGeneralEntityReporte1(guiaremisionAux.gettransportista_descripcion());
				}
				 else if(sTipoSeleccionar.equals(GuiaRemisionConstantesFunciones.LABEL_IDENTIFICACION)) {
					existe=true;
					guiaremisionAux.setsDescripcionGeneralEntityReporte1(guiaremisionAux.getidentificacion());
				}
				 else if(sTipoSeleccionar.equals(GuiaRemisionConstantesFunciones.LABEL_FECHAORIGEN)) {
					existe=true;
					guiaremisionAux.setsDescripcionGeneralEntityReporte1(Funciones2.getStringPostgresDate(guiaremisionAux.getfecha_origen()));
				}
				 else if(sTipoSeleccionar.equals(GuiaRemisionConstantesFunciones.LABEL_FECHADESTINO)) {
					existe=true;
					guiaremisionAux.setsDescripcionGeneralEntityReporte1(Funciones2.getStringPostgresDate(guiaremisionAux.getfecha_destino()));
				}
				 else if(sTipoSeleccionar.equals(GuiaRemisionConstantesFunciones.LABEL_TRANSPORTECODIGO)) {
					existe=true;
					guiaremisionAux.setsDescripcionGeneralEntityReporte1(guiaremisionAux.gettransporte_codigo());
				}
				 else if(sTipoSeleccionar.equals(GuiaRemisionConstantesFunciones.LABEL_CANTIDADBULTOS)) {
					existe=true;
					guiaremisionAux.setsDescripcionGeneralEntityReporte1(guiaremisionAux.getcantidad_bultos().toString());
				}
				 else if(sTipoSeleccionar.equals(GuiaRemisionConstantesFunciones.LABEL_IDCONSULTOR)) {
					existe=true;
					guiaremisionAux.setsDescripcionGeneralEntityReporte1(guiaremisionAux.getconsultor_descripcion());
				}
				 else if(sTipoSeleccionar.equals(GuiaRemisionConstantesFunciones.LABEL_IDTRANSPORTE)) {
					existe=true;
					guiaremisionAux.setsDescripcionGeneralEntityReporte1(guiaremisionAux.gettransporte_descripcion());
				}
				 else if(sTipoSeleccionar.equals(GuiaRemisionConstantesFunciones.LABEL_IDSUBCLIENTE)) {
					existe=true;
					guiaremisionAux.setsDescripcionGeneralEntityReporte1(guiaremisionAux.getsubcliente_descripcion());
				}
				 else if(sTipoSeleccionar.equals(GuiaRemisionConstantesFunciones.LABEL_IDEMPLEADO)) {
					existe=true;
					guiaremisionAux.setsDescripcionGeneralEntityReporte1(guiaremisionAux.getempleado_descripcion());
				}
				 else if(sTipoSeleccionar.equals(GuiaRemisionConstantesFunciones.LABEL_IDCIUDADORIGEN)) {
					existe=true;
					guiaremisionAux.setsDescripcionGeneralEntityReporte1(guiaremisionAux.getciudadorigen_descripcion());
				}
				 else if(sTipoSeleccionar.equals(GuiaRemisionConstantesFunciones.LABEL_IDCIUDADDESTINO)) {
					existe=true;
					guiaremisionAux.setsDescripcionGeneralEntityReporte1(guiaremisionAux.getciudaddestino_descripcion());
				}
				 else if(sTipoSeleccionar.equals(GuiaRemisionConstantesFunciones.LABEL_IDTIPOLLAMADA)) {
					existe=true;
					guiaremisionAux.setsDescripcionGeneralEntityReporte1(guiaremisionAux.gettipollamada_descripcion());
				}
				 else if(sTipoSeleccionar.equals(GuiaRemisionConstantesFunciones.LABEL_HORAINICIO)) {
					existe=true;
					guiaremisionAux.setsDescripcionGeneralEntityReporte1(guiaremisionAux.gethora_inicio().toString());
				}
				 else if(sTipoSeleccionar.equals(GuiaRemisionConstantesFunciones.LABEL_HORAFIN)) {
					existe=true;
					guiaremisionAux.setsDescripcionGeneralEntityReporte1(guiaremisionAux.gethora_fin().toString());
				}
				 else if(sTipoSeleccionar.equals(GuiaRemisionConstantesFunciones.LABEL_DESCRIPCION)) {
					existe=true;
					guiaremisionAux.setsDescripcionGeneralEntityReporte1(guiaremisionAux.getdescripcion());
				}
				 else if(sTipoSeleccionar.equals(GuiaRemisionConstantesFunciones.LABEL_IDTIPOCAMBIO)) {
					existe=true;
					guiaremisionAux.setsDescripcionGeneralEntityReporte1(guiaremisionAux.gettipocambio_descripcion());
				}
				 else if(sTipoSeleccionar.equals(GuiaRemisionConstantesFunciones.LABEL_FECHA)) {
					existe=true;
					guiaremisionAux.setsDescripcionGeneralEntityReporte1(Funciones2.getStringPostgresDate(guiaremisionAux.getfecha()));
				}
				 else if(sTipoSeleccionar.equals(GuiaRemisionConstantesFunciones.LABEL_RUCCLIENTE)) {
					existe=true;
					guiaremisionAux.setsDescripcionGeneralEntityReporte1(guiaremisionAux.getruc_cliente());
				}
				 else if(sTipoSeleccionar.equals(GuiaRemisionConstantesFunciones.LABEL_NOMBRECLIENTE)) {
					existe=true;
					guiaremisionAux.setsDescripcionGeneralEntityReporte1(guiaremisionAux.getnombre_cliente());
				}
				 else if(sTipoSeleccionar.equals(GuiaRemisionConstantesFunciones.LABEL_TELEFONOCLIENTE)) {
					existe=true;
					guiaremisionAux.setsDescripcionGeneralEntityReporte1(guiaremisionAux.gettelefono_cliente());
				}
				 else if(sTipoSeleccionar.equals(GuiaRemisionConstantesFunciones.LABEL_DIRECCIONCLIENTE)) {
					existe=true;
					guiaremisionAux.setsDescripcionGeneralEntityReporte1(guiaremisionAux.getdireccion_cliente());
				}
				 else if(sTipoSeleccionar.equals(GuiaRemisionConstantesFunciones.LABEL_NUMEROPREIMPRESO)) {
					existe=true;
					guiaremisionAux.setsDescripcionGeneralEntityReporte1(guiaremisionAux.getnumero_pre_impreso());
				}
				 else if(sTipoSeleccionar.equals(GuiaRemisionConstantesFunciones.LABEL_FECHAAUTORIZACION)) {
					existe=true;
					guiaremisionAux.setsDescripcionGeneralEntityReporte1(Funciones2.getStringPostgresDate(guiaremisionAux.getfecha_autorizacion()));
				}
				 else if(sTipoSeleccionar.equals(GuiaRemisionConstantesFunciones.LABEL_FECHAVENCIMIENTO)) {
					existe=true;
					guiaremisionAux.setsDescripcionGeneralEntityReporte1(Funciones2.getStringPostgresDate(guiaremisionAux.getfecha_vencimiento()));
				}
			}	
											
			if(!existe) {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}										
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,GuiaRemisionConstantesFunciones.CLASSNAME);
		}
	}
	
	
	public void actualizarEstadoCeldasBotonesGuiaRemision(String sAccion,Boolean isGuardarCambiosEnLote,Boolean isEsMantenimientoRelacionado) throws Exception {
		if(sAccion=="n") {
			if(!this.esParaBusquedaForeignKey) {
				this.isVisibilidadCeldaNuevoGuiaRemision=true;
				this.isVisibilidadCeldaNuevoRelacionesGuiaRemision=true;
				this.isVisibilidadCeldaGuardarCambiosGuiaRemision=true;
			}
			
			this.isVisibilidadCeldaModificarGuiaRemision=false;
			this.isVisibilidadCeldaActualizarGuiaRemision=false;
			this.isVisibilidadCeldaEliminarGuiaRemision=false;
			this.isVisibilidadCeldaCancelarGuiaRemision=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarGuiaRemision=true;
				} else {
					this.isVisibilidadCeldaGuardarGuiaRemision=false;
				}
			}
		} else if(sAccion=="a") {
			this.isVisibilidadCeldaNuevoGuiaRemision=false;
			this.isVisibilidadCeldaNuevoRelacionesGuiaRemision=false;
			this.isVisibilidadCeldaGuardarCambiosGuiaRemision=false;
			this.isVisibilidadCeldaModificarGuiaRemision=false;
			this.isVisibilidadCeldaActualizarGuiaRemision=true;
			this.isVisibilidadCeldaEliminarGuiaRemision=false;
			this.isVisibilidadCeldaCancelarGuiaRemision=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarGuiaRemision=true;
				} else {
					this.isVisibilidadCeldaGuardarGuiaRemision=false;
				}
			}
		} else if(sAccion=="ae") {
			this.isVisibilidadCeldaNuevoGuiaRemision=false;
			this.isVisibilidadCeldaNuevoRelacionesGuiaRemision=false;
			this.isVisibilidadCeldaGuardarCambiosGuiaRemision=false;
			this.isVisibilidadCeldaModificarGuiaRemision=false;
			this.isVisibilidadCeldaActualizarGuiaRemision=true;
			this.isVisibilidadCeldaEliminarGuiaRemision=true;
			this.isVisibilidadCeldaCancelarGuiaRemision=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarGuiaRemision=true;
				} else {
					this.isVisibilidadCeldaGuardarGuiaRemision=false;
				}
			}
		}
		//Para Mantenimientos de tablas relacionados con mas de columnas minimas
		else if(sAccion=="ae2") {
			this.isVisibilidadCeldaNuevoGuiaRemision=false;
			this.isVisibilidadCeldaNuevoRelacionesGuiaRemision=false;
			this.isVisibilidadCeldaGuardarCambiosGuiaRemision=false;
			this.isVisibilidadCeldaModificarGuiaRemision=false;
			this.isVisibilidadCeldaActualizarGuiaRemision=true;
			this.isVisibilidadCeldaEliminarGuiaRemision=false;
			this.isVisibilidadCeldaCancelarGuiaRemision=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarGuiaRemision=false;
				} else {
					this.isVisibilidadCeldaGuardarGuiaRemision=false;
				}
			}
		} else if(sAccion=="c") {
			this.isVisibilidadCeldaNuevoGuiaRemision=true;
			this.isVisibilidadCeldaNuevoRelacionesGuiaRemision=true;
			this.isVisibilidadCeldaGuardarCambiosGuiaRemision=true;
			this.isVisibilidadCeldaModificarGuiaRemision=false;
			this.isVisibilidadCeldaActualizarGuiaRemision=false;
			this.isVisibilidadCeldaEliminarGuiaRemision=false;
			this.isVisibilidadCeldaCancelarGuiaRemision=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarGuiaRemision=true;
				} else {
					this.isVisibilidadCeldaGuardarGuiaRemision=false;
				}
			}
		} else if(sAccion=="t") {
			this.isVisibilidadCeldaNuevoGuiaRemision=false;
			this.isVisibilidadCeldaNuevoRelacionesGuiaRemision=false;
			this.isVisibilidadCeldaGuardarCambiosGuiaRemision=false;
			this.isVisibilidadCeldaActualizarGuiaRemision=false;
			this.isVisibilidadCeldaEliminarGuiaRemision=false;
			this.isVisibilidadCeldaCancelarGuiaRemision=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarGuiaRemision=false;
				} else {
					this.isVisibilidadCeldaGuardarGuiaRemision=false;
				}
			}
		}  else if(sAccion=="s"||sAccion=="s2") {
			this.isVisibilidadCeldaNuevoGuiaRemision=false;
			this.isVisibilidadCeldaNuevoRelacionesGuiaRemision=false;
			this.isVisibilidadCeldaGuardarCambiosGuiaRemision=false;
			this.isVisibilidadCeldaModificarGuiaRemision=true;
			this.isVisibilidadCeldaActualizarGuiaRemision=false;
			this.isVisibilidadCeldaEliminarGuiaRemision=false;
			this.isVisibilidadCeldaCancelarGuiaRemision=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarGuiaRemision=false;
				} else {
					this.isVisibilidadCeldaGuardarGuiaRemision=false;
				}
			}
		}
		
		//ACTUALIZA VISIBILIDAD PANELES
		if(GuiaRemisionJInternalFrame.CON_DATOS_FRAME && !this.esParaBusquedaForeignKey) {
			//SIEMPRE VISIBLE
			this.isVisibilidadCeldaNuevoGuiaRemision=true;
			this.isVisibilidadCeldaNuevoRelacionesGuiaRemision=true;
			this.isVisibilidadCeldaGuardarCambiosGuiaRemision=true;
		} else {
			this.actualizarEstadoPanelsGuiaRemision(sAccion);						
		}
		
		if(this.esParaBusquedaForeignKey) {
			this.isVisibilidadCeldaCopiarGuiaRemision=false;
			//this.isVisibilidadCeldaVerFormGuiaRemision=false;
			this.isVisibilidadCeldaDuplicarGuiaRemision=false;
		}
		
		//SI ES MANTENIMIENTO RELACIONES
		if(!guiaremisionSessionBean.getConGuardarRelaciones()) {
			this.isVisibilidadCeldaNuevoRelacionesGuiaRemision=false;
		} else {
			this.isVisibilidadCeldaNuevoGuiaRemision=false;
			this.isVisibilidadCeldaGuardarCambiosGuiaRemision=false;
		}
		
		//SI ES MANTENIMIENTO RELACIONADO
		if(guiaremisionSessionBean.getEsGuardarRelacionado()) {
			if(!guiaremisionSessionBean.getConGuardarRelaciones()) {	
				this.isVisibilidadCeldaNuevoRelacionesGuiaRemision=false;												
			}
			
			this.jButtonCerrarGuiaRemision.setVisible(false);
		}
		
		//SI NO TIENE MAXIMO DE RELACIONES PERMITIDAS
		if(!this.conMaximoRelaciones) {
			this.isVisibilidadCeldaNuevoRelacionesGuiaRemision=false;
		}
		
		if(!this.permiteMantenimiento(this.guiaremision)) {
			this.isVisibilidadCeldaActualizarGuiaRemision=false;
			this.isVisibilidadCeldaEliminarGuiaRemision=false;
		}
		
		
		
	}
	
	public void actualizarEstadoCeldasBotonesConGuardarRelacionesGuiaRemision() {
		this.isVisibilidadCeldaNuevoGuiaRemision=false;
		this.isVisibilidadCeldaGuardarCambiosGuiaRemision=false;
	}
	
	public void actualizarEstadoPanelsGuiaRemision(String sAccion) {
		if(sAccion=="n") {
			if(this.jScrollPanelDatosEdicionGuiaRemision!=null) {
				this.jScrollPanelDatosEdicionGuiaRemision.setVisible(false);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasGuiaRemision!=null) {
				this.jTabbedPaneBusquedasGuiaRemision.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosGuiaRemision!=null) {
				this.jScrollPanelDatosGuiaRemision.setVisible(true);
			}
			
			if(this.jPanelPaginacionGuiaRemision!=null) {
				this.jPanelPaginacionGuiaRemision.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesGuiaRemision!=null) {
				this.jPanelParametrosReportesGuiaRemision.setVisible(true);		    
			}
			
		} else if(sAccion=="a") {				
			if(this.jScrollPanelDatosEdicionGuiaRemision!=null) {
				this.jScrollPanelDatosEdicionGuiaRemision.setVisible(true);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasGuiaRemision!=null) {
				this.jTabbedPaneBusquedasGuiaRemision.setVisible(false);			
			}
			
			
			
			if(this.jScrollPanelDatosGuiaRemision!=null) {
				this.jScrollPanelDatosGuiaRemision.setVisible(false);
			}
			
			if(this.jPanelPaginacionGuiaRemision!=null) {
				this.jPanelPaginacionGuiaRemision.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesGuiaRemision!=null) {
				this.jPanelParametrosReportesGuiaRemision.setVisible(false);
			}
						
		} else if(sAccion=="ae") {		
			if(this.jScrollPanelDatosEdicionGuiaRemision!=null) {
				this.jScrollPanelDatosEdicionGuiaRemision.setVisible(true);		
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasGuiaRemision!=null) {
				this.jTabbedPaneBusquedasGuiaRemision.setVisible(false);			
			}
			
			
			if(this.jScrollPanelDatosGuiaRemision!=null) {
				this.jScrollPanelDatosGuiaRemision.setVisible(false);
			}
			
			if(this.jPanelPaginacionGuiaRemision!=null) {
				this.jPanelPaginacionGuiaRemision.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesGuiaRemision!=null) {
				this.jPanelParametrosReportesGuiaRemision.setVisible(false);
			}
						
		}
		//Para Mantenimientos de tablas relacionados con mas de columnas minimas
		else if(sAccion=="ae2") {	
			if(this.jScrollPanelDatosEdicionGuiaRemision!=null) {
				this.jScrollPanelDatosEdicionGuiaRemision.setVisible(true);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasGuiaRemision!=null) {
				this.jTabbedPaneBusquedasGuiaRemision.setVisible(false);			
			}
			
			
			if(this.jScrollPanelDatosGuiaRemision!=null) {
				this.jScrollPanelDatosGuiaRemision.setVisible(false);
			}
			
			if(this.jPanelPaginacionGuiaRemision!=null) {
				this.jPanelPaginacionGuiaRemision.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesGuiaRemision!=null) {
				this.jPanelParametrosReportesGuiaRemision.setVisible(false);
			}
						
		} else if(sAccion=="c") {	
			if(this.jScrollPanelDatosEdicionGuiaRemision!=null) {
				this.jScrollPanelDatosEdicionGuiaRemision.setVisible(false);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasGuiaRemision!=null) {
				this.jTabbedPaneBusquedasGuiaRemision.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosGuiaRemision!=null) {
				this.jScrollPanelDatosGuiaRemision.setVisible(true);
			}
			
			if(this.jPanelPaginacionGuiaRemision!=null) {
				this.jPanelPaginacionGuiaRemision.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesGuiaRemision!=null) {
				this.jPanelParametrosReportesGuiaRemision.setVisible(true);
			}
						
		} else if(sAccion=="t") {
			
			if(this.jScrollPanelDatosEdicionGuiaRemision!=null) {
				this.jScrollPanelDatosEdicionGuiaRemision.setVisible(false);
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasGuiaRemision!=null) {
				this.jTabbedPaneBusquedasGuiaRemision.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosGuiaRemision!=null) {
				this.jScrollPanelDatosGuiaRemision.setVisible(true);
			}
			
			if(this.jPanelPaginacionGuiaRemision!=null) {
				this.jPanelPaginacionGuiaRemision.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesGuiaRemision!=null) {
				this.jPanelParametrosReportesGuiaRemision.setVisible(true);
			}
						
		}  else if(sAccion=="s"||sAccion=="s2") {
			if(this.jScrollPanelDatosEdicionGuiaRemision!=null) {
				this.jScrollPanelDatosEdicionGuiaRemision.setVisible(false);
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasGuiaRemision!=null) {
				this.jTabbedPaneBusquedasGuiaRemision.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosGuiaRemision!=null) {
				this.jScrollPanelDatosGuiaRemision.setVisible(true);
			}
			
			if(this.jPanelPaginacionGuiaRemision!=null) {
				this.jPanelPaginacionGuiaRemision.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesGuiaRemision!=null) {
				this.jPanelParametrosReportesGuiaRemision.setVisible(true);
			}
			
		} 
		
		if(sAccion.equals("relacionado") || this.guiaremisionSessionBean.getEsGuardarRelacionado()) {
			if(!this.conCargarMinimo) {
				//BYDAN_BUSQUEDAS
				
				if(this.jTabbedPaneBusquedasGuiaRemision!=null) {
					this.jTabbedPaneBusquedasGuiaRemision.setVisible(false);				
				}
				
			}
			
			if(this.jPanelParametrosReportesGuiaRemision!=null) {
				this.jPanelParametrosReportesGuiaRemision.setVisible(false);
			}
		
		} else if(sAccion.equals("no_relacionado") && !this.guiaremisionSessionBean.getEsGuardarRelacionado()) {
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasGuiaRemision!=null) {
				this.jTabbedPaneBusquedasGuiaRemision.setVisible(true);			
			}
			
			if(this.jPanelParametrosReportesGuiaRemision!=null) {
				this.jPanelParametrosReportesGuiaRemision.setVisible(true);
			}
		}
	}	
	
	

	public void setVisibilidadBusquedasParaEmpresa(Boolean isParaEmpresa){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaEmpresaNegation=!isParaEmpresa;

			this.isVisibilidadFK_IdCiudadDestino=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdCiudadDestino) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdCiudadDestinoGuiaRemision);}

			this.isVisibilidadFK_IdCiudadOrigen=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdCiudadOrigen) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdCiudadOrigenGuiaRemision);}

			this.isVisibilidadFK_IdCliente=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdClienteGuiaRemision);}

			this.isVisibilidadFK_IdConsultor=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdConsultor) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdConsultorGuiaRemision);}

			this.isVisibilidadFK_IdEmpleado=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdEmpleadoGuiaRemision);}

			this.isVisibilidadFK_IdFactura=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdFactura) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdFacturaGuiaRemision);}

			this.isVisibilidadFK_IdFormato=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdFormato) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdFormatoGuiaRemision);}

			this.isVisibilidadFK_IdSubCliente=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdSubCliente) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdSubClienteGuiaRemision);}

			this.isVisibilidadFK_IdTipoCambio=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdTipoCambio) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdTipoCambioGuiaRemision);}

			this.isVisibilidadFK_IdTipoLlamada=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdTipoLlamada) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdTipoLlamadaGuiaRemision);}

			this.isVisibilidadFK_IdTipoPrecio=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdTipoPrecio) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdTipoPrecioGuiaRemision);}

			this.isVisibilidadFK_IdTransporte=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdTransporte) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdTransporteGuiaRemision);}

			this.isVisibilidadFK_IdTransportista=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdTransportista) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdTransportistaGuiaRemision);}

			this.isVisibilidadFK_IdVendedor=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdVendedorGuiaRemision);}
		}
		
	}

	public void setVisibilidadBusquedasParaSucursal(Boolean isParaSucursal){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaSucursalNegation=!isParaSucursal;

			this.isVisibilidadFK_IdCiudadDestino=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdCiudadDestino) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdCiudadDestinoGuiaRemision);}

			this.isVisibilidadFK_IdCiudadOrigen=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdCiudadOrigen) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdCiudadOrigenGuiaRemision);}

			this.isVisibilidadFK_IdCliente=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdClienteGuiaRemision);}

			this.isVisibilidadFK_IdConsultor=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdConsultor) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdConsultorGuiaRemision);}

			this.isVisibilidadFK_IdEmpleado=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdEmpleadoGuiaRemision);}

			this.isVisibilidadFK_IdFactura=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdFactura) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdFacturaGuiaRemision);}

			this.isVisibilidadFK_IdFormato=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdFormato) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdFormatoGuiaRemision);}

			this.isVisibilidadFK_IdSubCliente=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdSubCliente) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdSubClienteGuiaRemision);}

			this.isVisibilidadFK_IdTipoCambio=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdTipoCambio) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdTipoCambioGuiaRemision);}

			this.isVisibilidadFK_IdTipoLlamada=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdTipoLlamada) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdTipoLlamadaGuiaRemision);}

			this.isVisibilidadFK_IdTipoPrecio=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdTipoPrecio) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdTipoPrecioGuiaRemision);}

			this.isVisibilidadFK_IdTransporte=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdTransporte) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdTransporteGuiaRemision);}

			this.isVisibilidadFK_IdTransportista=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdTransportista) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdTransportistaGuiaRemision);}

			this.isVisibilidadFK_IdVendedor=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdVendedorGuiaRemision);}
		}
		
	}

	public void setVisibilidadBusquedasParaEjercicio(Boolean isParaEjercicio){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaEjercicioNegation=!isParaEjercicio;

			this.isVisibilidadFK_IdCiudadDestino=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdCiudadDestino) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdCiudadDestinoGuiaRemision);}

			this.isVisibilidadFK_IdCiudadOrigen=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdCiudadOrigen) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdCiudadOrigenGuiaRemision);}

			this.isVisibilidadFK_IdCliente=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdClienteGuiaRemision);}

			this.isVisibilidadFK_IdConsultor=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdConsultor) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdConsultorGuiaRemision);}

			this.isVisibilidadFK_IdEmpleado=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdEmpleadoGuiaRemision);}

			this.isVisibilidadFK_IdFactura=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdFactura) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdFacturaGuiaRemision);}

			this.isVisibilidadFK_IdFormato=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdFormato) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdFormatoGuiaRemision);}

			this.isVisibilidadFK_IdSubCliente=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdSubCliente) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdSubClienteGuiaRemision);}

			this.isVisibilidadFK_IdTipoCambio=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdTipoCambio) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdTipoCambioGuiaRemision);}

			this.isVisibilidadFK_IdTipoLlamada=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdTipoLlamada) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdTipoLlamadaGuiaRemision);}

			this.isVisibilidadFK_IdTipoPrecio=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdTipoPrecio) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdTipoPrecioGuiaRemision);}

			this.isVisibilidadFK_IdTransporte=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdTransporte) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdTransporteGuiaRemision);}

			this.isVisibilidadFK_IdTransportista=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdTransportista) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdTransportistaGuiaRemision);}

			this.isVisibilidadFK_IdVendedor=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdVendedorGuiaRemision);}
		}
		
	}

	public void setVisibilidadBusquedasParaPeriodo(Boolean isParaPeriodo){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaPeriodoNegation=!isParaPeriodo;

			this.isVisibilidadFK_IdCiudadDestino=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdCiudadDestino) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdCiudadDestinoGuiaRemision);}

			this.isVisibilidadFK_IdCiudadOrigen=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdCiudadOrigen) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdCiudadOrigenGuiaRemision);}

			this.isVisibilidadFK_IdCliente=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdClienteGuiaRemision);}

			this.isVisibilidadFK_IdConsultor=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdConsultor) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdConsultorGuiaRemision);}

			this.isVisibilidadFK_IdEmpleado=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdEmpleadoGuiaRemision);}

			this.isVisibilidadFK_IdFactura=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdFactura) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdFacturaGuiaRemision);}

			this.isVisibilidadFK_IdFormato=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdFormato) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdFormatoGuiaRemision);}

			this.isVisibilidadFK_IdSubCliente=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdSubCliente) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdSubClienteGuiaRemision);}

			this.isVisibilidadFK_IdTipoCambio=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdTipoCambio) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdTipoCambioGuiaRemision);}

			this.isVisibilidadFK_IdTipoLlamada=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdTipoLlamada) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdTipoLlamadaGuiaRemision);}

			this.isVisibilidadFK_IdTipoPrecio=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdTipoPrecio) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdTipoPrecioGuiaRemision);}

			this.isVisibilidadFK_IdTransporte=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdTransporte) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdTransporteGuiaRemision);}

			this.isVisibilidadFK_IdTransportista=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdTransportista) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdTransportistaGuiaRemision);}

			this.isVisibilidadFK_IdVendedor=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdVendedorGuiaRemision);}
		}
		
	}

	public void setVisibilidadBusquedasParaUsuario(Boolean isParaUsuario){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaUsuarioNegation=!isParaUsuario;

			this.isVisibilidadFK_IdCiudadDestino=isParaUsuarioNegation;
			if(!this.isVisibilidadFK_IdCiudadDestino) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdCiudadDestinoGuiaRemision);}

			this.isVisibilidadFK_IdCiudadOrigen=isParaUsuarioNegation;
			if(!this.isVisibilidadFK_IdCiudadOrigen) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdCiudadOrigenGuiaRemision);}

			this.isVisibilidadFK_IdCliente=isParaUsuarioNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdClienteGuiaRemision);}

			this.isVisibilidadFK_IdConsultor=isParaUsuarioNegation;
			if(!this.isVisibilidadFK_IdConsultor) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdConsultorGuiaRemision);}

			this.isVisibilidadFK_IdEmpleado=isParaUsuarioNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdEmpleadoGuiaRemision);}

			this.isVisibilidadFK_IdFactura=isParaUsuarioNegation;
			if(!this.isVisibilidadFK_IdFactura) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdFacturaGuiaRemision);}

			this.isVisibilidadFK_IdFormato=isParaUsuarioNegation;
			if(!this.isVisibilidadFK_IdFormato) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdFormatoGuiaRemision);}

			this.isVisibilidadFK_IdSubCliente=isParaUsuarioNegation;
			if(!this.isVisibilidadFK_IdSubCliente) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdSubClienteGuiaRemision);}

			this.isVisibilidadFK_IdTipoCambio=isParaUsuarioNegation;
			if(!this.isVisibilidadFK_IdTipoCambio) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdTipoCambioGuiaRemision);}

			this.isVisibilidadFK_IdTipoLlamada=isParaUsuarioNegation;
			if(!this.isVisibilidadFK_IdTipoLlamada) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdTipoLlamadaGuiaRemision);}

			this.isVisibilidadFK_IdTipoPrecio=isParaUsuarioNegation;
			if(!this.isVisibilidadFK_IdTipoPrecio) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdTipoPrecioGuiaRemision);}

			this.isVisibilidadFK_IdTransporte=isParaUsuarioNegation;
			if(!this.isVisibilidadFK_IdTransporte) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdTransporteGuiaRemision);}

			this.isVisibilidadFK_IdTransportista=isParaUsuarioNegation;
			if(!this.isVisibilidadFK_IdTransportista) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdTransportistaGuiaRemision);}

			this.isVisibilidadFK_IdVendedor=isParaUsuarioNegation;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdVendedorGuiaRemision);}
		}
		
	}

	public void setVisibilidadBusquedasParaFormato(Boolean isParaFormato){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaFormatoNegation=!isParaFormato;

			this.isVisibilidadFK_IdCiudadDestino=isParaFormatoNegation;
			if(!this.isVisibilidadFK_IdCiudadDestino) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdCiudadDestinoGuiaRemision);}

			this.isVisibilidadFK_IdCiudadOrigen=isParaFormatoNegation;
			if(!this.isVisibilidadFK_IdCiudadOrigen) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdCiudadOrigenGuiaRemision);}

			this.isVisibilidadFK_IdCliente=isParaFormatoNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdClienteGuiaRemision);}

			this.isVisibilidadFK_IdConsultor=isParaFormatoNegation;
			if(!this.isVisibilidadFK_IdConsultor) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdConsultorGuiaRemision);}

			this.isVisibilidadFK_IdEmpleado=isParaFormatoNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdEmpleadoGuiaRemision);}

			this.isVisibilidadFK_IdFactura=isParaFormatoNegation;
			if(!this.isVisibilidadFK_IdFactura) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdFacturaGuiaRemision);}

			this.isVisibilidadFK_IdFormato=isParaFormato;
			if(!this.isVisibilidadFK_IdFormato) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdFormatoGuiaRemision);}

			this.isVisibilidadFK_IdSubCliente=isParaFormatoNegation;
			if(!this.isVisibilidadFK_IdSubCliente) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdSubClienteGuiaRemision);}

			this.isVisibilidadFK_IdTipoCambio=isParaFormatoNegation;
			if(!this.isVisibilidadFK_IdTipoCambio) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdTipoCambioGuiaRemision);}

			this.isVisibilidadFK_IdTipoLlamada=isParaFormatoNegation;
			if(!this.isVisibilidadFK_IdTipoLlamada) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdTipoLlamadaGuiaRemision);}

			this.isVisibilidadFK_IdTipoPrecio=isParaFormatoNegation;
			if(!this.isVisibilidadFK_IdTipoPrecio) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdTipoPrecioGuiaRemision);}

			this.isVisibilidadFK_IdTransporte=isParaFormatoNegation;
			if(!this.isVisibilidadFK_IdTransporte) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdTransporteGuiaRemision);}

			this.isVisibilidadFK_IdTransportista=isParaFormatoNegation;
			if(!this.isVisibilidadFK_IdTransportista) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdTransportistaGuiaRemision);}

			this.isVisibilidadFK_IdVendedor=isParaFormatoNegation;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdVendedorGuiaRemision);}
		}
		
	}

	public void setVisibilidadBusquedasParaTipoPrecio(Boolean isParaTipoPrecio){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaTipoPrecioNegation=!isParaTipoPrecio;

			this.isVisibilidadFK_IdCiudadDestino=isParaTipoPrecioNegation;
			if(!this.isVisibilidadFK_IdCiudadDestino) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdCiudadDestinoGuiaRemision);}

			this.isVisibilidadFK_IdCiudadOrigen=isParaTipoPrecioNegation;
			if(!this.isVisibilidadFK_IdCiudadOrigen) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdCiudadOrigenGuiaRemision);}

			this.isVisibilidadFK_IdCliente=isParaTipoPrecioNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdClienteGuiaRemision);}

			this.isVisibilidadFK_IdConsultor=isParaTipoPrecioNegation;
			if(!this.isVisibilidadFK_IdConsultor) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdConsultorGuiaRemision);}

			this.isVisibilidadFK_IdEmpleado=isParaTipoPrecioNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdEmpleadoGuiaRemision);}

			this.isVisibilidadFK_IdFactura=isParaTipoPrecioNegation;
			if(!this.isVisibilidadFK_IdFactura) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdFacturaGuiaRemision);}

			this.isVisibilidadFK_IdFormato=isParaTipoPrecioNegation;
			if(!this.isVisibilidadFK_IdFormato) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdFormatoGuiaRemision);}

			this.isVisibilidadFK_IdSubCliente=isParaTipoPrecioNegation;
			if(!this.isVisibilidadFK_IdSubCliente) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdSubClienteGuiaRemision);}

			this.isVisibilidadFK_IdTipoCambio=isParaTipoPrecioNegation;
			if(!this.isVisibilidadFK_IdTipoCambio) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdTipoCambioGuiaRemision);}

			this.isVisibilidadFK_IdTipoLlamada=isParaTipoPrecioNegation;
			if(!this.isVisibilidadFK_IdTipoLlamada) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdTipoLlamadaGuiaRemision);}

			this.isVisibilidadFK_IdTipoPrecio=isParaTipoPrecio;
			if(!this.isVisibilidadFK_IdTipoPrecio) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdTipoPrecioGuiaRemision);}

			this.isVisibilidadFK_IdTransporte=isParaTipoPrecioNegation;
			if(!this.isVisibilidadFK_IdTransporte) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdTransporteGuiaRemision);}

			this.isVisibilidadFK_IdTransportista=isParaTipoPrecioNegation;
			if(!this.isVisibilidadFK_IdTransportista) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdTransportistaGuiaRemision);}

			this.isVisibilidadFK_IdVendedor=isParaTipoPrecioNegation;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdVendedorGuiaRemision);}
		}
		
	}

	public void setVisibilidadBusquedasParaMoneda(Boolean isParaMoneda){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaMonedaNegation=!isParaMoneda;

			this.isVisibilidadFK_IdCiudadDestino=isParaMonedaNegation;
			if(!this.isVisibilidadFK_IdCiudadDestino) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdCiudadDestinoGuiaRemision);}

			this.isVisibilidadFK_IdCiudadOrigen=isParaMonedaNegation;
			if(!this.isVisibilidadFK_IdCiudadOrigen) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdCiudadOrigenGuiaRemision);}

			this.isVisibilidadFK_IdCliente=isParaMonedaNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdClienteGuiaRemision);}

			this.isVisibilidadFK_IdConsultor=isParaMonedaNegation;
			if(!this.isVisibilidadFK_IdConsultor) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdConsultorGuiaRemision);}

			this.isVisibilidadFK_IdEmpleado=isParaMonedaNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdEmpleadoGuiaRemision);}

			this.isVisibilidadFK_IdFactura=isParaMonedaNegation;
			if(!this.isVisibilidadFK_IdFactura) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdFacturaGuiaRemision);}

			this.isVisibilidadFK_IdFormato=isParaMonedaNegation;
			if(!this.isVisibilidadFK_IdFormato) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdFormatoGuiaRemision);}

			this.isVisibilidadFK_IdSubCliente=isParaMonedaNegation;
			if(!this.isVisibilidadFK_IdSubCliente) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdSubClienteGuiaRemision);}

			this.isVisibilidadFK_IdTipoCambio=isParaMonedaNegation;
			if(!this.isVisibilidadFK_IdTipoCambio) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdTipoCambioGuiaRemision);}

			this.isVisibilidadFK_IdTipoLlamada=isParaMonedaNegation;
			if(!this.isVisibilidadFK_IdTipoLlamada) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdTipoLlamadaGuiaRemision);}

			this.isVisibilidadFK_IdTipoPrecio=isParaMonedaNegation;
			if(!this.isVisibilidadFK_IdTipoPrecio) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdTipoPrecioGuiaRemision);}

			this.isVisibilidadFK_IdTransporte=isParaMonedaNegation;
			if(!this.isVisibilidadFK_IdTransporte) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdTransporteGuiaRemision);}

			this.isVisibilidadFK_IdTransportista=isParaMonedaNegation;
			if(!this.isVisibilidadFK_IdTransportista) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdTransportistaGuiaRemision);}

			this.isVisibilidadFK_IdVendedor=isParaMonedaNegation;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdVendedorGuiaRemision);}
		}
		
	}

	public void setVisibilidadBusquedasParaCliente(Boolean isParaCliente){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaClienteNegation=!isParaCliente;

			this.isVisibilidadFK_IdCiudadDestino=isParaClienteNegation;
			if(!this.isVisibilidadFK_IdCiudadDestino) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdCiudadDestinoGuiaRemision);}

			this.isVisibilidadFK_IdCiudadOrigen=isParaClienteNegation;
			if(!this.isVisibilidadFK_IdCiudadOrigen) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdCiudadOrigenGuiaRemision);}

			this.isVisibilidadFK_IdCliente=isParaCliente;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdClienteGuiaRemision);}

			this.isVisibilidadFK_IdConsultor=isParaClienteNegation;
			if(!this.isVisibilidadFK_IdConsultor) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdConsultorGuiaRemision);}

			this.isVisibilidadFK_IdEmpleado=isParaClienteNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdEmpleadoGuiaRemision);}

			this.isVisibilidadFK_IdFactura=isParaClienteNegation;
			if(!this.isVisibilidadFK_IdFactura) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdFacturaGuiaRemision);}

			this.isVisibilidadFK_IdFormato=isParaClienteNegation;
			if(!this.isVisibilidadFK_IdFormato) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdFormatoGuiaRemision);}

			this.isVisibilidadFK_IdSubCliente=isParaClienteNegation;
			if(!this.isVisibilidadFK_IdSubCliente) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdSubClienteGuiaRemision);}

			this.isVisibilidadFK_IdTipoCambio=isParaClienteNegation;
			if(!this.isVisibilidadFK_IdTipoCambio) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdTipoCambioGuiaRemision);}

			this.isVisibilidadFK_IdTipoLlamada=isParaClienteNegation;
			if(!this.isVisibilidadFK_IdTipoLlamada) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdTipoLlamadaGuiaRemision);}

			this.isVisibilidadFK_IdTipoPrecio=isParaClienteNegation;
			if(!this.isVisibilidadFK_IdTipoPrecio) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdTipoPrecioGuiaRemision);}

			this.isVisibilidadFK_IdTransporte=isParaClienteNegation;
			if(!this.isVisibilidadFK_IdTransporte) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdTransporteGuiaRemision);}

			this.isVisibilidadFK_IdTransportista=isParaClienteNegation;
			if(!this.isVisibilidadFK_IdTransportista) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdTransportistaGuiaRemision);}

			this.isVisibilidadFK_IdVendedor=isParaClienteNegation;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdVendedorGuiaRemision);}
		}
		
	}

	public void setVisibilidadBusquedasParaVendedor(Boolean isParaVendedor){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaVendedorNegation=!isParaVendedor;

			this.isVisibilidadFK_IdCiudadDestino=isParaVendedorNegation;
			if(!this.isVisibilidadFK_IdCiudadDestino) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdCiudadDestinoGuiaRemision);}

			this.isVisibilidadFK_IdCiudadOrigen=isParaVendedorNegation;
			if(!this.isVisibilidadFK_IdCiudadOrigen) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdCiudadOrigenGuiaRemision);}

			this.isVisibilidadFK_IdCliente=isParaVendedorNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdClienteGuiaRemision);}

			this.isVisibilidadFK_IdConsultor=isParaVendedorNegation;
			if(!this.isVisibilidadFK_IdConsultor) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdConsultorGuiaRemision);}

			this.isVisibilidadFK_IdEmpleado=isParaVendedorNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdEmpleadoGuiaRemision);}

			this.isVisibilidadFK_IdFactura=isParaVendedorNegation;
			if(!this.isVisibilidadFK_IdFactura) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdFacturaGuiaRemision);}

			this.isVisibilidadFK_IdFormato=isParaVendedorNegation;
			if(!this.isVisibilidadFK_IdFormato) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdFormatoGuiaRemision);}

			this.isVisibilidadFK_IdSubCliente=isParaVendedorNegation;
			if(!this.isVisibilidadFK_IdSubCliente) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdSubClienteGuiaRemision);}

			this.isVisibilidadFK_IdTipoCambio=isParaVendedorNegation;
			if(!this.isVisibilidadFK_IdTipoCambio) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdTipoCambioGuiaRemision);}

			this.isVisibilidadFK_IdTipoLlamada=isParaVendedorNegation;
			if(!this.isVisibilidadFK_IdTipoLlamada) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdTipoLlamadaGuiaRemision);}

			this.isVisibilidadFK_IdTipoPrecio=isParaVendedorNegation;
			if(!this.isVisibilidadFK_IdTipoPrecio) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdTipoPrecioGuiaRemision);}

			this.isVisibilidadFK_IdTransporte=isParaVendedorNegation;
			if(!this.isVisibilidadFK_IdTransporte) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdTransporteGuiaRemision);}

			this.isVisibilidadFK_IdTransportista=isParaVendedorNegation;
			if(!this.isVisibilidadFK_IdTransportista) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdTransportistaGuiaRemision);}

			this.isVisibilidadFK_IdVendedor=isParaVendedor;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdVendedorGuiaRemision);}
		}
		
	}

	public void setVisibilidadBusquedasParaFactura(Boolean isParaFactura){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaFacturaNegation=!isParaFactura;

			this.isVisibilidadFK_IdCiudadDestino=isParaFacturaNegation;
			if(!this.isVisibilidadFK_IdCiudadDestino) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdCiudadDestinoGuiaRemision);}

			this.isVisibilidadFK_IdCiudadOrigen=isParaFacturaNegation;
			if(!this.isVisibilidadFK_IdCiudadOrigen) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdCiudadOrigenGuiaRemision);}

			this.isVisibilidadFK_IdCliente=isParaFacturaNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdClienteGuiaRemision);}

			this.isVisibilidadFK_IdConsultor=isParaFacturaNegation;
			if(!this.isVisibilidadFK_IdConsultor) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdConsultorGuiaRemision);}

			this.isVisibilidadFK_IdEmpleado=isParaFacturaNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdEmpleadoGuiaRemision);}

			this.isVisibilidadFK_IdFactura=isParaFactura;
			if(!this.isVisibilidadFK_IdFactura) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdFacturaGuiaRemision);}

			this.isVisibilidadFK_IdFormato=isParaFacturaNegation;
			if(!this.isVisibilidadFK_IdFormato) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdFormatoGuiaRemision);}

			this.isVisibilidadFK_IdSubCliente=isParaFacturaNegation;
			if(!this.isVisibilidadFK_IdSubCliente) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdSubClienteGuiaRemision);}

			this.isVisibilidadFK_IdTipoCambio=isParaFacturaNegation;
			if(!this.isVisibilidadFK_IdTipoCambio) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdTipoCambioGuiaRemision);}

			this.isVisibilidadFK_IdTipoLlamada=isParaFacturaNegation;
			if(!this.isVisibilidadFK_IdTipoLlamada) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdTipoLlamadaGuiaRemision);}

			this.isVisibilidadFK_IdTipoPrecio=isParaFacturaNegation;
			if(!this.isVisibilidadFK_IdTipoPrecio) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdTipoPrecioGuiaRemision);}

			this.isVisibilidadFK_IdTransporte=isParaFacturaNegation;
			if(!this.isVisibilidadFK_IdTransporte) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdTransporteGuiaRemision);}

			this.isVisibilidadFK_IdTransportista=isParaFacturaNegation;
			if(!this.isVisibilidadFK_IdTransportista) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdTransportistaGuiaRemision);}

			this.isVisibilidadFK_IdVendedor=isParaFacturaNegation;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdVendedorGuiaRemision);}
		}
		
	}

	public void setVisibilidadBusquedasParaTransportista(Boolean isParaTransportista){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaTransportistaNegation=!isParaTransportista;

			this.isVisibilidadFK_IdCiudadDestino=isParaTransportistaNegation;
			if(!this.isVisibilidadFK_IdCiudadDestino) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdCiudadDestinoGuiaRemision);}

			this.isVisibilidadFK_IdCiudadOrigen=isParaTransportistaNegation;
			if(!this.isVisibilidadFK_IdCiudadOrigen) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdCiudadOrigenGuiaRemision);}

			this.isVisibilidadFK_IdCliente=isParaTransportistaNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdClienteGuiaRemision);}

			this.isVisibilidadFK_IdConsultor=isParaTransportistaNegation;
			if(!this.isVisibilidadFK_IdConsultor) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdConsultorGuiaRemision);}

			this.isVisibilidadFK_IdEmpleado=isParaTransportistaNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdEmpleadoGuiaRemision);}

			this.isVisibilidadFK_IdFactura=isParaTransportistaNegation;
			if(!this.isVisibilidadFK_IdFactura) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdFacturaGuiaRemision);}

			this.isVisibilidadFK_IdFormato=isParaTransportistaNegation;
			if(!this.isVisibilidadFK_IdFormato) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdFormatoGuiaRemision);}

			this.isVisibilidadFK_IdSubCliente=isParaTransportistaNegation;
			if(!this.isVisibilidadFK_IdSubCliente) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdSubClienteGuiaRemision);}

			this.isVisibilidadFK_IdTipoCambio=isParaTransportistaNegation;
			if(!this.isVisibilidadFK_IdTipoCambio) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdTipoCambioGuiaRemision);}

			this.isVisibilidadFK_IdTipoLlamada=isParaTransportistaNegation;
			if(!this.isVisibilidadFK_IdTipoLlamada) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdTipoLlamadaGuiaRemision);}

			this.isVisibilidadFK_IdTipoPrecio=isParaTransportistaNegation;
			if(!this.isVisibilidadFK_IdTipoPrecio) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdTipoPrecioGuiaRemision);}

			this.isVisibilidadFK_IdTransporte=isParaTransportistaNegation;
			if(!this.isVisibilidadFK_IdTransporte) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdTransporteGuiaRemision);}

			this.isVisibilidadFK_IdTransportista=isParaTransportista;
			if(!this.isVisibilidadFK_IdTransportista) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdTransportistaGuiaRemision);}

			this.isVisibilidadFK_IdVendedor=isParaTransportistaNegation;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdVendedorGuiaRemision);}
		}
		
	}

	public void setVisibilidadBusquedasParaConsultor(Boolean isParaConsultor){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaConsultorNegation=!isParaConsultor;

			this.isVisibilidadFK_IdCiudadDestino=isParaConsultorNegation;
			if(!this.isVisibilidadFK_IdCiudadDestino) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdCiudadDestinoGuiaRemision);}

			this.isVisibilidadFK_IdCiudadOrigen=isParaConsultorNegation;
			if(!this.isVisibilidadFK_IdCiudadOrigen) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdCiudadOrigenGuiaRemision);}

			this.isVisibilidadFK_IdCliente=isParaConsultorNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdClienteGuiaRemision);}

			this.isVisibilidadFK_IdConsultor=isParaConsultor;
			if(!this.isVisibilidadFK_IdConsultor) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdConsultorGuiaRemision);}

			this.isVisibilidadFK_IdEmpleado=isParaConsultorNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdEmpleadoGuiaRemision);}

			this.isVisibilidadFK_IdFactura=isParaConsultorNegation;
			if(!this.isVisibilidadFK_IdFactura) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdFacturaGuiaRemision);}

			this.isVisibilidadFK_IdFormato=isParaConsultorNegation;
			if(!this.isVisibilidadFK_IdFormato) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdFormatoGuiaRemision);}

			this.isVisibilidadFK_IdSubCliente=isParaConsultorNegation;
			if(!this.isVisibilidadFK_IdSubCliente) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdSubClienteGuiaRemision);}

			this.isVisibilidadFK_IdTipoCambio=isParaConsultorNegation;
			if(!this.isVisibilidadFK_IdTipoCambio) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdTipoCambioGuiaRemision);}

			this.isVisibilidadFK_IdTipoLlamada=isParaConsultorNegation;
			if(!this.isVisibilidadFK_IdTipoLlamada) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdTipoLlamadaGuiaRemision);}

			this.isVisibilidadFK_IdTipoPrecio=isParaConsultorNegation;
			if(!this.isVisibilidadFK_IdTipoPrecio) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdTipoPrecioGuiaRemision);}

			this.isVisibilidadFK_IdTransporte=isParaConsultorNegation;
			if(!this.isVisibilidadFK_IdTransporte) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdTransporteGuiaRemision);}

			this.isVisibilidadFK_IdTransportista=isParaConsultorNegation;
			if(!this.isVisibilidadFK_IdTransportista) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdTransportistaGuiaRemision);}

			this.isVisibilidadFK_IdVendedor=isParaConsultorNegation;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdVendedorGuiaRemision);}
		}
		
	}

	public void setVisibilidadBusquedasParaTransporte(Boolean isParaTransporte){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaTransporteNegation=!isParaTransporte;

			this.isVisibilidadFK_IdCiudadDestino=isParaTransporteNegation;
			if(!this.isVisibilidadFK_IdCiudadDestino) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdCiudadDestinoGuiaRemision);}

			this.isVisibilidadFK_IdCiudadOrigen=isParaTransporteNegation;
			if(!this.isVisibilidadFK_IdCiudadOrigen) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdCiudadOrigenGuiaRemision);}

			this.isVisibilidadFK_IdCliente=isParaTransporteNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdClienteGuiaRemision);}

			this.isVisibilidadFK_IdConsultor=isParaTransporteNegation;
			if(!this.isVisibilidadFK_IdConsultor) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdConsultorGuiaRemision);}

			this.isVisibilidadFK_IdEmpleado=isParaTransporteNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdEmpleadoGuiaRemision);}

			this.isVisibilidadFK_IdFactura=isParaTransporteNegation;
			if(!this.isVisibilidadFK_IdFactura) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdFacturaGuiaRemision);}

			this.isVisibilidadFK_IdFormato=isParaTransporteNegation;
			if(!this.isVisibilidadFK_IdFormato) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdFormatoGuiaRemision);}

			this.isVisibilidadFK_IdSubCliente=isParaTransporteNegation;
			if(!this.isVisibilidadFK_IdSubCliente) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdSubClienteGuiaRemision);}

			this.isVisibilidadFK_IdTipoCambio=isParaTransporteNegation;
			if(!this.isVisibilidadFK_IdTipoCambio) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdTipoCambioGuiaRemision);}

			this.isVisibilidadFK_IdTipoLlamada=isParaTransporteNegation;
			if(!this.isVisibilidadFK_IdTipoLlamada) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdTipoLlamadaGuiaRemision);}

			this.isVisibilidadFK_IdTipoPrecio=isParaTransporteNegation;
			if(!this.isVisibilidadFK_IdTipoPrecio) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdTipoPrecioGuiaRemision);}

			this.isVisibilidadFK_IdTransporte=isParaTransporte;
			if(!this.isVisibilidadFK_IdTransporte) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdTransporteGuiaRemision);}

			this.isVisibilidadFK_IdTransportista=isParaTransporteNegation;
			if(!this.isVisibilidadFK_IdTransportista) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdTransportistaGuiaRemision);}

			this.isVisibilidadFK_IdVendedor=isParaTransporteNegation;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdVendedorGuiaRemision);}
		}
		
	}

	public void setVisibilidadBusquedasParaSubCliente(Boolean isParaSubCliente){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaSubClienteNegation=!isParaSubCliente;

			this.isVisibilidadFK_IdCiudadDestino=isParaSubClienteNegation;
			if(!this.isVisibilidadFK_IdCiudadDestino) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdCiudadDestinoGuiaRemision);}

			this.isVisibilidadFK_IdCiudadOrigen=isParaSubClienteNegation;
			if(!this.isVisibilidadFK_IdCiudadOrigen) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdCiudadOrigenGuiaRemision);}

			this.isVisibilidadFK_IdCliente=isParaSubClienteNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdClienteGuiaRemision);}

			this.isVisibilidadFK_IdConsultor=isParaSubClienteNegation;
			if(!this.isVisibilidadFK_IdConsultor) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdConsultorGuiaRemision);}

			this.isVisibilidadFK_IdEmpleado=isParaSubClienteNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdEmpleadoGuiaRemision);}

			this.isVisibilidadFK_IdFactura=isParaSubClienteNegation;
			if(!this.isVisibilidadFK_IdFactura) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdFacturaGuiaRemision);}

			this.isVisibilidadFK_IdFormato=isParaSubClienteNegation;
			if(!this.isVisibilidadFK_IdFormato) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdFormatoGuiaRemision);}

			this.isVisibilidadFK_IdSubCliente=isParaSubCliente;
			if(!this.isVisibilidadFK_IdSubCliente) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdSubClienteGuiaRemision);}

			this.isVisibilidadFK_IdTipoCambio=isParaSubClienteNegation;
			if(!this.isVisibilidadFK_IdTipoCambio) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdTipoCambioGuiaRemision);}

			this.isVisibilidadFK_IdTipoLlamada=isParaSubClienteNegation;
			if(!this.isVisibilidadFK_IdTipoLlamada) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdTipoLlamadaGuiaRemision);}

			this.isVisibilidadFK_IdTipoPrecio=isParaSubClienteNegation;
			if(!this.isVisibilidadFK_IdTipoPrecio) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdTipoPrecioGuiaRemision);}

			this.isVisibilidadFK_IdTransporte=isParaSubClienteNegation;
			if(!this.isVisibilidadFK_IdTransporte) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdTransporteGuiaRemision);}

			this.isVisibilidadFK_IdTransportista=isParaSubClienteNegation;
			if(!this.isVisibilidadFK_IdTransportista) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdTransportistaGuiaRemision);}

			this.isVisibilidadFK_IdVendedor=isParaSubClienteNegation;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdVendedorGuiaRemision);}
		}
		
	}

	public void setVisibilidadBusquedasParaEmpleado(Boolean isParaEmpleado){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaEmpleadoNegation=!isParaEmpleado;

			this.isVisibilidadFK_IdCiudadDestino=isParaEmpleadoNegation;
			if(!this.isVisibilidadFK_IdCiudadDestino) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdCiudadDestinoGuiaRemision);}

			this.isVisibilidadFK_IdCiudadOrigen=isParaEmpleadoNegation;
			if(!this.isVisibilidadFK_IdCiudadOrigen) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdCiudadOrigenGuiaRemision);}

			this.isVisibilidadFK_IdCliente=isParaEmpleadoNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdClienteGuiaRemision);}

			this.isVisibilidadFK_IdConsultor=isParaEmpleadoNegation;
			if(!this.isVisibilidadFK_IdConsultor) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdConsultorGuiaRemision);}

			this.isVisibilidadFK_IdEmpleado=isParaEmpleado;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdEmpleadoGuiaRemision);}

			this.isVisibilidadFK_IdFactura=isParaEmpleadoNegation;
			if(!this.isVisibilidadFK_IdFactura) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdFacturaGuiaRemision);}

			this.isVisibilidadFK_IdFormato=isParaEmpleadoNegation;
			if(!this.isVisibilidadFK_IdFormato) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdFormatoGuiaRemision);}

			this.isVisibilidadFK_IdSubCliente=isParaEmpleadoNegation;
			if(!this.isVisibilidadFK_IdSubCliente) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdSubClienteGuiaRemision);}

			this.isVisibilidadFK_IdTipoCambio=isParaEmpleadoNegation;
			if(!this.isVisibilidadFK_IdTipoCambio) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdTipoCambioGuiaRemision);}

			this.isVisibilidadFK_IdTipoLlamada=isParaEmpleadoNegation;
			if(!this.isVisibilidadFK_IdTipoLlamada) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdTipoLlamadaGuiaRemision);}

			this.isVisibilidadFK_IdTipoPrecio=isParaEmpleadoNegation;
			if(!this.isVisibilidadFK_IdTipoPrecio) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdTipoPrecioGuiaRemision);}

			this.isVisibilidadFK_IdTransporte=isParaEmpleadoNegation;
			if(!this.isVisibilidadFK_IdTransporte) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdTransporteGuiaRemision);}

			this.isVisibilidadFK_IdTransportista=isParaEmpleadoNegation;
			if(!this.isVisibilidadFK_IdTransportista) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdTransportistaGuiaRemision);}

			this.isVisibilidadFK_IdVendedor=isParaEmpleadoNegation;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdVendedorGuiaRemision);}
		}
		
	}

	public void setVisibilidadBusquedasParaCiudadOrigen(Boolean isParaCiudadOrigen){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaCiudadOrigenNegation=!isParaCiudadOrigen;

			this.isVisibilidadFK_IdCiudadDestino=isParaCiudadOrigenNegation;
			if(!this.isVisibilidadFK_IdCiudadDestino) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdCiudadDestinoGuiaRemision);}

			this.isVisibilidadFK_IdCiudadOrigen=isParaCiudadOrigen;
			if(!this.isVisibilidadFK_IdCiudadOrigen) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdCiudadOrigenGuiaRemision);}

			this.isVisibilidadFK_IdCliente=isParaCiudadOrigenNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdClienteGuiaRemision);}

			this.isVisibilidadFK_IdConsultor=isParaCiudadOrigenNegation;
			if(!this.isVisibilidadFK_IdConsultor) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdConsultorGuiaRemision);}

			this.isVisibilidadFK_IdEmpleado=isParaCiudadOrigenNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdEmpleadoGuiaRemision);}

			this.isVisibilidadFK_IdFactura=isParaCiudadOrigenNegation;
			if(!this.isVisibilidadFK_IdFactura) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdFacturaGuiaRemision);}

			this.isVisibilidadFK_IdFormato=isParaCiudadOrigenNegation;
			if(!this.isVisibilidadFK_IdFormato) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdFormatoGuiaRemision);}

			this.isVisibilidadFK_IdSubCliente=isParaCiudadOrigenNegation;
			if(!this.isVisibilidadFK_IdSubCliente) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdSubClienteGuiaRemision);}

			this.isVisibilidadFK_IdTipoCambio=isParaCiudadOrigenNegation;
			if(!this.isVisibilidadFK_IdTipoCambio) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdTipoCambioGuiaRemision);}

			this.isVisibilidadFK_IdTipoLlamada=isParaCiudadOrigenNegation;
			if(!this.isVisibilidadFK_IdTipoLlamada) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdTipoLlamadaGuiaRemision);}

			this.isVisibilidadFK_IdTipoPrecio=isParaCiudadOrigenNegation;
			if(!this.isVisibilidadFK_IdTipoPrecio) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdTipoPrecioGuiaRemision);}

			this.isVisibilidadFK_IdTransporte=isParaCiudadOrigenNegation;
			if(!this.isVisibilidadFK_IdTransporte) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdTransporteGuiaRemision);}

			this.isVisibilidadFK_IdTransportista=isParaCiudadOrigenNegation;
			if(!this.isVisibilidadFK_IdTransportista) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdTransportistaGuiaRemision);}

			this.isVisibilidadFK_IdVendedor=isParaCiudadOrigenNegation;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdVendedorGuiaRemision);}
		}
		
	}

	public void setVisibilidadBusquedasParaCiudadDestino(Boolean isParaCiudadDestino){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaCiudadDestinoNegation=!isParaCiudadDestino;

			this.isVisibilidadFK_IdCiudadDestino=isParaCiudadDestino;
			if(!this.isVisibilidadFK_IdCiudadDestino) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdCiudadDestinoGuiaRemision);}

			this.isVisibilidadFK_IdCiudadOrigen=isParaCiudadDestinoNegation;
			if(!this.isVisibilidadFK_IdCiudadOrigen) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdCiudadOrigenGuiaRemision);}

			this.isVisibilidadFK_IdCliente=isParaCiudadDestinoNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdClienteGuiaRemision);}

			this.isVisibilidadFK_IdConsultor=isParaCiudadDestinoNegation;
			if(!this.isVisibilidadFK_IdConsultor) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdConsultorGuiaRemision);}

			this.isVisibilidadFK_IdEmpleado=isParaCiudadDestinoNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdEmpleadoGuiaRemision);}

			this.isVisibilidadFK_IdFactura=isParaCiudadDestinoNegation;
			if(!this.isVisibilidadFK_IdFactura) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdFacturaGuiaRemision);}

			this.isVisibilidadFK_IdFormato=isParaCiudadDestinoNegation;
			if(!this.isVisibilidadFK_IdFormato) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdFormatoGuiaRemision);}

			this.isVisibilidadFK_IdSubCliente=isParaCiudadDestinoNegation;
			if(!this.isVisibilidadFK_IdSubCliente) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdSubClienteGuiaRemision);}

			this.isVisibilidadFK_IdTipoCambio=isParaCiudadDestinoNegation;
			if(!this.isVisibilidadFK_IdTipoCambio) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdTipoCambioGuiaRemision);}

			this.isVisibilidadFK_IdTipoLlamada=isParaCiudadDestinoNegation;
			if(!this.isVisibilidadFK_IdTipoLlamada) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdTipoLlamadaGuiaRemision);}

			this.isVisibilidadFK_IdTipoPrecio=isParaCiudadDestinoNegation;
			if(!this.isVisibilidadFK_IdTipoPrecio) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdTipoPrecioGuiaRemision);}

			this.isVisibilidadFK_IdTransporte=isParaCiudadDestinoNegation;
			if(!this.isVisibilidadFK_IdTransporte) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdTransporteGuiaRemision);}

			this.isVisibilidadFK_IdTransportista=isParaCiudadDestinoNegation;
			if(!this.isVisibilidadFK_IdTransportista) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdTransportistaGuiaRemision);}

			this.isVisibilidadFK_IdVendedor=isParaCiudadDestinoNegation;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdVendedorGuiaRemision);}
		}
		
	}

	public void setVisibilidadBusquedasParaTipoLlamada(Boolean isParaTipoLlamada){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaTipoLlamadaNegation=!isParaTipoLlamada;

			this.isVisibilidadFK_IdCiudadDestino=isParaTipoLlamadaNegation;
			if(!this.isVisibilidadFK_IdCiudadDestino) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdCiudadDestinoGuiaRemision);}

			this.isVisibilidadFK_IdCiudadOrigen=isParaTipoLlamadaNegation;
			if(!this.isVisibilidadFK_IdCiudadOrigen) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdCiudadOrigenGuiaRemision);}

			this.isVisibilidadFK_IdCliente=isParaTipoLlamadaNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdClienteGuiaRemision);}

			this.isVisibilidadFK_IdConsultor=isParaTipoLlamadaNegation;
			if(!this.isVisibilidadFK_IdConsultor) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdConsultorGuiaRemision);}

			this.isVisibilidadFK_IdEmpleado=isParaTipoLlamadaNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdEmpleadoGuiaRemision);}

			this.isVisibilidadFK_IdFactura=isParaTipoLlamadaNegation;
			if(!this.isVisibilidadFK_IdFactura) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdFacturaGuiaRemision);}

			this.isVisibilidadFK_IdFormato=isParaTipoLlamadaNegation;
			if(!this.isVisibilidadFK_IdFormato) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdFormatoGuiaRemision);}

			this.isVisibilidadFK_IdSubCliente=isParaTipoLlamadaNegation;
			if(!this.isVisibilidadFK_IdSubCliente) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdSubClienteGuiaRemision);}

			this.isVisibilidadFK_IdTipoCambio=isParaTipoLlamadaNegation;
			if(!this.isVisibilidadFK_IdTipoCambio) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdTipoCambioGuiaRemision);}

			this.isVisibilidadFK_IdTipoLlamada=isParaTipoLlamada;
			if(!this.isVisibilidadFK_IdTipoLlamada) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdTipoLlamadaGuiaRemision);}

			this.isVisibilidadFK_IdTipoPrecio=isParaTipoLlamadaNegation;
			if(!this.isVisibilidadFK_IdTipoPrecio) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdTipoPrecioGuiaRemision);}

			this.isVisibilidadFK_IdTransporte=isParaTipoLlamadaNegation;
			if(!this.isVisibilidadFK_IdTransporte) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdTransporteGuiaRemision);}

			this.isVisibilidadFK_IdTransportista=isParaTipoLlamadaNegation;
			if(!this.isVisibilidadFK_IdTransportista) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdTransportistaGuiaRemision);}

			this.isVisibilidadFK_IdVendedor=isParaTipoLlamadaNegation;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdVendedorGuiaRemision);}
		}
		
	}

	public void setVisibilidadBusquedasParaTipoCambio(Boolean isParaTipoCambio){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaTipoCambioNegation=!isParaTipoCambio;

			this.isVisibilidadFK_IdCiudadDestino=isParaTipoCambioNegation;
			if(!this.isVisibilidadFK_IdCiudadDestino) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdCiudadDestinoGuiaRemision);}

			this.isVisibilidadFK_IdCiudadOrigen=isParaTipoCambioNegation;
			if(!this.isVisibilidadFK_IdCiudadOrigen) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdCiudadOrigenGuiaRemision);}

			this.isVisibilidadFK_IdCliente=isParaTipoCambioNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdClienteGuiaRemision);}

			this.isVisibilidadFK_IdConsultor=isParaTipoCambioNegation;
			if(!this.isVisibilidadFK_IdConsultor) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdConsultorGuiaRemision);}

			this.isVisibilidadFK_IdEmpleado=isParaTipoCambioNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdEmpleadoGuiaRemision);}

			this.isVisibilidadFK_IdFactura=isParaTipoCambioNegation;
			if(!this.isVisibilidadFK_IdFactura) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdFacturaGuiaRemision);}

			this.isVisibilidadFK_IdFormato=isParaTipoCambioNegation;
			if(!this.isVisibilidadFK_IdFormato) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdFormatoGuiaRemision);}

			this.isVisibilidadFK_IdSubCliente=isParaTipoCambioNegation;
			if(!this.isVisibilidadFK_IdSubCliente) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdSubClienteGuiaRemision);}

			this.isVisibilidadFK_IdTipoCambio=isParaTipoCambio;
			if(!this.isVisibilidadFK_IdTipoCambio) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdTipoCambioGuiaRemision);}

			this.isVisibilidadFK_IdTipoLlamada=isParaTipoCambioNegation;
			if(!this.isVisibilidadFK_IdTipoLlamada) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdTipoLlamadaGuiaRemision);}

			this.isVisibilidadFK_IdTipoPrecio=isParaTipoCambioNegation;
			if(!this.isVisibilidadFK_IdTipoPrecio) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdTipoPrecioGuiaRemision);}

			this.isVisibilidadFK_IdTransporte=isParaTipoCambioNegation;
			if(!this.isVisibilidadFK_IdTransporte) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdTransporteGuiaRemision);}

			this.isVisibilidadFK_IdTransportista=isParaTipoCambioNegation;
			if(!this.isVisibilidadFK_IdTransportista) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdTransportistaGuiaRemision);}

			this.isVisibilidadFK_IdVendedor=isParaTipoCambioNegation;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasGuiaRemision.remove(jPanelFK_IdVendedorGuiaRemision);}
		}
		
	}
	
	

	public String registrarSesionGuiaRemisionParaDetalleGuiaRemisiones() throws Exception {
		Boolean isPaginaPopupDetalleGuiaRemision=false;

		try {

			if(this.guiaremisionSessionBean==null) {
				this.guiaremisionSessionBean=new GuiaRemisionSessionBean();
			}

			if(this.jInternalFrameDetalleFormGuiaRemision.detalleguiaremisionSessionBean==null) {
				this.jInternalFrameDetalleFormGuiaRemision.detalleguiaremisionSessionBean=new DetalleGuiaRemisionSessionBean();
			}

			this.jInternalFrameDetalleFormGuiaRemision.detalleguiaremisionSessionBean.setsPathNavegacionActual(guiaremisionSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+DetalleGuiaRemisionConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormGuiaRemision.detalleguiaremisionSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupDetalleGuiaRemision=this.jInternalFrameDetalleFormGuiaRemision.detalleguiaremisionSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormGuiaRemision.detalleguiaremisionSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeDetalleGuiaRemision(true);
			this.jInternalFrameDetalleFormGuiaRemision.detalleguiaremisionSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeDetalleGuiaRemision(GuiaRemisionConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormGuiaRemision.detalleguiaremisionSessionBean.setisBusquedaDesdeForeignKeySesionGuiaRemision(true);
			this.jInternalFrameDetalleFormGuiaRemision.detalleguiaremisionSessionBean.setlidGuiaRemisionActual(this.idGuiaRemisionActual);
			this.jInternalFrameDetalleFormGuiaRemision.detalleguiaremisionSessionBean.setNoMantenimiento(true);

			guiaremisionSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyGuiaRemision(true);
			guiaremisionSessionBean.setlIdGuiaRemisionActualForeignKey(this.idGuiaRemisionActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}
	
	

	public String registrarSesionGuiaRemisionParaBusquedaClientes() throws Exception {
		Boolean isPaginaPopupCliente=false;

		try {

			if(guiaremisionSessionBean==null) {
				guiaremisionSessionBean=new GuiaRemisionSessionBean();
			}

			if(clienteSessionBean==null) {
				clienteSessionBean=new ClienteSessionBean();
			}

			clienteSessionBean.setsPathNavegacionActual(guiaremisionSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+ClienteConstantesFunciones.SCLASSWEBTITULO);
			clienteSessionBean.setisPermiteRecargarInformacion(false);
			clienteSessionBean.setisPaginaPopup(true);
			isPaginaPopupCliente=clienteSessionBean.getisPaginaPopup();
			clienteSessionBean.setisPaginaPopup(false);
			clienteSessionBean.setEstaModoBusqueda(true);
			clienteSessionBean.setsFuncionBusquedaRapida("window.opener.guiaremisionFuncionGeneral.setCombosCodigoDesdeBusquedaid_cliente(TO_REPLACE);");
			clienteSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeCliente(true);
			clienteSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeCliente(GuiaRemisionConstantesFunciones.SNOMBREOPCION);
			//clienteSessionBean.setisBusquedaDesdeForeignKeySesionGuiaRemision(true);
			//clienteSessionBean.setlidGuiaRemisionActual(this.idGuiaRemisionActual);

			guiaremisionSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyGuiaRemision(true);
			guiaremisionSessionBean.setlIdGuiaRemisionActualForeignKey(this.idGuiaRemisionActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
			return "";
	}

	public String registrarSesionGuiaRemisionParaBusquedaFacturas() throws Exception {
		Boolean isPaginaPopupFactura=false;

		try {

			if(guiaremisionSessionBean==null) {
				guiaremisionSessionBean=new GuiaRemisionSessionBean();
			}

			if(facturaSessionBean==null) {
				facturaSessionBean=new FacturaSessionBean();
			}

			facturaSessionBean.setsPathNavegacionActual(guiaremisionSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+FacturaConstantesFunciones.SCLASSWEBTITULO);
			facturaSessionBean.setisPermiteRecargarInformacion(false);
			facturaSessionBean.setisPaginaPopup(true);
			isPaginaPopupFactura=facturaSessionBean.getisPaginaPopup();
			facturaSessionBean.setisPaginaPopup(false);
			facturaSessionBean.setEstaModoBusqueda(true);
			facturaSessionBean.setsFuncionBusquedaRapida("window.opener.guiaremisionFuncionGeneral.setCombosCodigoDesdeBusquedaid_factura(TO_REPLACE);");
			facturaSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeFactura(true);
			facturaSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeFactura(GuiaRemisionConstantesFunciones.SNOMBREOPCION);
			//facturaSessionBean.setisBusquedaDesdeForeignKeySesionGuiaRemision(true);
			//facturaSessionBean.setlidGuiaRemisionActual(this.idGuiaRemisionActual);

			guiaremisionSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyGuiaRemision(true);
			guiaremisionSessionBean.setlIdGuiaRemisionActualForeignKey(this.idGuiaRemisionActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
			return "";
	}

	public String registrarSesionGuiaRemisionParaBusquedaTipoCambios() throws Exception {
		Boolean isPaginaPopupTipoCambio=false;

		try {

			if(guiaremisionSessionBean==null) {
				guiaremisionSessionBean=new GuiaRemisionSessionBean();
			}

			if(tipocambioSessionBean==null) {
				tipocambioSessionBean=new TipoCambioSessionBean();
			}

			tipocambioSessionBean.setsPathNavegacionActual(guiaremisionSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+TipoCambioConstantesFunciones.SCLASSWEBTITULO);
			tipocambioSessionBean.setisPermiteRecargarInformacion(false);
			tipocambioSessionBean.setisPaginaPopup(true);
			isPaginaPopupTipoCambio=tipocambioSessionBean.getisPaginaPopup();
			tipocambioSessionBean.setisPaginaPopup(false);
			tipocambioSessionBean.setEstaModoBusqueda(true);
			tipocambioSessionBean.setsFuncionBusquedaRapida("window.opener.guiaremisionFuncionGeneral.setCombosCodigoDesdeBusquedaid_tipo_cambio(TO_REPLACE);");
			tipocambioSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeTipoCambio(true);
			tipocambioSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeTipoCambio(GuiaRemisionConstantesFunciones.SNOMBREOPCION);
			//tipocambioSessionBean.setisBusquedaDesdeForeignKeySesionGuiaRemision(true);
			//tipocambioSessionBean.setlidGuiaRemisionActual(this.idGuiaRemisionActual);

			guiaremisionSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyGuiaRemision(true);
			guiaremisionSessionBean.setlIdGuiaRemisionActualForeignKey(this.idGuiaRemisionActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
			return "";
	}
	
	
	public void guardarDatosBusquedaSession() throws Exception {
		
		//GuiaRemisionSessionBean guiaremisionSessionBean=new GuiaRemisionSessionBean();
		
		if(this.guiaremisionSessionBean==null) {
			this.guiaremisionSessionBean=new GuiaRemisionSessionBean();
		}
		
		this.guiaremisionSessionBean.setsUltimaBusquedaGuiaRemision(this.getsAccionBusqueda());
		this.guiaremisionSessionBean.setiNumeroPaginacion(this.getiNumeroPaginacion());
		this.guiaremisionSessionBean.setiNumeroPaginacionPagina(this.getiNumeroPaginacionPagina());
		
		if(this.getsAccionBusqueda().equals("Todos")) {
			;
		}
		

		else if(this.getsAccionBusqueda().equals("FK_IdCiudadDestino")) {
			guiaremisionSessionBean.setid_ciudad_destino(this.getid_ciudad_destinoFK_IdCiudadDestino());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdCiudadOrigen")) {
			guiaremisionSessionBean.setid_ciudad_origen(this.getid_ciudad_origenFK_IdCiudadOrigen());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdCliente")) {
			guiaremisionSessionBean.setid_cliente(this.getid_clienteFK_IdCliente());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdConsultor")) {
			guiaremisionSessionBean.setid_consultor(this.getid_consultorFK_IdConsultor());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdEjercicio")) {
			guiaremisionSessionBean.setid_ejercicio(this.getid_ejercicioFK_IdEjercicio());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdEmpleado")) {
			guiaremisionSessionBean.setid_empleado(this.getid_empleadoFK_IdEmpleado());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdEmpresa")) {
			guiaremisionSessionBean.setid_empresa(this.getid_empresaFK_IdEmpresa());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdFactura")) {
			guiaremisionSessionBean.setid_factura(this.getid_facturaFK_IdFactura());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdFormato")) {
			guiaremisionSessionBean.setid_formato(this.getid_formatoFK_IdFormato());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdMoneda")) {
			guiaremisionSessionBean.setid_moneda(this.getid_monedaFK_IdMoneda());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdPeriodo")) {
			guiaremisionSessionBean.setid_periodo(this.getid_periodoFK_IdPeriodo());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdSubCliente")) {
			guiaremisionSessionBean.setid_sub_cliente(this.getid_sub_clienteFK_IdSubCliente());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdSucursal")) {
			guiaremisionSessionBean.setid_sucursal(this.getid_sucursalFK_IdSucursal());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdTipoCambio")) {
			guiaremisionSessionBean.setid_tipo_cambio(this.getid_tipo_cambioFK_IdTipoCambio());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdTipoLlamada")) {
			guiaremisionSessionBean.setid_tipo_llamada(this.getid_tipo_llamadaFK_IdTipoLlamada());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdTipoPrecio")) {
			guiaremisionSessionBean.setid_tipo_precio(this.getid_tipo_precioFK_IdTipoPrecio());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdTransporte")) {
			guiaremisionSessionBean.setid_transporte(this.getid_transporteFK_IdTransporte());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdTransportista")) {
			guiaremisionSessionBean.setid_transportista(this.getid_transportistaFK_IdTransportista());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdUsuario")) {
			guiaremisionSessionBean.setid_usuario(this.getid_usuarioFK_IdUsuario());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdVendedor")) {
			guiaremisionSessionBean.setid_vendedor(this.getid_vendedorFK_IdVendedor());	
		}
		
	}
	
	public void traerDatosBusquedaDesdeSession() throws Exception {
		//GuiaRemisionSessionBean guiaremisionSessionBean=new GuiaRemisionSessionBean();
		
		if(this.guiaremisionSessionBean==null) {
			this.guiaremisionSessionBean=new GuiaRemisionSessionBean();
		}
		
		if(this.guiaremisionSessionBean.getsUltimaBusquedaGuiaRemision()!=null&&!this.guiaremisionSessionBean.getsUltimaBusquedaGuiaRemision().equals("")) {
			this.setsAccionBusqueda(guiaremisionSessionBean.getsUltimaBusquedaGuiaRemision());
			this.setiNumeroPaginacion(guiaremisionSessionBean.getiNumeroPaginacion());
			this.setiNumeroPaginacionPagina(guiaremisionSessionBean.getiNumeroPaginacionPagina());		
				
			if(this.getsAccionBusqueda().equals("Todos")) {
				;
			}
			

			 else if(this.getsAccionBusqueda().equals("FK_IdCiudadDestino")) {
				this.setid_ciudad_destinoFK_IdCiudadDestino(guiaremisionSessionBean.getid_ciudad_destino());
				guiaremisionSessionBean.setid_ciudad_destino(null);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdCiudadOrigen")) {
				this.setid_ciudad_origenFK_IdCiudadOrigen(guiaremisionSessionBean.getid_ciudad_origen());
				guiaremisionSessionBean.setid_ciudad_origen(null);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdCliente")) {
				this.setid_clienteFK_IdCliente(guiaremisionSessionBean.getid_cliente());
				guiaremisionSessionBean.setid_cliente(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdConsultor")) {
				this.setid_consultorFK_IdConsultor(guiaremisionSessionBean.getid_consultor());
				guiaremisionSessionBean.setid_consultor(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdEjercicio")) {
				this.setid_ejercicioFK_IdEjercicio(guiaremisionSessionBean.getid_ejercicio());
				guiaremisionSessionBean.setid_ejercicio(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdEmpleado")) {
				this.setid_empleadoFK_IdEmpleado(guiaremisionSessionBean.getid_empleado());
				guiaremisionSessionBean.setid_empleado(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdEmpresa")) {
				this.setid_empresaFK_IdEmpresa(guiaremisionSessionBean.getid_empresa());
				guiaremisionSessionBean.setid_empresa(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdFactura")) {
				this.setid_facturaFK_IdFactura(guiaremisionSessionBean.getid_factura());
				guiaremisionSessionBean.setid_factura(null);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdFormato")) {
				this.setid_formatoFK_IdFormato(guiaremisionSessionBean.getid_formato());
				guiaremisionSessionBean.setid_formato(null);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdMoneda")) {
				this.setid_monedaFK_IdMoneda(guiaremisionSessionBean.getid_moneda());
				guiaremisionSessionBean.setid_moneda(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdPeriodo")) {
				this.setid_periodoFK_IdPeriodo(guiaremisionSessionBean.getid_periodo());
				guiaremisionSessionBean.setid_periodo(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdSubCliente")) {
				this.setid_sub_clienteFK_IdSubCliente(guiaremisionSessionBean.getid_sub_cliente());
				guiaremisionSessionBean.setid_sub_cliente(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdSucursal")) {
				this.setid_sucursalFK_IdSucursal(guiaremisionSessionBean.getid_sucursal());
				guiaremisionSessionBean.setid_sucursal(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdTipoCambio")) {
				this.setid_tipo_cambioFK_IdTipoCambio(guiaremisionSessionBean.getid_tipo_cambio());
				guiaremisionSessionBean.setid_tipo_cambio(null);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdTipoLlamada")) {
				this.setid_tipo_llamadaFK_IdTipoLlamada(guiaremisionSessionBean.getid_tipo_llamada());
				guiaremisionSessionBean.setid_tipo_llamada(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdTipoPrecio")) {
				this.setid_tipo_precioFK_IdTipoPrecio(guiaremisionSessionBean.getid_tipo_precio());
				guiaremisionSessionBean.setid_tipo_precio(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdTransporte")) {
				this.setid_transporteFK_IdTransporte(guiaremisionSessionBean.getid_transporte());
				guiaremisionSessionBean.setid_transporte(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdTransportista")) {
				this.setid_transportistaFK_IdTransportista(guiaremisionSessionBean.getid_transportista());
				guiaremisionSessionBean.setid_transportista(null);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdUsuario")) {
				this.setid_usuarioFK_IdUsuario(guiaremisionSessionBean.getid_usuario());
				guiaremisionSessionBean.setid_usuario(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdVendedor")) {
				this.setid_vendedorFK_IdVendedor(guiaremisionSessionBean.getid_vendedor());
				guiaremisionSessionBean.setid_vendedor(null);
			}
		}
		
		this.guiaremisionSessionBean.setsUltimaBusquedaGuiaRemision("");
		this.guiaremisionSessionBean.setiNumeroPaginacion(GuiaRemisionConstantesFunciones.INUMEROPAGINACION);
		this.guiaremisionSessionBean.setiNumeroPaginacionPagina(0);
		
	}
	
	public void procesoActualizarFilaTotales(Boolean esCampoValor,String sTipo) {
		try {
			this.actualizarFilaTotales();
				
			this.traerValoresTablaTotales();
			
			this.inicializarActualizarBindingTablaGuiaRemision(false);
			
			
			
			
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	
	
	public void updateBusquedasFormularioGuiaRemision() {
		this.updateBorderResaltarBusquedasFormularioGuiaRemision();
		this.updateVisibilidadBusquedasFormularioGuiaRemision();
		this.updateHabilitarBusquedasFormularioGuiaRemision();
	}
	
	public void updateBorderResaltarBusquedasFormularioGuiaRemision() {					
	//BYDAN_BUSQUEDAS
		
	int index=0;
		
	if(this.jTabbedPaneBusquedasGuiaRemision.getComponents().length>0) {
	

		if(this.guiaremisionConstantesFunciones.resaltarFK_IdCiudadDestinoGuiaRemision!=null) {
			index= this.jTabbedPaneBusquedasGuiaRemision.indexOfComponent(this.jPanelFK_IdCiudadDestinoGuiaRemision);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasGuiaRemision.getComponent(index);
				jPanel.setBorder(this.guiaremisionConstantesFunciones.resaltarFK_IdCiudadDestinoGuiaRemision);
			}
		}

		if(this.guiaremisionConstantesFunciones.resaltarFK_IdCiudadOrigenGuiaRemision!=null) {
			index= this.jTabbedPaneBusquedasGuiaRemision.indexOfComponent(this.jPanelFK_IdCiudadOrigenGuiaRemision);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasGuiaRemision.getComponent(index);
				jPanel.setBorder(this.guiaremisionConstantesFunciones.resaltarFK_IdCiudadOrigenGuiaRemision);
			}
		}

		if(this.guiaremisionConstantesFunciones.resaltarFK_IdClienteGuiaRemision!=null) {
			index= this.jTabbedPaneBusquedasGuiaRemision.indexOfComponent(this.jPanelFK_IdClienteGuiaRemision);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasGuiaRemision.getComponent(index);
				jPanel.setBorder(this.guiaremisionConstantesFunciones.resaltarFK_IdClienteGuiaRemision);
			}
		}

		if(this.guiaremisionConstantesFunciones.resaltarFK_IdConsultorGuiaRemision!=null) {
			index= this.jTabbedPaneBusquedasGuiaRemision.indexOfComponent(this.jPanelFK_IdConsultorGuiaRemision);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasGuiaRemision.getComponent(index);
				jPanel.setBorder(this.guiaremisionConstantesFunciones.resaltarFK_IdConsultorGuiaRemision);
			}
		}

		if(this.guiaremisionConstantesFunciones.resaltarFK_IdEmpleadoGuiaRemision!=null) {
			index= this.jTabbedPaneBusquedasGuiaRemision.indexOfComponent(this.jPanelFK_IdEmpleadoGuiaRemision);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasGuiaRemision.getComponent(index);
				jPanel.setBorder(this.guiaremisionConstantesFunciones.resaltarFK_IdEmpleadoGuiaRemision);
			}
		}

		if(this.guiaremisionConstantesFunciones.resaltarFK_IdFacturaGuiaRemision!=null) {
			index= this.jTabbedPaneBusquedasGuiaRemision.indexOfComponent(this.jPanelFK_IdFacturaGuiaRemision);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasGuiaRemision.getComponent(index);
				jPanel.setBorder(this.guiaremisionConstantesFunciones.resaltarFK_IdFacturaGuiaRemision);
			}
		}

		if(this.guiaremisionConstantesFunciones.resaltarFK_IdFormatoGuiaRemision!=null) {
			index= this.jTabbedPaneBusquedasGuiaRemision.indexOfComponent(this.jPanelFK_IdFormatoGuiaRemision);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasGuiaRemision.getComponent(index);
				jPanel.setBorder(this.guiaremisionConstantesFunciones.resaltarFK_IdFormatoGuiaRemision);
			}
		}

		if(this.guiaremisionConstantesFunciones.resaltarFK_IdSubClienteGuiaRemision!=null) {
			index= this.jTabbedPaneBusquedasGuiaRemision.indexOfComponent(this.jPanelFK_IdSubClienteGuiaRemision);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasGuiaRemision.getComponent(index);
				jPanel.setBorder(this.guiaremisionConstantesFunciones.resaltarFK_IdSubClienteGuiaRemision);
			}
		}

		if(this.guiaremisionConstantesFunciones.resaltarFK_IdTipoCambioGuiaRemision!=null) {
			index= this.jTabbedPaneBusquedasGuiaRemision.indexOfComponent(this.jPanelFK_IdTipoCambioGuiaRemision);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasGuiaRemision.getComponent(index);
				jPanel.setBorder(this.guiaremisionConstantesFunciones.resaltarFK_IdTipoCambioGuiaRemision);
			}
		}

		if(this.guiaremisionConstantesFunciones.resaltarFK_IdTipoLlamadaGuiaRemision!=null) {
			index= this.jTabbedPaneBusquedasGuiaRemision.indexOfComponent(this.jPanelFK_IdTipoLlamadaGuiaRemision);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasGuiaRemision.getComponent(index);
				jPanel.setBorder(this.guiaremisionConstantesFunciones.resaltarFK_IdTipoLlamadaGuiaRemision);
			}
		}

		if(this.guiaremisionConstantesFunciones.resaltarFK_IdTipoPrecioGuiaRemision!=null) {
			index= this.jTabbedPaneBusquedasGuiaRemision.indexOfComponent(this.jPanelFK_IdTipoPrecioGuiaRemision);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasGuiaRemision.getComponent(index);
				jPanel.setBorder(this.guiaremisionConstantesFunciones.resaltarFK_IdTipoPrecioGuiaRemision);
			}
		}

		if(this.guiaremisionConstantesFunciones.resaltarFK_IdTransporteGuiaRemision!=null) {
			index= this.jTabbedPaneBusquedasGuiaRemision.indexOfComponent(this.jPanelFK_IdTransporteGuiaRemision);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasGuiaRemision.getComponent(index);
				jPanel.setBorder(this.guiaremisionConstantesFunciones.resaltarFK_IdTransporteGuiaRemision);
			}
		}

		if(this.guiaremisionConstantesFunciones.resaltarFK_IdTransportistaGuiaRemision!=null) {
			index= this.jTabbedPaneBusquedasGuiaRemision.indexOfComponent(this.jPanelFK_IdTransportistaGuiaRemision);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasGuiaRemision.getComponent(index);
				jPanel.setBorder(this.guiaremisionConstantesFunciones.resaltarFK_IdTransportistaGuiaRemision);
			}
		}

		if(this.guiaremisionConstantesFunciones.resaltarFK_IdVendedorGuiaRemision!=null) {
			index= this.jTabbedPaneBusquedasGuiaRemision.indexOfComponent(this.jPanelFK_IdVendedorGuiaRemision);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasGuiaRemision.getComponent(index);
				jPanel.setBorder(this.guiaremisionConstantesFunciones.resaltarFK_IdVendedorGuiaRemision);
			}
		}
	}	
	
	}
	
	public void updateVisibilidadBusquedasFormularioGuiaRemision() {
	//BYDAN_BUSQUEDAS
	
	int index=0;
	JPanel jPanel=null;
		
	if(this.jTabbedPaneBusquedasGuiaRemision.getComponents().length>0) {
	

			index= this.jTabbedPaneBusquedasGuiaRemision.indexOfComponent(this.jPanelFK_IdCiudadDestinoGuiaRemision);
			jPanel=(JPanel)this.jTabbedPaneBusquedasGuiaRemision.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.guiaremisionConstantesFunciones.mostrarFK_IdCiudadDestinoGuiaRemision);
			if(!this.guiaremisionConstantesFunciones.mostrarFK_IdCiudadDestinoGuiaRemision && index>-1) {
				this.jTabbedPaneBusquedasGuiaRemision.remove(index);
			}

			index= this.jTabbedPaneBusquedasGuiaRemision.indexOfComponent(this.jPanelFK_IdCiudadOrigenGuiaRemision);
			jPanel=(JPanel)this.jTabbedPaneBusquedasGuiaRemision.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.guiaremisionConstantesFunciones.mostrarFK_IdCiudadOrigenGuiaRemision);
			if(!this.guiaremisionConstantesFunciones.mostrarFK_IdCiudadOrigenGuiaRemision && index>-1) {
				this.jTabbedPaneBusquedasGuiaRemision.remove(index);
			}

			index= this.jTabbedPaneBusquedasGuiaRemision.indexOfComponent(this.jPanelFK_IdClienteGuiaRemision);
			jPanel=(JPanel)this.jTabbedPaneBusquedasGuiaRemision.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.guiaremisionConstantesFunciones.mostrarFK_IdClienteGuiaRemision);
			if(!this.guiaremisionConstantesFunciones.mostrarFK_IdClienteGuiaRemision && index>-1) {
				this.jTabbedPaneBusquedasGuiaRemision.remove(index);
			}

			index= this.jTabbedPaneBusquedasGuiaRemision.indexOfComponent(this.jPanelFK_IdConsultorGuiaRemision);
			jPanel=(JPanel)this.jTabbedPaneBusquedasGuiaRemision.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.guiaremisionConstantesFunciones.mostrarFK_IdConsultorGuiaRemision);
			if(!this.guiaremisionConstantesFunciones.mostrarFK_IdConsultorGuiaRemision && index>-1) {
				this.jTabbedPaneBusquedasGuiaRemision.remove(index);
			}

			index= this.jTabbedPaneBusquedasGuiaRemision.indexOfComponent(this.jPanelFK_IdEmpleadoGuiaRemision);
			jPanel=(JPanel)this.jTabbedPaneBusquedasGuiaRemision.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.guiaremisionConstantesFunciones.mostrarFK_IdEmpleadoGuiaRemision);
			if(!this.guiaremisionConstantesFunciones.mostrarFK_IdEmpleadoGuiaRemision && index>-1) {
				this.jTabbedPaneBusquedasGuiaRemision.remove(index);
			}

			index= this.jTabbedPaneBusquedasGuiaRemision.indexOfComponent(this.jPanelFK_IdFacturaGuiaRemision);
			jPanel=(JPanel)this.jTabbedPaneBusquedasGuiaRemision.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.guiaremisionConstantesFunciones.mostrarFK_IdFacturaGuiaRemision);
			if(!this.guiaremisionConstantesFunciones.mostrarFK_IdFacturaGuiaRemision && index>-1) {
				this.jTabbedPaneBusquedasGuiaRemision.remove(index);
			}

			index= this.jTabbedPaneBusquedasGuiaRemision.indexOfComponent(this.jPanelFK_IdFormatoGuiaRemision);
			jPanel=(JPanel)this.jTabbedPaneBusquedasGuiaRemision.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.guiaremisionConstantesFunciones.mostrarFK_IdFormatoGuiaRemision);
			if(!this.guiaremisionConstantesFunciones.mostrarFK_IdFormatoGuiaRemision && index>-1) {
				this.jTabbedPaneBusquedasGuiaRemision.remove(index);
			}

			index= this.jTabbedPaneBusquedasGuiaRemision.indexOfComponent(this.jPanelFK_IdSubClienteGuiaRemision);
			jPanel=(JPanel)this.jTabbedPaneBusquedasGuiaRemision.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.guiaremisionConstantesFunciones.mostrarFK_IdSubClienteGuiaRemision);
			if(!this.guiaremisionConstantesFunciones.mostrarFK_IdSubClienteGuiaRemision && index>-1) {
				this.jTabbedPaneBusquedasGuiaRemision.remove(index);
			}

			index= this.jTabbedPaneBusquedasGuiaRemision.indexOfComponent(this.jPanelFK_IdTipoCambioGuiaRemision);
			jPanel=(JPanel)this.jTabbedPaneBusquedasGuiaRemision.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.guiaremisionConstantesFunciones.mostrarFK_IdTipoCambioGuiaRemision);
			if(!this.guiaremisionConstantesFunciones.mostrarFK_IdTipoCambioGuiaRemision && index>-1) {
				this.jTabbedPaneBusquedasGuiaRemision.remove(index);
			}

			index= this.jTabbedPaneBusquedasGuiaRemision.indexOfComponent(this.jPanelFK_IdTipoLlamadaGuiaRemision);
			jPanel=(JPanel)this.jTabbedPaneBusquedasGuiaRemision.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.guiaremisionConstantesFunciones.mostrarFK_IdTipoLlamadaGuiaRemision);
			if(!this.guiaremisionConstantesFunciones.mostrarFK_IdTipoLlamadaGuiaRemision && index>-1) {
				this.jTabbedPaneBusquedasGuiaRemision.remove(index);
			}

			index= this.jTabbedPaneBusquedasGuiaRemision.indexOfComponent(this.jPanelFK_IdTipoPrecioGuiaRemision);
			jPanel=(JPanel)this.jTabbedPaneBusquedasGuiaRemision.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.guiaremisionConstantesFunciones.mostrarFK_IdTipoPrecioGuiaRemision);
			if(!this.guiaremisionConstantesFunciones.mostrarFK_IdTipoPrecioGuiaRemision && index>-1) {
				this.jTabbedPaneBusquedasGuiaRemision.remove(index);
			}

			index= this.jTabbedPaneBusquedasGuiaRemision.indexOfComponent(this.jPanelFK_IdTransporteGuiaRemision);
			jPanel=(JPanel)this.jTabbedPaneBusquedasGuiaRemision.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.guiaremisionConstantesFunciones.mostrarFK_IdTransporteGuiaRemision);
			if(!this.guiaremisionConstantesFunciones.mostrarFK_IdTransporteGuiaRemision && index>-1) {
				this.jTabbedPaneBusquedasGuiaRemision.remove(index);
			}

			index= this.jTabbedPaneBusquedasGuiaRemision.indexOfComponent(this.jPanelFK_IdTransportistaGuiaRemision);
			jPanel=(JPanel)this.jTabbedPaneBusquedasGuiaRemision.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.guiaremisionConstantesFunciones.mostrarFK_IdTransportistaGuiaRemision);
			if(!this.guiaremisionConstantesFunciones.mostrarFK_IdTransportistaGuiaRemision && index>-1) {
				this.jTabbedPaneBusquedasGuiaRemision.remove(index);
			}

			index= this.jTabbedPaneBusquedasGuiaRemision.indexOfComponent(this.jPanelFK_IdVendedorGuiaRemision);
			jPanel=(JPanel)this.jTabbedPaneBusquedasGuiaRemision.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.guiaremisionConstantesFunciones.mostrarFK_IdVendedorGuiaRemision);
			if(!this.guiaremisionConstantesFunciones.mostrarFK_IdVendedorGuiaRemision && index>-1) {
				this.jTabbedPaneBusquedasGuiaRemision.remove(index);
			}
	}	
	
	}
	
	public void updateHabilitarBusquedasFormularioGuiaRemision() {
	
	//BYDAN_BUSQUEDAS		
		int index=0;
		JPanel jPanel=null;
			
		if(this.jTabbedPaneBusquedasGuiaRemision.getComponents().length>0) {
	

			index= this.jTabbedPaneBusquedasGuiaRemision.indexOfComponent(this.jPanelFK_IdCiudadDestinoGuiaRemision);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasGuiaRemision.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.guiaremisionConstantesFunciones.activarFK_IdCiudadDestinoGuiaRemision);
				this.jTabbedPaneBusquedasGuiaRemision.setEnabledAt(index,this.guiaremisionConstantesFunciones.activarFK_IdCiudadDestinoGuiaRemision);
			}

			index= this.jTabbedPaneBusquedasGuiaRemision.indexOfComponent(this.jPanelFK_IdCiudadOrigenGuiaRemision);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasGuiaRemision.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.guiaremisionConstantesFunciones.activarFK_IdCiudadOrigenGuiaRemision);
				this.jTabbedPaneBusquedasGuiaRemision.setEnabledAt(index,this.guiaremisionConstantesFunciones.activarFK_IdCiudadOrigenGuiaRemision);
			}

			index= this.jTabbedPaneBusquedasGuiaRemision.indexOfComponent(this.jPanelFK_IdClienteGuiaRemision);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasGuiaRemision.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.guiaremisionConstantesFunciones.activarFK_IdClienteGuiaRemision);
				this.jTabbedPaneBusquedasGuiaRemision.setEnabledAt(index,this.guiaremisionConstantesFunciones.activarFK_IdClienteGuiaRemision);
			}

			index= this.jTabbedPaneBusquedasGuiaRemision.indexOfComponent(this.jPanelFK_IdConsultorGuiaRemision);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasGuiaRemision.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.guiaremisionConstantesFunciones.activarFK_IdConsultorGuiaRemision);
				this.jTabbedPaneBusquedasGuiaRemision.setEnabledAt(index,this.guiaremisionConstantesFunciones.activarFK_IdConsultorGuiaRemision);
			}

			index= this.jTabbedPaneBusquedasGuiaRemision.indexOfComponent(this.jPanelFK_IdEmpleadoGuiaRemision);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasGuiaRemision.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.guiaremisionConstantesFunciones.activarFK_IdEmpleadoGuiaRemision);
				this.jTabbedPaneBusquedasGuiaRemision.setEnabledAt(index,this.guiaremisionConstantesFunciones.activarFK_IdEmpleadoGuiaRemision);
			}

			index= this.jTabbedPaneBusquedasGuiaRemision.indexOfComponent(this.jPanelFK_IdFacturaGuiaRemision);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasGuiaRemision.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.guiaremisionConstantesFunciones.activarFK_IdFacturaGuiaRemision);
				this.jTabbedPaneBusquedasGuiaRemision.setEnabledAt(index,this.guiaremisionConstantesFunciones.activarFK_IdFacturaGuiaRemision);
			}

			index= this.jTabbedPaneBusquedasGuiaRemision.indexOfComponent(this.jPanelFK_IdFormatoGuiaRemision);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasGuiaRemision.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.guiaremisionConstantesFunciones.activarFK_IdFormatoGuiaRemision);
				this.jTabbedPaneBusquedasGuiaRemision.setEnabledAt(index,this.guiaremisionConstantesFunciones.activarFK_IdFormatoGuiaRemision);
			}

			index= this.jTabbedPaneBusquedasGuiaRemision.indexOfComponent(this.jPanelFK_IdSubClienteGuiaRemision);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasGuiaRemision.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.guiaremisionConstantesFunciones.activarFK_IdSubClienteGuiaRemision);
				this.jTabbedPaneBusquedasGuiaRemision.setEnabledAt(index,this.guiaremisionConstantesFunciones.activarFK_IdSubClienteGuiaRemision);
			}

			index= this.jTabbedPaneBusquedasGuiaRemision.indexOfComponent(this.jPanelFK_IdTipoCambioGuiaRemision);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasGuiaRemision.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.guiaremisionConstantesFunciones.activarFK_IdTipoCambioGuiaRemision);
				this.jTabbedPaneBusquedasGuiaRemision.setEnabledAt(index,this.guiaremisionConstantesFunciones.activarFK_IdTipoCambioGuiaRemision);
			}

			index= this.jTabbedPaneBusquedasGuiaRemision.indexOfComponent(this.jPanelFK_IdTipoLlamadaGuiaRemision);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasGuiaRemision.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.guiaremisionConstantesFunciones.activarFK_IdTipoLlamadaGuiaRemision);
				this.jTabbedPaneBusquedasGuiaRemision.setEnabledAt(index,this.guiaremisionConstantesFunciones.activarFK_IdTipoLlamadaGuiaRemision);
			}

			index= this.jTabbedPaneBusquedasGuiaRemision.indexOfComponent(this.jPanelFK_IdTipoPrecioGuiaRemision);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasGuiaRemision.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.guiaremisionConstantesFunciones.activarFK_IdTipoPrecioGuiaRemision);
				this.jTabbedPaneBusquedasGuiaRemision.setEnabledAt(index,this.guiaremisionConstantesFunciones.activarFK_IdTipoPrecioGuiaRemision);
			}

			index= this.jTabbedPaneBusquedasGuiaRemision.indexOfComponent(this.jPanelFK_IdTransporteGuiaRemision);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasGuiaRemision.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.guiaremisionConstantesFunciones.activarFK_IdTransporteGuiaRemision);
				this.jTabbedPaneBusquedasGuiaRemision.setEnabledAt(index,this.guiaremisionConstantesFunciones.activarFK_IdTransporteGuiaRemision);
			}

			index= this.jTabbedPaneBusquedasGuiaRemision.indexOfComponent(this.jPanelFK_IdTransportistaGuiaRemision);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasGuiaRemision.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.guiaremisionConstantesFunciones.activarFK_IdTransportistaGuiaRemision);
				this.jTabbedPaneBusquedasGuiaRemision.setEnabledAt(index,this.guiaremisionConstantesFunciones.activarFK_IdTransportistaGuiaRemision);
			}

			index= this.jTabbedPaneBusquedasGuiaRemision.indexOfComponent(this.jPanelFK_IdVendedorGuiaRemision);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasGuiaRemision.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.guiaremisionConstantesFunciones.activarFK_IdVendedorGuiaRemision);
				this.jTabbedPaneBusquedasGuiaRemision.setEnabledAt(index,this.guiaremisionConstantesFunciones.activarFK_IdVendedorGuiaRemision);
			}
		}	
	
	}
	
	
	public void resaltarPanelBusquedaGuiaRemision(String sTipoBusqueda) {
		Boolean existe=false;
		//BYDAN_BUSQUEDAS
		
		int index=0;
		Border resaltar = Funciones2.getBorderResaltar(this.parametroGeneralUsuario,"TAB");

		if(sTipoBusqueda.equals("FK_IdCiudadDestino")) {
			index= this.jTabbedPaneBusquedasGuiaRemision.indexOfComponent(this.jPanelFK_IdCiudadDestinoGuiaRemision);

			this.jTabbedPaneBusquedasGuiaRemision.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasGuiaRemision.getComponent(index);

			this.guiaremisionConstantesFunciones.setResaltarFK_IdCiudadDestinoGuiaRemision(resaltar);

			jPanel.setBorder(this.guiaremisionConstantesFunciones.resaltarFK_IdCiudadDestinoGuiaRemision);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdCiudadOrigen")) {
			index= this.jTabbedPaneBusquedasGuiaRemision.indexOfComponent(this.jPanelFK_IdCiudadOrigenGuiaRemision);

			this.jTabbedPaneBusquedasGuiaRemision.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasGuiaRemision.getComponent(index);

			this.guiaremisionConstantesFunciones.setResaltarFK_IdCiudadOrigenGuiaRemision(resaltar);

			jPanel.setBorder(this.guiaremisionConstantesFunciones.resaltarFK_IdCiudadOrigenGuiaRemision);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdCliente")) {
			index= this.jTabbedPaneBusquedasGuiaRemision.indexOfComponent(this.jPanelFK_IdClienteGuiaRemision);

			this.jTabbedPaneBusquedasGuiaRemision.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasGuiaRemision.getComponent(index);

			this.guiaremisionConstantesFunciones.setResaltarFK_IdClienteGuiaRemision(resaltar);

			jPanel.setBorder(this.guiaremisionConstantesFunciones.resaltarFK_IdClienteGuiaRemision);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdConsultor")) {
			index= this.jTabbedPaneBusquedasGuiaRemision.indexOfComponent(this.jPanelFK_IdConsultorGuiaRemision);

			this.jTabbedPaneBusquedasGuiaRemision.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasGuiaRemision.getComponent(index);

			this.guiaremisionConstantesFunciones.setResaltarFK_IdConsultorGuiaRemision(resaltar);

			jPanel.setBorder(this.guiaremisionConstantesFunciones.resaltarFK_IdConsultorGuiaRemision);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdEmpleado")) {
			index= this.jTabbedPaneBusquedasGuiaRemision.indexOfComponent(this.jPanelFK_IdEmpleadoGuiaRemision);

			this.jTabbedPaneBusquedasGuiaRemision.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasGuiaRemision.getComponent(index);

			this.guiaremisionConstantesFunciones.setResaltarFK_IdEmpleadoGuiaRemision(resaltar);

			jPanel.setBorder(this.guiaremisionConstantesFunciones.resaltarFK_IdEmpleadoGuiaRemision);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdFactura")) {
			index= this.jTabbedPaneBusquedasGuiaRemision.indexOfComponent(this.jPanelFK_IdFacturaGuiaRemision);

			this.jTabbedPaneBusquedasGuiaRemision.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasGuiaRemision.getComponent(index);

			this.guiaremisionConstantesFunciones.setResaltarFK_IdFacturaGuiaRemision(resaltar);

			jPanel.setBorder(this.guiaremisionConstantesFunciones.resaltarFK_IdFacturaGuiaRemision);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdFormato")) {
			index= this.jTabbedPaneBusquedasGuiaRemision.indexOfComponent(this.jPanelFK_IdFormatoGuiaRemision);

			this.jTabbedPaneBusquedasGuiaRemision.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasGuiaRemision.getComponent(index);

			this.guiaremisionConstantesFunciones.setResaltarFK_IdFormatoGuiaRemision(resaltar);

			jPanel.setBorder(this.guiaremisionConstantesFunciones.resaltarFK_IdFormatoGuiaRemision);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdSubCliente")) {
			index= this.jTabbedPaneBusquedasGuiaRemision.indexOfComponent(this.jPanelFK_IdSubClienteGuiaRemision);

			this.jTabbedPaneBusquedasGuiaRemision.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasGuiaRemision.getComponent(index);

			this.guiaremisionConstantesFunciones.setResaltarFK_IdSubClienteGuiaRemision(resaltar);

			jPanel.setBorder(this.guiaremisionConstantesFunciones.resaltarFK_IdSubClienteGuiaRemision);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdTipoCambio")) {
			index= this.jTabbedPaneBusquedasGuiaRemision.indexOfComponent(this.jPanelFK_IdTipoCambioGuiaRemision);

			this.jTabbedPaneBusquedasGuiaRemision.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasGuiaRemision.getComponent(index);

			this.guiaremisionConstantesFunciones.setResaltarFK_IdTipoCambioGuiaRemision(resaltar);

			jPanel.setBorder(this.guiaremisionConstantesFunciones.resaltarFK_IdTipoCambioGuiaRemision);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdTipoLlamada")) {
			index= this.jTabbedPaneBusquedasGuiaRemision.indexOfComponent(this.jPanelFK_IdTipoLlamadaGuiaRemision);

			this.jTabbedPaneBusquedasGuiaRemision.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasGuiaRemision.getComponent(index);

			this.guiaremisionConstantesFunciones.setResaltarFK_IdTipoLlamadaGuiaRemision(resaltar);

			jPanel.setBorder(this.guiaremisionConstantesFunciones.resaltarFK_IdTipoLlamadaGuiaRemision);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdTipoPrecio")) {
			index= this.jTabbedPaneBusquedasGuiaRemision.indexOfComponent(this.jPanelFK_IdTipoPrecioGuiaRemision);

			this.jTabbedPaneBusquedasGuiaRemision.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasGuiaRemision.getComponent(index);

			this.guiaremisionConstantesFunciones.setResaltarFK_IdTipoPrecioGuiaRemision(resaltar);

			jPanel.setBorder(this.guiaremisionConstantesFunciones.resaltarFK_IdTipoPrecioGuiaRemision);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdTransporte")) {
			index= this.jTabbedPaneBusquedasGuiaRemision.indexOfComponent(this.jPanelFK_IdTransporteGuiaRemision);

			this.jTabbedPaneBusquedasGuiaRemision.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasGuiaRemision.getComponent(index);

			this.guiaremisionConstantesFunciones.setResaltarFK_IdTransporteGuiaRemision(resaltar);

			jPanel.setBorder(this.guiaremisionConstantesFunciones.resaltarFK_IdTransporteGuiaRemision);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdTransportista")) {
			index= this.jTabbedPaneBusquedasGuiaRemision.indexOfComponent(this.jPanelFK_IdTransportistaGuiaRemision);

			this.jTabbedPaneBusquedasGuiaRemision.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasGuiaRemision.getComponent(index);

			this.guiaremisionConstantesFunciones.setResaltarFK_IdTransportistaGuiaRemision(resaltar);

			jPanel.setBorder(this.guiaremisionConstantesFunciones.resaltarFK_IdTransportistaGuiaRemision);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdVendedor")) {
			index= this.jTabbedPaneBusquedasGuiaRemision.indexOfComponent(this.jPanelFK_IdVendedorGuiaRemision);

			this.jTabbedPaneBusquedasGuiaRemision.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasGuiaRemision.getComponent(index);

			this.guiaremisionConstantesFunciones.setResaltarFK_IdVendedorGuiaRemision(resaltar);

			jPanel.setBorder(this.guiaremisionConstantesFunciones.resaltarFK_IdVendedorGuiaRemision);
			existe=true;
		}
		

		if(existe) {
			
			this.jTtoolBarGuiaRemision.setBorder(resaltar);
			
		}
	}	
	
	//NO FUNCIONA
	public void windowClosed(WindowEvent e) {	
	}
		
	public void windowClosing(WindowEvent e) {	    	    
	}

	public void windowOpened(WindowEvent e) {	    
	}

	public void windowIconified(WindowEvent e) {	    
	}

	public void windowDeiconified(WindowEvent e) {	    
	}

	public void windowActivated(WindowEvent e) {	    
	}

	public void windowDeactivated(WindowEvent e) {	    
	}

	public void windowGainedFocus(WindowEvent e) {	    
	}

	public void windowLostFocus(WindowEvent e) {	    
	}
	
	public void updateControlesFormularioGuiaRemision() throws Exception {

		if(this.jInternalFrameDetalleFormGuiaRemision==null) { //if(!this.conCargarFormDetalle) {			
			this.inicializarFormDetalle();
		}
		
		this.updateBorderResaltarControlesFormularioGuiaRemision();
		this.updateVisibilidadResaltarControlesFormularioGuiaRemision();
		this.updateHabilitarResaltarControlesFormularioGuiaRemision();
		
	}
	
	public void updateBorderResaltarControlesFormularioGuiaRemision() throws Exception {
		if(this.jInternalFrameDetalleFormGuiaRemision==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
	
		if(this.guiaremisionConstantesFunciones.resaltaridGuiaRemision!=null && this.jInternalFrameDetalleFormGuiaRemision!=null) {this.jInternalFrameDetalleFormGuiaRemision.jLabelidGuiaRemision.setBorder(this.guiaremisionConstantesFunciones.resaltaridGuiaRemision);}
		if(this.guiaremisionConstantesFunciones.resaltarid_empresaGuiaRemision!=null && this.jInternalFrameDetalleFormGuiaRemision!=null) {this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_empresaGuiaRemision.setBorder(this.guiaremisionConstantesFunciones.resaltarid_empresaGuiaRemision);}
		if(this.guiaremisionConstantesFunciones.resaltarid_sucursalGuiaRemision!=null && this.jInternalFrameDetalleFormGuiaRemision!=null) {this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_sucursalGuiaRemision.setBorder(this.guiaremisionConstantesFunciones.resaltarid_sucursalGuiaRemision);}
		if(this.guiaremisionConstantesFunciones.resaltarid_ejercicioGuiaRemision!=null && this.jInternalFrameDetalleFormGuiaRemision!=null) {this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_ejercicioGuiaRemision.setBorder(this.guiaremisionConstantesFunciones.resaltarid_ejercicioGuiaRemision);}
		if(this.guiaremisionConstantesFunciones.resaltarid_periodoGuiaRemision!=null && this.jInternalFrameDetalleFormGuiaRemision!=null) {this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_periodoGuiaRemision.setBorder(this.guiaremisionConstantesFunciones.resaltarid_periodoGuiaRemision);}
		if(this.guiaremisionConstantesFunciones.resaltarid_usuarioGuiaRemision!=null && this.jInternalFrameDetalleFormGuiaRemision!=null) {this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_usuarioGuiaRemision.setBorder(this.guiaremisionConstantesFunciones.resaltarid_usuarioGuiaRemision);}
		if(this.guiaremisionConstantesFunciones.resaltarsecuencialGuiaRemision!=null && this.jInternalFrameDetalleFormGuiaRemision!=null) {this.jInternalFrameDetalleFormGuiaRemision.jTextFieldsecuencialGuiaRemision.setBorder(this.guiaremisionConstantesFunciones.resaltarsecuencialGuiaRemision);}
		if(this.guiaremisionConstantesFunciones.resaltarfecha_emisionGuiaRemision!=null && this.jInternalFrameDetalleFormGuiaRemision!=null) {this.jInternalFrameDetalleFormGuiaRemision.jDateChooserfecha_emisionGuiaRemision.setBorder(this.guiaremisionConstantesFunciones.resaltarfecha_emisionGuiaRemision);}
		if(this.guiaremisionConstantesFunciones.resaltarid_formatoGuiaRemision!=null && this.jInternalFrameDetalleFormGuiaRemision!=null) {this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_formatoGuiaRemision.setBorder(this.guiaremisionConstantesFunciones.resaltarid_formatoGuiaRemision);}
		if(this.guiaremisionConstantesFunciones.resaltarid_tipo_precioGuiaRemision!=null && this.jInternalFrameDetalleFormGuiaRemision!=null) {this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_tipo_precioGuiaRemision.setBorder(this.guiaremisionConstantesFunciones.resaltarid_tipo_precioGuiaRemision);}
		if(this.guiaremisionConstantesFunciones.resaltarid_monedaGuiaRemision!=null && this.jInternalFrameDetalleFormGuiaRemision!=null) {this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_monedaGuiaRemision.setBorder(this.guiaremisionConstantesFunciones.resaltarid_monedaGuiaRemision);}
		if(this.guiaremisionConstantesFunciones.resaltarnumero_camionGuiaRemision!=null && this.jInternalFrameDetalleFormGuiaRemision!=null) {this.jInternalFrameDetalleFormGuiaRemision.jTextFieldnumero_camionGuiaRemision.setBorder(this.guiaremisionConstantesFunciones.resaltarnumero_camionGuiaRemision);}
		if(this.guiaremisionConstantesFunciones.resaltarid_clienteGuiaRemision!=null && this.jInternalFrameDetalleFormGuiaRemision!=null) {this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_clienteGuiaRemision.setBorder(this.guiaremisionConstantesFunciones.resaltarid_clienteGuiaRemision);}
		if(this.guiaremisionConstantesFunciones.resaltarid_vendedorGuiaRemision!=null && this.jInternalFrameDetalleFormGuiaRemision!=null) {this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_vendedorGuiaRemision.setBorder(this.guiaremisionConstantesFunciones.resaltarid_vendedorGuiaRemision);}
		if(this.guiaremisionConstantesFunciones.resaltarid_facturaGuiaRemision!=null && this.jInternalFrameDetalleFormGuiaRemision!=null) {this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_facturaGuiaRemision.setBorder(this.guiaremisionConstantesFunciones.resaltarid_facturaGuiaRemision);}
		if(this.guiaremisionConstantesFunciones.resaltarid_transportistaGuiaRemision!=null && this.jInternalFrameDetalleFormGuiaRemision!=null) {this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_transportistaGuiaRemision.setBorder(this.guiaremisionConstantesFunciones.resaltarid_transportistaGuiaRemision);}
		if(this.guiaremisionConstantesFunciones.resaltaridentificacionGuiaRemision!=null && this.jInternalFrameDetalleFormGuiaRemision!=null) {this.jInternalFrameDetalleFormGuiaRemision.jTextFieldidentificacionGuiaRemision.setBorder(this.guiaremisionConstantesFunciones.resaltaridentificacionGuiaRemision);}
		if(this.guiaremisionConstantesFunciones.resaltarfecha_origenGuiaRemision!=null && this.jInternalFrameDetalleFormGuiaRemision!=null) {this.jInternalFrameDetalleFormGuiaRemision.jDateChooserfecha_origenGuiaRemision.setBorder(this.guiaremisionConstantesFunciones.resaltarfecha_origenGuiaRemision);}
		if(this.guiaremisionConstantesFunciones.resaltarfecha_destinoGuiaRemision!=null && this.jInternalFrameDetalleFormGuiaRemision!=null) {this.jInternalFrameDetalleFormGuiaRemision.jDateChooserfecha_destinoGuiaRemision.setBorder(this.guiaremisionConstantesFunciones.resaltarfecha_destinoGuiaRemision);}
		if(this.guiaremisionConstantesFunciones.resaltartransporte_codigoGuiaRemision!=null && this.jInternalFrameDetalleFormGuiaRemision!=null) {this.jInternalFrameDetalleFormGuiaRemision.jTextAreatransporte_codigoGuiaRemision.setBorder(this.guiaremisionConstantesFunciones.resaltartransporte_codigoGuiaRemision);}
		if(this.guiaremisionConstantesFunciones.resaltarcantidad_bultosGuiaRemision!=null && this.jInternalFrameDetalleFormGuiaRemision!=null) {this.jInternalFrameDetalleFormGuiaRemision.jTextFieldcantidad_bultosGuiaRemision.setBorder(this.guiaremisionConstantesFunciones.resaltarcantidad_bultosGuiaRemision);}
		if(this.guiaremisionConstantesFunciones.resaltarid_consultorGuiaRemision!=null && this.jInternalFrameDetalleFormGuiaRemision!=null) {this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_consultorGuiaRemision.setBorder(this.guiaremisionConstantesFunciones.resaltarid_consultorGuiaRemision);}
		if(this.guiaremisionConstantesFunciones.resaltarid_transporteGuiaRemision!=null && this.jInternalFrameDetalleFormGuiaRemision!=null) {this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_transporteGuiaRemision.setBorder(this.guiaremisionConstantesFunciones.resaltarid_transporteGuiaRemision);}
		if(this.guiaremisionConstantesFunciones.resaltarid_sub_clienteGuiaRemision!=null && this.jInternalFrameDetalleFormGuiaRemision!=null) {this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_sub_clienteGuiaRemision.setBorder(this.guiaremisionConstantesFunciones.resaltarid_sub_clienteGuiaRemision);}
		if(this.guiaremisionConstantesFunciones.resaltarid_empleadoGuiaRemision!=null && this.jInternalFrameDetalleFormGuiaRemision!=null) {this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_empleadoGuiaRemision.setBorder(this.guiaremisionConstantesFunciones.resaltarid_empleadoGuiaRemision);}
		if(this.guiaremisionConstantesFunciones.resaltarid_ciudad_origenGuiaRemision!=null && this.jInternalFrameDetalleFormGuiaRemision!=null) {this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_ciudad_origenGuiaRemision.setBorder(this.guiaremisionConstantesFunciones.resaltarid_ciudad_origenGuiaRemision);}
		if(this.guiaremisionConstantesFunciones.resaltarid_ciudad_destinoGuiaRemision!=null && this.jInternalFrameDetalleFormGuiaRemision!=null) {this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_ciudad_destinoGuiaRemision.setBorder(this.guiaremisionConstantesFunciones.resaltarid_ciudad_destinoGuiaRemision);}
		if(this.guiaremisionConstantesFunciones.resaltarid_tipo_llamadaGuiaRemision!=null && this.jInternalFrameDetalleFormGuiaRemision!=null) {this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_tipo_llamadaGuiaRemision.setBorder(this.guiaremisionConstantesFunciones.resaltarid_tipo_llamadaGuiaRemision);}
		if(this.guiaremisionConstantesFunciones.resaltarhora_inicioGuiaRemision!=null && this.jInternalFrameDetalleFormGuiaRemision!=null) {this.jInternalFrameDetalleFormGuiaRemision.jSpinnerhora_inicioGuiaRemision.setBorder(this.guiaremisionConstantesFunciones.resaltarhora_inicioGuiaRemision);}
		if(this.guiaremisionConstantesFunciones.resaltarhora_finGuiaRemision!=null && this.jInternalFrameDetalleFormGuiaRemision!=null) {this.jInternalFrameDetalleFormGuiaRemision.jSpinnerhora_finGuiaRemision.setBorder(this.guiaremisionConstantesFunciones.resaltarhora_finGuiaRemision);}
		if(this.guiaremisionConstantesFunciones.resaltarcupoGuiaRemision!=null && this.jInternalFrameDetalleFormGuiaRemision!=null) {this.jInternalFrameDetalleFormGuiaRemision.jTextFieldcupoGuiaRemision.setBorder(this.guiaremisionConstantesFunciones.resaltarcupoGuiaRemision);}
		if(this.guiaremisionConstantesFunciones.resaltarsaldoGuiaRemision!=null && this.jInternalFrameDetalleFormGuiaRemision!=null) {this.jInternalFrameDetalleFormGuiaRemision.jTextFieldsaldoGuiaRemision.setBorder(this.guiaremisionConstantesFunciones.resaltarsaldoGuiaRemision);}
		if(this.guiaremisionConstantesFunciones.resaltardocumentoGuiaRemision!=null && this.jInternalFrameDetalleFormGuiaRemision!=null) {this.jInternalFrameDetalleFormGuiaRemision.jTextFielddocumentoGuiaRemision.setBorder(this.guiaremisionConstantesFunciones.resaltardocumentoGuiaRemision);}
		if(this.guiaremisionConstantesFunciones.resaltardisponibleGuiaRemision!=null && this.jInternalFrameDetalleFormGuiaRemision!=null) {this.jInternalFrameDetalleFormGuiaRemision.jTextFielddisponibleGuiaRemision.setBorder(this.guiaremisionConstantesFunciones.resaltardisponibleGuiaRemision);}
		if(this.guiaremisionConstantesFunciones.resaltardescripcionGuiaRemision!=null && this.jInternalFrameDetalleFormGuiaRemision!=null) {this.jInternalFrameDetalleFormGuiaRemision.jTextAreadescripcionGuiaRemision.setBorder(this.guiaremisionConstantesFunciones.resaltardescripcionGuiaRemision);}
		if(this.guiaremisionConstantesFunciones.resaltartotal_ivaGuiaRemision!=null && this.jInternalFrameDetalleFormGuiaRemision!=null) {this.jInternalFrameDetalleFormGuiaRemision.jTextFieldtotal_ivaGuiaRemision.setBorder(this.guiaremisionConstantesFunciones.resaltartotal_ivaGuiaRemision);}
		if(this.guiaremisionConstantesFunciones.resaltartotal_sin_ivaGuiaRemision!=null && this.jInternalFrameDetalleFormGuiaRemision!=null) {this.jInternalFrameDetalleFormGuiaRemision.jTextFieldtotal_sin_ivaGuiaRemision.setBorder(this.guiaremisionConstantesFunciones.resaltartotal_sin_ivaGuiaRemision);}
		if(this.guiaremisionConstantesFunciones.resaltardescuentoGuiaRemision!=null && this.jInternalFrameDetalleFormGuiaRemision!=null) {this.jInternalFrameDetalleFormGuiaRemision.jTextFielddescuentoGuiaRemision.setBorder(this.guiaremisionConstantesFunciones.resaltardescuentoGuiaRemision);}
		if(this.guiaremisionConstantesFunciones.resaltarfleteGuiaRemision!=null && this.jInternalFrameDetalleFormGuiaRemision!=null) {this.jInternalFrameDetalleFormGuiaRemision.jTextFieldfleteGuiaRemision.setBorder(this.guiaremisionConstantesFunciones.resaltarfleteGuiaRemision);}
		if(this.guiaremisionConstantesFunciones.resaltarotroGuiaRemision!=null && this.jInternalFrameDetalleFormGuiaRemision!=null) {this.jInternalFrameDetalleFormGuiaRemision.jTextFieldotroGuiaRemision.setBorder(this.guiaremisionConstantesFunciones.resaltarotroGuiaRemision);}
		if(this.guiaremisionConstantesFunciones.resaltarfinanciamientoGuiaRemision!=null && this.jInternalFrameDetalleFormGuiaRemision!=null) {this.jInternalFrameDetalleFormGuiaRemision.jTextFieldfinanciamientoGuiaRemision.setBorder(this.guiaremisionConstantesFunciones.resaltarfinanciamientoGuiaRemision);}
		if(this.guiaremisionConstantesFunciones.resaltarivaGuiaRemision!=null && this.jInternalFrameDetalleFormGuiaRemision!=null) {this.jInternalFrameDetalleFormGuiaRemision.jTextFieldivaGuiaRemision.setBorder(this.guiaremisionConstantesFunciones.resaltarivaGuiaRemision);}
		if(this.guiaremisionConstantesFunciones.resaltartotalGuiaRemision!=null && this.jInternalFrameDetalleFormGuiaRemision!=null) {this.jInternalFrameDetalleFormGuiaRemision.jTextFieldtotalGuiaRemision.setBorder(this.guiaremisionConstantesFunciones.resaltartotalGuiaRemision);}
		if(this.guiaremisionConstantesFunciones.resaltarmonto_retencionGuiaRemision!=null && this.jInternalFrameDetalleFormGuiaRemision!=null) {this.jInternalFrameDetalleFormGuiaRemision.jTextFieldmonto_retencionGuiaRemision.setBorder(this.guiaremisionConstantesFunciones.resaltarmonto_retencionGuiaRemision);}
		if(this.guiaremisionConstantesFunciones.resaltarid_tipo_cambioGuiaRemision!=null && this.jInternalFrameDetalleFormGuiaRemision!=null) {this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_tipo_cambioGuiaRemision.setBorder(this.guiaremisionConstantesFunciones.resaltarid_tipo_cambioGuiaRemision);}
		if(this.guiaremisionConstantesFunciones.resaltarfechaGuiaRemision!=null && this.jInternalFrameDetalleFormGuiaRemision!=null) {this.jInternalFrameDetalleFormGuiaRemision.jDateChooserfechaGuiaRemision.setBorder(this.guiaremisionConstantesFunciones.resaltarfechaGuiaRemision);}
		if(this.guiaremisionConstantesFunciones.resaltarruc_clienteGuiaRemision!=null && this.jInternalFrameDetalleFormGuiaRemision!=null) {this.jInternalFrameDetalleFormGuiaRemision.jTextFieldruc_clienteGuiaRemision.setBorder(this.guiaremisionConstantesFunciones.resaltarruc_clienteGuiaRemision);}
		if(this.guiaremisionConstantesFunciones.resaltarnombre_clienteGuiaRemision!=null && this.jInternalFrameDetalleFormGuiaRemision!=null) {this.jInternalFrameDetalleFormGuiaRemision.jTextAreanombre_clienteGuiaRemision.setBorder(this.guiaremisionConstantesFunciones.resaltarnombre_clienteGuiaRemision);}
		if(this.guiaremisionConstantesFunciones.resaltartelefono_clienteGuiaRemision!=null && this.jInternalFrameDetalleFormGuiaRemision!=null) {this.jInternalFrameDetalleFormGuiaRemision.jTextAreatelefono_clienteGuiaRemision.setBorder(this.guiaremisionConstantesFunciones.resaltartelefono_clienteGuiaRemision);}
		if(this.guiaremisionConstantesFunciones.resaltardireccion_clienteGuiaRemision!=null && this.jInternalFrameDetalleFormGuiaRemision!=null) {this.jInternalFrameDetalleFormGuiaRemision.jTextAreadireccion_clienteGuiaRemision.setBorder(this.guiaremisionConstantesFunciones.resaltardireccion_clienteGuiaRemision);}
		if(this.guiaremisionConstantesFunciones.resaltarnumero_pre_impresoGuiaRemision!=null && this.jInternalFrameDetalleFormGuiaRemision!=null) {this.jInternalFrameDetalleFormGuiaRemision.jTextFieldnumero_pre_impresoGuiaRemision.setBorder(this.guiaremisionConstantesFunciones.resaltarnumero_pre_impresoGuiaRemision);}
		if(this.guiaremisionConstantesFunciones.resaltarpeso_brutoGuiaRemision!=null && this.jInternalFrameDetalleFormGuiaRemision!=null) {this.jInternalFrameDetalleFormGuiaRemision.jTextFieldpeso_brutoGuiaRemision.setBorder(this.guiaremisionConstantesFunciones.resaltarpeso_brutoGuiaRemision);}
		if(this.guiaremisionConstantesFunciones.resaltarfecha_autorizacionGuiaRemision!=null && this.jInternalFrameDetalleFormGuiaRemision!=null) {this.jInternalFrameDetalleFormGuiaRemision.jDateChooserfecha_autorizacionGuiaRemision.setBorder(this.guiaremisionConstantesFunciones.resaltarfecha_autorizacionGuiaRemision);}
		if(this.guiaremisionConstantesFunciones.resaltarfecha_vencimientoGuiaRemision!=null && this.jInternalFrameDetalleFormGuiaRemision!=null) {this.jInternalFrameDetalleFormGuiaRemision.jDateChooserfecha_vencimientoGuiaRemision.setBorder(this.guiaremisionConstantesFunciones.resaltarfecha_vencimientoGuiaRemision);}
	}
	
	public void updateVisibilidadResaltarControlesFormularioGuiaRemision() throws Exception {		
		if(this.jInternalFrameDetalleFormGuiaRemision==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
		if(this.jInternalFrameDetalleFormGuiaRemision!=null) {
	
		//this.jInternalFrameDetalleFormGuiaRemision.jLabelidGuiaRemision.setVisible(this.guiaremisionConstantesFunciones.mostraridGuiaRemision);
		this.jInternalFrameDetalleFormGuiaRemision.jPanelidGuiaRemision.setVisible(this.guiaremisionConstantesFunciones.mostraridGuiaRemision);
		//this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_empresaGuiaRemision.setVisible(this.guiaremisionConstantesFunciones.mostrarid_empresaGuiaRemision);
		this.jInternalFrameDetalleFormGuiaRemision.jPanelid_empresaGuiaRemision.setVisible(this.guiaremisionConstantesFunciones.mostrarid_empresaGuiaRemision);
		//this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_sucursalGuiaRemision.setVisible(this.guiaremisionConstantesFunciones.mostrarid_sucursalGuiaRemision);
		this.jInternalFrameDetalleFormGuiaRemision.jPanelid_sucursalGuiaRemision.setVisible(this.guiaremisionConstantesFunciones.mostrarid_sucursalGuiaRemision);
		//this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_ejercicioGuiaRemision.setVisible(this.guiaremisionConstantesFunciones.mostrarid_ejercicioGuiaRemision);
		this.jInternalFrameDetalleFormGuiaRemision.jPanelid_ejercicioGuiaRemision.setVisible(this.guiaremisionConstantesFunciones.mostrarid_ejercicioGuiaRemision);
		//this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_periodoGuiaRemision.setVisible(this.guiaremisionConstantesFunciones.mostrarid_periodoGuiaRemision);
		this.jInternalFrameDetalleFormGuiaRemision.jPanelid_periodoGuiaRemision.setVisible(this.guiaremisionConstantesFunciones.mostrarid_periodoGuiaRemision);
		//this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_usuarioGuiaRemision.setVisible(this.guiaremisionConstantesFunciones.mostrarid_usuarioGuiaRemision);
		this.jInternalFrameDetalleFormGuiaRemision.jPanelid_usuarioGuiaRemision.setVisible(this.guiaremisionConstantesFunciones.mostrarid_usuarioGuiaRemision);
		//this.jInternalFrameDetalleFormGuiaRemision.jTextFieldsecuencialGuiaRemision.setVisible(this.guiaremisionConstantesFunciones.mostrarsecuencialGuiaRemision);
		this.jInternalFrameDetalleFormGuiaRemision.jPanelsecuencialGuiaRemision.setVisible(this.guiaremisionConstantesFunciones.mostrarsecuencialGuiaRemision);
		//this.jInternalFrameDetalleFormGuiaRemision.jDateChooserfecha_emisionGuiaRemision.setVisible(this.guiaremisionConstantesFunciones.mostrarfecha_emisionGuiaRemision);
		this.jInternalFrameDetalleFormGuiaRemision.jPanelfecha_emisionGuiaRemision.setVisible(this.guiaremisionConstantesFunciones.mostrarfecha_emisionGuiaRemision);
		//this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_formatoGuiaRemision.setVisible(this.guiaremisionConstantesFunciones.mostrarid_formatoGuiaRemision);
		this.jInternalFrameDetalleFormGuiaRemision.jPanelid_formatoGuiaRemision.setVisible(this.guiaremisionConstantesFunciones.mostrarid_formatoGuiaRemision);
		//this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_tipo_precioGuiaRemision.setVisible(this.guiaremisionConstantesFunciones.mostrarid_tipo_precioGuiaRemision);
		this.jInternalFrameDetalleFormGuiaRemision.jPanelid_tipo_precioGuiaRemision.setVisible(this.guiaremisionConstantesFunciones.mostrarid_tipo_precioGuiaRemision);
		//this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_monedaGuiaRemision.setVisible(this.guiaremisionConstantesFunciones.mostrarid_monedaGuiaRemision);
		this.jInternalFrameDetalleFormGuiaRemision.jPanelid_monedaGuiaRemision.setVisible(this.guiaremisionConstantesFunciones.mostrarid_monedaGuiaRemision);
		//this.jInternalFrameDetalleFormGuiaRemision.jTextFieldnumero_camionGuiaRemision.setVisible(this.guiaremisionConstantesFunciones.mostrarnumero_camionGuiaRemision);
		this.jInternalFrameDetalleFormGuiaRemision.jPanelnumero_camionGuiaRemision.setVisible(this.guiaremisionConstantesFunciones.mostrarnumero_camionGuiaRemision);
		//this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_clienteGuiaRemision.setVisible(this.guiaremisionConstantesFunciones.mostrarid_clienteGuiaRemision);
		this.jInternalFrameDetalleFormGuiaRemision.jPanelid_clienteGuiaRemision.setVisible(this.guiaremisionConstantesFunciones.mostrarid_clienteGuiaRemision);
			this.jInternalFrameDetalleFormGuiaRemision.jButtonid_clienteGuiaRemision.setVisible(this.guiaremisionConstantesFunciones.mostrarid_clienteGuiaRemision);
		//this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_vendedorGuiaRemision.setVisible(this.guiaremisionConstantesFunciones.mostrarid_vendedorGuiaRemision);
		this.jInternalFrameDetalleFormGuiaRemision.jPanelid_vendedorGuiaRemision.setVisible(this.guiaremisionConstantesFunciones.mostrarid_vendedorGuiaRemision);
		//this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_facturaGuiaRemision.setVisible(this.guiaremisionConstantesFunciones.mostrarid_facturaGuiaRemision);
		this.jInternalFrameDetalleFormGuiaRemision.jPanelid_facturaGuiaRemision.setVisible(this.guiaremisionConstantesFunciones.mostrarid_facturaGuiaRemision);
			this.jInternalFrameDetalleFormGuiaRemision.jButtonid_facturaGuiaRemision.setVisible(this.guiaremisionConstantesFunciones.mostrarid_facturaGuiaRemision);
		//this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_transportistaGuiaRemision.setVisible(this.guiaremisionConstantesFunciones.mostrarid_transportistaGuiaRemision);
		this.jInternalFrameDetalleFormGuiaRemision.jPanelid_transportistaGuiaRemision.setVisible(this.guiaremisionConstantesFunciones.mostrarid_transportistaGuiaRemision);
		//this.jInternalFrameDetalleFormGuiaRemision.jTextFieldidentificacionGuiaRemision.setVisible(this.guiaremisionConstantesFunciones.mostraridentificacionGuiaRemision);
		this.jInternalFrameDetalleFormGuiaRemision.jPanelidentificacionGuiaRemision.setVisible(this.guiaremisionConstantesFunciones.mostraridentificacionGuiaRemision);
		//this.jInternalFrameDetalleFormGuiaRemision.jDateChooserfecha_origenGuiaRemision.setVisible(this.guiaremisionConstantesFunciones.mostrarfecha_origenGuiaRemision);
		this.jInternalFrameDetalleFormGuiaRemision.jPanelfecha_origenGuiaRemision.setVisible(this.guiaremisionConstantesFunciones.mostrarfecha_origenGuiaRemision);
		//this.jInternalFrameDetalleFormGuiaRemision.jDateChooserfecha_destinoGuiaRemision.setVisible(this.guiaremisionConstantesFunciones.mostrarfecha_destinoGuiaRemision);
		this.jInternalFrameDetalleFormGuiaRemision.jPanelfecha_destinoGuiaRemision.setVisible(this.guiaremisionConstantesFunciones.mostrarfecha_destinoGuiaRemision);
		//this.jInternalFrameDetalleFormGuiaRemision.jTextAreatransporte_codigoGuiaRemision.setVisible(this.guiaremisionConstantesFunciones.mostrartransporte_codigoGuiaRemision);
		this.jInternalFrameDetalleFormGuiaRemision.jPaneltransporte_codigoGuiaRemision.setVisible(this.guiaremisionConstantesFunciones.mostrartransporte_codigoGuiaRemision);
		//this.jInternalFrameDetalleFormGuiaRemision.jTextFieldcantidad_bultosGuiaRemision.setVisible(this.guiaremisionConstantesFunciones.mostrarcantidad_bultosGuiaRemision);
		this.jInternalFrameDetalleFormGuiaRemision.jPanelcantidad_bultosGuiaRemision.setVisible(this.guiaremisionConstantesFunciones.mostrarcantidad_bultosGuiaRemision);
		//this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_consultorGuiaRemision.setVisible(this.guiaremisionConstantesFunciones.mostrarid_consultorGuiaRemision);
		this.jInternalFrameDetalleFormGuiaRemision.jPanelid_consultorGuiaRemision.setVisible(this.guiaremisionConstantesFunciones.mostrarid_consultorGuiaRemision);
		//this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_transporteGuiaRemision.setVisible(this.guiaremisionConstantesFunciones.mostrarid_transporteGuiaRemision);
		this.jInternalFrameDetalleFormGuiaRemision.jPanelid_transporteGuiaRemision.setVisible(this.guiaremisionConstantesFunciones.mostrarid_transporteGuiaRemision);
		//this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_sub_clienteGuiaRemision.setVisible(this.guiaremisionConstantesFunciones.mostrarid_sub_clienteGuiaRemision);
		this.jInternalFrameDetalleFormGuiaRemision.jPanelid_sub_clienteGuiaRemision.setVisible(this.guiaremisionConstantesFunciones.mostrarid_sub_clienteGuiaRemision);
		//this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_empleadoGuiaRemision.setVisible(this.guiaremisionConstantesFunciones.mostrarid_empleadoGuiaRemision);
		this.jInternalFrameDetalleFormGuiaRemision.jPanelid_empleadoGuiaRemision.setVisible(this.guiaremisionConstantesFunciones.mostrarid_empleadoGuiaRemision);
		//this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_ciudad_origenGuiaRemision.setVisible(this.guiaremisionConstantesFunciones.mostrarid_ciudad_origenGuiaRemision);
		this.jInternalFrameDetalleFormGuiaRemision.jPanelid_ciudad_origenGuiaRemision.setVisible(this.guiaremisionConstantesFunciones.mostrarid_ciudad_origenGuiaRemision);
		//this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_ciudad_destinoGuiaRemision.setVisible(this.guiaremisionConstantesFunciones.mostrarid_ciudad_destinoGuiaRemision);
		this.jInternalFrameDetalleFormGuiaRemision.jPanelid_ciudad_destinoGuiaRemision.setVisible(this.guiaremisionConstantesFunciones.mostrarid_ciudad_destinoGuiaRemision);
		//this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_tipo_llamadaGuiaRemision.setVisible(this.guiaremisionConstantesFunciones.mostrarid_tipo_llamadaGuiaRemision);
		this.jInternalFrameDetalleFormGuiaRemision.jPanelid_tipo_llamadaGuiaRemision.setVisible(this.guiaremisionConstantesFunciones.mostrarid_tipo_llamadaGuiaRemision);
		//this.jInternalFrameDetalleFormGuiaRemision.jSpinnerhora_inicioGuiaRemision.setVisible(this.guiaremisionConstantesFunciones.mostrarhora_inicioGuiaRemision);
		this.jInternalFrameDetalleFormGuiaRemision.jPanelhora_inicioGuiaRemision.setVisible(this.guiaremisionConstantesFunciones.mostrarhora_inicioGuiaRemision);
		//this.jInternalFrameDetalleFormGuiaRemision.jSpinnerhora_finGuiaRemision.setVisible(this.guiaremisionConstantesFunciones.mostrarhora_finGuiaRemision);
		this.jInternalFrameDetalleFormGuiaRemision.jPanelhora_finGuiaRemision.setVisible(this.guiaremisionConstantesFunciones.mostrarhora_finGuiaRemision);
		//this.jInternalFrameDetalleFormGuiaRemision.jTextFieldcupoGuiaRemision.setVisible(this.guiaremisionConstantesFunciones.mostrarcupoGuiaRemision);
		this.jInternalFrameDetalleFormGuiaRemision.jPanelcupoGuiaRemision.setVisible(this.guiaremisionConstantesFunciones.mostrarcupoGuiaRemision);
		//this.jInternalFrameDetalleFormGuiaRemision.jTextFieldsaldoGuiaRemision.setVisible(this.guiaremisionConstantesFunciones.mostrarsaldoGuiaRemision);
		this.jInternalFrameDetalleFormGuiaRemision.jPanelsaldoGuiaRemision.setVisible(this.guiaremisionConstantesFunciones.mostrarsaldoGuiaRemision);
		//this.jInternalFrameDetalleFormGuiaRemision.jTextFielddocumentoGuiaRemision.setVisible(this.guiaremisionConstantesFunciones.mostrardocumentoGuiaRemision);
		this.jInternalFrameDetalleFormGuiaRemision.jPaneldocumentoGuiaRemision.setVisible(this.guiaremisionConstantesFunciones.mostrardocumentoGuiaRemision);
		//this.jInternalFrameDetalleFormGuiaRemision.jTextFielddisponibleGuiaRemision.setVisible(this.guiaremisionConstantesFunciones.mostrardisponibleGuiaRemision);
		this.jInternalFrameDetalleFormGuiaRemision.jPaneldisponibleGuiaRemision.setVisible(this.guiaremisionConstantesFunciones.mostrardisponibleGuiaRemision);
		//this.jInternalFrameDetalleFormGuiaRemision.jTextAreadescripcionGuiaRemision.setVisible(this.guiaremisionConstantesFunciones.mostrardescripcionGuiaRemision);
		this.jInternalFrameDetalleFormGuiaRemision.jPaneldescripcionGuiaRemision.setVisible(this.guiaremisionConstantesFunciones.mostrardescripcionGuiaRemision);
		//this.jInternalFrameDetalleFormGuiaRemision.jTextFieldtotal_ivaGuiaRemision.setVisible(this.guiaremisionConstantesFunciones.mostrartotal_ivaGuiaRemision);
		this.jInternalFrameDetalleFormGuiaRemision.jPaneltotal_ivaGuiaRemision.setVisible(this.guiaremisionConstantesFunciones.mostrartotal_ivaGuiaRemision);
		//this.jInternalFrameDetalleFormGuiaRemision.jTextFieldtotal_sin_ivaGuiaRemision.setVisible(this.guiaremisionConstantesFunciones.mostrartotal_sin_ivaGuiaRemision);
		this.jInternalFrameDetalleFormGuiaRemision.jPaneltotal_sin_ivaGuiaRemision.setVisible(this.guiaremisionConstantesFunciones.mostrartotal_sin_ivaGuiaRemision);
		//this.jInternalFrameDetalleFormGuiaRemision.jTextFielddescuentoGuiaRemision.setVisible(this.guiaremisionConstantesFunciones.mostrardescuentoGuiaRemision);
		this.jInternalFrameDetalleFormGuiaRemision.jPaneldescuentoGuiaRemision.setVisible(this.guiaremisionConstantesFunciones.mostrardescuentoGuiaRemision);
		//this.jInternalFrameDetalleFormGuiaRemision.jTextFieldfleteGuiaRemision.setVisible(this.guiaremisionConstantesFunciones.mostrarfleteGuiaRemision);
		this.jInternalFrameDetalleFormGuiaRemision.jPanelfleteGuiaRemision.setVisible(this.guiaremisionConstantesFunciones.mostrarfleteGuiaRemision);
		//this.jInternalFrameDetalleFormGuiaRemision.jTextFieldotroGuiaRemision.setVisible(this.guiaremisionConstantesFunciones.mostrarotroGuiaRemision);
		this.jInternalFrameDetalleFormGuiaRemision.jPanelotroGuiaRemision.setVisible(this.guiaremisionConstantesFunciones.mostrarotroGuiaRemision);
		//this.jInternalFrameDetalleFormGuiaRemision.jTextFieldfinanciamientoGuiaRemision.setVisible(this.guiaremisionConstantesFunciones.mostrarfinanciamientoGuiaRemision);
		this.jInternalFrameDetalleFormGuiaRemision.jPanelfinanciamientoGuiaRemision.setVisible(this.guiaremisionConstantesFunciones.mostrarfinanciamientoGuiaRemision);
		//this.jInternalFrameDetalleFormGuiaRemision.jTextFieldivaGuiaRemision.setVisible(this.guiaremisionConstantesFunciones.mostrarivaGuiaRemision);
		this.jInternalFrameDetalleFormGuiaRemision.jPanelivaGuiaRemision.setVisible(this.guiaremisionConstantesFunciones.mostrarivaGuiaRemision);
		//this.jInternalFrameDetalleFormGuiaRemision.jTextFieldtotalGuiaRemision.setVisible(this.guiaremisionConstantesFunciones.mostrartotalGuiaRemision);
		this.jInternalFrameDetalleFormGuiaRemision.jPaneltotalGuiaRemision.setVisible(this.guiaremisionConstantesFunciones.mostrartotalGuiaRemision);
		//this.jInternalFrameDetalleFormGuiaRemision.jTextFieldmonto_retencionGuiaRemision.setVisible(this.guiaremisionConstantesFunciones.mostrarmonto_retencionGuiaRemision);
		this.jInternalFrameDetalleFormGuiaRemision.jPanelmonto_retencionGuiaRemision.setVisible(this.guiaremisionConstantesFunciones.mostrarmonto_retencionGuiaRemision);
		//this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_tipo_cambioGuiaRemision.setVisible(this.guiaremisionConstantesFunciones.mostrarid_tipo_cambioGuiaRemision);
		this.jInternalFrameDetalleFormGuiaRemision.jPanelid_tipo_cambioGuiaRemision.setVisible(this.guiaremisionConstantesFunciones.mostrarid_tipo_cambioGuiaRemision);
			this.jInternalFrameDetalleFormGuiaRemision.jButtonid_tipo_cambioGuiaRemision.setVisible(this.guiaremisionConstantesFunciones.mostrarid_tipo_cambioGuiaRemision);
		//this.jInternalFrameDetalleFormGuiaRemision.jDateChooserfechaGuiaRemision.setVisible(this.guiaremisionConstantesFunciones.mostrarfechaGuiaRemision);
		this.jInternalFrameDetalleFormGuiaRemision.jPanelfechaGuiaRemision.setVisible(this.guiaremisionConstantesFunciones.mostrarfechaGuiaRemision);
		//this.jInternalFrameDetalleFormGuiaRemision.jTextFieldruc_clienteGuiaRemision.setVisible(this.guiaremisionConstantesFunciones.mostrarruc_clienteGuiaRemision);
		this.jInternalFrameDetalleFormGuiaRemision.jPanelruc_clienteGuiaRemision.setVisible(this.guiaremisionConstantesFunciones.mostrarruc_clienteGuiaRemision);
		//this.jInternalFrameDetalleFormGuiaRemision.jTextAreanombre_clienteGuiaRemision.setVisible(this.guiaremisionConstantesFunciones.mostrarnombre_clienteGuiaRemision);
		this.jInternalFrameDetalleFormGuiaRemision.jPanelnombre_clienteGuiaRemision.setVisible(this.guiaremisionConstantesFunciones.mostrarnombre_clienteGuiaRemision);
		//this.jInternalFrameDetalleFormGuiaRemision.jTextAreatelefono_clienteGuiaRemision.setVisible(this.guiaremisionConstantesFunciones.mostrartelefono_clienteGuiaRemision);
		this.jInternalFrameDetalleFormGuiaRemision.jPaneltelefono_clienteGuiaRemision.setVisible(this.guiaremisionConstantesFunciones.mostrartelefono_clienteGuiaRemision);
		//this.jInternalFrameDetalleFormGuiaRemision.jTextAreadireccion_clienteGuiaRemision.setVisible(this.guiaremisionConstantesFunciones.mostrardireccion_clienteGuiaRemision);
		this.jInternalFrameDetalleFormGuiaRemision.jPaneldireccion_clienteGuiaRemision.setVisible(this.guiaremisionConstantesFunciones.mostrardireccion_clienteGuiaRemision);
		//this.jInternalFrameDetalleFormGuiaRemision.jTextFieldnumero_pre_impresoGuiaRemision.setVisible(this.guiaremisionConstantesFunciones.mostrarnumero_pre_impresoGuiaRemision);
		this.jInternalFrameDetalleFormGuiaRemision.jPanelnumero_pre_impresoGuiaRemision.setVisible(this.guiaremisionConstantesFunciones.mostrarnumero_pre_impresoGuiaRemision);
		//this.jInternalFrameDetalleFormGuiaRemision.jTextFieldpeso_brutoGuiaRemision.setVisible(this.guiaremisionConstantesFunciones.mostrarpeso_brutoGuiaRemision);
		this.jInternalFrameDetalleFormGuiaRemision.jPanelpeso_brutoGuiaRemision.setVisible(this.guiaremisionConstantesFunciones.mostrarpeso_brutoGuiaRemision);
		//this.jInternalFrameDetalleFormGuiaRemision.jDateChooserfecha_autorizacionGuiaRemision.setVisible(this.guiaremisionConstantesFunciones.mostrarfecha_autorizacionGuiaRemision);
		this.jInternalFrameDetalleFormGuiaRemision.jPanelfecha_autorizacionGuiaRemision.setVisible(this.guiaremisionConstantesFunciones.mostrarfecha_autorizacionGuiaRemision);
		//this.jInternalFrameDetalleFormGuiaRemision.jDateChooserfecha_vencimientoGuiaRemision.setVisible(this.guiaremisionConstantesFunciones.mostrarfecha_vencimientoGuiaRemision);
		this.jInternalFrameDetalleFormGuiaRemision.jPanelfecha_vencimientoGuiaRemision.setVisible(this.guiaremisionConstantesFunciones.mostrarfecha_vencimientoGuiaRemision);
		}
	}
	
	public void updateHabilitarResaltarControlesFormularioGuiaRemision() throws Exception {
		if(this.jInternalFrameDetalleFormGuiaRemision==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
		if(this.jInternalFrameDetalleFormGuiaRemision!=null) {
	
		this.jInternalFrameDetalleFormGuiaRemision.jLabelidGuiaRemision.setEnabled(this.guiaremisionConstantesFunciones.activaridGuiaRemision);
		this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_empresaGuiaRemision.setEnabled(this.guiaremisionConstantesFunciones.activarid_empresaGuiaRemision);
		this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_sucursalGuiaRemision.setEnabled(this.guiaremisionConstantesFunciones.activarid_sucursalGuiaRemision);
		this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_ejercicioGuiaRemision.setEnabled(this.guiaremisionConstantesFunciones.activarid_ejercicioGuiaRemision);
		this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_periodoGuiaRemision.setEnabled(this.guiaremisionConstantesFunciones.activarid_periodoGuiaRemision);
		this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_usuarioGuiaRemision.setEnabled(this.guiaremisionConstantesFunciones.activarid_usuarioGuiaRemision);
		this.jInternalFrameDetalleFormGuiaRemision.jTextFieldsecuencialGuiaRemision.setEnabled(this.guiaremisionConstantesFunciones.activarsecuencialGuiaRemision);
		this.jInternalFrameDetalleFormGuiaRemision.jDateChooserfecha_emisionGuiaRemision.setEnabled(this.guiaremisionConstantesFunciones.activarfecha_emisionGuiaRemision);
		this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_formatoGuiaRemision.setEnabled(this.guiaremisionConstantesFunciones.activarid_formatoGuiaRemision);
		this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_tipo_precioGuiaRemision.setEnabled(this.guiaremisionConstantesFunciones.activarid_tipo_precioGuiaRemision);
		this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_monedaGuiaRemision.setEnabled(this.guiaremisionConstantesFunciones.activarid_monedaGuiaRemision);
		this.jInternalFrameDetalleFormGuiaRemision.jTextFieldnumero_camionGuiaRemision.setEnabled(this.guiaremisionConstantesFunciones.activarnumero_camionGuiaRemision);
		this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_clienteGuiaRemision.setEnabled(this.guiaremisionConstantesFunciones.activarid_clienteGuiaRemision);
			this.jInternalFrameDetalleFormGuiaRemision.jButtonid_clienteGuiaRemision.setEnabled(this.guiaremisionConstantesFunciones.activarid_clienteGuiaRemision);
		this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_vendedorGuiaRemision.setEnabled(this.guiaremisionConstantesFunciones.activarid_vendedorGuiaRemision);
		this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_facturaGuiaRemision.setEnabled(this.guiaremisionConstantesFunciones.activarid_facturaGuiaRemision);
			this.jInternalFrameDetalleFormGuiaRemision.jButtonid_facturaGuiaRemision.setEnabled(this.guiaremisionConstantesFunciones.activarid_facturaGuiaRemision);
		this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_transportistaGuiaRemision.setEnabled(this.guiaremisionConstantesFunciones.activarid_transportistaGuiaRemision);
		this.jInternalFrameDetalleFormGuiaRemision.jTextFieldidentificacionGuiaRemision.setEnabled(this.guiaremisionConstantesFunciones.activaridentificacionGuiaRemision);
		this.jInternalFrameDetalleFormGuiaRemision.jDateChooserfecha_origenGuiaRemision.setEnabled(this.guiaremisionConstantesFunciones.activarfecha_origenGuiaRemision);
		this.jInternalFrameDetalleFormGuiaRemision.jDateChooserfecha_destinoGuiaRemision.setEnabled(this.guiaremisionConstantesFunciones.activarfecha_destinoGuiaRemision);
		this.jInternalFrameDetalleFormGuiaRemision.jTextAreatransporte_codigoGuiaRemision.setEnabled(this.guiaremisionConstantesFunciones.activartransporte_codigoGuiaRemision);
		this.jInternalFrameDetalleFormGuiaRemision.jTextFieldcantidad_bultosGuiaRemision.setEnabled(this.guiaremisionConstantesFunciones.activarcantidad_bultosGuiaRemision);
		this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_consultorGuiaRemision.setEnabled(this.guiaremisionConstantesFunciones.activarid_consultorGuiaRemision);
		this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_transporteGuiaRemision.setEnabled(this.guiaremisionConstantesFunciones.activarid_transporteGuiaRemision);
		this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_sub_clienteGuiaRemision.setEnabled(this.guiaremisionConstantesFunciones.activarid_sub_clienteGuiaRemision);
		this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_empleadoGuiaRemision.setEnabled(this.guiaremisionConstantesFunciones.activarid_empleadoGuiaRemision);
		this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_ciudad_origenGuiaRemision.setEnabled(this.guiaremisionConstantesFunciones.activarid_ciudad_origenGuiaRemision);
		this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_ciudad_destinoGuiaRemision.setEnabled(this.guiaremisionConstantesFunciones.activarid_ciudad_destinoGuiaRemision);
		this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_tipo_llamadaGuiaRemision.setEnabled(this.guiaremisionConstantesFunciones.activarid_tipo_llamadaGuiaRemision);
		this.jInternalFrameDetalleFormGuiaRemision.jSpinnerhora_inicioGuiaRemision.setEnabled(this.guiaremisionConstantesFunciones.activarhora_inicioGuiaRemision);
		this.jInternalFrameDetalleFormGuiaRemision.jSpinnerhora_finGuiaRemision.setEnabled(this.guiaremisionConstantesFunciones.activarhora_finGuiaRemision);
		this.jInternalFrameDetalleFormGuiaRemision.jTextFieldcupoGuiaRemision.setEnabled(this.guiaremisionConstantesFunciones.activarcupoGuiaRemision);
		this.jInternalFrameDetalleFormGuiaRemision.jTextFieldsaldoGuiaRemision.setEnabled(this.guiaremisionConstantesFunciones.activarsaldoGuiaRemision);
		this.jInternalFrameDetalleFormGuiaRemision.jTextFielddocumentoGuiaRemision.setEnabled(this.guiaremisionConstantesFunciones.activardocumentoGuiaRemision);
		this.jInternalFrameDetalleFormGuiaRemision.jTextFielddisponibleGuiaRemision.setEnabled(this.guiaremisionConstantesFunciones.activardisponibleGuiaRemision);
		this.jInternalFrameDetalleFormGuiaRemision.jTextAreadescripcionGuiaRemision.setEnabled(this.guiaremisionConstantesFunciones.activardescripcionGuiaRemision);
		this.jInternalFrameDetalleFormGuiaRemision.jTextFieldtotal_ivaGuiaRemision.setEnabled(this.guiaremisionConstantesFunciones.activartotal_ivaGuiaRemision);
		this.jInternalFrameDetalleFormGuiaRemision.jTextFieldtotal_sin_ivaGuiaRemision.setEnabled(this.guiaremisionConstantesFunciones.activartotal_sin_ivaGuiaRemision);
		this.jInternalFrameDetalleFormGuiaRemision.jTextFielddescuentoGuiaRemision.setEnabled(this.guiaremisionConstantesFunciones.activardescuentoGuiaRemision);
		this.jInternalFrameDetalleFormGuiaRemision.jTextFieldfleteGuiaRemision.setEnabled(this.guiaremisionConstantesFunciones.activarfleteGuiaRemision);
		this.jInternalFrameDetalleFormGuiaRemision.jTextFieldotroGuiaRemision.setEnabled(this.guiaremisionConstantesFunciones.activarotroGuiaRemision);
		this.jInternalFrameDetalleFormGuiaRemision.jTextFieldfinanciamientoGuiaRemision.setEnabled(this.guiaremisionConstantesFunciones.activarfinanciamientoGuiaRemision);
		this.jInternalFrameDetalleFormGuiaRemision.jTextFieldivaGuiaRemision.setEnabled(this.guiaremisionConstantesFunciones.activarivaGuiaRemision);
		this.jInternalFrameDetalleFormGuiaRemision.jTextFieldtotalGuiaRemision.setEnabled(this.guiaremisionConstantesFunciones.activartotalGuiaRemision);
		this.jInternalFrameDetalleFormGuiaRemision.jTextFieldmonto_retencionGuiaRemision.setEnabled(this.guiaremisionConstantesFunciones.activarmonto_retencionGuiaRemision);
		this.jInternalFrameDetalleFormGuiaRemision.jComboBoxid_tipo_cambioGuiaRemision.setEnabled(this.guiaremisionConstantesFunciones.activarid_tipo_cambioGuiaRemision);
			this.jInternalFrameDetalleFormGuiaRemision.jButtonid_tipo_cambioGuiaRemision.setEnabled(this.guiaremisionConstantesFunciones.activarid_tipo_cambioGuiaRemision);
		this.jInternalFrameDetalleFormGuiaRemision.jDateChooserfechaGuiaRemision.setEnabled(this.guiaremisionConstantesFunciones.activarfechaGuiaRemision);
		this.jInternalFrameDetalleFormGuiaRemision.jTextFieldruc_clienteGuiaRemision.setEnabled(this.guiaremisionConstantesFunciones.activarruc_clienteGuiaRemision);
		this.jInternalFrameDetalleFormGuiaRemision.jTextAreanombre_clienteGuiaRemision.setEnabled(this.guiaremisionConstantesFunciones.activarnombre_clienteGuiaRemision);
		this.jInternalFrameDetalleFormGuiaRemision.jTextAreatelefono_clienteGuiaRemision.setEnabled(this.guiaremisionConstantesFunciones.activartelefono_clienteGuiaRemision);
		this.jInternalFrameDetalleFormGuiaRemision.jTextAreadireccion_clienteGuiaRemision.setEnabled(this.guiaremisionConstantesFunciones.activardireccion_clienteGuiaRemision);
		this.jInternalFrameDetalleFormGuiaRemision.jTextFieldnumero_pre_impresoGuiaRemision.setEnabled(this.guiaremisionConstantesFunciones.activarnumero_pre_impresoGuiaRemision);
		this.jInternalFrameDetalleFormGuiaRemision.jTextFieldpeso_brutoGuiaRemision.setEnabled(this.guiaremisionConstantesFunciones.activarpeso_brutoGuiaRemision);
		this.jInternalFrameDetalleFormGuiaRemision.jDateChooserfecha_autorizacionGuiaRemision.setEnabled(this.guiaremisionConstantesFunciones.activarfecha_autorizacionGuiaRemision);
		this.jInternalFrameDetalleFormGuiaRemision.jDateChooserfecha_vencimientoGuiaRemision.setEnabled(this.guiaremisionConstantesFunciones.activarfecha_vencimientoGuiaRemision);
		}
	}
	
		
}