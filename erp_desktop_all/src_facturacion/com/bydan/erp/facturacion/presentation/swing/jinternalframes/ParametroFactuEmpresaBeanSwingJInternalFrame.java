/*
*AVISO LEGAL
Â© Copyright
*Este programa esta protegido por la ley de derechos de autor.
*La reproduccion o distribucion ilicita de este programa o de cualquiera de
*sus partes esta penado por la ley con severas sanciones civiles y penales,
*y seran objeto de todas las sanciones legales que correspondan.

*Su contenido no puede copiarse para fines comerciales o de otras,
*ni puede mostrarse, incluso en una version modificada, en otros sitios Web.
Solo esta permitido colocar hipervinculos al sitio web.
*/
package com.bydan.erp.facturacion.presentation.swing.jinternalframes;




import com.bydan.erp.seguridad.business.entity.Usuario;
import com.bydan.erp.seguridad.business.entity.ResumenUsuario;
import com.bydan.erp.seguridad.business.entity.Opcion;
import com.bydan.erp.seguridad.business.entity.PerfilOpcion;
import com.bydan.erp.seguridad.business.entity.PerfilCampo;
import com.bydan.erp.seguridad.business.entity.PerfilAccion;
import com.bydan.erp.seguridad.business.entity.ParametroGeneralSg;
import com.bydan.erp.seguridad.business.entity.ParametroGeneralUsuario;
import com.bydan.erp.seguridad.business.entity.Modulo;
import com.bydan.erp.seguridad.business.entity.Accion;

import com.bydan.erp.seguridad.util.SistemaParameterReturnGeneralAdditional;
import com.bydan.erp.seguridad.util.SistemaParameterReturnGeneral;


//import com.bydan.erp.seguridad.business.entity.PerfilAccion;


import com.bydan.erp.seguridad.util.SistemaConstantesFunciones;
import com.bydan.erp.seguridad.util.SistemaConstantesFuncionesAdditional;
import com.bydan.erp.seguridad.business.logic.SistemaLogicAdditional;

import com.bydan.erp.facturacion.util.ParametroFactuEmpresaConstantesFunciones;
import com.bydan.erp.facturacion.util.ParametroFactuEmpresaParameterReturnGeneral;
//import com.bydan.erp.facturacion.util.ParametroFactuEmpresaParameterGeneral;
//import com.bydan.erp.facturacion.presentation.report.source.ParametroFactuEmpresaBean;
import com.bydan.framework.erp.business.dataaccess.ConstantesSql;
import com.bydan.framework.erp.business.entity.Classe;
import com.bydan.framework.erp.business.entity.DatoGeneral;
import com.bydan.framework.erp.business.entity.GeneralEntityParameterGeneral;
import com.bydan.framework.erp.business.entity.OrderBy;
import com.bydan.framework.erp.business.entity.DatoGeneralMinimo;
import com.bydan.framework.erp.business.entity.GeneralEntity;
import com.bydan.framework.erp.business.entity.Mensajes;
import com.bydan.framework.erp.business.entity.GeneralEntityParameterReturnGeneral;
//import com.bydan.framework.erp.business.entity.MaintenanceType;
import com.bydan.framework.erp.util.MaintenanceType;
import com.bydan.framework.erp.util.FuncionesReporte;
import com.bydan.framework.erp.business.logic.DatosCliente;
import com.bydan.framework.erp.business.logic.Pagination;

import com.bydan.erp.facturacion.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.framework.erp.presentation.desktop.swing.TablaGeneralTotalModel;
import com.bydan.framework.erp.presentation.desktop.swing.TablaGeneralOrderByModel;
import com.bydan.framework.erp.presentation.desktop.swing.DateConverter;
import com.bydan.framework.erp.presentation.desktop.swing.DateConverterFromDate;
import com.bydan.framework.erp.presentation.desktop.swing.DateRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.DateEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.BooleanRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.BooleanEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.TextFieldRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.RunnableProceso;
import com.bydan.framework.erp.presentation.desktop.swing.*;
//import com.bydan.framework.erp.presentation.desktop.swing.TextFieldEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.HeaderRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.JInternalFrameBase;
import com.bydan.framework.erp.presentation.desktop.swing.FuncionesSwing;
import com.bydan.framework.erp.presentation.desktop.swing.MainJFrame;
import com.bydan.framework.erp.resources.imagenes.AuxiliarImagenes;
import com.bydan.erp.facturacion.resources.reportes.AuxiliarReportes;


import com.bydan.erp.facturacion.util.*;
import com.bydan.erp.facturacion.business.logic.*;

import com.bydan.erp.seguridad.business.logic.*;
import com.bydan.erp.tesoreria.business.logic.*;
import com.bydan.erp.inventario.business.logic.*;
import com.bydan.erp.cartera.business.logic.*;

//EJB

//PARAMETROS


//EJB PARAMETROS

import com.bydan.framework.erp.business.logic.*;
import com.bydan.framework.erp.util.*;

import com.bydan.erp.facturacion.business.entity.*;
//import com.bydan.framework.erp.business.entity.ConexionBeanFace;
//import com.bydan.framework.erp.business.entity.Mensajes;


import com.bydan.erp.seguridad.presentation.swing.jinternalframes.*;
import com.bydan.erp.tesoreria.presentation.swing.jinternalframes.*;
import com.bydan.erp.inventario.presentation.swing.jinternalframes.*;
import com.bydan.erp.cartera.presentation.swing.jinternalframes.*;

import com.bydan.erp.seguridad.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.tesoreria.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.inventario.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.cartera.presentation.swing.jinternalframes.auxiliar.*;






import javax.imageio.ImageIO;
import java.net.NetworkInterface;
import java.net.InterfaceAddress;
import java.net.InetAddress;
import javax.naming.InitialContext;
import java.lang.Long;
import java.util.Date;
import java.util.Enumeration;
import java.util.Iterator;
import java.util.Set;
import java.util.HashSet;
import java.util.List;
import java.util.ArrayList;
import java.io.Serializable;
import java.util.Hashtable;
import java.util.Collections;
import java.io.File;
import java.io.FileInputStream;
import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.io.BufferedReader;
import java.io.FileReader;
import java.util.HashMap;
import java.util.Map;
import java.io.PrintWriter;
import java.sql.SQLException;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.transform.stream.StreamSource;

import org.xml.sax.EntityResolver;
import org.xml.sax.InputSource;
import org.xml.sax.SAXException;

import org.w3c.dom.Document;
import org.w3c.dom.Document;
import org.w3c.dom.NodeList;
import org.w3c.dom.Node;
import org.w3c.dom.Element;

import org.apache.poi.hssf.usermodel.HSSFCell;
import org.apache.poi.hssf.usermodel.HSSFRow;
import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellStyle;
import org.apache.poi.ss.usermodel.IndexedColors;
import org.apache.poi.ss.util.CellRangeAddress;

import javax.xml.transform.Transformer;
import javax.xml.transform.TransformerFactory;
import javax.xml.transform.dom.DOMSource;
import javax.xml.transform.stream.StreamResult;


import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JRRuntimeException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.engine.export.JRHtmlExporter;
import net.sf.jasperreports.j2ee.servlets.BaseHttpServlet;
import net.sf.jasperreports.engine.JRExporterParameter;
import net.sf.jasperreports.engine.data.JRBeanArrayDataSource;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import net.sf.jasperreports.view.JasperViewer;

import org.apache.log4j.Logger;

import com.bydan.framework.erp.business.entity.Reporte;


//VALIDACION
import org.hibernate.validator.ClassValidator;
import org.hibernate.validator.InvalidValue;

import net.sf.jasperreports.engine.JREmptyDataSource;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperExportManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperPrintManager;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.JasperRunManager;
import net.sf.jasperreports.engine.export.JExcelApiExporter;
import net.sf.jasperreports.engine.export.JRCsvExporter;
import net.sf.jasperreports.engine.export.JRRtfExporter;
import net.sf.jasperreports.engine.export.JRXlsExporter;
import net.sf.jasperreports.engine.export.JRXlsExporterParameter;
import net.sf.jasperreports.engine.util.JRSaver;
import net.sf.jasperreports.engine.xml.JRXmlWriter;


import com.bydan.erp.facturacion.presentation.web.jsf.sessionbean.*;

import java.util.EventObject;
import javax.swing.*;
import javax.swing.border.Border;
import javax.swing.border.TitledBorder;
import javax.swing.border.EmptyBorder;
import javax.swing.event.*;
import javax.swing.table.AbstractTableModel;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.TableColumn;
import javax.swing.table.TableCellEditor;
import javax.swing.table.TableCellRenderer;
import java.awt.*;
import java.awt.event.*;

import org.jdesktop.beansbinding.Binding.SyncFailure;
import org.jdesktop.beansbinding.BindingListener;
import org.jdesktop.beansbinding.Bindings;
import org.jdesktop.beansbinding.BeanProperty;
import org.jdesktop.beansbinding.ELProperty;
import org.jdesktop.beansbinding.AutoBinding.UpdateStrategy;
import org.jdesktop.beansbinding.PropertyStateEvent;
import org.jdesktop.swingbinding.JComboBoxBinding;
import org.jdesktop.swingbinding.SwingBindings;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeEvent;

import com.toedter.calendar.JDateChooser;


import com.bydan.erp.seguridad.business.entity.*;
import com.bydan.erp.tesoreria.business.entity.*;
import com.bydan.erp.inventario.business.entity.*;
import com.bydan.erp.cartera.business.entity.*;
import com.bydan.erp.seguridad.util.*;
import com.bydan.erp.tesoreria.util.*;
import com.bydan.erp.inventario.util.*;
import com.bydan.erp.cartera.util.*;
import com.bydan.erp.seguridad.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.tesoreria.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.inventario.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.cartera.presentation.web.jsf.sessionbean.*;


@SuppressWarnings("unused")
public class ParametroFactuEmpresaBeanSwingJInternalFrame extends ParametroFactuEmpresaJInternalFrame implements WindowListener,WindowFocusListener
{				
	
	public static final long serialVersionUID = 1L;
	
	public static Logger logger = Logger.getLogger(ParametroFactuEmpresaBeanSwingJInternalFrame.class);  
	
	public static ClassValidator<ParametroFactuEmpresa> parametrofactuempresaValidator = new ClassValidator<ParametroFactuEmpresa>(ParametroFactuEmpresa.class);
	
	public InvalidValue[] invalidValues=null;
		

	//Ejb Foreign Keys
	
	public ParametroFactuEmpresa parametrofactuempresa;	
	public ParametroFactuEmpresa parametrofactuempresaAux;
	public ParametroFactuEmpresa parametrofactuempresaAnterior;//USADO PARA MANEJAR FOCUS GAINED,LOST
	public ParametroFactuEmpresa parametrofactuempresaTotales;
	public Long idParametroFactuEmpresaActual;
	public Long iIdNuevoParametroFactuEmpresa=0L;
	public int rowIndexActual=0;
	
	
	
	
	public String sFinalQueryComboEmpresa="";

	public List<Empresa> empresasForeignKey;

	public List<Empresa> getempresasForeignKey() {
		return empresasForeignKey;
	}

	public void setempresasForeignKey(List<Empresa> empresasForeignKey) {
		this.empresasForeignKey = empresasForeignKey;
	}

	//OBJETO FK ACTUAL
	public Empresa empresaForeignKey;

	public Empresa getempresaForeignKey() {
		return empresaForeignKey;
	}

	public void setempresaForeignKey(Empresa empresaForeignKey) {
		this.empresaForeignKey = empresaForeignKey;
	}

	public String sFinalQueryComboEmpresaOrigen="";

	public List<Empresa> empresaorigensForeignKey;

	public List<Empresa> getempresaorigensForeignKey() {
		return empresaorigensForeignKey;
	}

	public void setempresaorigensForeignKey(List<Empresa> empresaorigensForeignKey) {
		this.empresaorigensForeignKey = empresaorigensForeignKey;
	}

	//OBJETO FK ACTUAL
	public Empresa empresaorigenForeignKey;

	public Empresa getempresaorigenForeignKey() {
		return empresaorigenForeignKey;
	}

	public void setempresaorigenForeignKey(Empresa empresaorigenForeignKey) {
		this.empresaorigenForeignKey = empresaorigenForeignKey;
	}

	public String sFinalQueryComboSucursal="";

	public List<Sucursal> sucursalsForeignKey;

	public List<Sucursal> getsucursalsForeignKey() {
		return sucursalsForeignKey;
	}

	public void setsucursalsForeignKey(List<Sucursal> sucursalsForeignKey) {
		this.sucursalsForeignKey = sucursalsForeignKey;
	}

	//OBJETO FK ACTUAL
	public Sucursal sucursalForeignKey;

	public Sucursal getsucursalForeignKey() {
		return sucursalForeignKey;
	}

	public void setsucursalForeignKey(Sucursal sucursalForeignKey) {
		this.sucursalForeignKey = sucursalForeignKey;
	}

	public String sFinalQueryComboTransaccionOrigen="";

	public List<Transaccion> transaccionorigensForeignKey;

	public List<Transaccion> gettransaccionorigensForeignKey() {
		return transaccionorigensForeignKey;
	}

	public void settransaccionorigensForeignKey(List<Transaccion> transaccionorigensForeignKey) {
		this.transaccionorigensForeignKey = transaccionorigensForeignKey;
	}

	//OBJETO FK ACTUAL
	public Transaccion transaccionorigenForeignKey;

	public Transaccion gettransaccionorigenForeignKey() {
		return transaccionorigenForeignKey;
	}

	public void settransaccionorigenForeignKey(Transaccion transaccionorigenForeignKey) {
		this.transaccionorigenForeignKey = transaccionorigenForeignKey;
	}

	public String sFinalQueryComboBodegaOrigen="";

	public List<Bodega> bodegaorigensForeignKey;

	public List<Bodega> getbodegaorigensForeignKey() {
		return bodegaorigensForeignKey;
	}

	public void setbodegaorigensForeignKey(List<Bodega> bodegaorigensForeignKey) {
		this.bodegaorigensForeignKey = bodegaorigensForeignKey;
	}

	//OBJETO FK ACTUAL
	public Bodega bodegaorigenForeignKey;

	public Bodega getbodegaorigenForeignKey() {
		return bodegaorigenForeignKey;
	}

	public void setbodegaorigenForeignKey(Bodega bodegaorigenForeignKey) {
		this.bodegaorigenForeignKey = bodegaorigenForeignKey;
	}

	public String sFinalQueryComboClienteOrigen="";

	public List<Cliente> clienteorigensForeignKey;

	public List<Cliente> getclienteorigensForeignKey() {
		return clienteorigensForeignKey;
	}

	public void setclienteorigensForeignKey(List<Cliente> clienteorigensForeignKey) {
		this.clienteorigensForeignKey = clienteorigensForeignKey;
	}

	//OBJETO FK ACTUAL
	public Cliente clienteorigenForeignKey;

	public Cliente getclienteorigenForeignKey() {
		return clienteorigenForeignKey;
	}

	public void setclienteorigenForeignKey(Cliente clienteorigenForeignKey) {
		this.clienteorigenForeignKey = clienteorigenForeignKey;
	}

	public String sFinalQueryComboEmpresaDestino="";

	public List<Empresa> empresadestinosForeignKey;

	public List<Empresa> getempresadestinosForeignKey() {
		return empresadestinosForeignKey;
	}

	public void setempresadestinosForeignKey(List<Empresa> empresadestinosForeignKey) {
		this.empresadestinosForeignKey = empresadestinosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Empresa empresadestinoForeignKey;

	public Empresa getempresadestinoForeignKey() {
		return empresadestinoForeignKey;
	}

	public void setempresadestinoForeignKey(Empresa empresadestinoForeignKey) {
		this.empresadestinoForeignKey = empresadestinoForeignKey;
	}

	public String sFinalQueryComboSucursalDestino="";

	public List<Sucursal> sucursaldestinosForeignKey;

	public List<Sucursal> getsucursaldestinosForeignKey() {
		return sucursaldestinosForeignKey;
	}

	public void setsucursaldestinosForeignKey(List<Sucursal> sucursaldestinosForeignKey) {
		this.sucursaldestinosForeignKey = sucursaldestinosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Sucursal sucursaldestinoForeignKey;

	public Sucursal getsucursaldestinoForeignKey() {
		return sucursaldestinoForeignKey;
	}

	public void setsucursaldestinoForeignKey(Sucursal sucursaldestinoForeignKey) {
		this.sucursaldestinoForeignKey = sucursaldestinoForeignKey;
	}

	public String sFinalQueryComboTransaccionDestino="";

	public List<Transaccion> transacciondestinosForeignKey;

	public List<Transaccion> gettransacciondestinosForeignKey() {
		return transacciondestinosForeignKey;
	}

	public void settransacciondestinosForeignKey(List<Transaccion> transacciondestinosForeignKey) {
		this.transacciondestinosForeignKey = transacciondestinosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Transaccion transacciondestinoForeignKey;

	public Transaccion gettransacciondestinoForeignKey() {
		return transacciondestinoForeignKey;
	}

	public void settransacciondestinoForeignKey(Transaccion transacciondestinoForeignKey) {
		this.transacciondestinoForeignKey = transacciondestinoForeignKey;
	}

	public String sFinalQueryComboBodegaDestino="";

	public List<Bodega> bodegadestinosForeignKey;

	public List<Bodega> getbodegadestinosForeignKey() {
		return bodegadestinosForeignKey;
	}

	public void setbodegadestinosForeignKey(List<Bodega> bodegadestinosForeignKey) {
		this.bodegadestinosForeignKey = bodegadestinosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Bodega bodegadestinoForeignKey;

	public Bodega getbodegadestinoForeignKey() {
		return bodegadestinoForeignKey;
	}

	public void setbodegadestinoForeignKey(Bodega bodegadestinoForeignKey) {
		this.bodegadestinoForeignKey = bodegadestinoForeignKey;
	}

	public String sFinalQueryComboClienteDestino="";

	public List<Cliente> clientedestinosForeignKey;

	public List<Cliente> getclientedestinosForeignKey() {
		return clientedestinosForeignKey;
	}

	public void setclientedestinosForeignKey(List<Cliente> clientedestinosForeignKey) {
		this.clientedestinosForeignKey = clientedestinosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Cliente clientedestinoForeignKey;

	public Cliente getclientedestinoForeignKey() {
		return clientedestinoForeignKey;
	}

	public void setclientedestinoForeignKey(Cliente clientedestinoForeignKey) {
		this.clientedestinoForeignKey = clientedestinoForeignKey;
	}

	public String sFinalQueryComboEmpresaMultiDestino="";

	public List<Empresa> empresamultidestinosForeignKey;

	public List<Empresa> getempresamultidestinosForeignKey() {
		return empresamultidestinosForeignKey;
	}

	public void setempresamultidestinosForeignKey(List<Empresa> empresamultidestinosForeignKey) {
		this.empresamultidestinosForeignKey = empresamultidestinosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Empresa empresamultidestinoForeignKey;

	public Empresa getempresamultidestinoForeignKey() {
		return empresamultidestinoForeignKey;
	}

	public void setempresamultidestinoForeignKey(Empresa empresamultidestinoForeignKey) {
		this.empresamultidestinoForeignKey = empresamultidestinoForeignKey;
	}

	public String sFinalQueryComboSucursalMultiDestino="";

	public List<Sucursal> sucursalmultidestinosForeignKey;

	public List<Sucursal> getsucursalmultidestinosForeignKey() {
		return sucursalmultidestinosForeignKey;
	}

	public void setsucursalmultidestinosForeignKey(List<Sucursal> sucursalmultidestinosForeignKey) {
		this.sucursalmultidestinosForeignKey = sucursalmultidestinosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Sucursal sucursalmultidestinoForeignKey;

	public Sucursal getsucursalmultidestinoForeignKey() {
		return sucursalmultidestinoForeignKey;
	}

	public void setsucursalmultidestinoForeignKey(Sucursal sucursalmultidestinoForeignKey) {
		this.sucursalmultidestinoForeignKey = sucursalmultidestinoForeignKey;
	}

	public String sFinalQueryComboTransaccionMultiDestino="";

	public List<Transaccion> transaccionmultidestinosForeignKey;

	public List<Transaccion> gettransaccionmultidestinosForeignKey() {
		return transaccionmultidestinosForeignKey;
	}

	public void settransaccionmultidestinosForeignKey(List<Transaccion> transaccionmultidestinosForeignKey) {
		this.transaccionmultidestinosForeignKey = transaccionmultidestinosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Transaccion transaccionmultidestinoForeignKey;

	public Transaccion gettransaccionmultidestinoForeignKey() {
		return transaccionmultidestinoForeignKey;
	}

	public void settransaccionmultidestinoForeignKey(Transaccion transaccionmultidestinoForeignKey) {
		this.transaccionmultidestinoForeignKey = transaccionmultidestinoForeignKey;
	}

	public String sFinalQueryComboBodegaMultiOrigen="";

	public List<Bodega> bodegamultiorigensForeignKey;

	public List<Bodega> getbodegamultiorigensForeignKey() {
		return bodegamultiorigensForeignKey;
	}

	public void setbodegamultiorigensForeignKey(List<Bodega> bodegamultiorigensForeignKey) {
		this.bodegamultiorigensForeignKey = bodegamultiorigensForeignKey;
	}

	//OBJETO FK ACTUAL
	public Bodega bodegamultiorigenForeignKey;

	public Bodega getbodegamultiorigenForeignKey() {
		return bodegamultiorigenForeignKey;
	}

	public void setbodegamultiorigenForeignKey(Bodega bodegamultiorigenForeignKey) {
		this.bodegamultiorigenForeignKey = bodegamultiorigenForeignKey;
	}

	public String sFinalQueryComboBodegaMultiDestino="";

	public List<Bodega> bodegamultidestinosForeignKey;

	public List<Bodega> getbodegamultidestinosForeignKey() {
		return bodegamultidestinosForeignKey;
	}

	public void setbodegamultidestinosForeignKey(List<Bodega> bodegamultidestinosForeignKey) {
		this.bodegamultidestinosForeignKey = bodegamultidestinosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Bodega bodegamultidestinoForeignKey;

	public Bodega getbodegamultidestinoForeignKey() {
		return bodegamultidestinoForeignKey;
	}

	public void setbodegamultidestinoForeignKey(Bodega bodegamultidestinoForeignKey) {
		this.bodegamultidestinoForeignKey = bodegamultidestinoForeignKey;
	}

		
	
	
	
	//BUSQUEDA INTERNA FK
	public Long idClienteOrigenActual=0L;

	public Long getidClienteOrigenActual() {
		return idClienteOrigenActual;
	}

	public void setidClienteOrigenActual(Long idClienteOrigenActual) {
		this.idClienteOrigenActual= idClienteOrigenActual;
	}
	public Long idClienteDestinoActual=0L;

	public Long getidClienteDestinoActual() {
		return idClienteDestinoActual;
	}

	public void setidClienteDestinoActual(Long idClienteDestinoActual) {
		this.idClienteDestinoActual= idClienteDestinoActual;
	}
	
	
	
	
	//FALTA:PARA BUSQUEDAS POR CAMPO EN FORMULARIO
	public String sFinalQueryGeneral="";
	public Boolean isEntroOnLoad=false;
	public Boolean isErrorGuardar=false;
	
	public Boolean isGuardarCambiosEnLote=false;
	public Boolean isCargarCombosDependencia=false;
	public Boolean isSeleccionarTodos=false;
	public Boolean isSeleccionados=false;
	public Boolean conGraficoReporte=false;
	
	public Boolean isPostAccionNuevo=false;
	public Boolean isPostAccionSinCerrar=false;
	public Boolean isPostAccionSinMensaje=false;
	
	
	public Boolean esControlTabla=false;
	
	public Boolean isPermisoTodoParametroFactuEmpresa;
	public Boolean isPermisoNuevoParametroFactuEmpresa;
	public Boolean isPermisoActualizarParametroFactuEmpresa;
	public Boolean isPermisoActualizarOriginalParametroFactuEmpresa;
	public Boolean isPermisoEliminarParametroFactuEmpresa;
	public Boolean isPermisoGuardarCambiosParametroFactuEmpresa;
	public Boolean isPermisoConsultaParametroFactuEmpresa;
	public Boolean isPermisoBusquedaParametroFactuEmpresa;
	public Boolean isPermisoReporteParametroFactuEmpresa;
	public Boolean isPermisoPaginacionMedioParametroFactuEmpresa;
	public Boolean isPermisoPaginacionAltoParametroFactuEmpresa;
	public Boolean isPermisoPaginacionTodoParametroFactuEmpresa;
	public Boolean isPermisoCopiarParametroFactuEmpresa;
	public Boolean isPermisoVerFormParametroFactuEmpresa;
	public Boolean isPermisoDuplicarParametroFactuEmpresa;
	public Boolean isPermisoOrdenParametroFactuEmpresa;
	
	
	public ArrayList<DatoGeneral> arrDatoGeneral;
	public ArrayList<String> arrDatoGeneralNo;
	ArrayList<Classe> classesActual=new ArrayList<Classe>();
	
	public List<Accion> accions;	
	public List<Accion> accionsFormulario;
	
	
	public ArrayList<DatoGeneralMinimo> arrDatoGeneralMinimos;
	
	public ArrayList<Reporte> tiposArchivosReportes;
	public ArrayList<Reporte> tiposArchivosReportesDinamico;
	public ArrayList<Reporte> tiposReportes;
	public ArrayList<Reporte> tiposReportesDinamico;
	public ArrayList<Reporte> tiposGraficosReportes;
	public ArrayList<Reporte> tiposPaginacion;
	public ArrayList<Reporte> tiposRelaciones;
	public ArrayList<Reporte> tiposAcciones;
	public ArrayList<Reporte> tiposAccionesFormulario;
	public ArrayList<Reporte> tiposSeleccionar;
	
	public ArrayList<Reporte> tiposColumnasSelect;
	public ArrayList<Reporte> tiposRelacionesSelect;
	
	
	public Integer iNumeroPaginacion;
	public Integer iNumeroPaginacionPagina;
	public Pagination pagination;
	public DatosCliente datosCliente;
	public DatosDeep datosDeep;
	public String sTipoArchivoReporte="";
	public String sTipoArchivoReporteDinamico="";
	public String sTipoReporte="";
	public String sTipoReporteDinamico="";
	public String sTipoGraficoReporte="";
	public String sTipoPaginacion="";
	public String sTipoRelacion="";
	public String sTipoAccion="";
	public String sTipoAccionFormulario="";
	public String sTipoSeleccionar="";	
	public String sDetalleReporte="";
	public Boolean isMostrarNumeroPaginacion;
	public String sTipoReporteExtra="";
	public String sValorCampoGeneral="";
	public Boolean esReporteDinamico=false;
	public Boolean esReporteAccionProceso=false;
	public Boolean esRecargarFks=false;
	public String sPathReporteDinamico="";
	
	public ParametroFactuEmpresaParameterReturnGeneral parametrofactuempresaReturnGeneral;
	public ParametroFactuEmpresaParameterReturnGeneral parametrofactuempresaParameterGeneral;
	
	 	
	public JasperPrint jasperPrint = null;
	
	public Long lIdUsuarioSesion=0L;				
	
	public Boolean isEsNuevoParametroFactuEmpresa=false;
	public Boolean esParaAccionDesdeFormularioParametroFactuEmpresa=false;
	public Boolean isEsMantenimientoRelacionesRelacionadoUnico=false;
	public Boolean isEsMantenimientoRelaciones=false;
	public Boolean isEsMantenimientoRelacionado=false;	
	public Boolean isContieneImagenes=false;
		
	//public Boolean conTotales=false; //Viene heredado de JInternalFrameBase
	//public Boolean esParaBusquedaForeignKey=false;
	
	
	protected ParametroFactuEmpresaSessionBeanAdditional parametrofactuempresaSessionBeanAdditional=null;
	
	public ParametroFactuEmpresaSessionBeanAdditional getParametroFactuEmpresaSessionBeanAdditional() {
		return this.parametrofactuempresaSessionBeanAdditional;
	}
	
	public void setParametroFactuEmpresaSessionBeanAdditional(ParametroFactuEmpresaSessionBeanAdditional parametrofactuempresaSessionBeanAdditional) {
		try {
			this.parametrofactuempresaSessionBeanAdditional=parametrofactuempresaSessionBeanAdditional;
		} catch(Exception e) {
			;
		}
	}
	
	
	
	
	protected ParametroFactuEmpresaBeanSwingJInternalFrameAdditional parametrofactuempresaBeanSwingJInternalFrameAdditional=null;
	//public class ParametroFactuEmpresaBeanSwingJInternalFrame
	
	public ParametroFactuEmpresaBeanSwingJInternalFrameAdditional getParametroFactuEmpresaBeanSwingJInternalFrameAdditional() {
		return this.parametrofactuempresaBeanSwingJInternalFrameAdditional;
	}
	
	public void setParametroFactuEmpresaBeanSwingJInternalFrameAdditional(ParametroFactuEmpresaBeanSwingJInternalFrameAdditional parametrofactuempresaBeanSwingJInternalFrameAdditional) {
		try {
			this.parametrofactuempresaBeanSwingJInternalFrameAdditional=parametrofactuempresaBeanSwingJInternalFrameAdditional;
		} catch(Exception e) {
			;
		}
	}
	
	
	
	
	//ESTA EN PADRE
	
	//public ParametroFactuEmpresaLogic parametrofactuempresaLogic;
	public SistemaLogicAdditional sistemaLogicAdditional;
	
	
	public ParametroFactuEmpresa parametrofactuempresaBean;
	public ParametroFactuEmpresaConstantesFunciones parametrofactuempresaConstantesFunciones;
	//public ParametroFactuEmpresaParameterReturnGeneral parametrofactuempresaReturnGeneral;
	
	//FK
	
	public EmpresaLogic empresaLogic;
	public EmpresaLogic empresaorigenLogic;
	public SucursalLogic sucursalLogic;
	public TransaccionLogic transaccionorigenLogic;
	public BodegaLogic bodegaorigenLogic;
	public ClienteLogic clienteorigenLogic;
	public EmpresaLogic empresadestinoLogic;
	public SucursalLogic sucursaldestinoLogic;
	public TransaccionLogic transacciondestinoLogic;
	public BodegaLogic bodegadestinoLogic;
	public ClienteLogic clientedestinoLogic;
	public EmpresaLogic empresamultidestinoLogic;
	public SucursalLogic sucursalmultidestinoLogic;
	public TransaccionLogic transaccionmultidestinoLogic;
	public BodegaLogic bodegamultiorigenLogic;
	public BodegaLogic bodegamultidestinoLogic;
	
	//PARAMETROS
	
	
	//public List<ParametroFactuEmpresa> parametrofactuempresas;	
	//public List<ParametroFactuEmpresa> parametrofactuempresasEliminados;
	//public List<ParametroFactuEmpresa> parametrofactuempresasAux;
	
	public String sAccionMantenimiento="";
	public String sAccionBusqueda="";
	public String sAccionAdicional="";
	public String sUltimaBusqueda="";
	
	public Mensaje mensaje;
	
	
	public String sVisibilidadTablaBusquedas="";					
	public String sVisibilidadTablaElementos="";	
	public String sVisibilidadTablaAcciones="";			
	
	public Boolean isVisibilidadCeldaNuevoParametroFactuEmpresa=false;
	public Boolean isVisibilidadCeldaDuplicarParametroFactuEmpresa=true;
	public Boolean isVisibilidadCeldaCopiarParametroFactuEmpresa=true;
	public Boolean isVisibilidadCeldaVerFormParametroFactuEmpresa=true;
	public Boolean isVisibilidadCeldaOrdenParametroFactuEmpresa=true;
	public Boolean isVisibilidadCeldaNuevoRelacionesParametroFactuEmpresa=false;
	public Boolean isVisibilidadCeldaModificarParametroFactuEmpresa=false;
	public Boolean isVisibilidadCeldaActualizarParametroFactuEmpresa=false;
	public Boolean isVisibilidadCeldaEliminarParametroFactuEmpresa=false;
	public Boolean isVisibilidadCeldaCancelarParametroFactuEmpresa=false;
	public Boolean isVisibilidadCeldaGuardarParametroFactuEmpresa=false;	
	public Boolean isVisibilidadCeldaGuardarCambiosParametroFactuEmpresa=false;	
	
	
	public Boolean isVisibilidadFK_IdBodegaDestino=false;
	public Boolean isVisibilidadFK_IdBodegaMultiDestino=false;
	public Boolean isVisibilidadFK_IdBodegaMultiOrigen=false;
	public Boolean isVisibilidadFK_IdBodegaOrigen=false;
	public Boolean isVisibilidadFK_IdClienteDestino=false;
	public Boolean isVisibilidadFK_IdClienteOrigen=false;
	public Boolean isVisibilidadFK_IdEmpresa=false;
	public Boolean isVisibilidadFK_IdEmpresaDestino=false;
	public Boolean isVisibilidadFK_IdEmpresaMultiDestino=false;
	public Boolean isVisibilidadFK_IdEmpresaOrigen=false;
	public Boolean isVisibilidadFK_IdSucursal=false;
	public Boolean isVisibilidadFK_IdSucursalDestino=false;
	public Boolean isVisibilidadFK_IdSucursalMultiDestino=false;
	public Boolean isVisibilidadFK_IdTransaccionDestino=false;
	public Boolean isVisibilidadFK_IdTransaccionMultiDestino=false;
	public Boolean isVisibilidadFK_IdTransaccionOrigen=false;
	
	public Long getiIdNuevoParametroFactuEmpresa() {
		return this.iIdNuevoParametroFactuEmpresa;
	}

	public void setiIdNuevoParametroFactuEmpresa(Long iIdNuevoParametroFactuEmpresa) {
		this.iIdNuevoParametroFactuEmpresa = iIdNuevoParametroFactuEmpresa;
	}
	
	public Long getidParametroFactuEmpresaActual() {
		return this.idParametroFactuEmpresaActual;
	}

	public void setidParametroFactuEmpresaActual(Long idParametroFactuEmpresaActual) {
		this.idParametroFactuEmpresaActual = idParametroFactuEmpresaActual;
	}
	
	public int getrowIndexActual() {
		return this.rowIndexActual;
	}

	public void setrowIndexActual(int rowIndexActual) {
		this.rowIndexActual=rowIndexActual;
	}
	
	
	public ParametroFactuEmpresa getparametrofactuempresa() {
		return this.parametrofactuempresa;
	}

	public void setparametrofactuempresa(ParametroFactuEmpresa parametrofactuempresa) {
		this.parametrofactuempresa = parametrofactuempresa;
	}
	
	public ParametroFactuEmpresa getparametrofactuempresaAux() {
		return this.parametrofactuempresaAux;
	}

	public void setparametrofactuempresaAux(ParametroFactuEmpresa parametrofactuempresaAux) {
		this.parametrofactuempresaAux = parametrofactuempresaAux;
	}				
	
	public ParametroFactuEmpresa getparametrofactuempresaAnterior() {
		return this.parametrofactuempresaAnterior;
	}

	public void setparametrofactuempresaAnterior(ParametroFactuEmpresa parametrofactuempresaAnterior) {
		this.parametrofactuempresaAnterior = parametrofactuempresaAnterior;
	}	
	
	public ParametroFactuEmpresa getparametrofactuempresaTotales() {
		return this.parametrofactuempresaTotales;
	}

	public void setparametrofactuempresaTotales(ParametroFactuEmpresa parametrofactuempresaTotales) {
		this.parametrofactuempresaTotales = parametrofactuempresaTotales;
	}	
	
	public ParametroFactuEmpresa getparametrofactuempresaBean() {
		return this.parametrofactuempresaBean;
	}

	public void setparametrofactuempresaBean(ParametroFactuEmpresa parametrofactuempresaBean) {
		this.parametrofactuempresaBean = parametrofactuempresaBean;
	}	
	
	public ParametroFactuEmpresaParameterReturnGeneral getparametrofactuempresaReturnGeneral() {
		return this.parametrofactuempresaReturnGeneral;
	}

	public void setparametrofactuempresaReturnGeneral(ParametroFactuEmpresaParameterReturnGeneral parametrofactuempresaReturnGeneral) {
		this.parametrofactuempresaReturnGeneral = parametrofactuempresaReturnGeneral;
	}	
	
	
	public Long id_bodega_destinoFK_IdBodegaDestino=-1L;

	public Long getid_bodega_destinoFK_IdBodegaDestino() {
		return this.id_bodega_destinoFK_IdBodegaDestino;
	}

	public void setid_bodega_destinoFK_IdBodegaDestino(Long id_bodega_destinoFK_IdBodegaDestino) {
		this.id_bodega_destinoFK_IdBodegaDestino = id_bodega_destinoFK_IdBodegaDestino;
	}

	public Long id_bodega_multi_destinoFK_IdBodegaMultiDestino=-1L;

	public Long getid_bodega_multi_destinoFK_IdBodegaMultiDestino() {
		return this.id_bodega_multi_destinoFK_IdBodegaMultiDestino;
	}

	public void setid_bodega_multi_destinoFK_IdBodegaMultiDestino(Long id_bodega_multi_destinoFK_IdBodegaMultiDestino) {
		this.id_bodega_multi_destinoFK_IdBodegaMultiDestino = id_bodega_multi_destinoFK_IdBodegaMultiDestino;
	}

	public Long id_bodega_multi_origenFK_IdBodegaMultiOrigen=-1L;

	public Long getid_bodega_multi_origenFK_IdBodegaMultiOrigen() {
		return this.id_bodega_multi_origenFK_IdBodegaMultiOrigen;
	}

	public void setid_bodega_multi_origenFK_IdBodegaMultiOrigen(Long id_bodega_multi_origenFK_IdBodegaMultiOrigen) {
		this.id_bodega_multi_origenFK_IdBodegaMultiOrigen = id_bodega_multi_origenFK_IdBodegaMultiOrigen;
	}

	public Long id_bodega_origenFK_IdBodegaOrigen=-1L;

	public Long getid_bodega_origenFK_IdBodegaOrigen() {
		return this.id_bodega_origenFK_IdBodegaOrigen;
	}

	public void setid_bodega_origenFK_IdBodegaOrigen(Long id_bodega_origenFK_IdBodegaOrigen) {
		this.id_bodega_origenFK_IdBodegaOrigen = id_bodega_origenFK_IdBodegaOrigen;
	}

	public Long id_cliente_destinoFK_IdClienteDestino=-1L;

	public Long getid_cliente_destinoFK_IdClienteDestino() {
		return this.id_cliente_destinoFK_IdClienteDestino;
	}

	public void setid_cliente_destinoFK_IdClienteDestino(Long id_cliente_destinoFK_IdClienteDestino) {
		this.id_cliente_destinoFK_IdClienteDestino = id_cliente_destinoFK_IdClienteDestino;
	}

	public Long id_cliente_origenFK_IdClienteOrigen=-1L;

	public Long getid_cliente_origenFK_IdClienteOrigen() {
		return this.id_cliente_origenFK_IdClienteOrigen;
	}

	public void setid_cliente_origenFK_IdClienteOrigen(Long id_cliente_origenFK_IdClienteOrigen) {
		this.id_cliente_origenFK_IdClienteOrigen = id_cliente_origenFK_IdClienteOrigen;
	}

	public Long id_empresaFK_IdEmpresa=-1L;

	public Long getid_empresaFK_IdEmpresa() {
		return this.id_empresaFK_IdEmpresa;
	}

	public void setid_empresaFK_IdEmpresa(Long id_empresaFK_IdEmpresa) {
		this.id_empresaFK_IdEmpresa = id_empresaFK_IdEmpresa;
	}

	public Long id_empresa_destinoFK_IdEmpresaDestino=-1L;

	public Long getid_empresa_destinoFK_IdEmpresaDestino() {
		return this.id_empresa_destinoFK_IdEmpresaDestino;
	}

	public void setid_empresa_destinoFK_IdEmpresaDestino(Long id_empresa_destinoFK_IdEmpresaDestino) {
		this.id_empresa_destinoFK_IdEmpresaDestino = id_empresa_destinoFK_IdEmpresaDestino;
	}

	public Long id_empresa_multi_destinoFK_IdEmpresaMultiDestino=-1L;

	public Long getid_empresa_multi_destinoFK_IdEmpresaMultiDestino() {
		return this.id_empresa_multi_destinoFK_IdEmpresaMultiDestino;
	}

	public void setid_empresa_multi_destinoFK_IdEmpresaMultiDestino(Long id_empresa_multi_destinoFK_IdEmpresaMultiDestino) {
		this.id_empresa_multi_destinoFK_IdEmpresaMultiDestino = id_empresa_multi_destinoFK_IdEmpresaMultiDestino;
	}

	public Long id_empresa_origenFK_IdEmpresaOrigen=-1L;

	public Long getid_empresa_origenFK_IdEmpresaOrigen() {
		return this.id_empresa_origenFK_IdEmpresaOrigen;
	}

	public void setid_empresa_origenFK_IdEmpresaOrigen(Long id_empresa_origenFK_IdEmpresaOrigen) {
		this.id_empresa_origenFK_IdEmpresaOrigen = id_empresa_origenFK_IdEmpresaOrigen;
	}

	public Long id_sucursalFK_IdSucursal=-1L;

	public Long getid_sucursalFK_IdSucursal() {
		return this.id_sucursalFK_IdSucursal;
	}

	public void setid_sucursalFK_IdSucursal(Long id_sucursalFK_IdSucursal) {
		this.id_sucursalFK_IdSucursal = id_sucursalFK_IdSucursal;
	}

	public Long id_sucursal_destinoFK_IdSucursalDestino=-1L;

	public Long getid_sucursal_destinoFK_IdSucursalDestino() {
		return this.id_sucursal_destinoFK_IdSucursalDestino;
	}

	public void setid_sucursal_destinoFK_IdSucursalDestino(Long id_sucursal_destinoFK_IdSucursalDestino) {
		this.id_sucursal_destinoFK_IdSucursalDestino = id_sucursal_destinoFK_IdSucursalDestino;
	}

	public Long id_sucursal_multi_destinoFK_IdSucursalMultiDestino=-1L;

	public Long getid_sucursal_multi_destinoFK_IdSucursalMultiDestino() {
		return this.id_sucursal_multi_destinoFK_IdSucursalMultiDestino;
	}

	public void setid_sucursal_multi_destinoFK_IdSucursalMultiDestino(Long id_sucursal_multi_destinoFK_IdSucursalMultiDestino) {
		this.id_sucursal_multi_destinoFK_IdSucursalMultiDestino = id_sucursal_multi_destinoFK_IdSucursalMultiDestino;
	}

	public Long id_transaccion_destinoFK_IdTransaccionDestino=-1L;

	public Long getid_transaccion_destinoFK_IdTransaccionDestino() {
		return this.id_transaccion_destinoFK_IdTransaccionDestino;
	}

	public void setid_transaccion_destinoFK_IdTransaccionDestino(Long id_transaccion_destinoFK_IdTransaccionDestino) {
		this.id_transaccion_destinoFK_IdTransaccionDestino = id_transaccion_destinoFK_IdTransaccionDestino;
	}

	public Long id_transaccion_multi_destinoFK_IdTransaccionMultiDestino=-1L;

	public Long getid_transaccion_multi_destinoFK_IdTransaccionMultiDestino() {
		return this.id_transaccion_multi_destinoFK_IdTransaccionMultiDestino;
	}

	public void setid_transaccion_multi_destinoFK_IdTransaccionMultiDestino(Long id_transaccion_multi_destinoFK_IdTransaccionMultiDestino) {
		this.id_transaccion_multi_destinoFK_IdTransaccionMultiDestino = id_transaccion_multi_destinoFK_IdTransaccionMultiDestino;
	}

	public Long id_transaccion_origenFK_IdTransaccionOrigen=-1L;

	public Long getid_transaccion_origenFK_IdTransaccionOrigen() {
		return this.id_transaccion_origenFK_IdTransaccionOrigen;
	}

	public void setid_transaccion_origenFK_IdTransaccionOrigen(Long id_transaccion_origenFK_IdTransaccionOrigen) {
		this.id_transaccion_origenFK_IdTransaccionOrigen = id_transaccion_origenFK_IdTransaccionOrigen;
	}

		
	
	//ELEMENTOS TABLAS PARAMETOS
	
	
	
	
	
	
	//ELEMENTOS TABLAS PARAMETOS_FIN
	
	
	public ParametroFactuEmpresaLogic getParametroFactuEmpresaLogic()	{		
		return parametrofactuempresaLogic;
	}

	public void setParametroFactuEmpresaLogic(ParametroFactuEmpresaLogic parametrofactuempresaLogic) {
		this.parametrofactuempresaLogic = parametrofactuempresaLogic;
	}
	
	
	public void setsFinalQueryGeneral(String sFinalQueryGeneral) {
		this.sFinalQueryGeneral=sFinalQueryGeneral;
	}
	
	public String getsFinalQueryGeneral() {
		return this.sFinalQueryGeneral;
	}
		
	public Boolean getIsGuardarCambiosEnLote() {
		return isGuardarCambiosEnLote;
	}

	public void setIsGuardarCambiosEnLote(Boolean isGuardarCambiosEnLote) {
		this.isGuardarCambiosEnLote = isGuardarCambiosEnLote;
	}
	
	public Boolean getIsCargarCombosDependencia() {
		return isCargarCombosDependencia;
	}

	public void setIsCargarCombosDependencia(Boolean isCargarCombosDependencia) {
		this.isCargarCombosDependencia = isCargarCombosDependencia;
	}
	
	public Boolean getIsEsNuevoParametroFactuEmpresa() {
		return isEsNuevoParametroFactuEmpresa;
	}

	public void setIsEsNuevoParametroFactuEmpresa(Boolean isEsNuevoParametroFactuEmpresa) {
		this.isEsNuevoParametroFactuEmpresa = isEsNuevoParametroFactuEmpresa;
	}

	public Boolean getEsParaAccionDesdeFormularioParametroFactuEmpresa() {
		return esParaAccionDesdeFormularioParametroFactuEmpresa;
	}
	
	public void setEsParaAccionDesdeFormularioParametroFactuEmpresa(Boolean esParaAccionDesdeFormularioParametroFactuEmpresa) {
		this.esParaAccionDesdeFormularioParametroFactuEmpresa = esParaAccionDesdeFormularioParametroFactuEmpresa;
	}
	
	public Boolean getIsEsMantenimientoRelacionesRelacionadoUnico() {
		return isEsMantenimientoRelacionesRelacionadoUnico;
	}

	public void setIsEsMantenimientoRelacionesRelacionadoUnico(Boolean isEsMantenimientoRelacionesRelacionadoUnico) {
		this.isEsMantenimientoRelacionesRelacionadoUnico = isEsMantenimientoRelacionesRelacionadoUnico;
	}

	public Boolean getIsEsMantenimientoRelaciones() {
		return isEsMantenimientoRelaciones;
	}

	public void setIsEsMantenimientoRelaciones(Boolean isEsMantenimientoRelaciones) {
		this.isEsMantenimientoRelaciones = isEsMantenimientoRelaciones;
	}

	public Boolean getIsEsMantenimientoRelacionado() {
		return isEsMantenimientoRelacionado;
	}

	public void setIsEsMantenimientoRelacionado(Boolean isEsMantenimientoRelacionado) {
		this.isEsMantenimientoRelacionado = isEsMantenimientoRelacionado;
	}

	public Boolean getesParaBusquedaForeignKey() {
		return esParaBusquedaForeignKey;
	}

	public void setesParaBusquedaForeignKey(Boolean esParaBusquedaForeignKey) {
		this.esParaBusquedaForeignKey = esParaBusquedaForeignKey;
	}

	public Boolean getIsContieneImagenes() {
		return isContieneImagenes;
	}

	public void setIsContieneImagenes(Boolean isContieneImagenes) {
		this.isContieneImagenes = isContieneImagenes;
	}		
	
	
	public void cargarCombosEmpresasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.empresasForeignKey=new ArrayList<Empresa>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			EmpresaLogic empresaLogic=new EmpresaLogic();

			//empresaLogic.getEmpresaDataAccess().setIsForForeingKeyData(true);

			if(this.parametrofactuempresaSessionBean==null) {
				this.parametrofactuempresaSessionBean=new ParametroFactuEmpresaSessionBean();
			}

			if(!this.parametrofactuempresaSessionBean.getisBusquedaDesdeForeignKeySesionEmpresa()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//empresaLogic.getEmpresaDataAccess().setIsForForeingKeyData(true);

					empresaLogic.getTodosEmpresasWithConnection(sFinalQuery,new Pagination());

					this.empresasForeignKey=empresaLogic.getEmpresas();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaEmpresa(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					empresaLogic.getEntityWithConnection(parametrofactuempresaSessionBean.getlidEmpresaActual());
					this.empresasForeignKey.add(empresaLogic.getEmpresa());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosEmpresaOrigensForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.empresaorigensForeignKey=new ArrayList<Empresa>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			EmpresaLogic empresaLogic=new EmpresaLogic();

			//empresaLogic.getEmpresaDataAccess().setIsForForeingKeyData(true);

			if(this.parametrofactuempresaSessionBean==null) {
				this.parametrofactuempresaSessionBean=new ParametroFactuEmpresaSessionBean();
			}

			if(!this.parametrofactuempresaSessionBean.getisBusquedaDesdeForeignKeySesionEmpresaOrigen()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//empresaorigenLogic.getEmpresaDataAccess().setIsForForeingKeyData(true);

					empresaLogic.getTodosEmpresasWithConnection(sFinalQuery,new Pagination());

					this.empresaorigensForeignKey=empresaLogic.getEmpresas();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaEmpresaOrigen(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					empresaLogic.getEntityWithConnection(parametrofactuempresaSessionBean.getlidEmpresaOrigenActual());
					this.empresaorigensForeignKey.add(empresaLogic.getEmpresa());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosSucursalsForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.sucursalsForeignKey=new ArrayList<Sucursal>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			SucursalLogic sucursalLogic=new SucursalLogic();

			//sucursalLogic.getSucursalDataAccess().setIsForForeingKeyData(true);

			if(this.parametrofactuempresaSessionBean==null) {
				this.parametrofactuempresaSessionBean=new ParametroFactuEmpresaSessionBean();
			}

			if(!this.parametrofactuempresaSessionBean.getisBusquedaDesdeForeignKeySesionSucursal()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//sucursalLogic.getSucursalDataAccess().setIsForForeingKeyData(true);

					sucursalLogic.getTodosSucursalsWithConnection(sFinalQuery,new Pagination());

					this.sucursalsForeignKey=sucursalLogic.getSucursals();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaSucursal(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					sucursalLogic.getEntityWithConnection(parametrofactuempresaSessionBean.getlidSucursalActual());
					this.sucursalsForeignKey.add(sucursalLogic.getSucursal());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTransaccionOrigensForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.transaccionorigensForeignKey=new ArrayList<Transaccion>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			TransaccionLogic transaccionLogic=new TransaccionLogic();

			//transaccionLogic.getTransaccionDataAccess().setIsForForeingKeyData(true);

			if(this.parametrofactuempresaSessionBean==null) {
				this.parametrofactuempresaSessionBean=new ParametroFactuEmpresaSessionBean();
			}

			if(!this.parametrofactuempresaSessionBean.getisBusquedaDesdeForeignKeySesionTransaccionOrigen()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//transaccionorigenLogic.getTransaccionDataAccess().setIsForForeingKeyData(true);

					transaccionLogic.getTodosTransaccionsWithConnection(sFinalQuery,new Pagination());

					this.transaccionorigensForeignKey=transaccionLogic.getTransaccions();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTransaccionOrigen(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					transaccionLogic.getEntityWithConnection(parametrofactuempresaSessionBean.getlidTransaccionOrigenActual());
					this.transaccionorigensForeignKey.add(transaccionLogic.getTransaccion());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosBodegaOrigensForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.bodegaorigensForeignKey=new ArrayList<Bodega>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			BodegaLogic bodegaLogic=new BodegaLogic();

			//bodegaLogic.getBodegaDataAccess().setIsForForeingKeyData(true);

			if(this.parametrofactuempresaSessionBean==null) {
				this.parametrofactuempresaSessionBean=new ParametroFactuEmpresaSessionBean();
			}

			if(!this.parametrofactuempresaSessionBean.getisBusquedaDesdeForeignKeySesionBodegaOrigen()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//bodegaorigenLogic.getBodegaDataAccess().setIsForForeingKeyData(true);

					bodegaLogic.getTodosBodegasWithConnection(sFinalQuery,new Pagination());

					this.bodegaorigensForeignKey=bodegaLogic.getBodegas();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaBodegaOrigen(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					bodegaLogic.getEntityWithConnection(parametrofactuempresaSessionBean.getlidBodegaOrigenActual());
					this.bodegaorigensForeignKey.add(bodegaLogic.getBodega());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosClienteOrigensForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.clienteorigensForeignKey=new ArrayList<Cliente>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			ClienteLogic clienteLogic=new ClienteLogic();

			//clienteLogic.getClienteDataAccess().setIsForForeingKeyData(true);

			if(this.parametrofactuempresaSessionBean==null) {
				this.parametrofactuempresaSessionBean=new ParametroFactuEmpresaSessionBean();
			}

			if(!this.parametrofactuempresaSessionBean.getisBusquedaDesdeForeignKeySesionClienteOrigen()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//clienteorigenLogic.getClienteDataAccess().setIsForForeingKeyData(true);

					clienteLogic.getTodosClientesWithConnection(sFinalQuery,new Pagination());

					this.clienteorigensForeignKey=clienteLogic.getClientes();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaClienteOrigen(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					clienteLogic.getEntityWithConnection(parametrofactuempresaSessionBean.getlidClienteOrigenActual());
					this.clienteorigensForeignKey.add(clienteLogic.getCliente());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosEmpresaDestinosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.empresadestinosForeignKey=new ArrayList<Empresa>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			Empresa empresadestinoNulo = new Empresa();

			EmpresaLogic empresaLogic=new EmpresaLogic();

			//empresaLogic.getEmpresaDataAccess().setIsForForeingKeyData(true);

			if(this.parametrofactuempresaSessionBean==null) {
				this.parametrofactuempresaSessionBean=new ParametroFactuEmpresaSessionBean();
			}

			if(!this.parametrofactuempresaSessionBean.getisBusquedaDesdeForeignKeySesionEmpresaDestino()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//empresadestinoLogic.getEmpresaDataAccess().setIsForForeingKeyData(true);

					empresaLogic.getTodosEmpresasWithConnection(sFinalQuery,new Pagination());

					this.empresadestinosForeignKey=empresaLogic.getEmpresas();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}

				this.empresadestinosForeignKey.add(0, empresadestinoNulo);

				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaEmpresaDestino(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					empresaLogic.getEntityWithConnection(parametrofactuempresaSessionBean.getlidEmpresaDestinoActual());
					this.empresadestinosForeignKey.add(empresaLogic.getEmpresa());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosSucursalDestinosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.sucursaldestinosForeignKey=new ArrayList<Sucursal>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			SucursalLogic sucursalLogic=new SucursalLogic();

			//sucursalLogic.getSucursalDataAccess().setIsForForeingKeyData(true);

			if(this.parametrofactuempresaSessionBean==null) {
				this.parametrofactuempresaSessionBean=new ParametroFactuEmpresaSessionBean();
			}

			if(!this.parametrofactuempresaSessionBean.getisBusquedaDesdeForeignKeySesionSucursalDestino()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//sucursaldestinoLogic.getSucursalDataAccess().setIsForForeingKeyData(true);

					sucursalLogic.getTodosSucursalsWithConnection(sFinalQuery,new Pagination());

					this.sucursaldestinosForeignKey=sucursalLogic.getSucursals();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaSucursalDestino(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					sucursalLogic.getEntityWithConnection(parametrofactuempresaSessionBean.getlidSucursalDestinoActual());
					this.sucursaldestinosForeignKey.add(sucursalLogic.getSucursal());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTransaccionDestinosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.transacciondestinosForeignKey=new ArrayList<Transaccion>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			TransaccionLogic transaccionLogic=new TransaccionLogic();

			//transaccionLogic.getTransaccionDataAccess().setIsForForeingKeyData(true);

			if(this.parametrofactuempresaSessionBean==null) {
				this.parametrofactuempresaSessionBean=new ParametroFactuEmpresaSessionBean();
			}

			if(!this.parametrofactuempresaSessionBean.getisBusquedaDesdeForeignKeySesionTransaccionDestino()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//transacciondestinoLogic.getTransaccionDataAccess().setIsForForeingKeyData(true);

					transaccionLogic.getTodosTransaccionsWithConnection(sFinalQuery,new Pagination());

					this.transacciondestinosForeignKey=transaccionLogic.getTransaccions();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTransaccionDestino(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					transaccionLogic.getEntityWithConnection(parametrofactuempresaSessionBean.getlidTransaccionDestinoActual());
					this.transacciondestinosForeignKey.add(transaccionLogic.getTransaccion());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosBodegaDestinosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.bodegadestinosForeignKey=new ArrayList<Bodega>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			BodegaLogic bodegaLogic=new BodegaLogic();

			//bodegaLogic.getBodegaDataAccess().setIsForForeingKeyData(true);

			if(this.parametrofactuempresaSessionBean==null) {
				this.parametrofactuempresaSessionBean=new ParametroFactuEmpresaSessionBean();
			}

			if(!this.parametrofactuempresaSessionBean.getisBusquedaDesdeForeignKeySesionBodegaDestino()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//bodegadestinoLogic.getBodegaDataAccess().setIsForForeingKeyData(true);

					bodegaLogic.getTodosBodegasWithConnection(sFinalQuery,new Pagination());

					this.bodegadestinosForeignKey=bodegaLogic.getBodegas();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaBodegaDestino(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					bodegaLogic.getEntityWithConnection(parametrofactuempresaSessionBean.getlidBodegaDestinoActual());
					this.bodegadestinosForeignKey.add(bodegaLogic.getBodega());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosClienteDestinosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.clientedestinosForeignKey=new ArrayList<Cliente>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			ClienteLogic clienteLogic=new ClienteLogic();

			//clienteLogic.getClienteDataAccess().setIsForForeingKeyData(true);

			if(this.parametrofactuempresaSessionBean==null) {
				this.parametrofactuempresaSessionBean=new ParametroFactuEmpresaSessionBean();
			}

			if(!this.parametrofactuempresaSessionBean.getisBusquedaDesdeForeignKeySesionClienteDestino()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//clientedestinoLogic.getClienteDataAccess().setIsForForeingKeyData(true);

					clienteLogic.getTodosClientesWithConnection(sFinalQuery,new Pagination());

					this.clientedestinosForeignKey=clienteLogic.getClientes();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaClienteDestino(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					clienteLogic.getEntityWithConnection(parametrofactuempresaSessionBean.getlidClienteDestinoActual());
					this.clientedestinosForeignKey.add(clienteLogic.getCliente());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosEmpresaMultiDestinosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.empresamultidestinosForeignKey=new ArrayList<Empresa>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			EmpresaLogic empresaLogic=new EmpresaLogic();

			//empresaLogic.getEmpresaDataAccess().setIsForForeingKeyData(true);

			if(this.parametrofactuempresaSessionBean==null) {
				this.parametrofactuempresaSessionBean=new ParametroFactuEmpresaSessionBean();
			}

			if(!this.parametrofactuempresaSessionBean.getisBusquedaDesdeForeignKeySesionEmpresaMultiDestino()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//empresamultidestinoLogic.getEmpresaDataAccess().setIsForForeingKeyData(true);

					empresaLogic.getTodosEmpresasWithConnection(sFinalQuery,new Pagination());

					this.empresamultidestinosForeignKey=empresaLogic.getEmpresas();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaEmpresaMultiDestino(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					empresaLogic.getEntityWithConnection(parametrofactuempresaSessionBean.getlidEmpresaMultiDestinoActual());
					this.empresamultidestinosForeignKey.add(empresaLogic.getEmpresa());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosSucursalMultiDestinosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.sucursalmultidestinosForeignKey=new ArrayList<Sucursal>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			SucursalLogic sucursalLogic=new SucursalLogic();

			//sucursalLogic.getSucursalDataAccess().setIsForForeingKeyData(true);

			if(this.parametrofactuempresaSessionBean==null) {
				this.parametrofactuempresaSessionBean=new ParametroFactuEmpresaSessionBean();
			}

			if(!this.parametrofactuempresaSessionBean.getisBusquedaDesdeForeignKeySesionSucursalMultiDestino()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//sucursalmultidestinoLogic.getSucursalDataAccess().setIsForForeingKeyData(true);

					sucursalLogic.getTodosSucursalsWithConnection(sFinalQuery,new Pagination());

					this.sucursalmultidestinosForeignKey=sucursalLogic.getSucursals();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaSucursalMultiDestino(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					sucursalLogic.getEntityWithConnection(parametrofactuempresaSessionBean.getlidSucursalMultiDestinoActual());
					this.sucursalmultidestinosForeignKey.add(sucursalLogic.getSucursal());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTransaccionMultiDestinosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.transaccionmultidestinosForeignKey=new ArrayList<Transaccion>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			TransaccionLogic transaccionLogic=new TransaccionLogic();

			//transaccionLogic.getTransaccionDataAccess().setIsForForeingKeyData(true);

			if(this.parametrofactuempresaSessionBean==null) {
				this.parametrofactuempresaSessionBean=new ParametroFactuEmpresaSessionBean();
			}

			if(!this.parametrofactuempresaSessionBean.getisBusquedaDesdeForeignKeySesionTransaccionMultiDestino()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//transaccionmultidestinoLogic.getTransaccionDataAccess().setIsForForeingKeyData(true);

					transaccionLogic.getTodosTransaccionsWithConnection(sFinalQuery,new Pagination());

					this.transaccionmultidestinosForeignKey=transaccionLogic.getTransaccions();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTransaccionMultiDestino(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					transaccionLogic.getEntityWithConnection(parametrofactuempresaSessionBean.getlidTransaccionMultiDestinoActual());
					this.transaccionmultidestinosForeignKey.add(transaccionLogic.getTransaccion());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosBodegaMultiOrigensForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.bodegamultiorigensForeignKey=new ArrayList<Bodega>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			BodegaLogic bodegaLogic=new BodegaLogic();

			//bodegaLogic.getBodegaDataAccess().setIsForForeingKeyData(true);

			if(this.parametrofactuempresaSessionBean==null) {
				this.parametrofactuempresaSessionBean=new ParametroFactuEmpresaSessionBean();
			}

			if(!this.parametrofactuempresaSessionBean.getisBusquedaDesdeForeignKeySesionBodegaMultiOrigen()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//bodegamultiorigenLogic.getBodegaDataAccess().setIsForForeingKeyData(true);

					bodegaLogic.getTodosBodegasWithConnection(sFinalQuery,new Pagination());

					this.bodegamultiorigensForeignKey=bodegaLogic.getBodegas();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaBodegaMultiOrigen(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					bodegaLogic.getEntityWithConnection(parametrofactuempresaSessionBean.getlidBodegaMultiOrigenActual());
					this.bodegamultiorigensForeignKey.add(bodegaLogic.getBodega());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosBodegaMultiDestinosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.bodegamultidestinosForeignKey=new ArrayList<Bodega>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			BodegaLogic bodegaLogic=new BodegaLogic();

			//bodegaLogic.getBodegaDataAccess().setIsForForeingKeyData(true);

			if(this.parametrofactuempresaSessionBean==null) {
				this.parametrofactuempresaSessionBean=new ParametroFactuEmpresaSessionBean();
			}

			if(!this.parametrofactuempresaSessionBean.getisBusquedaDesdeForeignKeySesionBodegaMultiDestino()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//bodegamultidestinoLogic.getBodegaDataAccess().setIsForForeingKeyData(true);

					bodegaLogic.getTodosBodegasWithConnection(sFinalQuery,new Pagination());

					this.bodegamultidestinosForeignKey=bodegaLogic.getBodegas();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaBodegaMultiDestino(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					bodegaLogic.getEntityWithConnection(parametrofactuempresaSessionBean.getlidBodegaMultiDestinoActual());
					this.bodegamultidestinosForeignKey.add(bodegaLogic.getBodega());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	
	
	public void setActualEmpresaForeignKey(Long idEmpresaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Empresa  empresaTemp=null;

			for(Empresa empresaAux:empresasForeignKey) {
				if(empresaAux.getId()!=null && empresaAux.getId().equals(idEmpresaSeleccionado)) {
					empresaTemp=empresaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(empresaTemp!=null) {

					if(this.parametrofactuempresa!=null) {
						this.parametrofactuempresa.setEmpresa(empresaTemp);
					}

					if(this.jInternalFrameDetalleFormParametroFactuEmpresa!=null) {
						this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_empresaParametroFactuEmpresa.setSelectedItem(empresaTemp);
					}
				} else {
					//jComboBoxid_empresaParametroFactuEmpresa.setSelectedItem(empresaTemp);
					if(this.jInternalFrameDetalleFormParametroFactuEmpresa!=null) {
						if(this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_empresaParametroFactuEmpresa.getItemCount()>0) {
							this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_empresaParametroFactuEmpresa.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualEmpresaForeignKeyDescripcion(Long idEmpresaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Empresa  empresaTemp=null;

			for(Empresa empresaAux:empresasForeignKey) {
				if(empresaAux.getId()!=null && empresaAux.getId().equals(idEmpresaSeleccionado)) {
					empresaTemp=empresaAux;
					break;
				}
			}


			sDescripcion=EmpresaConstantesFunciones.getEmpresaDescripcion(empresaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualEmpresaForeignKeyGenerico(Long idEmpresaSeleccionado,JComboBox jComboBoxid_empresaParametroFactuEmpresaGenerico)throws Exception
	{
		try
		{
			Empresa  empresaTemp=null;

			for(Empresa empresaAux:empresasForeignKey) {
				if(empresaAux.getId()!=null && empresaAux.getId().equals(idEmpresaSeleccionado)) {
					empresaTemp=empresaAux;
					break;
				}
			}

			if(empresaTemp!=null) {
				jComboBoxid_empresaParametroFactuEmpresaGenerico.setSelectedItem(empresaTemp);
			} else {
				if(jComboBoxid_empresaParametroFactuEmpresaGenerico!=null && jComboBoxid_empresaParametroFactuEmpresaGenerico.getItemCount()>0) {
					jComboBoxid_empresaParametroFactuEmpresaGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualEmpresaOrigenForeignKey(Long idEmpresaOrigenSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Empresa  empresaorigenTemp=null;

			for(Empresa empresaorigenAux:empresaorigensForeignKey) {
				if(empresaorigenAux.getId()!=null && empresaorigenAux.getId().equals(idEmpresaOrigenSeleccionado)) {
					empresaorigenTemp=empresaorigenAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(empresaorigenTemp!=null) {

					if(this.parametrofactuempresa!=null) {
						this.parametrofactuempresa.setEmpresaOrigen(empresaorigenTemp);
					}

					if(this.jInternalFrameDetalleFormParametroFactuEmpresa!=null) {
						this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_empresa_origenParametroFactuEmpresa.setSelectedItem(empresaorigenTemp);
					}
				} else {
					//jComboBoxid_empresa_origenParametroFactuEmpresa.setSelectedItem(empresaorigenTemp);
					if(this.jInternalFrameDetalleFormParametroFactuEmpresa!=null) {
						if(this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_empresa_origenParametroFactuEmpresa.getItemCount()>0) {
							this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_empresa_origenParametroFactuEmpresa.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdEmpresaOrigen") || sFormularioTipoBusqueda.equals("Todos")){
					if(empresaorigenTemp!=null && jComboBoxid_empresa_origenFK_IdEmpresaOrigenParametroFactuEmpresa!=null) {
						jComboBoxid_empresa_origenFK_IdEmpresaOrigenParametroFactuEmpresa.setSelectedItem(empresaorigenTemp);
					} else {
						if(jComboBoxid_empresa_origenFK_IdEmpresaOrigenParametroFactuEmpresa!=null) {
							//jComboBoxid_empresa_origenFK_IdEmpresaOrigenParametroFactuEmpresa.setSelectedItem(empresaorigenTemp);
							if(jComboBoxid_empresa_origenFK_IdEmpresaOrigenParametroFactuEmpresa.getItemCount()>0) {
								jComboBoxid_empresa_origenFK_IdEmpresaOrigenParametroFactuEmpresa.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualEmpresaOrigenForeignKeyDescripcion(Long idEmpresaOrigenSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Empresa  empresaorigenTemp=null;

			for(Empresa empresaorigenAux:empresaorigensForeignKey) {
				if(empresaorigenAux.getId()!=null && empresaorigenAux.getId().equals(idEmpresaOrigenSeleccionado)) {
					empresaorigenTemp=empresaorigenAux;
					break;
				}
			}


			sDescripcion=EmpresaConstantesFunciones.getEmpresaDescripcion(empresaorigenTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualEmpresaOrigenForeignKeyGenerico(Long idEmpresaOrigenSeleccionado,JComboBox jComboBoxid_empresa_origenParametroFactuEmpresaGenerico)throws Exception
	{
		try
		{
			Empresa  empresaorigenTemp=null;

			for(Empresa empresaorigenAux:empresaorigensForeignKey) {
				if(empresaorigenAux.getId()!=null && empresaorigenAux.getId().equals(idEmpresaOrigenSeleccionado)) {
					empresaorigenTemp=empresaorigenAux;
					break;
				}
			}

			if(empresaorigenTemp!=null) {
				jComboBoxid_empresa_origenParametroFactuEmpresaGenerico.setSelectedItem(empresaorigenTemp);
			} else {
				if(jComboBoxid_empresa_origenParametroFactuEmpresaGenerico!=null && jComboBoxid_empresa_origenParametroFactuEmpresaGenerico.getItemCount()>0) {
					jComboBoxid_empresa_origenParametroFactuEmpresaGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualSucursalForeignKey(Long idSucursalSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Sucursal  sucursalTemp=null;

			for(Sucursal sucursalAux:sucursalsForeignKey) {
				if(sucursalAux.getId()!=null && sucursalAux.getId().equals(idSucursalSeleccionado)) {
					sucursalTemp=sucursalAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(sucursalTemp!=null) {

					if(this.parametrofactuempresa!=null) {
						this.parametrofactuempresa.setSucursal(sucursalTemp);
					}

					if(this.jInternalFrameDetalleFormParametroFactuEmpresa!=null) {
						this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_sucursalParametroFactuEmpresa.setSelectedItem(sucursalTemp);
					}
				} else {
					//jComboBoxid_sucursalParametroFactuEmpresa.setSelectedItem(sucursalTemp);
					if(this.jInternalFrameDetalleFormParametroFactuEmpresa!=null) {
						if(this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_sucursalParametroFactuEmpresa.getItemCount()>0) {
							this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_sucursalParametroFactuEmpresa.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdSucursal") || sFormularioTipoBusqueda.equals("Todos")){
					if(sucursalTemp!=null && jComboBoxid_sucursalFK_IdSucursalParametroFactuEmpresa!=null) {
						jComboBoxid_sucursalFK_IdSucursalParametroFactuEmpresa.setSelectedItem(sucursalTemp);
					} else {
						if(jComboBoxid_sucursalFK_IdSucursalParametroFactuEmpresa!=null) {
							//jComboBoxid_sucursalFK_IdSucursalParametroFactuEmpresa.setSelectedItem(sucursalTemp);
							if(jComboBoxid_sucursalFK_IdSucursalParametroFactuEmpresa.getItemCount()>0) {
								jComboBoxid_sucursalFK_IdSucursalParametroFactuEmpresa.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualSucursalForeignKeyDescripcion(Long idSucursalSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Sucursal  sucursalTemp=null;

			for(Sucursal sucursalAux:sucursalsForeignKey) {
				if(sucursalAux.getId()!=null && sucursalAux.getId().equals(idSucursalSeleccionado)) {
					sucursalTemp=sucursalAux;
					break;
				}
			}


			sDescripcion=SucursalConstantesFunciones.getSucursalDescripcion(sucursalTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualSucursalForeignKeyGenerico(Long idSucursalSeleccionado,JComboBox jComboBoxid_sucursalParametroFactuEmpresaGenerico)throws Exception
	{
		try
		{
			Sucursal  sucursalTemp=null;

			for(Sucursal sucursalAux:sucursalsForeignKey) {
				if(sucursalAux.getId()!=null && sucursalAux.getId().equals(idSucursalSeleccionado)) {
					sucursalTemp=sucursalAux;
					break;
				}
			}

			if(sucursalTemp!=null) {
				jComboBoxid_sucursalParametroFactuEmpresaGenerico.setSelectedItem(sucursalTemp);
			} else {
				if(jComboBoxid_sucursalParametroFactuEmpresaGenerico!=null && jComboBoxid_sucursalParametroFactuEmpresaGenerico.getItemCount()>0) {
					jComboBoxid_sucursalParametroFactuEmpresaGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTransaccionOrigenForeignKey(Long idTransaccionOrigenSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Transaccion  transaccionorigenTemp=null;

			for(Transaccion transaccionorigenAux:transaccionorigensForeignKey) {
				if(transaccionorigenAux.getId()!=null && transaccionorigenAux.getId().equals(idTransaccionOrigenSeleccionado)) {
					transaccionorigenTemp=transaccionorigenAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(transaccionorigenTemp!=null) {

					if(this.parametrofactuempresa!=null) {
						this.parametrofactuempresa.setTransaccionOrigen(transaccionorigenTemp);
					}

					if(this.jInternalFrameDetalleFormParametroFactuEmpresa!=null) {
						this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_transaccion_origenParametroFactuEmpresa.setSelectedItem(transaccionorigenTemp);
					}
				} else {
					//jComboBoxid_transaccion_origenParametroFactuEmpresa.setSelectedItem(transaccionorigenTemp);
					if(this.jInternalFrameDetalleFormParametroFactuEmpresa!=null) {
						if(this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_transaccion_origenParametroFactuEmpresa.getItemCount()>0) {
							this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_transaccion_origenParametroFactuEmpresa.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdTransaccionOrigen") || sFormularioTipoBusqueda.equals("Todos")){
					if(transaccionorigenTemp!=null && jComboBoxid_transaccion_origenFK_IdTransaccionOrigenParametroFactuEmpresa!=null) {
						jComboBoxid_transaccion_origenFK_IdTransaccionOrigenParametroFactuEmpresa.setSelectedItem(transaccionorigenTemp);
					} else {
						if(jComboBoxid_transaccion_origenFK_IdTransaccionOrigenParametroFactuEmpresa!=null) {
							//jComboBoxid_transaccion_origenFK_IdTransaccionOrigenParametroFactuEmpresa.setSelectedItem(transaccionorigenTemp);
							if(jComboBoxid_transaccion_origenFK_IdTransaccionOrigenParametroFactuEmpresa.getItemCount()>0) {
								jComboBoxid_transaccion_origenFK_IdTransaccionOrigenParametroFactuEmpresa.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTransaccionOrigenForeignKeyDescripcion(Long idTransaccionOrigenSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Transaccion  transaccionorigenTemp=null;

			for(Transaccion transaccionorigenAux:transaccionorigensForeignKey) {
				if(transaccionorigenAux.getId()!=null && transaccionorigenAux.getId().equals(idTransaccionOrigenSeleccionado)) {
					transaccionorigenTemp=transaccionorigenAux;
					break;
				}
			}


			sDescripcion=TransaccionConstantesFunciones.getTransaccionDescripcion(transaccionorigenTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTransaccionOrigenForeignKeyGenerico(Long idTransaccionOrigenSeleccionado,JComboBox jComboBoxid_transaccion_origenParametroFactuEmpresaGenerico)throws Exception
	{
		try
		{
			Transaccion  transaccionorigenTemp=null;

			for(Transaccion transaccionorigenAux:transaccionorigensForeignKey) {
				if(transaccionorigenAux.getId()!=null && transaccionorigenAux.getId().equals(idTransaccionOrigenSeleccionado)) {
					transaccionorigenTemp=transaccionorigenAux;
					break;
				}
			}

			if(transaccionorigenTemp!=null) {
				jComboBoxid_transaccion_origenParametroFactuEmpresaGenerico.setSelectedItem(transaccionorigenTemp);
			} else {
				if(jComboBoxid_transaccion_origenParametroFactuEmpresaGenerico!=null && jComboBoxid_transaccion_origenParametroFactuEmpresaGenerico.getItemCount()>0) {
					jComboBoxid_transaccion_origenParametroFactuEmpresaGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualBodegaOrigenForeignKey(Long idBodegaOrigenSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Bodega  bodegaorigenTemp=null;

			for(Bodega bodegaorigenAux:bodegaorigensForeignKey) {
				if(bodegaorigenAux.getId()!=null && bodegaorigenAux.getId().equals(idBodegaOrigenSeleccionado)) {
					bodegaorigenTemp=bodegaorigenAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(bodegaorigenTemp!=null) {

					if(this.parametrofactuempresa!=null) {
						this.parametrofactuempresa.setBodegaOrigen(bodegaorigenTemp);
					}

					if(this.jInternalFrameDetalleFormParametroFactuEmpresa!=null) {
						this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_bodega_origenParametroFactuEmpresa.setSelectedItem(bodegaorigenTemp);
					}
				} else {
					//jComboBoxid_bodega_origenParametroFactuEmpresa.setSelectedItem(bodegaorigenTemp);
					if(this.jInternalFrameDetalleFormParametroFactuEmpresa!=null) {
						if(this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_bodega_origenParametroFactuEmpresa.getItemCount()>0) {
							this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_bodega_origenParametroFactuEmpresa.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdBodegaOrigen") || sFormularioTipoBusqueda.equals("Todos")){
					if(bodegaorigenTemp!=null && jComboBoxid_bodega_origenFK_IdBodegaOrigenParametroFactuEmpresa!=null) {
						jComboBoxid_bodega_origenFK_IdBodegaOrigenParametroFactuEmpresa.setSelectedItem(bodegaorigenTemp);
					} else {
						if(jComboBoxid_bodega_origenFK_IdBodegaOrigenParametroFactuEmpresa!=null) {
							//jComboBoxid_bodega_origenFK_IdBodegaOrigenParametroFactuEmpresa.setSelectedItem(bodegaorigenTemp);
							if(jComboBoxid_bodega_origenFK_IdBodegaOrigenParametroFactuEmpresa.getItemCount()>0) {
								jComboBoxid_bodega_origenFK_IdBodegaOrigenParametroFactuEmpresa.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualBodegaOrigenForeignKeyDescripcion(Long idBodegaOrigenSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Bodega  bodegaorigenTemp=null;

			for(Bodega bodegaorigenAux:bodegaorigensForeignKey) {
				if(bodegaorigenAux.getId()!=null && bodegaorigenAux.getId().equals(idBodegaOrigenSeleccionado)) {
					bodegaorigenTemp=bodegaorigenAux;
					break;
				}
			}


			sDescripcion=BodegaConstantesFunciones.getBodegaDescripcion(bodegaorigenTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualBodegaOrigenForeignKeyGenerico(Long idBodegaOrigenSeleccionado,JComboBox jComboBoxid_bodega_origenParametroFactuEmpresaGenerico)throws Exception
	{
		try
		{
			Bodega  bodegaorigenTemp=null;

			for(Bodega bodegaorigenAux:bodegaorigensForeignKey) {
				if(bodegaorigenAux.getId()!=null && bodegaorigenAux.getId().equals(idBodegaOrigenSeleccionado)) {
					bodegaorigenTemp=bodegaorigenAux;
					break;
				}
			}

			if(bodegaorigenTemp!=null) {
				jComboBoxid_bodega_origenParametroFactuEmpresaGenerico.setSelectedItem(bodegaorigenTemp);
			} else {
				if(jComboBoxid_bodega_origenParametroFactuEmpresaGenerico!=null && jComboBoxid_bodega_origenParametroFactuEmpresaGenerico.getItemCount()>0) {
					jComboBoxid_bodega_origenParametroFactuEmpresaGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualClienteOrigenForeignKey(Long idClienteOrigenSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Cliente  clienteorigenTemp=null;

			for(Cliente clienteorigenAux:clienteorigensForeignKey) {
				if(clienteorigenAux.getId()!=null && clienteorigenAux.getId().equals(idClienteOrigenSeleccionado)) {
					clienteorigenTemp=clienteorigenAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(clienteorigenTemp!=null) {

					if(this.parametrofactuempresa!=null) {
						this.parametrofactuempresa.setClienteOrigen(clienteorigenTemp);
					}

					if(this.jInternalFrameDetalleFormParametroFactuEmpresa!=null) {
						this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_cliente_origenParametroFactuEmpresa.setSelectedItem(clienteorigenTemp);
					}
				} else {
					//jComboBoxid_cliente_origenParametroFactuEmpresa.setSelectedItem(clienteorigenTemp);
					if(this.jInternalFrameDetalleFormParametroFactuEmpresa!=null) {
						if(this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_cliente_origenParametroFactuEmpresa.getItemCount()>0) {
							this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_cliente_origenParametroFactuEmpresa.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdClienteOrigen") || sFormularioTipoBusqueda.equals("Todos")){
					if(clienteorigenTemp!=null && jComboBoxid_cliente_origenFK_IdClienteOrigenParametroFactuEmpresa!=null) {
						jComboBoxid_cliente_origenFK_IdClienteOrigenParametroFactuEmpresa.setSelectedItem(clienteorigenTemp);
					} else {
						if(jComboBoxid_cliente_origenFK_IdClienteOrigenParametroFactuEmpresa!=null) {
							//jComboBoxid_cliente_origenFK_IdClienteOrigenParametroFactuEmpresa.setSelectedItem(clienteorigenTemp);
							if(jComboBoxid_cliente_origenFK_IdClienteOrigenParametroFactuEmpresa.getItemCount()>0) {
								jComboBoxid_cliente_origenFK_IdClienteOrigenParametroFactuEmpresa.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualClienteOrigenForeignKeyDescripcion(Long idClienteOrigenSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Cliente  clienteorigenTemp=null;

			for(Cliente clienteorigenAux:clienteorigensForeignKey) {
				if(clienteorigenAux.getId()!=null && clienteorigenAux.getId().equals(idClienteOrigenSeleccionado)) {
					clienteorigenTemp=clienteorigenAux;
					break;
				}
			}


			sDescripcion=ClienteConstantesFunciones.getClienteDescripcion(clienteorigenTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualClienteOrigenForeignKeyGenerico(Long idClienteOrigenSeleccionado,JComboBox jComboBoxid_cliente_origenParametroFactuEmpresaGenerico)throws Exception
	{
		try
		{
			Cliente  clienteorigenTemp=null;

			for(Cliente clienteorigenAux:clienteorigensForeignKey) {
				if(clienteorigenAux.getId()!=null && clienteorigenAux.getId().equals(idClienteOrigenSeleccionado)) {
					clienteorigenTemp=clienteorigenAux;
					break;
				}
			}

			if(clienteorigenTemp!=null) {
				jComboBoxid_cliente_origenParametroFactuEmpresaGenerico.setSelectedItem(clienteorigenTemp);
			} else {
				if(jComboBoxid_cliente_origenParametroFactuEmpresaGenerico!=null && jComboBoxid_cliente_origenParametroFactuEmpresaGenerico.getItemCount()>0) {
					jComboBoxid_cliente_origenParametroFactuEmpresaGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualEmpresaDestinoForeignKey(Long idEmpresaDestinoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Empresa  empresadestinoTemp=null;

			for(Empresa empresadestinoAux:empresadestinosForeignKey) {
				if(empresadestinoAux.getId()!=null && empresadestinoAux.getId().equals(idEmpresaDestinoSeleccionado)) {
					empresadestinoTemp=empresadestinoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(empresadestinoTemp!=null) {

					if(this.parametrofactuempresa!=null) {
						this.parametrofactuempresa.setEmpresaDestino(empresadestinoTemp);
					}

					if(this.jInternalFrameDetalleFormParametroFactuEmpresa!=null) {
						this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_empresa_destinoParametroFactuEmpresa.setSelectedItem(empresadestinoTemp);
					}
				} else {
					//jComboBoxid_empresa_destinoParametroFactuEmpresa.setSelectedItem(empresadestinoTemp);
					if(this.jInternalFrameDetalleFormParametroFactuEmpresa!=null) {
						if(this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_empresa_destinoParametroFactuEmpresa.getItemCount()>0) {
							this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_empresa_destinoParametroFactuEmpresa.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdEmpresaDestino") || sFormularioTipoBusqueda.equals("Todos")){
					if(empresadestinoTemp!=null && jComboBoxid_empresa_destinoFK_IdEmpresaDestinoParametroFactuEmpresa!=null) {
						jComboBoxid_empresa_destinoFK_IdEmpresaDestinoParametroFactuEmpresa.setSelectedItem(empresadestinoTemp);
					} else {
						if(jComboBoxid_empresa_destinoFK_IdEmpresaDestinoParametroFactuEmpresa!=null) {
							//jComboBoxid_empresa_destinoFK_IdEmpresaDestinoParametroFactuEmpresa.setSelectedItem(empresadestinoTemp);
							if(jComboBoxid_empresa_destinoFK_IdEmpresaDestinoParametroFactuEmpresa.getItemCount()>0) {
								jComboBoxid_empresa_destinoFK_IdEmpresaDestinoParametroFactuEmpresa.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualEmpresaDestinoForeignKeyDescripcion(Long idEmpresaDestinoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Empresa  empresadestinoTemp=null;

			for(Empresa empresadestinoAux:empresadestinosForeignKey) {
				if(empresadestinoAux.getId()!=null && empresadestinoAux.getId().equals(idEmpresaDestinoSeleccionado)) {
					empresadestinoTemp=empresadestinoAux;
					break;
				}
			}


			sDescripcion=EmpresaConstantesFunciones.getEmpresaDescripcion(empresadestinoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualEmpresaDestinoForeignKeyGenerico(Long idEmpresaDestinoSeleccionado,JComboBox jComboBoxid_empresa_destinoParametroFactuEmpresaGenerico)throws Exception
	{
		try
		{
			Empresa  empresadestinoTemp=null;

			for(Empresa empresadestinoAux:empresadestinosForeignKey) {
				if(empresadestinoAux.getId()!=null && empresadestinoAux.getId().equals(idEmpresaDestinoSeleccionado)) {
					empresadestinoTemp=empresadestinoAux;
					break;
				}
			}

			if(empresadestinoTemp!=null) {
				jComboBoxid_empresa_destinoParametroFactuEmpresaGenerico.setSelectedItem(empresadestinoTemp);
			} else {
				if(jComboBoxid_empresa_destinoParametroFactuEmpresaGenerico!=null && jComboBoxid_empresa_destinoParametroFactuEmpresaGenerico.getItemCount()>0) {
					jComboBoxid_empresa_destinoParametroFactuEmpresaGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualSucursalDestinoForeignKey(Long idSucursalDestinoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Sucursal  sucursaldestinoTemp=null;

			for(Sucursal sucursaldestinoAux:sucursaldestinosForeignKey) {
				if(sucursaldestinoAux.getId()!=null && sucursaldestinoAux.getId().equals(idSucursalDestinoSeleccionado)) {
					sucursaldestinoTemp=sucursaldestinoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(sucursaldestinoTemp!=null) {

					if(this.parametrofactuempresa!=null) {
						this.parametrofactuempresa.setSucursalDestino(sucursaldestinoTemp);
					}

					if(this.jInternalFrameDetalleFormParametroFactuEmpresa!=null) {
						this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_sucursal_destinoParametroFactuEmpresa.setSelectedItem(sucursaldestinoTemp);
					}
				} else {
					//jComboBoxid_sucursal_destinoParametroFactuEmpresa.setSelectedItem(sucursaldestinoTemp);
					if(this.jInternalFrameDetalleFormParametroFactuEmpresa!=null) {
						if(this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_sucursal_destinoParametroFactuEmpresa.getItemCount()>0) {
							this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_sucursal_destinoParametroFactuEmpresa.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdSucursalDestino") || sFormularioTipoBusqueda.equals("Todos")){
					if(sucursaldestinoTemp!=null && jComboBoxid_sucursal_destinoFK_IdSucursalDestinoParametroFactuEmpresa!=null) {
						jComboBoxid_sucursal_destinoFK_IdSucursalDestinoParametroFactuEmpresa.setSelectedItem(sucursaldestinoTemp);
					} else {
						if(jComboBoxid_sucursal_destinoFK_IdSucursalDestinoParametroFactuEmpresa!=null) {
							//jComboBoxid_sucursal_destinoFK_IdSucursalDestinoParametroFactuEmpresa.setSelectedItem(sucursaldestinoTemp);
							if(jComboBoxid_sucursal_destinoFK_IdSucursalDestinoParametroFactuEmpresa.getItemCount()>0) {
								jComboBoxid_sucursal_destinoFK_IdSucursalDestinoParametroFactuEmpresa.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualSucursalDestinoForeignKeyDescripcion(Long idSucursalDestinoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Sucursal  sucursaldestinoTemp=null;

			for(Sucursal sucursaldestinoAux:sucursaldestinosForeignKey) {
				if(sucursaldestinoAux.getId()!=null && sucursaldestinoAux.getId().equals(idSucursalDestinoSeleccionado)) {
					sucursaldestinoTemp=sucursaldestinoAux;
					break;
				}
			}


			sDescripcion=SucursalConstantesFunciones.getSucursalDescripcion(sucursaldestinoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualSucursalDestinoForeignKeyGenerico(Long idSucursalDestinoSeleccionado,JComboBox jComboBoxid_sucursal_destinoParametroFactuEmpresaGenerico)throws Exception
	{
		try
		{
			Sucursal  sucursaldestinoTemp=null;

			for(Sucursal sucursaldestinoAux:sucursaldestinosForeignKey) {
				if(sucursaldestinoAux.getId()!=null && sucursaldestinoAux.getId().equals(idSucursalDestinoSeleccionado)) {
					sucursaldestinoTemp=sucursaldestinoAux;
					break;
				}
			}

			if(sucursaldestinoTemp!=null) {
				jComboBoxid_sucursal_destinoParametroFactuEmpresaGenerico.setSelectedItem(sucursaldestinoTemp);
			} else {
				if(jComboBoxid_sucursal_destinoParametroFactuEmpresaGenerico!=null && jComboBoxid_sucursal_destinoParametroFactuEmpresaGenerico.getItemCount()>0) {
					jComboBoxid_sucursal_destinoParametroFactuEmpresaGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTransaccionDestinoForeignKey(Long idTransaccionDestinoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Transaccion  transacciondestinoTemp=null;

			for(Transaccion transacciondestinoAux:transacciondestinosForeignKey) {
				if(transacciondestinoAux.getId()!=null && transacciondestinoAux.getId().equals(idTransaccionDestinoSeleccionado)) {
					transacciondestinoTemp=transacciondestinoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(transacciondestinoTemp!=null) {

					if(this.parametrofactuempresa!=null) {
						this.parametrofactuempresa.setTransaccionDestino(transacciondestinoTemp);
					}

					if(this.jInternalFrameDetalleFormParametroFactuEmpresa!=null) {
						this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_transaccion_destinoParametroFactuEmpresa.setSelectedItem(transacciondestinoTemp);
					}
				} else {
					//jComboBoxid_transaccion_destinoParametroFactuEmpresa.setSelectedItem(transacciondestinoTemp);
					if(this.jInternalFrameDetalleFormParametroFactuEmpresa!=null) {
						if(this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_transaccion_destinoParametroFactuEmpresa.getItemCount()>0) {
							this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_transaccion_destinoParametroFactuEmpresa.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdTransaccionDestino") || sFormularioTipoBusqueda.equals("Todos")){
					if(transacciondestinoTemp!=null && jComboBoxid_transaccion_destinoFK_IdTransaccionDestinoParametroFactuEmpresa!=null) {
						jComboBoxid_transaccion_destinoFK_IdTransaccionDestinoParametroFactuEmpresa.setSelectedItem(transacciondestinoTemp);
					} else {
						if(jComboBoxid_transaccion_destinoFK_IdTransaccionDestinoParametroFactuEmpresa!=null) {
							//jComboBoxid_transaccion_destinoFK_IdTransaccionDestinoParametroFactuEmpresa.setSelectedItem(transacciondestinoTemp);
							if(jComboBoxid_transaccion_destinoFK_IdTransaccionDestinoParametroFactuEmpresa.getItemCount()>0) {
								jComboBoxid_transaccion_destinoFK_IdTransaccionDestinoParametroFactuEmpresa.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTransaccionDestinoForeignKeyDescripcion(Long idTransaccionDestinoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Transaccion  transacciondestinoTemp=null;

			for(Transaccion transacciondestinoAux:transacciondestinosForeignKey) {
				if(transacciondestinoAux.getId()!=null && transacciondestinoAux.getId().equals(idTransaccionDestinoSeleccionado)) {
					transacciondestinoTemp=transacciondestinoAux;
					break;
				}
			}


			sDescripcion=TransaccionConstantesFunciones.getTransaccionDescripcion(transacciondestinoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTransaccionDestinoForeignKeyGenerico(Long idTransaccionDestinoSeleccionado,JComboBox jComboBoxid_transaccion_destinoParametroFactuEmpresaGenerico)throws Exception
	{
		try
		{
			Transaccion  transacciondestinoTemp=null;

			for(Transaccion transacciondestinoAux:transacciondestinosForeignKey) {
				if(transacciondestinoAux.getId()!=null && transacciondestinoAux.getId().equals(idTransaccionDestinoSeleccionado)) {
					transacciondestinoTemp=transacciondestinoAux;
					break;
				}
			}

			if(transacciondestinoTemp!=null) {
				jComboBoxid_transaccion_destinoParametroFactuEmpresaGenerico.setSelectedItem(transacciondestinoTemp);
			} else {
				if(jComboBoxid_transaccion_destinoParametroFactuEmpresaGenerico!=null && jComboBoxid_transaccion_destinoParametroFactuEmpresaGenerico.getItemCount()>0) {
					jComboBoxid_transaccion_destinoParametroFactuEmpresaGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualBodegaDestinoForeignKey(Long idBodegaDestinoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Bodega  bodegadestinoTemp=null;

			for(Bodega bodegadestinoAux:bodegadestinosForeignKey) {
				if(bodegadestinoAux.getId()!=null && bodegadestinoAux.getId().equals(idBodegaDestinoSeleccionado)) {
					bodegadestinoTemp=bodegadestinoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(bodegadestinoTemp!=null) {

					if(this.parametrofactuempresa!=null) {
						this.parametrofactuempresa.setBodegaDestino(bodegadestinoTemp);
					}

					if(this.jInternalFrameDetalleFormParametroFactuEmpresa!=null) {
						this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_bodega_destinoParametroFactuEmpresa.setSelectedItem(bodegadestinoTemp);
					}
				} else {
					//jComboBoxid_bodega_destinoParametroFactuEmpresa.setSelectedItem(bodegadestinoTemp);
					if(this.jInternalFrameDetalleFormParametroFactuEmpresa!=null) {
						if(this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_bodega_destinoParametroFactuEmpresa.getItemCount()>0) {
							this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_bodega_destinoParametroFactuEmpresa.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdBodegaDestino") || sFormularioTipoBusqueda.equals("Todos")){
					if(bodegadestinoTemp!=null && jComboBoxid_bodega_destinoFK_IdBodegaDestinoParametroFactuEmpresa!=null) {
						jComboBoxid_bodega_destinoFK_IdBodegaDestinoParametroFactuEmpresa.setSelectedItem(bodegadestinoTemp);
					} else {
						if(jComboBoxid_bodega_destinoFK_IdBodegaDestinoParametroFactuEmpresa!=null) {
							//jComboBoxid_bodega_destinoFK_IdBodegaDestinoParametroFactuEmpresa.setSelectedItem(bodegadestinoTemp);
							if(jComboBoxid_bodega_destinoFK_IdBodegaDestinoParametroFactuEmpresa.getItemCount()>0) {
								jComboBoxid_bodega_destinoFK_IdBodegaDestinoParametroFactuEmpresa.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualBodegaDestinoForeignKeyDescripcion(Long idBodegaDestinoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Bodega  bodegadestinoTemp=null;

			for(Bodega bodegadestinoAux:bodegadestinosForeignKey) {
				if(bodegadestinoAux.getId()!=null && bodegadestinoAux.getId().equals(idBodegaDestinoSeleccionado)) {
					bodegadestinoTemp=bodegadestinoAux;
					break;
				}
			}


			sDescripcion=BodegaConstantesFunciones.getBodegaDescripcion(bodegadestinoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualBodegaDestinoForeignKeyGenerico(Long idBodegaDestinoSeleccionado,JComboBox jComboBoxid_bodega_destinoParametroFactuEmpresaGenerico)throws Exception
	{
		try
		{
			Bodega  bodegadestinoTemp=null;

			for(Bodega bodegadestinoAux:bodegadestinosForeignKey) {
				if(bodegadestinoAux.getId()!=null && bodegadestinoAux.getId().equals(idBodegaDestinoSeleccionado)) {
					bodegadestinoTemp=bodegadestinoAux;
					break;
				}
			}

			if(bodegadestinoTemp!=null) {
				jComboBoxid_bodega_destinoParametroFactuEmpresaGenerico.setSelectedItem(bodegadestinoTemp);
			} else {
				if(jComboBoxid_bodega_destinoParametroFactuEmpresaGenerico!=null && jComboBoxid_bodega_destinoParametroFactuEmpresaGenerico.getItemCount()>0) {
					jComboBoxid_bodega_destinoParametroFactuEmpresaGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualClienteDestinoForeignKey(Long idClienteDestinoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Cliente  clientedestinoTemp=null;

			for(Cliente clientedestinoAux:clientedestinosForeignKey) {
				if(clientedestinoAux.getId()!=null && clientedestinoAux.getId().equals(idClienteDestinoSeleccionado)) {
					clientedestinoTemp=clientedestinoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(clientedestinoTemp!=null) {

					if(this.parametrofactuempresa!=null) {
						this.parametrofactuempresa.setClienteDestino(clientedestinoTemp);
					}

					if(this.jInternalFrameDetalleFormParametroFactuEmpresa!=null) {
						this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_cliente_destinoParametroFactuEmpresa.setSelectedItem(clientedestinoTemp);
					}
				} else {
					//jComboBoxid_cliente_destinoParametroFactuEmpresa.setSelectedItem(clientedestinoTemp);
					if(this.jInternalFrameDetalleFormParametroFactuEmpresa!=null) {
						if(this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_cliente_destinoParametroFactuEmpresa.getItemCount()>0) {
							this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_cliente_destinoParametroFactuEmpresa.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdClienteDestino") || sFormularioTipoBusqueda.equals("Todos")){
					if(clientedestinoTemp!=null && jComboBoxid_cliente_destinoFK_IdClienteDestinoParametroFactuEmpresa!=null) {
						jComboBoxid_cliente_destinoFK_IdClienteDestinoParametroFactuEmpresa.setSelectedItem(clientedestinoTemp);
					} else {
						if(jComboBoxid_cliente_destinoFK_IdClienteDestinoParametroFactuEmpresa!=null) {
							//jComboBoxid_cliente_destinoFK_IdClienteDestinoParametroFactuEmpresa.setSelectedItem(clientedestinoTemp);
							if(jComboBoxid_cliente_destinoFK_IdClienteDestinoParametroFactuEmpresa.getItemCount()>0) {
								jComboBoxid_cliente_destinoFK_IdClienteDestinoParametroFactuEmpresa.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualClienteDestinoForeignKeyDescripcion(Long idClienteDestinoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Cliente  clientedestinoTemp=null;

			for(Cliente clientedestinoAux:clientedestinosForeignKey) {
				if(clientedestinoAux.getId()!=null && clientedestinoAux.getId().equals(idClienteDestinoSeleccionado)) {
					clientedestinoTemp=clientedestinoAux;
					break;
				}
			}


			sDescripcion=ClienteConstantesFunciones.getClienteDescripcion(clientedestinoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualClienteDestinoForeignKeyGenerico(Long idClienteDestinoSeleccionado,JComboBox jComboBoxid_cliente_destinoParametroFactuEmpresaGenerico)throws Exception
	{
		try
		{
			Cliente  clientedestinoTemp=null;

			for(Cliente clientedestinoAux:clientedestinosForeignKey) {
				if(clientedestinoAux.getId()!=null && clientedestinoAux.getId().equals(idClienteDestinoSeleccionado)) {
					clientedestinoTemp=clientedestinoAux;
					break;
				}
			}

			if(clientedestinoTemp!=null) {
				jComboBoxid_cliente_destinoParametroFactuEmpresaGenerico.setSelectedItem(clientedestinoTemp);
			} else {
				if(jComboBoxid_cliente_destinoParametroFactuEmpresaGenerico!=null && jComboBoxid_cliente_destinoParametroFactuEmpresaGenerico.getItemCount()>0) {
					jComboBoxid_cliente_destinoParametroFactuEmpresaGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualEmpresaMultiDestinoForeignKey(Long idEmpresaMultiDestinoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Empresa  empresamultidestinoTemp=null;

			for(Empresa empresamultidestinoAux:empresamultidestinosForeignKey) {
				if(empresamultidestinoAux.getId()!=null && empresamultidestinoAux.getId().equals(idEmpresaMultiDestinoSeleccionado)) {
					empresamultidestinoTemp=empresamultidestinoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(empresamultidestinoTemp!=null) {

					if(this.parametrofactuempresa!=null) {
						this.parametrofactuempresa.setEmpresaMultiDestino(empresamultidestinoTemp);
					}

					if(this.jInternalFrameDetalleFormParametroFactuEmpresa!=null) {
						this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_empresa_multi_destinoParametroFactuEmpresa.setSelectedItem(empresamultidestinoTemp);
					}
				} else {
					//jComboBoxid_empresa_multi_destinoParametroFactuEmpresa.setSelectedItem(empresamultidestinoTemp);
					if(this.jInternalFrameDetalleFormParametroFactuEmpresa!=null) {
						if(this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_empresa_multi_destinoParametroFactuEmpresa.getItemCount()>0) {
							this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_empresa_multi_destinoParametroFactuEmpresa.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdEmpresaMultiDestino") || sFormularioTipoBusqueda.equals("Todos")){
					if(empresamultidestinoTemp!=null && jComboBoxid_empresa_multi_destinoFK_IdEmpresaMultiDestinoParametroFactuEmpresa!=null) {
						jComboBoxid_empresa_multi_destinoFK_IdEmpresaMultiDestinoParametroFactuEmpresa.setSelectedItem(empresamultidestinoTemp);
					} else {
						if(jComboBoxid_empresa_multi_destinoFK_IdEmpresaMultiDestinoParametroFactuEmpresa!=null) {
							//jComboBoxid_empresa_multi_destinoFK_IdEmpresaMultiDestinoParametroFactuEmpresa.setSelectedItem(empresamultidestinoTemp);
							if(jComboBoxid_empresa_multi_destinoFK_IdEmpresaMultiDestinoParametroFactuEmpresa.getItemCount()>0) {
								jComboBoxid_empresa_multi_destinoFK_IdEmpresaMultiDestinoParametroFactuEmpresa.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualEmpresaMultiDestinoForeignKeyDescripcion(Long idEmpresaMultiDestinoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Empresa  empresamultidestinoTemp=null;

			for(Empresa empresamultidestinoAux:empresamultidestinosForeignKey) {
				if(empresamultidestinoAux.getId()!=null && empresamultidestinoAux.getId().equals(idEmpresaMultiDestinoSeleccionado)) {
					empresamultidestinoTemp=empresamultidestinoAux;
					break;
				}
			}


			sDescripcion=EmpresaConstantesFunciones.getEmpresaDescripcion(empresamultidestinoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualEmpresaMultiDestinoForeignKeyGenerico(Long idEmpresaMultiDestinoSeleccionado,JComboBox jComboBoxid_empresa_multi_destinoParametroFactuEmpresaGenerico)throws Exception
	{
		try
		{
			Empresa  empresamultidestinoTemp=null;

			for(Empresa empresamultidestinoAux:empresamultidestinosForeignKey) {
				if(empresamultidestinoAux.getId()!=null && empresamultidestinoAux.getId().equals(idEmpresaMultiDestinoSeleccionado)) {
					empresamultidestinoTemp=empresamultidestinoAux;
					break;
				}
			}

			if(empresamultidestinoTemp!=null) {
				jComboBoxid_empresa_multi_destinoParametroFactuEmpresaGenerico.setSelectedItem(empresamultidestinoTemp);
			} else {
				if(jComboBoxid_empresa_multi_destinoParametroFactuEmpresaGenerico!=null && jComboBoxid_empresa_multi_destinoParametroFactuEmpresaGenerico.getItemCount()>0) {
					jComboBoxid_empresa_multi_destinoParametroFactuEmpresaGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualSucursalMultiDestinoForeignKey(Long idSucursalMultiDestinoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Sucursal  sucursalmultidestinoTemp=null;

			for(Sucursal sucursalmultidestinoAux:sucursalmultidestinosForeignKey) {
				if(sucursalmultidestinoAux.getId()!=null && sucursalmultidestinoAux.getId().equals(idSucursalMultiDestinoSeleccionado)) {
					sucursalmultidestinoTemp=sucursalmultidestinoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(sucursalmultidestinoTemp!=null) {

					if(this.parametrofactuempresa!=null) {
						this.parametrofactuempresa.setSucursalMultiDestino(sucursalmultidestinoTemp);
					}

					if(this.jInternalFrameDetalleFormParametroFactuEmpresa!=null) {
						this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_sucursal_multi_destinoParametroFactuEmpresa.setSelectedItem(sucursalmultidestinoTemp);
					}
				} else {
					//jComboBoxid_sucursal_multi_destinoParametroFactuEmpresa.setSelectedItem(sucursalmultidestinoTemp);
					if(this.jInternalFrameDetalleFormParametroFactuEmpresa!=null) {
						if(this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_sucursal_multi_destinoParametroFactuEmpresa.getItemCount()>0) {
							this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_sucursal_multi_destinoParametroFactuEmpresa.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdSucursalMultiDestino") || sFormularioTipoBusqueda.equals("Todos")){
					if(sucursalmultidestinoTemp!=null && jComboBoxid_sucursal_multi_destinoFK_IdSucursalMultiDestinoParametroFactuEmpresa!=null) {
						jComboBoxid_sucursal_multi_destinoFK_IdSucursalMultiDestinoParametroFactuEmpresa.setSelectedItem(sucursalmultidestinoTemp);
					} else {
						if(jComboBoxid_sucursal_multi_destinoFK_IdSucursalMultiDestinoParametroFactuEmpresa!=null) {
							//jComboBoxid_sucursal_multi_destinoFK_IdSucursalMultiDestinoParametroFactuEmpresa.setSelectedItem(sucursalmultidestinoTemp);
							if(jComboBoxid_sucursal_multi_destinoFK_IdSucursalMultiDestinoParametroFactuEmpresa.getItemCount()>0) {
								jComboBoxid_sucursal_multi_destinoFK_IdSucursalMultiDestinoParametroFactuEmpresa.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualSucursalMultiDestinoForeignKeyDescripcion(Long idSucursalMultiDestinoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Sucursal  sucursalmultidestinoTemp=null;

			for(Sucursal sucursalmultidestinoAux:sucursalmultidestinosForeignKey) {
				if(sucursalmultidestinoAux.getId()!=null && sucursalmultidestinoAux.getId().equals(idSucursalMultiDestinoSeleccionado)) {
					sucursalmultidestinoTemp=sucursalmultidestinoAux;
					break;
				}
			}


			sDescripcion=SucursalConstantesFunciones.getSucursalDescripcion(sucursalmultidestinoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualSucursalMultiDestinoForeignKeyGenerico(Long idSucursalMultiDestinoSeleccionado,JComboBox jComboBoxid_sucursal_multi_destinoParametroFactuEmpresaGenerico)throws Exception
	{
		try
		{
			Sucursal  sucursalmultidestinoTemp=null;

			for(Sucursal sucursalmultidestinoAux:sucursalmultidestinosForeignKey) {
				if(sucursalmultidestinoAux.getId()!=null && sucursalmultidestinoAux.getId().equals(idSucursalMultiDestinoSeleccionado)) {
					sucursalmultidestinoTemp=sucursalmultidestinoAux;
					break;
				}
			}

			if(sucursalmultidestinoTemp!=null) {
				jComboBoxid_sucursal_multi_destinoParametroFactuEmpresaGenerico.setSelectedItem(sucursalmultidestinoTemp);
			} else {
				if(jComboBoxid_sucursal_multi_destinoParametroFactuEmpresaGenerico!=null && jComboBoxid_sucursal_multi_destinoParametroFactuEmpresaGenerico.getItemCount()>0) {
					jComboBoxid_sucursal_multi_destinoParametroFactuEmpresaGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTransaccionMultiDestinoForeignKey(Long idTransaccionMultiDestinoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Transaccion  transaccionmultidestinoTemp=null;

			for(Transaccion transaccionmultidestinoAux:transaccionmultidestinosForeignKey) {
				if(transaccionmultidestinoAux.getId()!=null && transaccionmultidestinoAux.getId().equals(idTransaccionMultiDestinoSeleccionado)) {
					transaccionmultidestinoTemp=transaccionmultidestinoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(transaccionmultidestinoTemp!=null) {

					if(this.parametrofactuempresa!=null) {
						this.parametrofactuempresa.setTransaccionMultiDestino(transaccionmultidestinoTemp);
					}

					if(this.jInternalFrameDetalleFormParametroFactuEmpresa!=null) {
						this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_transaccion_multi_destinoParametroFactuEmpresa.setSelectedItem(transaccionmultidestinoTemp);
					}
				} else {
					//jComboBoxid_transaccion_multi_destinoParametroFactuEmpresa.setSelectedItem(transaccionmultidestinoTemp);
					if(this.jInternalFrameDetalleFormParametroFactuEmpresa!=null) {
						if(this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_transaccion_multi_destinoParametroFactuEmpresa.getItemCount()>0) {
							this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_transaccion_multi_destinoParametroFactuEmpresa.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdTransaccionMultiDestino") || sFormularioTipoBusqueda.equals("Todos")){
					if(transaccionmultidestinoTemp!=null && jComboBoxid_transaccion_multi_destinoFK_IdTransaccionMultiDestinoParametroFactuEmpresa!=null) {
						jComboBoxid_transaccion_multi_destinoFK_IdTransaccionMultiDestinoParametroFactuEmpresa.setSelectedItem(transaccionmultidestinoTemp);
					} else {
						if(jComboBoxid_transaccion_multi_destinoFK_IdTransaccionMultiDestinoParametroFactuEmpresa!=null) {
							//jComboBoxid_transaccion_multi_destinoFK_IdTransaccionMultiDestinoParametroFactuEmpresa.setSelectedItem(transaccionmultidestinoTemp);
							if(jComboBoxid_transaccion_multi_destinoFK_IdTransaccionMultiDestinoParametroFactuEmpresa.getItemCount()>0) {
								jComboBoxid_transaccion_multi_destinoFK_IdTransaccionMultiDestinoParametroFactuEmpresa.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTransaccionMultiDestinoForeignKeyDescripcion(Long idTransaccionMultiDestinoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Transaccion  transaccionmultidestinoTemp=null;

			for(Transaccion transaccionmultidestinoAux:transaccionmultidestinosForeignKey) {
				if(transaccionmultidestinoAux.getId()!=null && transaccionmultidestinoAux.getId().equals(idTransaccionMultiDestinoSeleccionado)) {
					transaccionmultidestinoTemp=transaccionmultidestinoAux;
					break;
				}
			}


			sDescripcion=TransaccionConstantesFunciones.getTransaccionDescripcion(transaccionmultidestinoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTransaccionMultiDestinoForeignKeyGenerico(Long idTransaccionMultiDestinoSeleccionado,JComboBox jComboBoxid_transaccion_multi_destinoParametroFactuEmpresaGenerico)throws Exception
	{
		try
		{
			Transaccion  transaccionmultidestinoTemp=null;

			for(Transaccion transaccionmultidestinoAux:transaccionmultidestinosForeignKey) {
				if(transaccionmultidestinoAux.getId()!=null && transaccionmultidestinoAux.getId().equals(idTransaccionMultiDestinoSeleccionado)) {
					transaccionmultidestinoTemp=transaccionmultidestinoAux;
					break;
				}
			}

			if(transaccionmultidestinoTemp!=null) {
				jComboBoxid_transaccion_multi_destinoParametroFactuEmpresaGenerico.setSelectedItem(transaccionmultidestinoTemp);
			} else {
				if(jComboBoxid_transaccion_multi_destinoParametroFactuEmpresaGenerico!=null && jComboBoxid_transaccion_multi_destinoParametroFactuEmpresaGenerico.getItemCount()>0) {
					jComboBoxid_transaccion_multi_destinoParametroFactuEmpresaGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualBodegaMultiOrigenForeignKey(Long idBodegaMultiOrigenSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Bodega  bodegamultiorigenTemp=null;

			for(Bodega bodegamultiorigenAux:bodegamultiorigensForeignKey) {
				if(bodegamultiorigenAux.getId()!=null && bodegamultiorigenAux.getId().equals(idBodegaMultiOrigenSeleccionado)) {
					bodegamultiorigenTemp=bodegamultiorigenAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(bodegamultiorigenTemp!=null) {

					if(this.parametrofactuempresa!=null) {
						this.parametrofactuempresa.setBodegaMultiOrigen(bodegamultiorigenTemp);
					}

					if(this.jInternalFrameDetalleFormParametroFactuEmpresa!=null) {
						this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_bodega_multi_origenParametroFactuEmpresa.setSelectedItem(bodegamultiorigenTemp);
					}
				} else {
					//jComboBoxid_bodega_multi_origenParametroFactuEmpresa.setSelectedItem(bodegamultiorigenTemp);
					if(this.jInternalFrameDetalleFormParametroFactuEmpresa!=null) {
						if(this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_bodega_multi_origenParametroFactuEmpresa.getItemCount()>0) {
							this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_bodega_multi_origenParametroFactuEmpresa.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdBodegaMultiOrigen") || sFormularioTipoBusqueda.equals("Todos")){
					if(bodegamultiorigenTemp!=null && jComboBoxid_bodega_multi_origenFK_IdBodegaMultiOrigenParametroFactuEmpresa!=null) {
						jComboBoxid_bodega_multi_origenFK_IdBodegaMultiOrigenParametroFactuEmpresa.setSelectedItem(bodegamultiorigenTemp);
					} else {
						if(jComboBoxid_bodega_multi_origenFK_IdBodegaMultiOrigenParametroFactuEmpresa!=null) {
							//jComboBoxid_bodega_multi_origenFK_IdBodegaMultiOrigenParametroFactuEmpresa.setSelectedItem(bodegamultiorigenTemp);
							if(jComboBoxid_bodega_multi_origenFK_IdBodegaMultiOrigenParametroFactuEmpresa.getItemCount()>0) {
								jComboBoxid_bodega_multi_origenFK_IdBodegaMultiOrigenParametroFactuEmpresa.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualBodegaMultiOrigenForeignKeyDescripcion(Long idBodegaMultiOrigenSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Bodega  bodegamultiorigenTemp=null;

			for(Bodega bodegamultiorigenAux:bodegamultiorigensForeignKey) {
				if(bodegamultiorigenAux.getId()!=null && bodegamultiorigenAux.getId().equals(idBodegaMultiOrigenSeleccionado)) {
					bodegamultiorigenTemp=bodegamultiorigenAux;
					break;
				}
			}


			sDescripcion=BodegaConstantesFunciones.getBodegaDescripcion(bodegamultiorigenTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualBodegaMultiOrigenForeignKeyGenerico(Long idBodegaMultiOrigenSeleccionado,JComboBox jComboBoxid_bodega_multi_origenParametroFactuEmpresaGenerico)throws Exception
	{
		try
		{
			Bodega  bodegamultiorigenTemp=null;

			for(Bodega bodegamultiorigenAux:bodegamultiorigensForeignKey) {
				if(bodegamultiorigenAux.getId()!=null && bodegamultiorigenAux.getId().equals(idBodegaMultiOrigenSeleccionado)) {
					bodegamultiorigenTemp=bodegamultiorigenAux;
					break;
				}
			}

			if(bodegamultiorigenTemp!=null) {
				jComboBoxid_bodega_multi_origenParametroFactuEmpresaGenerico.setSelectedItem(bodegamultiorigenTemp);
			} else {
				if(jComboBoxid_bodega_multi_origenParametroFactuEmpresaGenerico!=null && jComboBoxid_bodega_multi_origenParametroFactuEmpresaGenerico.getItemCount()>0) {
					jComboBoxid_bodega_multi_origenParametroFactuEmpresaGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualBodegaMultiDestinoForeignKey(Long idBodegaMultiDestinoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Bodega  bodegamultidestinoTemp=null;

			for(Bodega bodegamultidestinoAux:bodegamultidestinosForeignKey) {
				if(bodegamultidestinoAux.getId()!=null && bodegamultidestinoAux.getId().equals(idBodegaMultiDestinoSeleccionado)) {
					bodegamultidestinoTemp=bodegamultidestinoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(bodegamultidestinoTemp!=null) {

					if(this.parametrofactuempresa!=null) {
						this.parametrofactuempresa.setBodegaMultiDestino(bodegamultidestinoTemp);
					}

					if(this.jInternalFrameDetalleFormParametroFactuEmpresa!=null) {
						this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_bodega_multi_destinoParametroFactuEmpresa.setSelectedItem(bodegamultidestinoTemp);
					}
				} else {
					//jComboBoxid_bodega_multi_destinoParametroFactuEmpresa.setSelectedItem(bodegamultidestinoTemp);
					if(this.jInternalFrameDetalleFormParametroFactuEmpresa!=null) {
						if(this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_bodega_multi_destinoParametroFactuEmpresa.getItemCount()>0) {
							this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_bodega_multi_destinoParametroFactuEmpresa.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdBodegaMultiDestino") || sFormularioTipoBusqueda.equals("Todos")){
					if(bodegamultidestinoTemp!=null && jComboBoxid_bodega_multi_destinoFK_IdBodegaMultiDestinoParametroFactuEmpresa!=null) {
						jComboBoxid_bodega_multi_destinoFK_IdBodegaMultiDestinoParametroFactuEmpresa.setSelectedItem(bodegamultidestinoTemp);
					} else {
						if(jComboBoxid_bodega_multi_destinoFK_IdBodegaMultiDestinoParametroFactuEmpresa!=null) {
							//jComboBoxid_bodega_multi_destinoFK_IdBodegaMultiDestinoParametroFactuEmpresa.setSelectedItem(bodegamultidestinoTemp);
							if(jComboBoxid_bodega_multi_destinoFK_IdBodegaMultiDestinoParametroFactuEmpresa.getItemCount()>0) {
								jComboBoxid_bodega_multi_destinoFK_IdBodegaMultiDestinoParametroFactuEmpresa.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualBodegaMultiDestinoForeignKeyDescripcion(Long idBodegaMultiDestinoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Bodega  bodegamultidestinoTemp=null;

			for(Bodega bodegamultidestinoAux:bodegamultidestinosForeignKey) {
				if(bodegamultidestinoAux.getId()!=null && bodegamultidestinoAux.getId().equals(idBodegaMultiDestinoSeleccionado)) {
					bodegamultidestinoTemp=bodegamultidestinoAux;
					break;
				}
			}


			sDescripcion=BodegaConstantesFunciones.getBodegaDescripcion(bodegamultidestinoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualBodegaMultiDestinoForeignKeyGenerico(Long idBodegaMultiDestinoSeleccionado,JComboBox jComboBoxid_bodega_multi_destinoParametroFactuEmpresaGenerico)throws Exception
	{
		try
		{
			Bodega  bodegamultidestinoTemp=null;

			for(Bodega bodegamultidestinoAux:bodegamultidestinosForeignKey) {
				if(bodegamultidestinoAux.getId()!=null && bodegamultidestinoAux.getId().equals(idBodegaMultiDestinoSeleccionado)) {
					bodegamultidestinoTemp=bodegamultidestinoAux;
					break;
				}
			}

			if(bodegamultidestinoTemp!=null) {
				jComboBoxid_bodega_multi_destinoParametroFactuEmpresaGenerico.setSelectedItem(bodegamultidestinoTemp);
			} else {
				if(jComboBoxid_bodega_multi_destinoParametroFactuEmpresaGenerico!=null && jComboBoxid_bodega_multi_destinoParametroFactuEmpresaGenerico.getItemCount()>0) {
					jComboBoxid_bodega_multi_destinoParametroFactuEmpresaGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	
	
	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarEmpresaForeignKey(ParametroFactuEmpresa parametrofactuempresa,JComboBox jComboBoxid_empresaParametroFactuEmpresaGenerico)throws Exception
	{
		try
		{
			Empresa  empresaAux=new Empresa();

			if(jComboBoxid_empresaParametroFactuEmpresaGenerico==null) {
				empresaAux=(Empresa)this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_empresaParametroFactuEmpresa.getSelectedItem();
			} else {
				empresaAux=(Empresa)jComboBoxid_empresaParametroFactuEmpresaGenerico.getSelectedItem();
			}

			if(empresaAux!=null && empresaAux.getId()!=null) {
				parametrofactuempresa.setid_empresa(empresaAux.getId());
				parametrofactuempresa.setempresa_descripcion(ParametroFactuEmpresaConstantesFunciones.getEmpresaDescripcion(empresaAux));
				parametrofactuempresa.setEmpresa(empresaAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarEmpresaOrigenForeignKey(ParametroFactuEmpresa parametrofactuempresa,JComboBox jComboBoxid_empresa_origenParametroFactuEmpresaGenerico)throws Exception
	{
		try
		{
			Empresa  empresaAux=new Empresa();

			if(jComboBoxid_empresa_origenParametroFactuEmpresaGenerico==null) {
				empresaAux=(Empresa)this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_empresa_origenParametroFactuEmpresa.getSelectedItem();
			} else {
				empresaAux=(Empresa)jComboBoxid_empresa_origenParametroFactuEmpresaGenerico.getSelectedItem();
			}

			if(empresaAux!=null && empresaAux.getId()!=null) {
				parametrofactuempresa.setid_empresa_origen(empresaAux.getId());
				parametrofactuempresa.setempresaorigen_descripcion(ParametroFactuEmpresaConstantesFunciones.getEmpresaOrigenDescripcion(empresaAux));
				parametrofactuempresa.setEmpresaOrigen(empresaAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarSucursalForeignKey(ParametroFactuEmpresa parametrofactuempresa,JComboBox jComboBoxid_sucursalParametroFactuEmpresaGenerico)throws Exception
	{
		try
		{
			Sucursal  sucursalAux=new Sucursal();

			if(jComboBoxid_sucursalParametroFactuEmpresaGenerico==null) {
				sucursalAux=(Sucursal)this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_sucursalParametroFactuEmpresa.getSelectedItem();
			} else {
				sucursalAux=(Sucursal)jComboBoxid_sucursalParametroFactuEmpresaGenerico.getSelectedItem();
			}

			if(sucursalAux!=null && sucursalAux.getId()!=null) {
				parametrofactuempresa.setid_sucursal(sucursalAux.getId());
				parametrofactuempresa.setsucursal_descripcion(ParametroFactuEmpresaConstantesFunciones.getSucursalDescripcion(sucursalAux));
				parametrofactuempresa.setSucursal(sucursalAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTransaccionOrigenForeignKey(ParametroFactuEmpresa parametrofactuempresa,JComboBox jComboBoxid_transaccion_origenParametroFactuEmpresaGenerico)throws Exception
	{
		try
		{
			Transaccion  transaccionAux=new Transaccion();

			if(jComboBoxid_transaccion_origenParametroFactuEmpresaGenerico==null) {
				transaccionAux=(Transaccion)this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_transaccion_origenParametroFactuEmpresa.getSelectedItem();
			} else {
				transaccionAux=(Transaccion)jComboBoxid_transaccion_origenParametroFactuEmpresaGenerico.getSelectedItem();
			}

			if(transaccionAux!=null && transaccionAux.getId()!=null) {
				parametrofactuempresa.setid_transaccion_origen(transaccionAux.getId());
				parametrofactuempresa.settransaccionorigen_descripcion(ParametroFactuEmpresaConstantesFunciones.getTransaccionOrigenDescripcion(transaccionAux));
				parametrofactuempresa.setTransaccionOrigen(transaccionAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarBodegaOrigenForeignKey(ParametroFactuEmpresa parametrofactuempresa,JComboBox jComboBoxid_bodega_origenParametroFactuEmpresaGenerico)throws Exception
	{
		try
		{
			Bodega  bodegaAux=new Bodega();

			if(jComboBoxid_bodega_origenParametroFactuEmpresaGenerico==null) {
				bodegaAux=(Bodega)this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_bodega_origenParametroFactuEmpresa.getSelectedItem();
			} else {
				bodegaAux=(Bodega)jComboBoxid_bodega_origenParametroFactuEmpresaGenerico.getSelectedItem();
			}

			if(bodegaAux!=null && bodegaAux.getId()!=null) {
				parametrofactuempresa.setid_bodega_origen(bodegaAux.getId());
				parametrofactuempresa.setbodegaorigen_descripcion(ParametroFactuEmpresaConstantesFunciones.getBodegaOrigenDescripcion(bodegaAux));
				parametrofactuempresa.setBodegaOrigen(bodegaAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarClienteOrigenForeignKey(ParametroFactuEmpresa parametrofactuempresa,JComboBox jComboBoxid_cliente_origenParametroFactuEmpresaGenerico)throws Exception
	{
		try
		{
			Cliente  clienteAux=new Cliente();

			if(jComboBoxid_cliente_origenParametroFactuEmpresaGenerico==null) {
				clienteAux=(Cliente)this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_cliente_origenParametroFactuEmpresa.getSelectedItem();
			} else {
				clienteAux=(Cliente)jComboBoxid_cliente_origenParametroFactuEmpresaGenerico.getSelectedItem();
			}

			if(clienteAux!=null && clienteAux.getId()!=null) {
				parametrofactuempresa.setid_cliente_origen(clienteAux.getId());
				parametrofactuempresa.setclienteorigen_descripcion(ParametroFactuEmpresaConstantesFunciones.getClienteOrigenDescripcion(clienteAux));
				parametrofactuempresa.setClienteOrigen(clienteAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarEmpresaDestinoForeignKey(ParametroFactuEmpresa parametrofactuempresa,JComboBox jComboBoxid_empresa_destinoParametroFactuEmpresaGenerico)throws Exception
	{
		try
		{
			Empresa  empresaAux=new Empresa();

			if(jComboBoxid_empresa_destinoParametroFactuEmpresaGenerico==null) {
				empresaAux=(Empresa)this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_empresa_destinoParametroFactuEmpresa.getSelectedItem();
			} else {
				empresaAux=(Empresa)jComboBoxid_empresa_destinoParametroFactuEmpresaGenerico.getSelectedItem();
			}

			if(empresaAux!=null && empresaAux.getId()!=null) {
				parametrofactuempresa.setid_empresa_destino(empresaAux.getId());
				parametrofactuempresa.setempresadestino_descripcion(ParametroFactuEmpresaConstantesFunciones.getEmpresaDestinoDescripcion(empresaAux));
				parametrofactuempresa.setEmpresaDestino(empresaAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarSucursalDestinoForeignKey(ParametroFactuEmpresa parametrofactuempresa,JComboBox jComboBoxid_sucursal_destinoParametroFactuEmpresaGenerico)throws Exception
	{
		try
		{
			Sucursal  sucursalAux=new Sucursal();

			if(jComboBoxid_sucursal_destinoParametroFactuEmpresaGenerico==null) {
				sucursalAux=(Sucursal)this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_sucursal_destinoParametroFactuEmpresa.getSelectedItem();
			} else {
				sucursalAux=(Sucursal)jComboBoxid_sucursal_destinoParametroFactuEmpresaGenerico.getSelectedItem();
			}

			if(sucursalAux!=null && sucursalAux.getId()!=null) {
				parametrofactuempresa.setid_sucursal_destino(sucursalAux.getId());
				parametrofactuempresa.setsucursaldestino_descripcion(ParametroFactuEmpresaConstantesFunciones.getSucursalDestinoDescripcion(sucursalAux));
				parametrofactuempresa.setSucursalDestino(sucursalAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTransaccionDestinoForeignKey(ParametroFactuEmpresa parametrofactuempresa,JComboBox jComboBoxid_transaccion_destinoParametroFactuEmpresaGenerico)throws Exception
	{
		try
		{
			Transaccion  transaccionAux=new Transaccion();

			if(jComboBoxid_transaccion_destinoParametroFactuEmpresaGenerico==null) {
				transaccionAux=(Transaccion)this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_transaccion_destinoParametroFactuEmpresa.getSelectedItem();
			} else {
				transaccionAux=(Transaccion)jComboBoxid_transaccion_destinoParametroFactuEmpresaGenerico.getSelectedItem();
			}

			if(transaccionAux!=null && transaccionAux.getId()!=null) {
				parametrofactuempresa.setid_transaccion_destino(transaccionAux.getId());
				parametrofactuempresa.settransacciondestino_descripcion(ParametroFactuEmpresaConstantesFunciones.getTransaccionDestinoDescripcion(transaccionAux));
				parametrofactuempresa.setTransaccionDestino(transaccionAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarBodegaDestinoForeignKey(ParametroFactuEmpresa parametrofactuempresa,JComboBox jComboBoxid_bodega_destinoParametroFactuEmpresaGenerico)throws Exception
	{
		try
		{
			Bodega  bodegaAux=new Bodega();

			if(jComboBoxid_bodega_destinoParametroFactuEmpresaGenerico==null) {
				bodegaAux=(Bodega)this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_bodega_destinoParametroFactuEmpresa.getSelectedItem();
			} else {
				bodegaAux=(Bodega)jComboBoxid_bodega_destinoParametroFactuEmpresaGenerico.getSelectedItem();
			}

			if(bodegaAux!=null && bodegaAux.getId()!=null) {
				parametrofactuempresa.setid_bodega_destino(bodegaAux.getId());
				parametrofactuempresa.setbodegadestino_descripcion(ParametroFactuEmpresaConstantesFunciones.getBodegaDestinoDescripcion(bodegaAux));
				parametrofactuempresa.setBodegaDestino(bodegaAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarClienteDestinoForeignKey(ParametroFactuEmpresa parametrofactuempresa,JComboBox jComboBoxid_cliente_destinoParametroFactuEmpresaGenerico)throws Exception
	{
		try
		{
			Cliente  clienteAux=new Cliente();

			if(jComboBoxid_cliente_destinoParametroFactuEmpresaGenerico==null) {
				clienteAux=(Cliente)this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_cliente_destinoParametroFactuEmpresa.getSelectedItem();
			} else {
				clienteAux=(Cliente)jComboBoxid_cliente_destinoParametroFactuEmpresaGenerico.getSelectedItem();
			}

			if(clienteAux!=null && clienteAux.getId()!=null) {
				parametrofactuempresa.setid_cliente_destino(clienteAux.getId());
				parametrofactuempresa.setclientedestino_descripcion(ParametroFactuEmpresaConstantesFunciones.getClienteDestinoDescripcion(clienteAux));
				parametrofactuempresa.setClienteDestino(clienteAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarEmpresaMultiDestinoForeignKey(ParametroFactuEmpresa parametrofactuempresa,JComboBox jComboBoxid_empresa_multi_destinoParametroFactuEmpresaGenerico)throws Exception
	{
		try
		{
			Empresa  empresaAux=new Empresa();

			if(jComboBoxid_empresa_multi_destinoParametroFactuEmpresaGenerico==null) {
				empresaAux=(Empresa)this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_empresa_multi_destinoParametroFactuEmpresa.getSelectedItem();
			} else {
				empresaAux=(Empresa)jComboBoxid_empresa_multi_destinoParametroFactuEmpresaGenerico.getSelectedItem();
			}

			if(empresaAux!=null && empresaAux.getId()!=null) {
				parametrofactuempresa.setid_empresa_multi_destino(empresaAux.getId());
				parametrofactuempresa.setempresamultidestino_descripcion(ParametroFactuEmpresaConstantesFunciones.getEmpresaMultiDestinoDescripcion(empresaAux));
				parametrofactuempresa.setEmpresaMultiDestino(empresaAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarSucursalMultiDestinoForeignKey(ParametroFactuEmpresa parametrofactuempresa,JComboBox jComboBoxid_sucursal_multi_destinoParametroFactuEmpresaGenerico)throws Exception
	{
		try
		{
			Sucursal  sucursalAux=new Sucursal();

			if(jComboBoxid_sucursal_multi_destinoParametroFactuEmpresaGenerico==null) {
				sucursalAux=(Sucursal)this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_sucursal_multi_destinoParametroFactuEmpresa.getSelectedItem();
			} else {
				sucursalAux=(Sucursal)jComboBoxid_sucursal_multi_destinoParametroFactuEmpresaGenerico.getSelectedItem();
			}

			if(sucursalAux!=null && sucursalAux.getId()!=null) {
				parametrofactuempresa.setid_sucursal_multi_destino(sucursalAux.getId());
				parametrofactuempresa.setsucursalmultidestino_descripcion(ParametroFactuEmpresaConstantesFunciones.getSucursalMultiDestinoDescripcion(sucursalAux));
				parametrofactuempresa.setSucursalMultiDestino(sucursalAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTransaccionMultiDestinoForeignKey(ParametroFactuEmpresa parametrofactuempresa,JComboBox jComboBoxid_transaccion_multi_destinoParametroFactuEmpresaGenerico)throws Exception
	{
		try
		{
			Transaccion  transaccionAux=new Transaccion();

			if(jComboBoxid_transaccion_multi_destinoParametroFactuEmpresaGenerico==null) {
				transaccionAux=(Transaccion)this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_transaccion_multi_destinoParametroFactuEmpresa.getSelectedItem();
			} else {
				transaccionAux=(Transaccion)jComboBoxid_transaccion_multi_destinoParametroFactuEmpresaGenerico.getSelectedItem();
			}

			if(transaccionAux!=null && transaccionAux.getId()!=null) {
				parametrofactuempresa.setid_transaccion_multi_destino(transaccionAux.getId());
				parametrofactuempresa.settransaccionmultidestino_descripcion(ParametroFactuEmpresaConstantesFunciones.getTransaccionMultiDestinoDescripcion(transaccionAux));
				parametrofactuempresa.setTransaccionMultiDestino(transaccionAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarBodegaMultiOrigenForeignKey(ParametroFactuEmpresa parametrofactuempresa,JComboBox jComboBoxid_bodega_multi_origenParametroFactuEmpresaGenerico)throws Exception
	{
		try
		{
			Bodega  bodegaAux=new Bodega();

			if(jComboBoxid_bodega_multi_origenParametroFactuEmpresaGenerico==null) {
				bodegaAux=(Bodega)this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_bodega_multi_origenParametroFactuEmpresa.getSelectedItem();
			} else {
				bodegaAux=(Bodega)jComboBoxid_bodega_multi_origenParametroFactuEmpresaGenerico.getSelectedItem();
			}

			if(bodegaAux!=null && bodegaAux.getId()!=null) {
				parametrofactuempresa.setid_bodega_multi_origen(bodegaAux.getId());
				parametrofactuempresa.setbodegamultiorigen_descripcion(ParametroFactuEmpresaConstantesFunciones.getBodegaMultiOrigenDescripcion(bodegaAux));
				parametrofactuempresa.setBodegaMultiOrigen(bodegaAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarBodegaMultiDestinoForeignKey(ParametroFactuEmpresa parametrofactuempresa,JComboBox jComboBoxid_bodega_multi_destinoParametroFactuEmpresaGenerico)throws Exception
	{
		try
		{
			Bodega  bodegaAux=new Bodega();

			if(jComboBoxid_bodega_multi_destinoParametroFactuEmpresaGenerico==null) {
				bodegaAux=(Bodega)this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_bodega_multi_destinoParametroFactuEmpresa.getSelectedItem();
			} else {
				bodegaAux=(Bodega)jComboBoxid_bodega_multi_destinoParametroFactuEmpresaGenerico.getSelectedItem();
			}

			if(bodegaAux!=null && bodegaAux.getId()!=null) {
				parametrofactuempresa.setid_bodega_multi_destino(bodegaAux.getId());
				parametrofactuempresa.setbodegamultidestino_descripcion(ParametroFactuEmpresaConstantesFunciones.getBodegaMultiDestinoDescripcion(bodegaAux));
				parametrofactuempresa.setBodegaMultiDestino(bodegaAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	
	


		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameEmpresasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingEmpresa=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ParametroFactuEmpresaJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormParametroFactuEmpresa!=null) { 
							this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_empresaParametroFactuEmpresa.removeAllItems();

							for(Empresa empresa:this.empresasForeignKey) {
								this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_empresaParametroFactuEmpresa.addItem(empresa);
							}
						}
					}

					if(this.jInternalFrameDetalleFormParametroFactuEmpresa!=null) { 
					}

					if(!ParametroFactuEmpresaJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameEmpresaOrigensForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingEmpresa=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ParametroFactuEmpresaJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormParametroFactuEmpresa!=null) { 
							this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_empresa_origenParametroFactuEmpresa.removeAllItems();

							for(Empresa empresaorigen:this.empresaorigensForeignKey) {
								this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_empresa_origenParametroFactuEmpresa.addItem(empresaorigen);
							}
						}
					}

					if(this.jInternalFrameDetalleFormParametroFactuEmpresa!=null) { 
					}

					if(!ParametroFactuEmpresaJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdEmpresaOrigen") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ParametroFactuEmpresaJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_empresa_origenFK_IdEmpresaOrigenParametroFactuEmpresa.removeAllItems();

							for(Empresa empresaorigen:this.empresaorigensForeignKey) {
								this.jComboBoxid_empresa_origenFK_IdEmpresaOrigenParametroFactuEmpresa.addItem(empresaorigen);
							}
						}

						if(!ParametroFactuEmpresaJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameSucursalsForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingSucursal=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ParametroFactuEmpresaJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormParametroFactuEmpresa!=null) { 
							this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_sucursalParametroFactuEmpresa.removeAllItems();

							for(Sucursal sucursal:this.sucursalsForeignKey) {
								this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_sucursalParametroFactuEmpresa.addItem(sucursal);
							}
						}
					}

					if(this.jInternalFrameDetalleFormParametroFactuEmpresa!=null) { 
					}

					if(!ParametroFactuEmpresaJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdSucursal") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ParametroFactuEmpresaJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_sucursalFK_IdSucursalParametroFactuEmpresa.removeAllItems();

							for(Sucursal sucursal:this.sucursalsForeignKey) {
								this.jComboBoxid_sucursalFK_IdSucursalParametroFactuEmpresa.addItem(sucursal);
							}
						}

						if(!ParametroFactuEmpresaJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTransaccionOrigensForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTransaccion=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ParametroFactuEmpresaJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormParametroFactuEmpresa!=null) { 
							this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_transaccion_origenParametroFactuEmpresa.removeAllItems();

							for(Transaccion transaccionorigen:this.transaccionorigensForeignKey) {
								this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_transaccion_origenParametroFactuEmpresa.addItem(transaccionorigen);
							}
						}
					}

					if(this.jInternalFrameDetalleFormParametroFactuEmpresa!=null) { 
					}

					if(!ParametroFactuEmpresaJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdTransaccionOrigen") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ParametroFactuEmpresaJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_transaccion_origenFK_IdTransaccionOrigenParametroFactuEmpresa.removeAllItems();

							for(Transaccion transaccionorigen:this.transaccionorigensForeignKey) {
								this.jComboBoxid_transaccion_origenFK_IdTransaccionOrigenParametroFactuEmpresa.addItem(transaccionorigen);
							}
						}

						if(!ParametroFactuEmpresaJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameBodegaOrigensForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingBodega=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ParametroFactuEmpresaJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormParametroFactuEmpresa!=null) { 
							this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_bodega_origenParametroFactuEmpresa.removeAllItems();

							for(Bodega bodegaorigen:this.bodegaorigensForeignKey) {
								this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_bodega_origenParametroFactuEmpresa.addItem(bodegaorigen);
							}
						}
					}

					if(this.jInternalFrameDetalleFormParametroFactuEmpresa!=null) { 
					}

					if(!ParametroFactuEmpresaJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdBodegaOrigen") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ParametroFactuEmpresaJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_bodega_origenFK_IdBodegaOrigenParametroFactuEmpresa.removeAllItems();

							for(Bodega bodegaorigen:this.bodegaorigensForeignKey) {
								this.jComboBoxid_bodega_origenFK_IdBodegaOrigenParametroFactuEmpresa.addItem(bodegaorigen);
							}
						}

						if(!ParametroFactuEmpresaJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameClienteOrigensForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingCliente=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ParametroFactuEmpresaJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormParametroFactuEmpresa!=null) { 
							this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_cliente_origenParametroFactuEmpresa.removeAllItems();

							for(Cliente clienteorigen:this.clienteorigensForeignKey) {
								this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_cliente_origenParametroFactuEmpresa.addItem(clienteorigen);
							}
						}
					}

					if(this.jInternalFrameDetalleFormParametroFactuEmpresa!=null) { 
					}

					if(!ParametroFactuEmpresaJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdClienteOrigen") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ParametroFactuEmpresaJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_cliente_origenFK_IdClienteOrigenParametroFactuEmpresa.removeAllItems();

							for(Cliente clienteorigen:this.clienteorigensForeignKey) {
								this.jComboBoxid_cliente_origenFK_IdClienteOrigenParametroFactuEmpresa.addItem(clienteorigen);
							}
						}

						if(!ParametroFactuEmpresaJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameEmpresaDestinosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingEmpresa=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ParametroFactuEmpresaJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormParametroFactuEmpresa!=null) { 
							this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_empresa_destinoParametroFactuEmpresa.removeAllItems();

							for(Empresa empresadestino:this.empresadestinosForeignKey) {
								this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_empresa_destinoParametroFactuEmpresa.addItem(empresadestino);
							}
						}
					}

					if(this.jInternalFrameDetalleFormParametroFactuEmpresa!=null) { 
					}

					if(!ParametroFactuEmpresaJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdEmpresaDestino") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ParametroFactuEmpresaJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_empresa_destinoFK_IdEmpresaDestinoParametroFactuEmpresa.removeAllItems();

							for(Empresa empresadestino:this.empresadestinosForeignKey) {
								this.jComboBoxid_empresa_destinoFK_IdEmpresaDestinoParametroFactuEmpresa.addItem(empresadestino);
							}
						}

						if(!ParametroFactuEmpresaJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameSucursalDestinosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingSucursal=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ParametroFactuEmpresaJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormParametroFactuEmpresa!=null) { 
							this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_sucursal_destinoParametroFactuEmpresa.removeAllItems();

							for(Sucursal sucursaldestino:this.sucursaldestinosForeignKey) {
								this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_sucursal_destinoParametroFactuEmpresa.addItem(sucursaldestino);
							}
						}
					}

					if(this.jInternalFrameDetalleFormParametroFactuEmpresa!=null) { 
					}

					if(!ParametroFactuEmpresaJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdSucursalDestino") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ParametroFactuEmpresaJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_sucursal_destinoFK_IdSucursalDestinoParametroFactuEmpresa.removeAllItems();

							for(Sucursal sucursaldestino:this.sucursaldestinosForeignKey) {
								this.jComboBoxid_sucursal_destinoFK_IdSucursalDestinoParametroFactuEmpresa.addItem(sucursaldestino);
							}
						}

						if(!ParametroFactuEmpresaJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTransaccionDestinosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTransaccion=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ParametroFactuEmpresaJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormParametroFactuEmpresa!=null) { 
							this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_transaccion_destinoParametroFactuEmpresa.removeAllItems();

							for(Transaccion transacciondestino:this.transacciondestinosForeignKey) {
								this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_transaccion_destinoParametroFactuEmpresa.addItem(transacciondestino);
							}
						}
					}

					if(this.jInternalFrameDetalleFormParametroFactuEmpresa!=null) { 
					}

					if(!ParametroFactuEmpresaJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdTransaccionDestino") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ParametroFactuEmpresaJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_transaccion_destinoFK_IdTransaccionDestinoParametroFactuEmpresa.removeAllItems();

							for(Transaccion transacciondestino:this.transacciondestinosForeignKey) {
								this.jComboBoxid_transaccion_destinoFK_IdTransaccionDestinoParametroFactuEmpresa.addItem(transacciondestino);
							}
						}

						if(!ParametroFactuEmpresaJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameBodegaDestinosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingBodega=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ParametroFactuEmpresaJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormParametroFactuEmpresa!=null) { 
							this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_bodega_destinoParametroFactuEmpresa.removeAllItems();

							for(Bodega bodegadestino:this.bodegadestinosForeignKey) {
								this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_bodega_destinoParametroFactuEmpresa.addItem(bodegadestino);
							}
						}
					}

					if(this.jInternalFrameDetalleFormParametroFactuEmpresa!=null) { 
					}

					if(!ParametroFactuEmpresaJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdBodegaDestino") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ParametroFactuEmpresaJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_bodega_destinoFK_IdBodegaDestinoParametroFactuEmpresa.removeAllItems();

							for(Bodega bodegadestino:this.bodegadestinosForeignKey) {
								this.jComboBoxid_bodega_destinoFK_IdBodegaDestinoParametroFactuEmpresa.addItem(bodegadestino);
							}
						}

						if(!ParametroFactuEmpresaJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameClienteDestinosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingCliente=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ParametroFactuEmpresaJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormParametroFactuEmpresa!=null) { 
							this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_cliente_destinoParametroFactuEmpresa.removeAllItems();

							for(Cliente clientedestino:this.clientedestinosForeignKey) {
								this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_cliente_destinoParametroFactuEmpresa.addItem(clientedestino);
							}
						}
					}

					if(this.jInternalFrameDetalleFormParametroFactuEmpresa!=null) { 
					}

					if(!ParametroFactuEmpresaJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdClienteDestino") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ParametroFactuEmpresaJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_cliente_destinoFK_IdClienteDestinoParametroFactuEmpresa.removeAllItems();

							for(Cliente clientedestino:this.clientedestinosForeignKey) {
								this.jComboBoxid_cliente_destinoFK_IdClienteDestinoParametroFactuEmpresa.addItem(clientedestino);
							}
						}

						if(!ParametroFactuEmpresaJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameEmpresaMultiDestinosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingEmpresa=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ParametroFactuEmpresaJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormParametroFactuEmpresa!=null) { 
							this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_empresa_multi_destinoParametroFactuEmpresa.removeAllItems();

							for(Empresa empresamultidestino:this.empresamultidestinosForeignKey) {
								this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_empresa_multi_destinoParametroFactuEmpresa.addItem(empresamultidestino);
							}
						}
					}

					if(this.jInternalFrameDetalleFormParametroFactuEmpresa!=null) { 
					}

					if(!ParametroFactuEmpresaJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdEmpresaMultiDestino") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ParametroFactuEmpresaJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_empresa_multi_destinoFK_IdEmpresaMultiDestinoParametroFactuEmpresa.removeAllItems();

							for(Empresa empresamultidestino:this.empresamultidestinosForeignKey) {
								this.jComboBoxid_empresa_multi_destinoFK_IdEmpresaMultiDestinoParametroFactuEmpresa.addItem(empresamultidestino);
							}
						}

						if(!ParametroFactuEmpresaJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameSucursalMultiDestinosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingSucursal=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ParametroFactuEmpresaJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormParametroFactuEmpresa!=null) { 
							this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_sucursal_multi_destinoParametroFactuEmpresa.removeAllItems();

							for(Sucursal sucursalmultidestino:this.sucursalmultidestinosForeignKey) {
								this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_sucursal_multi_destinoParametroFactuEmpresa.addItem(sucursalmultidestino);
							}
						}
					}

					if(this.jInternalFrameDetalleFormParametroFactuEmpresa!=null) { 
					}

					if(!ParametroFactuEmpresaJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdSucursalMultiDestino") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ParametroFactuEmpresaJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_sucursal_multi_destinoFK_IdSucursalMultiDestinoParametroFactuEmpresa.removeAllItems();

							for(Sucursal sucursalmultidestino:this.sucursalmultidestinosForeignKey) {
								this.jComboBoxid_sucursal_multi_destinoFK_IdSucursalMultiDestinoParametroFactuEmpresa.addItem(sucursalmultidestino);
							}
						}

						if(!ParametroFactuEmpresaJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTransaccionMultiDestinosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTransaccion=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ParametroFactuEmpresaJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormParametroFactuEmpresa!=null) { 
							this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_transaccion_multi_destinoParametroFactuEmpresa.removeAllItems();

							for(Transaccion transaccionmultidestino:this.transaccionmultidestinosForeignKey) {
								this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_transaccion_multi_destinoParametroFactuEmpresa.addItem(transaccionmultidestino);
							}
						}
					}

					if(this.jInternalFrameDetalleFormParametroFactuEmpresa!=null) { 
					}

					if(!ParametroFactuEmpresaJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdTransaccionMultiDestino") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ParametroFactuEmpresaJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_transaccion_multi_destinoFK_IdTransaccionMultiDestinoParametroFactuEmpresa.removeAllItems();

							for(Transaccion transaccionmultidestino:this.transaccionmultidestinosForeignKey) {
								this.jComboBoxid_transaccion_multi_destinoFK_IdTransaccionMultiDestinoParametroFactuEmpresa.addItem(transaccionmultidestino);
							}
						}

						if(!ParametroFactuEmpresaJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameBodegaMultiOrigensForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingBodega=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ParametroFactuEmpresaJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormParametroFactuEmpresa!=null) { 
							this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_bodega_multi_origenParametroFactuEmpresa.removeAllItems();

							for(Bodega bodegamultiorigen:this.bodegamultiorigensForeignKey) {
								this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_bodega_multi_origenParametroFactuEmpresa.addItem(bodegamultiorigen);
							}
						}
					}

					if(this.jInternalFrameDetalleFormParametroFactuEmpresa!=null) { 
					}

					if(!ParametroFactuEmpresaJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdBodegaMultiOrigen") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ParametroFactuEmpresaJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_bodega_multi_origenFK_IdBodegaMultiOrigenParametroFactuEmpresa.removeAllItems();

							for(Bodega bodegamultiorigen:this.bodegamultiorigensForeignKey) {
								this.jComboBoxid_bodega_multi_origenFK_IdBodegaMultiOrigenParametroFactuEmpresa.addItem(bodegamultiorigen);
							}
						}

						if(!ParametroFactuEmpresaJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameBodegaMultiDestinosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingBodega=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ParametroFactuEmpresaJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormParametroFactuEmpresa!=null) { 
							this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_bodega_multi_destinoParametroFactuEmpresa.removeAllItems();

							for(Bodega bodegamultidestino:this.bodegamultidestinosForeignKey) {
								this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_bodega_multi_destinoParametroFactuEmpresa.addItem(bodegamultidestino);
							}
						}
					}

					if(this.jInternalFrameDetalleFormParametroFactuEmpresa!=null) { 
					}

					if(!ParametroFactuEmpresaJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdBodegaMultiDestino") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ParametroFactuEmpresaJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_bodega_multi_destinoFK_IdBodegaMultiDestinoParametroFactuEmpresa.removeAllItems();

							for(Bodega bodegamultidestino:this.bodegamultidestinosForeignKey) {
								this.jComboBoxid_bodega_multi_destinoFK_IdBodegaMultiDestinoParametroFactuEmpresa.addItem(bodegamultidestino);
							}
						}

						if(!ParametroFactuEmpresaJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

	


		public void setSelectedItemCombosFrameEmpresaForeignKey(Empresa empresa,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormParametroFactuEmpresa!=null) {
							this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_empresaParametroFactuEmpresa.setSelectedItem(empresa);
						}
					} else {
						if(this.jInternalFrameDetalleFormParametroFactuEmpresa!=null) {
							this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_empresaParametroFactuEmpresa.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameEmpresaOrigenForeignKey(Empresa empresaorigen,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormParametroFactuEmpresa!=null) {
							this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_empresa_origenParametroFactuEmpresa.setSelectedItem(empresaorigen);
						}
					} else {
						if(this.jInternalFrameDetalleFormParametroFactuEmpresa!=null) {
							this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_empresa_origenParametroFactuEmpresa.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_empresa_origenFK_IdEmpresaOrigenParametroFactuEmpresa.setSelectedItem(empresaorigen);
						} else {
							this.jComboBoxid_empresa_origenFK_IdEmpresaOrigenParametroFactuEmpresa.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameSucursalForeignKey(Sucursal sucursal,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormParametroFactuEmpresa!=null) {
							this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_sucursalParametroFactuEmpresa.setSelectedItem(sucursal);
						}
					} else {
						if(this.jInternalFrameDetalleFormParametroFactuEmpresa!=null) {
							this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_sucursalParametroFactuEmpresa.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_sucursalFK_IdSucursalParametroFactuEmpresa.setSelectedItem(sucursal);
						} else {
							this.jComboBoxid_sucursalFK_IdSucursalParametroFactuEmpresa.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTransaccionOrigenForeignKey(Transaccion transaccionorigen,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormParametroFactuEmpresa!=null) {
							this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_transaccion_origenParametroFactuEmpresa.setSelectedItem(transaccionorigen);
						}
					} else {
						if(this.jInternalFrameDetalleFormParametroFactuEmpresa!=null) {
							this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_transaccion_origenParametroFactuEmpresa.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_transaccion_origenFK_IdTransaccionOrigenParametroFactuEmpresa.setSelectedItem(transaccionorigen);
						} else {
							this.jComboBoxid_transaccion_origenFK_IdTransaccionOrigenParametroFactuEmpresa.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameBodegaOrigenForeignKey(Bodega bodegaorigen,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormParametroFactuEmpresa!=null) {
							this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_bodega_origenParametroFactuEmpresa.setSelectedItem(bodegaorigen);
						}
					} else {
						if(this.jInternalFrameDetalleFormParametroFactuEmpresa!=null) {
							this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_bodega_origenParametroFactuEmpresa.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_bodega_origenFK_IdBodegaOrigenParametroFactuEmpresa.setSelectedItem(bodegaorigen);
						} else {
							this.jComboBoxid_bodega_origenFK_IdBodegaOrigenParametroFactuEmpresa.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameClienteOrigenForeignKey(Cliente clienteorigen,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormParametroFactuEmpresa!=null) {
							this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_cliente_origenParametroFactuEmpresa.setSelectedItem(clienteorigen);
						}
					} else {
						if(this.jInternalFrameDetalleFormParametroFactuEmpresa!=null) {
							this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_cliente_origenParametroFactuEmpresa.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_cliente_origenFK_IdClienteOrigenParametroFactuEmpresa.setSelectedItem(clienteorigen);
						} else {
							this.jComboBoxid_cliente_origenFK_IdClienteOrigenParametroFactuEmpresa.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameEmpresaDestinoForeignKey(Empresa empresadestino,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormParametroFactuEmpresa!=null) {
							this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_empresa_destinoParametroFactuEmpresa.setSelectedItem(empresadestino);
						}
					} else {
						if(this.jInternalFrameDetalleFormParametroFactuEmpresa!=null) {
							this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_empresa_destinoParametroFactuEmpresa.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_empresa_destinoFK_IdEmpresaDestinoParametroFactuEmpresa.setSelectedItem(empresadestino);
						} else {
							this.jComboBoxid_empresa_destinoFK_IdEmpresaDestinoParametroFactuEmpresa.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameSucursalDestinoForeignKey(Sucursal sucursaldestino,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormParametroFactuEmpresa!=null) {
							this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_sucursal_destinoParametroFactuEmpresa.setSelectedItem(sucursaldestino);
						}
					} else {
						if(this.jInternalFrameDetalleFormParametroFactuEmpresa!=null) {
							this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_sucursal_destinoParametroFactuEmpresa.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_sucursal_destinoFK_IdSucursalDestinoParametroFactuEmpresa.setSelectedItem(sucursaldestino);
						} else {
							this.jComboBoxid_sucursal_destinoFK_IdSucursalDestinoParametroFactuEmpresa.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTransaccionDestinoForeignKey(Transaccion transacciondestino,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormParametroFactuEmpresa!=null) {
							this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_transaccion_destinoParametroFactuEmpresa.setSelectedItem(transacciondestino);
						}
					} else {
						if(this.jInternalFrameDetalleFormParametroFactuEmpresa!=null) {
							this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_transaccion_destinoParametroFactuEmpresa.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_transaccion_destinoFK_IdTransaccionDestinoParametroFactuEmpresa.setSelectedItem(transacciondestino);
						} else {
							this.jComboBoxid_transaccion_destinoFK_IdTransaccionDestinoParametroFactuEmpresa.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameBodegaDestinoForeignKey(Bodega bodegadestino,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormParametroFactuEmpresa!=null) {
							this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_bodega_destinoParametroFactuEmpresa.setSelectedItem(bodegadestino);
						}
					} else {
						if(this.jInternalFrameDetalleFormParametroFactuEmpresa!=null) {
							this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_bodega_destinoParametroFactuEmpresa.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_bodega_destinoFK_IdBodegaDestinoParametroFactuEmpresa.setSelectedItem(bodegadestino);
						} else {
							this.jComboBoxid_bodega_destinoFK_IdBodegaDestinoParametroFactuEmpresa.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameClienteDestinoForeignKey(Cliente clientedestino,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormParametroFactuEmpresa!=null) {
							this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_cliente_destinoParametroFactuEmpresa.setSelectedItem(clientedestino);
						}
					} else {
						if(this.jInternalFrameDetalleFormParametroFactuEmpresa!=null) {
							this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_cliente_destinoParametroFactuEmpresa.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_cliente_destinoFK_IdClienteDestinoParametroFactuEmpresa.setSelectedItem(clientedestino);
						} else {
							this.jComboBoxid_cliente_destinoFK_IdClienteDestinoParametroFactuEmpresa.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameEmpresaMultiDestinoForeignKey(Empresa empresamultidestino,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormParametroFactuEmpresa!=null) {
							this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_empresa_multi_destinoParametroFactuEmpresa.setSelectedItem(empresamultidestino);
						}
					} else {
						if(this.jInternalFrameDetalleFormParametroFactuEmpresa!=null) {
							this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_empresa_multi_destinoParametroFactuEmpresa.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_empresa_multi_destinoFK_IdEmpresaMultiDestinoParametroFactuEmpresa.setSelectedItem(empresamultidestino);
						} else {
							this.jComboBoxid_empresa_multi_destinoFK_IdEmpresaMultiDestinoParametroFactuEmpresa.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameSucursalMultiDestinoForeignKey(Sucursal sucursalmultidestino,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormParametroFactuEmpresa!=null) {
							this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_sucursal_multi_destinoParametroFactuEmpresa.setSelectedItem(sucursalmultidestino);
						}
					} else {
						if(this.jInternalFrameDetalleFormParametroFactuEmpresa!=null) {
							this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_sucursal_multi_destinoParametroFactuEmpresa.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_sucursal_multi_destinoFK_IdSucursalMultiDestinoParametroFactuEmpresa.setSelectedItem(sucursalmultidestino);
						} else {
							this.jComboBoxid_sucursal_multi_destinoFK_IdSucursalMultiDestinoParametroFactuEmpresa.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTransaccionMultiDestinoForeignKey(Transaccion transaccionmultidestino,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormParametroFactuEmpresa!=null) {
							this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_transaccion_multi_destinoParametroFactuEmpresa.setSelectedItem(transaccionmultidestino);
						}
					} else {
						if(this.jInternalFrameDetalleFormParametroFactuEmpresa!=null) {
							this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_transaccion_multi_destinoParametroFactuEmpresa.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_transaccion_multi_destinoFK_IdTransaccionMultiDestinoParametroFactuEmpresa.setSelectedItem(transaccionmultidestino);
						} else {
							this.jComboBoxid_transaccion_multi_destinoFK_IdTransaccionMultiDestinoParametroFactuEmpresa.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameBodegaMultiOrigenForeignKey(Bodega bodegamultiorigen,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormParametroFactuEmpresa!=null) {
							this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_bodega_multi_origenParametroFactuEmpresa.setSelectedItem(bodegamultiorigen);
						}
					} else {
						if(this.jInternalFrameDetalleFormParametroFactuEmpresa!=null) {
							this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_bodega_multi_origenParametroFactuEmpresa.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_bodega_multi_origenFK_IdBodegaMultiOrigenParametroFactuEmpresa.setSelectedItem(bodegamultiorigen);
						} else {
							this.jComboBoxid_bodega_multi_origenFK_IdBodegaMultiOrigenParametroFactuEmpresa.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameBodegaMultiDestinoForeignKey(Bodega bodegamultidestino,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormParametroFactuEmpresa!=null) {
							this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_bodega_multi_destinoParametroFactuEmpresa.setSelectedItem(bodegamultidestino);
						}
					} else {
						if(this.jInternalFrameDetalleFormParametroFactuEmpresa!=null) {
							this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_bodega_multi_destinoParametroFactuEmpresa.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_bodega_multi_destinoFK_IdBodegaMultiDestinoParametroFactuEmpresa.setSelectedItem(bodegamultidestino);
						} else {
							this.jComboBoxid_bodega_multi_destinoFK_IdBodegaMultiDestinoParametroFactuEmpresa.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

	


	
	public void refrescarForeignKeysDescripcionesParametroFactuEmpresa() throws Exception {
		//SI FUNCIONA DEEPLOAD ESTO VA AL ULTIMO
		if(Constantes.ISUSAEJBLOGICLAYER) {
			ParametroFactuEmpresaConstantesFunciones.refrescarForeignKeysDescripcionesParametroFactuEmpresa(this.parametrofactuempresaLogic.getParametroFactuEmpresas());
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			ParametroFactuEmpresaConstantesFunciones.refrescarForeignKeysDescripcionesParametroFactuEmpresa(this.parametrofactuempresas);
		}
		
		/*
		ArrayList<Classe> classes=new ArrayList<Classe>();
		
		classes.add(new Classe(Empresa.class));
		classes.add(new Classe(Sucursal.class));
		classes.add(new Classe(Transaccion.class));
		classes.add(new Classe(Bodega.class));
		classes.add(new Classe(Cliente.class));
			
		if(Constantes.ISUSAEJBLOGICLAYER) {
			//USA LOS OBJETOS DE LOGIC DIRECTAMENTE
			//parametrofactuempresaLogic.setParametroFactuEmpresas(this.parametrofactuempresas);
			parametrofactuempresaLogic.deepLoadsWithConnection(false, DeepLoadType.INCLUDE, classes,"");
	
		} else if(Constantes.ISUSAEJBREMOTE) {
		} else if(Constantes.ISUSAEJBHOME) {
		}
		*/				
	}	
	
	
	
	public Integer getiNumeroPaginacion() {
		return iNumeroPaginacion;
	}

	public void setiNumeroPaginacion(Integer iNumeroPaginacion) {
		this.iNumeroPaginacion= iNumeroPaginacion;
	}
	
	public Integer getiNumeroPaginacionPagina() {
		return iNumeroPaginacionPagina;
	}

	public void setiNumeroPaginacionPagina(Integer iNumeroPaginacionPagina) {
		this.iNumeroPaginacionPagina= iNumeroPaginacionPagina;
	}
	
	
	public Boolean getIsSeleccionarTodos() {
		return this.isSeleccionarTodos;
	}

	public void setIsSeleccionarTodos(Boolean isSeleccionarTodos) {
		this.isSeleccionarTodos= isSeleccionarTodos;
	}
	
	public Boolean getEsControlTabla() {
		return this.esControlTabla;
	}

	public void setEsControlTabla(Boolean esControlTabla) {
		this.esControlTabla= esControlTabla;
	}
	
	public Boolean getIsSeleccionados() {
		return this.isSeleccionados;
	}

	public void setIsSeleccionados(Boolean isSeleccionados) {
		this.isSeleccionados= isSeleccionados;
	}
	
	public Boolean getIsPostAccionNuevo() {
		return this.isPostAccionNuevo;
	}

	public void setIsPostAccionNuevo(Boolean isPostAccionNuevo) {
		this.isPostAccionNuevo= isPostAccionNuevo;
	}
	
	public Boolean getIsPostAccionSinCerrar() {
		return this.isPostAccionSinCerrar;
	}

	public void setIsPostAccionSinCerrar(Boolean isPostAccionSinCerrar) {
		this.isPostAccionSinCerrar= isPostAccionSinCerrar;
	}
	
	public Boolean getIsPostAccionSinMensaje() {
		return this.isPostAccionSinMensaje;
	}

	public void setIsPostAccionSinMensaje(Boolean isPostAccionSinMensaje) {
		this.isPostAccionSinMensaje= isPostAccionSinMensaje;
	}
	
	public Boolean getConGraficoReporte() {
		return this.conGraficoReporte;
	}

	public void setConGraficoReporte(Boolean conGraficoReporte) {
		this.conGraficoReporte= conGraficoReporte;
	}
	
	
	public ArrayList<Reporte> gettiposArchivosReportes() {
		return this.tiposArchivosReportes;
	}
	
	public void settiposArchivosReportes(ArrayList<Reporte> tiposArchivosReportes) {
		this.tiposArchivosReportes = tiposArchivosReportes;
	}
	
	//TIPOS ARCHIVOS DINAMICOS
	public ArrayList<Reporte> gettiposArchivosReportesDinamico() {
		return this.tiposArchivosReportesDinamico;
	}
	
	public void settiposArchivosReportesDinamico(ArrayList<Reporte> tiposArchivosReportesDinamico) {
		this.tiposArchivosReportesDinamico = tiposArchivosReportesDinamico;
	}
	
	//TIPOS REPORTES
	public ArrayList<Reporte> gettiposReportes() {
		return this.tiposReportes;
	}
	
	public void settiposReportes(ArrayList<Reporte> tiposReportes) {
		this.tiposReportes = tiposReportes;
	}
	
	//TIPOS REPORTES
	public ArrayList<Reporte> gettiposReportesDinamico() {
		return this.tiposReportesDinamico;
	}
	
	public void settiposReportesDinamico(ArrayList<Reporte> tiposReportesDinamico) {
		this.tiposReportesDinamico = tiposReportesDinamico;
	}
	
	//TIPOS GRAFICOS REPORTES
	public ArrayList<Reporte> gettiposGraficosReportes() {
		return this.tiposGraficosReportes;
	}
	
	public void settiposGraficosReportes(ArrayList<Reporte> tiposGraficosReportes) {
		this.tiposGraficosReportes = tiposGraficosReportes;
	}
	
	public ArrayList<Reporte> gettiposPaginacion() {
		return this.tiposPaginacion;
	}
	
	public void settiposPaginacion(ArrayList<Reporte> tiposPaginacion) {
		this.tiposPaginacion = tiposPaginacion;
	}
	
	public ArrayList<Reporte> gettiposRelaciones() {
		return this.tiposRelaciones;
	}
	
	public void settiposRelaciones(ArrayList<Reporte> tiposRelaciones) {
		this.tiposRelaciones= tiposRelaciones;
	}
	
	public ArrayList<Reporte> gettiposAcciones() {
		return this.tiposAcciones;
	}
	
	public void settiposAcciones(ArrayList<Reporte> tiposAcciones) {
		this.tiposAcciones = tiposAcciones;
	}
	
	public ArrayList<Reporte> gettiposAccionesFormulario() {
		return this.tiposAccionesFormulario;
	}
	
	public void settiposAccionesFormulario(ArrayList<Reporte> tiposAccionesFormulario) {
		this.tiposAccionesFormulario = tiposAccionesFormulario;
	}
	
	public ArrayList<Reporte> gettiposSeleccionar() {
		return this.tiposSeleccionar;
	}
	
	public void settiposSeleccionar(ArrayList<Reporte> tiposSeleccionar) {
		this.tiposSeleccionar = tiposSeleccionar;
	}
	
	public ArrayList<Reporte> gettiposColumnasSelect() {
		return this.tiposColumnasSelect;
	}
	
	public void settiposColumnasSelect(ArrayList<Reporte> tiposColumnasSelect) {
		this.tiposColumnasSelect = tiposColumnasSelect;
	}
		
	public ArrayList<Reporte> gettiposRelacionesSelect() {
		return this.tiposRelacionesSelect;
	}
	
	public void settiposRelacionesSelect(ArrayList<Reporte> tiposRelacionesSelect) {
		this.tiposRelacionesSelect = tiposRelacionesSelect;
	}
	
	public Long getIIdUsuarioSesion() {
		return lIdUsuarioSesion;
	}

	public void setIIdUsuarioSesion(Long lIdUsuarioSesion) {
		this.lIdUsuarioSesion = lIdUsuarioSesion;
	}
	
	
	public List<Accion> getAccions() {
		return this.accions;
	}

	public void setAccions(List<Accion> accions) {
		this.accions = accions;
	}
	
	public List<Accion> getAccionsFormulario() {
		return this.accionsFormulario;
	}

	public void setAccionsFormulario(List<Accion> accionsFormulario) {
		this.accionsFormulario = accionsFormulario;
	}
	
	public String getsAccionMantenimiento() {
		return sAccionMantenimiento;
	}

	public void setsAccionMantenimiento(String sAccionMantenimiento) {
		this.sAccionMantenimiento = sAccionMantenimiento;
	}

	public String getsAccionBusqueda() {
		return sAccionBusqueda;
	}

	public void setsAccionBusqueda(String sAccionBusqueda) {
		this.sAccionBusqueda = sAccionBusqueda;
	}

	public String getsAccionAdicional() {
		return sAccionAdicional;
	}

	public void setsAccionAdicional(String sAccionAdicional) {
		this.sAccionAdicional = sAccionAdicional;
	}

	public String getsUltimaBusqueda() {
		return sUltimaBusqueda;
	}

	public void setsUltimaBusqueda(String sUltimaBusqueda) {
		this.sUltimaBusqueda = sUltimaBusqueda;
	}
	
	public String getsTipoArchivoReporte() {
		return sTipoArchivoReporte;
	}

	public void setsTipoArchivoReporte(String sTipoArchivoReporte) {
		this.sTipoArchivoReporte = sTipoArchivoReporte;
	}
	
	public String getsTipoArchivoReporteDinamico() {
		return sTipoArchivoReporteDinamico;
	}

	public void setsTipoArchivoReporteDinamico(String sTipoArchivoReporteDinamico) {
		this.sTipoArchivoReporteDinamico = sTipoArchivoReporteDinamico;
	}
	
	public String getsTipoReporte() {
		return sTipoReporte;
	}

	public void setsTipoReporte(String sTipoReporte) {
		this.sTipoReporte = sTipoReporte;
	}
	
	public String getsTipoReporteDinamico() {
		return sTipoReporteDinamico;
	}

	public void setsTipoReporteDinamico(String sTipoReporteDinamico) {
		this.sTipoReporteDinamico = sTipoReporteDinamico;
	}
	
	public String getsTipoGraficoReporte() {
		return sTipoGraficoReporte;
	}

	public void setsTipoGraficoReporte(String sTipoGraficoReporte) {
		this.sTipoGraficoReporte = sTipoGraficoReporte;
	}
	
	public String getsTipoPaginacion() {
		return sTipoPaginacion;
	}

	public void setsTipoPaginacion(String sTipoPaginacion) {
		this.sTipoPaginacion = sTipoPaginacion;
	}
	
	public String getsTipoRelacion() {
		return sTipoRelacion;
	}

	public void setsTipoRelacion(String sTipoRelacion) {
		this.sTipoRelacion = sTipoRelacion;
	}
	
	public String getsTipoAccion() {
		return sTipoAccion;
	}

	public void setsTipoAccion(String sTipoAccion) {
		this.sTipoAccion = sTipoAccion;
	}
	
	public String getsTipoAccionFormulario() {
		return sTipoAccionFormulario;
	}

	public void setsTipoAccionFormulario(String sTipoAccionFormulario) {
		this.sTipoAccionFormulario = sTipoAccionFormulario;
	}
	
	public String getsTipoSeleccionar() {
		return sTipoSeleccionar;
	}

	public void setsTipoSeleccionar(String sTipoSeleccionar) {
		this.sTipoSeleccionar = sTipoSeleccionar;
	}
	
	public String getsValorCampoGeneral() {
		return sValorCampoGeneral;
	}

	public void setsValorCampoGeneral(String sValorCampoGeneral) {
		this.sValorCampoGeneral = sValorCampoGeneral;
	}			

	public String getsDetalleReporte() {
		return sDetalleReporte;
	}

	public void setsDetalleReporte(String sDetalleReporte) {
		this.sDetalleReporte = sDetalleReporte;
	}
	
	
	public String getsTipoReporteExtra() {
		return sTipoReporteExtra;
	}

	public void setsTipoReporteExtra(String sTipoReporteExtra) {
		this.sTipoReporteExtra = sTipoReporteExtra;
	}
	
	public Boolean getesReporteDinamico() {
		return esReporteDinamico;
	}	
	
	public void setesReporteDinamico(Boolean esReporteDinamico) {
		this.esReporteDinamico = esReporteDinamico;
	}
	
	public Boolean getesRecargarFks() {
		return esRecargarFks;
	}	
	
	public void setesRecargarFks(Boolean esRecargarFks) {
		this.esRecargarFks = esRecargarFks;
	}
	
	public Boolean getesReporteAccionProceso() {
		return esReporteAccionProceso;
	}	
	
	public void setesReporteAccionProceso(Boolean esReporteAccionProceso) {
		this.esReporteAccionProceso= esReporteAccionProceso;
	}
		
	public ParametroFactuEmpresaParameterReturnGeneral getParametroFactuEmpresaParameterGeneral() {
		return this.parametrofactuempresaParameterGeneral;
	}
	
	public void setParametroFactuEmpresaParameterGeneral(ParametroFactuEmpresaParameterReturnGeneral parametrofactuempresaParameterGeneral) {
		this.parametrofactuempresaParameterGeneral = parametrofactuempresaParameterGeneral;
	}
	
	public String getsPathReporteDinamico() {
		return sPathReporteDinamico;
	}

	public void setsPathReporteDinamico(String sPathReporteDinamico) {
		this.sPathReporteDinamico = sPathReporteDinamico;
	}
		
	public Boolean getisMostrarNumeroPaginacion() {
		return isMostrarNumeroPaginacion;
	}

	public void setisMostrarNumeroPaginacion(Boolean isMostrarNumeroPaginacion) {
		this.isMostrarNumeroPaginacion = isMostrarNumeroPaginacion;
	}
	
	public Mensaje getMensaje() {
		return mensaje;
	}

	public void setMensaje(Mensaje mensaje) {
		this.mensaje = mensaje;
	}
	
	public Boolean getIsPermisoTodoParametroFactuEmpresa() {
		return isPermisoTodoParametroFactuEmpresa;
	}

	public void setIsPermisoTodoParametroFactuEmpresa(Boolean isPermisoTodoParametroFactuEmpresa) {
		this.isPermisoTodoParametroFactuEmpresa = isPermisoTodoParametroFactuEmpresa;
	}

	public Boolean getIsPermisoNuevoParametroFactuEmpresa() {
		return isPermisoNuevoParametroFactuEmpresa;
	}

	public void setIsPermisoNuevoParametroFactuEmpresa(Boolean isPermisoNuevoParametroFactuEmpresa) {
		this.isPermisoNuevoParametroFactuEmpresa = isPermisoNuevoParametroFactuEmpresa;
	}

	public Boolean getIsPermisoActualizarParametroFactuEmpresa() {
		return isPermisoActualizarParametroFactuEmpresa;
	}

	public void setIsPermisoActualizarParametroFactuEmpresa(Boolean isPermisoActualizarParametroFactuEmpresa) {
		this.isPermisoActualizarParametroFactuEmpresa = isPermisoActualizarParametroFactuEmpresa;
	}

	public Boolean getIsPermisoEliminarParametroFactuEmpresa() {
		return isPermisoEliminarParametroFactuEmpresa;
	}

	public void setIsPermisoEliminarParametroFactuEmpresa(Boolean isPermisoEliminarParametroFactuEmpresa) {
		this.isPermisoEliminarParametroFactuEmpresa = isPermisoEliminarParametroFactuEmpresa;
	}

	public Boolean getIsPermisoGuardarCambiosParametroFactuEmpresa() {
		return isPermisoGuardarCambiosParametroFactuEmpresa;
	}

	public void setIsPermisoGuardarCambiosParametroFactuEmpresa(Boolean isPermisoGuardarCambiosParametroFactuEmpresa) {
		this.isPermisoGuardarCambiosParametroFactuEmpresa = isPermisoGuardarCambiosParametroFactuEmpresa;
	}
	
	public Boolean getIsPermisoConsultaParametroFactuEmpresa() {
		return isPermisoConsultaParametroFactuEmpresa;
	}

	public void setIsPermisoConsultaParametroFactuEmpresa(Boolean isPermisoConsultaParametroFactuEmpresa) {
		this.isPermisoConsultaParametroFactuEmpresa = isPermisoConsultaParametroFactuEmpresa;
	}

	public Boolean getIsPermisoBusquedaParametroFactuEmpresa() {
		return isPermisoBusquedaParametroFactuEmpresa;
	}

	public void setIsPermisoBusquedaParametroFactuEmpresa(Boolean isPermisoBusquedaParametroFactuEmpresa) {
		this.isPermisoBusquedaParametroFactuEmpresa = isPermisoBusquedaParametroFactuEmpresa;
	}

	public Boolean getIsPermisoReporteParametroFactuEmpresa() {
		return isPermisoReporteParametroFactuEmpresa;
	}

	public void setIsPermisoReporteParametroFactuEmpresa(Boolean isPermisoReporteParametroFactuEmpresa) {
		this.isPermisoReporteParametroFactuEmpresa = isPermisoReporteParametroFactuEmpresa;
	}
	
	public Boolean getIsPermisoPaginacionMedioParametroFactuEmpresa() {
		return isPermisoPaginacionMedioParametroFactuEmpresa;
	}

	public void setIsPermisoPaginacionMedioParametroFactuEmpresa(Boolean isPermisoPaginacionMedioParametroFactuEmpresa) {
		this.isPermisoPaginacionMedioParametroFactuEmpresa = isPermisoPaginacionMedioParametroFactuEmpresa;
	}
	
	public Boolean getIsPermisoPaginacionTodoParametroFactuEmpresa() {
		return isPermisoPaginacionTodoParametroFactuEmpresa;
	}

	public void setIsPermisoPaginacionTodoParametroFactuEmpresa(Boolean isPermisoPaginacionTodoParametroFactuEmpresa) {
		this.isPermisoPaginacionTodoParametroFactuEmpresa = isPermisoPaginacionTodoParametroFactuEmpresa;
	}
	
	public Boolean getIsPermisoPaginacionAltoParametroFactuEmpresa() {
		return isPermisoPaginacionAltoParametroFactuEmpresa;
	}

	public void setIsPermisoPaginacionAltoParametroFactuEmpresa(Boolean isPermisoPaginacionAltoParametroFactuEmpresa) {
		this.isPermisoPaginacionAltoParametroFactuEmpresa = isPermisoPaginacionAltoParametroFactuEmpresa;
	}
	
	public Boolean getIsPermisoCopiarParametroFactuEmpresa() {
		return isPermisoCopiarParametroFactuEmpresa;
	}

	public void setIsPermisoCopiarParametroFactuEmpresa(Boolean isPermisoCopiarParametroFactuEmpresa) {
		this.isPermisoCopiarParametroFactuEmpresa = isPermisoCopiarParametroFactuEmpresa;
	}
	
	public Boolean getIsPermisoVerFormParametroFactuEmpresa() {
		return isPermisoVerFormParametroFactuEmpresa;
	}

	public void setIsPermisoVerFormParametroFactuEmpresa(Boolean isPermisoVerFormParametroFactuEmpresa) {
		this.isPermisoVerFormParametroFactuEmpresa = isPermisoVerFormParametroFactuEmpresa;
	}
	
	public Boolean getIsPermisoDuplicarParametroFactuEmpresa() {
		return isPermisoDuplicarParametroFactuEmpresa;
	}

	public void setIsPermisoDuplicarParametroFactuEmpresa(Boolean isPermisoDuplicarParametroFactuEmpresa) {
		this.isPermisoDuplicarParametroFactuEmpresa = isPermisoDuplicarParametroFactuEmpresa;
	}
	
	public Boolean getIsPermisoOrdenParametroFactuEmpresa() {
		return isPermisoOrdenParametroFactuEmpresa;
	}

	public void setIsPermisoOrdenParametroFactuEmpresa(Boolean isPermisoOrdenParametroFactuEmpresa) {
		this.isPermisoOrdenParametroFactuEmpresa = isPermisoOrdenParametroFactuEmpresa;
	}
	
	public String getsVisibilidadTablaBusquedas() {
		return sVisibilidadTablaBusquedas;
	}

	public void setsVisibilidadTablaBusquedas(String sVisibilidadTablaBusquedas) {
		this.sVisibilidadTablaBusquedas = sVisibilidadTablaBusquedas;
	}
	
	public String getsVisibilidadTablaElementos() {
		return sVisibilidadTablaElementos;
	}

	public void setsVisibilidadTablaElementos(String sVisibilidadTablaElementos) {
		this.sVisibilidadTablaElementos = sVisibilidadTablaElementos;
	}

	public String getsVisibilidadTablaAcciones() {
		return sVisibilidadTablaAcciones;
	}

	public void setsVisibilidadTablaAcciones(String sVisibilidadTablaAcciones) {
		this.sVisibilidadTablaAcciones = sVisibilidadTablaAcciones;
	}
	
	public Boolean getIsVisibilidadCeldaNuevoParametroFactuEmpresa() {
		return isVisibilidadCeldaNuevoParametroFactuEmpresa;
	}

	public void setIsVisibilidadCeldaNuevoParametroFactuEmpresa(Boolean isVisibilidadCeldaNuevoParametroFactuEmpresa) {
		this.isVisibilidadCeldaNuevoParametroFactuEmpresa = isVisibilidadCeldaNuevoParametroFactuEmpresa;
	}
	
	public Boolean getIsVisibilidadCeldaDuplicarParametroFactuEmpresa() {
		return isVisibilidadCeldaDuplicarParametroFactuEmpresa;
	}

	public void setIsVisibilidadCeldaDuplicarParametroFactuEmpresa(Boolean isVisibilidadCeldaDuplicarParametroFactuEmpresa) {
		this.isVisibilidadCeldaDuplicarParametroFactuEmpresa = isVisibilidadCeldaDuplicarParametroFactuEmpresa;
	}
	
	public Boolean getIsVisibilidadCeldaCopiarParametroFactuEmpresa() {
		return isVisibilidadCeldaCopiarParametroFactuEmpresa;
	}

	public void setIsVisibilidadCeldaCopiarParametroFactuEmpresa(Boolean isVisibilidadCeldaCopiarParametroFactuEmpresa) {
		this.isVisibilidadCeldaCopiarParametroFactuEmpresa = isVisibilidadCeldaCopiarParametroFactuEmpresa;
	}
	
	public Boolean getIsVisibilidadCeldaVerFormParametroFactuEmpresa() {
		return isVisibilidadCeldaVerFormParametroFactuEmpresa;
	}

	public void setIsVisibilidadCeldaVerFormParametroFactuEmpresa(Boolean isVisibilidadCeldaVerFormParametroFactuEmpresa) {
		this.isVisibilidadCeldaVerFormParametroFactuEmpresa = isVisibilidadCeldaVerFormParametroFactuEmpresa;
	}
	
	public Boolean getIsVisibilidadCeldaOrdenParametroFactuEmpresa() {
		return isVisibilidadCeldaOrdenParametroFactuEmpresa;
	}

	public void setIsVisibilidadCeldaOrdenParametroFactuEmpresa(Boolean isVisibilidadCeldaOrdenParametroFactuEmpresa) {
		this.isVisibilidadCeldaOrdenParametroFactuEmpresa = isVisibilidadCeldaOrdenParametroFactuEmpresa;
	}
	
	public Boolean getIsVisibilidadCeldaNuevoRelacionesParametroFactuEmpresa() {
		return isVisibilidadCeldaNuevoRelacionesParametroFactuEmpresa;
	}

	public void setIsVisibilidadCeldaNuevoRelacionesParametroFactuEmpresa(Boolean isVisibilidadCeldaNuevoRelacionesParametroFactuEmpresa) {
		this.isVisibilidadCeldaNuevoRelacionesParametroFactuEmpresa = isVisibilidadCeldaNuevoRelacionesParametroFactuEmpresa;
	}
	
	public Boolean getIsVisibilidadCeldaModificarParametroFactuEmpresa() {
		return isVisibilidadCeldaModificarParametroFactuEmpresa;
	}

	public void setIsVisibilidadCeldaModificarParametroFactuEmpresa(Boolean isVisibilidadCeldaModificarParametroFactuEmpresa) {
		this.isVisibilidadCeldaModificarParametroFactuEmpresa = isVisibilidadCeldaModificarParametroFactuEmpresa;
	}
	
	public Boolean getIsVisibilidadCeldaActualizarParametroFactuEmpresa() {
		return isVisibilidadCeldaActualizarParametroFactuEmpresa;
	}

	public void setIsVisibilidadCeldaActualizarParametroFactuEmpresa(Boolean isVisibilidadCeldaActualizarParametroFactuEmpresa) {
		this.isVisibilidadCeldaActualizarParametroFactuEmpresa = isVisibilidadCeldaActualizarParametroFactuEmpresa;
	}

	public Boolean getIsVisibilidadCeldaEliminarParametroFactuEmpresa() {
		return isVisibilidadCeldaEliminarParametroFactuEmpresa;
	}

	public void setIsVisibilidadCeldaEliminarParametroFactuEmpresa(Boolean isVisibilidadCeldaEliminarParametroFactuEmpresa) {
		this.isVisibilidadCeldaEliminarParametroFactuEmpresa = isVisibilidadCeldaEliminarParametroFactuEmpresa;
	}

	public Boolean getIsVisibilidadCeldaCancelarParametroFactuEmpresa() {
		return isVisibilidadCeldaCancelarParametroFactuEmpresa;
	}

	public void setIsVisibilidadCeldaCancelarParametroFactuEmpresa(Boolean isVisibilidadCeldaCancelarParametroFactuEmpresa) {
		this.isVisibilidadCeldaCancelarParametroFactuEmpresa = isVisibilidadCeldaCancelarParametroFactuEmpresa;
	}

	public Boolean getIsVisibilidadCeldaGuardarParametroFactuEmpresa() {
		return isVisibilidadCeldaGuardarParametroFactuEmpresa;
	}

	public void setIsVisibilidadCeldaGuardarParametroFactuEmpresa(Boolean isVisibilidadCeldaGuardarParametroFactuEmpresa) {
		this.isVisibilidadCeldaGuardarParametroFactuEmpresa = isVisibilidadCeldaGuardarParametroFactuEmpresa;
	}
	
	public Boolean getIsVisibilidadCeldaGuardarCambiosParametroFactuEmpresa() {
		return isVisibilidadCeldaGuardarCambiosParametroFactuEmpresa;
	}

	public void setIsVisibilidadCeldaGuardarCambiosParametroFactuEmpresa(Boolean isVisibilidadCeldaGuardarCambiosParametroFactuEmpresa) {
		this.isVisibilidadCeldaGuardarCambiosParametroFactuEmpresa = isVisibilidadCeldaGuardarCambiosParametroFactuEmpresa;
	}
		
	public ParametroFactuEmpresaSessionBean getparametrofactuempresaSessionBean() {
		return this.parametrofactuempresaSessionBean;
	}
	
	public void setparametrofactuempresaSessionBean(ParametroFactuEmpresaSessionBean parametrofactuempresaSessionBean) {
		this.parametrofactuempresaSessionBean=parametrofactuempresaSessionBean;
	}
	
	
	public Boolean getisVisibilidadFK_IdBodegaDestino() {
		return this.isVisibilidadFK_IdBodegaDestino;
	}

	public void setisVisibilidadFK_IdBodegaDestino(Boolean isVisibilidadFK_IdBodegaDestino) {
		this.isVisibilidadFK_IdBodegaDestino=isVisibilidadFK_IdBodegaDestino;
	}

	public Boolean getisVisibilidadFK_IdBodegaMultiDestino() {
		return this.isVisibilidadFK_IdBodegaMultiDestino;
	}

	public void setisVisibilidadFK_IdBodegaMultiDestino(Boolean isVisibilidadFK_IdBodegaMultiDestino) {
		this.isVisibilidadFK_IdBodegaMultiDestino=isVisibilidadFK_IdBodegaMultiDestino;
	}

	public Boolean getisVisibilidadFK_IdBodegaMultiOrigen() {
		return this.isVisibilidadFK_IdBodegaMultiOrigen;
	}

	public void setisVisibilidadFK_IdBodegaMultiOrigen(Boolean isVisibilidadFK_IdBodegaMultiOrigen) {
		this.isVisibilidadFK_IdBodegaMultiOrigen=isVisibilidadFK_IdBodegaMultiOrigen;
	}

	public Boolean getisVisibilidadFK_IdBodegaOrigen() {
		return this.isVisibilidadFK_IdBodegaOrigen;
	}

	public void setisVisibilidadFK_IdBodegaOrigen(Boolean isVisibilidadFK_IdBodegaOrigen) {
		this.isVisibilidadFK_IdBodegaOrigen=isVisibilidadFK_IdBodegaOrigen;
	}

	public Boolean getisVisibilidadFK_IdClienteDestino() {
		return this.isVisibilidadFK_IdClienteDestino;
	}

	public void setisVisibilidadFK_IdClienteDestino(Boolean isVisibilidadFK_IdClienteDestino) {
		this.isVisibilidadFK_IdClienteDestino=isVisibilidadFK_IdClienteDestino;
	}

	public Boolean getisVisibilidadFK_IdClienteOrigen() {
		return this.isVisibilidadFK_IdClienteOrigen;
	}

	public void setisVisibilidadFK_IdClienteOrigen(Boolean isVisibilidadFK_IdClienteOrigen) {
		this.isVisibilidadFK_IdClienteOrigen=isVisibilidadFK_IdClienteOrigen;
	}

	public Boolean getisVisibilidadFK_IdEmpresa() {
		return this.isVisibilidadFK_IdEmpresa;
	}

	public void setisVisibilidadFK_IdEmpresa(Boolean isVisibilidadFK_IdEmpresa) {
		this.isVisibilidadFK_IdEmpresa=isVisibilidadFK_IdEmpresa;
	}

	public Boolean getisVisibilidadFK_IdEmpresaDestino() {
		return this.isVisibilidadFK_IdEmpresaDestino;
	}

	public void setisVisibilidadFK_IdEmpresaDestino(Boolean isVisibilidadFK_IdEmpresaDestino) {
		this.isVisibilidadFK_IdEmpresaDestino=isVisibilidadFK_IdEmpresaDestino;
	}

	public Boolean getisVisibilidadFK_IdEmpresaMultiDestino() {
		return this.isVisibilidadFK_IdEmpresaMultiDestino;
	}

	public void setisVisibilidadFK_IdEmpresaMultiDestino(Boolean isVisibilidadFK_IdEmpresaMultiDestino) {
		this.isVisibilidadFK_IdEmpresaMultiDestino=isVisibilidadFK_IdEmpresaMultiDestino;
	}

	public Boolean getisVisibilidadFK_IdEmpresaOrigen() {
		return this.isVisibilidadFK_IdEmpresaOrigen;
	}

	public void setisVisibilidadFK_IdEmpresaOrigen(Boolean isVisibilidadFK_IdEmpresaOrigen) {
		this.isVisibilidadFK_IdEmpresaOrigen=isVisibilidadFK_IdEmpresaOrigen;
	}

	public Boolean getisVisibilidadFK_IdSucursal() {
		return this.isVisibilidadFK_IdSucursal;
	}

	public void setisVisibilidadFK_IdSucursal(Boolean isVisibilidadFK_IdSucursal) {
		this.isVisibilidadFK_IdSucursal=isVisibilidadFK_IdSucursal;
	}

	public Boolean getisVisibilidadFK_IdSucursalDestino() {
		return this.isVisibilidadFK_IdSucursalDestino;
	}

	public void setisVisibilidadFK_IdSucursalDestino(Boolean isVisibilidadFK_IdSucursalDestino) {
		this.isVisibilidadFK_IdSucursalDestino=isVisibilidadFK_IdSucursalDestino;
	}

	public Boolean getisVisibilidadFK_IdSucursalMultiDestino() {
		return this.isVisibilidadFK_IdSucursalMultiDestino;
	}

	public void setisVisibilidadFK_IdSucursalMultiDestino(Boolean isVisibilidadFK_IdSucursalMultiDestino) {
		this.isVisibilidadFK_IdSucursalMultiDestino=isVisibilidadFK_IdSucursalMultiDestino;
	}

	public Boolean getisVisibilidadFK_IdTransaccionDestino() {
		return this.isVisibilidadFK_IdTransaccionDestino;
	}

	public void setisVisibilidadFK_IdTransaccionDestino(Boolean isVisibilidadFK_IdTransaccionDestino) {
		this.isVisibilidadFK_IdTransaccionDestino=isVisibilidadFK_IdTransaccionDestino;
	}

	public Boolean getisVisibilidadFK_IdTransaccionMultiDestino() {
		return this.isVisibilidadFK_IdTransaccionMultiDestino;
	}

	public void setisVisibilidadFK_IdTransaccionMultiDestino(Boolean isVisibilidadFK_IdTransaccionMultiDestino) {
		this.isVisibilidadFK_IdTransaccionMultiDestino=isVisibilidadFK_IdTransaccionMultiDestino;
	}

	public Boolean getisVisibilidadFK_IdTransaccionOrigen() {
		return this.isVisibilidadFK_IdTransaccionOrigen;
	}

	public void setisVisibilidadFK_IdTransaccionOrigen(Boolean isVisibilidadFK_IdTransaccionOrigen) {
		this.isVisibilidadFK_IdTransaccionOrigen=isVisibilidadFK_IdTransaccionOrigen;
	}

	
	
	public void setVariablesFormularioToObjetoActualForeignKeysParametroFactuEmpresa(ParametroFactuEmpresa parametrofactuempresa)throws Exception {
		try {
			
				this.setActualParaGuardarEmpresaForeignKey(parametrofactuempresa,null);
				this.setActualParaGuardarEmpresaOrigenForeignKey(parametrofactuempresa,null);
				this.setActualParaGuardarSucursalForeignKey(parametrofactuempresa,null);
				this.setActualParaGuardarTransaccionOrigenForeignKey(parametrofactuempresa,null);
				this.setActualParaGuardarBodegaOrigenForeignKey(parametrofactuempresa,null);
				this.setActualParaGuardarClienteOrigenForeignKey(parametrofactuempresa,null);
				this.setActualParaGuardarEmpresaDestinoForeignKey(parametrofactuempresa,null);
				this.setActualParaGuardarSucursalDestinoForeignKey(parametrofactuempresa,null);
				this.setActualParaGuardarTransaccionDestinoForeignKey(parametrofactuempresa,null);
				this.setActualParaGuardarBodegaDestinoForeignKey(parametrofactuempresa,null);
				this.setActualParaGuardarClienteDestinoForeignKey(parametrofactuempresa,null);
				this.setActualParaGuardarEmpresaMultiDestinoForeignKey(parametrofactuempresa,null);
				this.setActualParaGuardarSucursalMultiDestinoForeignKey(parametrofactuempresa,null);
				this.setActualParaGuardarTransaccionMultiDestinoForeignKey(parametrofactuempresa,null);
				this.setActualParaGuardarBodegaMultiOrigenForeignKey(parametrofactuempresa,null);
				this.setActualParaGuardarBodegaMultiDestinoForeignKey(parametrofactuempresa,null);
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void cargarLicenciaCliente(DatosCliente datosCliente) throws Exception {
		Boolean existe=false;
			
		try {
				InputStream reportFile=null;
				
				String sPath=this.parametroGeneralUsuario.getpath_exportar()+"erp_bydan/license/license.xml";
				
				reportFile = new FileInputStream(sPath);
				
				Document documentBuilder=null;
				
				if(this.constantes2.DOCUMENT_BUILDER==null) {
					documentBuilder=Funciones2.parseXml(reportFile);
				} else {
					documentBuilder=this.constantes2.DOCUMENT_BUILDER;
				}
				
				//GlobalSeguridad.readXml(documentBuilder);
				
				String sNamePCServerLicencia="";
				String sClaveSistemaLicencia="";
				Date dFechaServerLicencia=null;
				
				//CARGAR ELEMENTOS DE LICENCIA
				NodeList nodeList = documentBuilder.getElementsByTagName("Licencia");
				
				for (int iIndice = 0; iIndice < nodeList.getLength(); iIndice++) {
					Node node = nodeList.item(iIndice);
				
					if (node.getNodeType() == Node.ELEMENT_NODE) {
						Element element = (Element) node;
						 
						sNamePCServerLicencia=element.getElementsByTagName("NombrePc").item(0).getTextContent();
						sClaveSistemaLicencia=element.getElementsByTagName("ClaveSistema").item(0).getTextContent();
						
						existe=true;
						break;
					}
				}														
			
				
			if(existe) {
				datosCliente.setsClaveSistema(sClaveSistemaLicencia);
				
				if(!datosCliente.getsNamePCServer().equals(sNamePCServerLicencia)
					&& !datosCliente.getsNamePCServer().equals("")) {
					
					datosCliente.setsNamePCServer(sNamePCServerLicencia);
				}
			} else {
				throw new Exception("NO EXISTE LICENCIA O NO ESTA BIEN FORMADO");
			}
		} catch(Exception e) {
			throw new Exception("NO EXISTE LICENCIA O NO ESTA BIEN FORMADO");
		}						
	}
	
	public void cargarDatosCliente() throws Exception {
		String sPrimerMacAddress="";		
		String sHostName="";		 
		String sHostIp="";		  
		String sHostUser="";
		
		
		sPrimerMacAddress=FuncionesNetwork.getPrimerMacAddress();		
		sHostName=FuncionesNetwork.getHostName();		 
		sHostIp=FuncionesNetwork.getHostIp();		  
		sHostUser=FuncionesNetwork.getHostUser();
		
		
		this.datosCliente=new DatosCliente();
		if(lIdUsuarioSesion!=null){datosCliente.setIdUsuario(this.lIdUsuarioSesion);}
		
		//SERVIDOR WEB Y TALVEZ SERVIDOR SWING WINDOWS
		this.datosCliente.setsUsuarioPCServer(sHostUser);
		this.datosCliente.setsNamePCServer(sHostName);
		this.datosCliente.setsIPPCServer(sHostIp);
		this.datosCliente.setsMacAddressPCServer(sPrimerMacAddress);
			
			//CLIENTE SWING WINDOWS
			this.datosCliente.setIsClienteWeb(false);
			
			this.datosCliente.setsUsuarioPC(sHostUser);
			this.datosCliente.setsNamePC(sHostName);
			this.datosCliente.setsIPPC(sHostIp);
			this.datosCliente.setsMacAddressPC(sPrimerMacAddress);	
			
			
			//this.cargarLicenciaCliente(this.datosCliente);
			
	}
	
	public void bugActualizarReferenciaActual(ParametroFactuEmpresa parametrofactuempresa,ParametroFactuEmpresa parametrofactuempresaAux) throws Exception {
		//ARCHITECTURE		
		//EL ID NEGATIVO GUARDADO EN ORIGINAL SIRVE PARA VERIFICAR Y ACTUALIZAR EL REGISTRO NUEVO (ID,VERSIONROW)
		this.setCamposBaseDesdeOriginalParametroFactuEmpresa(parametrofactuempresa);
					
		//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
		parametrofactuempresaAux.setId(parametrofactuempresa.getId());
		parametrofactuempresaAux.setVersionRow(parametrofactuempresa.getVersionRow());					
	}
	
	public void ejecutarMantenimiento(MaintenanceType maintenanceType)throws Exception {	
		try	{								
			
			//this.startProcessParametroFactuEmpresa();
		
			int intSelectedRow = this.jTableDatosParametroFactuEmpresa.getSelectedRow();	       
			
			//PUEDE SER -1 CUANDO SE ELIMINA EN GUARDAR CAMBIOS
			if(intSelectedRow>=0 && maintenanceType!=MaintenanceType.GUARDARCAMBIOS) {
				//SE PIEDE INDICE SELECTED CON FILA TOTALES, ASEGURARSE QUE OBJETO ACTUAL ESTE EN FORMULARIO
					
				//ARCHITECTURE
				
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuempresa =(ParametroFactuEmpresa) this.parametrofactuempresaLogic.getParametroFactuEmpresas().toArray()[this.jTableDatosParametroFactuEmpresa.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
					this.parametrofactuempresa =(ParametroFactuEmpresa) this.parametrofactuempresas.toArray()[this.jTableDatosParametroFactuEmpresa.convertRowIndexToModel(intSelectedRow)];
				}
				
				//ARCHITECTURE
				
				if(ParametroFactuEmpresaJInternalFrame.ISBINDING_MANUAL_TABLA) {
					//this.setVariablesFormularioToObjetoActualParametroFactuEmpresa(this.parametrofactuempresa,true);
				}
				
				this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuEmpresa(this.parametrofactuempresa);
			}
			
			//LUEGO DE TRAER DATOS CORRESPONDIENTES QUE COINCIDA LISTA TABLA QUITO FILA TOTALES
			if(this.conTotales) {
				//MEJOR LO DEJO, SI EXISTE EXCEPCION SE PIEDE FILA TOTALES Y ORDEN INDICE FILA ACTUAL
				//this.quitarFilaTotales();
			}
			
			this.cargarDatosCliente();
			
			this.datosDeep=new DatosDeep();
			
			//SE CAMBIA ESTADOS CON ERROR, ENTONCES SE EJECUTA ANTES
			//this.invalidValues = parametrofactuempresaValidator.getInvalidValues(this.parametrofactuempresa);
			
			//if(this.invalidValues==null || this.invalidValues.length<=0) {
			
			parametrofactuempresaLogic.setDatosCliente(datosCliente);
			parametrofactuempresaLogic.setIsConDeep(false);
			
			if(maintenanceType==MaintenanceType.NUEVO) {
				parametrofactuempresaAux=new  ParametroFactuEmpresa();
				
				parametrofactuempresaAux.setIsNew(true);
				parametrofactuempresaAux.setIsChanged(true);
				
				parametrofactuempresaAux.setParametroFactuEmpresaOriginal(this.parametrofactuempresa);
				
				parametrofactuempresaAux.setId(this.parametrofactuempresa.getId());	
				parametrofactuempresaAux.setVersionRow(this.parametrofactuempresa.getVersionRow());	
				parametrofactuempresaAux.setid_empresa(this.parametrofactuempresa.getid_empresa());	
				parametrofactuempresaAux.setid_empresa_origen(this.parametrofactuempresa.getid_empresa_origen());	
				parametrofactuempresaAux.setid_sucursal(this.parametrofactuempresa.getid_sucursal());	
				parametrofactuempresaAux.setid_transaccion_origen(this.parametrofactuempresa.getid_transaccion_origen());	
				parametrofactuempresaAux.setid_bodega_origen(this.parametrofactuempresa.getid_bodega_origen());	
				parametrofactuempresaAux.setid_cliente_origen(this.parametrofactuempresa.getid_cliente_origen());	
				parametrofactuempresaAux.setcosto_origen(this.parametrofactuempresa.getcosto_origen());	
				
				if(this.parametrofactuempresa.getid_empresa_destino()!=null && this.parametrofactuempresa.getid_empresa_destino()>0L) {
					parametrofactuempresaAux.setid_empresa_destino(this.parametrofactuempresa.getid_empresa_destino());
				} else {
					parametrofactuempresaAux.setid_empresa_destino(null);
				}	
				parametrofactuempresaAux.setid_sucursal_destino(this.parametrofactuempresa.getid_sucursal_destino());	
				parametrofactuempresaAux.setid_transaccion_destino(this.parametrofactuempresa.getid_transaccion_destino());	
				parametrofactuempresaAux.setid_bodega_destino(this.parametrofactuempresa.getid_bodega_destino());	
				parametrofactuempresaAux.setid_cliente_destino(this.parametrofactuempresa.getid_cliente_destino());	
				parametrofactuempresaAux.setcosto_destino(this.parametrofactuempresa.getcosto_destino());	
				parametrofactuempresaAux.setcon_transferencia(this.parametrofactuempresa.getcon_transferencia());	
				parametrofactuempresaAux.setid_empresa_multi_destino(this.parametrofactuempresa.getid_empresa_multi_destino());	
				parametrofactuempresaAux.setid_sucursal_multi_destino(this.parametrofactuempresa.getid_sucursal_multi_destino());	
				parametrofactuempresaAux.setid_transaccion_multi_destino(this.parametrofactuempresa.getid_transaccion_multi_destino());	
				parametrofactuempresaAux.setid_bodega_multi_origen(this.parametrofactuempresa.getid_bodega_multi_origen());	
				parametrofactuempresaAux.setid_bodega_multi_destino(this.parametrofactuempresa.getid_bodega_multi_destino());	
								
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//NO ENTENDIBLE PORQUE PONER
					//if(this.parametrofactuempresaSessionBean.getEstaModoGuardarRelaciones() 
					//	|| this.parametrofactuempresaSessionBean.getEsGuardarRelacionado())	{
						actualizarLista(parametrofactuempresaAux,parametrofactuempresaLogic.getParametroFactuEmpresas());
					//}
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(parametrofactuempresaAux,parametrofactuempresas);
				}
				//ARCHITECTURE
				
				if(!isGuardarCambiosEnLote  && !this.parametrofactuempresaSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.parametrofactuempresaSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrofactuempresaLogic.saveParametroFactuEmpresas();//WithConnection
						//parametrofactuempresaLogic.getSetVersionRowParametroFactuEmpresas();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE		
					
					//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
					this.bugActualizarReferenciaActual(this.parametrofactuempresa,parametrofactuempresaAux);
					
					this.refrescarForeignKeysDescripcionesParametroFactuEmpresa();
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					if(this.parametrofactuempresaSessionBean.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
						}
						//ARCHITECTURE	
						
						if(!this.parametrofactuempresaSessionBean.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE
												
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								parametrofactuempresaLogic.saveParametroFactuEmpresaRelaciones(parametrofactuempresaAux);//WithConnection
								//parametrofactuempresaLogic.getSetVersionRowParametroFactuEmpresas();//WithConnection
							} else if(Constantes.ISUSAEJBREMOTE) {
							} else if(Constantes.ISUSAEJBHOME) {
							}
							//ARCHITECTURE
							
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							this.bugActualizarReferenciaActual(this.parametrofactuempresa,parametrofactuempresaAux);
					
					
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE	
						} else {
							
							
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								if(this.parametrofactuempresaSessionBean.getEstaModoGuardarRelaciones() 
									|| this.parametrofactuempresaSessionBean.getEsGuardarRelacionado())	{
									actualizarLista(parametrofactuempresaAux,parametrofactuempresaLogic.getParametroFactuEmpresas());
								}
							} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
								actualizarLista(parametrofactuempresaAux,parametrofactuempresas);
							}
							//ARCHITECTURE
							
							//AQUI EL ID NEGATIVO ES EL ID BUSCADO, YA QUE NO SE GENERA OTRO EN LA DB POR INGRESAR UNO NUEVO
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							//this.bugActualizarReferenciaActual(this.parametrofactuempresa,parametrofactuempresaAux);												
						}
					}
				}
			} else if(maintenanceType==MaintenanceType.ACTUALIZAR) {
				parametrofactuempresaAux=new  ParametroFactuEmpresa();
				
				//PUEDE QUE SE ACTUALIZE ALGUN REGISTRO NUEVO
				if(!this.parametrofactuempresaSessionBean.getEsGuardarRelacionado() 
					|| (this.parametrofactuempresaSessionBean.getEsGuardarRelacionado() && this.parametrofactuempresa.getId()>=0)) {
						
					parametrofactuempresaAux.setIsNew(false);
				}
				
				parametrofactuempresaAux.setIsDeleted(false);
			
				parametrofactuempresaAux.setId(this.parametrofactuempresa.getId());	
				parametrofactuempresaAux.setVersionRow(this.parametrofactuempresa.getVersionRow());	
				parametrofactuempresaAux.setid_empresa(this.parametrofactuempresa.getid_empresa());	
				parametrofactuempresaAux.setid_empresa_origen(this.parametrofactuempresa.getid_empresa_origen());	
				parametrofactuempresaAux.setid_sucursal(this.parametrofactuempresa.getid_sucursal());	
				parametrofactuempresaAux.setid_transaccion_origen(this.parametrofactuempresa.getid_transaccion_origen());	
				parametrofactuempresaAux.setid_bodega_origen(this.parametrofactuempresa.getid_bodega_origen());	
				parametrofactuempresaAux.setid_cliente_origen(this.parametrofactuempresa.getid_cliente_origen());	
				parametrofactuempresaAux.setcosto_origen(this.parametrofactuempresa.getcosto_origen());	
				
				if(this.parametrofactuempresa.getid_empresa_destino()!=null && this.parametrofactuempresa.getid_empresa_destino()>0L) {
					parametrofactuempresaAux.setid_empresa_destino(this.parametrofactuempresa.getid_empresa_destino());
				} else {
					parametrofactuempresaAux.setid_empresa_destino(null);
				}	
				parametrofactuempresaAux.setid_sucursal_destino(this.parametrofactuempresa.getid_sucursal_destino());	
				parametrofactuempresaAux.setid_transaccion_destino(this.parametrofactuempresa.getid_transaccion_destino());	
				parametrofactuempresaAux.setid_bodega_destino(this.parametrofactuempresa.getid_bodega_destino());	
				parametrofactuempresaAux.setid_cliente_destino(this.parametrofactuempresa.getid_cliente_destino());	
				parametrofactuempresaAux.setcosto_destino(this.parametrofactuempresa.getcosto_destino());	
				parametrofactuempresaAux.setcon_transferencia(this.parametrofactuempresa.getcon_transferencia());	
				parametrofactuempresaAux.setid_empresa_multi_destino(this.parametrofactuempresa.getid_empresa_multi_destino());	
				parametrofactuempresaAux.setid_sucursal_multi_destino(this.parametrofactuempresa.getid_sucursal_multi_destino());	
				parametrofactuempresaAux.setid_transaccion_multi_destino(this.parametrofactuempresa.getid_transaccion_multi_destino());	
				parametrofactuempresaAux.setid_bodega_multi_origen(this.parametrofactuempresa.getid_bodega_multi_origen());	
				parametrofactuempresaAux.setid_bodega_multi_destino(this.parametrofactuempresa.getid_bodega_multi_destino());	
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					actualizarLista(parametrofactuempresaAux,parametrofactuempresaLogic.getParametroFactuEmpresas());
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(parametrofactuempresaAux,parametrofactuempresas);
				}
				//ARCHITECTURE
				
				if(!isGuardarCambiosEnLote && !this.parametrofactuempresaSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.parametrofactuempresaSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrofactuempresaLogic.saveParametroFactuEmpresas();//WithConnection
						//parametrofactuempresaLogic.getSetVersionRowParametroFactuEmpresas();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}	
					//ARCHITECTURE
					
					//TALVEZ ESTA DEMAS POR SER UPDATE
					//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
					this.bugActualizarReferenciaActual(this.parametrofactuempresa,parametrofactuempresaAux);
					
					this.refrescarForeignKeysDescripcionesParametroFactuEmpresa();
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					if(this.parametrofactuempresaSessionBean.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
						}
						//ARCHITECTURE
						
						if(!this.parametrofactuempresaSessionBean.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								parametrofactuempresaLogic.saveParametroFactuEmpresaRelaciones(parametrofactuempresaAux);//WithConnection
								//parametrofactuempresaLogic.getSetVersionRowParametroFactuEmpresas();//WithConnection
							} else if(Constantes.ISUSAEJBREMOTE) {
							} else if(Constantes.ISUSAEJBHOME) {
							}
							//ARCHITECTURE
							
							//TALVEZ ESTA DEMAS POR SER UPDATE
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							this.bugActualizarReferenciaActual(this.parametrofactuempresa,parametrofactuempresaAux);
					
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE
						} else {
							
							
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								if(this.parametrofactuempresaSessionBean.getEstaModoGuardarRelaciones() 
									|| this.parametrofactuempresaSessionBean.getEsGuardarRelacionado())	{
									actualizarLista(parametrofactuempresaAux,parametrofactuempresaLogic.getParametroFactuEmpresas());
								}
							} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
								actualizarLista(parametrofactuempresaAux,parametrofactuempresas);
							}
							//ARCHITECTURE
							
							//AQUI EL ID NEGATIVO ES EL ID BUSCADO, YA QUE NO SE GENERA OTRO EN LA DB POR INGRESAR UNO NUEVO							
							//TALVEZ ESTA DEMAS POR SER UPDATE
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							//this.bugActualizarReferenciaActual(this.parametrofactuempresa,parametrofactuempresaAux);
					
						}
					}
				}				
			} else if(maintenanceType==MaintenanceType.ELIMINAR) {
				parametrofactuempresaAux=new  ParametroFactuEmpresa();
				
				parametrofactuempresaAux.setIsNew(false);
				parametrofactuempresaAux.setIsChanged(false);
				
				parametrofactuempresaAux.setIsDeleted(true);
				
				parametrofactuempresaAux.setId(this.parametrofactuempresa.getId());	
				parametrofactuempresaAux.setVersionRow(this.parametrofactuempresa.getVersionRow());	
				parametrofactuempresaAux.setid_empresa(this.parametrofactuempresa.getid_empresa());	
				parametrofactuempresaAux.setid_empresa_origen(this.parametrofactuempresa.getid_empresa_origen());	
				parametrofactuempresaAux.setid_sucursal(this.parametrofactuempresa.getid_sucursal());	
				parametrofactuempresaAux.setid_transaccion_origen(this.parametrofactuempresa.getid_transaccion_origen());	
				parametrofactuempresaAux.setid_bodega_origen(this.parametrofactuempresa.getid_bodega_origen());	
				parametrofactuempresaAux.setid_cliente_origen(this.parametrofactuempresa.getid_cliente_origen());	
				parametrofactuempresaAux.setcosto_origen(this.parametrofactuempresa.getcosto_origen());	
				
				if(this.parametrofactuempresa.getid_empresa_destino()!=null && this.parametrofactuempresa.getid_empresa_destino()>0L) {
					parametrofactuempresaAux.setid_empresa_destino(this.parametrofactuempresa.getid_empresa_destino());
				} else {
					parametrofactuempresaAux.setid_empresa_destino(null);
				}	
				parametrofactuempresaAux.setid_sucursal_destino(this.parametrofactuempresa.getid_sucursal_destino());	
				parametrofactuempresaAux.setid_transaccion_destino(this.parametrofactuempresa.getid_transaccion_destino());	
				parametrofactuempresaAux.setid_bodega_destino(this.parametrofactuempresa.getid_bodega_destino());	
				parametrofactuempresaAux.setid_cliente_destino(this.parametrofactuempresa.getid_cliente_destino());	
				parametrofactuempresaAux.setcosto_destino(this.parametrofactuempresa.getcosto_destino());	
				parametrofactuempresaAux.setcon_transferencia(this.parametrofactuempresa.getcon_transferencia());	
				parametrofactuempresaAux.setid_empresa_multi_destino(this.parametrofactuempresa.getid_empresa_multi_destino());	
				parametrofactuempresaAux.setid_sucursal_multi_destino(this.parametrofactuempresa.getid_sucursal_multi_destino());	
				parametrofactuempresaAux.setid_transaccion_multi_destino(this.parametrofactuempresa.getid_transaccion_multi_destino());	
				parametrofactuempresaAux.setid_bodega_multi_origen(this.parametrofactuempresa.getid_bodega_multi_origen());	
				parametrofactuempresaAux.setid_bodega_multi_destino(this.parametrofactuempresa.getid_bodega_multi_destino());	
				
				if(this.parametrofactuempresaSessionBean.getEsGuardarRelacionado()) {
					//ELEMENTO ACTUAL NO SE HA INGRESADO AL SISTEMA, NO SE PUEDE ELIMINAR ALGO QUE NO EXISTE
					if(this.parametrofactuempresaAux.getId()>=0) {	
						this.parametrofactuempresasEliminados.add(parametrofactuempresaAux);											
					}
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					actualizarLista(parametrofactuempresaAux,parametrofactuempresaLogic.getParametroFactuEmpresas());
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(parametrofactuempresaAux,parametrofactuempresas);
				}
				//ARCHITECTURE
				
				
				if(!isGuardarCambiosEnLote && !this.parametrofactuempresaSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.parametrofactuempresaSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrofactuempresaLogic.saveParametroFactuEmpresas();//WithConnection
						//parametrofactuempresaLogic.getSetVersionRowParametroFactuEmpresas();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}	
					//ARCHITECTURE
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					if(this.parametrofactuempresaSessionBean.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
						}
						//ARCHITECTURE
						
						
						if(!this.parametrofactuempresaSessionBean.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								parametrofactuempresaLogic.saveParametroFactuEmpresaRelaciones(parametrofactuempresaAux);//WithConnection
								//parametrofactuempresaLogic.getSetVersionRowParametroFactuEmpresas();//WithConnection
							} else if(Constantes.ISUSAEJBREMOTE) {
							} else if(Constantes.ISUSAEJBHOME) {
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE
						}
					}  else {
							
						
								
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							if(this.parametrofactuempresaSessionBean.getEstaModoGuardarRelaciones() 
								|| this.parametrofactuempresaSessionBean.getEsGuardarRelacionado())	{
								actualizarLista(parametrofactuempresaAux,parametrofactuempresaLogic.getParametroFactuEmpresas());
							}
						} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
							actualizarLista(parametrofactuempresaAux,parametrofactuempresas);
						}
						//ARCHITECTURE
					}
				}				
			} else if(maintenanceType==MaintenanceType.GUARDARCAMBIOS) {		
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuempresaLogic.getParametroFactuEmpresas().addAll(this.parametrofactuempresasEliminados);
					
					parametrofactuempresaLogic.saveParametroFactuEmpresas();//WithConnection
					//parametrofactuempresaLogic.getSetVersionRowParametroFactuEmpresas();//WithConnection
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}	
				//ARCHITECTURE
				this.refrescarForeignKeysDescripcionesParametroFactuEmpresa();
				
				this.parametrofactuempresasEliminados= new ArrayList<ParametroFactuEmpresa>();		
			}
			
			if(this.parametrofactuempresaSessionBean.getEsGuardarRelacionado()) {
				 this.crearFilaTotales();
			}
			
			
									
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.parametrofactuempresaSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				if(!this.isPostAccionSinMensaje) {
					JOptionPane.showMessageDialog(this,"Parametro Empresa  GUARDADO CORRECTAMENTE","MANTENIMIENTO DE Parametro Empresa ",JOptionPane.INFORMATION_MESSAGE);
					if(maintenanceType==MaintenanceType.NUEVO || maintenanceType==MaintenanceType.ACTUALIZAR) {
						//CUANDO ES NUEVO SE PIERDE REFERENCIA NO SE PORQUE
						this.parametrofactuempresa=parametrofactuempresaAux;
					}
				}
			}
			
			this.isErrorGuardar=false;
			
			this.inicializarInvalidValues();
		/*
		} else {
			this.mostrarInvalidValues();	
		}
		*/
			
		} catch(Exception e) {
			this.isErrorGuardar=true;
			
			this.crearFilaTotales();
			
			throw e;
		} finally {
      		//this.finishProcessParametroFactuEmpresa();
      	}
		
	}	
	
	public void actualizarRelaciones(ParametroFactuEmpresa parametrofactuempresaLocal) throws Exception {
		
		if(this.parametrofactuempresaSessionBean.getConGuardarRelaciones()) {			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
			
			
			} else {
				
			}
		}
	}
	
	public void actualizarRelacionFkPadreActual(ParametroFactuEmpresa parametrofactuempresaLocal) throws Exception {	
		if(this.parametrofactuempresaSessionBean.getEsGuardarRelacionado()) {			
			
		
			if(this.jInternalFrameParent.getClass().equals(EmpresaDetalleFormJInternalFrame.class)) {
				EmpresaBeanSwingJInternalFrame empresaBeanSwingJInternalFrameLocal=(EmpresaBeanSwingJInternalFrame) ((EmpresaDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				empresaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoEmpresa(empresaBeanSwingJInternalFrameLocal.getempresa(),true);
				empresaBeanSwingJInternalFrameLocal.actualizarLista(empresaBeanSwingJInternalFrameLocal.empresa,this.empresasForeignKey);

				empresaBeanSwingJInternalFrameLocal.actualizarRelaciones(empresaBeanSwingJInternalFrameLocal.empresa);

				parametrofactuempresaLocal.setEmpresa(empresaBeanSwingJInternalFrameLocal.empresa);

				this.addItemDefectoCombosForeignKeyEmpresa();
				this.cargarCombosFrameEmpresasForeignKey("Formulario");
				this.setActualEmpresaForeignKey(empresaBeanSwingJInternalFrameLocal.empresa.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(EmpresaDetalleFormJInternalFrame.class)) {
				EmpresaBeanSwingJInternalFrame empresaorigenBeanSwingJInternalFrameLocal=(EmpresaBeanSwingJInternalFrame) ((EmpresaDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				empresaorigenBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoEmpresa(empresaorigenBeanSwingJInternalFrameLocal.getempresa(),true);
				empresaorigenBeanSwingJInternalFrameLocal.actualizarLista(empresaorigenBeanSwingJInternalFrameLocal.empresa,this.empresaorigensForeignKey);

				empresaorigenBeanSwingJInternalFrameLocal.actualizarRelaciones(empresaorigenBeanSwingJInternalFrameLocal.empresa);

				parametrofactuempresaLocal.setEmpresaOrigen(empresaorigenBeanSwingJInternalFrameLocal.empresa);

				this.addItemDefectoCombosForeignKeyEmpresaOrigen();
				this.cargarCombosFrameEmpresaOrigensForeignKey("Formulario");
				this.setActualEmpresaOrigenForeignKey(empresaorigenBeanSwingJInternalFrameLocal.empresa.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(SucursalDetalleFormJInternalFrame.class)) {
				SucursalBeanSwingJInternalFrame sucursalBeanSwingJInternalFrameLocal=(SucursalBeanSwingJInternalFrame) ((SucursalDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				sucursalBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoSucursal(sucursalBeanSwingJInternalFrameLocal.getsucursal(),true);
				sucursalBeanSwingJInternalFrameLocal.actualizarLista(sucursalBeanSwingJInternalFrameLocal.sucursal,this.sucursalsForeignKey);

				sucursalBeanSwingJInternalFrameLocal.actualizarRelaciones(sucursalBeanSwingJInternalFrameLocal.sucursal);

				parametrofactuempresaLocal.setSucursal(sucursalBeanSwingJInternalFrameLocal.sucursal);

				this.addItemDefectoCombosForeignKeySucursal();
				this.cargarCombosFrameSucursalsForeignKey("Formulario");
				this.setActualSucursalForeignKey(sucursalBeanSwingJInternalFrameLocal.sucursal.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TransaccionDetalleFormJInternalFrame.class)) {
				TransaccionBeanSwingJInternalFrame transaccionorigenBeanSwingJInternalFrameLocal=(TransaccionBeanSwingJInternalFrame) ((TransaccionDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				transaccionorigenBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTransaccion(transaccionorigenBeanSwingJInternalFrameLocal.gettransaccion(),true);
				transaccionorigenBeanSwingJInternalFrameLocal.actualizarLista(transaccionorigenBeanSwingJInternalFrameLocal.transaccion,this.transaccionorigensForeignKey);

				transaccionorigenBeanSwingJInternalFrameLocal.actualizarRelaciones(transaccionorigenBeanSwingJInternalFrameLocal.transaccion);

				parametrofactuempresaLocal.setTransaccionOrigen(transaccionorigenBeanSwingJInternalFrameLocal.transaccion);

				this.addItemDefectoCombosForeignKeyTransaccionOrigen();
				this.cargarCombosFrameTransaccionOrigensForeignKey("Formulario");
				this.setActualTransaccionOrigenForeignKey(transaccionorigenBeanSwingJInternalFrameLocal.transaccion.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(BodegaDetalleFormJInternalFrame.class)) {
				BodegaBeanSwingJInternalFrame bodegaorigenBeanSwingJInternalFrameLocal=(BodegaBeanSwingJInternalFrame) ((BodegaDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				bodegaorigenBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoBodega(bodegaorigenBeanSwingJInternalFrameLocal.getbodega(),true);
				bodegaorigenBeanSwingJInternalFrameLocal.actualizarLista(bodegaorigenBeanSwingJInternalFrameLocal.bodega,this.bodegaorigensForeignKey);

				bodegaorigenBeanSwingJInternalFrameLocal.actualizarRelaciones(bodegaorigenBeanSwingJInternalFrameLocal.bodega);

				parametrofactuempresaLocal.setBodegaOrigen(bodegaorigenBeanSwingJInternalFrameLocal.bodega);

				this.addItemDefectoCombosForeignKeyBodegaOrigen();
				this.cargarCombosFrameBodegaOrigensForeignKey("Formulario");
				this.setActualBodegaOrigenForeignKey(bodegaorigenBeanSwingJInternalFrameLocal.bodega.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(ClienteDetalleFormJInternalFrame.class)) {
				ClienteBeanSwingJInternalFrame clienteorigenBeanSwingJInternalFrameLocal=(ClienteBeanSwingJInternalFrame) ((ClienteDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				clienteorigenBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoCliente(clienteorigenBeanSwingJInternalFrameLocal.getcliente(),true);
				clienteorigenBeanSwingJInternalFrameLocal.actualizarLista(clienteorigenBeanSwingJInternalFrameLocal.cliente,this.clienteorigensForeignKey);

				clienteorigenBeanSwingJInternalFrameLocal.actualizarRelaciones(clienteorigenBeanSwingJInternalFrameLocal.cliente);

				parametrofactuempresaLocal.setClienteOrigen(clienteorigenBeanSwingJInternalFrameLocal.cliente);

				this.addItemDefectoCombosForeignKeyClienteOrigen();
				this.cargarCombosFrameClienteOrigensForeignKey("Formulario");
				this.setActualClienteOrigenForeignKey(clienteorigenBeanSwingJInternalFrameLocal.cliente.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(EmpresaDetalleFormJInternalFrame.class)) {
				EmpresaBeanSwingJInternalFrame empresadestinoBeanSwingJInternalFrameLocal=(EmpresaBeanSwingJInternalFrame) ((EmpresaDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				empresadestinoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoEmpresa(empresadestinoBeanSwingJInternalFrameLocal.getempresa(),true);
				empresadestinoBeanSwingJInternalFrameLocal.actualizarLista(empresadestinoBeanSwingJInternalFrameLocal.empresa,this.empresadestinosForeignKey);

				empresadestinoBeanSwingJInternalFrameLocal.actualizarRelaciones(empresadestinoBeanSwingJInternalFrameLocal.empresa);

				parametrofactuempresaLocal.setEmpresaDestino(empresadestinoBeanSwingJInternalFrameLocal.empresa);

				this.addItemDefectoCombosForeignKeyEmpresaDestino();
				this.cargarCombosFrameEmpresaDestinosForeignKey("Formulario");
				this.setActualEmpresaDestinoForeignKey(empresadestinoBeanSwingJInternalFrameLocal.empresa.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(SucursalDetalleFormJInternalFrame.class)) {
				SucursalBeanSwingJInternalFrame sucursaldestinoBeanSwingJInternalFrameLocal=(SucursalBeanSwingJInternalFrame) ((SucursalDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				sucursaldestinoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoSucursal(sucursaldestinoBeanSwingJInternalFrameLocal.getsucursal(),true);
				sucursaldestinoBeanSwingJInternalFrameLocal.actualizarLista(sucursaldestinoBeanSwingJInternalFrameLocal.sucursal,this.sucursaldestinosForeignKey);

				sucursaldestinoBeanSwingJInternalFrameLocal.actualizarRelaciones(sucursaldestinoBeanSwingJInternalFrameLocal.sucursal);

				parametrofactuempresaLocal.setSucursalDestino(sucursaldestinoBeanSwingJInternalFrameLocal.sucursal);

				this.addItemDefectoCombosForeignKeySucursalDestino();
				this.cargarCombosFrameSucursalDestinosForeignKey("Formulario");
				this.setActualSucursalDestinoForeignKey(sucursaldestinoBeanSwingJInternalFrameLocal.sucursal.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TransaccionDetalleFormJInternalFrame.class)) {
				TransaccionBeanSwingJInternalFrame transacciondestinoBeanSwingJInternalFrameLocal=(TransaccionBeanSwingJInternalFrame) ((TransaccionDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				transacciondestinoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTransaccion(transacciondestinoBeanSwingJInternalFrameLocal.gettransaccion(),true);
				transacciondestinoBeanSwingJInternalFrameLocal.actualizarLista(transacciondestinoBeanSwingJInternalFrameLocal.transaccion,this.transacciondestinosForeignKey);

				transacciondestinoBeanSwingJInternalFrameLocal.actualizarRelaciones(transacciondestinoBeanSwingJInternalFrameLocal.transaccion);

				parametrofactuempresaLocal.setTransaccionDestino(transacciondestinoBeanSwingJInternalFrameLocal.transaccion);

				this.addItemDefectoCombosForeignKeyTransaccionDestino();
				this.cargarCombosFrameTransaccionDestinosForeignKey("Formulario");
				this.setActualTransaccionDestinoForeignKey(transacciondestinoBeanSwingJInternalFrameLocal.transaccion.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(BodegaDetalleFormJInternalFrame.class)) {
				BodegaBeanSwingJInternalFrame bodegadestinoBeanSwingJInternalFrameLocal=(BodegaBeanSwingJInternalFrame) ((BodegaDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				bodegadestinoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoBodega(bodegadestinoBeanSwingJInternalFrameLocal.getbodega(),true);
				bodegadestinoBeanSwingJInternalFrameLocal.actualizarLista(bodegadestinoBeanSwingJInternalFrameLocal.bodega,this.bodegadestinosForeignKey);

				bodegadestinoBeanSwingJInternalFrameLocal.actualizarRelaciones(bodegadestinoBeanSwingJInternalFrameLocal.bodega);

				parametrofactuempresaLocal.setBodegaDestino(bodegadestinoBeanSwingJInternalFrameLocal.bodega);

				this.addItemDefectoCombosForeignKeyBodegaDestino();
				this.cargarCombosFrameBodegaDestinosForeignKey("Formulario");
				this.setActualBodegaDestinoForeignKey(bodegadestinoBeanSwingJInternalFrameLocal.bodega.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(ClienteDetalleFormJInternalFrame.class)) {
				ClienteBeanSwingJInternalFrame clientedestinoBeanSwingJInternalFrameLocal=(ClienteBeanSwingJInternalFrame) ((ClienteDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				clientedestinoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoCliente(clientedestinoBeanSwingJInternalFrameLocal.getcliente(),true);
				clientedestinoBeanSwingJInternalFrameLocal.actualizarLista(clientedestinoBeanSwingJInternalFrameLocal.cliente,this.clientedestinosForeignKey);

				clientedestinoBeanSwingJInternalFrameLocal.actualizarRelaciones(clientedestinoBeanSwingJInternalFrameLocal.cliente);

				parametrofactuempresaLocal.setClienteDestino(clientedestinoBeanSwingJInternalFrameLocal.cliente);

				this.addItemDefectoCombosForeignKeyClienteDestino();
				this.cargarCombosFrameClienteDestinosForeignKey("Formulario");
				this.setActualClienteDestinoForeignKey(clientedestinoBeanSwingJInternalFrameLocal.cliente.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(EmpresaDetalleFormJInternalFrame.class)) {
				EmpresaBeanSwingJInternalFrame empresamultidestinoBeanSwingJInternalFrameLocal=(EmpresaBeanSwingJInternalFrame) ((EmpresaDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				empresamultidestinoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoEmpresa(empresamultidestinoBeanSwingJInternalFrameLocal.getempresa(),true);
				empresamultidestinoBeanSwingJInternalFrameLocal.actualizarLista(empresamultidestinoBeanSwingJInternalFrameLocal.empresa,this.empresamultidestinosForeignKey);

				empresamultidestinoBeanSwingJInternalFrameLocal.actualizarRelaciones(empresamultidestinoBeanSwingJInternalFrameLocal.empresa);

				parametrofactuempresaLocal.setEmpresaMultiDestino(empresamultidestinoBeanSwingJInternalFrameLocal.empresa);

				this.addItemDefectoCombosForeignKeyEmpresaMultiDestino();
				this.cargarCombosFrameEmpresaMultiDestinosForeignKey("Formulario");
				this.setActualEmpresaMultiDestinoForeignKey(empresamultidestinoBeanSwingJInternalFrameLocal.empresa.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(SucursalDetalleFormJInternalFrame.class)) {
				SucursalBeanSwingJInternalFrame sucursalmultidestinoBeanSwingJInternalFrameLocal=(SucursalBeanSwingJInternalFrame) ((SucursalDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				sucursalmultidestinoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoSucursal(sucursalmultidestinoBeanSwingJInternalFrameLocal.getsucursal(),true);
				sucursalmultidestinoBeanSwingJInternalFrameLocal.actualizarLista(sucursalmultidestinoBeanSwingJInternalFrameLocal.sucursal,this.sucursalmultidestinosForeignKey);

				sucursalmultidestinoBeanSwingJInternalFrameLocal.actualizarRelaciones(sucursalmultidestinoBeanSwingJInternalFrameLocal.sucursal);

				parametrofactuempresaLocal.setSucursalMultiDestino(sucursalmultidestinoBeanSwingJInternalFrameLocal.sucursal);

				this.addItemDefectoCombosForeignKeySucursalMultiDestino();
				this.cargarCombosFrameSucursalMultiDestinosForeignKey("Formulario");
				this.setActualSucursalMultiDestinoForeignKey(sucursalmultidestinoBeanSwingJInternalFrameLocal.sucursal.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TransaccionDetalleFormJInternalFrame.class)) {
				TransaccionBeanSwingJInternalFrame transaccionmultidestinoBeanSwingJInternalFrameLocal=(TransaccionBeanSwingJInternalFrame) ((TransaccionDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				transaccionmultidestinoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTransaccion(transaccionmultidestinoBeanSwingJInternalFrameLocal.gettransaccion(),true);
				transaccionmultidestinoBeanSwingJInternalFrameLocal.actualizarLista(transaccionmultidestinoBeanSwingJInternalFrameLocal.transaccion,this.transaccionmultidestinosForeignKey);

				transaccionmultidestinoBeanSwingJInternalFrameLocal.actualizarRelaciones(transaccionmultidestinoBeanSwingJInternalFrameLocal.transaccion);

				parametrofactuempresaLocal.setTransaccionMultiDestino(transaccionmultidestinoBeanSwingJInternalFrameLocal.transaccion);

				this.addItemDefectoCombosForeignKeyTransaccionMultiDestino();
				this.cargarCombosFrameTransaccionMultiDestinosForeignKey("Formulario");
				this.setActualTransaccionMultiDestinoForeignKey(transaccionmultidestinoBeanSwingJInternalFrameLocal.transaccion.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(BodegaDetalleFormJInternalFrame.class)) {
				BodegaBeanSwingJInternalFrame bodegamultiorigenBeanSwingJInternalFrameLocal=(BodegaBeanSwingJInternalFrame) ((BodegaDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				bodegamultiorigenBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoBodega(bodegamultiorigenBeanSwingJInternalFrameLocal.getbodega(),true);
				bodegamultiorigenBeanSwingJInternalFrameLocal.actualizarLista(bodegamultiorigenBeanSwingJInternalFrameLocal.bodega,this.bodegamultiorigensForeignKey);

				bodegamultiorigenBeanSwingJInternalFrameLocal.actualizarRelaciones(bodegamultiorigenBeanSwingJInternalFrameLocal.bodega);

				parametrofactuempresaLocal.setBodegaMultiOrigen(bodegamultiorigenBeanSwingJInternalFrameLocal.bodega);

				this.addItemDefectoCombosForeignKeyBodegaMultiOrigen();
				this.cargarCombosFrameBodegaMultiOrigensForeignKey("Formulario");
				this.setActualBodegaMultiOrigenForeignKey(bodegamultiorigenBeanSwingJInternalFrameLocal.bodega.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(BodegaDetalleFormJInternalFrame.class)) {
				BodegaBeanSwingJInternalFrame bodegamultidestinoBeanSwingJInternalFrameLocal=(BodegaBeanSwingJInternalFrame) ((BodegaDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				bodegamultidestinoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoBodega(bodegamultidestinoBeanSwingJInternalFrameLocal.getbodega(),true);
				bodegamultidestinoBeanSwingJInternalFrameLocal.actualizarLista(bodegamultidestinoBeanSwingJInternalFrameLocal.bodega,this.bodegamultidestinosForeignKey);

				bodegamultidestinoBeanSwingJInternalFrameLocal.actualizarRelaciones(bodegamultidestinoBeanSwingJInternalFrameLocal.bodega);

				parametrofactuempresaLocal.setBodegaMultiDestino(bodegamultidestinoBeanSwingJInternalFrameLocal.bodega);

				this.addItemDefectoCombosForeignKeyBodegaMultiDestino();
				this.cargarCombosFrameBodegaMultiDestinosForeignKey("Formulario");
				this.setActualBodegaMultiDestinoForeignKey(bodegamultidestinoBeanSwingJInternalFrameLocal.bodega.getId(),false,"Formulario");
			}
		
		}
	}
	
	public Boolean validarParametroFactuEmpresaActual() throws Exception {
		Boolean estaValidado=false;
		this.inicializarInvalidValues();
		
		/*
		int intSelectedRow = this.jTableDatosParametroFactuEmpresa.getSelectedRow();
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.parametrofactuempresa =(ParametroFactuEmpresa) this.parametrofactuempresaLogic.getParametroFactuEmpresas().toArray()[this.jTableDatosParametroFactuEmpresa.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
			this.parametrofactuempresa =(ParametroFactuEmpresa) this.parametrofactuempresas.toArray()[this.jTableDatosParametroFactuEmpresa.convertRowIndexToModel(intSelectedRow)];
		}
		//ARCHITECTURE
		*/
		
		this.invalidValues = parametrofactuempresaValidator.getInvalidValues(this.parametrofactuempresa);
					
		if(this.invalidValues==null || this.invalidValues.length<=0) {
			estaValidado=true;
		} else {
			this.mostrarInvalidValues();	
		}
		
		return estaValidado;
	}
	
	public void actualizarLista(ParametroFactuEmpresa parametrofactuempresa,List<ParametroFactuEmpresa> parametrofactuempresas) throws Exception {
		try	{		
			ParametroFactuEmpresaConstantesFunciones.actualizarLista(parametrofactuempresa,parametrofactuempresas,this.parametrofactuempresaSessionBean.getEsGuardarRelacionado());		
		} catch(Exception e) {
			throw e;
		}
	}		
	
	public void actualizarSelectedLista(ParametroFactuEmpresa parametrofactuempresa,List<ParametroFactuEmpresa> parametrofactuempresas) throws Exception {
		try	{			
			ParametroFactuEmpresaConstantesFunciones.actualizarSelectedLista(parametrofactuempresa,parametrofactuempresas);
		} catch(Exception e) {
			throw e;
		}
	}	
	
	public Boolean tieneElementosSeleccionados() throws Exception {
		Boolean tiene=false;
		
		List<ParametroFactuEmpresa> parametrofactuempresasLocal=null;
		
		try	{			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				parametrofactuempresasLocal=this.parametrofactuempresaLogic.getParametroFactuEmpresas();
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
				parametrofactuempresasLocal=this.parametrofactuempresas;
			}
			//ARCHITECTURE
		
			for(ParametroFactuEmpresa parametrofactuempresaLocal:parametrofactuempresasLocal) {
				if(this.permiteMantenimiento(parametrofactuempresaLocal) && parametrofactuempresaLocal.getIsSelected()) {
					tiene=true;
					break;
				}
			}
		} catch(Exception e) {
			throw e;
		}
		
		return tiene;
	}			
	
	public void mostrarInvalidValues() throws Exception {
		String sMensaje="";
				
		for (InvalidValue invalidValue : this.invalidValues) {
			sMensaje+="\r\n"+ParametroFactuEmpresaConstantesFunciones.getParametroFactuEmpresaLabelDesdeNombre(invalidValue.getPropertyName())+"->"+invalidValue.getMessage();
			
			//MOSTRAR CAMPOS INVALIDOS
			if(invalidValue.getPropertyName().equals(ParametroFactuEmpresaConstantesFunciones.IDEMPRESA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroFactuEmpresa.jLabelid_empresaParametroFactuEmpresa,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroFactuEmpresaConstantesFunciones.IDEMPRESAORIGEN)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroFactuEmpresa.jLabelid_empresa_origenParametroFactuEmpresa,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroFactuEmpresaConstantesFunciones.IDSUCURSAL)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroFactuEmpresa.jLabelid_sucursalParametroFactuEmpresa,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroFactuEmpresaConstantesFunciones.IDTRANSACCIONORIGEN)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroFactuEmpresa.jLabelid_transaccion_origenParametroFactuEmpresa,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroFactuEmpresaConstantesFunciones.IDBODEGAORIGEN)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroFactuEmpresa.jLabelid_bodega_origenParametroFactuEmpresa,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroFactuEmpresaConstantesFunciones.IDCLIENTEORIGEN)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroFactuEmpresa.jLabelid_cliente_origenParametroFactuEmpresa,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroFactuEmpresaConstantesFunciones.COSTOORIGEN)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroFactuEmpresa.jLabelcosto_origenParametroFactuEmpresa,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroFactuEmpresaConstantesFunciones.IDEMPRESADESTINO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroFactuEmpresa.jLabelid_empresa_destinoParametroFactuEmpresa,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroFactuEmpresaConstantesFunciones.IDSUCURSALDESTINO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroFactuEmpresa.jLabelid_sucursal_destinoParametroFactuEmpresa,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroFactuEmpresaConstantesFunciones.IDTRANSACCIONDESTINO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroFactuEmpresa.jLabelid_transaccion_destinoParametroFactuEmpresa,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroFactuEmpresaConstantesFunciones.IDBODEGADESTINO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroFactuEmpresa.jLabelid_bodega_destinoParametroFactuEmpresa,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroFactuEmpresaConstantesFunciones.IDCLIENTEDESTINO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroFactuEmpresa.jLabelid_cliente_destinoParametroFactuEmpresa,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroFactuEmpresaConstantesFunciones.COSTODESTINO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroFactuEmpresa.jLabelcosto_destinoParametroFactuEmpresa,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroFactuEmpresaConstantesFunciones.CONTRANSFERENCIA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroFactuEmpresa.jLabelcon_transferenciaParametroFactuEmpresa,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroFactuEmpresaConstantesFunciones.IDEMPRESAMULTIDESTINO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroFactuEmpresa.jLabelid_empresa_multi_destinoParametroFactuEmpresa,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroFactuEmpresaConstantesFunciones.IDSUCURSALMULTIDESTINO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroFactuEmpresa.jLabelid_sucursal_multi_destinoParametroFactuEmpresa,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroFactuEmpresaConstantesFunciones.IDTRANSACCIONMULTIDESTINO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroFactuEmpresa.jLabelid_transaccion_multi_destinoParametroFactuEmpresa,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroFactuEmpresaConstantesFunciones.IDBODEGAMULTIORIGEN)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroFactuEmpresa.jLabelid_bodega_multi_origenParametroFactuEmpresa,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroFactuEmpresaConstantesFunciones.IDBODEGAMULTIDESTINO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroFactuEmpresa.jLabelid_bodega_multi_destinoParametroFactuEmpresa,invalidValue.getMessage());}
        }
		
		
		if(!sMensaje.equals("")) {
			//JOptionPane.showMessageDialog(this,sMensaje,"VALIDACION ",JOptionPane.ERROR_MESSAGE);
			throw new Exception(sMensaje);			
		}
		
		/*
		System.out.println(invalidValue);
        System.out.println("message=" + invalidValue.getMessage());
        System.out.println("propertyName=" + invalidValue.getPropertyName());
        System.out.println("propertyPath=" + invalidValue.getPropertyPath());
        System.out.println("value=" + invalidValue.getValue());
        */
	}		
	
	public void inicializarInvalidValues() throws Exception {
		String sMensaje="";	
		
		if(this.jInternalFrameDetalleFormParametroFactuEmpresa!=null) {
		
		//MOSTRAR CAMPOS INVALIDOS
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroFactuEmpresa.jLabelid_empresaParametroFactuEmpresa,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroFactuEmpresa.jLabelid_empresa_origenParametroFactuEmpresa,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroFactuEmpresa.jLabelid_sucursalParametroFactuEmpresa,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroFactuEmpresa.jLabelid_transaccion_origenParametroFactuEmpresa,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroFactuEmpresa.jLabelid_bodega_origenParametroFactuEmpresa,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroFactuEmpresa.jLabelid_cliente_origenParametroFactuEmpresa,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroFactuEmpresa.jLabelcosto_origenParametroFactuEmpresa,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroFactuEmpresa.jLabelid_empresa_destinoParametroFactuEmpresa,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroFactuEmpresa.jLabelid_sucursal_destinoParametroFactuEmpresa,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroFactuEmpresa.jLabelid_transaccion_destinoParametroFactuEmpresa,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroFactuEmpresa.jLabelid_bodega_destinoParametroFactuEmpresa,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroFactuEmpresa.jLabelid_cliente_destinoParametroFactuEmpresa,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroFactuEmpresa.jLabelcosto_destinoParametroFactuEmpresa,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroFactuEmpresa.jLabelcon_transferenciaParametroFactuEmpresa,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroFactuEmpresa.jLabelid_empresa_multi_destinoParametroFactuEmpresa,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroFactuEmpresa.jLabelid_sucursal_multi_destinoParametroFactuEmpresa,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroFactuEmpresa.jLabelid_transaccion_multi_destinoParametroFactuEmpresa,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroFactuEmpresa.jLabelid_bodega_multi_origenParametroFactuEmpresa,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroFactuEmpresa.jLabelid_bodega_multi_destinoParametroFactuEmpresa,"");
		
		}
	}
	
	
	
	public void actualizarObjetoPadreFk(String sTipo)  throws Exception {
		if(sTipo.equals("XXXAuxiliar")) {
		
		}
		
	}
	
	public void nuevoPreparar() throws Exception {
		this.nuevoPreparar(false);
	}
	
	public void nuevoPreparar(Boolean esNuevoGuardarCambios) throws Exception {
		this.iIdNuevoParametroFactuEmpresa--;	
		
		
		this.parametrofactuempresaAux=new ParametroFactuEmpresa();
		
		this.parametrofactuempresaAux.setId(this.iIdNuevoParametroFactuEmpresa);
		this.parametrofactuempresaAux.setIsChanged(true);
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.parametrofactuempresaLogic.getParametroFactuEmpresas().add(this.parametrofactuempresaAux);
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			this.parametrofactuempresas.add(this.parametrofactuempresaAux);
		}
		//ARCHITECTURE
		
		this.parametrofactuempresa=this.parametrofactuempresaAux;
		
		if(ParametroFactuEmpresaJInternalFrame.ISBINDING_MANUAL_TABLA) {
			this.setVariablesObjetoActualToFormularioParametroFactuEmpresa(this.parametrofactuempresa);
			this.setVariablesObjetoActualToFormularioForeignKeyParametroFactuEmpresa(this.parametrofactuempresa);
		}
				
		//this.setDefaultControlesParametroFactuEmpresa();
		
		this.inicializarInvalidValues();
				
		//SELECCIONA ITEM DEFECTO-->SET O SELECTED INDEX
		this.setItemDefectoCombosForeignKeyParametroFactuEmpresa();
		
		
		//INICIALIZA VARIABLES COMBOS GLOBALES A FORMULARIO(ParametroGeneralUsuario)
		this.setVariablesGlobalesCombosForeignKeyParametroFactuEmpresa();
		
		//INICIALIZA VARIABLES COMBOS GLOBALES AUXILIARES A FORMULARIO(Anio,Mes)
		//this.setVariablesGlobalesAuxiliaresCombosForeignKeyParametroFactuEmpresa();
		
		//SI TIENE FOREIGN KEY CON CAMPO esDefecto=true, SE ACTUALIZA A OBJETO ACTUAL
		this.setVariablesForeignKeyObjetoBeanDefectoActualToObjetoActualParametroFactuEmpresa(this.parametrofactuempresaBean,this.parametrofactuempresa,false,false);
		
		//ACTUALIZA VALORES PARA EL OBJETO ACTUAL ANTES DE ENVIARLO A ACTUALIZAR
		this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuEmpresa(this.parametrofactuempresa);
				
		ArrayList<Classe> classes=new ArrayList<Classe>();
		
		if(this.jInternalFrameParent!=null) {
			this.jInternalFrameParent.actualizarObjetoPadreFk(ParametroFactuEmpresaConstantesFunciones.CLASSNAME);
		}	
		
		
		if(this.parametrofactuempresaSessionBean.getConGuardarRelaciones()) {
			classes=ParametroFactuEmpresaConstantesFunciones.getClassesRelationshipsOfParametroFactuEmpresa(new ArrayList<Classe>(),DeepLoadType.NONE);
		}
		
		this.classesActual=new ArrayList<Classe>();
		this.classesActual.addAll(classes);
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {						
			this.parametrofactuempresaReturnGeneral=parametrofactuempresaLogic.procesarEventosParametroFactuEmpresasWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,EventoGlobalTipo.FORM_RECARGAR,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.parametrofactuempresaLogic.getParametroFactuEmpresas(),this.parametrofactuempresa,this.parametrofactuempresaParameterGeneral,this.isEsNuevoParametroFactuEmpresa,classes);//this.parametrofactuempresaLogic.getParametroFactuEmpresa()
						
		} else if(Constantes.ISUSAEJBREMOTE) {
						
		} else if(Constantes.ISUSAEJBHOME) {
		}
		//ARCHITECTURE
		
		//ACTUALIZA VARIABLES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
		//this.setVariablesObjetoReturnGeneralToBeanParametroFactuEmpresa(this.parametrofactuempresaReturnGeneral,this.parametrofactuempresaBean,false);
		
		if(this.parametrofactuempresaReturnGeneral.getConRecargarPropiedades()) {
			//INICIALIZA VARIABLES COMBOS NORMALES (FK)
			this.setVariablesObjetoActualToFormularioForeignKeyParametroFactuEmpresa(this.parametrofactuempresaReturnGeneral.getParametroFactuEmpresa());
			
			//INICIALIZA VARIABLES NORMALES A FORMULARIO(SIN FK)
			this.setVariablesObjetoActualToFormularioParametroFactuEmpresa(this.parametrofactuempresaReturnGeneral.getParametroFactuEmpresa());
		}
		
		if(this.parametrofactuempresaReturnGeneral.getConRecargarRelaciones()) {
			//INICIALIZA VARIABLES RELACIONES A FORMULARIO
			this.setVariablesRelacionesObjetoActualToFormularioParametroFactuEmpresa(this.parametrofactuempresaReturnGeneral.getParametroFactuEmpresa(),classes);//this.parametrofactuempresaBean);	
		}
			
		//ACTUALIZA VARIABLES FORMULARIO A OBJETO ACTUAL (PARA NUEVO TABLA O GUARDAR CAMBIOS
		if(esNuevoGuardarCambios) {
			this.setVariablesFormularioToObjetoActualParametroFactuEmpresa(this.parametrofactuempresa,false);
		}
		
		//INICIALIZA VARIABLES COMBOS DEFAULT DEL PROYECTO(|DEFAULT para FK)
		//this.setVariablesDefaultCombosForeignKeyParametroFactuEmpresa();
		
		//INICIALIZA VARIABLES COMBOS PARAMETRO DEL PROYECTO(|VALORPARAM Era para ParametroModulo, ahora en logic)
		//this.setVariablesParametroCombosForeignKeyParametroFactuEmpresa();						
		
		if(!esNuevoGuardarCambios) {
			//INICIALIZA VARIABLES POR OPCION MENU
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			ParametroFactuEmpresaBeanSwingJInternalFrameAdditional.RecargarFormParametroFactuEmpresa(this,"NUEVO_PREPARAR","",this.arrDatoGeneral);
		
			//NO FUNCIONA BINDINGS			
			this.inicializarActualizarBindingParametroFactuEmpresa(false);
						
			if(parametrofactuempresaSessionBean.getConGuardarRelaciones()) {
				//DEBERIA YA ESTAR CARGADO LOS COMBOS Y SI SE NECESITA ALGO MAS SE DEBE CREAR FUNCION LIMITADA
				//SI DEBE TRAER Y RESETEAR TABLA
								
			}
				
			//SI ES MANUAL
			if(ParametroFactuEmpresaJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualParametroFactuEmpresa();
			}
			
			this.actualizarVisualTableDatosParametroFactuEmpresa();
			
			this.jTableDatosParametroFactuEmpresa.setRowSelectionInterval(this.getIndiceNuevoParametroFactuEmpresa(), this.getIndiceNuevoParametroFactuEmpresa());
			
			this.seleccionarFilaTablaParametroFactuEmpresaActual();
						
			this.actualizarEstadoCeldasBotonesParametroFactuEmpresa("a", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
		
		}		
	}
	
	public void habilitarDeshabilitarControlesParametroFactuEmpresa(Boolean isHabilitar) throws Exception {
		
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jTextFieldcosto_origenParametroFactuEmpresa.setEnabled(isHabilitar && this.parametrofactuempresaConstantesFunciones.activarcosto_origenParametroFactuEmpresa);
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jTextFieldcosto_destinoParametroFactuEmpresa.setEnabled(isHabilitar && this.parametrofactuempresaConstantesFunciones.activarcosto_destinoParametroFactuEmpresa);
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jCheckBoxcon_transferenciaParametroFactuEmpresa.setEnabled(isHabilitar && this.parametrofactuempresaConstantesFunciones.activarcon_transferenciaParametroFactuEmpresa);	
		//
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_empresaParametroFactuEmpresa.setEnabled(isHabilitar && this.parametrofactuempresaConstantesFunciones.activarid_empresaParametroFactuEmpresa);
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_empresa_origenParametroFactuEmpresa.setEnabled(isHabilitar && this.parametrofactuempresaConstantesFunciones.activarid_empresa_origenParametroFactuEmpresa);
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_sucursalParametroFactuEmpresa.setEnabled(isHabilitar && this.parametrofactuempresaConstantesFunciones.activarid_sucursalParametroFactuEmpresa);
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_transaccion_origenParametroFactuEmpresa.setEnabled(isHabilitar && this.parametrofactuempresaConstantesFunciones.activarid_transaccion_origenParametroFactuEmpresa);
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_bodega_origenParametroFactuEmpresa.setEnabled(isHabilitar && this.parametrofactuempresaConstantesFunciones.activarid_bodega_origenParametroFactuEmpresa);
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_cliente_origenParametroFactuEmpresa.setEnabled(isHabilitar && this.parametrofactuempresaConstantesFunciones.activarid_cliente_origenParametroFactuEmpresa);
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_empresa_destinoParametroFactuEmpresa.setEnabled(isHabilitar && this.parametrofactuempresaConstantesFunciones.activarid_empresa_destinoParametroFactuEmpresa);
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_sucursal_destinoParametroFactuEmpresa.setEnabled(isHabilitar && this.parametrofactuempresaConstantesFunciones.activarid_sucursal_destinoParametroFactuEmpresa);
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_transaccion_destinoParametroFactuEmpresa.setEnabled(isHabilitar && this.parametrofactuempresaConstantesFunciones.activarid_transaccion_destinoParametroFactuEmpresa);
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_bodega_destinoParametroFactuEmpresa.setEnabled(isHabilitar && this.parametrofactuempresaConstantesFunciones.activarid_bodega_destinoParametroFactuEmpresa);
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_cliente_destinoParametroFactuEmpresa.setEnabled(isHabilitar && this.parametrofactuempresaConstantesFunciones.activarid_cliente_destinoParametroFactuEmpresa);
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_empresa_multi_destinoParametroFactuEmpresa.setEnabled(isHabilitar && this.parametrofactuempresaConstantesFunciones.activarid_empresa_multi_destinoParametroFactuEmpresa);
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_sucursal_multi_destinoParametroFactuEmpresa.setEnabled(isHabilitar && this.parametrofactuempresaConstantesFunciones.activarid_sucursal_multi_destinoParametroFactuEmpresa);
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_transaccion_multi_destinoParametroFactuEmpresa.setEnabled(isHabilitar && this.parametrofactuempresaConstantesFunciones.activarid_transaccion_multi_destinoParametroFactuEmpresa);
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_bodega_multi_origenParametroFactuEmpresa.setEnabled(isHabilitar && this.parametrofactuempresaConstantesFunciones.activarid_bodega_multi_origenParametroFactuEmpresa);
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_bodega_multi_destinoParametroFactuEmpresa.setEnabled(isHabilitar && this.parametrofactuempresaConstantesFunciones.activarid_bodega_multi_destinoParametroFactuEmpresa);
	};
	
	public void setDefaultControlesParametroFactuEmpresa() throws Exception {
			
	};
	
	
	public void habilitarDeshabilitarTipoMantenimientoParametroFactuEmpresa(Boolean esRelaciones) throws Exception {
		if(esRelaciones) {
			//this.parametrofactuempresaSessionBean.setConGuardarRelaciones(true);			
			this.parametrofactuempresaSessionBean.setEstaModoGuardarRelaciones(true);				
			this.jInternalFrameDetalleFormParametroFactuEmpresa.jTabbedPaneRelacionesParametroFactuEmpresa.setVisible(true);
			
					
		} else {
			//this.parametrofactuempresaSessionBean.setConGuardarRelaciones(false);			
			this.parametrofactuempresaSessionBean.setEstaModoGuardarRelaciones(false);						
			this.jInternalFrameDetalleFormParametroFactuEmpresa.jTabbedPaneRelacionesParametroFactuEmpresa.setVisible(false);
			
			
		}
	};
	
	public int getIndiceNuevoParametroFactuEmpresa() throws Exception {
		int iIndice=0;
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(ParametroFactuEmpresa parametrofactuempresaAux:this.parametrofactuempresaLogic.getParametroFactuEmpresas()) {
				if(parametrofactuempresaAux.getId().equals(this.iIdNuevoParametroFactuEmpresa)) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(ParametroFactuEmpresa parametrofactuempresaAux:this.parametrofactuempresas) {
				if(parametrofactuempresaAux.getId().equals(this.iIdNuevoParametroFactuEmpresa)) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
			iIndice=iIndice-1;
		}
		
		return iIndice;
	}
	
	public int getIndiceActualParametroFactuEmpresa(ParametroFactuEmpresa parametrofactuempresa,Integer iIndiceActual) throws Exception {
		Integer iIndice=0;
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(ParametroFactuEmpresa parametrofactuempresaAux:this.parametrofactuempresaLogic.getParametroFactuEmpresas()) {
				if(parametrofactuempresaAux.getId().equals(parametrofactuempresa.getId())) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(ParametroFactuEmpresa parametrofactuempresaAux:this.parametrofactuempresas) {
				if(parametrofactuempresaAux.getId().equals(parametrofactuempresa.getId())) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
			iIndice=iIndiceActual;
		}
		
		return iIndice;
	}
	
	public void setCamposBaseDesdeOriginalParametroFactuEmpresa(ParametroFactuEmpresa parametrofactuempresaOriginal) throws Exception {
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(ParametroFactuEmpresa parametrofactuempresaAux:this.parametrofactuempresaLogic.getParametroFactuEmpresas()) {
				if(parametrofactuempresaAux.getParametroFactuEmpresaOriginal().getId().equals(parametrofactuempresaOriginal.getId())) {
					existe=true;
					parametrofactuempresaOriginal.setId(parametrofactuempresaAux.getId());
					parametrofactuempresaOriginal.setVersionRow(parametrofactuempresaAux.getVersionRow());
					break;
				}
				
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(ParametroFactuEmpresa parametrofactuempresaAux:this.parametrofactuempresas) {
				if(parametrofactuempresaAux.getParametroFactuEmpresaOriginal().getId().equals(parametrofactuempresaOriginal.getId())) {
					existe=true;
					parametrofactuempresaOriginal.setId(parametrofactuempresaAux.getId());
					parametrofactuempresaOriginal.setVersionRow(parametrofactuempresaAux.getVersionRow());
					break;
				}				
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
		}
	}
	
	public void cancelarNuevosParametroFactuEmpresa(Boolean esParaCancelar) throws Exception {
		parametrofactuempresasAux=new ArrayList<ParametroFactuEmpresa>();
		parametrofactuempresaAux=new ParametroFactuEmpresa();
		
		if(!this.parametrofactuempresaSessionBean.getEsGuardarRelacionado()) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				for(ParametroFactuEmpresa parametrofactuempresaAux:this.parametrofactuempresaLogic.getParametroFactuEmpresas()) {
					if(parametrofactuempresaAux.getId()<0) {
						parametrofactuempresasAux.add(parametrofactuempresaAux);
					}		
				}
				this.iIdNuevoParametroFactuEmpresa=0L;
				this.parametrofactuempresaLogic.getParametroFactuEmpresas().removeAll(parametrofactuempresasAux);
					
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(ParametroFactuEmpresa parametrofactuempresaAux:this.parametrofactuempresas) {
					if(parametrofactuempresaAux.getId()<0) {
						parametrofactuempresasAux.add(parametrofactuempresaAux);
					}		
				}
				this.iIdNuevoParametroFactuEmpresa=0L;
				this.parametrofactuempresas.removeAll(parametrofactuempresasAux);
			}	
		} else {			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				if(esParaCancelar && this.isEsNuevoParametroFactuEmpresa 
					&& this.parametrofactuempresaLogic.getParametroFactuEmpresas().size()>0
					) {
					parametrofactuempresaAux=this.parametrofactuempresaLogic.getParametroFactuEmpresas().get(this.parametrofactuempresaLogic.getParametroFactuEmpresas().size() - 1);
				
					if(parametrofactuempresaAux.getId()<0) {
						this.parametrofactuempresaLogic.getParametroFactuEmpresas().remove(parametrofactuempresaAux);
					}
				}
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				if(esParaCancelar && this.isEsNuevoParametroFactuEmpresa && this.parametrofactuempresas.size()>0) {
					parametrofactuempresaAux=this.parametrofactuempresas.get(this.parametrofactuempresas.size() - 1);
				
					if(parametrofactuempresaAux.getId()<0) {
						this.parametrofactuempresas.remove(parametrofactuempresaAux);
					}
				}
			}	
		}
	}
	
	public void cancelarNuevoParametroFactuEmpresa(Boolean esParaCancelar) throws Exception {
		if(Constantes.ISUSAEJBLOGICLAYER) {
			if(parametrofactuempresa.getId()<0) {
				this.parametrofactuempresaLogic.getParametroFactuEmpresas().remove(this.parametrofactuempresa);
			}					
		} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
			if(parametrofactuempresa.getId()<0) {
				this.parametrofactuempresas.remove(this.parametrofactuempresa);
			}
		}			
	}
	
	public void setEstadosInicialesParametroFactuEmpresa(List<ParametroFactuEmpresa> parametrofactuempresasAux) throws Exception {
		ParametroFactuEmpresaConstantesFunciones.setEstadosInicialesParametroFactuEmpresa(parametrofactuempresasAux);
	}
	
	public void setEstadosInicialesParametroFactuEmpresa(ParametroFactuEmpresa parametrofactuempresaAux) throws Exception {
		ParametroFactuEmpresaConstantesFunciones.setEstadosInicialesParametroFactuEmpresa(parametrofactuempresaAux);		
	}
	
	public void nuevo() throws Exception {
		try	{
			//ESTA VALIDADO EN FUNCION ACTUALIZAR
			//if(this.validarParametroFactuEmpresaActual()) {
				this.ejecutarMantenimiento(MaintenanceType.NUEVO);
				
				this.actualizarEstadoCeldasBotonesParametroFactuEmpresa("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
				
			//}
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,ParametroFactuEmpresaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void actualizar() throws Exception {
		try	{
			if(this.validarParametroFactuEmpresaActual()) {
				if(!this.isEsNuevoParametroFactuEmpresa) {
					this.ejecutarMantenimiento(MaintenanceType.ACTUALIZAR);
					
					this.actualizarEstadoCeldasBotonesParametroFactuEmpresa("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
					
				} else {					
					this.nuevo();
					this.isEsNuevoParametroFactuEmpresa=false;
				}
				
				//SE CANCELA AL FINAL DEL PROCESO JBUTTONACTUALIZAR
				//this.cancelar(false);
			}		
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,ParametroFactuEmpresaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void eliminar() throws Exception {
		try	{	
			if(this.validarParametroFactuEmpresaActual()) {
				if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE ELIMINAR EL/LA Parametro Empresa  ?", "MANTENIMIENTO DE Parametro Empresa ", JOptionPane.OK_CANCEL_OPTION) == 0) {
					this.ejecutarMantenimiento(MaintenanceType.ELIMINAR);			
					this.actualizarEstadoCeldasBotonesParametroFactuEmpresa("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
				}
			
			}
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,ParametroFactuEmpresaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void guardarCambios() throws Exception {
		try	{
			this.ejecutarMantenimiento(MaintenanceType.GUARDARCAMBIOS);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroFactuEmpresaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarAsignar(ParametroFactuEmpresa parametrofactuempresa) throws Exception {
		ParametroFactuEmpresaConstantesFunciones.seleccionarAsignar(this.parametrofactuempresa,parametrofactuempresa);
	}
	
	public void seleccionar() throws Exception {
		try	{
			//ACTUALIZO EL PERMISO ACTUALIZAR CON EL PERMISO ACTUALIZAR ORIGINAL ESTE PERMISO SE UTILIZA PARA EL NUEVO TAMBIEN
			this.isPermisoActualizarParametroFactuEmpresa=this.isPermisoActualizarOriginalParametroFactuEmpresa;
			
			
			this.seleccionarAsignar(parametrofactuempresa);
			
			

			idClienteOrigenActual=parametrofactuempresa.getid_cliente_origen();
			this.seleccionarClienteOrigenActual();

			idClienteDestinoActual=parametrofactuempresa.getid_cliente_destino();
			this.seleccionarClienteDestinoActual();
			
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			ParametroFactuEmpresaConstantesFunciones.quitarEspaciosParametroFactuEmpresa(this.parametrofactuempresa,this.arrDatoGeneral);
			
			
			this.actualizarEstadoCeldasBotonesParametroFactuEmpresa("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroFactuEmpresaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarBusqueda(Long id) throws Exception {
		try	{
			this.parametrofactuempresaSessionBean.setsFuncionBusquedaRapida(this.parametrofactuempresaSessionBean.getsFuncionBusquedaRapida().replace("TO_REPLACE", id.toString()));
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroFactuEmpresaConstantesFunciones.CLASSNAME);
		}
	}
	
	
	//BUSQUEDA INTERNA FK
	public void seleccionarClienteOrigenActual() throws Exception {
		try	{
			Cliente clienteorigenAux=new Cliente();

			if(this.idClienteOrigenActual != null && this.idClienteOrigenActual>0) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					clienteorigenLogic.getEntityWithConnection(this.idClienteOrigenActual);
					clienteorigenAux= clienteorigenLogic.getCliente();
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE

				clienteorigensForeignKey=new ArrayList<Cliente>();
				clienteorigensForeignKey.add(clienteorigenAux);
			}

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}
	public void seleccionarClienteDestinoActual() throws Exception {
		try	{
			Cliente clientedestinoAux=new Cliente();

			if(this.idClienteDestinoActual != null && this.idClienteDestinoActual>0) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					clientedestinoLogic.getEntityWithConnection(this.idClienteDestinoActual);
					clientedestinoAux= clientedestinoLogic.getCliente();
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE

				clientedestinosForeignKey=new ArrayList<Cliente>();
				clientedestinosForeignKey.add(clientedestinoAux);
			}

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}
	
	public void cancelar() throws Exception {
		this.cancelar(true);
	}
	
	public void cancelar(Boolean esParaCancelar) throws Exception {
		try {
														
			
			//SE UTILIZA COLUMNA ELIMINAR EN TABLA
			if(this.isEsNuevoParametroFactuEmpresa) {
				//NO CANCELA TODOS NUEVOS POR FUNCIONALIDAD GUARDAR CAMBIOS
				//this.cancelarNuevosParametroFactuEmpresa(esParaCancelar);				
				this.cancelarNuevoParametroFactuEmpresa(esParaCancelar);								
			}
			
			this.parametrofactuempresa=new ParametroFactuEmpresa();
			
			this.inicializarParametroFactuEmpresa();
			
			this.actualizarEstadoCeldasBotonesParametroFactuEmpresa("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroFactuEmpresaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void inicializarParametroFactuEmpresa() throws Exception {
		try {
			ParametroFactuEmpresaConstantesFunciones.inicializarParametroFactuEmpresa(this.parametrofactuempresa);
			
			} catch(Exception e) {
			throw e;
		}
	}
	
	public void anteriores()throws Exception {
		try	{
			//this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina-this.iNumeroPaginacion;
			
			if(this.iNumeroPaginacionPagina-this.iNumeroPaginacion<this.iNumeroPaginacion) {
				this.iNumeroPaginacionPagina=0;		
			} else {
				this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina-this.iNumeroPaginacion;
			}
			
			this.procesarBusqueda(this.sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroFactuEmpresaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void siguientes()throws Exception {
		try	{			
			if(this.parametrofactuempresaLogic.getParametroFactuEmpresas().size()>0) {
					
				this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina+this.iNumeroPaginacion;
			}
				
			this.procesarBusqueda(this.sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroFactuEmpresaConstantesFunciones.CLASSNAME);
		}
	}		
	
	public void generarReporteParametroFactuEmpresas(String sAccionBusqueda,List<ParametroFactuEmpresa> parametrofactuempresasParaReportes) throws Exception {
		//HttpSession httpSession = httpServletRequest.getSession();
		Long iIdUsuarioSesion=0L;	
		
		
		if(usuarioActual==null) {
			this.usuarioActual=new Usuario();
		}
		
		iIdUsuarioSesion=usuarioActual.getId();
		
		String sPathReportes="";
		
		InputStream reportFile=null;
		InputStream imageFile=null;
			
		imageFile=AuxiliarImagenes.class.getResourceAsStream("LogoReporte.jpg");			
				
		
		String sPathReporteFinal="";
		
		if(!esReporteAccionProceso) {
			if(!this.sTipoReporte.equals("RELACIONES")) {//!isEsReporteRelaciones
				if(!this.esReporteDinamico) {
					sPathReporteFinal="ParametroFactuEmpresa"+this.sTipoReporteExtra+"Design.jasper";
					reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);	
				} else {
					sPathReporteFinal=this.sPathReporteDinamico;
					reportFile = new FileInputStream(sPathReporteFinal);
				}
			} else {
				sPathReporteFinal="ParametroFactuEmpresaMasterRelaciones"+this.sTipoReporteExtra+"Design.jasper";
				reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);
				//sPathReportes=reportFile.getPath().replace("ParametroFactuEmpresaMasterRelacionesDesign.jasper", "");
			}
		} else {
				sPathReporteFinal="ParametroFactuEmpresa"+this.sTipoReporteExtra+"Design.jasper";
				reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);	
		}
		
		if(reportFile==null) {
			throw new JRRuntimeException(sPathReporteFinal+" no existe");
		}
		
		String sUsuario="";
		
		if(usuarioActual!=null) {
			sUsuario=usuarioActual.getuser_name();
		}
		
		Map<String, Object> parameters = new HashMap<String, Object>();
		parameters.put("usuario", sUsuario);
		
		parameters.put("titulo", Funciones.GetTituloSistemaReporte(this.parametroGeneralSg,this.moduloActual,this.usuarioActual));
		parameters.put("subtitulo", "Reporte De  Parametro Empresa s");		
		parameters.put("busquedapor", ParametroFactuEmpresaConstantesFunciones.getNombreIndice(sAccionBusqueda)+sDetalleReporte);
		
		
		if(this.sTipoReporte.equals("RELACIONES")) {//isEsReporteRelaciones
			parameters.put("SUBREPORT_DIR", sPathReportes);
		}
		
		parameters.put("con_grafico", this.conGraficoReporte);
		
		JasperReport jasperReport = (JasperReport)JRLoader.loadObject(reportFile);
				
		this.cargarDatosCliente();
		
		ArrayList<Classe> classes=new ArrayList<Classe>();		
		
		if(this.sTipoReporte.equals("RELACIONES")) {//isEsReporteRelaciones
			
			
		} else {
			//FK DEBERIA TRAERSE DE ANTEMANO
			
		}
								
		
		//CLASSES PARA REPORTES OBJETOS RELACIONADOS
		if(!this.sTipoReporte.equals("RELACIONES")) {//!isEsReporteRelaciones
			classes=new ArrayList<Classe>();
		}
		
		JRBeanArrayDataSource jrbeanArrayDataSourceParametroFactuEmpresa=null;
		
		if(this.sTipoReporteExtra!=null && !this.sTipoReporteExtra.equals("")) {
			ParametroFactuEmpresaConstantesFunciones.S_TIPOREPORTE_EXTRA=this.sTipoReporteExtra;
		} else {
			ParametroFactuEmpresaConstantesFunciones.S_TIPOREPORTE_EXTRA="";
		}
		
		jrbeanArrayDataSourceParametroFactuEmpresa=new JRBeanArrayDataSource(ParametroFactuEmpresaJInternalFrame.TraerParametroFactuEmpresaBeans(parametrofactuempresasParaReportes,classes).toArray());
		
		jasperPrint = JasperFillManager.fillReport(jasperReport,parameters,jrbeanArrayDataSourceParametroFactuEmpresa);
				
		
		String sPathDest=Constantes.SUNIDAD_ARCHIVOS+":/"+Constantes.SCONTEXTSERVER+"/"+ParametroFactuEmpresaConstantesFunciones.SCHEMA+"/reportes";
		
		File filePathDest = new File(sPathDest);
		
		if(!filePathDest.exists()) {
			filePathDest.mkdirs();				
		}
				
		String sDestFileName=sPathDest+"/"+ParametroFactuEmpresaConstantesFunciones.CLASSNAME;
				
		if(this.sTipoArchivoReporte=="VISUALIZAR") {
			JasperViewer jasperViewer = new JasperViewer(jasperPrint,false) ;
			jasperViewer.setVisible(true) ; 

		} else if(this.sTipoArchivoReporte=="HTML"||this.sTipoArchivoReporte=="PDF"||this.sTipoArchivoReporte=="XML") {	
			//JasperFillManager.fillReportToFile(reportFile.getAbsolutePath(),parameters, new JRBeanArrayDataSource(ParametroFactuEmpresaBean.TraerParametroFactuEmpresaBeans(parametrofactuempresasParaReportes).toArray()));
							
			if(this.sTipoArchivoReporte=="HTML") {
				sDestFileName+=".html";
				JasperExportManager.exportReportToHtmlFile(jasperPrint,sDestFileName);
					
			} else if(this.sTipoArchivoReporte=="PDF") {
				sDestFileName+=".pdf";
				JasperExportManager.exportReportToPdfFile(jasperPrint,sDestFileName);
			} else {
				sDestFileName+=".xml";
				JasperExportManager.exportReportToXmlFile(jasperPrint,sDestFileName, false);
			}	
			
		} else if(this.sTipoArchivoReporte=="WORD"||this.sTipoArchivoReporte=="EXCEL") {
				
			if(this.sTipoArchivoReporte=="WORD") {
				sDestFileName+=".rtf";
					
				JRRtfExporter exporter = new JRRtfExporter();
		
				exporter.setParameter(JRExporterParameter.JASPER_PRINT, jasperPrint);
				exporter.setParameter(JRExporterParameter.OUTPUT_FILE_NAME, sDestFileName);
		
				exporter.exportReport();
				
			} else	{
				sDestFileName+=".xls";
					
				JRXlsExporter exporterXls = new JRXlsExporter();
		
				exporterXls.setParameter(JRExporterParameter.JASPER_PRINT, jasperPrint);
				exporterXls.setParameter(JRExporterParameter.OUTPUT_FILE_NAME, sDestFileName);
				exporterXls.setParameter(JRXlsExporterParameter.IS_ONE_PAGE_PER_SHEET, Boolean.TRUE);
		
				exporterXls.exportReport();
			}
			
		} else if(this.sTipoArchivoReporte=="EXCEL2"||this.sTipoArchivoReporte=="EXCEL2_2") {
			//sDestFileName+=".xlsx";
			
			if(this.sTipoReporte.equals("NORMAL")) {
				this.generarExcelReporteParametroFactuEmpresas(sAccionBusqueda,sTipoArchivoReporte,parametrofactuempresasParaReportes);
			
			} else if(this.sTipoReporte.equals("FORMULARIO")){
				this.generarExcelReporteVerticalParametroFactuEmpresas(sAccionBusqueda,sTipoArchivoReporte,parametrofactuempresasParaReportes,false);
			
			} else if(this.sTipoReporte.equals("DINAMICO")){
				
				if(this.sTipoReporteDinamico.equals("NORMAL")) {
					
					this.jButtonGenerarExcelReporteDinamicoParametroFactuEmpresaActionPerformed(null);
					//this.generarExcelReporteParametroFactuEmpresas(sAccionBusqueda,sTipoArchivoReporte,parametrofactuempresasParaReportes);
					
				
				} else if(this.sTipoReporteDinamico.equals("FORMULARIO")){
					this.generarExcelReporteVerticalParametroFactuEmpresas(sAccionBusqueda,sTipoArchivoReporte,parametrofactuempresasParaReportes,true);
				
				} else if(this.sTipoReporteDinamico.equals("RELACIONES")){
					this.generarExcelReporteRelacionesParametroFactuEmpresas(sAccionBusqueda,sTipoArchivoReporte,parametrofactuempresasParaReportes,true);
				}
				
			} else if(this.sTipoReporte.equals("RELACIONES")){
				this.generarExcelReporteRelacionesParametroFactuEmpresas(sAccionBusqueda,sTipoArchivoReporte,parametrofactuempresasParaReportes,false);
			}
		}
		
		if(this.sTipoArchivoReporte=="HTML"||this.sTipoArchivoReporte=="PDF"||this.sTipoArchivoReporte=="XML"||this.sTipoArchivoReporte=="WORD"||this.sTipoArchivoReporte=="EXCEL") {				
			JOptionPane.showMessageDialog(this,"REPORTE "+sDestFileName+" GENERADO SATISFACTORIAMENTE","REPORTES ",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReporteParametroFactuEmpresas(String sAccionBusqueda,String sTipoArchivoReporte,List<ParametroFactuEmpresa> parametrofactuempresasParaReportes) throws Exception {
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"parametrofactuempresa";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("ParametroFactuEmpresas");
         
        int iRow = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		this.generarExcelReporteHeaderParametroFactuEmpresa("NORMAL",row,workbook);
		
		CellStyle cellStyleData = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataAux=null;
		
		int i=0;
		
      	for(ParametroFactuEmpresa parametrofactuempresa : parametrofactuempresasParaReportes) {            
			row = sheet.createRow(iRow++);
			iCell = 0;
			
			cellStyleDataAux=null;
			
			if(i%2==0) {
				cellStyleDataAux=cellStyleData;
			}
			
			ParametroFactuEmpresaConstantesFunciones.generarExcelReporteDataParametroFactuEmpresa("NORMAL",row,workbook,parametrofactuempresa,cellStyleDataAux);
		
			
			/*
            Cell cell0 = row.createCell(0);
            cell0.setCellValue(country.getName());
            Cell cell1 = row.createCell(1);
            cell1.setCellValue(country.getShortCode());
			*/
			
			i++;
        }
        
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.parametrofactuempresaSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Parametro Empresa ",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReporteHeaderParametroFactuEmpresa(String sTipo,Row row,Workbook workbook) {
		
		ParametroFactuEmpresaConstantesFunciones.generarExcelReporteHeaderParametroFactuEmpresa(sTipo,row,workbook);
		
		/*
		Cell cell=null;
		int iCell=0;
		
		CellStyle cellStyle = workbook.createCellStyle();
		cellStyle.setFillBackgroundColor(IndexedColors.GREEN.getIndex());
		cellStyle.setFillPattern(CellStyle.ALIGN_FILL);
		*/
		
	}
	
	public void generarExcelReporteVerticalParametroFactuEmpresas(String sAccionBusqueda,String sTipoArchivoReporte,List<ParametroFactuEmpresa> parametrofactuempresasParaReportes,Boolean paraDinamico) throws Exception {
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"parametrofactuempresa_vertical";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("ParametroFactuEmpresas");
         
        int iRow = 0;
		int iRowLast = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		CellStyle cellStyle = Funciones2.getStyleTitulo(workbook,"ZEBRA");;
		
		CellStyle cellStyleTitulo = Funciones2.getStyleTitulo(workbook,"PRINCIPAL_VERTICAL");
		
		
		for(ParametroFactuEmpresa parametrofactuempresa : parametrofactuempresasParaReportes) {
			row = sheet.createRow(iRow++);
			iRowLast=iRow - 1;
			
			cell = row.createCell(0);
			cell.setCellValue(ParametroFactuEmpresaConstantesFunciones.getParametroFactuEmpresaDescripcion(parametrofactuempresa));
			cell.setCellStyle(cellStyleTitulo);
			
			sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,0,2));			
	
			


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroFactuEmpresaConstantesFunciones.LABEL_IDEMPRESA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroFactuEmpresaConstantesFunciones.LABEL_IDEMPRESA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(parametrofactuempresa.getempresa_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroFactuEmpresaConstantesFunciones.LABEL_IDEMPRESAORIGEN))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroFactuEmpresaConstantesFunciones.LABEL_IDEMPRESAORIGEN);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(parametrofactuempresa.getempresaorigen_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroFactuEmpresaConstantesFunciones.LABEL_IDSUCURSAL))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroFactuEmpresaConstantesFunciones.LABEL_IDSUCURSAL);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(parametrofactuempresa.getsucursal_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroFactuEmpresaConstantesFunciones.LABEL_IDTRANSACCIONORIGEN))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroFactuEmpresaConstantesFunciones.LABEL_IDTRANSACCIONORIGEN);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(parametrofactuempresa.gettransaccionorigen_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroFactuEmpresaConstantesFunciones.LABEL_IDBODEGAORIGEN))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroFactuEmpresaConstantesFunciones.LABEL_IDBODEGAORIGEN);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(parametrofactuempresa.getbodegaorigen_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroFactuEmpresaConstantesFunciones.LABEL_IDCLIENTEORIGEN))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroFactuEmpresaConstantesFunciones.LABEL_IDCLIENTEORIGEN);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(parametrofactuempresa.getclienteorigen_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroFactuEmpresaConstantesFunciones.LABEL_COSTOORIGEN))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroFactuEmpresaConstantesFunciones.LABEL_COSTOORIGEN);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(parametrofactuempresa.getcosto_origen());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroFactuEmpresaConstantesFunciones.LABEL_IDEMPRESADESTINO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroFactuEmpresaConstantesFunciones.LABEL_IDEMPRESADESTINO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(parametrofactuempresa.getempresadestino_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroFactuEmpresaConstantesFunciones.LABEL_IDSUCURSALDESTINO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroFactuEmpresaConstantesFunciones.LABEL_IDSUCURSALDESTINO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(parametrofactuempresa.getsucursaldestino_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroFactuEmpresaConstantesFunciones.LABEL_IDTRANSACCIONDESTINO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroFactuEmpresaConstantesFunciones.LABEL_IDTRANSACCIONDESTINO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(parametrofactuempresa.gettransacciondestino_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroFactuEmpresaConstantesFunciones.LABEL_IDBODEGADESTINO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroFactuEmpresaConstantesFunciones.LABEL_IDBODEGADESTINO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(parametrofactuempresa.getbodegadestino_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroFactuEmpresaConstantesFunciones.LABEL_IDCLIENTEDESTINO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroFactuEmpresaConstantesFunciones.LABEL_IDCLIENTEDESTINO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(parametrofactuempresa.getclientedestino_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroFactuEmpresaConstantesFunciones.LABEL_COSTODESTINO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroFactuEmpresaConstantesFunciones.LABEL_COSTODESTINO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(parametrofactuempresa.getcosto_destino());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroFactuEmpresaConstantesFunciones.LABEL_CONTRANSFERENCIA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroFactuEmpresaConstantesFunciones.LABEL_CONTRANSFERENCIA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(Funciones2.getDescripcionBoolean(parametrofactuempresa.getcon_transferencia()));


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroFactuEmpresaConstantesFunciones.LABEL_IDEMPRESAMULTIDESTINO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroFactuEmpresaConstantesFunciones.LABEL_IDEMPRESAMULTIDESTINO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(parametrofactuempresa.getempresamultidestino_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroFactuEmpresaConstantesFunciones.LABEL_IDSUCURSALMULTIDESTINO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroFactuEmpresaConstantesFunciones.LABEL_IDSUCURSALMULTIDESTINO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(parametrofactuempresa.getsucursalmultidestino_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroFactuEmpresaConstantesFunciones.LABEL_IDTRANSACCIONMULTIDESTINO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroFactuEmpresaConstantesFunciones.LABEL_IDTRANSACCIONMULTIDESTINO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(parametrofactuempresa.gettransaccionmultidestino_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroFactuEmpresaConstantesFunciones.LABEL_IDBODEGAMULTIORIGEN))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroFactuEmpresaConstantesFunciones.LABEL_IDBODEGAMULTIORIGEN);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(parametrofactuempresa.getbodegamultiorigen_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroFactuEmpresaConstantesFunciones.LABEL_IDBODEGAMULTIDESTINO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroFactuEmpresaConstantesFunciones.LABEL_IDBODEGAMULTIDESTINO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(parametrofactuempresa.getbodegamultidestino_descripcion());


			}						
        }
        
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.parametrofactuempresaSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Parametro Empresa ",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReporteRelacionesParametroFactuEmpresas(String sAccionBusqueda,String sTipoArchivoReporte,List<ParametroFactuEmpresa> parametrofactuempresasParaReportes,Boolean paraDinamico) throws Exception {
		
		ArrayList<Classe> classes=new ArrayList<Classe>();
		List<ParametroFactuEmpresa> parametrofactuempresasRespaldo=null;
		
		classes=ParametroFactuEmpresaConstantesFunciones.getClassesRelationshipsOfParametroFactuEmpresa(new ArrayList<Classe>(),DeepLoadType.NONE,false);
					
		this.datosDeep=new DatosDeep();
		
		this.datosDeep.setIsDeep(false);
		this.datosDeep.setDeepLoadType(DeepLoadType.INCLUDE);
		this.datosDeep.setClases(classes);
			
		this.datosCliente.setDatosDeepParametros(false, DeepLoadType.INCLUDE, classes, "");
		this.datosCliente.setIsConDeep(true);	
		this.datosCliente.setIsConExportar(false);
		
						
		this.parametrofactuempresaLogic.setDatosCliente(this.datosCliente);
		this.parametrofactuempresaLogic.setDatosDeep(this.datosDeep);
		this.parametrofactuempresaLogic.setIsConDeep(true);
		
		parametrofactuempresasRespaldo=this.parametrofactuempresaLogic.getParametroFactuEmpresas();
		
		this.parametrofactuempresaLogic.setParametroFactuEmpresas(parametrofactuempresasParaReportes);	
		this.parametrofactuempresaLogic.deepLoadsWithConnection(false, DeepLoadType.INCLUDE, classes,"");
		
		parametrofactuempresasParaReportes=this.parametrofactuempresaLogic.getParametroFactuEmpresas();
		this.parametrofactuempresaLogic.setParametroFactuEmpresas(parametrofactuempresasRespaldo);
		
		
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"parametrofactuempresa_relacion";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("ParametroFactuEmpresas");
         
        int iRow = 0;
		int iRowLast = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		this.generarExcelReporteHeaderParametroFactuEmpresa("NORMAL",row,workbook);
		
		int i=0;
		int i2=0;
		
		CellStyle cellStyleData = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataTitulo = Funciones2.getStyleTitulo(workbook,"PRINCIPAL");
		CellStyle cellStyleDataZebra = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataAux =null;
		CellStyle cellStyleDataAuxHijo =null;
		
		for(ParametroFactuEmpresa parametrofactuempresa : parametrofactuempresasParaReportes) {			
			if(i!=0) {
				row = sheet.createRow(iRow++);				
				this.generarExcelReporteHeaderParametroFactuEmpresa("NORMAL",row,workbook);
			}
			
			cellStyleDataAux=null;
			
			if(i%2==0) {
				//cellStyleDataAux=cellStyleData;
			}
			
			row = sheet.createRow(iRow++);						
			ParametroFactuEmpresaConstantesFunciones.generarExcelReporteDataParametroFactuEmpresa("NORMAL",row,workbook,parametrofactuempresa,cellStyleDataAux);
		
			
			
			
			i++;
        }
        
		/*
		row = sheet.createRow(iRow++);
		iRowLast=iRow - 1;
			
		cell = row.createCell(0);
		cell.setCellValue(ParametroFactuEmpresaConstantesFunciones.getParametroFactuEmpresaDescripcion(parametrofactuempresa));
		cell.setCellStyle(cellStyleTitulo);
			
		sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,0,2));			
		*/
		
			
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.parametrofactuempresaSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Parametro Empresa ",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	
	public Boolean existeColumnaReporteDinamico(String sColumna) {
		Boolean existe=false;
		
		Reporte reporte=new Reporte();
		
		
		for(int index:this.jInternalFrameReporteDinamicoParametroFactuEmpresa.getjListColumnasSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoParametroFactuEmpresa.getjListColumnasSelectReporte().getModel().getElementAt(index);
			
			if(sColumna.equals(reporte.getsCodigo())) {
				existe=true;
				break;
			}
		
		}
		
		
		return existe;
	}
	
	public Boolean existeRelacionReporteDinamico(String sColumna) {
		Boolean existe=false;
		
		Reporte reporte=new Reporte();
		
		
		for(int index:this.jInternalFrameReporteDinamicoParametroFactuEmpresa.getjListRelacionesSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoParametroFactuEmpresa.getjListRelacionesSelectReporte().getModel().getElementAt(index);
			
			if(sColumna.equals(reporte.getsCodigo())) {
				existe=true;
				break;
			}
		
		}
		
		
		return existe;
	}
	
	public void startProcessParametroFactuEmpresa() throws Exception {		
		this.startProcessParametroFactuEmpresa(true);
	}
	
	public void startProcessParametroFactuEmpresa(Boolean conSplash) throws Exception {		
		//FuncionesSwing.enableDisablePanels(false,this.jTabbedPaneBusquedasParametroFactuEmpresa ,this.jPanelParametrosReportesParametroFactuEmpresa, this.jScrollPanelDatosParametroFactuEmpresa,this.jPanelPaginacionParametroFactuEmpresa, this.jScrollPanelDatosEdicionParametroFactuEmpresa, this.jPanelAccionesParametroFactuEmpresa,this.jPanelAccionesFormularioParametroFactuEmpresa,this.jmenuBarParametroFactuEmpresa,this.jmenuBarDetalleParametroFactuEmpresa,this.jTtoolBarParametroFactuEmpresa,this.jTtoolBarDetalleParametroFactuEmpresa);		
		
		final JTabbedPane jTabbedPaneBusquedasParametroFactuEmpresa=this.jTabbedPaneBusquedasParametroFactuEmpresa; 
		
		final JPanel jPanelParametrosReportesParametroFactuEmpresa=this.jPanelParametrosReportesParametroFactuEmpresa;
		//final JScrollPane jScrollPanelDatosParametroFactuEmpresa=this.jScrollPanelDatosParametroFactuEmpresa;
		final JTable jTableDatosParametroFactuEmpresa=this.jTableDatosParametroFactuEmpresa;		
		final JPanel jPanelPaginacionParametroFactuEmpresa=this.jPanelPaginacionParametroFactuEmpresa;
		//final JScrollPane jScrollPanelDatosEdicionParametroFactuEmpresa=this.jScrollPanelDatosEdicionParametroFactuEmpresa;
		final JPanel jPanelAccionesParametroFactuEmpresa=this.jPanelAccionesParametroFactuEmpresa;
		
		JPanel jPanelCamposAuxiliarParametroFactuEmpresa=new JPanelMe();
		JPanel jPanelAccionesFormularioAuxiliarParametroFactuEmpresa=new JPanelMe();
		
		if(this.jInternalFrameDetalleFormParametroFactuEmpresa!=null) {
			jPanelCamposAuxiliarParametroFactuEmpresa=this.jInternalFrameDetalleFormParametroFactuEmpresa.jPanelCamposParametroFactuEmpresa;
			jPanelAccionesFormularioAuxiliarParametroFactuEmpresa=this.jInternalFrameDetalleFormParametroFactuEmpresa.jPanelAccionesFormularioParametroFactuEmpresa;
		}
		
		final JPanel jPanelCamposParametroFactuEmpresa=jPanelCamposAuxiliarParametroFactuEmpresa;
		final JPanel jPanelAccionesFormularioParametroFactuEmpresa=jPanelAccionesFormularioAuxiliarParametroFactuEmpresa;
		
		
		final JMenuBar jmenuBarParametroFactuEmpresa=this.jmenuBarParametroFactuEmpresa;
		final JToolBar jTtoolBarParametroFactuEmpresa=this.jTtoolBarParametroFactuEmpresa;		
		
		
		JMenuBar jmenuBarDetalleAuxiliarParametroFactuEmpresa=new JMenuBar();
		JToolBar jTtoolBarDetalleAuxiliarParametroFactuEmpresa=new JToolBar();		
		
		if(this.jInternalFrameDetalleFormParametroFactuEmpresa!=null) {
			jmenuBarDetalleAuxiliarParametroFactuEmpresa=this.jInternalFrameDetalleFormParametroFactuEmpresa.jmenuBarDetalleParametroFactuEmpresa;
			jTtoolBarDetalleAuxiliarParametroFactuEmpresa=this.jInternalFrameDetalleFormParametroFactuEmpresa.jTtoolBarDetalleParametroFactuEmpresa;
		}
		
		final JMenuBar jmenuBarDetalleParametroFactuEmpresa=jmenuBarDetalleAuxiliarParametroFactuEmpresa;
		final JToolBar jTtoolBarDetalleParametroFactuEmpresa=jTtoolBarDetalleAuxiliarParametroFactuEmpresa;		
		
		
		
		
		
		if(Constantes2.CON_PROCESO_HILO) {
			Thread threadRunnableProcess;
			ProcessRunnable processRunnable;
			
			processRunnable=new ProcessRunnable();
			
			processRunnable.setsTipo("START");
			processRunnable.setDesktop(jDesktopPane);
			processRunnable.setModuloActual(moduloActual);
			processRunnable.setModuloUsuarioSeleccionado(moduloActual);
			processRunnable.setOpcionActual(opcionActual);
			processRunnable.setParametroGeneralSg(parametroGeneralSg);
			processRunnable.setParametroGeneralUsuario(parametroGeneralUsuario);
			processRunnable.setResumenUsuarioActual(resumenUsuarioActual);
			processRunnable.setUsuarioActual(usuarioActual);
			
			processRunnable.jTabbedPaneBusquedas=jTabbedPaneBusquedasParametroFactuEmpresa;
			processRunnable.jPanelParametrosReportes=jPanelParametrosReportesParametroFactuEmpresa;
			processRunnable.jTableDatos=jTableDatosParametroFactuEmpresa;
			processRunnable.jPanelCampos=jPanelCamposParametroFactuEmpresa;
			processRunnable.jPanelPaginacion=jPanelPaginacionParametroFactuEmpresa;
			processRunnable.jPanelAcciones=jPanelAccionesParametroFactuEmpresa;
			processRunnable.jPanelAccionesFormulario=jPanelAccionesFormularioParametroFactuEmpresa;
			
			
			processRunnable.jmenuBar=jmenuBarParametroFactuEmpresa;
			processRunnable.jmenuBarDetalle=jmenuBarDetalleParametroFactuEmpresa;
			processRunnable.jTtoolBar=jTtoolBarParametroFactuEmpresa;
			processRunnable.jTtoolBarDetalle=jTtoolBarDetalleParametroFactuEmpresa;
			processRunnable.jInternalFrameBase=this;
			
			//processRunnable.CargarObjetosRendimientoCriticoModuloInventario();
			
			
			threadRunnableProcess=new Thread(processRunnable);//.start();
					
			threadRunnableProcess.start();
			
		} else {
			FuncionesSwing.enableDisablePanels(false,jTabbedPaneBusquedasParametroFactuEmpresa ,jPanelParametrosReportesParametroFactuEmpresa,jTableDatosParametroFactuEmpresa, /*jScrollPanelDatosParametroFactuEmpresa,*/jPanelCamposParametroFactuEmpresa,jPanelPaginacionParametroFactuEmpresa, /*jScrollPanelDatosEdicionParametroFactuEmpresa,*/ jPanelAccionesParametroFactuEmpresa,jPanelAccionesFormularioParametroFactuEmpresa,jmenuBarParametroFactuEmpresa,jmenuBarDetalleParametroFactuEmpresa,jTtoolBarParametroFactuEmpresa,jTtoolBarDetalleParametroFactuEmpresa);
		
			startProcess();//this.
		}
						
		/*
		if(conSplash) {
			SwingUtilities.invokeLater(new Runnable() {
			      public void run() {
			    	  try {
							FuncionesSwing.enableDisablePanels(false,jTabbedPaneBusquedasParametroFactuEmpresa ,jPanelParametrosReportesParametroFactuEmpresa, jScrollPanelDatosParametroFactuEmpresa,jPanelPaginacionParametroFactuEmpresa, jScrollPanelDatosEdicionParametroFactuEmpresa, jPanelAccionesParametroFactuEmpresa,jPanelAccionesFormularioParametroFactuEmpresa,jmenuBarParametroFactuEmpresa,jmenuBarDetalleParametroFactuEmpresa,jTtoolBarParametroFactuEmpresa,jTtoolBarDetalleParametroFactuEmpresa);
						
							startProcess();//this.
							
						} catch (Exception e) {
							// TODO Auto-generated catch block
							e.printStackTrace();
						}
			      }
			});
		}
		*/
	}
	
	public void finishProcessParametroFactuEmpresa() {// throws Exception 
		this.finishProcessParametroFactuEmpresa(true);
	}
	
	public void finishProcessParametroFactuEmpresa(Boolean conSplash) {// throws Exception 
		//FuncionesSwing.enableDisablePanels(true,this.jTabbedPaneBusquedasParametroFactuEmpresa ,this.jPanelParametrosReportesParametroFactuEmpresa, this.jScrollPanelDatosParametroFactuEmpresa,this.jPanelPaginacionParametroFactuEmpresa, this.jScrollPanelDatosEdicionParametroFactuEmpresa, this.jPanelAccionesParametroFactuEmpresa,this.jPanelAccionesFormularioParametroFactuEmpresa,this.jmenuBarParametroFactuEmpresa,this.jmenuBarDetalleParametroFactuEmpresa,this.jTtoolBarParametroFactuEmpresa,this.jTtoolBarDetalleParametroFactuEmpresa);		
		
		final JTabbedPane jTabbedPaneBusquedasParametroFactuEmpresa=this.jTabbedPaneBusquedasParametroFactuEmpresa; 
		
		final JPanel jPanelParametrosReportesParametroFactuEmpresa=this.jPanelParametrosReportesParametroFactuEmpresa;
		//final JScrollPane jScrollPanelDatosParametroFactuEmpresa=this.jScrollPanelDatosParametroFactuEmpresa;
		final JTable jTableDatosParametroFactuEmpresa=this.jTableDatosParametroFactuEmpresa;		
		final JPanel jPanelPaginacionParametroFactuEmpresa=this.jPanelPaginacionParametroFactuEmpresa;
		//final JScrollPane jScrollPanelDatosEdicionParametroFactuEmpresa=this.jScrollPanelDatosEdicionParametroFactuEmpresa;
		final JPanel jPanelAccionesParametroFactuEmpresa=this.jPanelAccionesParametroFactuEmpresa;
		
		JPanel jPanelCamposAuxiliarParametroFactuEmpresa=new JPanel();
		JPanel jPanelAccionesFormularioAuxiliarParametroFactuEmpresa=new JPanel();
		
		if(this.jInternalFrameDetalleFormParametroFactuEmpresa!=null) {
			jPanelCamposAuxiliarParametroFactuEmpresa=this.jInternalFrameDetalleFormParametroFactuEmpresa.jPanelCamposParametroFactuEmpresa;
			jPanelAccionesFormularioAuxiliarParametroFactuEmpresa=this.jInternalFrameDetalleFormParametroFactuEmpresa.jPanelAccionesFormularioParametroFactuEmpresa;
		}
		
		final JPanel jPanelCamposParametroFactuEmpresa=jPanelCamposAuxiliarParametroFactuEmpresa;
		final JPanel jPanelAccionesFormularioParametroFactuEmpresa=jPanelAccionesFormularioAuxiliarParametroFactuEmpresa;
		
		
		final JMenuBar jmenuBarParametroFactuEmpresa=this.jmenuBarParametroFactuEmpresa;		
		final JToolBar jTtoolBarParametroFactuEmpresa=this.jTtoolBarParametroFactuEmpresa;
				
		JMenuBar jmenuBarDetalleAuxiliarParametroFactuEmpresa=new JMenuBar();
		JToolBar jTtoolBarDetalleAuxiliarParametroFactuEmpresa=new JToolBar();
		
		if(this.jInternalFrameDetalleFormParametroFactuEmpresa!=null) {
			jmenuBarDetalleAuxiliarParametroFactuEmpresa=this.jInternalFrameDetalleFormParametroFactuEmpresa.jmenuBarDetalleParametroFactuEmpresa;
			jTtoolBarDetalleAuxiliarParametroFactuEmpresa=this.jInternalFrameDetalleFormParametroFactuEmpresa.jTtoolBarDetalleParametroFactuEmpresa;		
		}
		
		final JMenuBar jmenuBarDetalleParametroFactuEmpresa=jmenuBarDetalleAuxiliarParametroFactuEmpresa;
		final JToolBar jTtoolBarDetalleParametroFactuEmpresa=jTtoolBarDetalleAuxiliarParametroFactuEmpresa;
		
		
		
		if(Constantes2.CON_PROCESO_HILO) {
			Thread threadRunnableProcess;
			ProcessRunnable processRunnable;
			
			processRunnable=new ProcessRunnable();
			
			processRunnable.setsTipo("END");
			processRunnable.setDesktop(jDesktopPane);
			processRunnable.setModuloActual(moduloActual);
			processRunnable.setModuloUsuarioSeleccionado(moduloActual);
			processRunnable.setOpcionActual(opcionActual);
			processRunnable.setParametroGeneralSg(parametroGeneralSg);
			processRunnable.setParametroGeneralUsuario(parametroGeneralUsuario);
			processRunnable.setResumenUsuarioActual(resumenUsuarioActual);
			processRunnable.setUsuarioActual(usuarioActual);
			
			processRunnable.jTabbedPaneBusquedas=jTabbedPaneBusquedasParametroFactuEmpresa;
			processRunnable.jPanelParametrosReportes=jPanelParametrosReportesParametroFactuEmpresa;
			processRunnable.jTableDatos=jTableDatosParametroFactuEmpresa;
			processRunnable.jPanelCampos=jPanelCamposParametroFactuEmpresa;
			processRunnable.jPanelPaginacion=jPanelPaginacionParametroFactuEmpresa;
			processRunnable.jPanelAcciones=jPanelAccionesParametroFactuEmpresa;
			processRunnable.jPanelAccionesFormulario=jPanelAccionesFormularioParametroFactuEmpresa;
			
			
			processRunnable.jmenuBar=jmenuBarParametroFactuEmpresa;
			processRunnable.jmenuBarDetalle=jmenuBarDetalleParametroFactuEmpresa;
			processRunnable.jTtoolBar=jTtoolBarParametroFactuEmpresa;
			processRunnable.jTtoolBarDetalle=jTtoolBarDetalleParametroFactuEmpresa;
			processRunnable.jInternalFrameBase=this;
			
			//processRunnable.CargarObjetosRendimientoCriticoModuloInventario();
			
			
			threadRunnableProcess=new Thread(processRunnable);//.start();
					
			threadRunnableProcess.start();
			
		} else {
			if(conSplash) {
				SwingUtilities.invokeLater(new RunnableProceso(true,this,jTabbedPaneBusquedasParametroFactuEmpresa ,jPanelParametrosReportesParametroFactuEmpresa, jTableDatosParametroFactuEmpresa,/*jScrollPanelDatosParametroFactuEmpresa,*/jPanelCamposParametroFactuEmpresa,jPanelPaginacionParametroFactuEmpresa, /*jScrollPanelDatosEdicionParametroFactuEmpresa,*/ jPanelAccionesParametroFactuEmpresa,jPanelAccionesFormularioParametroFactuEmpresa,jmenuBarParametroFactuEmpresa,jmenuBarDetalleParametroFactuEmpresa,jTtoolBarParametroFactuEmpresa,jTtoolBarDetalleParametroFactuEmpresa));
			}
		}						
	}
	
	/*
	public void habilitarDeshabilitarControlesParametroFactuEmpresa(Boolean esHabilitar,Boolean conDetalle) {
		this.habilitarDeshabilitarToolBarParametroFactuEmpresa(esHabilitar,conDetalle);
		this.habilitarDeshabilitarMenuParametroFactuEmpresa(esHabilitar,conDetalle);
	}
	
	public void habilitarDeshabilitarToolBarParametroFactuEmpresa(Boolean esHabilitar,Boolean conDetalle) {
		FuncionesSwing.enableDisableComponents(this.jTtoolBarParametroFactuEmpresa,esHabilitar,1,1);
		
		if(conDetalle) {
			FuncionesSwing.enableDisableComponents(this.jTtoolBarDetalleParametroFactuEmpresa,esHabilitar,1,1);
		}
	}
	
	public void habilitarDeshabilitarMenuParametroFactuEmpresa(Boolean esHabilitar,Boolean conDetalle) {
		FuncionesSwing.enableDisableComponents(this.jmenuBarParametroFactuEmpresa,esHabilitar,1,1);
		
		if(conDetalle) {
			FuncionesSwing.enableDisableComponents(this.jmenuBarDetalleParametroFactuEmpresa,esHabilitar,1,1);
		}
	}
	*/
	
	
	
	public void procesarBusqueda(String sAccionBusqueda) throws Exception {		
		String  finalQueryPaginacion=this.parametrofactuempresaConstantesFunciones.getsFinalQueryParametroFactuEmpresa();
		String  finalQueryPaginacionTodos=this.parametrofactuempresaConstantesFunciones.getsFinalQueryParametroFactuEmpresa();
		
		Boolean esBusqueda=false;
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		if(!sAccionBusqueda.equals("Todos"))	{
			esBusqueda=true;
		}
		
		this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
		this.arrDatoGeneralNo= new  ArrayList<String>();
		
		ArrayList<String> arrColumnasGlobalesNo=ParametroFactuEmpresaConstantesFunciones.getArrayColumnasGlobalesNoParametroFactuEmpresa(this.arrDatoGeneral);
		ArrayList<String> arrColumnasGlobales=ParametroFactuEmpresaConstantesFunciones.getArrayColumnasGlobalesParametroFactuEmpresa(this.arrDatoGeneral,arrColumnasGlobalesNo);
		
			
		String  finalQueryGlobal="";
		
		finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,!esBusqueda,esBusqueda,arrColumnasGlobales,ParametroFactuEmpresaConstantesFunciones.TABLENAME);
		
		String sOrderBy="";
		
		
		sOrderBy=Funciones2.getFinalQueryOrderBy(this.arrOrderBy);
		
		
		if(!sOrderBy.equals("")) {			
			finalQueryPaginacion=sOrderBy;
			finalQueryPaginacionTodos=sOrderBy;
		}
		
		
		//INICIALIZA ELIMINADOS
		this.parametrofactuempresasEliminados= new ArrayList<ParametroFactuEmpresa>();
		
		if(!this.isEntroOnLoad) {
			this.onLoad();
		}/* else {
			this.isEntroOnLoad=false;
		}*/
		
		
		
				
		try	{		
			
			//this.startProcessParametroFactuEmpresa();
		
				///*ParametroFactuEmpresaSessionBean*/this.parametrofactuempresaSessionBean=new ParametroFactuEmpresaSessionBean();
			
			if(this.parametrofactuempresaSessionBean==null) {
				this.parametrofactuempresaSessionBean=new ParametroFactuEmpresaSessionBean();
			}
			
			//ACTUALIZA EL TAMANIO DE PAGINACION DESDE EL COMBO
			if(this.sTipoPaginacion!=null && !this.sTipoPaginacion.equals("")) {
				if(!this.sTipoPaginacion.equals("TODOS")) {
					this.iNumeroPaginacion=Integer.parseInt(this.sTipoPaginacion);
				} else {
					this.iNumeroPaginacion=-1;
					this.iNumeroPaginacionPagina=-1;
				}
			} else {
				if(this.iNumeroPaginacion==null || (this.iNumeroPaginacion!=null && this.iNumeroPaginacion<=0)) {
					this.iNumeroPaginacion=ParametroFactuEmpresaConstantesFunciones.INUMEROPAGINACION;
				}
			}
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);
			
			this.cargarDatosCliente();
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			classes=ParametroFactuEmpresaConstantesFunciones.getClassesForeignKeysOfParametroFactuEmpresa(new ArrayList<Classe>(),DeepLoadType.NONE);
			
		
			this.datosDeep=new DatosDeep();
			this.datosDeep.setIsDeep(false);
			this.datosDeep.setDeepLoadType(DeepLoadType.INCLUDE);
			this.datosDeep.setClases(classes);
			
			this.datosCliente.setDatosDeepParametros(false, DeepLoadType.INCLUDE, classes, "");
			this.datosCliente.setIsConDeep(true);
			
			if(false) {//this.conExportar
				this.datosCliente.setIsConExportar(true);
				this.datosCliente.setDatosExportarParametros(Funciones2.getTipoExportar(this.parametroGeneralUsuario),this.parametroGeneralUsuario.getcon_exportar_cabecera(),Funciones2.getTipoDelimiter(this.parametroGeneralUsuario),this.parametroGeneralUsuario.getpath_exportar()+"/parametrofactuempresa."+Funciones2.getTipoExtensionArchivoExportar(this.parametroGeneralUsuario));
			} else {
				this.datosCliente.setIsConExportar(false);
			}
			
			parametrofactuempresasAux= new ArrayList<ParametroFactuEmpresa>();
			
				
			parametrofactuempresaLogic.setDatosCliente(this.datosCliente);
			parametrofactuempresaLogic.setDatosDeep(this.datosDeep);
			parametrofactuempresaLogic.setIsConDeep(true);
			
			
			parametrofactuempresaLogic.getParametroFactuEmpresaDataAccess().setIsForForeingsKeysDataRelationships(true);
			
			if(sAccionBusqueda.equals("Todos") || sAccionBusqueda.equals("Query"))	{	
				if(sAccionBusqueda.equals("Todos")) {
					//FALTA:PARA BUSQUEDAS POR CAMPO EN FORMULARIO
					//this.sFinalQueryGeneral="";
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacionTodos );
					
					parametrofactuempresaLogic.getTodosParametroFactuEmpresas(finalQueryGlobal,pagination);
					
					//parametrofactuempresaLogic.getTodosParametroFactuEmpresasWithConnection(finalQueryGlobal,pagination);										
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
				
				if(parametrofactuempresaLogic.getParametroFactuEmpresas()==null|| parametrofactuempresaLogic.getParametroFactuEmpresas().size()==0)	{
					
				
				}
				
				if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(-1);
						this.pagination.setiMaxResults(-1);
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							parametrofactuempresasAux= new ArrayList<ParametroFactuEmpresa>();
							parametrofactuempresasAux.addAll(parametrofactuempresaLogic.getParametroFactuEmpresas());						
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrofactuempresasAux= new ArrayList<ParametroFactuEmpresa>();
							parametrofactuempresasAux.addAll(parametrofactuempresas);
						}
						//ARCHITECTURE
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							parametrofactuempresaLogic.getTodosParametroFactuEmpresas(finalQueryGlobal+"",this.pagination);												
							
							//parametrofactuempresaLogic.getTodosParametroFactuEmpresasWithConnection(finalQueryGlobal+"",this.pagination);												
						} else if(Constantes.ISUSAEJBREMOTE) {
						} else if(Constantes.ISUSAEJBHOME) {
						}
						//ARCHITECTURE
						
					}
					
					this.generarReporteParametroFactuEmpresas("Todos",parametrofactuempresaLogic.getParametroFactuEmpresas() );
					
					if(false) {//isMostrarTodosResultadosReporte						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							parametrofactuempresaLogic.setParametroFactuEmpresas(new ArrayList<ParametroFactuEmpresa>());					
							parametrofactuempresaLogic.getParametroFactuEmpresas().addAll(parametrofactuempresasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrofactuempresas=new ArrayList<ParametroFactuEmpresa>();
							parametrofactuempresas.addAll(parametrofactuempresasAux);
						}
						//ARCHITECTURE
						
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);														
					}
				}
			}
			else if(sAccionBusqueda.equals("PorId")) {
				Long idParametroFactuEmpresa=0L;
				
				if(this.idActual!=null && this.idActual!=0L) {
					idParametroFactuEmpresa=this.idActual;
				
				} else if(this.idParametroFactuEmpresaActual!=null && this.idParametroFactuEmpresaActual!=0L) {
					idParametroFactuEmpresa=idParametroFactuEmpresaActual;
				}
				
					
				this.sDetalleReporte=ParametroFactuEmpresaConstantesFunciones.getDetalleIndicePorId(idParametroFactuEmpresa);
				
				this.parametrofactuempresas=new ArrayList<ParametroFactuEmpresa>();
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {					
					parametrofactuempresaLogic.getEntity(idParametroFactuEmpresa);
					
					//parametrofactuempresaLogic.getEntityWithConnection(idParametroFactuEmpresa);
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
								
				if(Constantes.ISUSAEJBLOGICLAYER) {
					parametrofactuempresaLogic.setParametroFactuEmpresas(new ArrayList<ParametroFactuEmpresa>());
					parametrofactuempresaLogic.getParametroFactuEmpresas().add(parametrofactuempresaLogic.getParametroFactuEmpresa());
				
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.parametrofactuempresas=new ArrayList<ParametroFactuEmpresa>();
					this.parametrofactuempresas.add(parametrofactuempresa);
				}
				
				if(parametrofactuempresaLogic.getParametroFactuEmpresa()==null)	{
					
				
				}			
			}
			
		
			else if(sAccionBusqueda.equals("FK_IdBodegaDestino")) {
				this.sDetalleReporte=ParametroFactuEmpresaConstantesFunciones.getDetalleIndiceFK_IdBodegaDestino(id_bodega_destinoFK_IdBodegaDestino);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					parametrofactuempresaLogic.getParametroFactuEmpresasFK_IdBodegaDestino(finalQueryGlobal,pagination,id_bodega_destinoFK_IdBodegaDestino);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroFactuEmpresaConstantesFunciones.getDetalleIndiceFK_IdBodegaDestino(id_bodega_destinoFK_IdBodegaDestino);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroFactuEmpresaConstantesFunciones.getDetalleIndiceFK_IdBodegaDestino(id_bodega_destinoFK_IdBodegaDestino);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=parametrofactuempresaLogic.getParametroFactuEmpresas()==null||parametrofactuempresaLogic.getParametroFactuEmpresas().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=parametrofactuempresas==null|| parametrofactuempresas.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrofactuempresasAux=new ArrayList<ParametroFactuEmpresa>();
						parametrofactuempresasAux.addAll(parametrofactuempresaLogic.getParametroFactuEmpresas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrofactuempresasAux=new ArrayList<ParametroFactuEmpresa>();
							parametrofactuempresasAux.addAll(parametrofactuempresas);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							parametrofactuempresaLogic.getParametroFactuEmpresasFK_IdBodegaDestino(finalQueryGlobal,pagination,id_bodega_destinoFK_IdBodegaDestino);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroFactuEmpresaConstantesFunciones.getDetalleIndiceFK_IdBodegaDestino(id_bodega_destinoFK_IdBodegaDestino);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroFactuEmpresaConstantesFunciones.getDetalleIndiceFK_IdBodegaDestino(id_bodega_destinoFK_IdBodegaDestino);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteParametroFactuEmpresas("FK_IdBodegaDestino",parametrofactuempresaLogic.getParametroFactuEmpresas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteParametroFactuEmpresas("FK_IdBodegaDestino",parametrofactuempresas);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrofactuempresaLogic.setParametroFactuEmpresas(new ArrayList<ParametroFactuEmpresa>());
						parametrofactuempresaLogic.getParametroFactuEmpresas().addAll(parametrofactuempresasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrofactuempresas=new ArrayList<ParametroFactuEmpresa>();
							parametrofactuempresas.addAll(parametrofactuempresasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdBodegaMultiDestino")) {
				this.sDetalleReporte=ParametroFactuEmpresaConstantesFunciones.getDetalleIndiceFK_IdBodegaMultiDestino(id_bodega_multi_destinoFK_IdBodegaMultiDestino);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					parametrofactuempresaLogic.getParametroFactuEmpresasFK_IdBodegaMultiDestino(finalQueryGlobal,pagination,id_bodega_multi_destinoFK_IdBodegaMultiDestino);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroFactuEmpresaConstantesFunciones.getDetalleIndiceFK_IdBodegaMultiDestino(id_bodega_multi_destinoFK_IdBodegaMultiDestino);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroFactuEmpresaConstantesFunciones.getDetalleIndiceFK_IdBodegaMultiDestino(id_bodega_multi_destinoFK_IdBodegaMultiDestino);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=parametrofactuempresaLogic.getParametroFactuEmpresas()==null||parametrofactuempresaLogic.getParametroFactuEmpresas().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=parametrofactuempresas==null|| parametrofactuempresas.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrofactuempresasAux=new ArrayList<ParametroFactuEmpresa>();
						parametrofactuempresasAux.addAll(parametrofactuempresaLogic.getParametroFactuEmpresas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrofactuempresasAux=new ArrayList<ParametroFactuEmpresa>();
							parametrofactuempresasAux.addAll(parametrofactuempresas);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							parametrofactuempresaLogic.getParametroFactuEmpresasFK_IdBodegaMultiDestino(finalQueryGlobal,pagination,id_bodega_multi_destinoFK_IdBodegaMultiDestino);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroFactuEmpresaConstantesFunciones.getDetalleIndiceFK_IdBodegaMultiDestino(id_bodega_multi_destinoFK_IdBodegaMultiDestino);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroFactuEmpresaConstantesFunciones.getDetalleIndiceFK_IdBodegaMultiDestino(id_bodega_multi_destinoFK_IdBodegaMultiDestino);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteParametroFactuEmpresas("FK_IdBodegaMultiDestino",parametrofactuempresaLogic.getParametroFactuEmpresas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteParametroFactuEmpresas("FK_IdBodegaMultiDestino",parametrofactuempresas);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrofactuempresaLogic.setParametroFactuEmpresas(new ArrayList<ParametroFactuEmpresa>());
						parametrofactuempresaLogic.getParametroFactuEmpresas().addAll(parametrofactuempresasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrofactuempresas=new ArrayList<ParametroFactuEmpresa>();
							parametrofactuempresas.addAll(parametrofactuempresasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdBodegaMultiOrigen")) {
				this.sDetalleReporte=ParametroFactuEmpresaConstantesFunciones.getDetalleIndiceFK_IdBodegaMultiOrigen(id_bodega_multi_origenFK_IdBodegaMultiOrigen);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					parametrofactuempresaLogic.getParametroFactuEmpresasFK_IdBodegaMultiOrigen(finalQueryGlobal,pagination,id_bodega_multi_origenFK_IdBodegaMultiOrigen);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroFactuEmpresaConstantesFunciones.getDetalleIndiceFK_IdBodegaMultiOrigen(id_bodega_multi_origenFK_IdBodegaMultiOrigen);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroFactuEmpresaConstantesFunciones.getDetalleIndiceFK_IdBodegaMultiOrigen(id_bodega_multi_origenFK_IdBodegaMultiOrigen);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=parametrofactuempresaLogic.getParametroFactuEmpresas()==null||parametrofactuempresaLogic.getParametroFactuEmpresas().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=parametrofactuempresas==null|| parametrofactuempresas.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrofactuempresasAux=new ArrayList<ParametroFactuEmpresa>();
						parametrofactuempresasAux.addAll(parametrofactuempresaLogic.getParametroFactuEmpresas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrofactuempresasAux=new ArrayList<ParametroFactuEmpresa>();
							parametrofactuempresasAux.addAll(parametrofactuempresas);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							parametrofactuempresaLogic.getParametroFactuEmpresasFK_IdBodegaMultiOrigen(finalQueryGlobal,pagination,id_bodega_multi_origenFK_IdBodegaMultiOrigen);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroFactuEmpresaConstantesFunciones.getDetalleIndiceFK_IdBodegaMultiOrigen(id_bodega_multi_origenFK_IdBodegaMultiOrigen);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroFactuEmpresaConstantesFunciones.getDetalleIndiceFK_IdBodegaMultiOrigen(id_bodega_multi_origenFK_IdBodegaMultiOrigen);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteParametroFactuEmpresas("FK_IdBodegaMultiOrigen",parametrofactuempresaLogic.getParametroFactuEmpresas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteParametroFactuEmpresas("FK_IdBodegaMultiOrigen",parametrofactuempresas);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrofactuempresaLogic.setParametroFactuEmpresas(new ArrayList<ParametroFactuEmpresa>());
						parametrofactuempresaLogic.getParametroFactuEmpresas().addAll(parametrofactuempresasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrofactuempresas=new ArrayList<ParametroFactuEmpresa>();
							parametrofactuempresas.addAll(parametrofactuempresasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdBodegaOrigen")) {
				this.sDetalleReporte=ParametroFactuEmpresaConstantesFunciones.getDetalleIndiceFK_IdBodegaOrigen(id_bodega_origenFK_IdBodegaOrigen);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					parametrofactuempresaLogic.getParametroFactuEmpresasFK_IdBodegaOrigen(finalQueryGlobal,pagination,id_bodega_origenFK_IdBodegaOrigen);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroFactuEmpresaConstantesFunciones.getDetalleIndiceFK_IdBodegaOrigen(id_bodega_origenFK_IdBodegaOrigen);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroFactuEmpresaConstantesFunciones.getDetalleIndiceFK_IdBodegaOrigen(id_bodega_origenFK_IdBodegaOrigen);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=parametrofactuempresaLogic.getParametroFactuEmpresas()==null||parametrofactuempresaLogic.getParametroFactuEmpresas().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=parametrofactuempresas==null|| parametrofactuempresas.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrofactuempresasAux=new ArrayList<ParametroFactuEmpresa>();
						parametrofactuempresasAux.addAll(parametrofactuempresaLogic.getParametroFactuEmpresas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrofactuempresasAux=new ArrayList<ParametroFactuEmpresa>();
							parametrofactuempresasAux.addAll(parametrofactuempresas);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							parametrofactuempresaLogic.getParametroFactuEmpresasFK_IdBodegaOrigen(finalQueryGlobal,pagination,id_bodega_origenFK_IdBodegaOrigen);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroFactuEmpresaConstantesFunciones.getDetalleIndiceFK_IdBodegaOrigen(id_bodega_origenFK_IdBodegaOrigen);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroFactuEmpresaConstantesFunciones.getDetalleIndiceFK_IdBodegaOrigen(id_bodega_origenFK_IdBodegaOrigen);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteParametroFactuEmpresas("FK_IdBodegaOrigen",parametrofactuempresaLogic.getParametroFactuEmpresas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteParametroFactuEmpresas("FK_IdBodegaOrigen",parametrofactuempresas);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrofactuempresaLogic.setParametroFactuEmpresas(new ArrayList<ParametroFactuEmpresa>());
						parametrofactuempresaLogic.getParametroFactuEmpresas().addAll(parametrofactuempresasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrofactuempresas=new ArrayList<ParametroFactuEmpresa>();
							parametrofactuempresas.addAll(parametrofactuempresasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdClienteDestino")) {
				this.sDetalleReporte=ParametroFactuEmpresaConstantesFunciones.getDetalleIndiceFK_IdClienteDestino(id_cliente_destinoFK_IdClienteDestino);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					parametrofactuempresaLogic.getParametroFactuEmpresasFK_IdClienteDestino(finalQueryGlobal,pagination,id_cliente_destinoFK_IdClienteDestino);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroFactuEmpresaConstantesFunciones.getDetalleIndiceFK_IdClienteDestino(id_cliente_destinoFK_IdClienteDestino);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroFactuEmpresaConstantesFunciones.getDetalleIndiceFK_IdClienteDestino(id_cliente_destinoFK_IdClienteDestino);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=parametrofactuempresaLogic.getParametroFactuEmpresas()==null||parametrofactuempresaLogic.getParametroFactuEmpresas().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=parametrofactuempresas==null|| parametrofactuempresas.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrofactuempresasAux=new ArrayList<ParametroFactuEmpresa>();
						parametrofactuempresasAux.addAll(parametrofactuempresaLogic.getParametroFactuEmpresas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrofactuempresasAux=new ArrayList<ParametroFactuEmpresa>();
							parametrofactuempresasAux.addAll(parametrofactuempresas);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							parametrofactuempresaLogic.getParametroFactuEmpresasFK_IdClienteDestino(finalQueryGlobal,pagination,id_cliente_destinoFK_IdClienteDestino);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroFactuEmpresaConstantesFunciones.getDetalleIndiceFK_IdClienteDestino(id_cliente_destinoFK_IdClienteDestino);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroFactuEmpresaConstantesFunciones.getDetalleIndiceFK_IdClienteDestino(id_cliente_destinoFK_IdClienteDestino);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteParametroFactuEmpresas("FK_IdClienteDestino",parametrofactuempresaLogic.getParametroFactuEmpresas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteParametroFactuEmpresas("FK_IdClienteDestino",parametrofactuempresas);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrofactuempresaLogic.setParametroFactuEmpresas(new ArrayList<ParametroFactuEmpresa>());
						parametrofactuempresaLogic.getParametroFactuEmpresas().addAll(parametrofactuempresasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrofactuempresas=new ArrayList<ParametroFactuEmpresa>();
							parametrofactuempresas.addAll(parametrofactuempresasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdClienteOrigen")) {
				this.sDetalleReporte=ParametroFactuEmpresaConstantesFunciones.getDetalleIndiceFK_IdClienteOrigen(id_cliente_origenFK_IdClienteOrigen);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					parametrofactuempresaLogic.getParametroFactuEmpresasFK_IdClienteOrigen(finalQueryGlobal,pagination,id_cliente_origenFK_IdClienteOrigen);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroFactuEmpresaConstantesFunciones.getDetalleIndiceFK_IdClienteOrigen(id_cliente_origenFK_IdClienteOrigen);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroFactuEmpresaConstantesFunciones.getDetalleIndiceFK_IdClienteOrigen(id_cliente_origenFK_IdClienteOrigen);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=parametrofactuempresaLogic.getParametroFactuEmpresas()==null||parametrofactuempresaLogic.getParametroFactuEmpresas().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=parametrofactuempresas==null|| parametrofactuempresas.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrofactuempresasAux=new ArrayList<ParametroFactuEmpresa>();
						parametrofactuempresasAux.addAll(parametrofactuempresaLogic.getParametroFactuEmpresas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrofactuempresasAux=new ArrayList<ParametroFactuEmpresa>();
							parametrofactuempresasAux.addAll(parametrofactuempresas);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							parametrofactuempresaLogic.getParametroFactuEmpresasFK_IdClienteOrigen(finalQueryGlobal,pagination,id_cliente_origenFK_IdClienteOrigen);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroFactuEmpresaConstantesFunciones.getDetalleIndiceFK_IdClienteOrigen(id_cliente_origenFK_IdClienteOrigen);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroFactuEmpresaConstantesFunciones.getDetalleIndiceFK_IdClienteOrigen(id_cliente_origenFK_IdClienteOrigen);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteParametroFactuEmpresas("FK_IdClienteOrigen",parametrofactuempresaLogic.getParametroFactuEmpresas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteParametroFactuEmpresas("FK_IdClienteOrigen",parametrofactuempresas);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrofactuempresaLogic.setParametroFactuEmpresas(new ArrayList<ParametroFactuEmpresa>());
						parametrofactuempresaLogic.getParametroFactuEmpresas().addAll(parametrofactuempresasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrofactuempresas=new ArrayList<ParametroFactuEmpresa>();
							parametrofactuempresas.addAll(parametrofactuempresasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdEmpresa")) {
				this.sDetalleReporte=ParametroFactuEmpresaConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					parametrofactuempresaLogic.getParametroFactuEmpresasFK_IdEmpresa(finalQueryGlobal,pagination,id_empresaFK_IdEmpresa);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroFactuEmpresaConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroFactuEmpresaConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=parametrofactuempresaLogic.getParametroFactuEmpresas()==null||parametrofactuempresaLogic.getParametroFactuEmpresas().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=parametrofactuempresas==null|| parametrofactuempresas.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrofactuempresasAux=new ArrayList<ParametroFactuEmpresa>();
						parametrofactuempresasAux.addAll(parametrofactuempresaLogic.getParametroFactuEmpresas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrofactuempresasAux=new ArrayList<ParametroFactuEmpresa>();
							parametrofactuempresasAux.addAll(parametrofactuempresas);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							parametrofactuempresaLogic.getParametroFactuEmpresasFK_IdEmpresa(finalQueryGlobal,pagination,id_empresaFK_IdEmpresa);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroFactuEmpresaConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroFactuEmpresaConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteParametroFactuEmpresas("FK_IdEmpresa",parametrofactuempresaLogic.getParametroFactuEmpresas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteParametroFactuEmpresas("FK_IdEmpresa",parametrofactuempresas);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrofactuempresaLogic.setParametroFactuEmpresas(new ArrayList<ParametroFactuEmpresa>());
						parametrofactuempresaLogic.getParametroFactuEmpresas().addAll(parametrofactuempresasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrofactuempresas=new ArrayList<ParametroFactuEmpresa>();
							parametrofactuempresas.addAll(parametrofactuempresasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdEmpresaDestino")) {
				this.sDetalleReporte=ParametroFactuEmpresaConstantesFunciones.getDetalleIndiceFK_IdEmpresaDestino(id_empresa_destinoFK_IdEmpresaDestino);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					parametrofactuempresaLogic.getParametroFactuEmpresasFK_IdEmpresaDestino(finalQueryGlobal,pagination,id_empresa_destinoFK_IdEmpresaDestino);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroFactuEmpresaConstantesFunciones.getDetalleIndiceFK_IdEmpresaDestino(id_empresa_destinoFK_IdEmpresaDestino);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroFactuEmpresaConstantesFunciones.getDetalleIndiceFK_IdEmpresaDestino(id_empresa_destinoFK_IdEmpresaDestino);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=parametrofactuempresaLogic.getParametroFactuEmpresas()==null||parametrofactuempresaLogic.getParametroFactuEmpresas().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=parametrofactuempresas==null|| parametrofactuempresas.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrofactuempresasAux=new ArrayList<ParametroFactuEmpresa>();
						parametrofactuempresasAux.addAll(parametrofactuempresaLogic.getParametroFactuEmpresas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrofactuempresasAux=new ArrayList<ParametroFactuEmpresa>();
							parametrofactuempresasAux.addAll(parametrofactuempresas);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							parametrofactuempresaLogic.getParametroFactuEmpresasFK_IdEmpresaDestino(finalQueryGlobal,pagination,id_empresa_destinoFK_IdEmpresaDestino);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroFactuEmpresaConstantesFunciones.getDetalleIndiceFK_IdEmpresaDestino(id_empresa_destinoFK_IdEmpresaDestino);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroFactuEmpresaConstantesFunciones.getDetalleIndiceFK_IdEmpresaDestino(id_empresa_destinoFK_IdEmpresaDestino);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteParametroFactuEmpresas("FK_IdEmpresaDestino",parametrofactuempresaLogic.getParametroFactuEmpresas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteParametroFactuEmpresas("FK_IdEmpresaDestino",parametrofactuempresas);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrofactuempresaLogic.setParametroFactuEmpresas(new ArrayList<ParametroFactuEmpresa>());
						parametrofactuempresaLogic.getParametroFactuEmpresas().addAll(parametrofactuempresasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrofactuempresas=new ArrayList<ParametroFactuEmpresa>();
							parametrofactuempresas.addAll(parametrofactuempresasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdEmpresaMultiDestino")) {
				this.sDetalleReporte=ParametroFactuEmpresaConstantesFunciones.getDetalleIndiceFK_IdEmpresaMultiDestino(id_empresa_multi_destinoFK_IdEmpresaMultiDestino);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					parametrofactuempresaLogic.getParametroFactuEmpresasFK_IdEmpresaMultiDestino(finalQueryGlobal,pagination,id_empresa_multi_destinoFK_IdEmpresaMultiDestino);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroFactuEmpresaConstantesFunciones.getDetalleIndiceFK_IdEmpresaMultiDestino(id_empresa_multi_destinoFK_IdEmpresaMultiDestino);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroFactuEmpresaConstantesFunciones.getDetalleIndiceFK_IdEmpresaMultiDestino(id_empresa_multi_destinoFK_IdEmpresaMultiDestino);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=parametrofactuempresaLogic.getParametroFactuEmpresas()==null||parametrofactuempresaLogic.getParametroFactuEmpresas().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=parametrofactuempresas==null|| parametrofactuempresas.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrofactuempresasAux=new ArrayList<ParametroFactuEmpresa>();
						parametrofactuempresasAux.addAll(parametrofactuempresaLogic.getParametroFactuEmpresas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrofactuempresasAux=new ArrayList<ParametroFactuEmpresa>();
							parametrofactuempresasAux.addAll(parametrofactuempresas);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							parametrofactuempresaLogic.getParametroFactuEmpresasFK_IdEmpresaMultiDestino(finalQueryGlobal,pagination,id_empresa_multi_destinoFK_IdEmpresaMultiDestino);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroFactuEmpresaConstantesFunciones.getDetalleIndiceFK_IdEmpresaMultiDestino(id_empresa_multi_destinoFK_IdEmpresaMultiDestino);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroFactuEmpresaConstantesFunciones.getDetalleIndiceFK_IdEmpresaMultiDestino(id_empresa_multi_destinoFK_IdEmpresaMultiDestino);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteParametroFactuEmpresas("FK_IdEmpresaMultiDestino",parametrofactuempresaLogic.getParametroFactuEmpresas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteParametroFactuEmpresas("FK_IdEmpresaMultiDestino",parametrofactuempresas);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrofactuempresaLogic.setParametroFactuEmpresas(new ArrayList<ParametroFactuEmpresa>());
						parametrofactuempresaLogic.getParametroFactuEmpresas().addAll(parametrofactuempresasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrofactuempresas=new ArrayList<ParametroFactuEmpresa>();
							parametrofactuempresas.addAll(parametrofactuempresasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdEmpresaOrigen")) {
				this.sDetalleReporte=ParametroFactuEmpresaConstantesFunciones.getDetalleIndiceFK_IdEmpresaOrigen(id_empresa_origenFK_IdEmpresaOrigen);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					parametrofactuempresaLogic.getParametroFactuEmpresasFK_IdEmpresaOrigen(finalQueryGlobal,pagination,id_empresa_origenFK_IdEmpresaOrigen);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroFactuEmpresaConstantesFunciones.getDetalleIndiceFK_IdEmpresaOrigen(id_empresa_origenFK_IdEmpresaOrigen);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroFactuEmpresaConstantesFunciones.getDetalleIndiceFK_IdEmpresaOrigen(id_empresa_origenFK_IdEmpresaOrigen);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=parametrofactuempresaLogic.getParametroFactuEmpresas()==null||parametrofactuempresaLogic.getParametroFactuEmpresas().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=parametrofactuempresas==null|| parametrofactuempresas.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrofactuempresasAux=new ArrayList<ParametroFactuEmpresa>();
						parametrofactuempresasAux.addAll(parametrofactuempresaLogic.getParametroFactuEmpresas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrofactuempresasAux=new ArrayList<ParametroFactuEmpresa>();
							parametrofactuempresasAux.addAll(parametrofactuempresas);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							parametrofactuempresaLogic.getParametroFactuEmpresasFK_IdEmpresaOrigen(finalQueryGlobal,pagination,id_empresa_origenFK_IdEmpresaOrigen);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroFactuEmpresaConstantesFunciones.getDetalleIndiceFK_IdEmpresaOrigen(id_empresa_origenFK_IdEmpresaOrigen);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroFactuEmpresaConstantesFunciones.getDetalleIndiceFK_IdEmpresaOrigen(id_empresa_origenFK_IdEmpresaOrigen);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteParametroFactuEmpresas("FK_IdEmpresaOrigen",parametrofactuempresaLogic.getParametroFactuEmpresas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteParametroFactuEmpresas("FK_IdEmpresaOrigen",parametrofactuempresas);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrofactuempresaLogic.setParametroFactuEmpresas(new ArrayList<ParametroFactuEmpresa>());
						parametrofactuempresaLogic.getParametroFactuEmpresas().addAll(parametrofactuempresasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrofactuempresas=new ArrayList<ParametroFactuEmpresa>();
							parametrofactuempresas.addAll(parametrofactuempresasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdSucursal")) {
				this.sDetalleReporte=ParametroFactuEmpresaConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					parametrofactuempresaLogic.getParametroFactuEmpresasFK_IdSucursal(finalQueryGlobal,pagination,id_sucursalFK_IdSucursal);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroFactuEmpresaConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroFactuEmpresaConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=parametrofactuempresaLogic.getParametroFactuEmpresas()==null||parametrofactuempresaLogic.getParametroFactuEmpresas().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=parametrofactuempresas==null|| parametrofactuempresas.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrofactuempresasAux=new ArrayList<ParametroFactuEmpresa>();
						parametrofactuempresasAux.addAll(parametrofactuempresaLogic.getParametroFactuEmpresas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrofactuempresasAux=new ArrayList<ParametroFactuEmpresa>();
							parametrofactuempresasAux.addAll(parametrofactuempresas);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							parametrofactuempresaLogic.getParametroFactuEmpresasFK_IdSucursal(finalQueryGlobal,pagination,id_sucursalFK_IdSucursal);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroFactuEmpresaConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroFactuEmpresaConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteParametroFactuEmpresas("FK_IdSucursal",parametrofactuempresaLogic.getParametroFactuEmpresas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteParametroFactuEmpresas("FK_IdSucursal",parametrofactuempresas);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrofactuempresaLogic.setParametroFactuEmpresas(new ArrayList<ParametroFactuEmpresa>());
						parametrofactuempresaLogic.getParametroFactuEmpresas().addAll(parametrofactuempresasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrofactuempresas=new ArrayList<ParametroFactuEmpresa>();
							parametrofactuempresas.addAll(parametrofactuempresasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdSucursalDestino")) {
				this.sDetalleReporte=ParametroFactuEmpresaConstantesFunciones.getDetalleIndiceFK_IdSucursalDestino(id_sucursal_destinoFK_IdSucursalDestino);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					parametrofactuempresaLogic.getParametroFactuEmpresasFK_IdSucursalDestino(finalQueryGlobal,pagination,id_sucursal_destinoFK_IdSucursalDestino);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroFactuEmpresaConstantesFunciones.getDetalleIndiceFK_IdSucursalDestino(id_sucursal_destinoFK_IdSucursalDestino);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroFactuEmpresaConstantesFunciones.getDetalleIndiceFK_IdSucursalDestino(id_sucursal_destinoFK_IdSucursalDestino);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=parametrofactuempresaLogic.getParametroFactuEmpresas()==null||parametrofactuempresaLogic.getParametroFactuEmpresas().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=parametrofactuempresas==null|| parametrofactuempresas.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrofactuempresasAux=new ArrayList<ParametroFactuEmpresa>();
						parametrofactuempresasAux.addAll(parametrofactuempresaLogic.getParametroFactuEmpresas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrofactuempresasAux=new ArrayList<ParametroFactuEmpresa>();
							parametrofactuempresasAux.addAll(parametrofactuempresas);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							parametrofactuempresaLogic.getParametroFactuEmpresasFK_IdSucursalDestino(finalQueryGlobal,pagination,id_sucursal_destinoFK_IdSucursalDestino);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroFactuEmpresaConstantesFunciones.getDetalleIndiceFK_IdSucursalDestino(id_sucursal_destinoFK_IdSucursalDestino);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroFactuEmpresaConstantesFunciones.getDetalleIndiceFK_IdSucursalDestino(id_sucursal_destinoFK_IdSucursalDestino);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteParametroFactuEmpresas("FK_IdSucursalDestino",parametrofactuempresaLogic.getParametroFactuEmpresas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteParametroFactuEmpresas("FK_IdSucursalDestino",parametrofactuempresas);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrofactuempresaLogic.setParametroFactuEmpresas(new ArrayList<ParametroFactuEmpresa>());
						parametrofactuempresaLogic.getParametroFactuEmpresas().addAll(parametrofactuempresasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrofactuempresas=new ArrayList<ParametroFactuEmpresa>();
							parametrofactuempresas.addAll(parametrofactuempresasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdSucursalMultiDestino")) {
				this.sDetalleReporte=ParametroFactuEmpresaConstantesFunciones.getDetalleIndiceFK_IdSucursalMultiDestino(id_sucursal_multi_destinoFK_IdSucursalMultiDestino);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					parametrofactuempresaLogic.getParametroFactuEmpresasFK_IdSucursalMultiDestino(finalQueryGlobal,pagination,id_sucursal_multi_destinoFK_IdSucursalMultiDestino);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroFactuEmpresaConstantesFunciones.getDetalleIndiceFK_IdSucursalMultiDestino(id_sucursal_multi_destinoFK_IdSucursalMultiDestino);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroFactuEmpresaConstantesFunciones.getDetalleIndiceFK_IdSucursalMultiDestino(id_sucursal_multi_destinoFK_IdSucursalMultiDestino);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=parametrofactuempresaLogic.getParametroFactuEmpresas()==null||parametrofactuempresaLogic.getParametroFactuEmpresas().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=parametrofactuempresas==null|| parametrofactuempresas.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrofactuempresasAux=new ArrayList<ParametroFactuEmpresa>();
						parametrofactuempresasAux.addAll(parametrofactuempresaLogic.getParametroFactuEmpresas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrofactuempresasAux=new ArrayList<ParametroFactuEmpresa>();
							parametrofactuempresasAux.addAll(parametrofactuempresas);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							parametrofactuempresaLogic.getParametroFactuEmpresasFK_IdSucursalMultiDestino(finalQueryGlobal,pagination,id_sucursal_multi_destinoFK_IdSucursalMultiDestino);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroFactuEmpresaConstantesFunciones.getDetalleIndiceFK_IdSucursalMultiDestino(id_sucursal_multi_destinoFK_IdSucursalMultiDestino);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroFactuEmpresaConstantesFunciones.getDetalleIndiceFK_IdSucursalMultiDestino(id_sucursal_multi_destinoFK_IdSucursalMultiDestino);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteParametroFactuEmpresas("FK_IdSucursalMultiDestino",parametrofactuempresaLogic.getParametroFactuEmpresas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteParametroFactuEmpresas("FK_IdSucursalMultiDestino",parametrofactuempresas);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrofactuempresaLogic.setParametroFactuEmpresas(new ArrayList<ParametroFactuEmpresa>());
						parametrofactuempresaLogic.getParametroFactuEmpresas().addAll(parametrofactuempresasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrofactuempresas=new ArrayList<ParametroFactuEmpresa>();
							parametrofactuempresas.addAll(parametrofactuempresasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdTransaccionDestino")) {
				this.sDetalleReporte=ParametroFactuEmpresaConstantesFunciones.getDetalleIndiceFK_IdTransaccionDestino(id_transaccion_destinoFK_IdTransaccionDestino);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					parametrofactuempresaLogic.getParametroFactuEmpresasFK_IdTransaccionDestino(finalQueryGlobal,pagination,id_transaccion_destinoFK_IdTransaccionDestino);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroFactuEmpresaConstantesFunciones.getDetalleIndiceFK_IdTransaccionDestino(id_transaccion_destinoFK_IdTransaccionDestino);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroFactuEmpresaConstantesFunciones.getDetalleIndiceFK_IdTransaccionDestino(id_transaccion_destinoFK_IdTransaccionDestino);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=parametrofactuempresaLogic.getParametroFactuEmpresas()==null||parametrofactuempresaLogic.getParametroFactuEmpresas().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=parametrofactuempresas==null|| parametrofactuempresas.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrofactuempresasAux=new ArrayList<ParametroFactuEmpresa>();
						parametrofactuempresasAux.addAll(parametrofactuempresaLogic.getParametroFactuEmpresas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrofactuempresasAux=new ArrayList<ParametroFactuEmpresa>();
							parametrofactuempresasAux.addAll(parametrofactuempresas);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							parametrofactuempresaLogic.getParametroFactuEmpresasFK_IdTransaccionDestino(finalQueryGlobal,pagination,id_transaccion_destinoFK_IdTransaccionDestino);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroFactuEmpresaConstantesFunciones.getDetalleIndiceFK_IdTransaccionDestino(id_transaccion_destinoFK_IdTransaccionDestino);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroFactuEmpresaConstantesFunciones.getDetalleIndiceFK_IdTransaccionDestino(id_transaccion_destinoFK_IdTransaccionDestino);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteParametroFactuEmpresas("FK_IdTransaccionDestino",parametrofactuempresaLogic.getParametroFactuEmpresas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteParametroFactuEmpresas("FK_IdTransaccionDestino",parametrofactuempresas);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrofactuempresaLogic.setParametroFactuEmpresas(new ArrayList<ParametroFactuEmpresa>());
						parametrofactuempresaLogic.getParametroFactuEmpresas().addAll(parametrofactuempresasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrofactuempresas=new ArrayList<ParametroFactuEmpresa>();
							parametrofactuempresas.addAll(parametrofactuempresasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdTransaccionMultiDestino")) {
				this.sDetalleReporte=ParametroFactuEmpresaConstantesFunciones.getDetalleIndiceFK_IdTransaccionMultiDestino(id_transaccion_multi_destinoFK_IdTransaccionMultiDestino);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					parametrofactuempresaLogic.getParametroFactuEmpresasFK_IdTransaccionMultiDestino(finalQueryGlobal,pagination,id_transaccion_multi_destinoFK_IdTransaccionMultiDestino);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroFactuEmpresaConstantesFunciones.getDetalleIndiceFK_IdTransaccionMultiDestino(id_transaccion_multi_destinoFK_IdTransaccionMultiDestino);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroFactuEmpresaConstantesFunciones.getDetalleIndiceFK_IdTransaccionMultiDestino(id_transaccion_multi_destinoFK_IdTransaccionMultiDestino);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=parametrofactuempresaLogic.getParametroFactuEmpresas()==null||parametrofactuempresaLogic.getParametroFactuEmpresas().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=parametrofactuempresas==null|| parametrofactuempresas.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrofactuempresasAux=new ArrayList<ParametroFactuEmpresa>();
						parametrofactuempresasAux.addAll(parametrofactuempresaLogic.getParametroFactuEmpresas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrofactuempresasAux=new ArrayList<ParametroFactuEmpresa>();
							parametrofactuempresasAux.addAll(parametrofactuempresas);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							parametrofactuempresaLogic.getParametroFactuEmpresasFK_IdTransaccionMultiDestino(finalQueryGlobal,pagination,id_transaccion_multi_destinoFK_IdTransaccionMultiDestino);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroFactuEmpresaConstantesFunciones.getDetalleIndiceFK_IdTransaccionMultiDestino(id_transaccion_multi_destinoFK_IdTransaccionMultiDestino);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroFactuEmpresaConstantesFunciones.getDetalleIndiceFK_IdTransaccionMultiDestino(id_transaccion_multi_destinoFK_IdTransaccionMultiDestino);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteParametroFactuEmpresas("FK_IdTransaccionMultiDestino",parametrofactuempresaLogic.getParametroFactuEmpresas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteParametroFactuEmpresas("FK_IdTransaccionMultiDestino",parametrofactuempresas);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrofactuempresaLogic.setParametroFactuEmpresas(new ArrayList<ParametroFactuEmpresa>());
						parametrofactuempresaLogic.getParametroFactuEmpresas().addAll(parametrofactuempresasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrofactuempresas=new ArrayList<ParametroFactuEmpresa>();
							parametrofactuempresas.addAll(parametrofactuempresasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdTransaccionOrigen")) {
				this.sDetalleReporte=ParametroFactuEmpresaConstantesFunciones.getDetalleIndiceFK_IdTransaccionOrigen(id_transaccion_origenFK_IdTransaccionOrigen);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					parametrofactuempresaLogic.getParametroFactuEmpresasFK_IdTransaccionOrigen(finalQueryGlobal,pagination,id_transaccion_origenFK_IdTransaccionOrigen);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroFactuEmpresaConstantesFunciones.getDetalleIndiceFK_IdTransaccionOrigen(id_transaccion_origenFK_IdTransaccionOrigen);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroFactuEmpresaConstantesFunciones.getDetalleIndiceFK_IdTransaccionOrigen(id_transaccion_origenFK_IdTransaccionOrigen);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=parametrofactuempresaLogic.getParametroFactuEmpresas()==null||parametrofactuempresaLogic.getParametroFactuEmpresas().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=parametrofactuempresas==null|| parametrofactuempresas.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrofactuempresasAux=new ArrayList<ParametroFactuEmpresa>();
						parametrofactuempresasAux.addAll(parametrofactuempresaLogic.getParametroFactuEmpresas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrofactuempresasAux=new ArrayList<ParametroFactuEmpresa>();
							parametrofactuempresasAux.addAll(parametrofactuempresas);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							parametrofactuempresaLogic.getParametroFactuEmpresasFK_IdTransaccionOrigen(finalQueryGlobal,pagination,id_transaccion_origenFK_IdTransaccionOrigen);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroFactuEmpresaConstantesFunciones.getDetalleIndiceFK_IdTransaccionOrigen(id_transaccion_origenFK_IdTransaccionOrigen);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroFactuEmpresaConstantesFunciones.getDetalleIndiceFK_IdTransaccionOrigen(id_transaccion_origenFK_IdTransaccionOrigen);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteParametroFactuEmpresas("FK_IdTransaccionOrigen",parametrofactuempresaLogic.getParametroFactuEmpresas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteParametroFactuEmpresas("FK_IdTransaccionOrigen",parametrofactuempresas);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrofactuempresaLogic.setParametroFactuEmpresas(new ArrayList<ParametroFactuEmpresa>());
						parametrofactuempresaLogic.getParametroFactuEmpresas().addAll(parametrofactuempresasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrofactuempresas=new ArrayList<ParametroFactuEmpresa>();
							parametrofactuempresas.addAll(parametrofactuempresasAux);
						}
						//ARCHITECTURE
					}
				}

			} 
		
		
		
		this.redimensionarTablaDatos();
		//this.refrescarForeignKeysDescripcionesParametroFactuEmpresa();
		
		
		if(this.conTotales) {
			this.crearFilaTotales();
		}		
		} catch (JRException e) {
			throw e;
		} catch(Exception e) {
			throw e;
      	} finally {
      		//this.finishProcessParametroFactuEmpresa();
      	}
		
	}				
	
	public void redimensionarTablaDatos() throws Exception {
		int iSizeTabla=0;
				
		iSizeTabla=this.getSizeTablaDatos();
		
		//ARCHITECTURE
		/*
		if(Constantes.ISUSAEJBLOGICLAYER) {	
			iSizeTabla=parametrofactuempresaLogic.getParametroFactuEmpresas().size();
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			iSizeTabla=parametrofactuempresas.size();
		}
		*/
		//ARCHITECTURE
											
		this.redimensionarTablaDatos(iSizeTabla);		
	}
	
	public Integer getSizeTablaDatos() throws Exception {
		Integer iSizeTabla=0;
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {	
			iSizeTabla=parametrofactuempresaLogic.getParametroFactuEmpresas().size();
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			iSizeTabla=parametrofactuempresas.size();
		}
		//ARCHITECTURE
											
		return iSizeTabla;		
	}
	
			
	public Boolean permiteMantenimiento(ParametroFactuEmpresa parametrofactuempresa) {
		Boolean permite=true;
		
		if(this.parametrofactuempresa.getsType().equals(Constantes2.S_TOTALES)) {
			permite=false;
		}
		
		return permite;
	}
	
	public void traerValoresTablaTotales() throws Exception {
	}
	
	
	public void traerValoresTablaOrderBy() throws Exception {
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.arrOrderBy=ParametroFactuEmpresaConstantesFunciones.getOrderByListaParametroFactuEmpresa();							
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			this.arrOrderBy=ParametroFactuEmpresaConstantesFunciones.getOrderByListaParametroFactuEmpresa();
		}		
	}
	
	
	public Boolean existeFilaTotales() throws Exception {
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(ParametroFactuEmpresa parametrofactuempresa:parametrofactuempresaLogic.getParametroFactuEmpresas()) {
				if(parametrofactuempresa.getsType().equals(Constantes2.S_TOTALES)) {
					parametrofactuempresaTotales=parametrofactuempresa;
					existe=true;
					break;
				}
			}
								
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(ParametroFactuEmpresa parametrofactuempresa:this.parametrofactuempresas) {
				if(parametrofactuempresa.getsType().equals(Constantes2.S_TOTALES)) {
					parametrofactuempresaTotales=parametrofactuempresa;
					existe=true;
					break;
				}
			}
		}
		
		return existe;
	}
	
	public void crearFilaTotales() throws Exception {
		Boolean existe=false;
		
		existe=this.existeFilaTotales();
		
		if(!existe) {
			//SI NO ES UNO A UNO SE CREA FILA TOTALES
			this.parametrofactuempresaAux=new ParametroFactuEmpresa();
			this.parametrofactuempresaAux.setsType(Constantes2.S_TOTALES);
			this.parametrofactuempresaAux.setIsNew(false);
			this.parametrofactuempresaAux.setIsChanged(false);
			this.parametrofactuempresaAux.setIsDeleted(false);
				
			if(Constantes.ISUSAEJBLOGICLAYER) {
				ParametroFactuEmpresaConstantesFunciones.TotalizarValoresFilaParametroFactuEmpresa(this.parametrofactuempresaLogic.getParametroFactuEmpresas(),this.parametrofactuempresaAux);
				
				this.parametrofactuempresaLogic.getParametroFactuEmpresas().add(this.parametrofactuempresaAux);
				
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
				ParametroFactuEmpresaConstantesFunciones.TotalizarValoresFilaParametroFactuEmpresa(this.parametrofactuempresas,this.parametrofactuempresaAux);
				
				this.parametrofactuempresas.add(this.parametrofactuempresaAux);
			}
		}
	}
	
	public void quitarFilaTotales() throws Exception {
		parametrofactuempresaTotales=new ParametroFactuEmpresa();
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			existe=this.existeFilaTotales();
			
			if(existe) {
				this.parametrofactuempresaLogic.getParametroFactuEmpresas().remove(parametrofactuempresaTotales);
			}			
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			existe=this.existeFilaTotales();
			
			if(existe) {
				this.parametrofactuempresas.remove(parametrofactuempresaTotales);
			}
		}
	}
	
	public void actualizarFilaTotales() throws Exception {
		parametrofactuempresaTotales=new ParametroFactuEmpresa();
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(ParametroFactuEmpresa parametrofactuempresa:parametrofactuempresaLogic.getParametroFactuEmpresas()) {
				if(parametrofactuempresa.getsType().equals(Constantes2.S_TOTALES)) {
					parametrofactuempresaTotales=parametrofactuempresa;
					existe=true;
					break;
				}
			}
			
			if(existe) {
				ParametroFactuEmpresaConstantesFunciones.TotalizarValoresFilaParametroFactuEmpresa(this.parametrofactuempresaLogic.getParametroFactuEmpresas(),parametrofactuempresaTotales);
			}			
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(ParametroFactuEmpresa parametrofactuempresa:this.parametrofactuempresas) {
				if(parametrofactuempresa.getsType().equals(Constantes2.S_TOTALES)) {
					parametrofactuempresaTotales=parametrofactuempresa;
					existe=true;
					break;
				}
			}
			
			if(existe) {
				ParametroFactuEmpresaConstantesFunciones.TotalizarValoresFilaParametroFactuEmpresa(this.parametrofactuempresas,parametrofactuempresaTotales);
			}
		}
	}		
	
	public void recargarInformacion()throws Exception {
		try {
			sAccionBusqueda="Todos";
			this.iNumeroPaginacionPagina=0;
			
			this.procesarBusqueda(sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroFactuEmpresaConstantesFunciones.CLASSNAME);
		}	
	}		
	
	
	public void getParametroFactuEmpresasFK_IdBodegaDestino()throws Exception {
		try {
			sAccionBusqueda="FK_IdBodegaDestino";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getParametroFactuEmpresasFK_IdBodegaMultiDestino()throws Exception {
		try {
			sAccionBusqueda="FK_IdBodegaMultiDestino";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getParametroFactuEmpresasFK_IdBodegaMultiOrigen()throws Exception {
		try {
			sAccionBusqueda="FK_IdBodegaMultiOrigen";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getParametroFactuEmpresasFK_IdBodegaOrigen()throws Exception {
		try {
			sAccionBusqueda="FK_IdBodegaOrigen";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getParametroFactuEmpresasFK_IdClienteDestino()throws Exception {
		try {
			sAccionBusqueda="FK_IdClienteDestino";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getParametroFactuEmpresasFK_IdClienteOrigen()throws Exception {
		try {
			sAccionBusqueda="FK_IdClienteOrigen";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getParametroFactuEmpresasFK_IdEmpresa()throws Exception {
		try {
			sAccionBusqueda="FK_IdEmpresa";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getParametroFactuEmpresasFK_IdEmpresaDestino()throws Exception {
		try {
			sAccionBusqueda="FK_IdEmpresaDestino";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getParametroFactuEmpresasFK_IdEmpresaMultiDestino()throws Exception {
		try {
			sAccionBusqueda="FK_IdEmpresaMultiDestino";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getParametroFactuEmpresasFK_IdEmpresaOrigen()throws Exception {
		try {
			sAccionBusqueda="FK_IdEmpresaOrigen";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getParametroFactuEmpresasFK_IdSucursal()throws Exception {
		try {
			sAccionBusqueda="FK_IdSucursal";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getParametroFactuEmpresasFK_IdSucursalDestino()throws Exception {
		try {
			sAccionBusqueda="FK_IdSucursalDestino";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getParametroFactuEmpresasFK_IdSucursalMultiDestino()throws Exception {
		try {
			sAccionBusqueda="FK_IdSucursalMultiDestino";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getParametroFactuEmpresasFK_IdTransaccionDestino()throws Exception {
		try {
			sAccionBusqueda="FK_IdTransaccionDestino";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getParametroFactuEmpresasFK_IdTransaccionMultiDestino()throws Exception {
		try {
			sAccionBusqueda="FK_IdTransaccionMultiDestino";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getParametroFactuEmpresasFK_IdTransaccionOrigen()throws Exception {
		try {
			sAccionBusqueda="FK_IdTransaccionOrigen";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	
	
	public void getParametroFactuEmpresasFK_IdBodegaDestino(String sFinalQuery,Long id_bodega_destino)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					parametrofactuempresaLogic.getParametroFactuEmpresasFK_IdBodegaDestino(sFinalQuery,this.pagination,id_bodega_destino);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getParametroFactuEmpresasFK_IdBodegaMultiDestino(String sFinalQuery,Long id_bodega_multi_destino)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					parametrofactuempresaLogic.getParametroFactuEmpresasFK_IdBodegaMultiDestino(sFinalQuery,this.pagination,id_bodega_multi_destino);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getParametroFactuEmpresasFK_IdBodegaMultiOrigen(String sFinalQuery,Long id_bodega_multi_origen)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					parametrofactuempresaLogic.getParametroFactuEmpresasFK_IdBodegaMultiOrigen(sFinalQuery,this.pagination,id_bodega_multi_origen);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getParametroFactuEmpresasFK_IdBodegaOrigen(String sFinalQuery,Long id_bodega_origen)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					parametrofactuempresaLogic.getParametroFactuEmpresasFK_IdBodegaOrigen(sFinalQuery,this.pagination,id_bodega_origen);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getParametroFactuEmpresasFK_IdClienteDestino(String sFinalQuery,Long id_cliente_destino)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					parametrofactuempresaLogic.getParametroFactuEmpresasFK_IdClienteDestino(sFinalQuery,this.pagination,id_cliente_destino);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getParametroFactuEmpresasFK_IdClienteOrigen(String sFinalQuery,Long id_cliente_origen)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					parametrofactuempresaLogic.getParametroFactuEmpresasFK_IdClienteOrigen(sFinalQuery,this.pagination,id_cliente_origen);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getParametroFactuEmpresasFK_IdEmpresa(String sFinalQuery,Long id_empresa)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					parametrofactuempresaLogic.getParametroFactuEmpresasFK_IdEmpresa(sFinalQuery,this.pagination,id_empresa);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getParametroFactuEmpresasFK_IdEmpresaDestino(String sFinalQuery,Long id_empresa_destino)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					parametrofactuempresaLogic.getParametroFactuEmpresasFK_IdEmpresaDestino(sFinalQuery,this.pagination,id_empresa_destino);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getParametroFactuEmpresasFK_IdEmpresaMultiDestino(String sFinalQuery,Long id_empresa_multi_destino)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					parametrofactuempresaLogic.getParametroFactuEmpresasFK_IdEmpresaMultiDestino(sFinalQuery,this.pagination,id_empresa_multi_destino);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getParametroFactuEmpresasFK_IdEmpresaOrigen(String sFinalQuery,Long id_empresa_origen)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					parametrofactuempresaLogic.getParametroFactuEmpresasFK_IdEmpresaOrigen(sFinalQuery,this.pagination,id_empresa_origen);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getParametroFactuEmpresasFK_IdSucursal(String sFinalQuery,Long id_sucursal)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					parametrofactuempresaLogic.getParametroFactuEmpresasFK_IdSucursal(sFinalQuery,this.pagination,id_sucursal);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getParametroFactuEmpresasFK_IdSucursalDestino(String sFinalQuery,Long id_sucursal_destino)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					parametrofactuempresaLogic.getParametroFactuEmpresasFK_IdSucursalDestino(sFinalQuery,this.pagination,id_sucursal_destino);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getParametroFactuEmpresasFK_IdSucursalMultiDestino(String sFinalQuery,Long id_sucursal_multi_destino)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					parametrofactuempresaLogic.getParametroFactuEmpresasFK_IdSucursalMultiDestino(sFinalQuery,this.pagination,id_sucursal_multi_destino);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getParametroFactuEmpresasFK_IdTransaccionDestino(String sFinalQuery,Long id_transaccion_destino)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					parametrofactuempresaLogic.getParametroFactuEmpresasFK_IdTransaccionDestino(sFinalQuery,this.pagination,id_transaccion_destino);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getParametroFactuEmpresasFK_IdTransaccionMultiDestino(String sFinalQuery,Long id_transaccion_multi_destino)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					parametrofactuempresaLogic.getParametroFactuEmpresasFK_IdTransaccionMultiDestino(sFinalQuery,this.pagination,id_transaccion_multi_destino);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getParametroFactuEmpresasFK_IdTransaccionOrigen(String sFinalQuery,Long id_transaccion_origen)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					parametrofactuempresaLogic.getParametroFactuEmpresasFK_IdTransaccionOrigen(sFinalQuery,this.pagination,id_transaccion_origen);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	
	public void onLoad()throws Exception {		
		try {		
			isEntroOnLoad=true;
			//INTENTA TRAER DATOS DE BUSQUEDA ANTERIOR
			this.traerDatosBusquedaDesdeSession();
					
			//SINO SE CUMPLE VIENE DE PADRE FOREIGN O BUSQUEDA ANTIGUA
			if(this.sAccionBusqueda.equals("")) {
				this.sAccionBusqueda="Todos";
			}
								
			this.procesarBusqueda(sAccionBusqueda);
			
		} catch (Exception e) {
			throw e;
		}
	}		
	
	public void inicializarPermisosParametroFactuEmpresa() {
		this.isPermisoTodoParametroFactuEmpresa=false;
		this.isPermisoNuevoParametroFactuEmpresa=false;
		this.isPermisoActualizarParametroFactuEmpresa=false;
		this.isPermisoActualizarOriginalParametroFactuEmpresa=false;
		this.isPermisoEliminarParametroFactuEmpresa=false;
		this.isPermisoGuardarCambiosParametroFactuEmpresa=false;
		this.isPermisoConsultaParametroFactuEmpresa=false;
		this.isPermisoBusquedaParametroFactuEmpresa=false;
		this.isPermisoReporteParametroFactuEmpresa=false;		
		this.isPermisoOrdenParametroFactuEmpresa=false;		
		this.isPermisoPaginacionMedioParametroFactuEmpresa=false;		
		this.isPermisoPaginacionAltoParametroFactuEmpresa=false;
		this.isPermisoPaginacionTodoParametroFactuEmpresa=false;
		this.isPermisoCopiarParametroFactuEmpresa=false;		
		this.isPermisoVerFormParametroFactuEmpresa=false;		
		this.isPermisoDuplicarParametroFactuEmpresa=false;		
		this.isPermisoOrdenParametroFactuEmpresa=false;		
	}
	
	public void setPermisosUsuarioParametroFactuEmpresa(Boolean isPermiso) {
		this.isPermisoTodoParametroFactuEmpresa=isPermiso;
		this.isPermisoNuevoParametroFactuEmpresa=isPermiso;
		this.isPermisoActualizarParametroFactuEmpresa=isPermiso;
		this.isPermisoActualizarOriginalParametroFactuEmpresa=isPermiso;
		this.isPermisoEliminarParametroFactuEmpresa=isPermiso;
		this.isPermisoGuardarCambiosParametroFactuEmpresa=isPermiso;
		this.isPermisoConsultaParametroFactuEmpresa=isPermiso;
		this.isPermisoBusquedaParametroFactuEmpresa=isPermiso;
		this.isPermisoReporteParametroFactuEmpresa=isPermiso;
		this.isPermisoOrdenParametroFactuEmpresa=isPermiso;		
		this.isPermisoPaginacionMedioParametroFactuEmpresa=isPermiso;		
		this.isPermisoPaginacionAltoParametroFactuEmpresa=isPermiso;		
		this.isPermisoPaginacionTodoParametroFactuEmpresa=isPermiso;		
		this.isPermisoCopiarParametroFactuEmpresa=isPermiso;		
		this.isPermisoVerFormParametroFactuEmpresa=isPermiso;		
		this.isPermisoDuplicarParametroFactuEmpresa=isPermiso;
		this.isPermisoOrdenParametroFactuEmpresa=isPermiso;
	}
	
	public void setPermisosMantenimientoUsuarioParametroFactuEmpresa(Boolean isPermiso) {
		//this.isPermisoTodoParametroFactuEmpresa=isPermiso;
		this.isPermisoNuevoParametroFactuEmpresa=isPermiso;
		this.isPermisoActualizarParametroFactuEmpresa=isPermiso;
		this.isPermisoActualizarOriginalParametroFactuEmpresa=isPermiso;
		this.isPermisoEliminarParametroFactuEmpresa=isPermiso;
		this.isPermisoGuardarCambiosParametroFactuEmpresa=isPermiso;
		//this.isPermisoConsultaParametroFactuEmpresa=isPermiso;
		//this.isPermisoBusquedaParametroFactuEmpresa=isPermiso;
		//this.isPermisoReporteParametroFactuEmpresa=isPermiso;
		//this.isPermisoOrdenParametroFactuEmpresa=isPermiso;		
		//this.isPermisoPaginacionMedioParametroFactuEmpresa=isPermiso;		
		//this.isPermisoPaginacionAltoParametroFactuEmpresa=isPermiso;		
		//this.isPermisoPaginacionTodoParametroFactuEmpresa=isPermiso;		
		//this.isPermisoCopiarParametroFactuEmpresa=isPermiso;		
		//this.isPermisoDuplicarParametroFactuEmpresa=isPermiso;
		//this.isPermisoOrdenParametroFactuEmpresa=isPermiso;
	}
	
	public void inicializarSetPermisosUsuarioParametroFactuEmpresaClasesRelacionadas() throws Exception {
		ArrayList<String> arrPaginas=new ArrayList<String>();		
		ArrayList<Opcion> opcionsFinal=new ArrayList<Opcion>();	
		
		
		if(ParametroFactuEmpresaJInternalFrame.CON_LLAMADA_SIMPLE) {
			this.opcionsRelacionadas.addAll(this.sistemaReturnGeneral.getOpcionsRelacionadas());
			
		} else {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				opcionsFinal=sistemaLogicAdditional.tienePermisosOpcionesEnPaginaWeb(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, arrPaginas);
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}
			
			this.opcionsRelacionadas.addAll(opcionsFinal);
		}
		
		
		
	}
	
	public Boolean tienePermisosUsuarioEnPaginaWebParametroFactuEmpresa(String sPagina) throws Exception {
		Boolean tienePermisos=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			tienePermisos=sistemaLogicAdditional.tienePermisosEnPaginaWeb(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, sPagina);
		} else if(Constantes.ISUSAEJBREMOTE) {
		} else if(Constantes.ISUSAEJBHOME) {
		}
		
		return tienePermisos;
	}
	
	public void inicializarSetPermisosUsuarioParametroFactuEmpresaClasesRelacionadas(Boolean conPermiso) throws Exception {
		
	}
	
	public Boolean verificarGetPermisosUsuarioParametroFactuEmpresaClaseRelacionada(ArrayList<String> arrPaginasFinal,String sPaginaActual) throws Exception {
		Boolean verificado=false;
		
		verificado=Funciones2.verificarGetPermisosUsuarioClaseRelacionada(arrPaginasFinal,sPaginaActual);				
		
		return verificado;
	}
	
	public Boolean verificarGetPermisosUsuarioOpcionParametroFactuEmpresaClaseRelacionada(List<Opcion> opcionsFinal,String sPaginaActual) throws Exception {
		Boolean verificado=false;
		
		verificado=Funciones2.verificarGetPermisosUsuarioOpcionClaseRelacionada(opcionsFinal,sPaginaActual);				
		
		return verificado;
	}
	
	public void actualizarTabsSetPermisosUsuarioParametroFactuEmpresaClasesRelacionadas() throws Exception {
		
	}
	
	public void setPermisosUsuarioParametroFactuEmpresa() throws Exception {
		
		PerfilOpcion perfilOpcionUsuario=new PerfilOpcion();		
		Long idOpcion=this.opcionActual.getId();
		
		if(ParametroFactuEmpresaJInternalFrame.CON_LLAMADA_SIMPLE) {
			perfilOpcionUsuario=this.sistemaReturnGeneral.getPerfilOpcion();
			
		} else {
			if(this.parametrofactuempresaSessionBean.getEsGuardarRelacionado()) {
				idOpcion=0L;
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				perfilOpcionUsuario=sistemaLogicAdditional.traerPermisosPaginaWebPerfilOpcion(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, ParametroFactuEmpresaConstantesFunciones.SNOMBREOPCION,idOpcion);				
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}
		}
		
		if(perfilOpcionUsuario!=null && perfilOpcionUsuario.getId()>0) {
			this.isPermisoNuevoParametroFactuEmpresa=perfilOpcionUsuario.getingreso()||perfilOpcionUsuario.gettodo();
			this.isPermisoActualizarParametroFactuEmpresa=perfilOpcionUsuario.getmodificacion()||perfilOpcionUsuario.gettodo();
			this.isPermisoActualizarOriginalParametroFactuEmpresa=this.isPermisoActualizarParametroFactuEmpresa;
			this.isPermisoEliminarParametroFactuEmpresa=perfilOpcionUsuario.geteliminacion()||perfilOpcionUsuario.gettodo();
			this.isPermisoGuardarCambiosParametroFactuEmpresa=perfilOpcionUsuario.getguardar_cambios()||perfilOpcionUsuario.gettodo();
			this.isPermisoConsultaParametroFactuEmpresa=perfilOpcionUsuario.getconsulta()||perfilOpcionUsuario.gettodo();
			this.isPermisoBusquedaParametroFactuEmpresa=perfilOpcionUsuario.getbusqueda()||perfilOpcionUsuario.gettodo();
			this.isPermisoTodoParametroFactuEmpresa=perfilOpcionUsuario.gettodo()||perfilOpcionUsuario.gettodo();
			this.isPermisoReporteParametroFactuEmpresa=perfilOpcionUsuario.getreporte()||perfilOpcionUsuario.gettodo();
			this.isPermisoOrdenParametroFactuEmpresa=perfilOpcionUsuario.getorden()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionMedioParametroFactuEmpresa=perfilOpcionUsuario.getpaginacion_medio()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionAltoParametroFactuEmpresa=perfilOpcionUsuario.getpaginacion_alto()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionTodoParametroFactuEmpresa=perfilOpcionUsuario.getpaginacion_todo()||perfilOpcionUsuario.gettodo();
			this.isPermisoCopiarParametroFactuEmpresa=perfilOpcionUsuario.getcopiar()||perfilOpcionUsuario.gettodo();
			this.isPermisoVerFormParametroFactuEmpresa=true;//perfilOpcionUsuario.getver_form()||perfilOpcionUsuario.gettodo();
			this.isPermisoDuplicarParametroFactuEmpresa=perfilOpcionUsuario.getduplicar()||perfilOpcionUsuario.gettodo();
			this.isPermisoOrdenParametroFactuEmpresa=perfilOpcionUsuario.getorden()||perfilOpcionUsuario.gettodo();
			
			if(this.parametrofactuempresaSessionBean.getEsGuardarRelacionado()) {
				this.opcionActual.setId(perfilOpcionUsuario.getid_opcion());
				
				this.jTableDatosParametroFactuEmpresa.setToolTipText(this.jTableDatosParametroFactuEmpresa.getToolTipText()+"_"+perfilOpcionUsuario.getid_opcion());		
			}
		} else {
			this.setPermisosUsuarioParametroFactuEmpresa(false);
		}
		
		//SI SE NECESITA PONER TODOS LOS PERMISOS POR DEFECTO
		//
		
	}
	
	public void setAccionesUsuarioParametroFactuEmpresa(Boolean esParaAccionesFormulario) throws Exception {		
		Reporte reporte=null;
		
		if(!esParaAccionesFormulario) {
			this.accions=new ArrayList<Accion>();
			
			if(ParametroFactuEmpresaJInternalFrame.CON_LLAMADA_SIMPLE) {
				this.accions=this.sistemaReturnGeneral.getAccions();
				
				
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.accions=sistemaLogicAdditional.getAccionesUsuario(this.usuarioActual,this.opcionActual,false);				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}
			
			if(this.accions.size()>0) {			
				for(Accion accion:this.accions) {
					reporte=new Reporte();
					reporte.setsCodigo(accion.getcodigo());
					reporte.setsDescripcion(accion.getnombre());
		
		
					this.tiposAcciones.add(reporte);
				}
			}	
			
			

			reporte=new Reporte();
			reporte.setsCodigo("");
			reporte.setsDescripcion("");

			this.tiposAcciones.add(reporte);
			
		} else {
			//ACCIONES FORMULARIO
			this.accionsFormulario=new ArrayList<Accion>();
			
			if(ParametroFactuEmpresaJInternalFrame.CON_LLAMADA_SIMPLE) {
				this.accionsFormulario=this.sistemaReturnGeneral.getAccionsFormulario();
			
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.accionsFormulario=sistemaLogicAdditional.getAccionesUsuario(this.usuarioActual,this.opcionActual,true);				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}
			
			if(this.accionsFormulario.size()>0) {			
				for(Accion accion:this.accionsFormulario) {
					reporte=new Reporte();
					reporte.setsCodigo(accion.getcodigo());
					reporte.setsDescripcion(accion.getnombre());
					
					this.tiposAccionesFormulario.add(reporte);
				}
			}	
			
			

			reporte=new Reporte();
			reporte.setsCodigo("");
			reporte.setsDescripcion("");

			this.tiposAccionesFormulario.add(reporte);
		}				
	}	 	
	
	public void setRelacionesUsuarioParametroFactuEmpresa() throws Exception {
		Reporte reporte=null;
		
		
		
		
		//ORDENAR ALFABETICAMENTE
		Collections.sort(this.tiposRelaciones, new ReporteComparator());
		/*
		reporte=new Reporte();
		reporte.setsCodigo(accion.getcodigo());
		reporte.setsDescripcion(accion.getnombre());
			
		this.tiposRelaciones.add(reporte);
		*/
	}	
	
		
	@SuppressWarnings({ "unchecked", "rawtypes" } )
	public void inicializarCombosForeignKeyParametroFactuEmpresaListas()throws Exception {
		try	{						
			
				this.empresasForeignKey=new ArrayList();
				this.empresaorigensForeignKey=new ArrayList();
				this.sucursalsForeignKey=new ArrayList();
				this.transaccionorigensForeignKey=new ArrayList();
				this.bodegaorigensForeignKey=new ArrayList();
				this.clienteorigensForeignKey=new ArrayList();
				this.empresadestinosForeignKey=new ArrayList();
				this.sucursaldestinosForeignKey=new ArrayList();
				this.transacciondestinosForeignKey=new ArrayList();
				this.bodegadestinosForeignKey=new ArrayList();
				this.clientedestinosForeignKey=new ArrayList();
				this.empresamultidestinosForeignKey=new ArrayList();
				this.sucursalmultidestinosForeignKey=new ArrayList();
				this.transaccionmultidestinosForeignKey=new ArrayList();
				this.bodegamultiorigensForeignKey=new ArrayList();
				this.bodegamultidestinosForeignKey=new ArrayList();
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void cargarCombosTodosForeignKeyParametroFactuEmpresaListas(Boolean cargarCombosDependencia)throws Exception {
		try	{
			
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			String sFinalQueryCombo="";
			
			Modulo  moduloActualAux=new Modulo();
			
			if(ParametroFactuEmpresaJInternalFrame.ISLOAD_FKLOTE) {
				this.cargarCombosLoteForeignKeyParametroFactuEmpresaListas(false);
			} else {
			
				this.cargarCombosForeignKeyEmpresaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyEmpresaOrigenListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeySucursalListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTransaccionOrigenListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyBodegaOrigenListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyClienteOrigenListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyEmpresaDestinoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeySucursalDestinoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTransaccionDestinoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyBodegaDestinoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyClienteDestinoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyEmpresaMultiDestinoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeySucursalMultiDestinoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTransaccionMultiDestinoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyBodegaMultiOrigenListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyBodegaMultiDestinoListas(cargarCombosDependencia,sFinalQueryCombo);
			}
		} catch(Exception e) {
			throw e;
		}		
	}		
	
	

	public void cargarCombosForeignKeyEmpresaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.empresasForeignKey==null||this.empresasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=EmpresaConstantesFunciones.getArrayColumnasGlobalesEmpresa(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EmpresaConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=EmpresaConstantesFunciones.SFINALQUERY;

				this.cargarCombosEmpresasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyEmpresaOrigenListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.empresaorigensForeignKey==null||this.empresaorigensForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=EmpresaConstantesFunciones.getArrayColumnasGlobalesEmpresa(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EmpresaConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=EmpresaConstantesFunciones.SFINALQUERY;

				this.cargarCombosEmpresaOrigensForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeySucursalListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.sucursalsForeignKey==null||this.sucursalsForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=SucursalConstantesFunciones.getArrayColumnasGlobalesSucursal(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,SucursalConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=SucursalConstantesFunciones.SFINALQUERY;

				this.cargarCombosSucursalsForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTransaccionOrigenListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.transaccionorigensForeignKey==null||this.transaccionorigensForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TransaccionConstantesFunciones.getArrayColumnasGlobalesTransaccion(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TransaccionConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TransaccionConstantesFunciones.SFINALQUERY;

				this.cargarCombosTransaccionOrigensForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyBodegaOrigenListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.bodegaorigensForeignKey==null||this.bodegaorigensForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=BodegaConstantesFunciones.getArrayColumnasGlobalesBodega(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,BodegaConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=BodegaConstantesFunciones.SFINALQUERY;

				this.cargarCombosBodegaOrigensForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyClienteOrigenListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.clienteorigensForeignKey==null||this.clienteorigensForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=ClienteConstantesFunciones.getArrayColumnasGlobalesCliente(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,ClienteConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=ClienteConstantesFunciones.SFINALQUERY;

				this.cargarCombosClienteOrigensForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyEmpresaDestinoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.empresadestinosForeignKey==null||this.empresadestinosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=EmpresaConstantesFunciones.getArrayColumnasGlobalesEmpresa(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EmpresaConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=EmpresaConstantesFunciones.SFINALQUERY;

				this.cargarCombosEmpresaDestinosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeySucursalDestinoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.sucursaldestinosForeignKey==null||this.sucursaldestinosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=SucursalConstantesFunciones.getArrayColumnasGlobalesSucursal(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,SucursalConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=SucursalConstantesFunciones.SFINALQUERY;

				this.cargarCombosSucursalDestinosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTransaccionDestinoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.transacciondestinosForeignKey==null||this.transacciondestinosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TransaccionConstantesFunciones.getArrayColumnasGlobalesTransaccion(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TransaccionConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TransaccionConstantesFunciones.SFINALQUERY;

				this.cargarCombosTransaccionDestinosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyBodegaDestinoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.bodegadestinosForeignKey==null||this.bodegadestinosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=BodegaConstantesFunciones.getArrayColumnasGlobalesBodega(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,BodegaConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=BodegaConstantesFunciones.SFINALQUERY;

				this.cargarCombosBodegaDestinosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyClienteDestinoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.clientedestinosForeignKey==null||this.clientedestinosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=ClienteConstantesFunciones.getArrayColumnasGlobalesCliente(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,ClienteConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=ClienteConstantesFunciones.SFINALQUERY;

				this.cargarCombosClienteDestinosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyEmpresaMultiDestinoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.empresamultidestinosForeignKey==null||this.empresamultidestinosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=EmpresaConstantesFunciones.getArrayColumnasGlobalesEmpresa(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EmpresaConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=EmpresaConstantesFunciones.SFINALQUERY;

				this.cargarCombosEmpresaMultiDestinosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeySucursalMultiDestinoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.sucursalmultidestinosForeignKey==null||this.sucursalmultidestinosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=SucursalConstantesFunciones.getArrayColumnasGlobalesSucursal(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,SucursalConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=SucursalConstantesFunciones.SFINALQUERY;

				this.cargarCombosSucursalMultiDestinosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTransaccionMultiDestinoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.transaccionmultidestinosForeignKey==null||this.transaccionmultidestinosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TransaccionConstantesFunciones.getArrayColumnasGlobalesTransaccion(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TransaccionConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TransaccionConstantesFunciones.SFINALQUERY;

				this.cargarCombosTransaccionMultiDestinosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyBodegaMultiOrigenListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.bodegamultiorigensForeignKey==null||this.bodegamultiorigensForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=BodegaConstantesFunciones.getArrayColumnasGlobalesBodega(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,BodegaConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=BodegaConstantesFunciones.SFINALQUERY;

				this.cargarCombosBodegaMultiOrigensForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyBodegaMultiDestinoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.bodegamultidestinosForeignKey==null||this.bodegamultidestinosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=BodegaConstantesFunciones.getArrayColumnasGlobalesBodega(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,BodegaConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=BodegaConstantesFunciones.SFINALQUERY;

				this.cargarCombosBodegaMultiDestinosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}
	
	public void cargarCombosLoteForeignKeyParametroFactuEmpresaListas(Boolean cargarCombosDependencia)throws Exception {
		try	{
			
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			
			Modulo  moduloActualAux=new Modulo();
			
			
			ParametroFactuEmpresaParameterReturnGeneral parametrofactuempresaReturnGeneral=new ParametroFactuEmpresaParameterReturnGeneral();
						
			


				String finalQueryGlobalEmpresa="";

				if(((this.empresasForeignKey==null||this.empresasForeignKey.size()<=0) && this.parametrofactuempresaConstantesFunciones.cargarid_empresaParametroFactuEmpresa)
					 || (this.esRecargarFks && this.parametrofactuempresaConstantesFunciones.cargarid_empresaParametroFactuEmpresa)) {

					if(!this.parametrofactuempresaSessionBean.getisBusquedaDesdeForeignKeySesionEmpresa()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=EmpresaConstantesFunciones.getArrayColumnasGlobalesEmpresa(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalEmpresa=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EmpresaConstantesFunciones.TABLENAME);

						finalQueryGlobalEmpresa=Funciones.GetFinalQueryAppend(finalQueryGlobalEmpresa, "");
						finalQueryGlobalEmpresa+=EmpresaConstantesFunciones.SFINALQUERY;

						//this.cargarCombosEmpresasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalEmpresa=" WHERE " + ConstantesSql.ID + "="+parametrofactuempresaSessionBean.getlidEmpresaActual();
					}
				} else {
					finalQueryGlobalEmpresa="NONE";
				}


				String finalQueryGlobalEmpresaOrigen="";

				if(((this.empresaorigensForeignKey==null||this.empresaorigensForeignKey.size()<=0) && this.parametrofactuempresaConstantesFunciones.cargarid_empresa_origenParametroFactuEmpresa)
					 || (this.esRecargarFks && this.parametrofactuempresaConstantesFunciones.cargarid_empresa_origenParametroFactuEmpresa)) {

					if(!this.parametrofactuempresaSessionBean.getisBusquedaDesdeForeignKeySesionEmpresaOrigen()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=EmpresaConstantesFunciones.getArrayColumnasGlobalesEmpresa(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalEmpresaOrigen=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EmpresaConstantesFunciones.TABLENAME);

						finalQueryGlobalEmpresaOrigen=Funciones.GetFinalQueryAppend(finalQueryGlobalEmpresaOrigen, "");
						finalQueryGlobalEmpresaOrigen+=EmpresaConstantesFunciones.SFINALQUERY;

						//this.cargarCombosEmpresaOrigensForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalEmpresaOrigen=" WHERE " + ConstantesSql.ID + "="+parametrofactuempresaSessionBean.getlidEmpresaOrigenActual();
					}
				} else {
					finalQueryGlobalEmpresaOrigen="NONE";
				}


				String finalQueryGlobalSucursal="";

				if(((this.sucursalsForeignKey==null||this.sucursalsForeignKey.size()<=0) && this.parametrofactuempresaConstantesFunciones.cargarid_sucursalParametroFactuEmpresa)
					 || (this.esRecargarFks && this.parametrofactuempresaConstantesFunciones.cargarid_sucursalParametroFactuEmpresa)) {

					if(!this.parametrofactuempresaSessionBean.getisBusquedaDesdeForeignKeySesionSucursal()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=SucursalConstantesFunciones.getArrayColumnasGlobalesSucursal(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalSucursal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,SucursalConstantesFunciones.TABLENAME);

						finalQueryGlobalSucursal=Funciones.GetFinalQueryAppend(finalQueryGlobalSucursal, "");
						finalQueryGlobalSucursal+=SucursalConstantesFunciones.SFINALQUERY;

						//this.cargarCombosSucursalsForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalSucursal=" WHERE " + ConstantesSql.ID + "="+parametrofactuempresaSessionBean.getlidSucursalActual();
					}
				} else {
					finalQueryGlobalSucursal="NONE";
				}


				String finalQueryGlobalTransaccionOrigen="";

				if(((this.transaccionorigensForeignKey==null||this.transaccionorigensForeignKey.size()<=0) && this.parametrofactuempresaConstantesFunciones.cargarid_transaccion_origenParametroFactuEmpresa)
					 || (this.esRecargarFks && this.parametrofactuempresaConstantesFunciones.cargarid_transaccion_origenParametroFactuEmpresa)) {

					if(!this.parametrofactuempresaSessionBean.getisBusquedaDesdeForeignKeySesionTransaccionOrigen()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TransaccionConstantesFunciones.getArrayColumnasGlobalesTransaccion(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalTransaccionOrigen=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TransaccionConstantesFunciones.TABLENAME);

						finalQueryGlobalTransaccionOrigen=Funciones.GetFinalQueryAppend(finalQueryGlobalTransaccionOrigen, "");
						finalQueryGlobalTransaccionOrigen+=TransaccionConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTransaccionOrigensForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTransaccionOrigen=" WHERE " + ConstantesSql.ID + "="+parametrofactuempresaSessionBean.getlidTransaccionOrigenActual();
					}
				} else {
					finalQueryGlobalTransaccionOrigen="NONE";
				}


				String finalQueryGlobalBodegaOrigen="";

				if(((this.bodegaorigensForeignKey==null||this.bodegaorigensForeignKey.size()<=0) && this.parametrofactuempresaConstantesFunciones.cargarid_bodega_origenParametroFactuEmpresa)
					 || (this.esRecargarFks && this.parametrofactuempresaConstantesFunciones.cargarid_bodega_origenParametroFactuEmpresa)) {

					if(!this.parametrofactuempresaSessionBean.getisBusquedaDesdeForeignKeySesionBodegaOrigen()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=BodegaConstantesFunciones.getArrayColumnasGlobalesBodega(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalBodegaOrigen=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,BodegaConstantesFunciones.TABLENAME);

						finalQueryGlobalBodegaOrigen=Funciones.GetFinalQueryAppend(finalQueryGlobalBodegaOrigen, "");
						finalQueryGlobalBodegaOrigen+=BodegaConstantesFunciones.SFINALQUERY;

						//this.cargarCombosBodegaOrigensForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalBodegaOrigen=" WHERE " + ConstantesSql.ID + "="+parametrofactuempresaSessionBean.getlidBodegaOrigenActual();
					}
				} else {
					finalQueryGlobalBodegaOrigen="NONE";
				}


				String finalQueryGlobalClienteOrigen="";

				if(((this.clienteorigensForeignKey==null||this.clienteorigensForeignKey.size()<=0) && this.parametrofactuempresaConstantesFunciones.cargarid_cliente_origenParametroFactuEmpresa)
					 || (this.esRecargarFks && this.parametrofactuempresaConstantesFunciones.cargarid_cliente_origenParametroFactuEmpresa)) {

					if(!this.parametrofactuempresaSessionBean.getisBusquedaDesdeForeignKeySesionClienteOrigen()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=ClienteConstantesFunciones.getArrayColumnasGlobalesCliente(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalClienteOrigen=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,ClienteConstantesFunciones.TABLENAME);

						finalQueryGlobalClienteOrigen=Funciones.GetFinalQueryAppend(finalQueryGlobalClienteOrigen, "");
						finalQueryGlobalClienteOrigen+=ClienteConstantesFunciones.SFINALQUERY;

						//this.cargarCombosClienteOrigensForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalClienteOrigen=" WHERE " + ConstantesSql.ID + "="+parametrofactuempresaSessionBean.getlidClienteOrigenActual();
					}
				} else {
					finalQueryGlobalClienteOrigen="NONE";
				}


				String finalQueryGlobalEmpresaDestino="";

				if(((this.empresadestinosForeignKey==null||this.empresadestinosForeignKey.size()<=0) && this.parametrofactuempresaConstantesFunciones.cargarid_empresa_destinoParametroFactuEmpresa)
					 || (this.esRecargarFks && this.parametrofactuempresaConstantesFunciones.cargarid_empresa_destinoParametroFactuEmpresa)) {

					if(!this.parametrofactuempresaSessionBean.getisBusquedaDesdeForeignKeySesionEmpresaDestino()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=EmpresaConstantesFunciones.getArrayColumnasGlobalesEmpresa(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalEmpresaDestino=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EmpresaConstantesFunciones.TABLENAME);

						finalQueryGlobalEmpresaDestino=Funciones.GetFinalQueryAppend(finalQueryGlobalEmpresaDestino, "");
						finalQueryGlobalEmpresaDestino+=EmpresaConstantesFunciones.SFINALQUERY;

						//this.cargarCombosEmpresaDestinosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalEmpresaDestino=" WHERE " + ConstantesSql.ID + "="+parametrofactuempresaSessionBean.getlidEmpresaDestinoActual();
					}
				} else {
					finalQueryGlobalEmpresaDestino="NONE";
				}


				String finalQueryGlobalSucursalDestino="";

				if(((this.sucursaldestinosForeignKey==null||this.sucursaldestinosForeignKey.size()<=0) && this.parametrofactuempresaConstantesFunciones.cargarid_sucursal_destinoParametroFactuEmpresa)
					 || (this.esRecargarFks && this.parametrofactuempresaConstantesFunciones.cargarid_sucursal_destinoParametroFactuEmpresa)) {

					if(!this.parametrofactuempresaSessionBean.getisBusquedaDesdeForeignKeySesionSucursalDestino()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=SucursalConstantesFunciones.getArrayColumnasGlobalesSucursal(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalSucursalDestino=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,SucursalConstantesFunciones.TABLENAME);

						finalQueryGlobalSucursalDestino=Funciones.GetFinalQueryAppend(finalQueryGlobalSucursalDestino, "");
						finalQueryGlobalSucursalDestino+=SucursalConstantesFunciones.SFINALQUERY;

						//this.cargarCombosSucursalDestinosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalSucursalDestino=" WHERE " + ConstantesSql.ID + "="+parametrofactuempresaSessionBean.getlidSucursalDestinoActual();
					}
				} else {
					finalQueryGlobalSucursalDestino="NONE";
				}


				String finalQueryGlobalTransaccionDestino="";

				if(((this.transacciondestinosForeignKey==null||this.transacciondestinosForeignKey.size()<=0) && this.parametrofactuempresaConstantesFunciones.cargarid_transaccion_destinoParametroFactuEmpresa)
					 || (this.esRecargarFks && this.parametrofactuempresaConstantesFunciones.cargarid_transaccion_destinoParametroFactuEmpresa)) {

					if(!this.parametrofactuempresaSessionBean.getisBusquedaDesdeForeignKeySesionTransaccionDestino()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TransaccionConstantesFunciones.getArrayColumnasGlobalesTransaccion(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalTransaccionDestino=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TransaccionConstantesFunciones.TABLENAME);

						finalQueryGlobalTransaccionDestino=Funciones.GetFinalQueryAppend(finalQueryGlobalTransaccionDestino, "");
						finalQueryGlobalTransaccionDestino+=TransaccionConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTransaccionDestinosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTransaccionDestino=" WHERE " + ConstantesSql.ID + "="+parametrofactuempresaSessionBean.getlidTransaccionDestinoActual();
					}
				} else {
					finalQueryGlobalTransaccionDestino="NONE";
				}


				String finalQueryGlobalBodegaDestino="";

				if(((this.bodegadestinosForeignKey==null||this.bodegadestinosForeignKey.size()<=0) && this.parametrofactuempresaConstantesFunciones.cargarid_bodega_destinoParametroFactuEmpresa)
					 || (this.esRecargarFks && this.parametrofactuempresaConstantesFunciones.cargarid_bodega_destinoParametroFactuEmpresa)) {

					if(!this.parametrofactuempresaSessionBean.getisBusquedaDesdeForeignKeySesionBodegaDestino()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=BodegaConstantesFunciones.getArrayColumnasGlobalesBodega(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalBodegaDestino=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,BodegaConstantesFunciones.TABLENAME);

						finalQueryGlobalBodegaDestino=Funciones.GetFinalQueryAppend(finalQueryGlobalBodegaDestino, "");
						finalQueryGlobalBodegaDestino+=BodegaConstantesFunciones.SFINALQUERY;

						//this.cargarCombosBodegaDestinosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalBodegaDestino=" WHERE " + ConstantesSql.ID + "="+parametrofactuempresaSessionBean.getlidBodegaDestinoActual();
					}
				} else {
					finalQueryGlobalBodegaDestino="NONE";
				}


				String finalQueryGlobalClienteDestino="";

				if(((this.clientedestinosForeignKey==null||this.clientedestinosForeignKey.size()<=0) && this.parametrofactuempresaConstantesFunciones.cargarid_cliente_destinoParametroFactuEmpresa)
					 || (this.esRecargarFks && this.parametrofactuempresaConstantesFunciones.cargarid_cliente_destinoParametroFactuEmpresa)) {

					if(!this.parametrofactuempresaSessionBean.getisBusquedaDesdeForeignKeySesionClienteDestino()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=ClienteConstantesFunciones.getArrayColumnasGlobalesCliente(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalClienteDestino=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,ClienteConstantesFunciones.TABLENAME);

						finalQueryGlobalClienteDestino=Funciones.GetFinalQueryAppend(finalQueryGlobalClienteDestino, "");
						finalQueryGlobalClienteDestino+=ClienteConstantesFunciones.SFINALQUERY;

						//this.cargarCombosClienteDestinosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalClienteDestino=" WHERE " + ConstantesSql.ID + "="+parametrofactuempresaSessionBean.getlidClienteDestinoActual();
					}
				} else {
					finalQueryGlobalClienteDestino="NONE";
				}


				String finalQueryGlobalEmpresaMultiDestino="";

				if(((this.empresamultidestinosForeignKey==null||this.empresamultidestinosForeignKey.size()<=0) && this.parametrofactuempresaConstantesFunciones.cargarid_empresa_multi_destinoParametroFactuEmpresa)
					 || (this.esRecargarFks && this.parametrofactuempresaConstantesFunciones.cargarid_empresa_multi_destinoParametroFactuEmpresa)) {

					if(!this.parametrofactuempresaSessionBean.getisBusquedaDesdeForeignKeySesionEmpresaMultiDestino()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=EmpresaConstantesFunciones.getArrayColumnasGlobalesEmpresa(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalEmpresaMultiDestino=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EmpresaConstantesFunciones.TABLENAME);

						finalQueryGlobalEmpresaMultiDestino=Funciones.GetFinalQueryAppend(finalQueryGlobalEmpresaMultiDestino, "");
						finalQueryGlobalEmpresaMultiDestino+=EmpresaConstantesFunciones.SFINALQUERY;

						//this.cargarCombosEmpresaMultiDestinosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalEmpresaMultiDestino=" WHERE " + ConstantesSql.ID + "="+parametrofactuempresaSessionBean.getlidEmpresaMultiDestinoActual();
					}
				} else {
					finalQueryGlobalEmpresaMultiDestino="NONE";
				}


				String finalQueryGlobalSucursalMultiDestino="";

				if(((this.sucursalmultidestinosForeignKey==null||this.sucursalmultidestinosForeignKey.size()<=0) && this.parametrofactuempresaConstantesFunciones.cargarid_sucursal_multi_destinoParametroFactuEmpresa)
					 || (this.esRecargarFks && this.parametrofactuempresaConstantesFunciones.cargarid_sucursal_multi_destinoParametroFactuEmpresa)) {

					if(!this.parametrofactuempresaSessionBean.getisBusquedaDesdeForeignKeySesionSucursalMultiDestino()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=SucursalConstantesFunciones.getArrayColumnasGlobalesSucursal(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalSucursalMultiDestino=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,SucursalConstantesFunciones.TABLENAME);

						finalQueryGlobalSucursalMultiDestino=Funciones.GetFinalQueryAppend(finalQueryGlobalSucursalMultiDestino, "");
						finalQueryGlobalSucursalMultiDestino+=SucursalConstantesFunciones.SFINALQUERY;

						//this.cargarCombosSucursalMultiDestinosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalSucursalMultiDestino=" WHERE " + ConstantesSql.ID + "="+parametrofactuempresaSessionBean.getlidSucursalMultiDestinoActual();
					}
				} else {
					finalQueryGlobalSucursalMultiDestino="NONE";
				}


				String finalQueryGlobalTransaccionMultiDestino="";

				if(((this.transaccionmultidestinosForeignKey==null||this.transaccionmultidestinosForeignKey.size()<=0) && this.parametrofactuempresaConstantesFunciones.cargarid_transaccion_multi_destinoParametroFactuEmpresa)
					 || (this.esRecargarFks && this.parametrofactuempresaConstantesFunciones.cargarid_transaccion_multi_destinoParametroFactuEmpresa)) {

					if(!this.parametrofactuempresaSessionBean.getisBusquedaDesdeForeignKeySesionTransaccionMultiDestino()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TransaccionConstantesFunciones.getArrayColumnasGlobalesTransaccion(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalTransaccionMultiDestino=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TransaccionConstantesFunciones.TABLENAME);

						finalQueryGlobalTransaccionMultiDestino=Funciones.GetFinalQueryAppend(finalQueryGlobalTransaccionMultiDestino, "");
						finalQueryGlobalTransaccionMultiDestino+=TransaccionConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTransaccionMultiDestinosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTransaccionMultiDestino=" WHERE " + ConstantesSql.ID + "="+parametrofactuempresaSessionBean.getlidTransaccionMultiDestinoActual();
					}
				} else {
					finalQueryGlobalTransaccionMultiDestino="NONE";
				}


				String finalQueryGlobalBodegaMultiOrigen="";

				if(((this.bodegamultiorigensForeignKey==null||this.bodegamultiorigensForeignKey.size()<=0) && this.parametrofactuempresaConstantesFunciones.cargarid_bodega_multi_origenParametroFactuEmpresa)
					 || (this.esRecargarFks && this.parametrofactuempresaConstantesFunciones.cargarid_bodega_multi_origenParametroFactuEmpresa)) {

					if(!this.parametrofactuempresaSessionBean.getisBusquedaDesdeForeignKeySesionBodegaMultiOrigen()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=BodegaConstantesFunciones.getArrayColumnasGlobalesBodega(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalBodegaMultiOrigen=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,BodegaConstantesFunciones.TABLENAME);

						finalQueryGlobalBodegaMultiOrigen=Funciones.GetFinalQueryAppend(finalQueryGlobalBodegaMultiOrigen, "");
						finalQueryGlobalBodegaMultiOrigen+=BodegaConstantesFunciones.SFINALQUERY;

						//this.cargarCombosBodegaMultiOrigensForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalBodegaMultiOrigen=" WHERE " + ConstantesSql.ID + "="+parametrofactuempresaSessionBean.getlidBodegaMultiOrigenActual();
					}
				} else {
					finalQueryGlobalBodegaMultiOrigen="NONE";
				}


				String finalQueryGlobalBodegaMultiDestino="";

				if(((this.bodegamultidestinosForeignKey==null||this.bodegamultidestinosForeignKey.size()<=0) && this.parametrofactuempresaConstantesFunciones.cargarid_bodega_multi_destinoParametroFactuEmpresa)
					 || (this.esRecargarFks && this.parametrofactuempresaConstantesFunciones.cargarid_bodega_multi_destinoParametroFactuEmpresa)) {

					if(!this.parametrofactuempresaSessionBean.getisBusquedaDesdeForeignKeySesionBodegaMultiDestino()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=BodegaConstantesFunciones.getArrayColumnasGlobalesBodega(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalBodegaMultiDestino=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,BodegaConstantesFunciones.TABLENAME);

						finalQueryGlobalBodegaMultiDestino=Funciones.GetFinalQueryAppend(finalQueryGlobalBodegaMultiDestino, "");
						finalQueryGlobalBodegaMultiDestino+=BodegaConstantesFunciones.SFINALQUERY;

						//this.cargarCombosBodegaMultiDestinosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalBodegaMultiDestino=" WHERE " + ConstantesSql.ID + "="+parametrofactuempresaSessionBean.getlidBodegaMultiDestinoActual();
					}
				} else {
					finalQueryGlobalBodegaMultiDestino="NONE";
				}
			
			//ARCHITECTURE			
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				parametrofactuempresaReturnGeneral=parametrofactuempresaLogic.cargarCombosLoteForeignKeyParametroFactuEmpresa(finalQueryGlobalEmpresa,finalQueryGlobalEmpresaOrigen,finalQueryGlobalSucursal,finalQueryGlobalTransaccionOrigen,finalQueryGlobalBodegaOrigen,finalQueryGlobalClienteOrigen,finalQueryGlobalEmpresaDestino,finalQueryGlobalSucursalDestino,finalQueryGlobalTransaccionDestino,finalQueryGlobalBodegaDestino,finalQueryGlobalClienteDestino,finalQueryGlobalEmpresaMultiDestino,finalQueryGlobalSucursalMultiDestino,finalQueryGlobalTransaccionMultiDestino,finalQueryGlobalBodegaMultiOrigen,finalQueryGlobalBodegaMultiDestino);//WithConnection
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}			
			//ARCHITECTURE
			
			

			if(!finalQueryGlobalEmpresa.equals("NONE")) {
				this.empresasForeignKey=parametrofactuempresaReturnGeneral.getempresasForeignKey();
			}

			if(!finalQueryGlobalEmpresaOrigen.equals("NONE")) {
				this.empresaorigensForeignKey=parametrofactuempresaReturnGeneral.getempresaorigensForeignKey();
			}

			if(!finalQueryGlobalSucursal.equals("NONE")) {
				this.sucursalsForeignKey=parametrofactuempresaReturnGeneral.getsucursalsForeignKey();
			}

			if(!finalQueryGlobalTransaccionOrigen.equals("NONE")) {
				this.transaccionorigensForeignKey=parametrofactuempresaReturnGeneral.gettransaccionorigensForeignKey();
			}

			if(!finalQueryGlobalBodegaOrigen.equals("NONE")) {
				this.bodegaorigensForeignKey=parametrofactuempresaReturnGeneral.getbodegaorigensForeignKey();
			}

			if(!finalQueryGlobalClienteOrigen.equals("NONE")) {
				this.clienteorigensForeignKey=parametrofactuempresaReturnGeneral.getclienteorigensForeignKey();
			}

			if(!finalQueryGlobalEmpresaDestino.equals("NONE")) {
				this.empresadestinosForeignKey=parametrofactuempresaReturnGeneral.getempresadestinosForeignKey();
			}

			if(!finalQueryGlobalSucursalDestino.equals("NONE")) {
				this.sucursaldestinosForeignKey=parametrofactuempresaReturnGeneral.getsucursaldestinosForeignKey();
			}

			if(!finalQueryGlobalTransaccionDestino.equals("NONE")) {
				this.transacciondestinosForeignKey=parametrofactuempresaReturnGeneral.gettransacciondestinosForeignKey();
			}

			if(!finalQueryGlobalBodegaDestino.equals("NONE")) {
				this.bodegadestinosForeignKey=parametrofactuempresaReturnGeneral.getbodegadestinosForeignKey();
			}

			if(!finalQueryGlobalClienteDestino.equals("NONE")) {
				this.clientedestinosForeignKey=parametrofactuempresaReturnGeneral.getclientedestinosForeignKey();
			}

			if(!finalQueryGlobalEmpresaMultiDestino.equals("NONE")) {
				this.empresamultidestinosForeignKey=parametrofactuempresaReturnGeneral.getempresamultidestinosForeignKey();
			}

			if(!finalQueryGlobalSucursalMultiDestino.equals("NONE")) {
				this.sucursalmultidestinosForeignKey=parametrofactuempresaReturnGeneral.getsucursalmultidestinosForeignKey();
			}

			if(!finalQueryGlobalTransaccionMultiDestino.equals("NONE")) {
				this.transaccionmultidestinosForeignKey=parametrofactuempresaReturnGeneral.gettransaccionmultidestinosForeignKey();
			}

			if(!finalQueryGlobalBodegaMultiOrigen.equals("NONE")) {
				this.bodegamultiorigensForeignKey=parametrofactuempresaReturnGeneral.getbodegamultiorigensForeignKey();
			}

			if(!finalQueryGlobalBodegaMultiDestino.equals("NONE")) {
				this.bodegamultidestinosForeignKey=parametrofactuempresaReturnGeneral.getbodegamultidestinosForeignKey();
			}
			
			
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void addItemDefectoCombosTodosForeignKeyParametroFactuEmpresa()throws Exception {
		try {
			
			this.addItemDefectoCombosForeignKeyEmpresa();
			this.addItemDefectoCombosForeignKeyEmpresaOrigen();
			this.addItemDefectoCombosForeignKeySucursal();
			this.addItemDefectoCombosForeignKeyTransaccionOrigen();
			this.addItemDefectoCombosForeignKeyBodegaOrigen();
			this.addItemDefectoCombosForeignKeyClienteOrigen();
			this.addItemDefectoCombosForeignKeyEmpresaDestino();
			this.addItemDefectoCombosForeignKeySucursalDestino();
			this.addItemDefectoCombosForeignKeyTransaccionDestino();
			this.addItemDefectoCombosForeignKeyBodegaDestino();
			this.addItemDefectoCombosForeignKeyClienteDestino();
			this.addItemDefectoCombosForeignKeyEmpresaMultiDestino();
			this.addItemDefectoCombosForeignKeySucursalMultiDestino();
			this.addItemDefectoCombosForeignKeyTransaccionMultiDestino();
			this.addItemDefectoCombosForeignKeyBodegaMultiOrigen();
			this.addItemDefectoCombosForeignKeyBodegaMultiDestino();
		} catch(Exception e) {
			throw e;
		}		
	}
	
	



	public void addItemDefectoCombosForeignKeyEmpresa()throws Exception {
		try {
			if(this.parametrofactuempresaSessionBean==null) {
				this.parametrofactuempresaSessionBean=new ParametroFactuEmpresaSessionBean();
			}

			if(!this.parametrofactuempresaSessionBean.getisBusquedaDesdeForeignKeySesionEmpresa()) {
				Empresa empresa=new Empresa();
				EmpresaConstantesFunciones.setEmpresaDescripcion(empresa,Constantes.SMENSAJE_ESCOJA_OPCION);
				empresa.setId(null);

				if(!EmpresaConstantesFunciones.ExisteEnLista(this.empresasForeignKey,empresa,true)) {

					this.empresasForeignKey.add(0,empresa);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyEmpresaOrigen()throws Exception {
		try {

			if(!this.parametrofactuempresaSessionBean.getisBusquedaDesdeForeignKeySesionEmpresaOrigen()) {
				Empresa empresaorigen=new Empresa();
				EmpresaConstantesFunciones.setEmpresaDescripcion(empresaorigen,Constantes.SMENSAJE_ESCOJA_OPCION);
				empresaorigen.setId(null);

				if(!EmpresaConstantesFunciones.ExisteEnLista(this.empresaorigensForeignKey,empresaorigen,true)) {

					this.empresaorigensForeignKey.add(0,empresaorigen);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeySucursal()throws Exception {
		try {

			if(!this.parametrofactuempresaSessionBean.getisBusquedaDesdeForeignKeySesionSucursal()) {
				Sucursal sucursal=new Sucursal();
				SucursalConstantesFunciones.setSucursalDescripcion(sucursal,Constantes.SMENSAJE_ESCOJA_OPCION);
				sucursal.setId(null);

				if(!SucursalConstantesFunciones.ExisteEnLista(this.sucursalsForeignKey,sucursal,true)) {

					this.sucursalsForeignKey.add(0,sucursal);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTransaccionOrigen()throws Exception {
		try {

			if(!this.parametrofactuempresaSessionBean.getisBusquedaDesdeForeignKeySesionTransaccionOrigen()) {
				Transaccion transaccionorigen=new Transaccion();
				TransaccionConstantesFunciones.setTransaccionDescripcion(transaccionorigen,Constantes.SMENSAJE_ESCOJA_OPCION);
				transaccionorigen.setId(null);

				if(!TransaccionConstantesFunciones.ExisteEnLista(this.transaccionorigensForeignKey,transaccionorigen,true)) {

					this.transaccionorigensForeignKey.add(0,transaccionorigen);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyBodegaOrigen()throws Exception {
		try {

			if(!this.parametrofactuempresaSessionBean.getisBusquedaDesdeForeignKeySesionBodegaOrigen()) {
				Bodega bodegaorigen=new Bodega();
				BodegaConstantesFunciones.setBodegaDescripcion(bodegaorigen,Constantes.SMENSAJE_ESCOJA_OPCION);
				bodegaorigen.setId(null);

				if(!BodegaConstantesFunciones.ExisteEnLista(this.bodegaorigensForeignKey,bodegaorigen,true)) {

					this.bodegaorigensForeignKey.add(0,bodegaorigen);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyClienteOrigen()throws Exception {
		try {

			if(!this.parametrofactuempresaSessionBean.getisBusquedaDesdeForeignKeySesionClienteOrigen()) {
				Cliente clienteorigen=new Cliente();
				ClienteConstantesFunciones.setClienteDescripcion(clienteorigen,Constantes.SMENSAJE_ESCOJA_OPCION);
				clienteorigen.setId(null);

				if(!ClienteConstantesFunciones.ExisteEnLista(this.clienteorigensForeignKey,clienteorigen,true)) {

					this.clienteorigensForeignKey.add(0,clienteorigen);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyEmpresaDestino()throws Exception {
		try {

			if(!this.parametrofactuempresaSessionBean.getisBusquedaDesdeForeignKeySesionEmpresaDestino()) {
				Empresa empresadestino=new Empresa();
				EmpresaConstantesFunciones.setEmpresaDescripcion(empresadestino,Constantes.SMENSAJE_ESCOJA_OPCION);
				empresadestino.setId(null);

				if(!EmpresaConstantesFunciones.ExisteEnLista(this.empresadestinosForeignKey,empresadestino,true)) {

					this.empresadestinosForeignKey.add(0,empresadestino);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeySucursalDestino()throws Exception {
		try {

			if(!this.parametrofactuempresaSessionBean.getisBusquedaDesdeForeignKeySesionSucursalDestino()) {
				Sucursal sucursaldestino=new Sucursal();
				SucursalConstantesFunciones.setSucursalDescripcion(sucursaldestino,Constantes.SMENSAJE_ESCOJA_OPCION);
				sucursaldestino.setId(null);

				if(!SucursalConstantesFunciones.ExisteEnLista(this.sucursaldestinosForeignKey,sucursaldestino,true)) {

					this.sucursaldestinosForeignKey.add(0,sucursaldestino);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTransaccionDestino()throws Exception {
		try {

			if(!this.parametrofactuempresaSessionBean.getisBusquedaDesdeForeignKeySesionTransaccionDestino()) {
				Transaccion transacciondestino=new Transaccion();
				TransaccionConstantesFunciones.setTransaccionDescripcion(transacciondestino,Constantes.SMENSAJE_ESCOJA_OPCION);
				transacciondestino.setId(null);

				if(!TransaccionConstantesFunciones.ExisteEnLista(this.transacciondestinosForeignKey,transacciondestino,true)) {

					this.transacciondestinosForeignKey.add(0,transacciondestino);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyBodegaDestino()throws Exception {
		try {

			if(!this.parametrofactuempresaSessionBean.getisBusquedaDesdeForeignKeySesionBodegaDestino()) {
				Bodega bodegadestino=new Bodega();
				BodegaConstantesFunciones.setBodegaDescripcion(bodegadestino,Constantes.SMENSAJE_ESCOJA_OPCION);
				bodegadestino.setId(null);

				if(!BodegaConstantesFunciones.ExisteEnLista(this.bodegadestinosForeignKey,bodegadestino,true)) {

					this.bodegadestinosForeignKey.add(0,bodegadestino);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyClienteDestino()throws Exception {
		try {

			if(!this.parametrofactuempresaSessionBean.getisBusquedaDesdeForeignKeySesionClienteDestino()) {
				Cliente clientedestino=new Cliente();
				ClienteConstantesFunciones.setClienteDescripcion(clientedestino,Constantes.SMENSAJE_ESCOJA_OPCION);
				clientedestino.setId(null);

				if(!ClienteConstantesFunciones.ExisteEnLista(this.clientedestinosForeignKey,clientedestino,true)) {

					this.clientedestinosForeignKey.add(0,clientedestino);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyEmpresaMultiDestino()throws Exception {
		try {

			if(!this.parametrofactuempresaSessionBean.getisBusquedaDesdeForeignKeySesionEmpresaMultiDestino()) {
				Empresa empresamultidestino=new Empresa();
				EmpresaConstantesFunciones.setEmpresaDescripcion(empresamultidestino,Constantes.SMENSAJE_ESCOJA_OPCION);
				empresamultidestino.setId(null);

				if(!EmpresaConstantesFunciones.ExisteEnLista(this.empresamultidestinosForeignKey,empresamultidestino,true)) {

					this.empresamultidestinosForeignKey.add(0,empresamultidestino);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeySucursalMultiDestino()throws Exception {
		try {

			if(!this.parametrofactuempresaSessionBean.getisBusquedaDesdeForeignKeySesionSucursalMultiDestino()) {
				Sucursal sucursalmultidestino=new Sucursal();
				SucursalConstantesFunciones.setSucursalDescripcion(sucursalmultidestino,Constantes.SMENSAJE_ESCOJA_OPCION);
				sucursalmultidestino.setId(null);

				if(!SucursalConstantesFunciones.ExisteEnLista(this.sucursalmultidestinosForeignKey,sucursalmultidestino,true)) {

					this.sucursalmultidestinosForeignKey.add(0,sucursalmultidestino);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTransaccionMultiDestino()throws Exception {
		try {

			if(!this.parametrofactuempresaSessionBean.getisBusquedaDesdeForeignKeySesionTransaccionMultiDestino()) {
				Transaccion transaccionmultidestino=new Transaccion();
				TransaccionConstantesFunciones.setTransaccionDescripcion(transaccionmultidestino,Constantes.SMENSAJE_ESCOJA_OPCION);
				transaccionmultidestino.setId(null);

				if(!TransaccionConstantesFunciones.ExisteEnLista(this.transaccionmultidestinosForeignKey,transaccionmultidestino,true)) {

					this.transaccionmultidestinosForeignKey.add(0,transaccionmultidestino);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyBodegaMultiOrigen()throws Exception {
		try {

			if(!this.parametrofactuempresaSessionBean.getisBusquedaDesdeForeignKeySesionBodegaMultiOrigen()) {
				Bodega bodegamultiorigen=new Bodega();
				BodegaConstantesFunciones.setBodegaDescripcion(bodegamultiorigen,Constantes.SMENSAJE_ESCOJA_OPCION);
				bodegamultiorigen.setId(null);

				if(!BodegaConstantesFunciones.ExisteEnLista(this.bodegamultiorigensForeignKey,bodegamultiorigen,true)) {

					this.bodegamultiorigensForeignKey.add(0,bodegamultiorigen);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyBodegaMultiDestino()throws Exception {
		try {

			if(!this.parametrofactuempresaSessionBean.getisBusquedaDesdeForeignKeySesionBodegaMultiDestino()) {
				Bodega bodegamultidestino=new Bodega();
				BodegaConstantesFunciones.setBodegaDescripcion(bodegamultidestino,Constantes.SMENSAJE_ESCOJA_OPCION);
				bodegamultidestino.setId(null);

				if(!BodegaConstantesFunciones.ExisteEnLista(this.bodegamultidestinosForeignKey,bodegamultidestino,true)) {

					this.bodegamultidestinosForeignKey.add(0,bodegamultidestino);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void initActionsCombosTodosForeignKeyParametroFactuEmpresa()throws Exception {
		try {
			
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void initActionsCombosTodosForeignKeyParametroFactuEmpresa(String sFormularioTipoBusqueda)throws Exception {
		try {
			
		} catch(Exception e) {
			throw e;
		}		
	}
	
	


	
	


	
	public void setVariablesGlobalesCombosForeignKeyParametroFactuEmpresa()throws Exception {	
		try {
			if(this.parametroGeneralUsuario!=null && this.parametroGeneralUsuario.getId()>0) {
			
				this.setActualEmpresaForeignKey(this.parametroGeneralUsuario.getid_empresa(),false,"Formulario");
			
			
			}
			
			//INICIALIZA VARIABLES COMBOS GLOBALES AUXILIARES A FORMULARIO(Anio,Mes)
			this.setVariablesGlobalesAuxiliaresCombosForeignKeyParametroFactuEmpresa();
		
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesObjetoActualToFormularioForeignKeyParametroFactuEmpresa(ParametroFactuEmpresa parametrofactuempresa)throws Exception {	
		try {
			
			this.setActualEmpresaOrigenForeignKey(parametrofactuempresa.getid_empresa_origen(),false,"Formulario");
			this.setActualSucursalForeignKey(parametrofactuempresa.getid_sucursal(),false,"Formulario");
			this.setActualTransaccionOrigenForeignKey(parametrofactuempresa.getid_transaccion_origen(),false,"Formulario");
			this.setActualBodegaOrigenForeignKey(parametrofactuempresa.getid_bodega_origen(),false,"Formulario");
			this.setActualClienteOrigenForeignKey(parametrofactuempresa.getid_cliente_origen(),false,"Formulario");
			this.setActualEmpresaDestinoForeignKey(parametrofactuempresa.getid_empresa_destino(),false,"Formulario");
			this.setActualSucursalDestinoForeignKey(parametrofactuempresa.getid_sucursal_destino(),false,"Formulario");
			this.setActualTransaccionDestinoForeignKey(parametrofactuempresa.getid_transaccion_destino(),false,"Formulario");
			this.setActualBodegaDestinoForeignKey(parametrofactuempresa.getid_bodega_destino(),false,"Formulario");
			this.setActualClienteDestinoForeignKey(parametrofactuempresa.getid_cliente_destino(),false,"Formulario");
			this.setActualEmpresaMultiDestinoForeignKey(parametrofactuempresa.getid_empresa_multi_destino(),false,"Formulario");
			this.setActualSucursalMultiDestinoForeignKey(parametrofactuempresa.getid_sucursal_multi_destino(),false,"Formulario");
			this.setActualTransaccionMultiDestinoForeignKey(parametrofactuempresa.getid_transaccion_multi_destino(),false,"Formulario");
			this.setActualBodegaMultiOrigenForeignKey(parametrofactuempresa.getid_bodega_multi_origen(),false,"Formulario");
			this.setActualBodegaMultiDestinoForeignKey(parametrofactuempresa.getid_bodega_multi_destino(),false,"Formulario");			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesObjetoActualToListasForeignKeyParametroFactuEmpresa(ParametroFactuEmpresa parametrofactuempresa,String sTipoEvento)throws Exception {	
		try {
			
			

				if(parametrofactuempresa.getClienteOrigen()!=null && !sTipoEvento.equals("id_cliente_origenParametroFactuEmpresa")) { //sTipoEvento Evita Bucle Infinito

					this.clienteorigensForeignKey=new ArrayList<Cliente>();
					this.clienteorigensForeignKey.add(parametrofactuempresa.getClienteOrigen());

					this.addItemDefectoCombosForeignKeyClienteOrigen();
					this.cargarCombosFrameClienteOrigensForeignKey("Todos");
				}

				if(parametrofactuempresa.getClienteDestino()!=null && !sTipoEvento.equals("id_cliente_destinoParametroFactuEmpresa")) { //sTipoEvento Evita Bucle Infinito

					this.clientedestinosForeignKey=new ArrayList<Cliente>();
					this.clientedestinosForeignKey.add(parametrofactuempresa.getClienteDestino());

					this.addItemDefectoCombosForeignKeyClienteDestino();
					this.cargarCombosFrameClienteDestinosForeignKey("Todos");
				}
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	/*
	public void setVariablesCombosFromBeanForeignKeyParametroFactuEmpresa()throws Exception {	
		try {
			
			this.setActualEmpresaOrigenForeignKey(this.parametrofactuempresaConstantesFunciones.getid_empresa_origen(),false,"Formulario");
			this.setActualSucursalForeignKey(this.parametrofactuempresaConstantesFunciones.getid_sucursal(),false,"Formulario");
			this.setActualTransaccionOrigenForeignKey(this.parametrofactuempresaConstantesFunciones.getid_transaccion_origen(),false,"Formulario");
			this.setActualBodegaOrigenForeignKey(this.parametrofactuempresaConstantesFunciones.getid_bodega_origen(),false,"Formulario");
			this.setActualClienteOrigenForeignKey(this.parametrofactuempresaConstantesFunciones.getid_cliente_origen(),false,"Formulario");
			this.setActualEmpresaDestinoForeignKey(this.parametrofactuempresaConstantesFunciones.getid_empresa_destino(),false,"Formulario");
			this.setActualSucursalDestinoForeignKey(this.parametrofactuempresaConstantesFunciones.getid_sucursal_destino(),false,"Formulario");
			this.setActualTransaccionDestinoForeignKey(this.parametrofactuempresaConstantesFunciones.getid_transaccion_destino(),false,"Formulario");
			this.setActualBodegaDestinoForeignKey(this.parametrofactuempresaConstantesFunciones.getid_bodega_destino(),false,"Formulario");
			this.setActualClienteDestinoForeignKey(this.parametrofactuempresaConstantesFunciones.getid_cliente_destino(),false,"Formulario");
			this.setActualEmpresaMultiDestinoForeignKey(this.parametrofactuempresaConstantesFunciones.getid_empresa_multi_destino(),false,"Formulario");
			this.setActualSucursalMultiDestinoForeignKey(this.parametrofactuempresaConstantesFunciones.getid_sucursal_multi_destino(),false,"Formulario");
			this.setActualTransaccionMultiDestinoForeignKey(this.parametrofactuempresaConstantesFunciones.getid_transaccion_multi_destino(),false,"Formulario");
			this.setActualBodegaMultiOrigenForeignKey(this.parametrofactuempresaConstantesFunciones.getid_bodega_multi_origen(),false,"Formulario");
			this.setActualBodegaMultiDestinoForeignKey(this.parametrofactuempresaConstantesFunciones.getid_bodega_multi_destino(),false,"Formulario");			
		} catch(Exception e) {
			throw e;
		}
	}
	*/
	
	public void setVariablesGlobalesAuxiliaresCombosForeignKeyParametroFactuEmpresa()throws Exception {	
		try {
			
		
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesDefaultCombosForeignKeyParametroFactuEmpresa()throws Exception {	
		try {
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesParametroCombosForeignKeyParametroFactuEmpresa()throws Exception {	
		try {
			
		} catch(Exception e) {
			throw e;
		}
	}		
	
	public void cargarCombosParametroParametroFactuEmpresa()throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			
			//this.cargarDatosCliente();
			
			
			
		} catch(Exception e) {
			throw e;
		}		
	}
		
	public void cargarCombosFrameForeignKeyParametroFactuEmpresa()throws Exception {
		try {
			

			this.cargarCombosFrameEmpresasForeignKey("Todos");
			this.cargarCombosFrameEmpresaOrigensForeignKey("Todos");
			this.cargarCombosFrameSucursalsForeignKey("Todos");
			this.cargarCombosFrameTransaccionOrigensForeignKey("Todos");
			this.cargarCombosFrameBodegaOrigensForeignKey("Todos");
			this.cargarCombosFrameClienteOrigensForeignKey("Todos");
			this.cargarCombosFrameEmpresaDestinosForeignKey("Todos");
			this.cargarCombosFrameSucursalDestinosForeignKey("Todos");
			this.cargarCombosFrameTransaccionDestinosForeignKey("Todos");
			this.cargarCombosFrameBodegaDestinosForeignKey("Todos");
			this.cargarCombosFrameClienteDestinosForeignKey("Todos");
			this.cargarCombosFrameEmpresaMultiDestinosForeignKey("Todos");
			this.cargarCombosFrameSucursalMultiDestinosForeignKey("Todos");
			this.cargarCombosFrameTransaccionMultiDestinosForeignKey("Todos");
			this.cargarCombosFrameBodegaMultiOrigensForeignKey("Todos");
			this.cargarCombosFrameBodegaMultiDestinosForeignKey("Todos");

		} catch(Exception e) {
			throw e;
		}		
	}		
	
	public void cargarCombosFrameForeignKeyParametroFactuEmpresa(String sFormularioTipoBusqueda)throws Exception {
		try {
			

			this.cargarCombosFrameEmpresasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameEmpresaOrigensForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameSucursalsForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTransaccionOrigensForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameBodegaOrigensForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameClienteOrigensForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameEmpresaDestinosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameSucursalDestinosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTransaccionDestinosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameBodegaDestinosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameClienteDestinosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameEmpresaMultiDestinosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameSucursalMultiDestinosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTransaccionMultiDestinosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameBodegaMultiOrigensForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameBodegaMultiDestinosForeignKey(sFormularioTipoBusqueda);

		} catch(Exception e) {
			throw e;
		}		
	}	
	
	public void setItemDefectoCombosForeignKeyParametroFactuEmpresa()throws Exception {
		try {
			



			if(this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_empresaParametroFactuEmpresa!=null && this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_empresaParametroFactuEmpresa.getItemCount()>0) {
				this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_empresaParametroFactuEmpresa.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_empresa_origenParametroFactuEmpresa!=null && this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_empresa_origenParametroFactuEmpresa.getItemCount()>0) {
				this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_empresa_origenParametroFactuEmpresa.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_sucursalParametroFactuEmpresa!=null && this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_sucursalParametroFactuEmpresa.getItemCount()>0) {
				this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_sucursalParametroFactuEmpresa.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_transaccion_origenParametroFactuEmpresa!=null && this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_transaccion_origenParametroFactuEmpresa.getItemCount()>0) {
				this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_transaccion_origenParametroFactuEmpresa.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_bodega_origenParametroFactuEmpresa!=null && this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_bodega_origenParametroFactuEmpresa.getItemCount()>0) {
				this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_bodega_origenParametroFactuEmpresa.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_cliente_origenParametroFactuEmpresa!=null && this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_cliente_origenParametroFactuEmpresa.getItemCount()>0) {
				this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_cliente_origenParametroFactuEmpresa.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_empresa_destinoParametroFactuEmpresa!=null && this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_empresa_destinoParametroFactuEmpresa.getItemCount()>0) {
				this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_empresa_destinoParametroFactuEmpresa.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_sucursal_destinoParametroFactuEmpresa!=null && this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_sucursal_destinoParametroFactuEmpresa.getItemCount()>0) {
				this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_sucursal_destinoParametroFactuEmpresa.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_transaccion_destinoParametroFactuEmpresa!=null && this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_transaccion_destinoParametroFactuEmpresa.getItemCount()>0) {
				this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_transaccion_destinoParametroFactuEmpresa.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_bodega_destinoParametroFactuEmpresa!=null && this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_bodega_destinoParametroFactuEmpresa.getItemCount()>0) {
				this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_bodega_destinoParametroFactuEmpresa.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_cliente_destinoParametroFactuEmpresa!=null && this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_cliente_destinoParametroFactuEmpresa.getItemCount()>0) {
				this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_cliente_destinoParametroFactuEmpresa.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_empresa_multi_destinoParametroFactuEmpresa!=null && this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_empresa_multi_destinoParametroFactuEmpresa.getItemCount()>0) {
				this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_empresa_multi_destinoParametroFactuEmpresa.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_sucursal_multi_destinoParametroFactuEmpresa!=null && this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_sucursal_multi_destinoParametroFactuEmpresa.getItemCount()>0) {
				this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_sucursal_multi_destinoParametroFactuEmpresa.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_transaccion_multi_destinoParametroFactuEmpresa!=null && this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_transaccion_multi_destinoParametroFactuEmpresa.getItemCount()>0) {
				this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_transaccion_multi_destinoParametroFactuEmpresa.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_bodega_multi_origenParametroFactuEmpresa!=null && this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_bodega_multi_origenParametroFactuEmpresa.getItemCount()>0) {
				this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_bodega_multi_origenParametroFactuEmpresa.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_bodega_multi_destinoParametroFactuEmpresa!=null && this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_bodega_multi_destinoParametroFactuEmpresa.getItemCount()>0) {
				this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_bodega_multi_destinoParametroFactuEmpresa.setSelectedIndex(0);
			}
		} catch(Exception e) {
			throw e;
		}		
	}		
	
	
































	
	

	public ParametroFactuEmpresaBeanSwingJInternalFrame() throws Exception {
		super(false,PaginaTipo.PRINCIPAL);
	}
	
	public ParametroFactuEmpresaBeanSwingJInternalFrame(Boolean cargarRelaciones,PaginaTipo paginaTipo) throws Exception {
		super(cargarRelaciones,paginaTipo);
	}
	
	public ParametroFactuEmpresaBeanSwingJInternalFrame(Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,PaginaTipo paginaTipo) throws Exception {
		super(cargarRelaciones,paginaTipo);
		
		this.parametrofactuempresaSessionBean=new ParametroFactuEmpresaSessionBean(); 
		this.parametrofactuempresaConstantesFunciones=new ParametroFactuEmpresaConstantesFunciones(); 
		this.parametrofactuempresaBean=new ParametroFactuEmpresa();//(this.parametrofactuempresaConstantesFunciones); 		
		this.parametrofactuempresaReturnGeneral=new ParametroFactuEmpresaParameterReturnGeneral(); 
		
		this.parametrofactuempresaSessionBean.setConGuardarRelaciones(conGuardarRelaciones);
		this.parametrofactuempresaSessionBean.setEsGuardarRelacionado(esGuardarRelacionado);
				
	}
	
	public ParametroFactuEmpresaBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,Boolean cargarTodosDatos,PaginaTipo paginaTipo) throws Exception {
		this(blncargarCombostrForeignKey,blnCargarInformacionInicial,jdesktopPane,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo,conGuardarRelaciones,esGuardarRelacionado,cargarRelaciones,cargarTodosDatos);
	}
		
	public ParametroFactuEmpresaBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,Boolean cargarRelaciones,Boolean cargarTodosDatos,PaginaTipo paginaTipo) throws Exception {
		this(blncargarCombostrForeignKey,blnCargarInformacionInicial,jdesktopPane,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo,false,false,cargarRelaciones,cargarTodosDatos);
	}	
	
	public ParametroFactuEmpresaBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,PaginaTipo paginaTipo,Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,Boolean cargarTodosDatos) throws Exception //Boolean esParaBusquedaForeignKey
    {
		super(jdesktopPane,conGuardarRelaciones,esGuardarRelacionado,cargarRelaciones,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo);
		
		try {
			
			this.permiteRecargarForm=false;
			
			this.startProcessParametroFactuEmpresa(true);
			
			Boolean esParaBusquedaForeignKey=false;//ANTES USADO COMO PARAMETRO DEL CONSTRUCTOR
			
			if(paginaTipo.equals(PaginaTipo.BUSQUEDA)) {
				esParaBusquedaForeignKey=true;
			}
			
			
			
			//SE ASIGNA EN CLASE PADRE
			/*
			this.parametroGeneralSg=parametroGeneralSg;		
			this.parametroGeneralUsuario=parametroGeneralUsuario;	
			this.usuarioActual=usuarioActual;
			this.moduloActual=moduloActual;
			*/						
			
			long start_time=0;
			long end_time=0;
			
			if(Constantes2.ISDEVELOPING2) {
				start_time = System.currentTimeMillis();
			}
			
			if(!cargarTodosDatos) {
				this.sAccionBusqueda="NINGUNO";
			}
			
			this.parametrofactuempresaConstantesFunciones=new ParametroFactuEmpresaConstantesFunciones(); 
			this.parametrofactuempresaBean=new ParametroFactuEmpresa();//this.parametrofactuempresaConstantesFunciones); 			
			this.parametrofactuempresaReturnGeneral=new ParametroFactuEmpresaParameterReturnGeneral(); 
		
			ParametroFactuEmpresaBeanSwingJInternalFrameAdditional.CargaInicialInicio(this, "NORMAL", null);
			
			this.setTitle(Funciones.GetTituloSistema(this.parametroGeneralSg,this.moduloActual,this.usuarioActual,"Parametro Empresa  Mantenimiento",paginaTipo));			
			
			this.conTotales=false;
			
			this.conTotales=true;
			
			
			this.parametrofactuempresa=new ParametroFactuEmpresa();
			this.parametrofactuempresas = new ArrayList<ParametroFactuEmpresa>();
			this.parametrofactuempresasAux = new ArrayList<ParametroFactuEmpresa>();
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuempresaLogic=new ParametroFactuEmpresaLogic();
				this.parametrofactuempresaLogic.getNewConnexionToDeep("");
			}
			
			//this.parametrofactuempresaSessionBean.setConGuardarRelaciones(conGuardarRelaciones);
			//this.parametrofactuempresaSessionBean.setEsGuardarRelacionado(esGuardarRelacionado);
			
			this.jDesktopPane=jdesktopPane;
			
			if(this.jDesktopPane.getClass().equals(JDesktopPaneMe.class)) {
				this.constantes2=((JDesktopPaneMe)this.jDesktopPane).constantes2;
			}
			
			if(!Constantes.CON_VARIAS_VENTANAS) {
    			MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameDetalleFormParametroFactuEmpresa);
				
				if(!this.conCargarMinimo) {
					
					if(this.jInternalFrameReporteDinamicoParametroFactuEmpresa!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameReporteDinamicoParametroFactuEmpresa);	
					}
					
					if(this.jInternalFrameImportacionParametroFactuEmpresa!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameImportacionParametroFactuEmpresa);							
					}
					
				}
				
				
				if(!this.conCargarMinimo) {
					
					if(this.jInternalFrameOrderByParametroFactuEmpresa!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameOrderByParametroFactuEmpresa);					
					}
					
				}
			}
			
			//DETALLE DATOS
			if(this.jInternalFrameDetalleFormParametroFactuEmpresa!=null) { //this.conCargarFormDetalle) {
				this.jDesktopPane.add(this.jInternalFrameDetalleFormParametroFactuEmpresa);
				this.jInternalFrameDetalleFormParametroFactuEmpresa.setVisible(false);
				this.jInternalFrameDetalleFormParametroFactuEmpresa.setSelected(false);						
			}
			
			if(!this.conCargarMinimo) {
				
				//REPORTE DINAMICO
				if(this.jInternalFrameReporteDinamicoParametroFactuEmpresa!=null) {
					this.jDesktopPane.add(this.jInternalFrameReporteDinamicoParametroFactuEmpresa);
					this.jInternalFrameReporteDinamicoParametroFactuEmpresa.setVisible(false);
					this.jInternalFrameReporteDinamicoParametroFactuEmpresa.setSelected(false);
				}
				
				//IMPORTACION
				if(this.jInternalFrameImportacionParametroFactuEmpresa!=null) {
					this.jDesktopPane.add(this.jInternalFrameImportacionParametroFactuEmpresa);
					this.jInternalFrameImportacionParametroFactuEmpresa.setVisible(false);
					this.jInternalFrameImportacionParametroFactuEmpresa.setSelected(false);
				}
				
				
			}
			
			
			if(!this.conCargarMinimo) {
				
				if(this.jInternalFrameOrderByParametroFactuEmpresa!=null) {
					this.jDesktopPane.add(this.jInternalFrameOrderByParametroFactuEmpresa);
					this.jInternalFrameOrderByParametroFactuEmpresa.setVisible(false);
					this.jInternalFrameOrderByParametroFactuEmpresa.setSelected(false);				
				}
				
			}
			
			
			//this.esParaBusquedaForeignKey=false;
			this.esParaBusquedaForeignKey=esParaBusquedaForeignKey;
			
			this.invalidValues=new InvalidValue[0];
			
			
			
			this.idParametroFactuEmpresaActual=0L;
			this.rowIndexActual=0;
			
			
			this.iNumeroPaginacionPagina=0;
			this.iNumeroPaginacion=ParametroFactuEmpresaConstantesFunciones.INUMEROPAGINACION;
			this.pagination=new Pagination();
			this.datosCliente=new DatosCliente();
			this.lIdUsuarioSesion=0L;	
			this.sTipoArchivoReporte="";
			this.sTipoArchivoReporteDinamico="";
			this.sTipoReporte="";
			this.sTipoReporteDinamico="";
			this.sTipoPaginacion="";
			this.sTipoRelacion="";
			this.sTipoAccion="";
			this.sTipoAccionFormulario="";
			this.sTipoSeleccionar="";			
			this.sDetalleReporte="";
			this.sTipoReporteExtra="";
			this.sValorCampoGeneral="";
			this.sPathReporteDinamico="";			
			
			this.isMostrarNumeroPaginacion=false;
			this.isSeleccionarTodos=false;
			this.isSeleccionados=false;
			this.conGraficoReporte=false;
			this.isPostAccionNuevo=false;
			this.isPostAccionSinCerrar=false;
			this.isPostAccionSinMensaje=false;
			this.esReporteDinamico=false;
			this.esRecargarFks=false;
			this.esReporteAccionProceso=false;
			
			this.parametrofactuempresaReturnGeneral=new ParametroFactuEmpresaParameterReturnGeneral();
			
			this.parametrofactuempresaParameterGeneral=new ParametroFactuEmpresaParameterReturnGeneral();
			
			
			
			this.sistemaLogicAdditional=new SistemaLogicAdditional();
			
			this.sistemaLogicAdditional.setConnexion(this.parametrofactuempresaLogic.getConnexion());			
			
			
			
			
			
			
			
			//VERIFICAR GLOBAL
			this.cargarDatosCliente();			
			
			
			if(!this.parametrofactuempresaSessionBean.getEsGuardarRelacionado()) {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					if(!sistemaLogicAdditional.validarLicenciaCliente(this.datosCliente,this.moduloActual,this.usuarioActual)) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_CONTROLGLOBAL);
					}
					
				} else if(Constantes.ISUSAEJBREMOTE) {
					
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}			
			
			//VERIFICAR GLOBAL
			
			//VERIFICAR SESSION ACTUAL
			//this.cargarDatosCliente();
			
			this.sistemaReturnGeneral=new SistemaParameterReturnGeneral();
			
			SistemaParameterReturnGeneralAdditional.inicializarSinSeguridad(this.sistemaReturnGeneral);
			
			if(ParametroFactuEmpresaJInternalFrame.CON_LLAMADA_SIMPLE) {
				if(this.parametrofactuempresaSessionBean.getEsGuardarRelacionado()) {
					this.opcionActual.setId(0L);
					
					//idOpcion=0L;					
				}
				
				ArrayList<String> arrPaginas=new ArrayList<String>();		
				ArrayList<Opcion> opcionsFinal=new ArrayList<Opcion>();	
				
		
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					//this.sistemaReturnGeneral=sistemaLogicAdditional.validarCargarSesionUsuarioActualWithConnection(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual,Constantes.LIDSISTEMAACTUAL,ParametroFactuEmpresaConstantesFunciones.SNOMBREOPCION,this.opcionActual,this.parametrofactuempresaSessionBean.getEsGuardarRelacionado(),this.parametrofactuempresaSessionBean.getConGuardarRelaciones(),arrPaginas);
					
					this.sistemaReturnGeneral=sistemaLogicAdditional.validarCargarSesionUsuarioActual(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual,Constantes.LIDSISTEMAACTUAL,ParametroFactuEmpresaConstantesFunciones.SNOMBREOPCION,this.opcionActual,this.parametrofactuempresaSessionBean.getEsGuardarRelacionado(),this.parametrofactuempresaSessionBean.getConGuardarRelaciones(),arrPaginas);
					
					if(!this.sistemaReturnGeneral.getEsValidado()) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_SESIONACTUAL);
					}
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
					//FALTA
				}
			} else { 
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					if(!sistemaLogicAdditional.validarSesionUsuarioActual(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual)) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_SESIONACTUAL);
					}
				
				} else if(Constantes.ISUSAEJBREMOTE) {
					
				} else if(Constantes.ISUSAEJBHOME) {
				}
			} 
			//VERIFICAR SESSION ACTUAL
			
			
			this.sVisibilidadTablaBusquedas="table-row";
			this.sVisibilidadTablaElementos="none";
			this.sVisibilidadTablaAcciones="none";
			
			this.isVisibilidadCeldaNuevoParametroFactuEmpresa=false;
			this.isVisibilidadCeldaDuplicarParametroFactuEmpresa=true;
			this.isVisibilidadCeldaCopiarParametroFactuEmpresa=true;
			this.isVisibilidadCeldaVerFormParametroFactuEmpresa=true;
			this.isVisibilidadCeldaOrdenParametroFactuEmpresa=true;
			this.isVisibilidadCeldaNuevoRelacionesParametroFactuEmpresa=false;
			this.isVisibilidadCeldaModificarParametroFactuEmpresa=false;
			this.isVisibilidadCeldaActualizarParametroFactuEmpresa=false;
			this.isVisibilidadCeldaEliminarParametroFactuEmpresa=false;
			this.isVisibilidadCeldaCancelarParametroFactuEmpresa=false;
			this.isVisibilidadCeldaGuardarParametroFactuEmpresa=false;
			this.isVisibilidadCeldaGuardarCambiosParametroFactuEmpresa=false;
			
			
			this.isVisibilidadFK_IdBodegaDestino=true;
			this.isVisibilidadFK_IdBodegaMultiDestino=true;
			this.isVisibilidadFK_IdBodegaMultiOrigen=true;
			this.isVisibilidadFK_IdBodegaOrigen=true;
			this.isVisibilidadFK_IdClienteDestino=true;
			this.isVisibilidadFK_IdClienteOrigen=true;
			this.isVisibilidadFK_IdEmpresa=true;
			this.isVisibilidadFK_IdEmpresaDestino=true;
			this.isVisibilidadFK_IdEmpresaMultiDestino=true;
			this.isVisibilidadFK_IdEmpresaOrigen=true;
			this.isVisibilidadFK_IdSucursal=true;
			this.isVisibilidadFK_IdSucursalDestino=true;
			this.isVisibilidadFK_IdSucursalMultiDestino=true;
			this.isVisibilidadFK_IdTransaccionDestino=true;
			this.isVisibilidadFK_IdTransaccionMultiDestino=true;
			this.isVisibilidadFK_IdTransaccionOrigen=true;
			
			//ELEMENTOS TABLAS PARAMETOS
			
			
			
			//ELEMENTOS TABLAS PARAMETOS_FIN
			
			//this.actualizarEstadoCeldasBotonesParametroFactuEmpresa("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
						
			
			
			this.inicializarPermisosParametroFactuEmpresa();
			
			//INICIALIZAR FALSE, TALVEZ COMENTAR
			this.setPermisosUsuarioParametroFactuEmpresa(false);
			
			this.setPermisosUsuarioParametroFactuEmpresa();
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.parametrofactuempresaSessionBean.getEsGuardarRelacionado() 
				|| (this.parametrofactuempresaSessionBean.getEsGuardarRelacionado() && this.parametrofactuempresaSessionBean.getConGuardarRelaciones())) {
				
				this.inicializarSetPermisosUsuarioParametroFactuEmpresaClasesRelacionadas();
			}
			
			if(this.parametrofactuempresaSessionBean.getConGuardarRelaciones()) {
				this.actualizarTabsSetPermisosUsuarioParametroFactuEmpresaClasesRelacionadas();
			}
			
			
			
			//SOLO SE EJECUTA LA PRIMERA VEZ, BINDINGS SI FUNCIONA
			if(!ParametroFactuEmpresaJInternalFrame.ISBINDING_MANUAL) {
				this.inicializarActualizarBindingBotonesPermisosParametroFactuEmpresa();
			} else {
				this.inicializarActualizarBindingBotonesPermisosManualParametroFactuEmpresa();
			}
			
			if(!this.isPermisoBusquedaParametroFactuEmpresa) {
				//BYDAN_BUSQUEDAS
				
				this.jTabbedPaneBusquedasParametroFactuEmpresa.setVisible(false);				
				
			}
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.parametrofactuempresaSessionBean.getEsGuardarRelacionado()) {				
				this.tiposArchivosReportes=Funciones.getListTiposArchivosReportes();
				this.tiposArchivosReportesDinamico=Funciones.getListTiposArchivosReportes();
				this.tiposReportes=Funciones.getListTiposReportes(true);
				this.tiposReportesDinamico=Funciones.getListTiposReportesDinamico(true);
				
				
				
				this.tiposGraficosReportes=Funciones2.getListTiposGraficosReportes();
				this.tiposPaginacion=Funciones2.getListTiposPaginacion(this.isPermisoPaginacionMedioParametroFactuEmpresa,this.isPermisoPaginacionMedioParametroFactuEmpresa,this.isPermisoPaginacionTodoParametroFactuEmpresa);
				this.tiposSeleccionar=Funciones2.getListTiposSeleccionar();
				this.tiposSeleccionar.addAll(ParametroFactuEmpresaConstantesFunciones.getTiposSeleccionarParametroFactuEmpresa());
				
				this.tiposColumnasSelect=ParametroFactuEmpresaConstantesFunciones.getTiposSeleccionarParametroFactuEmpresa(true);
				
				this.tiposRelacionesSelect=new ArrayList<Reporte>();								
				
				
			} else {
				this.tiposArchivosReportes=new ArrayList<Reporte>();
				this.tiposArchivosReportesDinamico=new ArrayList<Reporte>();
				this.tiposReportes=new ArrayList<Reporte>();
				this.tiposReportesDinamico=new ArrayList<Reporte>();
				this.tiposGraficosReportes=new ArrayList<Reporte>();
				this.tiposPaginacion=new ArrayList<Reporte>();
				this.tiposSeleccionar=new ArrayList<Reporte>();			
				this.tiposColumnasSelect=new ArrayList<Reporte>();	
				this.tiposRelacionesSelect=new ArrayList<Reporte>();	
			}
						
			
			//FUNCIONALIDAD_RELACIONADO
			//if(!this.parametrofactuempresaSessionBean.getEsGuardarRelacionado()) {
				//SE ENCUENTRA MAS ADELANTE CON ACCIONES POR USUARIO
				//ACCIONES GENERALES Y POR USUARIO
				this.tiposRelaciones=Funciones2.getListTiposRelaciones();
				this.setRelacionesUsuarioParametroFactuEmpresa();
				
				this.tiposAcciones=Funciones2.getListTiposAcciones(true,false,true);
				this.setAccionesUsuarioParametroFactuEmpresa(false);	
				
				this.tiposAccionesFormulario=Funciones2.getListTiposAccionesFormulario(true,false,true);							
				this.setAccionesUsuarioParametroFactuEmpresa(true);	
				
				this.inicializarActualizarBindingtiposArchivosReportesAccionesParametroFactuEmpresa() ;
			
			/*
			} else {
				this.tiposAcciones=new ArrayList<Reporte>();
				this.tiposAccionesFormulario=new ArrayList<Reporte>();
			}
			*/						
			
			this.inicializarInvalidValues();
						
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			
			
			this.arrOrderBy= new  ArrayList<OrderBy>();
			
			
			this.arrDatoGeneralMinimos= new  ArrayList<DatoGeneralMinimo>();
			
			
			this.traerValoresTablaOrderBy();			
			
			
			this.isGuardarCambiosEnLote=false;
			this.isCargarCombosDependencia=false;
			
			 
			jasperPrint = null;												
			
			//FK
			
			this.empresaLogic=new EmpresaLogic();
			this.empresaorigenLogic=new EmpresaLogic();
			this.sucursalLogic=new SucursalLogic();
			this.transaccionorigenLogic=new TransaccionLogic();
			this.bodegaorigenLogic=new BodegaLogic();
			this.clienteorigenLogic=new ClienteLogic();
			this.empresadestinoLogic=new EmpresaLogic();
			this.sucursaldestinoLogic=new SucursalLogic();
			this.transacciondestinoLogic=new TransaccionLogic();
			this.bodegadestinoLogic=new BodegaLogic();
			this.clientedestinoLogic=new ClienteLogic();
			this.empresamultidestinoLogic=new EmpresaLogic();
			this.sucursalmultidestinoLogic=new SucursalLogic();
			this.transaccionmultidestinoLogic=new TransaccionLogic();
			this.bodegamultiorigenLogic=new BodegaLogic();
			this.bodegamultidestinoLogic=new BodegaLogic();
			
			//PARAMETROS
			
			
			/*
			if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {		
				hashtableEnv =  Funciones.getHashtableEnv();		
				initialContext = new InitialContext(hashtableEnv);	
			}
			*/
			/*
			if(Constantes.ISUSAEJBREMOTE) {
				parametrofactuempresaImplementable= (ParametroFactuEmpresaImplementable) initialContext.lookup(Constantes.SEJBPACKAGE+Constantes.SEJBSEPARATOR+ParametroFactuEmpresaConstantesFunciones.SEJBNAME+Constantes.SEJBSEPARATOR+Constantes.SEJBREMOTE);
			} else if(Constantes.ISUSAEJBHOME) {
				parametrofactuempresaImplementableHome= (ParametroFactuEmpresaImplementableHome) initialContext.lookup(Constantes.SEJBPACKAGE+Constantes.SEJBSEPARATOR+ParametroFactuEmpresaConstantesFunciones.SEJBNAME+Constantes.SEJBSEPARATOR+Constantes.SEJBLOCAL);
			}			
			*/
			
			
			this.parametrofactuempresas= new ArrayList<ParametroFactuEmpresa>();
			this.parametrofactuempresasEliminados= new ArrayList<ParametroFactuEmpresa>();
						
			this.isEsNuevoParametroFactuEmpresa=false;
			this.esParaAccionDesdeFormularioParametroFactuEmpresa=false;
			this.isEsMantenimientoRelacionesRelacionadoUnico=false;
			this.isEsMantenimientoRelaciones=false;
			this.isEsMantenimientoRelacionado=false;
			this.isContieneImagenes=false;
			
			
			
			
			//BUSQUEDA INTERNA FK
			this.idClienteOrigenActual=0L;
			this.idClienteDestinoActual=0L;
			
			//INICIALIZAR LISTAS FK
			
			this.empresasForeignKey=new ArrayList<Empresa>() ;
			this.empresaorigensForeignKey=new ArrayList<Empresa>() ;
			this.sucursalsForeignKey=new ArrayList<Sucursal>() ;
			this.transaccionorigensForeignKey=new ArrayList<Transaccion>() ;
			this.bodegaorigensForeignKey=new ArrayList<Bodega>() ;
			this.clienteorigensForeignKey=new ArrayList<Cliente>() ;
			this.empresadestinosForeignKey=new ArrayList<Empresa>() ;
			this.sucursaldestinosForeignKey=new ArrayList<Sucursal>() ;
			this.transacciondestinosForeignKey=new ArrayList<Transaccion>() ;
			this.bodegadestinosForeignKey=new ArrayList<Bodega>() ;
			this.clientedestinosForeignKey=new ArrayList<Cliente>() ;
			this.empresamultidestinosForeignKey=new ArrayList<Empresa>() ;
			this.sucursalmultidestinosForeignKey=new ArrayList<Sucursal>() ;
			this.transaccionmultidestinosForeignKey=new ArrayList<Transaccion>() ;
			this.bodegamultiorigensForeignKey=new ArrayList<Bodega>() ;
			this.bodegamultidestinosForeignKey=new ArrayList<Bodega>() ;
			
			
			
			
			if(blncargarCombostrForeignKey) {
				this.cargarCombosForeignKeyParametroFactuEmpresa(this.isCargarCombosDependencia);
			}
			
			this.cargarCombosParametroParametroFactuEmpresa();
			
			
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.parametrofactuempresaSessionBean.getEsGuardarRelacionado()) {
				this.onLoad();
			}
						
			ParametroFactuEmpresaBeanSwingJInternalFrameAdditional.RecargarVentanaSegunOpcion(this,opcionActual);
			
			/*
			if(blnCargarInformacionInicial) {
				this.recargarInformacion();
			}
			*/
			//this.iNumeroPaginacionPagina=0;
			//this.iNumeroPaginacion=ParametroFactuEmpresaConstantesFunciones.INUMEROPAGINACION;
			
			this.actualizarEstadoCeldasBotonesParametroFactuEmpresa("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			//SOLO LA PRIMERA VEZ HACE LOS BINDINGS, SOLO AHI FUNCIONA
			this.inicializarActualizarBindingParametroFactuEmpresa(true); 
			
			//SE REDIMENSIONA SINO NO SE ACTUALIZA
			this.redimensionarTablaDatos();
			
			
			this.initActions();
			
			;
						
			if(this.jInternalFrameDetalleFormParametroFactuEmpresa!=null) {//if(this.conCargarFormDetalle) {
				this.cargarMenuRelaciones();
			}
			
			//OBLIGA CARGAR DETALLE, MEJOR DESHABILITAR, FALTA TALVEZ PONER EN SELECCIONAR
			//MAYBE
			//this.updateControlesFormularioParametroFactuEmpresa();
			
			if(!this.conCargarMinimo) {
				this.updateBusquedasFormularioParametroFactuEmpresa();
			}
			
			ParametroFactuEmpresaBeanSwingJInternalFrameAdditional.CargaInicial(this, "NORMAL", null);
			
			
			//SE REALIZA ESTO PARA QUE SE PUEDA RECORRER TAB SIN IMPORTAR ORDEN
			Boolean existeTabBusqueda=false;
			
			if(!this.conCargarMinimo) {
				//BYDAN_BUSQUEDAS
				
				
				for(int i=0; i<this.jTabbedPaneBusquedasParametroFactuEmpresa.getTabCount(); i++) {
					this.jTabbedPaneBusquedasParametroFactuEmpresa.setSelectedIndex(i);
						
					if(!existeTabBusqueda) {
						existeTabBusqueda=true;
					}
				}
					
				if(existeTabBusqueda) {
					this.jTabbedPaneBusquedasParametroFactuEmpresa.setSelectedIndex(0);
				}	
				
				
			}
			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuempresaLogic.commitNewConnexionToDeep();
			}
			
			
			if(Constantes2.ISDEVELOPING2) {
				end_time = System.currentTimeMillis();			
				String sTipo="Load Ventana";
				Funciones2.getMensajeTiempoEjecucion(start_time, end_time, sTipo,false);
			}  
			
			this.finishProcessParametroFactuEmpresa(true);
			
			this.dEnd=(double)System.currentTimeMillis();
			
			this.dDif=this.dEnd - this.dStart;
			
			if(Constantes.ISDEVELOPING) {
				System.out.println("Tiempo(ms) Carga ParametroFactuEmpresa: " + this.dDif); 
			}
			
			this.permiteRecargarForm=true;
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuempresaLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,ParametroFactuEmpresaConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuempresaLogic.closeNewConnexionToDeep();
			}
		}	 
    }
	
	public void cargarTiposRelacionesSelectParametroFactuEmpresa() {
		Reporte reporte=new Reporte();
		
	
	}
	
	
	
	public void jTabbedPaneChangeListenerGeneral(String sTipo,ChangeEvent evt) { 	  
		Boolean procesaCargarParteTab=false;
			
		try {
			int iIndex=0;		    			
			String sTitle="";
			
			//TABBED PANE RELACIONES
			if(sTipo.equals("RelacionesParametroFactuEmpresa")) {
				iIndex=this.jInternalFrameDetalleFormParametroFactuEmpresa.jTabbedPaneRelacionesParametroFactuEmpresa.getSelectedIndex();		    
			
				sTitle=this.jInternalFrameDetalleFormParametroFactuEmpresa.jTabbedPaneRelacionesParametroFactuEmpresa.getTitleAt(iIndex);
				
				Integer intSelectedRow = 0;	
			
				intSelectedRow = this.jTableDatosParametroFactuEmpresa.getSelectedRow();	
				
				
				
			}
			
			//TABBED PANE RELACIONES FIN(EXTRA TAB)
			;
			
  		} catch(Exception e) {
  			e.printStackTrace();
  		} finally {
			if(procesaCargarParteTab) {				
				this.finishProcessParametroFactuEmpresa();	
			}
		}
    }
	
	
	
	public void jButtonRelacionActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
  		} catch(Exception e) {
  			e.printStackTrace();
  		}
    }
	
	public void cargarMenuRelaciones() {	
		JMenuItem jmenuItem= new JMenuItem("General");
		String sLabelMenu="";
		
	}		
	
	public void cargarCombosForeignKeyParametroFactuEmpresa(Boolean cargarCombosDependencia) throws Exception {   
		this.cargarCombosForeignKeyParametroFactuEmpresa(cargarCombosDependencia,true,true);
	}
	
	//CARGAR COMBOS EN LOTE
	public void cargarCombosForeignKeyParametroFactuEmpresa(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales) throws Exception {   
		this.cargarCombosTodosForeignKeyParametroFactuEmpresaListas(cargarCombosDependencia);
				
		this.addItemDefectoCombosTodosForeignKeyParametroFactuEmpresa();
		
		this.cargarCombosFrameForeignKeyParametroFactuEmpresa();						
		
		if(conInitActions) {
			this.initActionsCombosTodosForeignKeyParametroFactuEmpresa();
		}
		
		if(conSetVariablesGlobales) {
			this.setVariablesGlobalesCombosForeignKeyParametroFactuEmpresa();
		}
	}
	
	

	public void cargarCombosForeignKeyEmpresaOrigen(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyEmpresaOrigenListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyEmpresaOrigen();
				this.cargarCombosFrameEmpresaOrigensForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaEmpresaOrigen(this.empresaorigensForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeySucursal(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeySucursalListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeySucursal();
				this.cargarCombosFrameSucursalsForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaSucursal(this.sucursalsForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTransaccionOrigen(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTransaccionOrigenListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTransaccionOrigen();
				this.cargarCombosFrameTransaccionOrigensForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaTransaccionOrigen(this.transaccionorigensForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyBodegaOrigen(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyBodegaOrigenListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyBodegaOrigen();
				this.cargarCombosFrameBodegaOrigensForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaBodegaOrigen(this.bodegaorigensForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyClienteOrigen(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyClienteOrigenListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyClienteOrigen();
				this.cargarCombosFrameClienteOrigensForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaClienteOrigen(this.clienteorigensForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyEmpresaDestino(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyEmpresaDestinoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyEmpresaDestino();
				this.cargarCombosFrameEmpresaDestinosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaEmpresaDestino(this.empresadestinosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeySucursalDestino(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeySucursalDestinoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeySucursalDestino();
				this.cargarCombosFrameSucursalDestinosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaSucursalDestino(this.sucursaldestinosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTransaccionDestino(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTransaccionDestinoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTransaccionDestino();
				this.cargarCombosFrameTransaccionDestinosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaTransaccionDestino(this.transacciondestinosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyBodegaDestino(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyBodegaDestinoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyBodegaDestino();
				this.cargarCombosFrameBodegaDestinosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaBodegaDestino(this.bodegadestinosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyClienteDestino(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyClienteDestinoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyClienteDestino();
				this.cargarCombosFrameClienteDestinosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaClienteDestino(this.clientedestinosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyEmpresaMultiDestino(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyEmpresaMultiDestinoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyEmpresaMultiDestino();
				this.cargarCombosFrameEmpresaMultiDestinosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaEmpresaMultiDestino(this.empresamultidestinosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeySucursalMultiDestino(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeySucursalMultiDestinoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeySucursalMultiDestino();
				this.cargarCombosFrameSucursalMultiDestinosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaSucursalMultiDestino(this.sucursalmultidestinosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTransaccionMultiDestino(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTransaccionMultiDestinoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTransaccionMultiDestino();
				this.cargarCombosFrameTransaccionMultiDestinosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaTransaccionMultiDestino(this.transaccionmultidestinosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyBodegaMultiOrigen(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyBodegaMultiOrigenListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyBodegaMultiOrigen();
				this.cargarCombosFrameBodegaMultiOrigensForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaBodegaMultiOrigen(this.bodegamultiorigensForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyBodegaMultiDestino(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyBodegaMultiDestinoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyBodegaMultiDestino();
				this.cargarCombosFrameBodegaMultiDestinosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaBodegaMultiDestino(this.bodegamultidestinosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}
	
	public void jButtonNuevoParametroFactuEmpresaActionPerformed(ActionEvent evt,Boolean esRelaciones) throws Exception {   
		try {
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.FORM_RECARGAR;
			String sTipo="NUEVO_NORMAL";
			
			this.estaModoNuevo=true;
			
			if(this.parametrofactuempresaSessionBean.getConGuardarRelaciones()) {
				this.dStart=(double)System.currentTimeMillis();
			}
				
			//if(this.esUsoDesdeHijo) {
			//	eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			//}
											
			if(this.jInternalFrameDetalleFormParametroFactuEmpresa==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}			
				
			ParametroFactuEmpresaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.parametrofactuempresa,new Object(),this.parametrofactuempresaParameterGeneral,this.parametrofactuempresaReturnGeneral);
			
			
			if(jTableDatosParametroFactuEmpresa.getRowCount()>=1) {
				jTableDatosParametroFactuEmpresa.removeRowSelectionInterval(0, jTableDatosParametroFactuEmpresa.getRowCount()-1);						
			}
			
			this.isEsNuevoParametroFactuEmpresa=true;
			
			//ESTABLECE SI ES RELACIONADO O NO 
			this.habilitarDeshabilitarTipoMantenimientoParametroFactuEmpresa(esRelaciones);
			
			this.nuevoPreparar(false); 
			this.habilitarDeshabilitarControlesParametroFactuEmpresa(true);			
			//this.parametrofactuempresa=new ParametroFactuEmpresa();
			//this.parametrofactuempresa.setIsChanged(true);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesParametroFactuEmpresa(false) ;						
			 
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualParametroFactuEmpresa() ;
			
			if(ParametroFactuEmpresaJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetalleParametroFactuEmpresa(esRelaciones);
			}
					
			//Se Duplica, sin sentido
			//this.actualizarInformacion("EVENTO_NUEVO",false,this.parametrofactuempresa);	
			this.actualizarInformacion("INFO_PADRE",false,this.parametrofactuempresa);				
			
			ParametroFactuEmpresaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.parametrofactuempresa,new Object(),this.parametrofactuempresaParameterGeneral,this.parametrofactuempresaReturnGeneral);
			
			if(this.parametrofactuempresaSessionBean.getConGuardarRelaciones()) {
				this.dEnd=(double)System.currentTimeMillis();					
				this.dDif=this.dEnd - this.dStart;
					
				if(Constantes.ISDEVELOPING) {
					System.out.println("Tiempo(ms) Nuevo Preparar ParametroFactuEmpresa: " + this.dDif); 
				}
			}
			
			//false para que pueda generar eventos
			this.estaModoNuevo=false;
							
			//Con this.estaModoNuevo=false;, se permite actualizar y usar eventos control al mismo tiempo (FuncionTipo.LAST)			
			ParametroFactuEmpresaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.LAST,ControlTipo.FORM,EventoTipo.CLIC,EventoSubTipo.NEW,sTipo,this.parametrofactuempresa,new Object(),this.parametrofactuempresaParameterGeneral,this.parametrofactuempresaReturnGeneral);
			
		} catch(Exception e) {									
			FuncionesSwing.manageException(this, e,logger,ParametroFactuEmpresaConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoNuevo=false;			
		}
	}
	
	public void jButtonDuplicarParametroFactuEmpresaActionPerformed(ActionEvent evt,Boolean esRelaciones) throws Exception {   
		try {
			Boolean soloDuplicarUno=false;
			Boolean conSeleccionarFilaTabla=false;
			
			this.estaModoNuevo=true;
			this.estaModoDuplicar=true;
			
			ArrayList<ParametroFactuEmpresa> parametrofactuempresasSeleccionados=new ArrayList<ParametroFactuEmpresa>();
			int intSelectedRow =-1;
			Integer iNumRowsSeleccionados=0;
			int[] arrNumRowsSeleccionados=null;
			
			//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
			if(conSeleccionarFilaTabla) {
				arrNumRowsSeleccionados=this.jTableDatosParametroFactuEmpresa.getSelectedRows();
				iNumRowsSeleccionados=this.jTableDatosParametroFactuEmpresa.getSelectedRows().length;			
			}
			
			parametrofactuempresasSeleccionados=this.getParametroFactuEmpresasSeleccionados(false);
				
			if((soloDuplicarUno && iNumRowsSeleccionados.equals(1)) || !soloDuplicarUno) {
				//LO HACE NUEVOPREPARAR
				//this.iIdNuevoParametroFactuEmpresa--;			
				//ParametroFactuEmpresa parametrofactuempresaAux= new ParametroFactuEmpresa();			
				//parametrofactuempresaAux.setId(this.iIdNuevoParametroFactuEmpresa);																
				
				//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
				//ParametroFactuEmpresa parametrofactuempresaOrigen=new ParametroFactuEmpresa();
				//for(Integer iNumRowSeleccionado:arrNumRowsSeleccionados) {				
				
				for(ParametroFactuEmpresa parametrofactuempresaOrigen : parametrofactuempresasSeleccionados) {
					if(conSeleccionarFilaTabla) {
						if(!soloDuplicarUno) {
							//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
							//intSelectedRow =iNumRowSeleccionado;
						} else {
							intSelectedRow = this.jTableDatosParametroFactuEmpresa.getSelectedRow();
						}
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							parametrofactuempresaOrigen =(ParametroFactuEmpresa) this.parametrofactuempresaLogic.getParametroFactuEmpresas().toArray()[this.jTableDatosParametroFactuEmpresa.convertRowIndexToModel(intSelectedRow)];
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrofactuempresaOrigen =(ParametroFactuEmpresa) this.parametrofactuempresas.toArray()[this.jTableDatosParametroFactuEmpresa.convertRowIndexToModel(intSelectedRow)];
						}
					}
					
					this.aumentarTamanioFilaNuevaTablaParametroFactuEmpresa();
					
					if(this.conTotales) {
						this.quitarFilaTotales();
					}
					
					this.nuevoPreparar(true);
					
					this.parametrofactuempresa.setsType("DUPLICADO");
					
					this.setCopiarVariablesObjetosParametroFactuEmpresa(parametrofactuempresaOrigen,this.parametrofactuempresa,true,true);
					
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuEmpresa(this.parametrofactuempresa);
					
					//LO HACE NUEVOPREPARAR
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						this.parametrofactuempresaLogic.getParametroFactuEmpresas().add(this.parametrofactuempresaAux);
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						this.parametrofactuempresas.add(this.parametrofactuempresaAux);				
					}
					*/
				}
				
				this.inicializarActualizarBindingTablaParametroFactuEmpresa(false);
				
				this.jTableDatosParametroFactuEmpresa.setRowSelectionInterval(this.getIndiceNuevoParametroFactuEmpresa(), this.getIndiceNuevoParametroFactuEmpresa());
				
				int iLastRow =  this.jTableDatosParametroFactuEmpresa.getRowCount () - 1;
				Rectangle rectangle = this.jTableDatosParametroFactuEmpresa.getCellRect(iLastRow, 0, true);
				
				this.jTableDatosParametroFactuEmpresa.scrollRectToVisible(rectangle);
				
				//FILA TOTALES
				if(this.conTotales) {
					this.crearFilaTotales();
					
					this.inicializarActualizarBindingTablaParametroFactuEmpresa(false);
				}
			} else {
				throw new Exception("DEBE ESTAR SELECCIONADO 1 REGISTRO");
			}
			
		} catch(Exception e) {			
			FuncionesSwing.manageException(this, e,logger,ParametroFactuEmpresaConstantesFunciones.CLASSNAME);
		
		} finally {
			this.estaModoNuevo=false;
			this.estaModoDuplicar=false;
		}
	}
	
	public void jButtonCopiarParametroFactuEmpresaActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			Boolean conSeleccionarFilaTabla=false;
			Integer iNumRowsSeleccionados=0;
			int[] intSelectedRows =null;
			int intSelectedRow =0;
			
			this.estaModoCopiar=true;
			
			ArrayList<ParametroFactuEmpresa> parametrofactuempresasSeleccionados=new ArrayList<ParametroFactuEmpresa>();									
		
			ParametroFactuEmpresa parametrofactuempresaOrigen=new ParametroFactuEmpresa();
			ParametroFactuEmpresa parametrofactuempresaDestino=new ParametroFactuEmpresa();
				
			parametrofactuempresasSeleccionados=this.getParametroFactuEmpresasSeleccionados(false);
			
			if(conSeleccionarFilaTabla) {
				iNumRowsSeleccionados=this.jTableDatosParametroFactuEmpresa.getSelectedRows().length;	
			}
			
			if(iNumRowsSeleccionados.equals(2) || parametrofactuempresasSeleccionados.size()==2) {
				if(conSeleccionarFilaTabla) {
					intSelectedRows =this.jTableDatosParametroFactuEmpresa.getSelectedRows();
					intSelectedRow = intSelectedRows[0];	
									
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrofactuempresaOrigen =(ParametroFactuEmpresa) this.parametrofactuempresaLogic.getParametroFactuEmpresas().toArray()[this.jTableDatosParametroFactuEmpresa.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						parametrofactuempresaOrigen =(ParametroFactuEmpresa) this.parametrofactuempresas.toArray()[this.jTableDatosParametroFactuEmpresa.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					intSelectedRow = intSelectedRows[1];
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrofactuempresaDestino =(ParametroFactuEmpresa) this.parametrofactuempresaLogic.getParametroFactuEmpresas().toArray()[this.jTableDatosParametroFactuEmpresa.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						parametrofactuempresaDestino =(ParametroFactuEmpresa) this.parametrofactuempresas.toArray()[this.jTableDatosParametroFactuEmpresa.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				}
				
				parametrofactuempresaOrigen =parametrofactuempresasSeleccionados.get(0);
				parametrofactuempresaDestino =parametrofactuempresasSeleccionados.get(1);
				
				this.setCopiarVariablesObjetosParametroFactuEmpresa(parametrofactuempresaOrigen,parametrofactuempresaDestino,true,false);
				
				parametrofactuempresaDestino.setsType("DUPLICADO");
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					actualizarLista(parametrofactuempresaDestino,parametrofactuempresaLogic.getParametroFactuEmpresas());					
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(parametrofactuempresaDestino,parametrofactuempresas);
				}
				//ARCHITECTURE
				
				this.inicializarActualizarBindingTablaParametroFactuEmpresa(false);
				
				//this.jTableDatosParametroFactuEmpresa.setRowSelectionInterval(this.getIndiceNuevoParametroFactuEmpresa(), this.getIndiceNuevoParametroFactuEmpresa());
				
				int iLastRow =  this.jTableDatosParametroFactuEmpresa.getRowCount () - 1;
				Rectangle rectangle = this.jTableDatosParametroFactuEmpresa.getCellRect(iLastRow, 0, true);
				
				this.jTableDatosParametroFactuEmpresa.scrollRectToVisible(rectangle);
				
				//FILA TOTALES
				if(this.conTotales) {
					//this.crearFilaTotales();
					
					this.inicializarActualizarBindingTablaParametroFactuEmpresa(false);
				}
			} else {
				throw new Exception("DEBEN ESTAR SELECCIONADOS 2 REGISTROS");
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroFactuEmpresaConstantesFunciones.CLASSNAME);
		
		}  finally {
			this.estaModoCopiar=false;
		}
	}
	
	public void jButtonVerFormParametroFactuEmpresaActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			if(this.jInternalFrameDetalleFormParametroFactuEmpresa==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			this.jInternalFrameDetalleFormParametroFactuEmpresa.setSelected(true);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroFactuEmpresaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonMostrarOcultarParametroFactuEmpresaActionPerformed(ActionEvent evt) throws Exception {   
		try {
			Boolean isVisible=this.jPanelParametrosReportesParametroFactuEmpresa.isVisible();
			
			//BYDAN_BUSQUEDAS
			
			this.jTabbedPaneBusquedasParametroFactuEmpresa.setVisible(!isVisible);			
			
			
			this.jPanelParametrosReportesParametroFactuEmpresa.setVisible(!isVisible);
			this.jPanelPaginacionParametroFactuEmpresa.setVisible(!isVisible);
			this.jPanelAccionesParametroFactuEmpresa.setVisible(!isVisible);
							
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroFactuEmpresaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarParametroFactuEmpresaActionPerformed(ActionEvent evt) throws Exception {   
		try {
			this.closingInternalFrameParametroFactuEmpresa();
			
			//if(this.jInternalFrameParent==null) {
				//this.dispose();
			/*} else {
				this.setVisible(false);
	        	this.setSelected(false);	
			}*/			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroFactuEmpresaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarReporteDinamicoParametroFactuEmpresaActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.cerrarFrameReporteDinamicoParametroFactuEmpresa();
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroFactuEmpresaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarImportacionParametroFactuEmpresaActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.cerrarFrameImportacionParametroFactuEmpresa();
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroFactuEmpresaConstantesFunciones.CLASSNAME);
		}
	}
	
	
	public void jButtonAbrirOrderByParametroFactuEmpresaActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			
			this.abrirInicializarFrameOrderByParametroFactuEmpresa();
			
			this.abrirFrameOrderByParametroFactuEmpresa();
			
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroFactuEmpresaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarOrderByParametroFactuEmpresaActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.cerrarFrameOrderByParametroFactuEmpresa();
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroFactuEmpresaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void abrirFrameDetalleParametroFactuEmpresa(Boolean esRelaciones) throws Exception {	    	        
	    try {
			//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false
			//this.jDesktopPane.add(jInternalFrameDetalleFormParametroFactuEmpresa);
			
			if(!esRelaciones) {
				if(this.jInternalFrameDetalleFormParametroFactuEmpresa.isMaximum()) {
					this.jInternalFrameDetalleFormParametroFactuEmpresa.setMaximum(false);
				}								
				
	    		this.jInternalFrameDetalleFormParametroFactuEmpresa.setSize(this.jInternalFrameDetalleFormParametroFactuEmpresa.iWidthFormulario,this.jInternalFrameDetalleFormParametroFactuEmpresa.iHeightFormulario);
	    	} else {
				if(this.iWidthScroll<this.jInternalFrameDetalleFormParametroFactuEmpresa.iWidthFormularioMaximo) {
	    			this.jInternalFrameDetalleFormParametroFactuEmpresa.setSize(this.iWidthScroll,this.iHeightScroll);
				} else {
					if(!this.jInternalFrameDetalleFormParametroFactuEmpresa.isMaximum()) {
						this.jInternalFrameDetalleFormParametroFactuEmpresa.setMaximum(true);
					}
				}
				
				if(this.jInternalFrameDetalleFormParametroFactuEmpresa.jContentPaneDetalleParametroFactuEmpresa.getWidth() > this.getWidth()) {
					this.jInternalFrameDetalleFormParametroFactuEmpresa.jTabbedPaneRelacionesParametroFactuEmpresa.setMinimumSize(new Dimension(this.jInternalFrameDetalleFormParametroFactuEmpresa.jContentPaneDetalleParametroFactuEmpresa.getWidth(),ParametroFactuEmpresaConstantesFunciones.ALTO_TABPANE_RELACIONES));
					this.jInternalFrameDetalleFormParametroFactuEmpresa.jTabbedPaneRelacionesParametroFactuEmpresa.setMaximumSize(new Dimension(this.jInternalFrameDetalleFormParametroFactuEmpresa.jContentPaneDetalleParametroFactuEmpresa.getWidth(),ParametroFactuEmpresaConstantesFunciones.ALTO_TABPANE_RELACIONES));
					this.jInternalFrameDetalleFormParametroFactuEmpresa.jTabbedPaneRelacionesParametroFactuEmpresa.setPreferredSize(new Dimension(this.jInternalFrameDetalleFormParametroFactuEmpresa.jContentPaneDetalleParametroFactuEmpresa.getWidth(),ParametroFactuEmpresaConstantesFunciones.ALTO_TABPANE_RELACIONES));
					
					Dimension dimension=new Dimension(); 
					
					
					
				}
	    	}
			
		
	       	this.jInternalFrameDetalleFormParametroFactuEmpresa.setVisible(true);
	        this.jInternalFrameDetalleFormParametroFactuEmpresa.setSelected(true);
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,ParametroFactuEmpresaConstantesFunciones.CLASSNAME);
	    }
	}
	
	
	public void abrirInicializarFrameOrderByParametroFactuEmpresa() throws Exception {	    	        
	    try {
			if(this.jInternalFrameOrderByParametroFactuEmpresa==null) {
				
				if(!this.conCargarMinimo) {
					this.jInternalFrameOrderByParametroFactuEmpresa=new OrderByJInternalFrame(STIPO_TAMANIO_GENERAL,this.jButtonAbrirOrderByParametroFactuEmpresa,false,this);
				} else {
					this.jInternalFrameOrderByParametroFactuEmpresa=new OrderByJInternalFrame(STIPO_TAMANIO_GENERAL,this.jButtonAbrirOrderByParametroFactuEmpresa,true,this);
				}
				
				this.jDesktopPane.add(this.jInternalFrameOrderByParametroFactuEmpresa);
				this.jInternalFrameOrderByParametroFactuEmpresa.setVisible(false);
				this.jInternalFrameOrderByParametroFactuEmpresa.setSelected(false);
				
				this.jInternalFrameOrderByParametroFactuEmpresa.getjButtonCerrarOrderBy().addActionListener (new ButtonActionListener(this,"CerrarOrderByParametroFactuEmpresa"));
				
				this.inicializarActualizarBindingTablaOrderByParametroFactuEmpresa();
			}
		} catch (final Exception e) {
			
		}
	}
	
	
	
	public void abrirInicializarFrameImportacionParametroFactuEmpresa() throws Exception {	    	        
	    try {
			if(this.jInternalFrameImportacionParametroFactuEmpresa==null) {
				
				this.jInternalFrameImportacionParametroFactuEmpresa=new ImportacionJInternalFrame(ParametroFactuEmpresaConstantesFunciones.SCLASSWEBTITULO,this);			
				
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameImportacionParametroFactuEmpresa);							
				
				this.jDesktopPane.add(this.jInternalFrameImportacionParametroFactuEmpresa);
				this.jInternalFrameImportacionParametroFactuEmpresa.setVisible(false);
				this.jInternalFrameImportacionParametroFactuEmpresa.setSelected(false);


				this.jInternalFrameImportacionParametroFactuEmpresa.getjButtonCerrarImportacion().addActionListener (new ButtonActionListener(this,"CerrarImportacionParametroFactuEmpresa"));
				this.jInternalFrameImportacionParametroFactuEmpresa.getjButtonGenerarImportacion().addActionListener (new ButtonActionListener(this,"GenerarImportacionParametroFactuEmpresa"));
				this.jInternalFrameImportacionParametroFactuEmpresa.getjButtonAbrirImportacion().addActionListener (new ButtonActionListener(this,"AbrirImportacionParametroFactuEmpresa"));


			}
		} catch (final Exception e) {
			
		}
	}		
	
	
	
	public void abrirInicializarFrameReporteDinamicoParametroFactuEmpresa() throws Exception {	    	        
	    try {
			
			if(this.jInternalFrameReporteDinamicoParametroFactuEmpresa==null) {
				this.jInternalFrameReporteDinamicoParametroFactuEmpresa=new ReporteDinamicoJInternalFrame(ParametroFactuEmpresaConstantesFunciones.SCLASSWEBTITULO,this);	
				
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameReporteDinamicoParametroFactuEmpresa);	
	
	
				this.jDesktopPane.add(this.jInternalFrameReporteDinamicoParametroFactuEmpresa);
				this.jInternalFrameReporteDinamicoParametroFactuEmpresa.setVisible(false);
				this.jInternalFrameReporteDinamicoParametroFactuEmpresa.setSelected(false);
	
	
	
				this.jInternalFrameReporteDinamicoParametroFactuEmpresa.getjButtonCerrarReporteDinamico().addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoParametroFactuEmpresa"));
				this.jInternalFrameReporteDinamicoParametroFactuEmpresa.getjButtonGenerarReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoParametroFactuEmpresa"));
				this.jInternalFrameReporteDinamicoParametroFactuEmpresa.getjButtonGenerarExcelReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoParametroFactuEmpresa"));
	
				this.inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualParametroFactuEmpresa();
			}

		} catch (final Exception e) {
			
		}
	}	
	
	
	
		
					
	public void cerrarFrameDetalleParametroFactuEmpresa() throws Exception {	    	        
	    try {
			//this.jDesktopPane.add(jInternalFrameDetalleFormParametroFactuEmpresa);
			
	       	this.jInternalFrameDetalleFormParametroFactuEmpresa.setVisible(false);
	        this.jInternalFrameDetalleFormParametroFactuEmpresa.setSelected(false);
			
			//this.jInternalFrameDetalleFormParametroFactuEmpresa.dispose();
			//this.jInternalFrameDetalleFormParametroFactuEmpresa=null;
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,ParametroFactuEmpresaConstantesFunciones.CLASSNAME);
	    }
	}
	
	
	public void abrirFrameReporteDinamicoParametroFactuEmpresa() throws Exception {	    	        
	    try {
			
			this.jInternalFrameReporteDinamicoParametroFactuEmpresa.setVisible(true);
	        this.jInternalFrameReporteDinamicoParametroFactuEmpresa.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,ParametroFactuEmpresaConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void abrirFrameImportacionParametroFactuEmpresa() throws Exception {	    	        		
	    try {			
			this.jInternalFrameImportacionParametroFactuEmpresa.setVisible(true);
	        this.jInternalFrameImportacionParametroFactuEmpresa.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,ParametroFactuEmpresaConstantesFunciones.CLASSNAME);
	    }		
	}	
	
	
	
	
	
	public void abrirFrameOrderByParametroFactuEmpresa() throws Exception {	    	        		
	    try {
			this.jInternalFrameOrderByParametroFactuEmpresa.setVisible(true);
	        this.jInternalFrameOrderByParametroFactuEmpresa.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,ParametroFactuEmpresaConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void cerrarFrameOrderByParametroFactuEmpresa() throws Exception {	    	        		
	    try {			
			this.jInternalFrameOrderByParametroFactuEmpresa.setVisible(false);
	        this.jInternalFrameOrderByParametroFactuEmpresa.setSelected(false);			
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,ParametroFactuEmpresaConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void cerrarFrameReporteDinamicoParametroFactuEmpresa() throws Exception {			
	    try {
			this.jInternalFrameReporteDinamicoParametroFactuEmpresa.setVisible(false);
	        this.jInternalFrameReporteDinamicoParametroFactuEmpresa.setSelected(false);			
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,ParametroFactuEmpresaConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void cerrarFrameImportacionParametroFactuEmpresa() throws Exception {	    	        		
	    try {
			this.jInternalFrameImportacionParametroFactuEmpresa.setVisible(false);
	        this.jInternalFrameImportacionParametroFactuEmpresa.setSelected(false);
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,ParametroFactuEmpresaConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	
	public void jButtonModificarParametroFactuEmpresaActionPerformed(ActionEvent evt) throws Exception {   
		try {
			this.modificarParametroFactuEmpresa(evt,-1,false);
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroFactuEmpresaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void modificarParametroFactuEmpresa(ActionEvent evt,int rowIndex,Boolean esRelaciones) throws Exception {   
		try {
			int intSelectedRow = 0;	
			
			if(rowIndex>=0) {
				intSelectedRow=rowIndex;
			} else {
				intSelectedRow = this.jTableDatosParametroFactuEmpresa.getSelectedRow();
			}
			
			this.habilitarDeshabilitarControlesParametroFactuEmpresa(true);
			//this.isEsNuevoParametroFactuEmpresa=false;
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuempresa =(ParametroFactuEmpresa) this.parametrofactuempresaLogic.getParametroFactuEmpresas().toArray()[this.jTableDatosParametroFactuEmpresa.convertRowIndexToModel(intSelectedRow)];
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.parametrofactuempresa =(ParametroFactuEmpresa) this.parametrofactuempresas.toArray()[this.jTableDatosParametroFactuEmpresa.convertRowIndexToModel(intSelectedRow)];
			}
			//ARCHITECTURE
			
			this.actualizarEstadoCeldasBotonesParametroFactuEmpresa("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesParametroFactuEmpresa(false) ;
			
			if(parametrofactuempresaSessionBean.getConGuardarRelaciones()) {
			
			}
			
			if(ParametroFactuEmpresaJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetalleParametroFactuEmpresa(esRelaciones);
			}
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualParametroFactuEmpresa(false) ;
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroFactuEmpresaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarFilaTablaParametroFactuEmpresaActual() { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL
			Integer intSelectedRow = this.jTableDatosParametroFactuEmpresa.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuempresa =(ParametroFactuEmpresa) this.parametrofactuempresaLogic.getParametroFactuEmpresas().toArray()[this.jTableDatosParametroFactuEmpresa.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.parametrofactuempresa =(ParametroFactuEmpresa) this.parametrofactuempresas.toArray()[this.jTableDatosParametroFactuEmpresa.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroFactuEmpresaConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void seleccionarParametroFactuEmpresa(ActionEvent evt,int rowIndex) throws Exception {   
		try {
			
			if(this.jInternalFrameDetalleFormParametroFactuEmpresa==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			int intSelectedRow = 0;	
			
			if(rowIndex>=0) {
				intSelectedRow=rowIndex;
			} else {
				intSelectedRow = this.jTableDatosParametroFactuEmpresa.getSelectedRow();
			}
			
			//this.habilitarDeshabilitarControlesParametroFactuEmpresa(true);
			//this.isEsNuevoParametroFactuEmpresa=false;
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuempresa =(ParametroFactuEmpresa) this.parametrofactuempresaLogic.getParametroFactuEmpresas().toArray()[this.jTableDatosParametroFactuEmpresa.convertRowIndexToModel(intSelectedRow)];
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.parametrofactuempresa =(ParametroFactuEmpresa) this.parametrofactuempresas.toArray()[this.jTableDatosParametroFactuEmpresa.convertRowIndexToModel(intSelectedRow)];
			}
			//ARCHITECTURE
			
			this.jInternalFrameParent.setIdCombosCodigoDesdeBusquedaForeignKey(this.parametrofactuempresa.getId(),this.sTipoBusqueda);
			
			this.dispose();
			
			//this.actualizarEstadoCeldasBotonesParametroFactuEmpresa("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
			//NO FUNCIONA BINDINGS
			/*
			this.inicializarActualizarBindingBotonesParametroFactuEmpresa(false) ;
			
			if(ParametroFactuEmpresaJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetalleParametroFactuEmpresa(esRelaciones);
			}
			*/
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualParametroFactuEmpresa(false) ;
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroFactuEmpresaConstantesFunciones.CLASSNAME);
		}
	}		
	
	public void setIdCombosCodigoDesdeBusquedaForeignKey(Long id,String sType)throws Exception{
		
		try {
			
			if(sType.equals("ClienteOrigen")) {
				if(!this.parametrofactuempresaConstantesFunciones.cargarid_cliente_origenParametroFactuEmpresa) {
					this.cargarCombosClienteOrigensForeignKeyLista(" where id="+id);
					//this.inicializarActualizarBindingParametroFactuEmpresa(false,false);
					this.cargarCombosFrameClienteOrigensForeignKey("Todos");
				}

				this.setCombosCodigoDesdeBusquedaid_cliente_origen (id);

				this.recargarComboTablaClienteOrigen(this.clienteorigensForeignKey);

			}
			
			if(sType.equals("ClienteDestino")) {
				if(!this.parametrofactuempresaConstantesFunciones.cargarid_cliente_destinoParametroFactuEmpresa) {
					this.cargarCombosClienteDestinosForeignKeyLista(" where id="+id);
					//this.inicializarActualizarBindingParametroFactuEmpresa(false,false);
					this.cargarCombosFrameClienteDestinosForeignKey("Todos");
				}

				this.setCombosCodigoDesdeBusquedaid_cliente_destino (id);

				this.recargarComboTablaClienteDestino(this.clientedestinosForeignKey);

			}
		} catch(Exception e) {
			throw e;
		}
	}
	
		
	
	public void recargarComboTablaEmpresaOrigen(List<Empresa> empresaorigensForeignKey)throws Exception{
		TableColumn tableColumnEmpresaOrigen=this.jTableDatosParametroFactuEmpresa.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroFactuEmpresa,ParametroFactuEmpresaConstantesFunciones.LABEL_IDEMPRESAORIGEN));
		TableCellEditor tableCellEditorEmpresaOrigen =tableColumnEmpresaOrigen.getCellEditor();

		EmpresaTableCell empresaTableCellFk=(EmpresaTableCell)tableCellEditorEmpresaOrigen;

		if(empresaTableCellFk!=null) {
			empresaTableCellFk.setempresasForeignKey(empresaorigensForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosParametroFactuEmpresa.getSelectedRow();

		//if(intSelectedRow<=0) {
			//empresaTableCellFk.setRowActual(intSelectedRow);
			//empresaTableCellFk.setempresasForeignKeyActual(empresaorigensForeignKey);
		//}


		if(empresaTableCellFk!=null) {
			empresaTableCellFk.RecargarEmpresasForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaSucursal(List<Sucursal> sucursalsForeignKey)throws Exception{
		TableColumn tableColumnSucursal=this.jTableDatosParametroFactuEmpresa.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroFactuEmpresa,ParametroFactuEmpresaConstantesFunciones.LABEL_IDSUCURSAL));
		TableCellEditor tableCellEditorSucursal =tableColumnSucursal.getCellEditor();

		SucursalTableCell sucursalTableCellFk=(SucursalTableCell)tableCellEditorSucursal;

		if(sucursalTableCellFk!=null) {
			sucursalTableCellFk.setsucursalsForeignKey(sucursalsForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosParametroFactuEmpresa.getSelectedRow();

		//if(intSelectedRow<=0) {
			//sucursalTableCellFk.setRowActual(intSelectedRow);
			//sucursalTableCellFk.setsucursalsForeignKeyActual(sucursalsForeignKey);
		//}


		if(sucursalTableCellFk!=null) {
			sucursalTableCellFk.RecargarSucursalsForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaTransaccionOrigen(List<Transaccion> transaccionorigensForeignKey)throws Exception{
		TableColumn tableColumnTransaccionOrigen=this.jTableDatosParametroFactuEmpresa.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroFactuEmpresa,ParametroFactuEmpresaConstantesFunciones.LABEL_IDTRANSACCIONORIGEN));
		TableCellEditor tableCellEditorTransaccionOrigen =tableColumnTransaccionOrigen.getCellEditor();

		TransaccionTableCell transaccionTableCellFk=(TransaccionTableCell)tableCellEditorTransaccionOrigen;

		if(transaccionTableCellFk!=null) {
			transaccionTableCellFk.settransaccionsForeignKey(transaccionorigensForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosParametroFactuEmpresa.getSelectedRow();

		//if(intSelectedRow<=0) {
			//transaccionTableCellFk.setRowActual(intSelectedRow);
			//transaccionTableCellFk.settransaccionsForeignKeyActual(transaccionorigensForeignKey);
		//}


		if(transaccionTableCellFk!=null) {
			transaccionTableCellFk.RecargarTransaccionsForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaBodegaOrigen(List<Bodega> bodegaorigensForeignKey)throws Exception{
		TableColumn tableColumnBodegaOrigen=this.jTableDatosParametroFactuEmpresa.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroFactuEmpresa,ParametroFactuEmpresaConstantesFunciones.LABEL_IDBODEGAORIGEN));
		TableCellEditor tableCellEditorBodegaOrigen =tableColumnBodegaOrigen.getCellEditor();

		BodegaTableCell bodegaTableCellFk=(BodegaTableCell)tableCellEditorBodegaOrigen;

		if(bodegaTableCellFk!=null) {
			bodegaTableCellFk.setbodegasForeignKey(bodegaorigensForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosParametroFactuEmpresa.getSelectedRow();

		//if(intSelectedRow<=0) {
			//bodegaTableCellFk.setRowActual(intSelectedRow);
			//bodegaTableCellFk.setbodegasForeignKeyActual(bodegaorigensForeignKey);
		//}


		if(bodegaTableCellFk!=null) {
			bodegaTableCellFk.RecargarBodegasForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaClienteOrigen(List<Cliente> clienteorigensForeignKey)throws Exception{
		TableColumn tableColumnClienteOrigen=this.jTableDatosParametroFactuEmpresa.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroFactuEmpresa,ParametroFactuEmpresaConstantesFunciones.LABEL_IDCLIENTEORIGEN));
		TableCellEditor tableCellEditorClienteOrigen =tableColumnClienteOrigen.getCellEditor();

		ClienteTableCell clienteTableCellFk=(ClienteTableCell)tableCellEditorClienteOrigen;

		if(clienteTableCellFk!=null) {
			clienteTableCellFk.setclientesForeignKey(clienteorigensForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosParametroFactuEmpresa.getSelectedRow();

		//if(intSelectedRow<=0) {
			//clienteTableCellFk.setRowActual(intSelectedRow);
			//clienteTableCellFk.setclientesForeignKeyActual(clienteorigensForeignKey);
		//}


		if(clienteTableCellFk!=null) {
			clienteTableCellFk.RecargarClientesForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaEmpresaDestino(List<Empresa> empresadestinosForeignKey)throws Exception{
		TableColumn tableColumnEmpresaDestino=this.jTableDatosParametroFactuEmpresa.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroFactuEmpresa,ParametroFactuEmpresaConstantesFunciones.LABEL_IDEMPRESADESTINO));
		TableCellEditor tableCellEditorEmpresaDestino =tableColumnEmpresaDestino.getCellEditor();

		EmpresaTableCell empresaTableCellFk=(EmpresaTableCell)tableCellEditorEmpresaDestino;

		if(empresaTableCellFk!=null) {
			empresaTableCellFk.setempresasForeignKey(empresadestinosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosParametroFactuEmpresa.getSelectedRow();

		//if(intSelectedRow<=0) {
			//empresaTableCellFk.setRowActual(intSelectedRow);
			//empresaTableCellFk.setempresasForeignKeyActual(empresadestinosForeignKey);
		//}


		if(empresaTableCellFk!=null) {
			empresaTableCellFk.RecargarEmpresasForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaSucursalDestino(List<Sucursal> sucursaldestinosForeignKey)throws Exception{
		TableColumn tableColumnSucursalDestino=this.jTableDatosParametroFactuEmpresa.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroFactuEmpresa,ParametroFactuEmpresaConstantesFunciones.LABEL_IDSUCURSALDESTINO));
		TableCellEditor tableCellEditorSucursalDestino =tableColumnSucursalDestino.getCellEditor();

		SucursalTableCell sucursalTableCellFk=(SucursalTableCell)tableCellEditorSucursalDestino;

		if(sucursalTableCellFk!=null) {
			sucursalTableCellFk.setsucursalsForeignKey(sucursaldestinosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosParametroFactuEmpresa.getSelectedRow();

		//if(intSelectedRow<=0) {
			//sucursalTableCellFk.setRowActual(intSelectedRow);
			//sucursalTableCellFk.setsucursalsForeignKeyActual(sucursaldestinosForeignKey);
		//}


		if(sucursalTableCellFk!=null) {
			sucursalTableCellFk.RecargarSucursalsForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaTransaccionDestino(List<Transaccion> transacciondestinosForeignKey)throws Exception{
		TableColumn tableColumnTransaccionDestino=this.jTableDatosParametroFactuEmpresa.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroFactuEmpresa,ParametroFactuEmpresaConstantesFunciones.LABEL_IDTRANSACCIONDESTINO));
		TableCellEditor tableCellEditorTransaccionDestino =tableColumnTransaccionDestino.getCellEditor();

		TransaccionTableCell transaccionTableCellFk=(TransaccionTableCell)tableCellEditorTransaccionDestino;

		if(transaccionTableCellFk!=null) {
			transaccionTableCellFk.settransaccionsForeignKey(transacciondestinosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosParametroFactuEmpresa.getSelectedRow();

		//if(intSelectedRow<=0) {
			//transaccionTableCellFk.setRowActual(intSelectedRow);
			//transaccionTableCellFk.settransaccionsForeignKeyActual(transacciondestinosForeignKey);
		//}


		if(transaccionTableCellFk!=null) {
			transaccionTableCellFk.RecargarTransaccionsForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaBodegaDestino(List<Bodega> bodegadestinosForeignKey)throws Exception{
		TableColumn tableColumnBodegaDestino=this.jTableDatosParametroFactuEmpresa.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroFactuEmpresa,ParametroFactuEmpresaConstantesFunciones.LABEL_IDBODEGADESTINO));
		TableCellEditor tableCellEditorBodegaDestino =tableColumnBodegaDestino.getCellEditor();

		BodegaTableCell bodegaTableCellFk=(BodegaTableCell)tableCellEditorBodegaDestino;

		if(bodegaTableCellFk!=null) {
			bodegaTableCellFk.setbodegasForeignKey(bodegadestinosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosParametroFactuEmpresa.getSelectedRow();

		//if(intSelectedRow<=0) {
			//bodegaTableCellFk.setRowActual(intSelectedRow);
			//bodegaTableCellFk.setbodegasForeignKeyActual(bodegadestinosForeignKey);
		//}


		if(bodegaTableCellFk!=null) {
			bodegaTableCellFk.RecargarBodegasForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaClienteDestino(List<Cliente> clientedestinosForeignKey)throws Exception{
		TableColumn tableColumnClienteDestino=this.jTableDatosParametroFactuEmpresa.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroFactuEmpresa,ParametroFactuEmpresaConstantesFunciones.LABEL_IDCLIENTEDESTINO));
		TableCellEditor tableCellEditorClienteDestino =tableColumnClienteDestino.getCellEditor();

		ClienteTableCell clienteTableCellFk=(ClienteTableCell)tableCellEditorClienteDestino;

		if(clienteTableCellFk!=null) {
			clienteTableCellFk.setclientesForeignKey(clientedestinosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosParametroFactuEmpresa.getSelectedRow();

		//if(intSelectedRow<=0) {
			//clienteTableCellFk.setRowActual(intSelectedRow);
			//clienteTableCellFk.setclientesForeignKeyActual(clientedestinosForeignKey);
		//}


		if(clienteTableCellFk!=null) {
			clienteTableCellFk.RecargarClientesForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaEmpresaMultiDestino(List<Empresa> empresamultidestinosForeignKey)throws Exception{
		TableColumn tableColumnEmpresaMultiDestino=this.jTableDatosParametroFactuEmpresa.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroFactuEmpresa,ParametroFactuEmpresaConstantesFunciones.LABEL_IDEMPRESAMULTIDESTINO));
		TableCellEditor tableCellEditorEmpresaMultiDestino =tableColumnEmpresaMultiDestino.getCellEditor();

		EmpresaTableCell empresaTableCellFk=(EmpresaTableCell)tableCellEditorEmpresaMultiDestino;

		if(empresaTableCellFk!=null) {
			empresaTableCellFk.setempresasForeignKey(empresamultidestinosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosParametroFactuEmpresa.getSelectedRow();

		//if(intSelectedRow<=0) {
			//empresaTableCellFk.setRowActual(intSelectedRow);
			//empresaTableCellFk.setempresasForeignKeyActual(empresamultidestinosForeignKey);
		//}


		if(empresaTableCellFk!=null) {
			empresaTableCellFk.RecargarEmpresasForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaSucursalMultiDestino(List<Sucursal> sucursalmultidestinosForeignKey)throws Exception{
		TableColumn tableColumnSucursalMultiDestino=this.jTableDatosParametroFactuEmpresa.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroFactuEmpresa,ParametroFactuEmpresaConstantesFunciones.LABEL_IDSUCURSALMULTIDESTINO));
		TableCellEditor tableCellEditorSucursalMultiDestino =tableColumnSucursalMultiDestino.getCellEditor();

		SucursalTableCell sucursalTableCellFk=(SucursalTableCell)tableCellEditorSucursalMultiDestino;

		if(sucursalTableCellFk!=null) {
			sucursalTableCellFk.setsucursalsForeignKey(sucursalmultidestinosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosParametroFactuEmpresa.getSelectedRow();

		//if(intSelectedRow<=0) {
			//sucursalTableCellFk.setRowActual(intSelectedRow);
			//sucursalTableCellFk.setsucursalsForeignKeyActual(sucursalmultidestinosForeignKey);
		//}


		if(sucursalTableCellFk!=null) {
			sucursalTableCellFk.RecargarSucursalsForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaTransaccionMultiDestino(List<Transaccion> transaccionmultidestinosForeignKey)throws Exception{
		TableColumn tableColumnTransaccionMultiDestino=this.jTableDatosParametroFactuEmpresa.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroFactuEmpresa,ParametroFactuEmpresaConstantesFunciones.LABEL_IDTRANSACCIONMULTIDESTINO));
		TableCellEditor tableCellEditorTransaccionMultiDestino =tableColumnTransaccionMultiDestino.getCellEditor();

		TransaccionTableCell transaccionTableCellFk=(TransaccionTableCell)tableCellEditorTransaccionMultiDestino;

		if(transaccionTableCellFk!=null) {
			transaccionTableCellFk.settransaccionsForeignKey(transaccionmultidestinosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosParametroFactuEmpresa.getSelectedRow();

		//if(intSelectedRow<=0) {
			//transaccionTableCellFk.setRowActual(intSelectedRow);
			//transaccionTableCellFk.settransaccionsForeignKeyActual(transaccionmultidestinosForeignKey);
		//}


		if(transaccionTableCellFk!=null) {
			transaccionTableCellFk.RecargarTransaccionsForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaBodegaMultiOrigen(List<Bodega> bodegamultiorigensForeignKey)throws Exception{
		TableColumn tableColumnBodegaMultiOrigen=this.jTableDatosParametroFactuEmpresa.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroFactuEmpresa,ParametroFactuEmpresaConstantesFunciones.LABEL_IDBODEGAMULTIORIGEN));
		TableCellEditor tableCellEditorBodegaMultiOrigen =tableColumnBodegaMultiOrigen.getCellEditor();

		BodegaTableCell bodegaTableCellFk=(BodegaTableCell)tableCellEditorBodegaMultiOrigen;

		if(bodegaTableCellFk!=null) {
			bodegaTableCellFk.setbodegasForeignKey(bodegamultiorigensForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosParametroFactuEmpresa.getSelectedRow();

		//if(intSelectedRow<=0) {
			//bodegaTableCellFk.setRowActual(intSelectedRow);
			//bodegaTableCellFk.setbodegasForeignKeyActual(bodegamultiorigensForeignKey);
		//}


		if(bodegaTableCellFk!=null) {
			bodegaTableCellFk.RecargarBodegasForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaBodegaMultiDestino(List<Bodega> bodegamultidestinosForeignKey)throws Exception{
		TableColumn tableColumnBodegaMultiDestino=this.jTableDatosParametroFactuEmpresa.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroFactuEmpresa,ParametroFactuEmpresaConstantesFunciones.LABEL_IDBODEGAMULTIDESTINO));
		TableCellEditor tableCellEditorBodegaMultiDestino =tableColumnBodegaMultiDestino.getCellEditor();

		BodegaTableCell bodegaTableCellFk=(BodegaTableCell)tableCellEditorBodegaMultiDestino;

		if(bodegaTableCellFk!=null) {
			bodegaTableCellFk.setbodegasForeignKey(bodegamultidestinosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosParametroFactuEmpresa.getSelectedRow();

		//if(intSelectedRow<=0) {
			//bodegaTableCellFk.setRowActual(intSelectedRow);
			//bodegaTableCellFk.setbodegasForeignKeyActual(bodegamultidestinosForeignKey);
		//}


		if(bodegaTableCellFk!=null) {
			bodegaTableCellFk.RecargarBodegasForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	

	public void setCombosCodigoDesdeBusquedaid_cliente_origen (Long id) throws Exception {
		this.setActualClienteOrigenForeignKey(id,true,"Todos");

	};
	

	public void setCombosCodigoDesdeBusquedaid_cliente_destino (Long id) throws Exception {
		this.setActualClienteDestinoForeignKey(id,true,"Todos");

	};
	
	public void jButtonActualizarParametroFactuEmpresaActionPerformed(ActionEvent evt) throws Exception {   
		try	{
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuempresaLogic.getNewConnexionToDeep("");
			}
			
			this.inicializarActualizarBindingParametrosReportesParametroFactuEmpresa(false);
			
			//if(!this.isEsNuevoParametroFactuEmpresa) {								
				int intSelectedRow = this.jTableDatosParametroFactuEmpresa.getSelectedRow();	
				
				//SE PIEDE INDICE SELECTED CON FILA TOTALES, ASEGURARSE QUE OBJETO ACTUAL ESTE EN FORMULARIO
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuempresa =(ParametroFactuEmpresa) this.parametrofactuempresaLogic.getParametroFactuEmpresas().toArray()[this.jTableDatosParametroFactuEmpresa.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.parametrofactuempresa =(ParametroFactuEmpresa) this.parametrofactuempresas.toArray()[this.jTableDatosParametroFactuEmpresa.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
			//}
				
			if(ParametroFactuEmpresaJInternalFrame.ISBINDING_MANUAL_TABLA) {
				this.setVariablesFormularioToObjetoActualParametroFactuEmpresa(this.parametrofactuempresa,true);
				this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuEmpresa(this.parametrofactuempresa);
				
			}
			
			if(this.permiteMantenimiento(this.parametrofactuempresa)) {	
				this.actualizar();
				
				if(!this.isGuardarCambiosEnLote && !this.parametrofactuempresaSessionBean.getEsGuardarRelacionado()) {
					this.procesarBusqueda(sAccionBusqueda);
					
					this.isEsNuevoParametroFactuEmpresa=true;
					this.inicializarActualizarBindingTablaParametroFactuEmpresa(false);
					this.isEsNuevoParametroFactuEmpresa=false;
				
				} else {					
					
					//PARA RELACIONADO ACTUALIZAR FILA TOTALES
					this.isEsNuevoParametroFactuEmpresa=true;
					this.procesoActualizarFilaTotales(false,"MANTENIMIENTO");
					this.isEsNuevoParametroFactuEmpresa=false;
				}
						
								
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingBotonesParametroFactuEmpresa(false);
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualParametroFactuEmpresa(false);
				
				this.habilitarDeshabilitarControlesParametroFactuEmpresa(false);
			
												
				
				if(ParametroFactuEmpresaJInternalFrame.CON_DATOS_FRAME) {
					if(!this.isPostAccionSinCerrar) {
						this.cerrarFrameDetalleParametroFactuEmpresa();
					}
				}
				
				if(this.isPostAccionNuevo) {
					this.jButtonNuevoParametroFactuEmpresaActionPerformed(evt,parametrofactuempresaSessionBean.getConGuardarRelaciones());
				} else {
					if(this.isPostAccionSinCerrar) {
						Integer intSelectedRowActual=this.getIndiceActualParametroFactuEmpresa(this.parametrofactuempresa,intSelectedRow);
						
						if(intSelectedRow>-1) {
							this.jTableDatosParametroFactuEmpresa.setRowSelectionInterval(intSelectedRowActual, intSelectedRowActual);
							this.jButtonIdActionPerformed(evt,intSelectedRowActual,parametrofactuempresaSessionBean.getConGuardarRelaciones(),false);
						}
					}
				}
				
				this.cancelar(false);
				
			} else {
				JOptionPane.showMessageDialog(this,"ESTE REGISTRO NO PUEDE ACTUALIZARSE","EDITAR",JOptionPane.ERROR_MESSAGE);
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuempresaLogic.commitNewConnexionToDeep();
			}
			
			
			if(this.jInternalFrameParent!=null) { //&& this.isEsMantenimientoRelacionado) {
				Boolean esUsoDesdeHijoLocal=true;
				String sTipo="Formulario";
				Boolean conIrServidorAplicacionParent=false;
				Long id=this.parametrofactuempresa.getId();
				ArrayList<String> arrClasses=new ArrayList<String>();
				
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();
				
				generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
				generalEntityParameterGeneral.setsDominio("Formulario");
				generalEntityParameterGeneral.setsDominioTipo(ParametroFactuEmpresa.class.getName());
				
				this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",ParametroFactuEmpresa.class.getName(),sTipo,"FORMULARIO",esControlTabla,conIrServidorAplicacionParent,
					id,this, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.FORM,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
					evt,generalEntityParameterGeneral,this);
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuempresaLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,ParametroFactuEmpresaConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuempresaLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonEliminarParametroFactuEmpresaActionPerformed(ActionEvent evt) throws Exception {   
		try	{
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuempresaLogic.getNewConnexionToDeep("");
			}
			
			int intSelectedRow = this.jTableDatosParametroFactuEmpresa.getSelectedRow();	       
							
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuempresa =(ParametroFactuEmpresa) this.parametrofactuempresaLogic.getParametroFactuEmpresas().toArray()[this.jTableDatosParametroFactuEmpresa.convertRowIndexToModel(intSelectedRow)];
				this.parametrofactuempresa.setIsDeleted(true);
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.parametrofactuempresa =(ParametroFactuEmpresa) this.parametrofactuempresas.toArray()[this.jTableDatosParametroFactuEmpresa.convertRowIndexToModel(intSelectedRow)];
				this.parametrofactuempresa.setIsDeleted(true);
			}
			//ARCHITECTURE
			
			if(this.permiteMantenimiento(this.parametrofactuempresa)) {
				this.eliminar();
				
				if(!this.isGuardarCambiosEnLote && !this.parametrofactuempresaSessionBean.getEsGuardarRelacionado()) {
					this.procesarBusqueda(sAccionBusqueda);
				}
				
				((ParametroFactuEmpresaModel) this.jTableDatosParametroFactuEmpresa.getModel()).fireTableRowsDeleted(intSelectedRow,intSelectedRow);
				
				this.isEsNuevoParametroFactuEmpresa=true;
				this.inicializarActualizarBindingTablaParametroFactuEmpresa(false);
				this.isEsNuevoParametroFactuEmpresa=false;									
					
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingBotonesParametroFactuEmpresa(false);
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualParametroFactuEmpresa(false);
				
				this.habilitarDeshabilitarControlesParametroFactuEmpresa(false);
				
				
				
				if(ParametroFactuEmpresaJInternalFrame.CON_DATOS_FRAME) {
					this.cerrarFrameDetalleParametroFactuEmpresa();
				}
			} else {
				JOptionPane.showMessageDialog(this,"ESTE REGISTRO NO PUEDE ACTUALIZARSE","EDITAR",JOptionPane.ERROR_MESSAGE);
			}	
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuempresaLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuempresaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroFactuEmpresaConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuempresaLogic.closeNewConnexionToDeep();
			}
		}		
	}
		
	public void jButtonCancelarParametroFactuEmpresaActionPerformed(ActionEvent evt) throws Exception {                                         	   	       
	  	try {
			if(jTableDatosParametroFactuEmpresa.getRowCount()>=1) {
				jTableDatosParametroFactuEmpresa.removeRowSelectionInterval(0, jTableDatosParametroFactuEmpresa.getRowCount()-1);						
			}
						
			this.invalidValues=new InvalidValue[0];
			this.habilitarDeshabilitarControlesParametroFactuEmpresa(false);
			this.cancelar(true);			
			this.inicializarActualizarBindingTablaParametroFactuEmpresa(false);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesParametroFactuEmpresa(false) ;
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualParametroFactuEmpresa(false) ;
			
			this.isEsNuevoParametroFactuEmpresa=false;
			
			if(ParametroFactuEmpresaJInternalFrame.CON_DATOS_FRAME) {
				this.cerrarFrameDetalleParametroFactuEmpresa();
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroFactuEmpresaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonGuardarCambiosParametroFactuEmpresaActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuempresaLogic.getNewConnexionToDeep("");
			}
			
			//this.estaModoGuardarCambios=true;
			
	    	this.guardarCambios();
			
			if(!this.isErrorGuardar) {
				this.procesarBusqueda(this.sAccionBusqueda);
				
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingParametroFactuEmpresa(false);
				
				//SI ES MANUAL
				if(ParametroFactuEmpresaJInternalFrame.ISBINDING_MANUAL) {				
					//this.inicializarActualizarBindingManualParametroFactuEmpresa();				
				}
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuempresaLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuempresaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroFactuEmpresaConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuempresaLogic.closeNewConnexionToDeep();
			}
			
			//this.estaModoGuardarCambios=false;
		}
	}
	
	public void jButtonNuevoGuardarCambiosParametroFactuEmpresaActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			
			this.estaModoNuevo=true;
			this.estaModoNuevoGuardarCambios=true;
			
			//LO HACE NUEVOPREPARAR
			//this.iIdNuevoParametroFactuEmpresa--;			
			//ParametroFactuEmpresa parametrofactuempresaAux= new ParametroFactuEmpresa();			
			//parametrofactuempresaAux.setId(this.iIdNuevoParametroFactuEmpresa);
			
			if(this.jInternalFrameDetalleFormParametroFactuEmpresa==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			this.aumentarTamanioFilaNuevaTablaParametroFactuEmpresa();
			
			if(this.conTotales) {
				this.quitarFilaTotales();
			}
			
			this.nuevoPreparar(true);
			
			this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuEmpresa(this.parametrofactuempresa);
			
			this.parametrofactuempresa.setsType("NUEVO_GUARDAR_CAMBIOS");
			
			//LO HACE NUEVOPREPARAR
			/*
			if(Constantes.ISUSAEJBLOGICLAYER) {				
				this.parametrofactuempresaLogic.getParametroFactuEmpresas().add(this.parametrofactuempresaAux);
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				this.parametrofactuempresas.add(this.parametrofactuempresaAux);				
			}
			*/
			
			this.inicializarActualizarBindingTablaParametroFactuEmpresa(false);
			
			this.jTableDatosParametroFactuEmpresa.setRowSelectionInterval(this.getIndiceNuevoParametroFactuEmpresa(), this.getIndiceNuevoParametroFactuEmpresa());
			
			int iLastRow =  this.jTableDatosParametroFactuEmpresa.getRowCount () - 1;
			Rectangle rectangle = this.jTableDatosParametroFactuEmpresa.getCellRect(iLastRow, 0, true);
			
			this.jTableDatosParametroFactuEmpresa.scrollRectToVisible(rectangle);
			
			//FILA TOTALES
			if(this.conTotales) {
				this.crearFilaTotales();
				
				this.inicializarActualizarBindingTablaParametroFactuEmpresa(false);
			}

		} catch(Exception e) {									
			FuncionesSwing.manageException(this, e,logger,ParametroFactuEmpresaConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoNuevo=false;
			this.estaModoNuevoGuardarCambios=false;
		}
	}		
	
	public void jButtonRecargarInformacionParametroFactuEmpresaActionPerformed(ActionEvent evt) throws Exception {    		
		try {
			this.iNumeroPaginacionPagina=0;
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuempresaLogic.getNewConnexionToDeep("");
			}
			
			this.inicializarActualizarBindingParametroFactuEmpresa(false,false);
			
	    	this.recargarInformacion();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingParametroFactuEmpresa(false);
			
			//SI ES MANUAL
			if(ParametroFactuEmpresaJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualParametroFactuEmpresa();
			}
			
			//this.abrirFrameTreeParametroFactuEmpresa();
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuempresaLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuempresaLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,ParametroFactuEmpresaConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuempresaLogic.closeNewConnexionToDeep();
			}
		}	
	}
	
	
	public void jButtonGenerarImportacionParametroFactuEmpresaActionPerformed(ActionEvent evt) throws Exception {    				
		BufferedReader bufferedReader = null;
		String sXmlStringFile="";
		String sPath="";
		this.arrDatoGeneralMinimos= new  ArrayList<DatoGeneralMinimo>();
		DatoGeneralMinimo datoGeneralMinimo=new DatoGeneralMinimo();
		String sLine="";
		
		try {			
			if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE PROCESAR IMPORTACION DE Parametro Empresa S ?", "MANTENIMIENTO DE Parametro Empresa ", JOptionPane.OK_CANCEL_OPTION) == 0) {
				bufferedReader = new BufferedReader(new FileReader(this.jInternalFrameImportacionParametroFactuEmpresa.getFileImportacion().getAbsolutePath()));
								
				while ((sLine = bufferedReader.readLine()) != null) {
					datoGeneralMinimo=new DatoGeneralMinimo();
					datoGeneralMinimo.setsDescripcion(sLine);
					
					this.arrDatoGeneralMinimos.add(datoGeneralMinimo);
				}
				
				this.actualizarParametrosGeneralParametroFactuEmpresa();
						
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {						
					this.parametrofactuempresaReturnGeneral=parametrofactuempresaLogic.procesarImportacionParametroFactuEmpresasWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this.arrDatoGeneralMinimos,this.parametrofactuempresaParameterGeneral);
						
				} else if(Constantes.ISUSAEJBREMOTE) {
						
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
						
				this.procesarParametroFactuEmpresaReturnGeneral();
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroFactuEmpresaConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedReader != null) {
				bufferedReader.close();
			}	
		}				
	}
	
	
	
	public void jButtonAbrirImportacionParametroFactuEmpresaActionPerformed(ActionEvent evt) throws Exception {    				
		BufferedWriter bufferedWriter = null;
		String sXmlStringFile="";
		String sPath="";
		
		try {
			int iReturnArchivo = this.jInternalFrameImportacionParametroFactuEmpresa.getjFileChooserImportacion().showOpenDialog(this);
 
            if (iReturnArchivo == JFileChooser.APPROVE_OPTION) {
            	this.jInternalFrameImportacionParametroFactuEmpresa.setFileImportacion(this.jInternalFrameImportacionParametroFactuEmpresa.getjFileChooserImportacion().getSelectedFile());
            	
				this.jInternalFrameImportacionParametroFactuEmpresa.getjTextFieldPathArchivoImportacion().setText(this.jInternalFrameImportacionParametroFactuEmpresa.getFileImportacion().getName());
				
				//System.out.println("ARCHIVO ESCOGIDO: "+this.fileImportacionParametroFactuEmpresa.getName());
				
            } else {
                //System.out.println("CANCELAR SELECCION");
				this.jInternalFrameImportacionParametroFactuEmpresa.getjTextFieldPathArchivoImportacion().setText("SELECCION CANCELADA");
            }			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroFactuEmpresaConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedWriter != null) {
				bufferedWriter.close();
			}	
		}		
	}
	
	
	public void jButtonGenerarReporteDinamicoParametroFactuEmpresaActionPerformed(ActionEvent evt) throws Exception {    		
		BufferedWriter bufferedWriter = null;
		String sXmlStringFile="";
		String sPath="";
		
		try {	
		
		ArrayList<ParametroFactuEmpresa> parametrofactuempresasSeleccionados=new ArrayList<ParametroFactuEmpresa>();		

		parametrofactuempresasSeleccionados=this.getParametroFactuEmpresasSeleccionados(true);
		
		
		this.sTipoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoParametroFactuEmpresa.getjComboBoxTiposReportesDinamico().getSelectedItem()).getsCodigo();
		
		this.sTipoArchivoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoParametroFactuEmpresa.getjComboBoxTiposArchivosReportesDinamico().getSelectedItem()).getsCodigo();			
		
		
		this.sTipoArchivoReporte=this.sTipoArchivoReporteDinamico;
		
		//this.sTipoReporteExtra="Base";
		
			InputStream reportFile=null;
			InputStream imageFile=null;
			
			imageFile=AuxiliarImagenes.class.getResourceAsStream("LogoReporte.jpg");			
				
		
		
			reportFile = AuxiliarReportes.class.getResourceAsStream("ParametroFactuEmpresaBaseDesign.jrxml");	
			
			sPath=this.parametroGeneralUsuario.getpath_exportar()+"ParametroFactuEmpresaBaseDesign.jrxml";
			
			sXmlStringFile=Funciones2.getStringFromInputStream(reportFile);
						
			bufferedWriter = new BufferedWriter(new FileWriter(sPath));
			
			
			sXmlStringFile=this.actualizarReporteDinamico(sXmlStringFile);
			
			
			bufferedWriter.write(sXmlStringFile);
			
			bufferedWriter.close();
			
			try{JasperCompileManager.compileReportToFile(sPath);}catch(Exception e){e.printStackTrace();}
			
			this.actualizarVariablesTipoReporte(false,true,false,sPath);
			
			/*
			this.esReporteDinamico=true;
			this.sPathReporteDinamico=sPath.replace(".jrxml",".jasper");
			this.sTipoReporteExtra="";
			*/
			
			this.generarReporteParametroFactuEmpresas("Todos",parametrofactuempresasSeleccionados );

			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.parametrofactuempresaSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				//DEBE APARECER EL REPORTE DIRECTAMENTE
				//JOptionPane.showMessageDialog(this,"GENERADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Parametro Empresa ",JOptionPane.INFORMATION_MESSAGE);
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroFactuEmpresaConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedWriter != null) {
				bufferedWriter.close();
			}	
		}
	}		
	
	
	public String actualizarReporteDinamico(String sXmlStringFile) {				
		Reporte reporte=new Reporte();
		Integer iAnchoMaximoVertical=535;//781,782
		Integer iAnchoMaximoHorizontal=782;
		Integer iAnchoSum=0;
		Integer iAnchoColumna=0;
		
		Integer iAnchoMargenes=60;
		String sWidthGrafico="535";
		
		for(int index:this.jInternalFrameReporteDinamicoParametroFactuEmpresa.getjListColumnasSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoParametroFactuEmpresa.getjListColumnasSelectReporte().getModel().getElementAt(index);
			
			switch(reporte.getsCodigo()) {
				
				case ParametroFactuEmpresaConstantesFunciones.LABEL_IDEMPRESA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Empresa_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Empresa_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Empresa_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Empresa_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroFactuEmpresaConstantesFunciones.LABEL_IDEMPRESAORIGEN:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_EmpresaOrigen_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_EmpresaOrigen_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_EmpresaOrigen_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_EmpresaOrigen_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroFactuEmpresaConstantesFunciones.LABEL_IDSUCURSAL:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Sucursal_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Sucursal_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Sucursal_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Sucursal_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroFactuEmpresaConstantesFunciones.LABEL_IDTRANSACCIONORIGEN:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_TransaccionOrigen_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_TransaccionOrigen_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_TransaccionOrigen_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_TransaccionOrigen_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroFactuEmpresaConstantesFunciones.LABEL_IDBODEGAORIGEN:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_BodegaOrigen_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_BodegaOrigen_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_BodegaOrigen_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_BodegaOrigen_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroFactuEmpresaConstantesFunciones.LABEL_IDCLIENTEORIGEN:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_ClienteOrigen_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_ClienteOrigen_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_ClienteOrigen_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_ClienteOrigen_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroFactuEmpresaConstantesFunciones.LABEL_COSTOORIGEN:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_stoOrigen_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_stoOrigen_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_stoOrigen_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_stoOrigen_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroFactuEmpresaConstantesFunciones.LABEL_IDEMPRESADESTINO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_EmpresaDestino_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_EmpresaDestino_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_EmpresaDestino_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_EmpresaDestino_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroFactuEmpresaConstantesFunciones.LABEL_IDSUCURSALDESTINO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_SucursalDestino_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_SucursalDestino_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_SucursalDestino_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_SucursalDestino_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroFactuEmpresaConstantesFunciones.LABEL_IDTRANSACCIONDESTINO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_TransaccionDestino_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_TransaccionDestino_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_TransaccionDestino_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_TransaccionDestino_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroFactuEmpresaConstantesFunciones.LABEL_IDBODEGADESTINO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_BodegaDestino_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_BodegaDestino_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_BodegaDestino_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_BodegaDestino_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroFactuEmpresaConstantesFunciones.LABEL_IDCLIENTEDESTINO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_ClienteDestino_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_ClienteDestino_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_ClienteDestino_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_ClienteDestino_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroFactuEmpresaConstantesFunciones.LABEL_COSTODESTINO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_stoDestino_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_stoDestino_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_stoDestino_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_stoDestino_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroFactuEmpresaConstantesFunciones.LABEL_CONTRANSFERENCIA:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_nTransferencia_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_nTransferencia_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_nTransferencia_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_nTransferencia_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroFactuEmpresaConstantesFunciones.LABEL_IDEMPRESAMULTIDESTINO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_EmpresaMultiDestino_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_EmpresaMultiDestino_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_EmpresaMultiDestino_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_EmpresaMultiDestino_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroFactuEmpresaConstantesFunciones.LABEL_IDSUCURSALMULTIDESTINO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_SucursalMultiDestino_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_SucursalMultiDestino_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_SucursalMultiDestino_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_SucursalMultiDestino_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroFactuEmpresaConstantesFunciones.LABEL_IDTRANSACCIONMULTIDESTINO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_TransaccionMultiDestino_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_TransaccionMultiDestino_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_TransaccionMultiDestino_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_TransaccionMultiDestino_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroFactuEmpresaConstantesFunciones.LABEL_IDBODEGAMULTIORIGEN:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_BodegaMultiOrigen_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_BodegaMultiOrigen_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_BodegaMultiOrigen_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_BodegaMultiOrigen_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroFactuEmpresaConstantesFunciones.LABEL_IDBODEGAMULTIDESTINO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_BodegaMultiDestino_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_BodegaMultiDestino_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_BodegaMultiDestino_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_BodegaMultiDestino_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;
					
				default :
					break;
			}
		}
		
		iAnchoSum+=iAnchoMargenes;
		
		if(iAnchoSum>iAnchoMaximoVertical) {
			sXmlStringFile=sXmlStringFile.replace("595", "842");
			//sXmlStringFile=sXmlStringFile.replace("842", "595");
			sXmlStringFile=sXmlStringFile.replace("535", "782");
			sXmlStringFile=sXmlStringFile.replace("Portrait", "Landscape");			
			sWidthGrafico="782";
		
		} else {
			sXmlStringFile=sXmlStringFile.replace("842", "595");
			//sXmlStringFile=sXmlStringFile.replace("595", "842");
			sXmlStringFile=sXmlStringFile.replace("782", "535");
			sXmlStringFile=sXmlStringFile.replace("Landscape", "Portrait");
			sWidthGrafico="535";
		}
		
		if(this.jInternalFrameReporteDinamicoParametroFactuEmpresa.getjCheckBoxConGraficoDinamico().isSelected()) {
			sXmlStringFile=this.actualizarGraficoReporteDinamico(sXmlStringFile,sWidthGrafico);
		} else {
			sXmlStringFile=sXmlStringFile.replace("colancho_summary_colancho", "30");
		}
		
		return sXmlStringFile;
	}
	
	
	
	public String actualizarGraficoReporteDinamico(String sXmlStringFile,String sWidthGrafico) {		
		String strGrafico="";		
		String sTipo="NORMAL";
		String strCategorySeries="";
		String sNombreCampoCategoria="";
		String sNombreCampoCategoriaValor="";
		Reporte reporte=new Reporte();
		Reporte reporteCategoriaValor=new Reporte();
		Reporte reporteTipoGraficoReporte=new Reporte();
		Boolean existe=false;
		
		sXmlStringFile=sXmlStringFile.replace("colancho_summary_colancho", "280");
		
		//CATEGORIA GRAFICO				
		reporte=((Reporte)this.jInternalFrameReporteDinamicoParametroFactuEmpresa.getjComboBoxColumnaCategoriaGrafico().getSelectedItem());
				
		//TIPO GRAFICO REPORTE
		reporteTipoGraficoReporte=((Reporte)this.jInternalFrameReporteDinamicoParametroFactuEmpresa.getjComboBoxTiposGraficosReportesDinamico().getSelectedItem());
		
		String sTipoGraficoReporte=reporteTipoGraficoReporte.getsCodigo();
		
		switch(reporte.getsCodigo()) {
			
				case ParametroFactuEmpresaConstantesFunciones.LABEL_IDEMPRESA:
					sNombreCampoCategoria="id_empresa";
					break;

				case ParametroFactuEmpresaConstantesFunciones.LABEL_IDEMPRESAORIGEN:
					sNombreCampoCategoria="id_empresa_origen";
					break;

				case ParametroFactuEmpresaConstantesFunciones.LABEL_IDSUCURSAL:
					sNombreCampoCategoria="id_sucursal";
					break;

				case ParametroFactuEmpresaConstantesFunciones.LABEL_IDTRANSACCIONORIGEN:
					sNombreCampoCategoria="id_transaccion_origen";
					break;

				case ParametroFactuEmpresaConstantesFunciones.LABEL_IDBODEGAORIGEN:
					sNombreCampoCategoria="id_bodega_origen";
					break;

				case ParametroFactuEmpresaConstantesFunciones.LABEL_IDCLIENTEORIGEN:
					sNombreCampoCategoria="id_cliente_origen";
					break;

				case ParametroFactuEmpresaConstantesFunciones.LABEL_COSTOORIGEN:
					sNombreCampoCategoria="costo_origen";
					break;

				case ParametroFactuEmpresaConstantesFunciones.LABEL_IDEMPRESADESTINO:
					sNombreCampoCategoria="id_empresa_destino";
					break;

				case ParametroFactuEmpresaConstantesFunciones.LABEL_IDSUCURSALDESTINO:
					sNombreCampoCategoria="id_sucursal_destino";
					break;

				case ParametroFactuEmpresaConstantesFunciones.LABEL_IDTRANSACCIONDESTINO:
					sNombreCampoCategoria="id_transaccion_destino";
					break;

				case ParametroFactuEmpresaConstantesFunciones.LABEL_IDBODEGADESTINO:
					sNombreCampoCategoria="id_bodega_destino";
					break;

				case ParametroFactuEmpresaConstantesFunciones.LABEL_IDCLIENTEDESTINO:
					sNombreCampoCategoria="id_cliente_destino";
					break;

				case ParametroFactuEmpresaConstantesFunciones.LABEL_COSTODESTINO:
					sNombreCampoCategoria="costo_destino";
					break;

				case ParametroFactuEmpresaConstantesFunciones.LABEL_CONTRANSFERENCIA:
					sNombreCampoCategoria="con_transferencia";
					break;

				case ParametroFactuEmpresaConstantesFunciones.LABEL_IDEMPRESAMULTIDESTINO:
					sNombreCampoCategoria="id_empresa_multi_destino";
					break;

				case ParametroFactuEmpresaConstantesFunciones.LABEL_IDSUCURSALMULTIDESTINO:
					sNombreCampoCategoria="id_sucursal_multi_destino";
					break;

				case ParametroFactuEmpresaConstantesFunciones.LABEL_IDTRANSACCIONMULTIDESTINO:
					sNombreCampoCategoria="id_transaccion_multi_destino";
					break;

				case ParametroFactuEmpresaConstantesFunciones.LABEL_IDBODEGAMULTIORIGEN:
					sNombreCampoCategoria="id_bodega_multi_origen";
					break;

				case ParametroFactuEmpresaConstantesFunciones.LABEL_IDBODEGAMULTIDESTINO:
					sNombreCampoCategoria="id_bodega_multi_destino";
					break;
					
			default :
				break;
		}		
		//CATEGORIA GRAFICO
		
		//CATEGORIA VALOR				
		reporteCategoriaValor=((Reporte)this.jInternalFrameReporteDinamicoParametroFactuEmpresa.getjComboBoxColumnaCategoriaValor().getSelectedItem());
		
		switch(reporteCategoriaValor.getsCodigo()) {
			
				case ParametroFactuEmpresaConstantesFunciones.LABEL_IDEMPRESA:
					sNombreCampoCategoriaValor="id_empresa";
					break;

				case ParametroFactuEmpresaConstantesFunciones.LABEL_IDEMPRESAORIGEN:
					sNombreCampoCategoriaValor="id_empresa_origen";
					break;

				case ParametroFactuEmpresaConstantesFunciones.LABEL_IDSUCURSAL:
					sNombreCampoCategoriaValor="id_sucursal";
					break;

				case ParametroFactuEmpresaConstantesFunciones.LABEL_IDTRANSACCIONORIGEN:
					sNombreCampoCategoriaValor="id_transaccion_origen";
					break;

				case ParametroFactuEmpresaConstantesFunciones.LABEL_IDBODEGAORIGEN:
					sNombreCampoCategoriaValor="id_bodega_origen";
					break;

				case ParametroFactuEmpresaConstantesFunciones.LABEL_IDCLIENTEORIGEN:
					sNombreCampoCategoriaValor="id_cliente_origen";
					break;

				case ParametroFactuEmpresaConstantesFunciones.LABEL_COSTOORIGEN:
					sNombreCampoCategoriaValor="costo_origen";
					break;

				case ParametroFactuEmpresaConstantesFunciones.LABEL_IDEMPRESADESTINO:
					sNombreCampoCategoriaValor="id_empresa_destino";
					break;

				case ParametroFactuEmpresaConstantesFunciones.LABEL_IDSUCURSALDESTINO:
					sNombreCampoCategoriaValor="id_sucursal_destino";
					break;

				case ParametroFactuEmpresaConstantesFunciones.LABEL_IDTRANSACCIONDESTINO:
					sNombreCampoCategoriaValor="id_transaccion_destino";
					break;

				case ParametroFactuEmpresaConstantesFunciones.LABEL_IDBODEGADESTINO:
					sNombreCampoCategoriaValor="id_bodega_destino";
					break;

				case ParametroFactuEmpresaConstantesFunciones.LABEL_IDCLIENTEDESTINO:
					sNombreCampoCategoriaValor="id_cliente_destino";
					break;

				case ParametroFactuEmpresaConstantesFunciones.LABEL_COSTODESTINO:
					sNombreCampoCategoriaValor="costo_destino";
					break;

				case ParametroFactuEmpresaConstantesFunciones.LABEL_CONTRANSFERENCIA:
					sNombreCampoCategoriaValor="con_transferencia";
					break;

				case ParametroFactuEmpresaConstantesFunciones.LABEL_IDEMPRESAMULTIDESTINO:
					sNombreCampoCategoriaValor="id_empresa_multi_destino";
					break;

				case ParametroFactuEmpresaConstantesFunciones.LABEL_IDSUCURSALMULTIDESTINO:
					sNombreCampoCategoriaValor="id_sucursal_multi_destino";
					break;

				case ParametroFactuEmpresaConstantesFunciones.LABEL_IDTRANSACCIONMULTIDESTINO:
					sNombreCampoCategoriaValor="id_transaccion_multi_destino";
					break;

				case ParametroFactuEmpresaConstantesFunciones.LABEL_IDBODEGAMULTIORIGEN:
					sNombreCampoCategoriaValor="id_bodega_multi_origen";
					break;

				case ParametroFactuEmpresaConstantesFunciones.LABEL_IDBODEGAMULTIDESTINO:
					sNombreCampoCategoriaValor="id_bodega_multi_destino";
					break;
					
			default :
				break;
		}	
		//CATEGORIA VALOR
		
		//VALORES GRAFICO
		for(int index:this.jInternalFrameReporteDinamicoParametroFactuEmpresa.getjListColumnasValoresGrafico().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoParametroFactuEmpresa.getjListColumnasValoresGrafico().getModel().getElementAt(index);
			
			switch(reporte.getsCodigo()) {
				
				case ParametroFactuEmpresaConstantesFunciones.LABEL_IDEMPRESA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Empresa",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_empresa");
					break;

				case ParametroFactuEmpresaConstantesFunciones.LABEL_IDEMPRESAORIGEN:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Empresa Origen",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_empresa_origen");
					break;

				case ParametroFactuEmpresaConstantesFunciones.LABEL_IDSUCURSAL:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Sucursal",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_sucursal");
					break;

				case ParametroFactuEmpresaConstantesFunciones.LABEL_IDTRANSACCIONORIGEN:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Transaccion Origen",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_transaccion_origen");
					break;

				case ParametroFactuEmpresaConstantesFunciones.LABEL_IDBODEGAORIGEN:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Bodega Origen",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_bodega_origen");
					break;

				case ParametroFactuEmpresaConstantesFunciones.LABEL_IDCLIENTEORIGEN:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Cliente Origen",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_cliente_origen");
					break;

				case ParametroFactuEmpresaConstantesFunciones.LABEL_COSTOORIGEN:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Costo Origen",sNombreCampoCategoria,sNombreCampoCategoriaValor,"costo_origen");
					break;

				case ParametroFactuEmpresaConstantesFunciones.LABEL_IDEMPRESADESTINO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Empresa Destino",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_empresa_destino");
					break;

				case ParametroFactuEmpresaConstantesFunciones.LABEL_IDSUCURSALDESTINO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Sucursal Destino",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_sucursal_destino");
					break;

				case ParametroFactuEmpresaConstantesFunciones.LABEL_IDTRANSACCIONDESTINO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Transaccion Destino",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_transaccion_destino");
					break;

				case ParametroFactuEmpresaConstantesFunciones.LABEL_IDBODEGADESTINO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Bodega Destino",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_bodega_destino");
					break;

				case ParametroFactuEmpresaConstantesFunciones.LABEL_IDCLIENTEDESTINO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Cliente Destino",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_cliente_destino");
					break;

				case ParametroFactuEmpresaConstantesFunciones.LABEL_COSTODESTINO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Costo Destino",sNombreCampoCategoria,sNombreCampoCategoriaValor,"costo_destino");
					break;

				case ParametroFactuEmpresaConstantesFunciones.LABEL_CONTRANSFERENCIA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Con Transferencia",sNombreCampoCategoria,sNombreCampoCategoriaValor,"con_transferencia");
					break;

				case ParametroFactuEmpresaConstantesFunciones.LABEL_IDEMPRESAMULTIDESTINO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Empresa Multi Destino",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_empresa_multi_destino");
					break;

				case ParametroFactuEmpresaConstantesFunciones.LABEL_IDSUCURSALMULTIDESTINO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Sucursal Multi Destino",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_sucursal_multi_destino");
					break;

				case ParametroFactuEmpresaConstantesFunciones.LABEL_IDTRANSACCIONMULTIDESTINO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Transaccion Multi Destino",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_transaccion_multi_destino");
					break;

				case ParametroFactuEmpresaConstantesFunciones.LABEL_IDBODEGAMULTIORIGEN:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Bodega Multi Origen",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_bodega_multi_origen");
					break;

				case ParametroFactuEmpresaConstantesFunciones.LABEL_IDBODEGAMULTIDESTINO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Bodega Multi Destino",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_bodega_multi_destino");
					break;
					
				default :
					break;
			}
		}
		//VALORES GRAFICO
		//if(sTipoGraficoReporte.equals("BARRAS") || sTipoGraficoReporte.equals("BARRAS_3D") || sTipoGraficoReporte.equals("BARRAS_XY") ||
		//   sTipoGraficoReporte.equals("PASTEL") || sTipoGraficoReporte.equals("PASTEL_3D") || sTipoGraficoReporte.equals("APILADO")) {
			
			existe=true;
			strGrafico=FuncionesReporte.getStringGraficoReporte(sTipoGraficoReporte,sWidthGrafico,strCategorySeries);			
		//}
		
		if(existe) {
			sXmlStringFile=sXmlStringFile.replace("<!--GRAFICO-->", strGrafico);
		}												
		
		return sXmlStringFile;
	}
	
	
	//@SuppressWarnings("deprecation")
	
	public void jButtonGenerarExcelReporteDinamicoParametroFactuEmpresaActionPerformed(ActionEvent evt) throws Exception {		
		ArrayList<ParametroFactuEmpresa> parametrofactuempresasSeleccionados=new ArrayList<ParametroFactuEmpresa>();		
		
		parametrofactuempresasSeleccionados=this.getParametroFactuEmpresasSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"parametrofactuempresa";//.xls";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		Boolean existeFilas=false;
		
		Workbook workbook = null;
		FileOutputStream fileOutputStream=null;
		Reporte reporte=new Reporte();
		
		try {
			
			if(sTipoArchivoReporte=="EXCEL2") {
				workbook = new HSSFWorkbook();
				sPath+=".xls";
			
			} else if(sTipoArchivoReporte=="EXCEL2_2") {
				workbook = new XSSFWorkbook();
				sPath+=".xlsx";			
			}
		
			Sheet sheet = workbook.createSheet("ParametroFactuEmpresas");
						
		    			
			Integer iRow=0;
			Integer iCell=0;
			
			Row row = sheet.createRow(iRow);
			Cell cell = row.createCell(iCell);
			//cell.setCellValue("Blahblah");
			
			for(int index:this.jInternalFrameReporteDinamicoParametroFactuEmpresa.getjListColumnasSelectReporte().getSelectedIndices()) {
				reporte=(Reporte)this.jInternalFrameReporteDinamicoParametroFactuEmpresa.getjListColumnasSelectReporte().getModel().getElementAt(index);
				
				switch(reporte.getsCodigo()) {
					
				case ParametroFactuEmpresaConstantesFunciones.LABEL_IDEMPRESA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroFactuEmpresaConstantesFunciones.LABEL_IDEMPRESA);
					iRow++;

					for(ParametroFactuEmpresa parametrofactuempresa:parametrofactuempresasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrofactuempresa.getempresa_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroFactuEmpresaConstantesFunciones.LABEL_IDEMPRESAORIGEN:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroFactuEmpresaConstantesFunciones.LABEL_IDEMPRESAORIGEN);
					iRow++;

					for(ParametroFactuEmpresa parametrofactuempresa:parametrofactuempresasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrofactuempresa.getempresaorigen_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroFactuEmpresaConstantesFunciones.LABEL_IDSUCURSAL:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroFactuEmpresaConstantesFunciones.LABEL_IDSUCURSAL);
					iRow++;

					for(ParametroFactuEmpresa parametrofactuempresa:parametrofactuempresasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrofactuempresa.getsucursal_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroFactuEmpresaConstantesFunciones.LABEL_IDTRANSACCIONORIGEN:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroFactuEmpresaConstantesFunciones.LABEL_IDTRANSACCIONORIGEN);
					iRow++;

					for(ParametroFactuEmpresa parametrofactuempresa:parametrofactuempresasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrofactuempresa.gettransaccionorigen_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroFactuEmpresaConstantesFunciones.LABEL_IDBODEGAORIGEN:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroFactuEmpresaConstantesFunciones.LABEL_IDBODEGAORIGEN);
					iRow++;

					for(ParametroFactuEmpresa parametrofactuempresa:parametrofactuempresasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrofactuempresa.getbodegaorigen_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroFactuEmpresaConstantesFunciones.LABEL_IDCLIENTEORIGEN:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroFactuEmpresaConstantesFunciones.LABEL_IDCLIENTEORIGEN);
					iRow++;

					for(ParametroFactuEmpresa parametrofactuempresa:parametrofactuempresasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrofactuempresa.getclienteorigen_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroFactuEmpresaConstantesFunciones.LABEL_COSTOORIGEN:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroFactuEmpresaConstantesFunciones.LABEL_COSTOORIGEN);
					iRow++;

					for(ParametroFactuEmpresa parametrofactuempresa:parametrofactuempresasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrofactuempresa.getcosto_origen());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroFactuEmpresaConstantesFunciones.LABEL_IDEMPRESADESTINO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroFactuEmpresaConstantesFunciones.LABEL_IDEMPRESADESTINO);
					iRow++;

					for(ParametroFactuEmpresa parametrofactuempresa:parametrofactuempresasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrofactuempresa.getempresadestino_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroFactuEmpresaConstantesFunciones.LABEL_IDSUCURSALDESTINO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroFactuEmpresaConstantesFunciones.LABEL_IDSUCURSALDESTINO);
					iRow++;

					for(ParametroFactuEmpresa parametrofactuempresa:parametrofactuempresasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrofactuempresa.getsucursaldestino_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroFactuEmpresaConstantesFunciones.LABEL_IDTRANSACCIONDESTINO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroFactuEmpresaConstantesFunciones.LABEL_IDTRANSACCIONDESTINO);
					iRow++;

					for(ParametroFactuEmpresa parametrofactuempresa:parametrofactuempresasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrofactuempresa.gettransacciondestino_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroFactuEmpresaConstantesFunciones.LABEL_IDBODEGADESTINO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroFactuEmpresaConstantesFunciones.LABEL_IDBODEGADESTINO);
					iRow++;

					for(ParametroFactuEmpresa parametrofactuempresa:parametrofactuempresasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrofactuempresa.getbodegadestino_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroFactuEmpresaConstantesFunciones.LABEL_IDCLIENTEDESTINO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroFactuEmpresaConstantesFunciones.LABEL_IDCLIENTEDESTINO);
					iRow++;

					for(ParametroFactuEmpresa parametrofactuempresa:parametrofactuempresasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrofactuempresa.getclientedestino_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroFactuEmpresaConstantesFunciones.LABEL_COSTODESTINO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroFactuEmpresaConstantesFunciones.LABEL_COSTODESTINO);
					iRow++;

					for(ParametroFactuEmpresa parametrofactuempresa:parametrofactuempresasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrofactuempresa.getcosto_destino());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroFactuEmpresaConstantesFunciones.LABEL_CONTRANSFERENCIA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroFactuEmpresaConstantesFunciones.LABEL_CONTRANSFERENCIA);
					iRow++;

					for(ParametroFactuEmpresa parametrofactuempresa:parametrofactuempresasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrofactuempresa.getcon_transferencia());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroFactuEmpresaConstantesFunciones.LABEL_IDEMPRESAMULTIDESTINO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroFactuEmpresaConstantesFunciones.LABEL_IDEMPRESAMULTIDESTINO);
					iRow++;

					for(ParametroFactuEmpresa parametrofactuempresa:parametrofactuempresasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrofactuempresa.getempresamultidestino_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroFactuEmpresaConstantesFunciones.LABEL_IDSUCURSALMULTIDESTINO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroFactuEmpresaConstantesFunciones.LABEL_IDSUCURSALMULTIDESTINO);
					iRow++;

					for(ParametroFactuEmpresa parametrofactuempresa:parametrofactuempresasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrofactuempresa.getsucursalmultidestino_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroFactuEmpresaConstantesFunciones.LABEL_IDTRANSACCIONMULTIDESTINO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroFactuEmpresaConstantesFunciones.LABEL_IDTRANSACCIONMULTIDESTINO);
					iRow++;

					for(ParametroFactuEmpresa parametrofactuempresa:parametrofactuempresasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrofactuempresa.gettransaccionmultidestino_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroFactuEmpresaConstantesFunciones.LABEL_IDBODEGAMULTIORIGEN:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroFactuEmpresaConstantesFunciones.LABEL_IDBODEGAMULTIORIGEN);
					iRow++;

					for(ParametroFactuEmpresa parametrofactuempresa:parametrofactuempresasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrofactuempresa.getbodegamultiorigen_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroFactuEmpresaConstantesFunciones.LABEL_IDBODEGAMULTIDESTINO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroFactuEmpresaConstantesFunciones.LABEL_IDBODEGAMULTIDESTINO);
					iRow++;

					for(ParametroFactuEmpresa parametrofactuempresa:parametrofactuempresasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrofactuempresa.getbodegamultidestino_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;
					
					default :
						break;
				}
			}
			
			
			//if(conCabecera) {
			//	this.getFilaCabeceraExportarExcelParametroFactuEmpresa(row);				
			//	iRow++;
			//}				
			
			//for(ParametroFactuEmpresa parametrofactuempresaAux:parametrofactuempresasSeleccionados) {
			//	row = sheet.createRow(iRow);
				
			//	this.getFilaDatosExportarExcelParametroFactuEmpresa(parametrofactuempresaAux,row);
				
			//	iRow++;
			//}
			
			
			
			fileOutputStream = new FileOutputStream(new File(sPath));
		    
			workbook.write(fileOutputStream);
			
			//fileOutputStream.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.parametrofactuempresaSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Parametro Empresa ",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			
       		if (fileOutputStream != null) {
				fileOutputStream.close();
			}			
		}				
	}	
	
	
	
	
	public void buscarPorId(Long idActual) throws Exception {    		
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuempresaLogic.getNewConnexionToDeep("");
			}
			
			this.idActual=idActual;
			this.iNumeroPaginacionPagina=0;
			
			this.procesarBusqueda("PorId");
				    	
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingParametroFactuEmpresa(false);
			
			//SI ES MANUAL
			if(ParametroFactuEmpresaJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualParametroFactuEmpresa();
			}	
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuempresaLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuempresaLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger);
			
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuempresaLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonAnterioresParametroFactuEmpresaActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			//this.iNumeroPaginacion-=this.iNumeroPaginacion;
			/*
			if(this.iNumeroPaginacion<0) {
				this.iNumeroPaginacion=0;
			}
			*/
			//this.iNumeroPaginacionPagina=10;			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuempresaLogic.getNewConnexionToDeep("");
			}
			
			this.anteriores();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingParametroFactuEmpresa(false);
			
			//SI ES MANUAL
			if(ParametroFactuEmpresaJInternalFrame.ISBINDING_MANUAL) {
	    		//this.inicializarActualizarBindingManualParametroFactuEmpresa();
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuempresaLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuempresaLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,ParametroFactuEmpresaConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuempresaLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonSiguientesParametroFactuEmpresaActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			//this.iNumeroPaginacion+=this.iNumeroPaginacion;
			//this.iNumeroPaginacionPagina=10;			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuempresaLogic.getNewConnexionToDeep("");
			}
			
			this.siguientes();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingParametroFactuEmpresa(false);
			
			//SI ES MANUAL
			if(ParametroFactuEmpresaJInternalFrame.ISBINDING_MANUAL) {
	    		//this.inicializarActualizarBindingManualParametroFactuEmpresa();
			}		
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuempresaLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuempresaLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,ParametroFactuEmpresaConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuempresaLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void aumentarTamanioFilaNuevaTablaParametroFactuEmpresa() throws Exception {		
		Dimension dimensionMinimum=this.jTableDatosParametroFactuEmpresa.getMinimumSize();
		Dimension dimensionMaximum=this.jTableDatosParametroFactuEmpresa.getMaximumSize();
		Dimension dimensionPreferred=this.jTableDatosParametroFactuEmpresa.getPreferredSize();
	
		double iHeightConFilaNueva=dimensionPreferred.getHeight();
		
		iHeightConFilaNueva+=this.jTableDatosParametroFactuEmpresa.getRowHeight();
		
		dimensionMinimum.setSize(dimensionMinimum.getWidth(),iHeightConFilaNueva);
		dimensionMaximum.setSize(dimensionMaximum.getWidth(),iHeightConFilaNueva);
		dimensionPreferred.setSize(dimensionPreferred.getWidth(),iHeightConFilaNueva);
		
		this.jTableDatosParametroFactuEmpresa.setMinimumSize(dimensionMinimum);
		this.jTableDatosParametroFactuEmpresa.setMaximumSize(dimensionMaximum);
		this.jTableDatosParametroFactuEmpresa.setPreferredSize(dimensionPreferred);	
	}
	
	public void inicializarActualizarBindingParametroFactuEmpresa(Boolean esInicializar) throws Exception {
		this.inicializarActualizarBindingParametroFactuEmpresa(esInicializar,true);
	}
	
	public void inicializarActualizarBindingParametroFactuEmpresa(Boolean esInicializar,Boolean conTabla) throws Exception {		
		if(conTabla) {
			this.inicializarActualizarBindingTablaParametroFactuEmpresa(esInicializar);
		}
		
		this.inicializarActualizarBindingBotonesParametroFactuEmpresa(esInicializar);
		
		//FUNCIONALIDAD_RELACIONADO
		if(!this.parametrofactuempresaSessionBean.getEsGuardarRelacionado()) {
			try{this.inicializarActualizarBindingBusquedasParametroFactuEmpresa(esInicializar);}catch(Exception e){e.printStackTrace();}
			
			//this.inicializarActualizarBindingtiposArchivosReportesAccionesParametroFactuEmpresa(esInicializar) ;
			
			this.inicializarActualizarBindingParametrosReportesParametroFactuEmpresa(esInicializar) ;
		}
		
		if(esInicializar) {
			if( !ParametroFactuEmpresaJInternalFrame.ISBINDING_MANUAL_TABLA ||
			   	!ParametroFactuEmpresaJInternalFrame.ISBINDING_MANUAL) {
			   	
			}
		}
	}
	
	public void inicializarActualizarBindingManualParametroFactuEmpresa() throws Exception {		
		//NO SE NECESITA HACER BINDING OTRA VEZ
		//this.inicializarActualizarBindingTablaParametroFactuEmpresa();
		
		this.inicializarActualizarBindingBotonesManualParametroFactuEmpresa(true);
		
		//FUNCIONALIDAD_RELACIONADO
		if(!this.parametrofactuempresaSessionBean.getEsGuardarRelacionado()) {
			
			this.inicializarActualizarBindingBusquedasManualParametroFactuEmpresa();			
			
			
			//this.inicializarActualizarBindingtiposArchivosReportesAccionesParametroFactuEmpresa() ;
			
			this.inicializarActualizarBindingParametrosReportesPostAccionesManualParametroFactuEmpresa(false) ;			
			
		}
	}
	
	public void inicializarActualizarBindingParametrosReportesPostAccionesManualParametroFactuEmpresa(Boolean esSetControles) throws Exception {
		try	{					
			if(!esSetControles) {
				this.isSeleccionarTodos=this.jCheckBoxSeleccionarTodosParametroFactuEmpresa.isSelected();
				this.isSeleccionados=this.jCheckBoxSeleccionadosParametroFactuEmpresa.isSelected();
				
				
				this.conGraficoReporte=this.jCheckBoxConGraficoReporteParametroFactuEmpresa.isSelected();															
				
				
				if(this.jInternalFrameDetalleFormParametroFactuEmpresa!=null) {
				this.isPostAccionNuevo=this.jInternalFrameDetalleFormParametroFactuEmpresa.jCheckBoxPostAccionNuevoParametroFactuEmpresa.isSelected();
				this.isPostAccionSinCerrar=this.jInternalFrameDetalleFormParametroFactuEmpresa.jCheckBoxPostAccionSinCerrarParametroFactuEmpresa.isSelected();
				this.isPostAccionSinMensaje=this.jInternalFrameDetalleFormParametroFactuEmpresa.jCheckBoxPostAccionSinMensajeParametroFactuEmpresa.isSelected();
				}
			
			} else {
				this.jCheckBoxSeleccionarTodosParametroFactuEmpresa.setSelected(this.isSeleccionarTodos);
				this.jCheckBoxSeleccionadosParametroFactuEmpresa.setSelected(this.isSeleccionados);
				
				
				this.jCheckBoxConGraficoReporteParametroFactuEmpresa.setSelected(this.conGraficoReporte);				
				
				
				if(this.jInternalFrameDetalleFormParametroFactuEmpresa!=null) {
				this.jInternalFrameDetalleFormParametroFactuEmpresa.jCheckBoxPostAccionNuevoParametroFactuEmpresa.setSelected(this.isPostAccionNuevo);
				this.jInternalFrameDetalleFormParametroFactuEmpresa.jCheckBoxPostAccionSinCerrarParametroFactuEmpresa.setSelected(this.isPostAccionSinCerrar);
				this.jInternalFrameDetalleFormParametroFactuEmpresa.jCheckBoxPostAccionSinMensajeParametroFactuEmpresa.setSelected(this.isPostAccionSinMensaje);
				}
			}
			
			
			if(this.jComboBoxTiposPaginacionParametroFactuEmpresa.getSelectedItem()!=null) {
				this.sTipoPaginacion=((Reporte)this.jComboBoxTiposPaginacionParametroFactuEmpresa.getSelectedItem()).getsCodigo();			
			}
			
			
			
			if(this.jInternalFrameDetalleFormParametroFactuEmpresa!=null) {
			this.sTipoAccionFormulario=((Reporte)this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxTiposAccionesFormularioParametroFactuEmpresa.getSelectedItem()).getsCodigo();
			}
			
			
			
			if(!this.conCargarMinimo) {
				this.sTipoArchivoReporte=((Reporte)this.jComboBoxTiposArchivosReportesParametroFactuEmpresa.getSelectedItem()).getsCodigo();			
				
				if(this.jInternalFrameReporteDinamicoParametroFactuEmpresa!=null) {
					this.sTipoArchivoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoParametroFactuEmpresa.getjComboBoxTiposArchivosReportesDinamico().getSelectedItem()).getsCodigo();			
				}
				
				this.sTipoRelacion=((Reporte)this.jComboBoxTiposRelacionesParametroFactuEmpresa.getSelectedItem()).getsCodigo();
									
				this.sTipoAccion=((Reporte)this.jComboBoxTiposAccionesParametroFactuEmpresa.getSelectedItem()).getsCodigo();
													
				this.sTipoSeleccionar=((Reporte)this.jComboBoxTiposSeleccionarParametroFactuEmpresa.getSelectedItem()).getsCodigo();
									
				this.sTipoReporte=((Reporte)this.jComboBoxTiposReportesParametroFactuEmpresa.getSelectedItem()).getsCodigo();							
					
				if(this.jInternalFrameReporteDinamicoParametroFactuEmpresa!=null) {
					this.sTipoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoParametroFactuEmpresa.getjComboBoxTiposReportesDinamico().getSelectedItem()).getsCodigo();							
				}
				
				this.sTipoGraficoReporte=((Reporte)this.jComboBoxTiposGraficosReportesParametroFactuEmpresa.getSelectedItem()).getsCodigo();											
			}			
			
			this.sValorCampoGeneral=this.jTextFieldValorCampoGeneralParametroFactuEmpresa.getText();						
			
			
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void inicializarActualizarBindingParametrosReportesParametroFactuEmpresa(Boolean esInicializar) throws Exception {
		try	{	
			if(ParametroFactuEmpresaJInternalFrame.ISBINDING_MANUAL) {
				this. inicializarActualizarBindingParametrosReportesPostAccionesManualParametroFactuEmpresa(false);
			} else {
			}
		} catch(Exception e) {
			throw e;
		}
	}	
	
	public void inicializarActualizarBindingtiposArchivosReportesAccionesParametroFactuEmpresa() throws Exception {
		try	{
			if(ParametroFactuEmpresaJInternalFrame.ISBINDING_MANUAL) {
				this.inicializarActualizarBindingtiposArchivosReportesAccionesManualParametroFactuEmpresa();
			} else {
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesAccionesManualFormDetalleParametroFactuEmpresa() throws Exception {
		//TIPOS ACCIONES FORMULARIO	
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxTiposAccionesFormularioParametroFactuEmpresa.removeAllItems();
				
		for(Reporte reporte:this.tiposAccionesFormulario) {
			this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxTiposAccionesFormularioParametroFactuEmpresa.addItem(reporte);
		}
		
		//TIPOS ACCIONES FORMULARIO
	}
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesAccionesManualParametroFactuEmpresa() throws Exception {
		try	{
			
			//TIPOS ARCHIVOS REPORTES
			this.jComboBoxTiposArchivosReportesParametroFactuEmpresa.removeAllItems();
				
			for(Reporte reporte:this.tiposArchivosReportes) {
				this.jComboBoxTiposArchivosReportesParametroFactuEmpresa.addItem(reporte);
			}
			
			
				
			//TIPOS REPORTES
			this.jComboBoxTiposReportesParametroFactuEmpresa.removeAllItems();
				
			for(Reporte reporte:this.tiposReportes) {
				this.jComboBoxTiposReportesParametroFactuEmpresa.addItem(reporte);
			}
			
			
			//TIPOS GRAFICOS REPORTES
			this.jComboBoxTiposGraficosReportesParametroFactuEmpresa.removeAllItems();
				
			for(Reporte reporte:this.tiposGraficosReportes) {
				this.jComboBoxTiposGraficosReportesParametroFactuEmpresa.addItem(reporte);
			}
			
			
			//TIPOS PAGINACION
			this.jComboBoxTiposPaginacionParametroFactuEmpresa.removeAllItems();
				
			for(Reporte reporte:this.tiposPaginacion) {
				this.jComboBoxTiposPaginacionParametroFactuEmpresa.addItem(reporte);
			}
			
			
			if(!this.parametrofactuempresaSessionBean.getEsGuardarRelacionado()) {
				this.jComboBoxTiposPaginacionParametroFactuEmpresa.setSelectedItem(Funciones2.getTipoPaginacionDefecto("NORMAL",this.tiposPaginacion));
			} else {
				this.jComboBoxTiposPaginacionParametroFactuEmpresa.setSelectedItem(Funciones2.getTipoPaginacionDefecto("RELACIONADO",this.tiposPaginacion));
			}
				
				
			//TIPOS ACCIONES	
			this.jComboBoxTiposRelacionesParametroFactuEmpresa.removeAllItems();
				
			for(Reporte reporte:this.tiposRelaciones) {
				this.jComboBoxTiposRelacionesParametroFactuEmpresa.addItem(reporte);
			}
			
			//TIPOS ACCIONES
				
				
			//TIPOS ACCIONES	
			this.jComboBoxTiposAccionesParametroFactuEmpresa.removeAllItems();
				
			for(Reporte reporte:this.tiposAcciones) {
				this.jComboBoxTiposAccionesParametroFactuEmpresa.addItem(reporte);
			}
			
			//TIPOS ACCIONES			
			
			
			
			//TIPOS ACCIONES FORMULARIO	
			if(this.jInternalFrameDetalleFormParametroFactuEmpresa!=null) { //if(this.conCargarFormDetalle) {
				this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxTiposAccionesFormularioParametroFactuEmpresa.removeAllItems();
				
				for(Reporte reporte:this.tiposAccionesFormulario) {
					this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxTiposAccionesFormularioParametroFactuEmpresa.addItem(reporte);
				}
				
			}
			//TIPOS ACCIONES FORMULARIO
			
			
			
			//TIPOS SELECCIONAR
			this.jComboBoxTiposSeleccionarParametroFactuEmpresa.removeAllItems();
				
			for(Reporte reporte:this.tiposSeleccionar) {
				this.jComboBoxTiposSeleccionarParametroFactuEmpresa.addItem(reporte);
			}
			
			
			if(this.tiposSeleccionar!=null && this.tiposSeleccionar.size()>1) {
				this.jComboBoxTiposSeleccionarParametroFactuEmpresa.setSelectedIndex(1);
			}
				
			//REPORTE DINAMICO
			this.inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualParametroFactuEmpresa();
							
			//TIPOS COLUMNAS SELECT
			//TIPOS SELECCIONAR
			
			
		} catch(Exception e) {
			throw e;
		}
	}		
	
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualParametroFactuEmpresa() throws Exception {
		try	{
			DefaultListModel<Reporte> defaultListModel=new DefaultListModel<Reporte>();
			
			
			//TIPOS ARCHIVOS REPORTES DINAMICO
			if(this.jInternalFrameReporteDinamicoParametroFactuEmpresa!=null) {
				this.jInternalFrameReporteDinamicoParametroFactuEmpresa.getjComboBoxTiposArchivosReportesDinamico().removeAllItems();
					
				for(Reporte reporte:this.tiposArchivosReportesDinamico) {
					this.jInternalFrameReporteDinamicoParametroFactuEmpresa.getjComboBoxTiposArchivosReportesDinamico().addItem(reporte);
				}
				
			}
			
			//TIPOS REPORTES DINAMICO
			if(this.jInternalFrameReporteDinamicoParametroFactuEmpresa!=null) {
				this.jInternalFrameReporteDinamicoParametroFactuEmpresa.getjComboBoxTiposReportesDinamico().removeAllItems();
					
				for(Reporte reporte:this.tiposReportesDinamico) {
					this.jInternalFrameReporteDinamicoParametroFactuEmpresa.getjComboBoxTiposReportesDinamico().addItem(reporte);
				}
				
			}
			
			defaultListModel=new DefaultListModel<Reporte>();
			
			if(this.jInternalFrameReporteDinamicoParametroFactuEmpresa!=null) {
				
				if(this.jInternalFrameReporteDinamicoParametroFactuEmpresa.getjListColumnasSelectReporte()!=null) {
					this.jInternalFrameReporteDinamicoParametroFactuEmpresa.getjListColumnasSelectReporte().removeAll();
						
					for(Reporte reporte:this.tiposColumnasSelect) {
						defaultListModel.addElement(reporte);
					}						
						
					this.jInternalFrameReporteDinamicoParametroFactuEmpresa.getjListColumnasSelectReporte().setModel(defaultListModel);									
						
				}	
					
				//TIPOS RELACIONES SELECT
				//TIPOS SELECCIONAR
				defaultListModel=new DefaultListModel<Reporte>();
				if(this.jInternalFrameReporteDinamicoParametroFactuEmpresa.getjListRelacionesSelectReporte()!=null) {
					this.jInternalFrameReporteDinamicoParametroFactuEmpresa.getjListRelacionesSelectReporte().removeAll();
						
					for(Reporte reporte:this.tiposRelacionesSelect) {
						defaultListModel.addElement(reporte);
					}						
						
					this.jInternalFrameReporteDinamicoParametroFactuEmpresa.getjListRelacionesSelectReporte().setModel(defaultListModel);									
						
				}	
				
				
				//TIPOS COLUMNAS CATEGORIA DINAMICO
				if(this.jInternalFrameReporteDinamicoParametroFactuEmpresa.getjComboBoxColumnaCategoriaGrafico()!=null) {
					this.jInternalFrameReporteDinamicoParametroFactuEmpresa.getjComboBoxColumnaCategoriaGrafico().removeAllItems();
						
					ArrayList<Reporte> tiposColumnasCategoria=ParametroFactuEmpresaConstantesFunciones.getTiposSeleccionarParametroFactuEmpresa(true,true,false,true,true);
						
					for(Reporte reporte:tiposColumnasCategoria) {//this.tiposSeleccionar
						this.jInternalFrameReporteDinamicoParametroFactuEmpresa.getjComboBoxColumnaCategoriaGrafico().addItem(reporte);
					}
					
				}
					
				//TIPOS COLUMNAS CATEGORIA VALOR DINAMICO
				if(this.jInternalFrameReporteDinamicoParametroFactuEmpresa.getjComboBoxColumnaCategoriaValor()!=null) {
					this.jInternalFrameReporteDinamicoParametroFactuEmpresa.getjComboBoxColumnaCategoriaValor().removeAllItems();
						
					ArrayList<Reporte> tiposColumnasCategoriaValor=ParametroFactuEmpresaConstantesFunciones.getTiposSeleccionarParametroFactuEmpresa(false,false,true,false,false);
						
					for(Reporte reporte:tiposColumnasCategoriaValor) {//this.tiposSeleccionar
						this.jInternalFrameReporteDinamicoParametroFactuEmpresa.getjComboBoxColumnaCategoriaValor().addItem(reporte);
					}
					
				}
					
				//TIPOS COLUMNAS VALOR
				defaultListModel=new DefaultListModel<Reporte>();
					
				if(this.jInternalFrameReporteDinamicoParametroFactuEmpresa.getjListColumnasValoresGrafico()!=null) {
					this.jInternalFrameReporteDinamicoParametroFactuEmpresa.getjListColumnasValoresGrafico().removeAll();
						
					ArrayList<Reporte> tiposColumnasValor=ParametroFactuEmpresaConstantesFunciones.getTiposSeleccionarParametroFactuEmpresa(false,false,true,false,false);
						
					for(Reporte reporte:tiposColumnasValor) {//this.tiposSeleccionar
						defaultListModel.addElement(reporte);
					}						
						
					this.jInternalFrameReporteDinamicoParametroFactuEmpresa.getjListColumnasValoresGrafico().setModel(defaultListModel);									
						
				}
					
				//TIPOS GRAFICOS REPORTES DINAMICOS
				if(this.jInternalFrameReporteDinamicoParametroFactuEmpresa.getjComboBoxTiposGraficosReportesDinamico()!=null) {
					this.jInternalFrameReporteDinamicoParametroFactuEmpresa.getjComboBoxTiposGraficosReportesDinamico().removeAllItems();
						
					for(Reporte reporte:this.tiposGraficosReportes) {
						this.jInternalFrameReporteDinamicoParametroFactuEmpresa.getjComboBoxTiposGraficosReportesDinamico().addItem(reporte);
					}
					
				}
			
			
			}
		} catch(Exception e) {
			throw e;
		}
	}	
	
	
	
	public void inicializarActualizarBindingBusquedasManualParametroFactuEmpresa()  throws Exception {				
		//BYDAN_BUSQUEDAS		
		
		if(this.jComboBoxid_bodega_destinoFK_IdBodegaDestinoParametroFactuEmpresa.getSelectedItem()!=null){this.id_bodega_destinoFK_IdBodegaDestino=((Bodega)this.jComboBoxid_bodega_destinoFK_IdBodegaDestinoParametroFactuEmpresa.getSelectedItem()).getId();}
		if(this.jComboBoxid_bodega_multi_destinoFK_IdBodegaMultiDestinoParametroFactuEmpresa.getSelectedItem()!=null){this.id_bodega_multi_destinoFK_IdBodegaMultiDestino=((Bodega)this.jComboBoxid_bodega_multi_destinoFK_IdBodegaMultiDestinoParametroFactuEmpresa.getSelectedItem()).getId();}
		if(this.jComboBoxid_bodega_multi_origenFK_IdBodegaMultiOrigenParametroFactuEmpresa.getSelectedItem()!=null){this.id_bodega_multi_origenFK_IdBodegaMultiOrigen=((Bodega)this.jComboBoxid_bodega_multi_origenFK_IdBodegaMultiOrigenParametroFactuEmpresa.getSelectedItem()).getId();}
		if(this.jComboBoxid_bodega_origenFK_IdBodegaOrigenParametroFactuEmpresa.getSelectedItem()!=null){this.id_bodega_origenFK_IdBodegaOrigen=((Bodega)this.jComboBoxid_bodega_origenFK_IdBodegaOrigenParametroFactuEmpresa.getSelectedItem()).getId();}
		if(this.jComboBoxid_cliente_destinoFK_IdClienteDestinoParametroFactuEmpresa.getSelectedItem()!=null){this.id_cliente_destinoFK_IdClienteDestino=((Cliente)this.jComboBoxid_cliente_destinoFK_IdClienteDestinoParametroFactuEmpresa.getSelectedItem()).getId();}
		if(this.jComboBoxid_cliente_origenFK_IdClienteOrigenParametroFactuEmpresa.getSelectedItem()!=null){this.id_cliente_origenFK_IdClienteOrigen=((Cliente)this.jComboBoxid_cliente_origenFK_IdClienteOrigenParametroFactuEmpresa.getSelectedItem()).getId();}
		if(this.jComboBoxid_empresa_destinoFK_IdEmpresaDestinoParametroFactuEmpresa.getSelectedItem()!=null){this.id_empresa_destinoFK_IdEmpresaDestino=((Empresa)this.jComboBoxid_empresa_destinoFK_IdEmpresaDestinoParametroFactuEmpresa.getSelectedItem()).getId();}
		if(this.jComboBoxid_empresa_multi_destinoFK_IdEmpresaMultiDestinoParametroFactuEmpresa.getSelectedItem()!=null){this.id_empresa_multi_destinoFK_IdEmpresaMultiDestino=((Empresa)this.jComboBoxid_empresa_multi_destinoFK_IdEmpresaMultiDestinoParametroFactuEmpresa.getSelectedItem()).getId();}
		if(this.jComboBoxid_empresa_origenFK_IdEmpresaOrigenParametroFactuEmpresa.getSelectedItem()!=null){this.id_empresa_origenFK_IdEmpresaOrigen=((Empresa)this.jComboBoxid_empresa_origenFK_IdEmpresaOrigenParametroFactuEmpresa.getSelectedItem()).getId();}
		if(this.jComboBoxid_sucursalFK_IdSucursalParametroFactuEmpresa.getSelectedItem()!=null){this.id_sucursalFK_IdSucursal=((Sucursal)this.jComboBoxid_sucursalFK_IdSucursalParametroFactuEmpresa.getSelectedItem()).getId();}
		if(this.jComboBoxid_sucursal_destinoFK_IdSucursalDestinoParametroFactuEmpresa.getSelectedItem()!=null){this.id_sucursal_destinoFK_IdSucursalDestino=((Sucursal)this.jComboBoxid_sucursal_destinoFK_IdSucursalDestinoParametroFactuEmpresa.getSelectedItem()).getId();}
		if(this.jComboBoxid_sucursal_multi_destinoFK_IdSucursalMultiDestinoParametroFactuEmpresa.getSelectedItem()!=null){this.id_sucursal_multi_destinoFK_IdSucursalMultiDestino=((Sucursal)this.jComboBoxid_sucursal_multi_destinoFK_IdSucursalMultiDestinoParametroFactuEmpresa.getSelectedItem()).getId();}
		if(this.jComboBoxid_transaccion_destinoFK_IdTransaccionDestinoParametroFactuEmpresa.getSelectedItem()!=null){this.id_transaccion_destinoFK_IdTransaccionDestino=((Transaccion)this.jComboBoxid_transaccion_destinoFK_IdTransaccionDestinoParametroFactuEmpresa.getSelectedItem()).getId();}
		if(this.jComboBoxid_transaccion_multi_destinoFK_IdTransaccionMultiDestinoParametroFactuEmpresa.getSelectedItem()!=null){this.id_transaccion_multi_destinoFK_IdTransaccionMultiDestino=((Transaccion)this.jComboBoxid_transaccion_multi_destinoFK_IdTransaccionMultiDestinoParametroFactuEmpresa.getSelectedItem()).getId();}
		if(this.jComboBoxid_transaccion_origenFK_IdTransaccionOrigenParametroFactuEmpresa.getSelectedItem()!=null){this.id_transaccion_origenFK_IdTransaccionOrigen=((Transaccion)this.jComboBoxid_transaccion_origenFK_IdTransaccionOrigenParametroFactuEmpresa.getSelectedItem()).getId();}
		
	}
	
	
	
	
	public void inicializarActualizarBindingBusquedasParametroFactuEmpresa(Boolean esInicializar) throws Exception {				
		if(ParametroFactuEmpresaJInternalFrame.ISBINDING_MANUAL) {
			
			this.inicializarActualizarBindingBusquedasManualParametroFactuEmpresa();			
			
		} else {
		}
	}		
		
	public void inicializarActualizarBindingTablaParametroFactuEmpresa() throws Exception {
		this.inicializarActualizarBindingTablaParametroFactuEmpresa(false);
	}
	
	
	public void inicializarActualizarBindingTablaOrderByParametroFactuEmpresa() {
		//TABLA OrderBy	
		TableColumn tableColumn=new TableColumn();
		Integer iWidthTableDefinicionOrderBy=0;			
			
		this.jInternalFrameOrderByParametroFactuEmpresa.getjTableDatosOrderBy().setModel(new TablaGeneralOrderByModel(this.arrOrderBy));
					
		//DEFINIR RENDERERS OrderBy
		tableColumn=this.jInternalFrameOrderByParametroFactuEmpresa.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderByParametroFactuEmpresa.getjTableDatosOrderBy(),OrderBy.ISSELECTED));			
		//tableColumn.addPropertyChangeListener(new ParametroFactuEmpresaPropertyChangeListener());
					
		tableColumn.setPreferredWidth(50); 	 
		tableColumn.setWidth(50); 	 
		tableColumn.setMinWidth(50);
		tableColumn.setMaxWidth(50);
				
		iWidthTableDefinicionOrderBy+=50;
					
		tableColumn=this.jInternalFrameOrderByParametroFactuEmpresa.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderByParametroFactuEmpresa.getjTableDatosOrderBy(),OrderBy.NOMBRE));
		//tableColumn.addPropertyChangeListener(new ParametroFactuEmpresaPropertyChangeListener());
					
		tableColumn.setPreferredWidth(150); 	 
		tableColumn.setWidth(150); 	 
		tableColumn.setMinWidth(150);
		tableColumn.setMaxWidth(150);
				
		iWidthTableDefinicionOrderBy+=150;
					
		//tableColumn=this.jTableDatosParametroFactuEmpresaOrderBy.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroFactuEmpresaOrderBy,OrderBy.NOMBREDB));			
		////tableColumn.addPropertyChangeListener(new ParametroFactuEmpresaPropertyChangeListener());
								
		tableColumn=this.jInternalFrameOrderByParametroFactuEmpresa.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderByParametroFactuEmpresa.getjTableDatosOrderBy(),OrderBy.ESDESC));
		//tableColumn.addPropertyChangeListener(new ParametroFactuEmpresaPropertyChangeListener());
												
		tableColumn.setPreferredWidth(50); 	 
		tableColumn.setWidth(50); 	 
		tableColumn.setMinWidth(50);
		tableColumn.setMaxWidth(50);
				
		((AbstractTableModel) this.jInternalFrameOrderByParametroFactuEmpresa.getjTableDatosOrderBy().getModel()).fireTableDataChanged();
				
		iWidthTableDefinicionOrderBy+=50;
	}
	
	
	
	public void inicializarActualizarBindingTablaParametroFactuEmpresa(Boolean esInicializar) throws Exception {
		Boolean isNoExiste=false;
		Integer iCountNumeroColumnasNormal=0;
		Integer iCountNumeroColumnasFk=0;
		
		this.iWidthTableDefinicion=0;
		
		int iSizeTabla=0;
		
		iSizeTabla=this.getSizeTablaDatos();
		
	if(esInicializar || ConstantesSwing.FORZAR_INICIALIZAR_TABLA) {//esInicializar
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			isNoExiste=parametrofactuempresaLogic.getParametroFactuEmpresas().size()==0;
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			isNoExiste=parametrofactuempresas.size()==0;
		}
		//ARCHITECTURE
			
		if(isNoExiste) {
			if(this.iNumeroPaginacion-this.iNumeroPaginacion>0) {
				this.iNumeroPaginacion-=this.iNumeroPaginacion;
			}
		}
		
		TableColumn tableColumn=new TableColumn();
		
		if(ParametroFactuEmpresaJInternalFrame.ISBINDING_MANUAL_TABLA) {
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.jTableDatosParametroFactuEmpresa.setModel(new ParametroFactuEmpresaModel(this.parametrofactuempresaLogic.getParametroFactuEmpresas(),this));
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.jTableDatosParametroFactuEmpresa.setModel(new ParametroFactuEmpresaModel(this.parametrofactuempresas,this));
			}
			//ARCHITECTURE
			
							
			
			
			if(this.jInternalFrameOrderByParametroFactuEmpresa!=null && this.jInternalFrameOrderByParametroFactuEmpresa.getjTableDatosOrderBy()!=null) {
				this.inicializarActualizarBindingTablaOrderByParametroFactuEmpresa();
			}
			
								
			//DEFINIR RENDERERS
			tableColumn=this.jTableDatosParametroFactuEmpresa.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroFactuEmpresa,Constantes2.S_SELECCIONAR));
			//tableColumn.addPropertyChangeListener(new ParametroFactuEmpresaPropertyChangeListener());
			tableColumn.setCellRenderer(new BooleanRenderer(true,"Seleccionar "+ParametroFactuEmpresaConstantesFunciones.SCLASSWEBTITULO,parametrofactuempresaConstantesFunciones.resaltarSeleccionarParametroFactuEmpresa,iSizeTabla,true,false,"","",this));
			tableColumn.setCellEditor(new BooleanEditorRenderer(true,"Seleccionar "+ParametroFactuEmpresaConstantesFunciones.SCLASSWEBTITULO,parametrofactuempresaConstantesFunciones.resaltarSeleccionarParametroFactuEmpresa,false,"","",this));			
			
			tableColumn.setPreferredWidth(50); 	 
			tableColumn.setWidth(50); 	 
			tableColumn.setMinWidth(50); 
			tableColumn.setMaxWidth(50); 
			
			this.iWidthTableDefinicion+=50;
			
			


			tableColumn=this.jTableDatosParametroFactuEmpresa.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroFactuEmpresa,ParametroFactuEmpresaConstantesFunciones.LABEL_ID));

		if(this.parametrofactuempresaConstantesFunciones.mostraridParametroFactuEmpresa && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroFactuEmpresaConstantesFunciones.LABEL_ID,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.parametrofactuempresaConstantesFunciones.resaltaridParametroFactuEmpresa,this.parametrofactuempresaConstantesFunciones.activaridParametroFactuEmpresa,iSizeTabla,this,true,"idParametroFactuEmpresa","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.parametrofactuempresaConstantesFunciones.resaltaridParametroFactuEmpresa,this.parametrofactuempresaConstantesFunciones.activaridParametroFactuEmpresa,this,true,"idParametroFactuEmpresa","BASICO",false));

			tableColumn.setPreferredWidth(50);
			tableColumn.setWidth(50);
			tableColumn.setMinWidth(50);
			tableColumn.setMaxWidth(50);

			this.iWidthTableDefinicion+=50;
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroFactuEmpresa.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroFactuEmpresa,ParametroFactuEmpresaConstantesFunciones.LABEL_IDEMPRESA));

		if(this.parametrofactuempresaConstantesFunciones.mostrarid_empresaParametroFactuEmpresa && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroFactuEmpresaConstantesFunciones.LABEL_IDEMPRESA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new EmpresaTableCell(this.empresasForeignKey,this.parametrofactuempresaConstantesFunciones.resaltarid_empresaParametroFactuEmpresa,this,this.parametrofactuempresaConstantesFunciones.activarid_empresaParametroFactuEmpresa,iSizeTabla));
			tableColumn.setCellEditor(new EmpresaTableCell(this.empresasForeignKey,this.parametrofactuempresaConstantesFunciones.resaltarid_empresaParametroFactuEmpresa,this,this.parametrofactuempresaConstantesFunciones.activarid_empresaParametroFactuEmpresa,false,"id_empresaParametroFactuEmpresa","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ParametroFactuEmpresaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroFactuEmpresa.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroFactuEmpresa,ParametroFactuEmpresaConstantesFunciones.LABEL_IDEMPRESAORIGEN));

		if(this.parametrofactuempresaConstantesFunciones.mostrarid_empresa_origenParametroFactuEmpresa && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroFactuEmpresaConstantesFunciones.LABEL_IDEMPRESAORIGEN,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new EmpresaTableCell(this.empresaorigensForeignKey,this.parametrofactuempresaConstantesFunciones.resaltarid_empresa_origenParametroFactuEmpresa,this,this.parametrofactuempresaConstantesFunciones.activarid_empresa_origenParametroFactuEmpresa,iSizeTabla));
			tableColumn.setCellEditor(new EmpresaTableCell(this.empresaorigensForeignKey,this.parametrofactuempresaConstantesFunciones.resaltarid_empresa_origenParametroFactuEmpresa,this,this.parametrofactuempresaConstantesFunciones.activarid_empresa_origenParametroFactuEmpresa,true,"id_empresa_origenParametroFactuEmpresa","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ParametroFactuEmpresaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroFactuEmpresa.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroFactuEmpresa,ParametroFactuEmpresaConstantesFunciones.LABEL_IDSUCURSAL));

		if(this.parametrofactuempresaConstantesFunciones.mostrarid_sucursalParametroFactuEmpresa && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroFactuEmpresaConstantesFunciones.LABEL_IDSUCURSAL,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new SucursalTableCell(this.sucursalsForeignKey,this.parametrofactuempresaConstantesFunciones.resaltarid_sucursalParametroFactuEmpresa,this,this.parametrofactuempresaConstantesFunciones.activarid_sucursalParametroFactuEmpresa,iSizeTabla));
			tableColumn.setCellEditor(new SucursalTableCell(this.sucursalsForeignKey,this.parametrofactuempresaConstantesFunciones.resaltarid_sucursalParametroFactuEmpresa,this,this.parametrofactuempresaConstantesFunciones.activarid_sucursalParametroFactuEmpresa,true,"id_sucursalParametroFactuEmpresa","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ParametroFactuEmpresaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroFactuEmpresa.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroFactuEmpresa,ParametroFactuEmpresaConstantesFunciones.LABEL_IDTRANSACCIONORIGEN));

		if(this.parametrofactuempresaConstantesFunciones.mostrarid_transaccion_origenParametroFactuEmpresa && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroFactuEmpresaConstantesFunciones.LABEL_IDTRANSACCIONORIGEN,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new TransaccionTableCell(this.transaccionorigensForeignKey,this.parametrofactuempresaConstantesFunciones.resaltarid_transaccion_origenParametroFactuEmpresa,this,this.parametrofactuempresaConstantesFunciones.activarid_transaccion_origenParametroFactuEmpresa,iSizeTabla));
			tableColumn.setCellEditor(new TransaccionTableCell(this.transaccionorigensForeignKey,this.parametrofactuempresaConstantesFunciones.resaltarid_transaccion_origenParametroFactuEmpresa,this,this.parametrofactuempresaConstantesFunciones.activarid_transaccion_origenParametroFactuEmpresa,true,"id_transaccion_origenParametroFactuEmpresa","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50);
			//tableColumn.addPropertyChangeListener(new ParametroFactuEmpresaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroFactuEmpresa.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroFactuEmpresa,ParametroFactuEmpresaConstantesFunciones.LABEL_IDBODEGAORIGEN));

		if(this.parametrofactuempresaConstantesFunciones.mostrarid_bodega_origenParametroFactuEmpresa && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroFactuEmpresaConstantesFunciones.LABEL_IDBODEGAORIGEN,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new BodegaTableCell(this.bodegaorigensForeignKey,this.parametrofactuempresaConstantesFunciones.resaltarid_bodega_origenParametroFactuEmpresa,this,this.parametrofactuempresaConstantesFunciones.activarid_bodega_origenParametroFactuEmpresa,iSizeTabla));
			tableColumn.setCellEditor(new BodegaTableCell(this.bodegaorigensForeignKey,this.parametrofactuempresaConstantesFunciones.resaltarid_bodega_origenParametroFactuEmpresa,this,this.parametrofactuempresaConstantesFunciones.activarid_bodega_origenParametroFactuEmpresa,true,"id_bodega_origenParametroFactuEmpresa","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75);
			//tableColumn.addPropertyChangeListener(new ParametroFactuEmpresaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroFactuEmpresa.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroFactuEmpresa,ParametroFactuEmpresaConstantesFunciones.LABEL_IDCLIENTEORIGEN));

		if(this.parametrofactuempresaConstantesFunciones.mostrarid_cliente_origenParametroFactuEmpresa && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroFactuEmpresaConstantesFunciones.LABEL_IDCLIENTEORIGEN,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new ClienteTableCell(this.clienteorigensForeignKey,this.parametrofactuempresaConstantesFunciones.resaltarid_cliente_origenParametroFactuEmpresa,this,this.parametrofactuempresaConstantesFunciones.activarid_cliente_origenParametroFactuEmpresa,iSizeTabla));
			tableColumn.setCellEditor(new ClienteTableCell(this.clienteorigensForeignKey,this.parametrofactuempresaConstantesFunciones.resaltarid_cliente_origenParametroFactuEmpresa,this,this.parametrofactuempresaConstantesFunciones.activarid_cliente_origenParametroFactuEmpresa,true,"id_cliente_origenParametroFactuEmpresa","CON_BUSQUEDA"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75);
			//tableColumn.addPropertyChangeListener(new ParametroFactuEmpresaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroFactuEmpresa.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroFactuEmpresa,ParametroFactuEmpresaConstantesFunciones.LABEL_COSTOORIGEN));

		if(this.parametrofactuempresaConstantesFunciones.mostrarcosto_origenParametroFactuEmpresa && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroFactuEmpresaConstantesFunciones.LABEL_COSTOORIGEN,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.parametrofactuempresaConstantesFunciones.resaltarcosto_origenParametroFactuEmpresa,this.parametrofactuempresaConstantesFunciones.activarcosto_origenParametroFactuEmpresa,iSizeTabla,this,true,"costo_origenParametroFactuEmpresa","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.parametrofactuempresaConstantesFunciones.resaltarcosto_origenParametroFactuEmpresa,this.parametrofactuempresaConstantesFunciones.activarcosto_origenParametroFactuEmpresa,this,true,"costo_origenParametroFactuEmpresa","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new ParametroFactuEmpresaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroFactuEmpresa.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroFactuEmpresa,ParametroFactuEmpresaConstantesFunciones.LABEL_IDEMPRESADESTINO));

		if(this.parametrofactuempresaConstantesFunciones.mostrarid_empresa_destinoParametroFactuEmpresa && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroFactuEmpresaConstantesFunciones.LABEL_IDEMPRESADESTINO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new EmpresaTableCell(this.empresadestinosForeignKey,this.parametrofactuempresaConstantesFunciones.resaltarid_empresa_destinoParametroFactuEmpresa,this,this.parametrofactuempresaConstantesFunciones.activarid_empresa_destinoParametroFactuEmpresa,iSizeTabla));
			tableColumn.setCellEditor(new EmpresaTableCell(this.empresadestinosForeignKey,this.parametrofactuempresaConstantesFunciones.resaltarid_empresa_destinoParametroFactuEmpresa,this,this.parametrofactuempresaConstantesFunciones.activarid_empresa_destinoParametroFactuEmpresa,true,"id_empresa_destinoParametroFactuEmpresa","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ParametroFactuEmpresaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroFactuEmpresa.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroFactuEmpresa,ParametroFactuEmpresaConstantesFunciones.LABEL_IDSUCURSALDESTINO));

		if(this.parametrofactuempresaConstantesFunciones.mostrarid_sucursal_destinoParametroFactuEmpresa && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroFactuEmpresaConstantesFunciones.LABEL_IDSUCURSALDESTINO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new SucursalTableCell(this.sucursaldestinosForeignKey,this.parametrofactuempresaConstantesFunciones.resaltarid_sucursal_destinoParametroFactuEmpresa,this,this.parametrofactuempresaConstantesFunciones.activarid_sucursal_destinoParametroFactuEmpresa,iSizeTabla));
			tableColumn.setCellEditor(new SucursalTableCell(this.sucursaldestinosForeignKey,this.parametrofactuempresaConstantesFunciones.resaltarid_sucursal_destinoParametroFactuEmpresa,this,this.parametrofactuempresaConstantesFunciones.activarid_sucursal_destinoParametroFactuEmpresa,true,"id_sucursal_destinoParametroFactuEmpresa","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ParametroFactuEmpresaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroFactuEmpresa.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroFactuEmpresa,ParametroFactuEmpresaConstantesFunciones.LABEL_IDTRANSACCIONDESTINO));

		if(this.parametrofactuempresaConstantesFunciones.mostrarid_transaccion_destinoParametroFactuEmpresa && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroFactuEmpresaConstantesFunciones.LABEL_IDTRANSACCIONDESTINO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new TransaccionTableCell(this.transacciondestinosForeignKey,this.parametrofactuempresaConstantesFunciones.resaltarid_transaccion_destinoParametroFactuEmpresa,this,this.parametrofactuempresaConstantesFunciones.activarid_transaccion_destinoParametroFactuEmpresa,iSizeTabla));
			tableColumn.setCellEditor(new TransaccionTableCell(this.transacciondestinosForeignKey,this.parametrofactuempresaConstantesFunciones.resaltarid_transaccion_destinoParametroFactuEmpresa,this,this.parametrofactuempresaConstantesFunciones.activarid_transaccion_destinoParametroFactuEmpresa,true,"id_transaccion_destinoParametroFactuEmpresa","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50);
			//tableColumn.addPropertyChangeListener(new ParametroFactuEmpresaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroFactuEmpresa.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroFactuEmpresa,ParametroFactuEmpresaConstantesFunciones.LABEL_IDBODEGADESTINO));

		if(this.parametrofactuempresaConstantesFunciones.mostrarid_bodega_destinoParametroFactuEmpresa && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroFactuEmpresaConstantesFunciones.LABEL_IDBODEGADESTINO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new BodegaTableCell(this.bodegadestinosForeignKey,this.parametrofactuempresaConstantesFunciones.resaltarid_bodega_destinoParametroFactuEmpresa,this,this.parametrofactuempresaConstantesFunciones.activarid_bodega_destinoParametroFactuEmpresa,iSizeTabla));
			tableColumn.setCellEditor(new BodegaTableCell(this.bodegadestinosForeignKey,this.parametrofactuempresaConstantesFunciones.resaltarid_bodega_destinoParametroFactuEmpresa,this,this.parametrofactuempresaConstantesFunciones.activarid_bodega_destinoParametroFactuEmpresa,true,"id_bodega_destinoParametroFactuEmpresa","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75);
			//tableColumn.addPropertyChangeListener(new ParametroFactuEmpresaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroFactuEmpresa.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroFactuEmpresa,ParametroFactuEmpresaConstantesFunciones.LABEL_IDCLIENTEDESTINO));

		if(this.parametrofactuempresaConstantesFunciones.mostrarid_cliente_destinoParametroFactuEmpresa && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroFactuEmpresaConstantesFunciones.LABEL_IDCLIENTEDESTINO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new ClienteTableCell(this.clientedestinosForeignKey,this.parametrofactuempresaConstantesFunciones.resaltarid_cliente_destinoParametroFactuEmpresa,this,this.parametrofactuempresaConstantesFunciones.activarid_cliente_destinoParametroFactuEmpresa,iSizeTabla));
			tableColumn.setCellEditor(new ClienteTableCell(this.clientedestinosForeignKey,this.parametrofactuempresaConstantesFunciones.resaltarid_cliente_destinoParametroFactuEmpresa,this,this.parametrofactuempresaConstantesFunciones.activarid_cliente_destinoParametroFactuEmpresa,true,"id_cliente_destinoParametroFactuEmpresa","CON_BUSQUEDA"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75);
			//tableColumn.addPropertyChangeListener(new ParametroFactuEmpresaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroFactuEmpresa.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroFactuEmpresa,ParametroFactuEmpresaConstantesFunciones.LABEL_COSTODESTINO));

		if(this.parametrofactuempresaConstantesFunciones.mostrarcosto_destinoParametroFactuEmpresa && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroFactuEmpresaConstantesFunciones.LABEL_COSTODESTINO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.parametrofactuempresaConstantesFunciones.resaltarcosto_destinoParametroFactuEmpresa,this.parametrofactuempresaConstantesFunciones.activarcosto_destinoParametroFactuEmpresa,iSizeTabla,this,true,"costo_destinoParametroFactuEmpresa","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.parametrofactuempresaConstantesFunciones.resaltarcosto_destinoParametroFactuEmpresa,this.parametrofactuempresaConstantesFunciones.activarcosto_destinoParametroFactuEmpresa,this,true,"costo_destinoParametroFactuEmpresa","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new ParametroFactuEmpresaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroFactuEmpresa.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroFactuEmpresa,ParametroFactuEmpresaConstantesFunciones.LABEL_CONTRANSFERENCIA));

		if(this.parametrofactuempresaConstantesFunciones.mostrarcon_transferenciaParametroFactuEmpresa && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroFactuEmpresaConstantesFunciones.LABEL_CONTRANSFERENCIA,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new BooleanRenderer(this.parametrofactuempresaConstantesFunciones.resaltarcon_transferenciaParametroFactuEmpresa,this.parametrofactuempresaConstantesFunciones.activarcon_transferenciaParametroFactuEmpresa,iSizeTabla));
			tableColumn.setCellEditor(new BooleanEditorRenderer(this.parametrofactuempresaConstantesFunciones.resaltarcon_transferenciaParametroFactuEmpresa,this.parametrofactuempresaConstantesFunciones.activarcon_transferenciaParametroFactuEmpresa,this,true,"con_transferenciaParametroFactuEmpresa","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new ParametroFactuEmpresaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroFactuEmpresa.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroFactuEmpresa,ParametroFactuEmpresaConstantesFunciones.LABEL_IDEMPRESAMULTIDESTINO));

		if(this.parametrofactuempresaConstantesFunciones.mostrarid_empresa_multi_destinoParametroFactuEmpresa && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroFactuEmpresaConstantesFunciones.LABEL_IDEMPRESAMULTIDESTINO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new EmpresaTableCell(this.empresamultidestinosForeignKey,this.parametrofactuempresaConstantesFunciones.resaltarid_empresa_multi_destinoParametroFactuEmpresa,this,this.parametrofactuempresaConstantesFunciones.activarid_empresa_multi_destinoParametroFactuEmpresa,iSizeTabla));
			tableColumn.setCellEditor(new EmpresaTableCell(this.empresamultidestinosForeignKey,this.parametrofactuempresaConstantesFunciones.resaltarid_empresa_multi_destinoParametroFactuEmpresa,this,this.parametrofactuempresaConstantesFunciones.activarid_empresa_multi_destinoParametroFactuEmpresa,true,"id_empresa_multi_destinoParametroFactuEmpresa","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ParametroFactuEmpresaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroFactuEmpresa.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroFactuEmpresa,ParametroFactuEmpresaConstantesFunciones.LABEL_IDSUCURSALMULTIDESTINO));

		if(this.parametrofactuempresaConstantesFunciones.mostrarid_sucursal_multi_destinoParametroFactuEmpresa && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroFactuEmpresaConstantesFunciones.LABEL_IDSUCURSALMULTIDESTINO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new SucursalTableCell(this.sucursalmultidestinosForeignKey,this.parametrofactuempresaConstantesFunciones.resaltarid_sucursal_multi_destinoParametroFactuEmpresa,this,this.parametrofactuempresaConstantesFunciones.activarid_sucursal_multi_destinoParametroFactuEmpresa,iSizeTabla));
			tableColumn.setCellEditor(new SucursalTableCell(this.sucursalmultidestinosForeignKey,this.parametrofactuempresaConstantesFunciones.resaltarid_sucursal_multi_destinoParametroFactuEmpresa,this,this.parametrofactuempresaConstantesFunciones.activarid_sucursal_multi_destinoParametroFactuEmpresa,true,"id_sucursal_multi_destinoParametroFactuEmpresa","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ParametroFactuEmpresaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroFactuEmpresa.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroFactuEmpresa,ParametroFactuEmpresaConstantesFunciones.LABEL_IDTRANSACCIONMULTIDESTINO));

		if(this.parametrofactuempresaConstantesFunciones.mostrarid_transaccion_multi_destinoParametroFactuEmpresa && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroFactuEmpresaConstantesFunciones.LABEL_IDTRANSACCIONMULTIDESTINO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new TransaccionTableCell(this.transaccionmultidestinosForeignKey,this.parametrofactuempresaConstantesFunciones.resaltarid_transaccion_multi_destinoParametroFactuEmpresa,this,this.parametrofactuempresaConstantesFunciones.activarid_transaccion_multi_destinoParametroFactuEmpresa,iSizeTabla));
			tableColumn.setCellEditor(new TransaccionTableCell(this.transaccionmultidestinosForeignKey,this.parametrofactuempresaConstantesFunciones.resaltarid_transaccion_multi_destinoParametroFactuEmpresa,this,this.parametrofactuempresaConstantesFunciones.activarid_transaccion_multi_destinoParametroFactuEmpresa,true,"id_transaccion_multi_destinoParametroFactuEmpresa","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50);
			//tableColumn.addPropertyChangeListener(new ParametroFactuEmpresaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroFactuEmpresa.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroFactuEmpresa,ParametroFactuEmpresaConstantesFunciones.LABEL_IDBODEGAMULTIORIGEN));

		if(this.parametrofactuempresaConstantesFunciones.mostrarid_bodega_multi_origenParametroFactuEmpresa && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroFactuEmpresaConstantesFunciones.LABEL_IDBODEGAMULTIORIGEN,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new BodegaTableCell(this.bodegamultiorigensForeignKey,this.parametrofactuempresaConstantesFunciones.resaltarid_bodega_multi_origenParametroFactuEmpresa,this,this.parametrofactuempresaConstantesFunciones.activarid_bodega_multi_origenParametroFactuEmpresa,iSizeTabla));
			tableColumn.setCellEditor(new BodegaTableCell(this.bodegamultiorigensForeignKey,this.parametrofactuempresaConstantesFunciones.resaltarid_bodega_multi_origenParametroFactuEmpresa,this,this.parametrofactuempresaConstantesFunciones.activarid_bodega_multi_origenParametroFactuEmpresa,true,"id_bodega_multi_origenParametroFactuEmpresa","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75);
			//tableColumn.addPropertyChangeListener(new ParametroFactuEmpresaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroFactuEmpresa.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroFactuEmpresa,ParametroFactuEmpresaConstantesFunciones.LABEL_IDBODEGAMULTIDESTINO));

		if(this.parametrofactuempresaConstantesFunciones.mostrarid_bodega_multi_destinoParametroFactuEmpresa && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroFactuEmpresaConstantesFunciones.LABEL_IDBODEGAMULTIDESTINO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new BodegaTableCell(this.bodegamultidestinosForeignKey,this.parametrofactuempresaConstantesFunciones.resaltarid_bodega_multi_destinoParametroFactuEmpresa,this,this.parametrofactuempresaConstantesFunciones.activarid_bodega_multi_destinoParametroFactuEmpresa,iSizeTabla));
			tableColumn.setCellEditor(new BodegaTableCell(this.bodegamultidestinosForeignKey,this.parametrofactuempresaConstantesFunciones.resaltarid_bodega_multi_destinoParametroFactuEmpresa,this,this.parametrofactuempresaConstantesFunciones.activarid_bodega_multi_destinoParametroFactuEmpresa,true,"id_bodega_multi_destinoParametroFactuEmpresa","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75);
			//tableColumn.addPropertyChangeListener(new ParametroFactuEmpresaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}
			
		} else {
		}			
					
		if(!this.parametrofactuempresaSessionBean.getEsGuardarRelacionado()
			&& !this.esParaBusquedaForeignKey) {
			
		}
		
		if(true) {
			String sLabelColumnAccion="Editar";
			String sLabelColumnAccionEli="Eli";
			
			if(this.esParaBusquedaForeignKey)  {
				sLabelColumnAccion="Seleccionar";
				
				//LO MISMO QUE ELSE
				tableColumn= new TableColumn();
				tableColumn.setIdentifier(sLabelColumnAccion);
				tableColumn.setHeaderValue(sLabelColumnAccion);
				tableColumn.setCellRenderer(new IdTableCell(this,false,false,this.parametrofactuempresaSessionBean.getEsGuardarRelacionado(),iSizeTabla));
				tableColumn.setCellEditor(new IdTableCell(this,false,false,this.parametrofactuempresaSessionBean.getEsGuardarRelacionado(),iSizeTabla));
	
				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				
				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
				
				this.jTableDatosParametroFactuEmpresa.addColumn(tableColumn);
			
			} else {				
				
				//LO MISMO QUE IF
				
				tableColumn= new TableColumn();
				tableColumn.setIdentifier(sLabelColumnAccion);
				tableColumn.setHeaderValue(sLabelColumnAccion);
				tableColumn.setCellRenderer(new IdTableCell(this,false,false,this.parametrofactuempresaSessionBean.getEsGuardarRelacionado(),iSizeTabla));
				tableColumn.setCellEditor(new IdTableCell(this,false,false,this.parametrofactuempresaSessionBean.getEsGuardarRelacionado(),iSizeTabla));
		
				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				
				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
				
				this.jTableDatosParametroFactuEmpresa.addColumn(tableColumn);				
					
				//ELIMINAR
				if(this.isPermisoEliminarParametroFactuEmpresa && this.isPermisoGuardarCambiosParametroFactuEmpresa) {
					tableColumn= new TableColumn();
					tableColumn.setIdentifier(Constantes2.S_ELI);
					tableColumn.setHeaderValue(sLabelColumnAccionEli);
					tableColumn.setCellRenderer(new IdTableCell(this,false,true,this.parametrofactuempresaSessionBean.getEsGuardarRelacionado(),iSizeTabla));
					tableColumn.setCellEditor(new IdTableCell(this,false,true,this.parametrofactuempresaSessionBean.getEsGuardarRelacionado(),iSizeTabla));
			
					tableColumn.setPreferredWidth(65); 	 
					tableColumn.setWidth(65); 	 
					tableColumn.setMinWidth(65); 
					tableColumn.setMaxWidth(65);
					
					this.iWidthTableDefinicion+=65;
						
					this.jTableDatosParametroFactuEmpresa.addColumn(tableColumn);
				}
			}			
						
			
			/*
			tableColumn= new TableColumn();
			tableColumn.setIdentifier(Constantes2.S_SELECCIONAR);
			tableColumn.setHeaderValue(Constantes2.S_SELECCIONAR);
			tableColumn.setCellRenderer(new IdSeleccionarTableCell(this));
			tableColumn.setCellEditor(new IdSeleccionarTableCell(this));
			
			tableColumn.setPreferredWidth(30); 	 
			tableColumn.setWidth(30); 	 
			tableColumn.setMinWidth(30); 
			
			this.iWidthTableDefinicion+=30;
			
			this.jTableDatosParametroFactuEmpresa.addColumn(tableColumn);
			*/
		}
		
		Integer iUltimaColumna=0;//1
		Integer iNuevaPosicionColumna=0;
		
		
		//PERMITE ELIMINAR SIMPLE
		if(!this.esParaBusquedaForeignKey)  {
			if(this.isPermisoEliminarParametroFactuEmpresa && this.isPermisoGuardarCambiosParametroFactuEmpresa) {
				iUltimaColumna++;
			}	
		}
		
		//PERMITE EDITAR SIMPLE
		iUltimaColumna++;	
		
				
		
		//MOVIA SELECCIONAR
		//iUltimaColumna++;
		
		if(!this.esParaBusquedaForeignKey)  {
			if(this.isPermisoEliminarParametroFactuEmpresa && this.isPermisoGuardarCambiosParametroFactuEmpresa) {
				//REUBICA ELIMINAR SIMPLE
				jTableDatosParametroFactuEmpresa.moveColumn(this.jTableDatosParametroFactuEmpresa.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1,-2 o -3
					
				iUltimaColumna--;
			}
		}
		//REUBICA EDITAR SIMPLE
		jTableDatosParametroFactuEmpresa.moveColumn(this.jTableDatosParametroFactuEmpresa.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1,-2 o -3				
		
		
		
		
		//REUBICABA SELECCIONAR
		/*
		if(iUltimaColumna>1) {
			iUltimaColumna--;
		}
		
		//iNuevaPosicionColumna++;
			
		//REUBICA SELECCIONAR FILA CHECK
		jTableDatosParametroFactuEmpresa.moveColumn(this.jTableDatosParametroFactuEmpresa.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1		
		*/
		
		//DEFINEN HEADERS
		final TableCellRenderer tableHeaderDefaultCellRenderer = this.jTableDatosParametroFactuEmpresa.getTableHeader().getDefaultRenderer();
		
		this.jTableDatosParametroFactuEmpresa.getTableHeader().setDefaultRenderer(new TableCellRendererHeader(this.jTableDatosParametroFactuEmpresa,tableHeaderDefaultCellRenderer));
	    
		TableColumn column=null;
		
		if(!ParametroFactuEmpresaJInternalFrame.ISBINDING_MANUAL_TABLA) {
			for(int i = 0; i < this.jTableDatosParametroFactuEmpresa.getColumnModel().getColumnCount(); i++) { 
				column = this.jTableDatosParametroFactuEmpresa.getColumnModel().getColumn(i); 
				
				if(column.getIdentifier()!=null) {
					//SI SE UTILIZA UN HEADER ES GENERICO
					//column.setHeaderRenderer(new HeaderRenderer(column.getIdentifier().toString()));
				}
				
				if(column.getIdentifier()!=null && column.getIdentifier().equals(Constantes2.S_ELI)) {
					continue;
				}
				
				if(column.getIdentifier()!=null && column.getIdentifier().equals(Constantes2.S_SELECCIONAR)) {
					if(!ParametroFactuEmpresaJInternalFrame.ISBINDING_MANUAL_TABLA) {
						column.setPreferredWidth(50); 	 
						column.setWidth(50); 	 
						column.setMinWidth(50); 	
						column.setMaxWidth(50); 
						
						this.iWidthTableDefinicion+=50;
					}
					
				} else {
					if(!ParametroFactuEmpresaJInternalFrame.ISBINDING_MANUAL_TABLA) {
						column.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
						column.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
						column.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 	
						column.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 	
						
						this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
					}
				}
			}
		}
		
		this.jTableDatosParametroFactuEmpresa.setSelectionBackground(FuncionesSwing.getColorSelectedBackground());
		this.jTableDatosParametroFactuEmpresa.setSelectionForeground(FuncionesSwing.getColorSelectedForeground());
		
		/*
		this.jTableDatosParametroFactuEmpresa.setDefaultRenderer(Object.class, new DefaultTableCellRenderer() {
			private static final long serialVersionUID = 1L;
			
		    @Override
		    public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
		        final Component component= super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
		        //POR DEFECTO ES MEJOR, SE PIERDE DATOS AL SELECCIONAR BLANCO LETRAS BLANCAS
				component.setBackground(row % 2 == 0 ? FuncionesSwing.getColorTextFields(Constantes2.S_FONDOCONTROL_COLOR) : Funciones2.getColorFilaTabla2()); //FuncionesSwing.getColorTextFields(Constantes2.S_FONDOCONTROL_COLOR)
				component.setForeground(Funciones2.getColorTextoFilaTabla1());
				
				try {
		        	int iSize=-999;
		        	
		        	if(conTotales) {
						//FILA TOTALES OTRO COLOR, SI TABLA NO ES UNO A UNO
			        	if(Constantes.ISUSAEJBLOGICLAYER) {
							iSize=parametrofactuempresaLogic.getParametroFactuEmpresas().size()-1;
								
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							iSize=parametrofactuempresas.size()-1;
						}
						
						if(iSize==row) {
							component.setBackground(Funciones2.getColorFilaTablaTotales());
						}
		        	}
					
					//POR EFICIENCIA NO UTILIZAR					
					//if (component instanceof JComponent) {
		            //    JComponent jcomponent = (JComponent) component;		                 		                
		        	//}				
					
				} catch (Exception e) {
					e.printStackTrace();
				}
				
		        return component;
		    }
		});
		*/
		
		//ESTA EN LA DEFINICION DE LA TABLA
		//this.jTableDatosParametroFactuEmpresa.setRowHeight(Constantes.ISWING_ALTO_FILA_TABLA);
		
		/*
		column=this.jTableDatosParametroFactuEmpresa.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSistema,Constantes2.S_SELECCIONAR));
		
		if(column!=null) {
			column.setPreferredWidth(25); 	 
			column.setWidth(25); 	 
			column.setMinWidth(25); 	
		}
		*/
			
			//CopyTableToTableTotal();
		} else {
			
			this.actualizarVisualTableDatosParametroFactuEmpresa();
			
		}
	}
	
	/*
	//COPY_TABLES
	/* FALTARIA RESOLVER:
	   1 SOLO SCROLL PARA 2 TABLAS
	   COPIA EXACTA DE COLUMNAS DE UNA TABLA A OTRA, SI SE MODIFICA TAMANIO TAMBIEN LA OTRA
	*/
	
	public void jButtonIdActionPerformed(ActionEvent evt,int rowIndex,Boolean esRelaciones,Boolean esEliminar) { 
		try {
			if(!esEliminar) {
				this.estaModoSeleccionar=true;
				
				//this.isEsNuevoParametroFactuEmpresa=false;
					
				ParametroFactuEmpresaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.SELECTED,"FORM",this.parametrofactuempresa,new Object(),this.parametrofactuempresaParameterGeneral,this.parametrofactuempresaReturnGeneral);
			
				if(this.parametrofactuempresaSessionBean.getConGuardarRelaciones()) {
					this.dStart=(double)System.currentTimeMillis();
				}
				
				if(this.jInternalFrameDetalleFormParametroFactuEmpresa==null) {
					this.inicializarFormDetalle();
				}
				
				this.inicializarInvalidValues();
				
				int intSelectedRow = 0;
				
				if(rowIndex>=0) {
					intSelectedRow=rowIndex;
					this.jTableDatosParametroFactuEmpresa.getSelectionModel().setSelectionInterval(intSelectedRow, intSelectedRow);
				} else {	
					intSelectedRow=this.jTableDatosParametroFactuEmpresa.getSelectedRow();	       
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuempresa =(ParametroFactuEmpresa) this.parametrofactuempresaLogic.getParametroFactuEmpresas().toArray()[this.jTableDatosParametroFactuEmpresa.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.parametrofactuempresa =(ParametroFactuEmpresa) this.parametrofactuempresas.toArray()[this.jTableDatosParametroFactuEmpresa.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//PUEDE SER PARA DUPLICADO O NUEVO TABLA
				
				if(this.parametrofactuempresa.getsType().equals("DUPLICADO")
				   || this.parametrofactuempresa.getsType().equals("NUEVO_GUARDAR_CAMBIOS")) {
					
					this.isEsNuevoParametroFactuEmpresa=true;
				
				} else {
					this.isEsNuevoParametroFactuEmpresa=false;	
				}
				
				//CONTROL VERSION ANTERIOR
				/*
				if(!this.parametrofactuempresaSessionBean.getEsGuardarRelacionado()) {
					if(this.parametrofactuempresa.getId()>=0 && !this.parametrofactuempresa.getIsNew()) {						
						this.isEsNuevoParametroFactuEmpresa=false;
						
					} else {
						this.isEsNuevoParametroFactuEmpresa=true;
					}
					
				} else {
					//CONTROLAR PARA RELACIONADO
				}
				*/
				
				//ESTABLECE SI ES RELACIONADO O NO 
				this.habilitarDeshabilitarTipoMantenimientoParametroFactuEmpresa(esRelaciones);						
				
				this.seleccionarParametroFactuEmpresa(evt,null,rowIndex);
				
				//SELECCIONA ACTUAL PERO AUN NO SE HA INGRESADO AL SISTEMA
				//SE DESHABILITA POR GUARDAR CAMBIOS
				/*
				if(this.parametrofactuempresa.getId()<0) {
					this.isEsNuevoParametroFactuEmpresa=true;
				}
				*/
				
				if(!this.esParaBusquedaForeignKey) {
					this.modificarParametroFactuEmpresa(evt,rowIndex,esRelaciones);
				} else {
					this.seleccionarParametroFactuEmpresa(evt,rowIndex);
				}	
				
				if(this.parametrofactuempresaSessionBean.getConGuardarRelaciones()) {
					this.dEnd=(double)System.currentTimeMillis();					
					this.dDif=this.dEnd - this.dStart;
					
					if(Constantes.ISDEVELOPING) {
						System.out.println("Tiempo(ms) Seleccion ParametroFactuEmpresa: " + this.dDif); 
					}
				}								
				
				ParametroFactuEmpresaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.SELECTED,"FORM",this.parametrofactuempresa,new Object(),this.parametrofactuempresaParameterGeneral,this.parametrofactuempresaReturnGeneral);
				
			} else {
				this.estaModoEliminarGuardarCambios=true;
				
				this.seleccionarParametroFactuEmpresa(evt,null,rowIndex);
				
				if(this.permiteMantenimiento(this.parametrofactuempresa)) {
					if(this.parametrofactuempresa.getId()>0) {
						this.parametrofactuempresa.setIsDeleted(true);
						
						this.parametrofactuempresasEliminados.add(this.parametrofactuempresa);
					}
					
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						this.parametrofactuempresaLogic.getParametroFactuEmpresas().remove(this.parametrofactuempresa);
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						this.parametrofactuempresas.remove(this.parametrofactuempresa);				
					}
					
					
					((ParametroFactuEmpresaModel) this.jTableDatosParametroFactuEmpresa.getModel()).fireTableRowsDeleted(rowIndex,rowIndex);
					
					this.actualizarFilaTotales();
					
					this.inicializarActualizarBindingTablaParametroFactuEmpresa(false);					
				}								
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException2(this, e,logger,ParametroFactuEmpresaConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoSeleccionar=false;				
			this.estaModoEliminarGuardarCambios=false;
		}
	}
	
	
	public void seleccionarParametroFactuEmpresa(ActionEvent evt,javax.swing.event.ListSelectionEvent evt2,int rowIndex) throws Exception { 
		try {
			//SI PUEDE SER NUEVO Y SELECCIONAR (PARA DUPLICAR Y NUEVO TABLA)
			//if(!this.isEsNuevoParametroFactuEmpresa) {
			
			if(this.jInternalFrameDetalleFormParametroFactuEmpresa==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
				int intSelectedRow = 0;
				
				if(rowIndex>=0) {
					intSelectedRow=rowIndex;
					this.jTableDatosParametroFactuEmpresa.getSelectionModel().setSelectionInterval(intSelectedRow, intSelectedRow);
				} else {	
					intSelectedRow=this.jTableDatosParametroFactuEmpresa.getSelectedRow();	       
				}
				
				//CUANDO SE RECARGA TABLA TAMBIEN SE SELECCIONA PERO CON -1 POR LO QUE SE NECESITA VALIDAR ANTES
				if(intSelectedRow<0) {
					return;
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuempresa =(ParametroFactuEmpresa) this.parametrofactuempresaLogic.getParametroFactuEmpresas().toArray()[this.jTableDatosParametroFactuEmpresa.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.parametrofactuempresa =(ParametroFactuEmpresa) this.parametrofactuempresas.toArray()[this.jTableDatosParametroFactuEmpresa.convertRowIndexToModel(intSelectedRow)];
				}
				
				if(ParametroFactuEmpresaJInternalFrame.ISBINDING_MANUAL_TABLA) {
					this.setVariablesObjetoActualToFormularioParametroFactuEmpresa(this.parametrofactuempresa);
				}
				
				//ARCHITECTURE
				try {
					

					//Empresa
					if(!this.parametrofactuempresaConstantesFunciones.cargarid_empresaParametroFactuEmpresa || this.parametrofactuempresaConstantesFunciones.event_dependid_empresaParametroFactuEmpresa) {
						//this.cargarCombosEmpresasForeignKeyLista(" where id="+this.parametrofactuempresa.getid_empresa());
									//this.inicializarActualizarBindingParametroFactuEmpresa(false,false);
						this.empresasForeignKey=new ArrayList<Empresa>();

						if(parametrofactuempresa.getEmpresa()!=null) {
							this.empresasForeignKey.add(parametrofactuempresa.getEmpresa());
						}

						this.addItemDefectoCombosForeignKeyEmpresa();
						this.cargarCombosFrameEmpresasForeignKey("Todos");
					}
					this.setActualEmpresaForeignKey(this.parametrofactuempresa.getid_empresa(),false,"Formulario");

					//EmpresaOrigen
					if(!this.parametrofactuempresaConstantesFunciones.cargarid_empresa_origenParametroFactuEmpresa || this.parametrofactuempresaConstantesFunciones.event_dependid_empresa_origenParametroFactuEmpresa) {
						//this.cargarCombosEmpresaOrigensForeignKeyLista(" where id="+this.parametrofactuempresa.getid_empresa_origen());
									//this.inicializarActualizarBindingParametroFactuEmpresa(false,false);
						this.empresaorigensForeignKey=new ArrayList<Empresa>();

						if(parametrofactuempresa.getEmpresaOrigen()!=null) {
							this.empresaorigensForeignKey.add(parametrofactuempresa.getEmpresaOrigen());
						}

						this.addItemDefectoCombosForeignKeyEmpresaOrigen();
						this.cargarCombosFrameEmpresaOrigensForeignKey("Todos");
					}
					this.setActualEmpresaOrigenForeignKey(this.parametrofactuempresa.getid_empresa_origen(),false,"Formulario");

					//Sucursal
					if(!this.parametrofactuempresaConstantesFunciones.cargarid_sucursalParametroFactuEmpresa || this.parametrofactuempresaConstantesFunciones.event_dependid_sucursalParametroFactuEmpresa) {
						//this.cargarCombosSucursalsForeignKeyLista(" where id="+this.parametrofactuempresa.getid_sucursal());
									//this.inicializarActualizarBindingParametroFactuEmpresa(false,false);
						this.sucursalsForeignKey=new ArrayList<Sucursal>();

						if(parametrofactuempresa.getSucursal()!=null) {
							this.sucursalsForeignKey.add(parametrofactuempresa.getSucursal());
						}

						this.addItemDefectoCombosForeignKeySucursal();
						this.cargarCombosFrameSucursalsForeignKey("Todos");
					}
					this.setActualSucursalForeignKey(this.parametrofactuempresa.getid_sucursal(),false,"Formulario");

					//TransaccionOrigen
					if(!this.parametrofactuempresaConstantesFunciones.cargarid_transaccion_origenParametroFactuEmpresa || this.parametrofactuempresaConstantesFunciones.event_dependid_transaccion_origenParametroFactuEmpresa) {
						//this.cargarCombosTransaccionOrigensForeignKeyLista(" where id="+this.parametrofactuempresa.getid_transaccion_origen());
									//this.inicializarActualizarBindingParametroFactuEmpresa(false,false);
						this.transaccionorigensForeignKey=new ArrayList<Transaccion>();

						if(parametrofactuempresa.getTransaccionOrigen()!=null) {
							this.transaccionorigensForeignKey.add(parametrofactuempresa.getTransaccionOrigen());
						}

						this.addItemDefectoCombosForeignKeyTransaccionOrigen();
						this.cargarCombosFrameTransaccionOrigensForeignKey("Todos");
					}
					this.setActualTransaccionOrigenForeignKey(this.parametrofactuempresa.getid_transaccion_origen(),false,"Formulario");

					//BodegaOrigen
					if(!this.parametrofactuempresaConstantesFunciones.cargarid_bodega_origenParametroFactuEmpresa || this.parametrofactuempresaConstantesFunciones.event_dependid_bodega_origenParametroFactuEmpresa) {
						//this.cargarCombosBodegaOrigensForeignKeyLista(" where id="+this.parametrofactuempresa.getid_bodega_origen());
									//this.inicializarActualizarBindingParametroFactuEmpresa(false,false);
						this.bodegaorigensForeignKey=new ArrayList<Bodega>();

						if(parametrofactuempresa.getBodegaOrigen()!=null) {
							this.bodegaorigensForeignKey.add(parametrofactuempresa.getBodegaOrigen());
						}

						this.addItemDefectoCombosForeignKeyBodegaOrigen();
						this.cargarCombosFrameBodegaOrigensForeignKey("Todos");
					}
					this.setActualBodegaOrigenForeignKey(this.parametrofactuempresa.getid_bodega_origen(),false,"Formulario");

					//ClienteOrigen
					if(!this.parametrofactuempresaConstantesFunciones.cargarid_cliente_origenParametroFactuEmpresa || this.parametrofactuempresaConstantesFunciones.event_dependid_cliente_origenParametroFactuEmpresa) {
						//this.cargarCombosClienteOrigensForeignKeyLista(" where id="+this.parametrofactuempresa.getid_cliente_origen());
									//this.inicializarActualizarBindingParametroFactuEmpresa(false,false);
						this.clienteorigensForeignKey=new ArrayList<Cliente>();

						if(parametrofactuempresa.getClienteOrigen()!=null) {
							this.clienteorigensForeignKey.add(parametrofactuempresa.getClienteOrigen());
						}

						this.addItemDefectoCombosForeignKeyClienteOrigen();
						this.cargarCombosFrameClienteOrigensForeignKey("Todos");
					}
					this.setActualClienteOrigenForeignKey(this.parametrofactuempresa.getid_cliente_origen(),false,"Formulario");

					//EmpresaDestino
					if(!this.parametrofactuempresaConstantesFunciones.cargarid_empresa_destinoParametroFactuEmpresa || this.parametrofactuempresaConstantesFunciones.event_dependid_empresa_destinoParametroFactuEmpresa) {
						//this.cargarCombosEmpresaDestinosForeignKeyLista(" where id="+this.parametrofactuempresa.getid_empresa_destino());
									//this.inicializarActualizarBindingParametroFactuEmpresa(false,false);
						this.empresadestinosForeignKey=new ArrayList<Empresa>();

						if(parametrofactuempresa.getEmpresaDestino()!=null) {
							this.empresadestinosForeignKey.add(parametrofactuempresa.getEmpresaDestino());
						}

						this.addItemDefectoCombosForeignKeyEmpresaDestino();
						this.cargarCombosFrameEmpresaDestinosForeignKey("Todos");
					}
					this.setActualEmpresaDestinoForeignKey(this.parametrofactuempresa.getid_empresa_destino(),false,"Formulario");

					//SucursalDestino
					if(!this.parametrofactuempresaConstantesFunciones.cargarid_sucursal_destinoParametroFactuEmpresa || this.parametrofactuempresaConstantesFunciones.event_dependid_sucursal_destinoParametroFactuEmpresa) {
						//this.cargarCombosSucursalDestinosForeignKeyLista(" where id="+this.parametrofactuempresa.getid_sucursal_destino());
									//this.inicializarActualizarBindingParametroFactuEmpresa(false,false);
						this.sucursaldestinosForeignKey=new ArrayList<Sucursal>();

						if(parametrofactuempresa.getSucursalDestino()!=null) {
							this.sucursaldestinosForeignKey.add(parametrofactuempresa.getSucursalDestino());
						}

						this.addItemDefectoCombosForeignKeySucursalDestino();
						this.cargarCombosFrameSucursalDestinosForeignKey("Todos");
					}
					this.setActualSucursalDestinoForeignKey(this.parametrofactuempresa.getid_sucursal_destino(),false,"Formulario");

					//TransaccionDestino
					if(!this.parametrofactuempresaConstantesFunciones.cargarid_transaccion_destinoParametroFactuEmpresa || this.parametrofactuempresaConstantesFunciones.event_dependid_transaccion_destinoParametroFactuEmpresa) {
						//this.cargarCombosTransaccionDestinosForeignKeyLista(" where id="+this.parametrofactuempresa.getid_transaccion_destino());
									//this.inicializarActualizarBindingParametroFactuEmpresa(false,false);
						this.transacciondestinosForeignKey=new ArrayList<Transaccion>();

						if(parametrofactuempresa.getTransaccionDestino()!=null) {
							this.transacciondestinosForeignKey.add(parametrofactuempresa.getTransaccionDestino());
						}

						this.addItemDefectoCombosForeignKeyTransaccionDestino();
						this.cargarCombosFrameTransaccionDestinosForeignKey("Todos");
					}
					this.setActualTransaccionDestinoForeignKey(this.parametrofactuempresa.getid_transaccion_destino(),false,"Formulario");

					//BodegaDestino
					if(!this.parametrofactuempresaConstantesFunciones.cargarid_bodega_destinoParametroFactuEmpresa || this.parametrofactuempresaConstantesFunciones.event_dependid_bodega_destinoParametroFactuEmpresa) {
						//this.cargarCombosBodegaDestinosForeignKeyLista(" where id="+this.parametrofactuempresa.getid_bodega_destino());
									//this.inicializarActualizarBindingParametroFactuEmpresa(false,false);
						this.bodegadestinosForeignKey=new ArrayList<Bodega>();

						if(parametrofactuempresa.getBodegaDestino()!=null) {
							this.bodegadestinosForeignKey.add(parametrofactuempresa.getBodegaDestino());
						}

						this.addItemDefectoCombosForeignKeyBodegaDestino();
						this.cargarCombosFrameBodegaDestinosForeignKey("Todos");
					}
					this.setActualBodegaDestinoForeignKey(this.parametrofactuempresa.getid_bodega_destino(),false,"Formulario");

					//ClienteDestino
					if(!this.parametrofactuempresaConstantesFunciones.cargarid_cliente_destinoParametroFactuEmpresa || this.parametrofactuempresaConstantesFunciones.event_dependid_cliente_destinoParametroFactuEmpresa) {
						//this.cargarCombosClienteDestinosForeignKeyLista(" where id="+this.parametrofactuempresa.getid_cliente_destino());
									//this.inicializarActualizarBindingParametroFactuEmpresa(false,false);
						this.clientedestinosForeignKey=new ArrayList<Cliente>();

						if(parametrofactuempresa.getClienteDestino()!=null) {
							this.clientedestinosForeignKey.add(parametrofactuempresa.getClienteDestino());
						}

						this.addItemDefectoCombosForeignKeyClienteDestino();
						this.cargarCombosFrameClienteDestinosForeignKey("Todos");
					}
					this.setActualClienteDestinoForeignKey(this.parametrofactuempresa.getid_cliente_destino(),false,"Formulario");

					//EmpresaMultiDestino
					if(!this.parametrofactuempresaConstantesFunciones.cargarid_empresa_multi_destinoParametroFactuEmpresa || this.parametrofactuempresaConstantesFunciones.event_dependid_empresa_multi_destinoParametroFactuEmpresa) {
						//this.cargarCombosEmpresaMultiDestinosForeignKeyLista(" where id="+this.parametrofactuempresa.getid_empresa_multi_destino());
									//this.inicializarActualizarBindingParametroFactuEmpresa(false,false);
						this.empresamultidestinosForeignKey=new ArrayList<Empresa>();

						if(parametrofactuempresa.getEmpresaMultiDestino()!=null) {
							this.empresamultidestinosForeignKey.add(parametrofactuempresa.getEmpresaMultiDestino());
						}

						this.addItemDefectoCombosForeignKeyEmpresaMultiDestino();
						this.cargarCombosFrameEmpresaMultiDestinosForeignKey("Todos");
					}
					this.setActualEmpresaMultiDestinoForeignKey(this.parametrofactuempresa.getid_empresa_multi_destino(),false,"Formulario");

					//SucursalMultiDestino
					if(!this.parametrofactuempresaConstantesFunciones.cargarid_sucursal_multi_destinoParametroFactuEmpresa || this.parametrofactuempresaConstantesFunciones.event_dependid_sucursal_multi_destinoParametroFactuEmpresa) {
						//this.cargarCombosSucursalMultiDestinosForeignKeyLista(" where id="+this.parametrofactuempresa.getid_sucursal_multi_destino());
									//this.inicializarActualizarBindingParametroFactuEmpresa(false,false);
						this.sucursalmultidestinosForeignKey=new ArrayList<Sucursal>();

						if(parametrofactuempresa.getSucursalMultiDestino()!=null) {
							this.sucursalmultidestinosForeignKey.add(parametrofactuempresa.getSucursalMultiDestino());
						}

						this.addItemDefectoCombosForeignKeySucursalMultiDestino();
						this.cargarCombosFrameSucursalMultiDestinosForeignKey("Todos");
					}
					this.setActualSucursalMultiDestinoForeignKey(this.parametrofactuempresa.getid_sucursal_multi_destino(),false,"Formulario");

					//TransaccionMultiDestino
					if(!this.parametrofactuempresaConstantesFunciones.cargarid_transaccion_multi_destinoParametroFactuEmpresa || this.parametrofactuempresaConstantesFunciones.event_dependid_transaccion_multi_destinoParametroFactuEmpresa) {
						//this.cargarCombosTransaccionMultiDestinosForeignKeyLista(" where id="+this.parametrofactuempresa.getid_transaccion_multi_destino());
									//this.inicializarActualizarBindingParametroFactuEmpresa(false,false);
						this.transaccionmultidestinosForeignKey=new ArrayList<Transaccion>();

						if(parametrofactuempresa.getTransaccionMultiDestino()!=null) {
							this.transaccionmultidestinosForeignKey.add(parametrofactuempresa.getTransaccionMultiDestino());
						}

						this.addItemDefectoCombosForeignKeyTransaccionMultiDestino();
						this.cargarCombosFrameTransaccionMultiDestinosForeignKey("Todos");
					}
					this.setActualTransaccionMultiDestinoForeignKey(this.parametrofactuempresa.getid_transaccion_multi_destino(),false,"Formulario");

					//BodegaMultiOrigen
					if(!this.parametrofactuempresaConstantesFunciones.cargarid_bodega_multi_origenParametroFactuEmpresa || this.parametrofactuempresaConstantesFunciones.event_dependid_bodega_multi_origenParametroFactuEmpresa) {
						//this.cargarCombosBodegaMultiOrigensForeignKeyLista(" where id="+this.parametrofactuempresa.getid_bodega_multi_origen());
									//this.inicializarActualizarBindingParametroFactuEmpresa(false,false);
						this.bodegamultiorigensForeignKey=new ArrayList<Bodega>();

						if(parametrofactuempresa.getBodegaMultiOrigen()!=null) {
							this.bodegamultiorigensForeignKey.add(parametrofactuempresa.getBodegaMultiOrigen());
						}

						this.addItemDefectoCombosForeignKeyBodegaMultiOrigen();
						this.cargarCombosFrameBodegaMultiOrigensForeignKey("Todos");
					}
					this.setActualBodegaMultiOrigenForeignKey(this.parametrofactuempresa.getid_bodega_multi_origen(),false,"Formulario");

					//BodegaMultiDestino
					if(!this.parametrofactuempresaConstantesFunciones.cargarid_bodega_multi_destinoParametroFactuEmpresa || this.parametrofactuempresaConstantesFunciones.event_dependid_bodega_multi_destinoParametroFactuEmpresa) {
						//this.cargarCombosBodegaMultiDestinosForeignKeyLista(" where id="+this.parametrofactuempresa.getid_bodega_multi_destino());
									//this.inicializarActualizarBindingParametroFactuEmpresa(false,false);
						this.bodegamultidestinosForeignKey=new ArrayList<Bodega>();

						if(parametrofactuempresa.getBodegaMultiDestino()!=null) {
							this.bodegamultidestinosForeignKey.add(parametrofactuempresa.getBodegaMultiDestino());
						}

						this.addItemDefectoCombosForeignKeyBodegaMultiDestino();
						this.cargarCombosFrameBodegaMultiDestinosForeignKey("Todos");
					}
					this.setActualBodegaMultiDestinoForeignKey(this.parametrofactuempresa.getid_bodega_multi_destino(),false,"Formulario");
				} catch(Exception e) {
					throw e;
				}
				
				this.actualizarEstadoCeldasBotonesParametroFactuEmpresa("s", this.isGuardarCambiosEnLote, this.isEsMantenimientoRelacionado);
				
				//NO FUNCIONA BINDING PERO SE MANTIENE
				this.inicializarActualizarBindingBotonesParametroFactuEmpresa(false) ;
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualParametroFactuEmpresa() ;
			//}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroFactuEmpresaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setVariablesObjetoActualToFormularioTodoParametroFactuEmpresa(ParametroFactuEmpresa parametrofactuempresa) throws Exception { 
		this.setVariablesObjetoActualToFormularioTodoParametroFactuEmpresa(parametrofactuempresa,false,"NINGUNO");
	}
	
	public void setVariablesObjetoActualToFormularioTodoParametroFactuEmpresa(ParametroFactuEmpresa parametrofactuempresa,Boolean conCargarListasDesdeObjetoActual,String sTipoEvento) throws Exception { 
		this.setVariablesObjetoActualToFormularioParametroFactuEmpresa(parametrofactuempresa);
		
		if(conCargarListasDesdeObjetoActual) {
			this.setVariablesObjetoActualToListasForeignKeyParametroFactuEmpresa(parametrofactuempresa,sTipoEvento);
		}
		
		this.setVariablesObjetoActualToFormularioForeignKeyParametroFactuEmpresa(parametrofactuempresa);
	}
	
	public void setVariablesObjetoActualToFormularioParametroFactuEmpresa(ParametroFactuEmpresa parametrofactuempresa) throws Exception { 
		try {			
			Image imageActual=null;
			ImageIcon imageIcon = null;
			
			if(this.jInternalFrameDetalleFormParametroFactuEmpresa==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			
			this.jInternalFrameDetalleFormParametroFactuEmpresa.jLabelidParametroFactuEmpresa.setText(parametrofactuempresa.getId().toString());
			this.jInternalFrameDetalleFormParametroFactuEmpresa.jTextFieldcosto_origenParametroFactuEmpresa.setText(parametrofactuempresa.getcosto_origen().toString());
			this.jInternalFrameDetalleFormParametroFactuEmpresa.jTextFieldcosto_destinoParametroFactuEmpresa.setText(parametrofactuempresa.getcosto_destino().toString());
			this.jInternalFrameDetalleFormParametroFactuEmpresa.jCheckBoxcon_transferenciaParametroFactuEmpresa.setSelected(parametrofactuempresa.getcon_transferencia());
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,ParametroFactuEmpresaConstantesFunciones.CLASSNAME);
		}
	}
		
	public void actualizarInformacion(String sTipo,ParametroFactuEmpresa parametrofactuempresaLocal) throws Exception {
		this.actualizarInformacion(sTipo,false,parametrofactuempresaLocal);
	}	
	
	public void actualizarInformacion(String sTipo,Boolean conParametroObjeto,ParametroFactuEmpresa parametrofactuempresaLocal) throws Exception {
		
		if(!conParametroObjeto) {
			if(!this.getEsControlTabla()) {
				parametrofactuempresaLocal=this.parametrofactuempresa;
			} else {
				parametrofactuempresaLocal=this.parametrofactuempresaAnterior;
			}
		}
		
		if(this.permiteMantenimiento(parametrofactuempresaLocal)) {
			if(sTipo.equals("EVENTO_CONTROL")) { // || sTipo.equals("EVENTO_NUEVO")
				if(!this.esControlTabla) {
					this.setVariablesFormularioToObjetoActualTodoParametroFactuEmpresa(parametrofactuempresaLocal,true);
					
					if(parametrofactuempresaSessionBean.getConGuardarRelaciones()) {
						this.actualizarRelaciones(parametrofactuempresaLocal);
					}
				}
			
			} else if(sTipo.equals("INFO_PADRE")) {
				
				if(this.parametrofactuempresaSessionBean.getEsGuardarRelacionado()) {
					this.actualizarRelacionFkPadreActual(parametrofactuempresaLocal);
				}
			}
		}
	}
	
	public void setVariablesFormularioToObjetoActualTodoParametroFactuEmpresa(ParametroFactuEmpresa parametrofactuempresa,Boolean conColumnasBase) throws Exception { 
		this.setVariablesFormularioToObjetoActualParametroFactuEmpresa(parametrofactuempresa,conColumnasBase);
		this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuEmpresa(parametrofactuempresa);
	}
	
	public void setVariablesFormularioToObjetoActualParametroFactuEmpresa(ParametroFactuEmpresa parametrofactuempresa,Boolean conColumnasBase) throws Exception { 
		this.setVariablesFormularioToObjetoActualParametroFactuEmpresa(parametrofactuempresa,conColumnasBase,true);
	}
	
	public void setVariablesFormularioToObjetoActualParametroFactuEmpresa(ParametroFactuEmpresa parametrofactuempresa,Boolean conColumnasBase,Boolean conInicializarInvalidValues) throws Exception { 
		String sMensajeCampoActual="";
		Boolean estaValidado=true;
		try {
			
			if(this.jInternalFrameDetalleFormParametroFactuEmpresa==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			if(conInicializarInvalidValues) {
				this.inicializarInvalidValues();
			}
			
			

		try {
			if(this.jInternalFrameDetalleFormParametroFactuEmpresa.jLabelidParametroFactuEmpresa.getText()==null || this.jInternalFrameDetalleFormParametroFactuEmpresa.jLabelidParametroFactuEmpresa.getText()=="" || this.jInternalFrameDetalleFormParametroFactuEmpresa.jLabelidParametroFactuEmpresa.getText()=="Id") {
				this.jInternalFrameDetalleFormParametroFactuEmpresa.jLabelidParametroFactuEmpresa.setText("0");
			}

			if(conColumnasBase) {parametrofactuempresa.setId(Long.parseLong(this.jInternalFrameDetalleFormParametroFactuEmpresa.jLabelidParametroFactuEmpresa.getText()));}
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ParametroFactuEmpresaConstantesFunciones.LABEL_ID+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroFactuEmpresa.jLabelIdParametroFactuEmpresa,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			parametrofactuempresa.setcosto_origen(Double.parseDouble(this.jInternalFrameDetalleFormParametroFactuEmpresa.jTextFieldcosto_origenParametroFactuEmpresa.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ParametroFactuEmpresaConstantesFunciones.LABEL_COSTOORIGEN+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroFactuEmpresa.jLabelcosto_origenParametroFactuEmpresa,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			parametrofactuempresa.setcosto_destino(Double.parseDouble(this.jInternalFrameDetalleFormParametroFactuEmpresa.jTextFieldcosto_destinoParametroFactuEmpresa.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ParametroFactuEmpresaConstantesFunciones.LABEL_COSTODESTINO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroFactuEmpresa.jLabelcosto_destinoParametroFactuEmpresa,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			parametrofactuempresa.setcon_transferencia(this.jInternalFrameDetalleFormParametroFactuEmpresa.jCheckBoxcon_transferenciaParametroFactuEmpresa.isSelected());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ParametroFactuEmpresaConstantesFunciones.LABEL_CONTRANSFERENCIA+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroFactuEmpresa.jLabelcon_transferenciaParametroFactuEmpresa,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}
			
			if(!estaValidado) {
				throw new Exception(sMensajeCampoActual);
			}
		} catch(NumberFormatException e) {
			throw new Exception(sMensajeCampoActual);
			//FuncionesSwing.manageException(this, e,logger,MovimientoInventarioConstantesFunciones.CLASSNAME);
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,ParametroFactuEmpresaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setVariablesForeignKeyObjetoBeanDefectoActualToObjetoActualParametroFactuEmpresa(ParametroFactuEmpresa parametrofactuempresaBean,ParametroFactuEmpresa parametrofactuempresa,Boolean conDefault,Boolean conColumnasBase) throws Exception { 
		try {
			
			if(conDefault || (!conDefault && parametrofactuempresaBean.getid_empresa_origen()!=null && !parametrofactuempresaBean.getid_empresa_origen().equals(-1L))) {parametrofactuempresa.setid_empresa_origen(parametrofactuempresaBean.getid_empresa_origen());}
			if(conDefault || (!conDefault && parametrofactuempresaBean.getid_sucursal()!=null && !parametrofactuempresaBean.getid_sucursal().equals(-1L))) {parametrofactuempresa.setid_sucursal(parametrofactuempresaBean.getid_sucursal());}
			if(conDefault || (!conDefault && parametrofactuempresaBean.getid_transaccion_origen()!=null && !parametrofactuempresaBean.getid_transaccion_origen().equals(-1L))) {parametrofactuempresa.setid_transaccion_origen(parametrofactuempresaBean.getid_transaccion_origen());}
			if(conDefault || (!conDefault && parametrofactuempresaBean.getid_bodega_origen()!=null && !parametrofactuempresaBean.getid_bodega_origen().equals(-1L))) {parametrofactuempresa.setid_bodega_origen(parametrofactuempresaBean.getid_bodega_origen());}
			if(conDefault || (!conDefault && parametrofactuempresaBean.getid_cliente_origen()!=null && !parametrofactuempresaBean.getid_cliente_origen().equals(-1L))) {parametrofactuempresa.setid_cliente_origen(parametrofactuempresaBean.getid_cliente_origen());}
			if(conDefault || (!conDefault && parametrofactuempresaBean.getid_empresa_destino()!=null && !parametrofactuempresaBean.getid_empresa_destino().equals(-1L))) {parametrofactuempresa.setid_empresa_destino(parametrofactuempresaBean.getid_empresa_destino());}
			if(conDefault || (!conDefault && parametrofactuempresaBean.getid_sucursal_destino()!=null && !parametrofactuempresaBean.getid_sucursal_destino().equals(-1L))) {parametrofactuempresa.setid_sucursal_destino(parametrofactuempresaBean.getid_sucursal_destino());}
			if(conDefault || (!conDefault && parametrofactuempresaBean.getid_transaccion_destino()!=null && !parametrofactuempresaBean.getid_transaccion_destino().equals(-1L))) {parametrofactuempresa.setid_transaccion_destino(parametrofactuempresaBean.getid_transaccion_destino());}
			if(conDefault || (!conDefault && parametrofactuempresaBean.getid_bodega_destino()!=null && !parametrofactuempresaBean.getid_bodega_destino().equals(-1L))) {parametrofactuempresa.setid_bodega_destino(parametrofactuempresaBean.getid_bodega_destino());}
			if(conDefault || (!conDefault && parametrofactuempresaBean.getid_cliente_destino()!=null && !parametrofactuempresaBean.getid_cliente_destino().equals(-1L))) {parametrofactuempresa.setid_cliente_destino(parametrofactuempresaBean.getid_cliente_destino());}
			if(conDefault || (!conDefault && parametrofactuempresaBean.getid_empresa_multi_destino()!=null && !parametrofactuempresaBean.getid_empresa_multi_destino().equals(-1L))) {parametrofactuempresa.setid_empresa_multi_destino(parametrofactuempresaBean.getid_empresa_multi_destino());}
			if(conDefault || (!conDefault && parametrofactuempresaBean.getid_sucursal_multi_destino()!=null && !parametrofactuempresaBean.getid_sucursal_multi_destino().equals(-1L))) {parametrofactuempresa.setid_sucursal_multi_destino(parametrofactuempresaBean.getid_sucursal_multi_destino());}
			if(conDefault || (!conDefault && parametrofactuempresaBean.getid_transaccion_multi_destino()!=null && !parametrofactuempresaBean.getid_transaccion_multi_destino().equals(-1L))) {parametrofactuempresa.setid_transaccion_multi_destino(parametrofactuempresaBean.getid_transaccion_multi_destino());}
			if(conDefault || (!conDefault && parametrofactuempresaBean.getid_bodega_multi_origen()!=null && !parametrofactuempresaBean.getid_bodega_multi_origen().equals(-1L))) {parametrofactuempresa.setid_bodega_multi_origen(parametrofactuempresaBean.getid_bodega_multi_origen());}
			if(conDefault || (!conDefault && parametrofactuempresaBean.getid_bodega_multi_destino()!=null && !parametrofactuempresaBean.getid_bodega_multi_destino().equals(-1L))) {parametrofactuempresa.setid_bodega_multi_destino(parametrofactuempresaBean.getid_bodega_multi_destino());}
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,ParametroFactuEmpresaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setCopiarVariablesObjetosParametroFactuEmpresa(ParametroFactuEmpresa parametrofactuempresaOrigen,ParametroFactuEmpresa parametrofactuempresa,Boolean conDefault,Boolean conColumnasBase) throws Exception { 
		try {
			
			if(conColumnasBase) {if(conDefault || (!conDefault && parametrofactuempresaOrigen.getId()!=null && !parametrofactuempresaOrigen.getId().equals(0L))) {parametrofactuempresa.setId(parametrofactuempresaOrigen.getId());}}
			if(conDefault || (!conDefault && parametrofactuempresaOrigen.getid_empresa_origen()!=null && !parametrofactuempresaOrigen.getid_empresa_origen().equals(-1L))) {parametrofactuempresa.setid_empresa_origen(parametrofactuempresaOrigen.getid_empresa_origen());}
			if(conDefault || (!conDefault && parametrofactuempresaOrigen.getid_sucursal()!=null && !parametrofactuempresaOrigen.getid_sucursal().equals(-1L))) {parametrofactuempresa.setid_sucursal(parametrofactuempresaOrigen.getid_sucursal());}
			if(conDefault || (!conDefault && parametrofactuempresaOrigen.getid_transaccion_origen()!=null && !parametrofactuempresaOrigen.getid_transaccion_origen().equals(-1L))) {parametrofactuempresa.setid_transaccion_origen(parametrofactuempresaOrigen.getid_transaccion_origen());}
			if(conDefault || (!conDefault && parametrofactuempresaOrigen.getid_bodega_origen()!=null && !parametrofactuempresaOrigen.getid_bodega_origen().equals(-1L))) {parametrofactuempresa.setid_bodega_origen(parametrofactuempresaOrigen.getid_bodega_origen());}
			if(conDefault || (!conDefault && parametrofactuempresaOrigen.getid_cliente_origen()!=null && !parametrofactuempresaOrigen.getid_cliente_origen().equals(-1L))) {parametrofactuempresa.setid_cliente_origen(parametrofactuempresaOrigen.getid_cliente_origen());}
			if(conDefault || (!conDefault && parametrofactuempresaOrigen.getcosto_origen()!=null && !parametrofactuempresaOrigen.getcosto_origen().equals(0.0))) {parametrofactuempresa.setcosto_origen(parametrofactuempresaOrigen.getcosto_origen());}
			if(conDefault || (!conDefault && parametrofactuempresaOrigen.getid_empresa_destino()!=null && !parametrofactuempresaOrigen.getid_empresa_destino().equals(-1L))) {parametrofactuempresa.setid_empresa_destino(parametrofactuempresaOrigen.getid_empresa_destino());}
			if(conDefault || (!conDefault && parametrofactuempresaOrigen.getid_sucursal_destino()!=null && !parametrofactuempresaOrigen.getid_sucursal_destino().equals(-1L))) {parametrofactuempresa.setid_sucursal_destino(parametrofactuempresaOrigen.getid_sucursal_destino());}
			if(conDefault || (!conDefault && parametrofactuempresaOrigen.getid_transaccion_destino()!=null && !parametrofactuempresaOrigen.getid_transaccion_destino().equals(-1L))) {parametrofactuempresa.setid_transaccion_destino(parametrofactuempresaOrigen.getid_transaccion_destino());}
			if(conDefault || (!conDefault && parametrofactuempresaOrigen.getid_bodega_destino()!=null && !parametrofactuempresaOrigen.getid_bodega_destino().equals(-1L))) {parametrofactuempresa.setid_bodega_destino(parametrofactuempresaOrigen.getid_bodega_destino());}
			if(conDefault || (!conDefault && parametrofactuempresaOrigen.getid_cliente_destino()!=null && !parametrofactuempresaOrigen.getid_cliente_destino().equals(-1L))) {parametrofactuempresa.setid_cliente_destino(parametrofactuempresaOrigen.getid_cliente_destino());}
			if(conDefault || (!conDefault && parametrofactuempresaOrigen.getcosto_destino()!=null && !parametrofactuempresaOrigen.getcosto_destino().equals(0.0))) {parametrofactuempresa.setcosto_destino(parametrofactuempresaOrigen.getcosto_destino());}
			if(conDefault || (!conDefault && parametrofactuempresaOrigen.getcon_transferencia()!=null && !parametrofactuempresaOrigen.getcon_transferencia().equals(false))) {parametrofactuempresa.setcon_transferencia(parametrofactuempresaOrigen.getcon_transferencia());}
			if(conDefault || (!conDefault && parametrofactuempresaOrigen.getid_empresa_multi_destino()!=null && !parametrofactuempresaOrigen.getid_empresa_multi_destino().equals(-1L))) {parametrofactuempresa.setid_empresa_multi_destino(parametrofactuempresaOrigen.getid_empresa_multi_destino());}
			if(conDefault || (!conDefault && parametrofactuempresaOrigen.getid_sucursal_multi_destino()!=null && !parametrofactuempresaOrigen.getid_sucursal_multi_destino().equals(-1L))) {parametrofactuempresa.setid_sucursal_multi_destino(parametrofactuempresaOrigen.getid_sucursal_multi_destino());}
			if(conDefault || (!conDefault && parametrofactuempresaOrigen.getid_transaccion_multi_destino()!=null && !parametrofactuempresaOrigen.getid_transaccion_multi_destino().equals(-1L))) {parametrofactuempresa.setid_transaccion_multi_destino(parametrofactuempresaOrigen.getid_transaccion_multi_destino());}
			if(conDefault || (!conDefault && parametrofactuempresaOrigen.getid_bodega_multi_origen()!=null && !parametrofactuempresaOrigen.getid_bodega_multi_origen().equals(-1L))) {parametrofactuempresa.setid_bodega_multi_origen(parametrofactuempresaOrigen.getid_bodega_multi_origen());}
			if(conDefault || (!conDefault && parametrofactuempresaOrigen.getid_bodega_multi_destino()!=null && !parametrofactuempresaOrigen.getid_bodega_multi_destino().equals(-1L))) {parametrofactuempresa.setid_bodega_multi_destino(parametrofactuempresaOrigen.getid_bodega_multi_destino());}
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,ParametroFactuEmpresaConstantesFunciones.CLASSNAME);
		}
	}
	
	/*
	public void setVariablesObjetoBeanActualToFormularioParametroFactuEmpresa(ParametroFactuEmpresa parametrofactuempresa) throws Exception { 
		try {
			
			this.jInternalFrameDetalleFormParametroFactuEmpresa.jLabelidParametroFactuEmpresa.setText(parametrofactuempresa.getId().toString());
			this.jInternalFrameDetalleFormParametroFactuEmpresa.jTextFieldcosto_origenParametroFactuEmpresa.setText(parametrofactuempresa.getcosto_origen().toString());
			this.jInternalFrameDetalleFormParametroFactuEmpresa.jTextFieldcosto_destinoParametroFactuEmpresa.setText(parametrofactuempresa.getcosto_destino().toString());
			this.jInternalFrameDetalleFormParametroFactuEmpresa.jCheckBoxcon_transferenciaParametroFactuEmpresa.setSelected(parametrofactuempresa.getcon_transferencia());
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroFactuEmpresaConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesObjetoBeanActualToFormularioParametroFactuEmpresa(ParametroFactuEmpresaBean parametrofactuempresaBean) throws Exception { 
		try {
			
			this.jInternalFrameDetalleFormParametroFactuEmpresa.jLabelidParametroFactuEmpresa.setText(parametrofactuempresaBean.getId().toString());
			this.jInternalFrameDetalleFormParametroFactuEmpresa.jTextFieldcosto_origenParametroFactuEmpresa.setText(parametrofactuempresaBean.getcosto_origen().toString());
			this.jInternalFrameDetalleFormParametroFactuEmpresa.jTextFieldcosto_destinoParametroFactuEmpresa.setText(parametrofactuempresaBean.getcosto_destino().toString());
			this.jInternalFrameDetalleFormParametroFactuEmpresa.jCheckBoxcon_transferenciaParametroFactuEmpresa.setSelected(parametrofactuempresaBean.getcon_transferencia());
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroFactuEmpresaConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesObjetoReturnGeneralToBeanParametroFactuEmpresa(ParametroFactuEmpresaParameterReturnGeneral parametrofactuempresaReturnGeneral,ParametroFactuEmpresaBean parametrofactuempresaBean,Boolean conDefault) throws Exception { 
		try {
			ParametroFactuEmpresa parametrofactuempresaLocal=new ParametroFactuEmpresa();
			
			parametrofactuempresaLocal=parametrofactuempresaReturnGeneral.getParametroFactuEmpresa();
			
			
			if(conColumnasBase) {if(conDefault || (!conDefault && parametrofactuempresaLocal.getId()!=null && !parametrofactuempresaLocal.getId().equals(0L))) {parametrofactuempresaBean.setId(parametrofactuempresaLocal.getId());}}
			if(conDefault || (!conDefault && parametrofactuempresaLocal.getid_empresa_origen()!=null && !parametrofactuempresaLocal.getid_empresa_origen().equals(-1L))) {parametrofactuempresaBean.setid_empresa_origen(parametrofactuempresaLocal.getid_empresa_origen());}
			if(conDefault || (!conDefault && parametrofactuempresaLocal.getid_sucursal()!=null && !parametrofactuempresaLocal.getid_sucursal().equals(-1L))) {parametrofactuempresaBean.setid_sucursal(parametrofactuempresaLocal.getid_sucursal());}
			if(conDefault || (!conDefault && parametrofactuempresaLocal.getid_transaccion_origen()!=null && !parametrofactuempresaLocal.getid_transaccion_origen().equals(-1L))) {parametrofactuempresaBean.setid_transaccion_origen(parametrofactuempresaLocal.getid_transaccion_origen());}
			if(conDefault || (!conDefault && parametrofactuempresaLocal.getid_bodega_origen()!=null && !parametrofactuempresaLocal.getid_bodega_origen().equals(-1L))) {parametrofactuempresaBean.setid_bodega_origen(parametrofactuempresaLocal.getid_bodega_origen());}
			if(conDefault || (!conDefault && parametrofactuempresaLocal.getid_cliente_origen()!=null && !parametrofactuempresaLocal.getid_cliente_origen().equals(-1L))) {parametrofactuempresaBean.setid_cliente_origen(parametrofactuempresaLocal.getid_cliente_origen());}
			if(conDefault || (!conDefault && parametrofactuempresaLocal.getcosto_origen()!=null && !parametrofactuempresaLocal.getcosto_origen().equals(0.0))) {parametrofactuempresaBean.setcosto_origen(parametrofactuempresaLocal.getcosto_origen());}
			if(conDefault || (!conDefault && parametrofactuempresaLocal.getid_empresa_destino()!=null && !parametrofactuempresaLocal.getid_empresa_destino().equals(-1L))) {parametrofactuempresaBean.setid_empresa_destino(parametrofactuempresaLocal.getid_empresa_destino());}
			if(conDefault || (!conDefault && parametrofactuempresaLocal.getid_sucursal_destino()!=null && !parametrofactuempresaLocal.getid_sucursal_destino().equals(-1L))) {parametrofactuempresaBean.setid_sucursal_destino(parametrofactuempresaLocal.getid_sucursal_destino());}
			if(conDefault || (!conDefault && parametrofactuempresaLocal.getid_transaccion_destino()!=null && !parametrofactuempresaLocal.getid_transaccion_destino().equals(-1L))) {parametrofactuempresaBean.setid_transaccion_destino(parametrofactuempresaLocal.getid_transaccion_destino());}
			if(conDefault || (!conDefault && parametrofactuempresaLocal.getid_bodega_destino()!=null && !parametrofactuempresaLocal.getid_bodega_destino().equals(-1L))) {parametrofactuempresaBean.setid_bodega_destino(parametrofactuempresaLocal.getid_bodega_destino());}
			if(conDefault || (!conDefault && parametrofactuempresaLocal.getid_cliente_destino()!=null && !parametrofactuempresaLocal.getid_cliente_destino().equals(-1L))) {parametrofactuempresaBean.setid_cliente_destino(parametrofactuempresaLocal.getid_cliente_destino());}
			if(conDefault || (!conDefault && parametrofactuempresaLocal.getcosto_destino()!=null && !parametrofactuempresaLocal.getcosto_destino().equals(0.0))) {parametrofactuempresaBean.setcosto_destino(parametrofactuempresaLocal.getcosto_destino());}
			if(conDefault || (!conDefault && parametrofactuempresaLocal.getcon_transferencia()!=null && !parametrofactuempresaLocal.getcon_transferencia().equals(false))) {parametrofactuempresaBean.setcon_transferencia(parametrofactuempresaLocal.getcon_transferencia());}
			if(conDefault || (!conDefault && parametrofactuempresaLocal.getid_empresa_multi_destino()!=null && !parametrofactuempresaLocal.getid_empresa_multi_destino().equals(-1L))) {parametrofactuempresaBean.setid_empresa_multi_destino(parametrofactuempresaLocal.getid_empresa_multi_destino());}
			if(conDefault || (!conDefault && parametrofactuempresaLocal.getid_sucursal_multi_destino()!=null && !parametrofactuempresaLocal.getid_sucursal_multi_destino().equals(-1L))) {parametrofactuempresaBean.setid_sucursal_multi_destino(parametrofactuempresaLocal.getid_sucursal_multi_destino());}
			if(conDefault || (!conDefault && parametrofactuempresaLocal.getid_transaccion_multi_destino()!=null && !parametrofactuempresaLocal.getid_transaccion_multi_destino().equals(-1L))) {parametrofactuempresaBean.setid_transaccion_multi_destino(parametrofactuempresaLocal.getid_transaccion_multi_destino());}
			if(conDefault || (!conDefault && parametrofactuempresaLocal.getid_bodega_multi_origen()!=null && !parametrofactuempresaLocal.getid_bodega_multi_origen().equals(-1L))) {parametrofactuempresaBean.setid_bodega_multi_origen(parametrofactuempresaLocal.getid_bodega_multi_origen());}
			if(conDefault || (!conDefault && parametrofactuempresaLocal.getid_bodega_multi_destino()!=null && !parametrofactuempresaLocal.getid_bodega_multi_destino().equals(-1L))) {parametrofactuempresaBean.setid_bodega_multi_destino(parametrofactuempresaLocal.getid_bodega_multi_destino());}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroFactuEmpresaConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	@SuppressWarnings("rawtypes")
	public static void setActualComboBoxParametroFactuEmpresaGenerico(Long idParametroFactuEmpresaSeleccionado,JComboBox jComboBoxParametroFactuEmpresa,List<ParametroFactuEmpresa> parametrofactuempresasLocal)throws Exception {
		try {
			ParametroFactuEmpresa  parametrofactuempresaTemp=null;

			for(ParametroFactuEmpresa parametrofactuempresaAux:parametrofactuempresasLocal) {
				if(parametrofactuempresaAux.getId()!=null && parametrofactuempresaAux.getId().equals(idParametroFactuEmpresaSeleccionado)) {
					parametrofactuempresaTemp=parametrofactuempresaAux;
					break;
				}
			}

			jComboBoxParametroFactuEmpresa.setSelectedItem(parametrofactuempresaTemp);

		} catch(Exception e) {
			throw e;
		}
	}
	
	@SuppressWarnings("rawtypes")
	public static void setHotKeysComboBoxParametroFactuEmpresaGenerico(JComboBox jComboBoxParametroFactuEmpresa,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda)throws Exception {
		try {
			//GLOBAL(id_empresa,id_sucursal,id_ejercicio)
			//BASICO(normal)
			//CON_BUSQUEDA(Permite buscar Fk)
			
			String sKeyStrokeName="";
			KeyStroke keyStrokeControl=null;
			
			if(!sTipoBusqueda.equals("GLOBAL")) {
				
				//BUSCAR
				sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_BUSCAR");
				keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_BUSCAR");
				
				jComboBoxParametroFactuEmpresa.getInputMap().put(keyStrokeControl, sKeyStrokeName);
				jComboBoxParametroFactuEmpresa.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction+"Busqueda"));
				//BUSCAR
				
				
				//ACTUALIZAR
				sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_ACTUALIZAR");
				keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_ACTUALIZAR");
				
				jComboBoxParametroFactuEmpresa.getInputMap().put(keyStrokeControl, sKeyStrokeName);
				jComboBoxParametroFactuEmpresa.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction+"Update"));
				//ACTUALIZAR
				
				if(sTipoBusqueda.contains("CON_EVENT_CHANGE")) {
					if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
						jComboBoxParametroFactuEmpresa.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
						jComboBoxParametroFactuEmpresa.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));						
					}
					
					/*
					if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
						jComboBoxParametroFactuEmpresa.addItemListener(new ComboBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
					} else {
						jComboBoxParametroFactuEmpresa.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
					}
					*/
				}								
				
				//CON_BUSQUEDA								
				if(sTipoBusqueda.contains("CON_BUSQUEDA")) {
					sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_BUSQUEDA");
					keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_BUSQUEDA");
							
					jComboBoxParametroFactuEmpresa.getInputMap().put(keyStrokeControl, sKeyStrokeName);
					jComboBoxParametroFactuEmpresa.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction));
				}
				//CON_BUSQUEDA
				
				
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	@SuppressWarnings("rawtypes")
	public void setHotKeysComboBoxGenerico(JComboBox jComboBox,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		if(sTipoBusqueda.contains("CON_EVENT_CHANGE")) {
			if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
				jComboBox.addItemListener(new ComboBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
				jComboBox.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
			} else {
				jComboBox.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
				jComboBox.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
			}
		}
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJTextFieldGenerico(JTextField jTextField,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jTextField.addFocusListener(new TextFieldFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		jTextField.addActionListener(new TextFieldActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJTextAreaGenerico(JTextArea jTextArea,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jTextArea.addFocusListener(new TextAreaFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//NO EXISTE
		//jTextArea.addActionListener(new TextAreaActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJLabelGenerico(JLabel jLabel,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jLabel.addFocusListener(new LabelFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//NO EXISTE
		//jLabel.addActionListener(new LabelActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJCheckBoxGenerico(JCheckBox jCheckBox,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jCheckBox.addFocusListener(new CheckBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//SI SE DEFINE AL CAMBIAR VALOR, ESTE NUEVO VALOR NO SE ENVIA AL EVENTO
		//jCheckBox.addItemListener(new CheckBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJDateChooserGenerico(JDateChooser jDateChooser,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		FuncionesSwing.addDateListener(jDateChooser, jInternalFrameBase, sNombreHotKeyAbstractAction);
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJButtonGenerico(JButton jButton,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jButton.addActionListener(new ButtonActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	public void jButtonRelacionActionPerformed(String sTipo,ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado) {
		//ABRIR RELACIONES
		try {
			
		} catch (Exception e) {
			FuncionesSwing.manageException2(this, e,logger,ParametroFactuEmpresaConstantesFunciones.CLASSNAME);
		}
	}
	
	public String getDescripcionFk(String sTipo,JTable table,Object value,int intSelectedRow) throws Exception {
		//DESCRIPCIONES FK		
		String sDescripcion="";
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			parametrofactuempresa=(ParametroFactuEmpresa) parametrofactuempresaLogic.getParametroFactuEmpresas().toArray()[table.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE) {
			parametrofactuempresa =(ParametroFactuEmpresa) parametrofactuempresas.toArray()[table.convertRowIndexToModel(intSelectedRow)];
		}
					
		
		if(sTipo.equals("Empresa")) {
			//sDescripcion=this.getActualEmpresaForeignKeyDescripcion((Long)value);
			if(!parametrofactuempresa.getIsNew() && !parametrofactuempresa.getIsChanged() && !parametrofactuempresa.getIsDeleted()) {
				sDescripcion=parametrofactuempresa.getempresa_descripcion();
			} else {
				//sDescripcion=this.getActualEmpresaForeignKeyDescripcion((Long)value);
				sDescripcion=parametrofactuempresa.getempresa_descripcion();
			}
		}

		if(sTipo.equals("EmpresaOrigen")) {
			//sDescripcion=this.getActualEmpresaOrigenForeignKeyDescripcion((Long)value);
			if(!parametrofactuempresa.getIsNew() && !parametrofactuempresa.getIsChanged() && !parametrofactuempresa.getIsDeleted()) {
				sDescripcion=parametrofactuempresa.getempresaorigen_descripcion();
			} else {
				//sDescripcion=this.getActualEmpresaOrigenForeignKeyDescripcion((Long)value);
				sDescripcion=parametrofactuempresa.getempresaorigen_descripcion();
			}
		}

		if(sTipo.equals("Sucursal")) {
			//sDescripcion=this.getActualSucursalForeignKeyDescripcion((Long)value);
			if(!parametrofactuempresa.getIsNew() && !parametrofactuempresa.getIsChanged() && !parametrofactuempresa.getIsDeleted()) {
				sDescripcion=parametrofactuempresa.getsucursal_descripcion();
			} else {
				//sDescripcion=this.getActualSucursalForeignKeyDescripcion((Long)value);
				sDescripcion=parametrofactuempresa.getsucursal_descripcion();
			}
		}

		if(sTipo.equals("TransaccionOrigen")) {
			//sDescripcion=this.getActualTransaccionOrigenForeignKeyDescripcion((Long)value);
			if(!parametrofactuempresa.getIsNew() && !parametrofactuempresa.getIsChanged() && !parametrofactuempresa.getIsDeleted()) {
				sDescripcion=parametrofactuempresa.gettransaccionorigen_descripcion();
			} else {
				//sDescripcion=this.getActualTransaccionOrigenForeignKeyDescripcion((Long)value);
				sDescripcion=parametrofactuempresa.gettransaccionorigen_descripcion();
			}
		}

		if(sTipo.equals("BodegaOrigen")) {
			//sDescripcion=this.getActualBodegaOrigenForeignKeyDescripcion((Long)value);
			if(!parametrofactuempresa.getIsNew() && !parametrofactuempresa.getIsChanged() && !parametrofactuempresa.getIsDeleted()) {
				sDescripcion=parametrofactuempresa.getbodegaorigen_descripcion();
			} else {
				//sDescripcion=this.getActualBodegaOrigenForeignKeyDescripcion((Long)value);
				sDescripcion=parametrofactuempresa.getbodegaorigen_descripcion();
			}
		}

		if(sTipo.equals("ClienteOrigen")) {
			//sDescripcion=this.getActualClienteOrigenForeignKeyDescripcion((Long)value);
			if(!parametrofactuempresa.getIsNew() && !parametrofactuempresa.getIsChanged() && !parametrofactuempresa.getIsDeleted()) {
				sDescripcion=parametrofactuempresa.getclienteorigen_descripcion();
			} else {
				//sDescripcion=this.getActualClienteOrigenForeignKeyDescripcion((Long)value);
				sDescripcion=parametrofactuempresa.getclienteorigen_descripcion();
			}
		}

		if(sTipo.equals("EmpresaDestino")) {
			//sDescripcion=this.getActualEmpresaDestinoForeignKeyDescripcion((Long)value);
			if(!parametrofactuempresa.getIsNew() && !parametrofactuempresa.getIsChanged() && !parametrofactuempresa.getIsDeleted()) {
				sDescripcion=parametrofactuempresa.getempresadestino_descripcion();
			} else {
				//sDescripcion=this.getActualEmpresaDestinoForeignKeyDescripcion((Long)value);
				sDescripcion=parametrofactuempresa.getempresadestino_descripcion();
			}
		}

		if(sTipo.equals("SucursalDestino")) {
			//sDescripcion=this.getActualSucursalDestinoForeignKeyDescripcion((Long)value);
			if(!parametrofactuempresa.getIsNew() && !parametrofactuempresa.getIsChanged() && !parametrofactuempresa.getIsDeleted()) {
				sDescripcion=parametrofactuempresa.getsucursaldestino_descripcion();
			} else {
				//sDescripcion=this.getActualSucursalDestinoForeignKeyDescripcion((Long)value);
				sDescripcion=parametrofactuempresa.getsucursaldestino_descripcion();
			}
		}

		if(sTipo.equals("TransaccionDestino")) {
			//sDescripcion=this.getActualTransaccionDestinoForeignKeyDescripcion((Long)value);
			if(!parametrofactuempresa.getIsNew() && !parametrofactuempresa.getIsChanged() && !parametrofactuempresa.getIsDeleted()) {
				sDescripcion=parametrofactuempresa.gettransacciondestino_descripcion();
			} else {
				//sDescripcion=this.getActualTransaccionDestinoForeignKeyDescripcion((Long)value);
				sDescripcion=parametrofactuempresa.gettransacciondestino_descripcion();
			}
		}

		if(sTipo.equals("BodegaDestino")) {
			//sDescripcion=this.getActualBodegaDestinoForeignKeyDescripcion((Long)value);
			if(!parametrofactuempresa.getIsNew() && !parametrofactuempresa.getIsChanged() && !parametrofactuempresa.getIsDeleted()) {
				sDescripcion=parametrofactuempresa.getbodegadestino_descripcion();
			} else {
				//sDescripcion=this.getActualBodegaDestinoForeignKeyDescripcion((Long)value);
				sDescripcion=parametrofactuempresa.getbodegadestino_descripcion();
			}
		}

		if(sTipo.equals("ClienteDestino")) {
			//sDescripcion=this.getActualClienteDestinoForeignKeyDescripcion((Long)value);
			if(!parametrofactuempresa.getIsNew() && !parametrofactuempresa.getIsChanged() && !parametrofactuempresa.getIsDeleted()) {
				sDescripcion=parametrofactuempresa.getclientedestino_descripcion();
			} else {
				//sDescripcion=this.getActualClienteDestinoForeignKeyDescripcion((Long)value);
				sDescripcion=parametrofactuempresa.getclientedestino_descripcion();
			}
		}

		if(sTipo.equals("EmpresaMultiDestino")) {
			//sDescripcion=this.getActualEmpresaMultiDestinoForeignKeyDescripcion((Long)value);
			if(!parametrofactuempresa.getIsNew() && !parametrofactuempresa.getIsChanged() && !parametrofactuempresa.getIsDeleted()) {
				sDescripcion=parametrofactuempresa.getempresamultidestino_descripcion();
			} else {
				//sDescripcion=this.getActualEmpresaMultiDestinoForeignKeyDescripcion((Long)value);
				sDescripcion=parametrofactuempresa.getempresamultidestino_descripcion();
			}
		}

		if(sTipo.equals("SucursalMultiDestino")) {
			//sDescripcion=this.getActualSucursalMultiDestinoForeignKeyDescripcion((Long)value);
			if(!parametrofactuempresa.getIsNew() && !parametrofactuempresa.getIsChanged() && !parametrofactuempresa.getIsDeleted()) {
				sDescripcion=parametrofactuempresa.getsucursalmultidestino_descripcion();
			} else {
				//sDescripcion=this.getActualSucursalMultiDestinoForeignKeyDescripcion((Long)value);
				sDescripcion=parametrofactuempresa.getsucursalmultidestino_descripcion();
			}
		}

		if(sTipo.equals("TransaccionMultiDestino")) {
			//sDescripcion=this.getActualTransaccionMultiDestinoForeignKeyDescripcion((Long)value);
			if(!parametrofactuempresa.getIsNew() && !parametrofactuempresa.getIsChanged() && !parametrofactuempresa.getIsDeleted()) {
				sDescripcion=parametrofactuempresa.gettransaccionmultidestino_descripcion();
			} else {
				//sDescripcion=this.getActualTransaccionMultiDestinoForeignKeyDescripcion((Long)value);
				sDescripcion=parametrofactuempresa.gettransaccionmultidestino_descripcion();
			}
		}

		if(sTipo.equals("BodegaMultiOrigen")) {
			//sDescripcion=this.getActualBodegaMultiOrigenForeignKeyDescripcion((Long)value);
			if(!parametrofactuempresa.getIsNew() && !parametrofactuempresa.getIsChanged() && !parametrofactuempresa.getIsDeleted()) {
				sDescripcion=parametrofactuempresa.getbodegamultiorigen_descripcion();
			} else {
				//sDescripcion=this.getActualBodegaMultiOrigenForeignKeyDescripcion((Long)value);
				sDescripcion=parametrofactuempresa.getbodegamultiorigen_descripcion();
			}
		}

		if(sTipo.equals("BodegaMultiDestino")) {
			//sDescripcion=this.getActualBodegaMultiDestinoForeignKeyDescripcion((Long)value);
			if(!parametrofactuempresa.getIsNew() && !parametrofactuempresa.getIsChanged() && !parametrofactuempresa.getIsDeleted()) {
				sDescripcion=parametrofactuempresa.getbodegamultidestino_descripcion();
			} else {
				//sDescripcion=this.getActualBodegaMultiDestinoForeignKeyDescripcion((Long)value);
				sDescripcion=parametrofactuempresa.getbodegamultidestino_descripcion();
			}
		}

		
		return sDescripcion;
	}
	
	public Color getColorFk(String sTipo,JTable table,Object value,int intSelectedRow) throws Exception {
		//DESCRIPCIONES FK		
		Color color=Color.WHITE;
		
		ParametroFactuEmpresa parametrofactuempresaRow=new ParametroFactuEmpresa();
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			parametrofactuempresaRow=(ParametroFactuEmpresa) parametrofactuempresaLogic.getParametroFactuEmpresas().toArray()[table.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE) {
			parametrofactuempresaRow=(ParametroFactuEmpresa) parametrofactuempresas.toArray()[table.convertRowIndexToModel(intSelectedRow)];
		}
					
		
		
		return color;
	}
	
	
	
	
	
	
	
	public void refrescarBindingTabla(Boolean blnSoloTabla) {
	}
	
	public void inicializarActualizarBindingBotonesManualParametroFactuEmpresa(Boolean esSetControles) {						
		if(esSetControles) {
			this.jButtonNuevoParametroFactuEmpresa.setVisible((this.isVisibilidadCeldaNuevoParametroFactuEmpresa && this.isPermisoNuevoParametroFactuEmpresa));			
			this.jButtonDuplicarParametroFactuEmpresa.setVisible((this.isVisibilidadCeldaDuplicarParametroFactuEmpresa && this.isPermisoDuplicarParametroFactuEmpresa));			
			this.jButtonCopiarParametroFactuEmpresa.setVisible((this.isVisibilidadCeldaCopiarParametroFactuEmpresa && this.isPermisoCopiarParametroFactuEmpresa));
			this.jButtonVerFormParametroFactuEmpresa.setVisible((this.isVisibilidadCeldaVerFormParametroFactuEmpresa && this.isPermisoVerFormParametroFactuEmpresa));
			
			this.jButtonAbrirOrderByParametroFactuEmpresa.setVisible((this.isVisibilidadCeldaOrdenParametroFactuEmpresa && this.isPermisoOrdenParametroFactuEmpresa));			
			
			this.jButtonNuevoRelacionesParametroFactuEmpresa.setVisible((this.isVisibilidadCeldaNuevoRelacionesParametroFactuEmpresa && this.isPermisoNuevoParametroFactuEmpresa));			
			this.jButtonNuevoGuardarCambiosParametroFactuEmpresa.setVisible((this.isVisibilidadCeldaNuevoParametroFactuEmpresa && this.isPermisoNuevoParametroFactuEmpresa && this.isPermisoGuardarCambiosParametroFactuEmpresa));
			
			if(this.jInternalFrameDetalleFormParametroFactuEmpresa!=null) {
			this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtonModificarParametroFactuEmpresa.setVisible((this.isVisibilidadCeldaModificarParametroFactuEmpresa && this.isPermisoActualizarParametroFactuEmpresa));	
			this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtonActualizarParametroFactuEmpresa.setVisible((this.isVisibilidadCeldaActualizarParametroFactuEmpresa && this.isPermisoActualizarParametroFactuEmpresa));	
			this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtonEliminarParametroFactuEmpresa.setVisible((this.isVisibilidadCeldaEliminarParametroFactuEmpresa && this.isPermisoEliminarParametroFactuEmpresa));
			this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtonCancelarParametroFactuEmpresa.setVisible(this.isVisibilidadCeldaCancelarParametroFactuEmpresa);							
			this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtonGuardarCambiosParametroFactuEmpresa.setVisible((this.isVisibilidadCeldaGuardarParametroFactuEmpresa && this.isPermisoGuardarCambiosParametroFactuEmpresa));			
			
			}
						
			this.jButtonGuardarCambiosTablaParametroFactuEmpresa.setVisible((this.isVisibilidadCeldaGuardarCambiosParametroFactuEmpresa && this.isPermisoGuardarCambiosParametroFactuEmpresa));							
			
			//TOOLBAR
			
			this.jButtonNuevoToolBarParametroFactuEmpresa.setVisible((this.isVisibilidadCeldaNuevoParametroFactuEmpresa && this.isPermisoNuevoParametroFactuEmpresa));						
			this.jButtonDuplicarToolBarParametroFactuEmpresa.setVisible((this.isVisibilidadCeldaDuplicarParametroFactuEmpresa && this.isPermisoDuplicarParametroFactuEmpresa));						
			this.jButtonCopiarToolBarParametroFactuEmpresa.setVisible((this.isVisibilidadCeldaCopiarParametroFactuEmpresa && this.isPermisoCopiarParametroFactuEmpresa));			
			this.jButtonVerFormToolBarParametroFactuEmpresa.setVisible((this.isVisibilidadCeldaVerFormParametroFactuEmpresa && this.isPermisoVerFormParametroFactuEmpresa));			
			this.jButtonAbrirOrderByToolBarParametroFactuEmpresa.setVisible((this.isVisibilidadCeldaOrdenParametroFactuEmpresa && this.isPermisoOrdenParametroFactuEmpresa));
			this.jButtonNuevoRelacionesToolBarParametroFactuEmpresa.setVisible((this.isVisibilidadCeldaNuevoRelacionesParametroFactuEmpresa && this.isPermisoNuevoParametroFactuEmpresa));			
			this.jButtonNuevoGuardarCambiosToolBarParametroFactuEmpresa.setVisible((this.isVisibilidadCeldaNuevoParametroFactuEmpresa && this.isPermisoNuevoParametroFactuEmpresa && this.isPermisoGuardarCambiosParametroFactuEmpresa));			
			
			if(this.jInternalFrameDetalleFormParametroFactuEmpresa!=null) {
			this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtonModificarToolBarParametroFactuEmpresa.setVisible((this.isVisibilidadCeldaModificarParametroFactuEmpresa && this.isPermisoActualizarParametroFactuEmpresa));	
			this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtonActualizarToolBarParametroFactuEmpresa.setVisible((this.isVisibilidadCeldaActualizarParametroFactuEmpresa  && this.isPermisoActualizarParametroFactuEmpresa));	
			this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtonEliminarToolBarParametroFactuEmpresa.setVisible((this.isVisibilidadCeldaEliminarParametroFactuEmpresa && this.isPermisoEliminarParametroFactuEmpresa));
			this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtonCancelarToolBarParametroFactuEmpresa.setVisible(this.isVisibilidadCeldaCancelarParametroFactuEmpresa);				
			this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtonGuardarCambiosToolBarParametroFactuEmpresa.setVisible((this.isVisibilidadCeldaGuardarParametroFactuEmpresa && this.isPermisoGuardarCambiosParametroFactuEmpresa));									
			}
			
			this.jButtonGuardarCambiosTablaToolBarParametroFactuEmpresa.setVisible((this.isVisibilidadCeldaGuardarCambiosParametroFactuEmpresa && this.isPermisoGuardarCambiosParametroFactuEmpresa));									
			
			//TOOLBAR
			
			//MENUS
			
			this.jMenuItemNuevoParametroFactuEmpresa.setVisible((this.isVisibilidadCeldaNuevoParametroFactuEmpresa && this.isPermisoNuevoParametroFactuEmpresa));			
			this.jMenuItemDuplicarParametroFactuEmpresa.setVisible((this.isVisibilidadCeldaDuplicarParametroFactuEmpresa && this.isPermisoDuplicarParametroFactuEmpresa));			
			this.jMenuItemCopiarParametroFactuEmpresa.setVisible((this.isVisibilidadCeldaCopiarParametroFactuEmpresa && this.isPermisoCopiarParametroFactuEmpresa));			
			this.jMenuItemVerFormParametroFactuEmpresa.setVisible((this.isVisibilidadCeldaVerFormParametroFactuEmpresa && this.isPermisoVerFormParametroFactuEmpresa));			
			this.jMenuItemAbrirOrderByParametroFactuEmpresa.setVisible((this.isVisibilidadCeldaOrdenParametroFactuEmpresa && this.isPermisoOrdenParametroFactuEmpresa));			
			//this.jMenuItemMostrarOcultarParametroFactuEmpresa.setVisible((this.isVisibilidadCeldaOrdenParametroFactuEmpresa && this.isPermisoOrdenParametroFactuEmpresa));
			this.jMenuItemDetalleAbrirOrderByParametroFactuEmpresa.setVisible((this.isVisibilidadCeldaOrdenParametroFactuEmpresa && this.isPermisoOrdenParametroFactuEmpresa));			
			//this.jMenuItemDetalleMostrarOcultarParametroFactuEmpresa.setVisible((this.isVisibilidadCeldaOrdenParametroFactuEmpresa && this.isPermisoOrdenParametroFactuEmpresa));			
			this.jMenuItemNuevoRelacionesParametroFactuEmpresa.setVisible((this.isVisibilidadCeldaNuevoRelacionesParametroFactuEmpresa && this.isPermisoNuevoParametroFactuEmpresa));			
			this.jMenuItemNuevoGuardarCambiosParametroFactuEmpresa.setVisible((this.isVisibilidadCeldaNuevoParametroFactuEmpresa && this.isPermisoNuevoParametroFactuEmpresa && this.isPermisoGuardarCambiosParametroFactuEmpresa));									
			
			if(this.jInternalFrameDetalleFormParametroFactuEmpresa!=null) {
			this.jInternalFrameDetalleFormParametroFactuEmpresa.jMenuItemModificarParametroFactuEmpresa.setVisible((this.isVisibilidadCeldaModificarParametroFactuEmpresa && this.isPermisoActualizarParametroFactuEmpresa));	
			this.jInternalFrameDetalleFormParametroFactuEmpresa.jMenuItemActualizarParametroFactuEmpresa.setVisible((this.isVisibilidadCeldaActualizarParametroFactuEmpresa && this.isPermisoActualizarParametroFactuEmpresa));	
			this.jInternalFrameDetalleFormParametroFactuEmpresa.jMenuItemEliminarParametroFactuEmpresa.setVisible((this.isVisibilidadCeldaEliminarParametroFactuEmpresa && this.isPermisoEliminarParametroFactuEmpresa));
			this.jInternalFrameDetalleFormParametroFactuEmpresa.jMenuItemCancelarParametroFactuEmpresa.setVisible(this.isVisibilidadCeldaCancelarParametroFactuEmpresa);				
			}
			
			this.jMenuItemGuardarCambiosParametroFactuEmpresa.setVisible((this.isVisibilidadCeldaGuardarParametroFactuEmpresa && this.isPermisoGuardarCambiosParametroFactuEmpresa));						
			this.jMenuItemGuardarCambiosTablaParametroFactuEmpresa.setVisible((this.isVisibilidadCeldaGuardarCambiosParametroFactuEmpresa && this.isPermisoGuardarCambiosParametroFactuEmpresa));						
			
			//MENUS
			
		} else {
			this.isVisibilidadCeldaNuevoParametroFactuEmpresa=this.jButtonNuevoParametroFactuEmpresa.isVisible();
			this.isVisibilidadCeldaDuplicarParametroFactuEmpresa=this.jButtonDuplicarParametroFactuEmpresa.isVisible();
			this.isVisibilidadCeldaCopiarParametroFactuEmpresa=this.jButtonCopiarParametroFactuEmpresa.isVisible();
			this.isVisibilidadCeldaVerFormParametroFactuEmpresa=this.jButtonVerFormParametroFactuEmpresa.isVisible();
			
			this.isVisibilidadCeldaOrdenParametroFactuEmpresa=this.jButtonAbrirOrderByParametroFactuEmpresa.isVisible();			
			
			this.isVisibilidadCeldaNuevoRelacionesParametroFactuEmpresa=this.jButtonNuevoRelacionesParametroFactuEmpresa.isVisible();
			this.isVisibilidadCeldaModificarParametroFactuEmpresa=this.jButtonModificarParametroFactuEmpresa.isVisible();
			
			if(this.jInternalFrameDetalleFormParametroFactuEmpresa!=null) {
			this.isVisibilidadCeldaActualizarParametroFactuEmpresa=this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtonActualizarParametroFactuEmpresa.isVisible();
			this.isVisibilidadCeldaEliminarParametroFactuEmpresa=this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtonEliminarParametroFactuEmpresa.isVisible();
			this.isVisibilidadCeldaCancelarParametroFactuEmpresa=this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtonCancelarParametroFactuEmpresa.isVisible();
			this.isVisibilidadCeldaGuardarParametroFactuEmpresa=this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtonGuardarCambiosParametroFactuEmpresa.isVisible();			
			}
			
			this.isVisibilidadCeldaGuardarCambiosParametroFactuEmpresa=this.jButtonGuardarCambiosTablaParametroFactuEmpresa.isVisible();
			
			//TOOLBAR
			
			this.isVisibilidadCeldaNuevoParametroFactuEmpresa=this.jButtonNuevoToolBarParametroFactuEmpresa.isVisible();
			this.isVisibilidadCeldaNuevoRelacionesParametroFactuEmpresa=this.jButtonNuevoRelacionesToolBarParametroFactuEmpresa.isVisible();
			
			if(this.jInternalFrameDetalleFormParametroFactuEmpresa!=null) {
			this.isVisibilidadCeldaModificarParametroFactuEmpresa=this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtonModificarToolBarParametroFactuEmpresa.isVisible();
			this.isVisibilidadCeldaActualizarParametroFactuEmpresa=this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtonActualizarToolBarParametroFactuEmpresa.isVisible();
			this.isVisibilidadCeldaEliminarParametroFactuEmpresa=this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtonEliminarToolBarParametroFactuEmpresa.isVisible();
			this.isVisibilidadCeldaCancelarParametroFactuEmpresa=this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtonCancelarToolBarParametroFactuEmpresa.isVisible();
			}
			
			this.isVisibilidadCeldaGuardarParametroFactuEmpresa=this.jButtonGuardarCambiosToolBarParametroFactuEmpresa.isVisible();
			this.isVisibilidadCeldaGuardarCambiosParametroFactuEmpresa=this.jButtonGuardarCambiosTablaToolBarParametroFactuEmpresa.isVisible();						
			
			//TOOLBAR
			
			//MENUS
			
			this.isVisibilidadCeldaNuevoParametroFactuEmpresa=this.jMenuItemNuevoParametroFactuEmpresa.isVisible();
			this.isVisibilidadCeldaNuevoRelacionesParametroFactuEmpresa=this.jMenuItemNuevoRelacionesParametroFactuEmpresa.isVisible();
			
			if(this.jInternalFrameDetalleFormParametroFactuEmpresa!=null) {
			this.isVisibilidadCeldaModificarParametroFactuEmpresa=this.jInternalFrameDetalleFormParametroFactuEmpresa.jMenuItemModificarParametroFactuEmpresa.isVisible();
			this.isVisibilidadCeldaActualizarParametroFactuEmpresa=this.jInternalFrameDetalleFormParametroFactuEmpresa.jMenuItemActualizarParametroFactuEmpresa.isVisible();
			this.isVisibilidadCeldaEliminarParametroFactuEmpresa=this.jInternalFrameDetalleFormParametroFactuEmpresa.jMenuItemEliminarParametroFactuEmpresa.isVisible();
			this.isVisibilidadCeldaCancelarParametroFactuEmpresa=this.jInternalFrameDetalleFormParametroFactuEmpresa.jMenuItemCancelarParametroFactuEmpresa.isVisible();
			}
			
			this.isVisibilidadCeldaGuardarParametroFactuEmpresa=this.jMenuItemGuardarCambiosParametroFactuEmpresa.isVisible();
			this.isVisibilidadCeldaGuardarCambiosParametroFactuEmpresa=this.jMenuItemGuardarCambiosTablaParametroFactuEmpresa.isVisible();						
			
			//MENUS
		}
	}
	
	public void inicializarActualizarBindingBotonesParametroFactuEmpresa(Boolean esInicializar) {
		if(ParametroFactuEmpresaJInternalFrame.ISBINDING_MANUAL) {			
			if(this.parametrofactuempresaSessionBean.getConGuardarRelaciones()) {
				//if(this.parametrofactuempresaSessionBean.getEsGuardarRelacionado()) {
				
				this.actualizarEstadoCeldasBotonesConGuardarRelacionesParametroFactuEmpresa();
			}
			
			this.inicializarActualizarBindingBotonesManualParametroFactuEmpresa(true);
			
		} else {	
		}
	}		
	
	public void inicializarActualizarBindingBotonesPermisosManualParametroFactuEmpresa() {
		this.jButtonNuevoParametroFactuEmpresa.setVisible(this.isPermisoNuevoParametroFactuEmpresa);			
		this.jButtonDuplicarParametroFactuEmpresa.setVisible(this.isPermisoDuplicarParametroFactuEmpresa);			
		this.jButtonCopiarParametroFactuEmpresa.setVisible(this.isPermisoCopiarParametroFactuEmpresa);			
		this.jButtonVerFormParametroFactuEmpresa.setVisible(this.isPermisoVerFormParametroFactuEmpresa);			
		
		this.jButtonAbrirOrderByParametroFactuEmpresa.setVisible(this.isPermisoOrdenParametroFactuEmpresa);					
		
		this.jButtonNuevoRelacionesParametroFactuEmpresa.setVisible(this.isPermisoNuevoParametroFactuEmpresa);			
		
		if(this.jInternalFrameDetalleFormParametroFactuEmpresa!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtonModificarParametroFactuEmpresa.setVisible(this.isPermisoActualizarParametroFactuEmpresa);	
			this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtonActualizarParametroFactuEmpresa.setVisible(this.isPermisoActualizarParametroFactuEmpresa);	
			this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtonEliminarParametroFactuEmpresa.setVisible(this.isPermisoEliminarParametroFactuEmpresa);
			this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtonCancelarParametroFactuEmpresa.setVisible(this.isVisibilidadCeldaCancelarParametroFactuEmpresa);						
			this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtonGuardarCambiosParametroFactuEmpresa.setVisible(this.isPermisoGuardarCambiosParametroFactuEmpresa);							
		}
		
		this.jButtonGuardarCambiosTablaParametroFactuEmpresa.setVisible(this.isPermisoActualizarParametroFactuEmpresa);
	}
	
	public void inicializarActualizarBindingBotonesPermisosManualFormDetalleParametroFactuEmpresa() {
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtonModificarParametroFactuEmpresa.setVisible(this.isPermisoActualizarParametroFactuEmpresa);	
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtonActualizarParametroFactuEmpresa.setVisible(this.isPermisoActualizarParametroFactuEmpresa);	
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtonEliminarParametroFactuEmpresa.setVisible(this.isPermisoEliminarParametroFactuEmpresa);
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtonCancelarParametroFactuEmpresa.setVisible(this.isVisibilidadCeldaCancelarParametroFactuEmpresa);							
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtonGuardarCambiosParametroFactuEmpresa.setVisible((this.isVisibilidadCeldaGuardarParametroFactuEmpresa && this.isPermisoGuardarCambiosParametroFactuEmpresa));			
	}
	
	public void inicializarActualizarBindingBotonesPermisosParametroFactuEmpresa() {
		if(ParametroFactuEmpresaJInternalFrame.ISBINDING_MANUAL) {
			this.inicializarActualizarBindingBotonesPermisosManualParametroFactuEmpresa();
		} else {
		}
	}
	
	
	public void refrescarBindingBotonesParametroFactuEmpresa() {
	}
	
	public void jTableDatosParametroFactuEmpresaListSelectionListener(javax.swing.event.ListSelectionEvent evt) throws Exception { 
		try {
			this.seleccionarParametroFactuEmpresa(null,evt,-1);
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroFactuEmpresaConstantesFunciones.CLASSNAME);
		}
	}
	
	
	public void jButtonidParametroFactuEmpresaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuempresaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroFactuEmpresa.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroFactuEmpresa(this.getparametrofactuempresa(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuEmpresa(this.parametrofactuempresa);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrofactuempresa =(ParametroFactuEmpresa) this.parametrofactuempresaLogic.getParametroFactuEmpresas().toArray()[this.jTableDatosParametroFactuEmpresa.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrofactuempresa =(ParametroFactuEmpresa) this.parametrofactuempresas.toArray()[this.jTableDatosParametroFactuEmpresa.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrofactuempresa==null) {
						this.parametrofactuempresa = new ParametroFactuEmpresa();
					}

					this.setVariablesFormularioToObjetoActualParametroFactuEmpresa(this.parametrofactuempresa,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuEmpresa(this.parametrofactuempresa);
				}

				if(this.parametrofactuempresa.getId()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id = "+this.parametrofactuempresa.getId().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroFactuEmpresa(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuempresaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuempresaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroFactuEmpresaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuempresaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_empresaParametroFactuEmpresaUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuempresaLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoempresa=true;

			idTienePermisoempresa=this.tienePermisosUsuarioEnPaginaWebParametroFactuEmpresa(EmpresaConstantesFunciones.CLASSNAME);

			if(idTienePermisoempresa) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroFactuEmpresa.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosParametroFactuEmpresa.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosParametroFactuEmpresa.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuempresa =(ParametroFactuEmpresa) this.parametrofactuempresaLogic.getParametroFactuEmpresas().toArray()[this.jTableDatosParametroFactuEmpresa.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.parametrofactuempresa =(ParametroFactuEmpresa) this.parametrofactuempresas.toArray()[this.jTableDatosParametroFactuEmpresa.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualParametroFactuEmpresa(this.getparametrofactuempresa(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuEmpresa(this.parametrofactuempresa);

				this.empresaBeanSwingJInternalFrame=new EmpresaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.empresaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.empresaBeanSwingJInternalFrame.getEmpresaLogic().setConnexion(this.parametrofactuempresaLogic.getConnexion());

				if(this.parametrofactuempresa.getid_empresa()!=null) {
					this.empresaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.empresaBeanSwingJInternalFrame.setIdActual(this.parametrofactuempresa.getid_empresa());
					this.empresaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.empresaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.empresaBeanSwingJInternalFrame.inicializarActualizarBindingTablaEmpresa();
				}

				JInternalFrameBase jinternalFrame =this.empresaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderParametroFactuEmpresa=(TitledBorder)this.jScrollPanelDatosParametroFactuEmpresa.getBorder();
				TitledBorder titledBorderempresa=(TitledBorder)this.empresaBeanSwingJInternalFrame.jScrollPanelDatosEmpresa.getBorder();

				titledBorderempresa.setTitle(titledBorderParametroFactuEmpresa.getTitle() + " -> Empresa");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuempresaLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuempresaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroFactuEmpresaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuempresaLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_empresaParametroFactuEmpresaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuempresaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroFactuEmpresa.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroFactuEmpresa(this.getparametrofactuempresa(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuEmpresa(this.parametrofactuempresa);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrofactuempresa =(ParametroFactuEmpresa) this.parametrofactuempresaLogic.getParametroFactuEmpresas().toArray()[this.jTableDatosParametroFactuEmpresa.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrofactuempresa =(ParametroFactuEmpresa) this.parametrofactuempresas.toArray()[this.jTableDatosParametroFactuEmpresa.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrofactuempresa==null) {
						this.parametrofactuempresa = new ParametroFactuEmpresa();
					}

					this.setVariablesFormularioToObjetoActualParametroFactuEmpresa(this.parametrofactuempresa,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuEmpresa(this.parametrofactuempresa);
				}

				if(this.parametrofactuempresa.getid_empresa()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_empresa = "+this.parametrofactuempresa.getid_empresa().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroFactuEmpresa(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuempresaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuempresaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroFactuEmpresaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuempresaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_empresa_origenParametroFactuEmpresaUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuempresaLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoempresaorigen=true;

			idTienePermisoempresaorigen=this.tienePermisosUsuarioEnPaginaWebParametroFactuEmpresa(EmpresaConstantesFunciones.CLASSNAME);

			if(idTienePermisoempresaorigen) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroFactuEmpresa.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosParametroFactuEmpresa.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosParametroFactuEmpresa.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuempresa =(ParametroFactuEmpresa) this.parametrofactuempresaLogic.getParametroFactuEmpresas().toArray()[this.jTableDatosParametroFactuEmpresa.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.parametrofactuempresa =(ParametroFactuEmpresa) this.parametrofactuempresas.toArray()[this.jTableDatosParametroFactuEmpresa.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualParametroFactuEmpresa(this.getparametrofactuempresa(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuEmpresa(this.parametrofactuempresa);

				this.empresaorigenBeanSwingJInternalFrame=new EmpresaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.empresaorigenBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.empresaorigenBeanSwingJInternalFrame.getEmpresaLogic().setConnexion(this.parametrofactuempresaLogic.getConnexion());

				if(this.parametrofactuempresa.getid_empresa_origen()!=null) {
					this.empresaorigenBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.empresaorigenBeanSwingJInternalFrame.setIdActual(this.parametrofactuempresa.getid_empresa_origen());
					this.empresaorigenBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.empresaorigenBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.empresaorigenBeanSwingJInternalFrame.inicializarActualizarBindingTablaEmpresa();
				}

				JInternalFrameBase jinternalFrame =this.empresaorigenBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderParametroFactuEmpresa=(TitledBorder)this.jScrollPanelDatosParametroFactuEmpresa.getBorder();
				TitledBorder titledBorderempresaorigen=(TitledBorder)this.empresaorigenBeanSwingJInternalFrame.jScrollPanelDatosEmpresa.getBorder();

				titledBorderempresaorigen.setTitle(titledBorderParametroFactuEmpresa.getTitle() + " -> Empresa");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuempresaLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuempresaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroFactuEmpresaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuempresaLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_empresa_origenParametroFactuEmpresaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuempresaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroFactuEmpresa.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroFactuEmpresa(this.getparametrofactuempresa(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuEmpresa(this.parametrofactuempresa);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrofactuempresa =(ParametroFactuEmpresa) this.parametrofactuempresaLogic.getParametroFactuEmpresas().toArray()[this.jTableDatosParametroFactuEmpresa.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrofactuempresa =(ParametroFactuEmpresa) this.parametrofactuempresas.toArray()[this.jTableDatosParametroFactuEmpresa.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrofactuempresa==null) {
						this.parametrofactuempresa = new ParametroFactuEmpresa();
					}

					this.setVariablesFormularioToObjetoActualParametroFactuEmpresa(this.parametrofactuempresa,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuEmpresa(this.parametrofactuempresa);
				}

				if(this.parametrofactuempresa.getid_empresa_origen()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_empresa_origen = "+this.parametrofactuempresa.getid_empresa_origen().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroFactuEmpresa(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuempresaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuempresaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroFactuEmpresaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuempresaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_sucursalParametroFactuEmpresaUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuempresaLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisosucursal=true;

			idTienePermisosucursal=this.tienePermisosUsuarioEnPaginaWebParametroFactuEmpresa(SucursalConstantesFunciones.CLASSNAME);

			if(idTienePermisosucursal) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroFactuEmpresa.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosParametroFactuEmpresa.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosParametroFactuEmpresa.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuempresa =(ParametroFactuEmpresa) this.parametrofactuempresaLogic.getParametroFactuEmpresas().toArray()[this.jTableDatosParametroFactuEmpresa.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.parametrofactuempresa =(ParametroFactuEmpresa) this.parametrofactuempresas.toArray()[this.jTableDatosParametroFactuEmpresa.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualParametroFactuEmpresa(this.getparametrofactuempresa(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuEmpresa(this.parametrofactuempresa);

				this.sucursalBeanSwingJInternalFrame=new SucursalBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.sucursalBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.sucursalBeanSwingJInternalFrame.getSucursalLogic().setConnexion(this.parametrofactuempresaLogic.getConnexion());

				if(this.parametrofactuempresa.getid_sucursal()!=null) {
					this.sucursalBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.sucursalBeanSwingJInternalFrame.setIdActual(this.parametrofactuempresa.getid_sucursal());
					this.sucursalBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.sucursalBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.sucursalBeanSwingJInternalFrame.inicializarActualizarBindingTablaSucursal();
				}

				JInternalFrameBase jinternalFrame =this.sucursalBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderParametroFactuEmpresa=(TitledBorder)this.jScrollPanelDatosParametroFactuEmpresa.getBorder();
				TitledBorder titledBordersucursal=(TitledBorder)this.sucursalBeanSwingJInternalFrame.jScrollPanelDatosSucursal.getBorder();

				titledBordersucursal.setTitle(titledBorderParametroFactuEmpresa.getTitle() + " -> Sucursal");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuempresaLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuempresaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroFactuEmpresaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuempresaLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_sucursalParametroFactuEmpresaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuempresaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroFactuEmpresa.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroFactuEmpresa(this.getparametrofactuempresa(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuEmpresa(this.parametrofactuempresa);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrofactuempresa =(ParametroFactuEmpresa) this.parametrofactuempresaLogic.getParametroFactuEmpresas().toArray()[this.jTableDatosParametroFactuEmpresa.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrofactuempresa =(ParametroFactuEmpresa) this.parametrofactuempresas.toArray()[this.jTableDatosParametroFactuEmpresa.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrofactuempresa==null) {
						this.parametrofactuempresa = new ParametroFactuEmpresa();
					}

					this.setVariablesFormularioToObjetoActualParametroFactuEmpresa(this.parametrofactuempresa,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuEmpresa(this.parametrofactuempresa);
				}

				if(this.parametrofactuempresa.getid_sucursal()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_sucursal = "+this.parametrofactuempresa.getid_sucursal().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroFactuEmpresa(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuempresaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuempresaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroFactuEmpresaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuempresaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_transaccion_origenParametroFactuEmpresaUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuempresaLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotransaccionorigen=true;

			idTienePermisotransaccionorigen=this.tienePermisosUsuarioEnPaginaWebParametroFactuEmpresa(TransaccionConstantesFunciones.CLASSNAME);

			if(idTienePermisotransaccionorigen) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroFactuEmpresa.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosParametroFactuEmpresa.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosParametroFactuEmpresa.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuempresa =(ParametroFactuEmpresa) this.parametrofactuempresaLogic.getParametroFactuEmpresas().toArray()[this.jTableDatosParametroFactuEmpresa.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.parametrofactuempresa =(ParametroFactuEmpresa) this.parametrofactuempresas.toArray()[this.jTableDatosParametroFactuEmpresa.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualParametroFactuEmpresa(this.getparametrofactuempresa(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuEmpresa(this.parametrofactuempresa);

				this.transaccionorigenBeanSwingJInternalFrame=new TransaccionBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.transaccionorigenBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.transaccionorigenBeanSwingJInternalFrame.getTransaccionLogic().setConnexion(this.parametrofactuempresaLogic.getConnexion());

				if(this.parametrofactuempresa.getid_transaccion_origen()!=null) {
					this.transaccionorigenBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.transaccionorigenBeanSwingJInternalFrame.setIdActual(this.parametrofactuempresa.getid_transaccion_origen());
					this.transaccionorigenBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.transaccionorigenBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.transaccionorigenBeanSwingJInternalFrame.inicializarActualizarBindingTablaTransaccion();
				}

				JInternalFrameBase jinternalFrame =this.transaccionorigenBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderParametroFactuEmpresa=(TitledBorder)this.jScrollPanelDatosParametroFactuEmpresa.getBorder();
				TitledBorder titledBordertransaccionorigen=(TitledBorder)this.transaccionorigenBeanSwingJInternalFrame.jScrollPanelDatosTransaccion.getBorder();

				titledBordertransaccionorigen.setTitle(titledBorderParametroFactuEmpresa.getTitle() + " -> Transaccion");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuempresaLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuempresaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroFactuEmpresaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuempresaLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_transaccion_origenParametroFactuEmpresaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuempresaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroFactuEmpresa.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroFactuEmpresa(this.getparametrofactuempresa(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuEmpresa(this.parametrofactuempresa);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrofactuempresa =(ParametroFactuEmpresa) this.parametrofactuempresaLogic.getParametroFactuEmpresas().toArray()[this.jTableDatosParametroFactuEmpresa.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrofactuempresa =(ParametroFactuEmpresa) this.parametrofactuempresas.toArray()[this.jTableDatosParametroFactuEmpresa.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrofactuempresa==null) {
						this.parametrofactuempresa = new ParametroFactuEmpresa();
					}

					this.setVariablesFormularioToObjetoActualParametroFactuEmpresa(this.parametrofactuempresa,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuEmpresa(this.parametrofactuempresa);
				}

				if(this.parametrofactuempresa.getid_transaccion_origen()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_transaccion_origen = "+this.parametrofactuempresa.getid_transaccion_origen().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroFactuEmpresa(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuempresaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuempresaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroFactuEmpresaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuempresaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_bodega_origenParametroFactuEmpresaUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuempresaLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisobodegaorigen=true;

			idTienePermisobodegaorigen=this.tienePermisosUsuarioEnPaginaWebParametroFactuEmpresa(BodegaConstantesFunciones.CLASSNAME);

			if(idTienePermisobodegaorigen) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroFactuEmpresa.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosParametroFactuEmpresa.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosParametroFactuEmpresa.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuempresa =(ParametroFactuEmpresa) this.parametrofactuempresaLogic.getParametroFactuEmpresas().toArray()[this.jTableDatosParametroFactuEmpresa.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.parametrofactuempresa =(ParametroFactuEmpresa) this.parametrofactuempresas.toArray()[this.jTableDatosParametroFactuEmpresa.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualParametroFactuEmpresa(this.getparametrofactuempresa(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuEmpresa(this.parametrofactuempresa);

				this.bodegaorigenBeanSwingJInternalFrame=new BodegaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.bodegaorigenBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.bodegaorigenBeanSwingJInternalFrame.getBodegaLogic().setConnexion(this.parametrofactuempresaLogic.getConnexion());

				if(this.parametrofactuempresa.getid_bodega_origen()!=null) {
					this.bodegaorigenBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.bodegaorigenBeanSwingJInternalFrame.setIdActual(this.parametrofactuempresa.getid_bodega_origen());
					this.bodegaorigenBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.bodegaorigenBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.bodegaorigenBeanSwingJInternalFrame.inicializarActualizarBindingTablaBodega();
				}

				JInternalFrameBase jinternalFrame =this.bodegaorigenBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderParametroFactuEmpresa=(TitledBorder)this.jScrollPanelDatosParametroFactuEmpresa.getBorder();
				TitledBorder titledBorderbodegaorigen=(TitledBorder)this.bodegaorigenBeanSwingJInternalFrame.jScrollPanelDatosBodega.getBorder();

				titledBorderbodegaorigen.setTitle(titledBorderParametroFactuEmpresa.getTitle() + " -> Bodega");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuempresaLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuempresaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroFactuEmpresaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuempresaLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_bodega_origenParametroFactuEmpresaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuempresaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroFactuEmpresa.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroFactuEmpresa(this.getparametrofactuempresa(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuEmpresa(this.parametrofactuempresa);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrofactuempresa =(ParametroFactuEmpresa) this.parametrofactuempresaLogic.getParametroFactuEmpresas().toArray()[this.jTableDatosParametroFactuEmpresa.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrofactuempresa =(ParametroFactuEmpresa) this.parametrofactuempresas.toArray()[this.jTableDatosParametroFactuEmpresa.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrofactuempresa==null) {
						this.parametrofactuempresa = new ParametroFactuEmpresa();
					}

					this.setVariablesFormularioToObjetoActualParametroFactuEmpresa(this.parametrofactuempresa,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuEmpresa(this.parametrofactuempresa);
				}

				if(this.parametrofactuempresa.getid_bodega_origen()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_bodega_origen = "+this.parametrofactuempresa.getid_bodega_origen().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroFactuEmpresa(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuempresaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuempresaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroFactuEmpresaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuempresaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_cliente_origenParametroFactuEmpresaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {
			this.clienteorigenBeanSwingJInternalFrame=new ClienteBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
			this.clienteorigenBeanSwingJInternalFrame.setJInternalFrameParent(this);
			this.clienteorigenBeanSwingJInternalFrame.sTipoBusqueda="ClienteOrigen";

			if(!this.sFinalQueryGeneral_clienteorigen.equals("")) {
				this.clienteorigenBeanSwingJInternalFrame.setsFinalQueryGeneral(this.sFinalQueryGeneral_clienteorigen);
				this.clienteorigenBeanSwingJInternalFrame.sAccionBusqueda="Query";


				this.clienteorigenBeanSwingJInternalFrame.procesarBusqueda(this.clienteorigenBeanSwingJInternalFrame.sAccionBusqueda);
				this.clienteorigenBeanSwingJInternalFrame.inicializarActualizarBindingCliente(false);
			}

			if(!this.sFinalQueryComboClienteOrigen.equals("") && false) {
			}


			JInternalFrameBase jinternalFrame =this.clienteorigenBeanSwingJInternalFrame;
			jinternalFrame.setAutoscrolls(true);
			//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
			jinternalFrame.setVisible(true); 


			TitledBorder titledBorderParametroFactuEmpresa=null;
			TitledBorder titledBorderclienteorigen=null;

			if(!this.jScrollPanelDatosParametroFactuEmpresa.getBorder().getClass().equals(EmptyBorder.class)) {
				titledBorderParametroFactuEmpresa=(TitledBorder)this.jScrollPanelDatosParametroFactuEmpresa.getBorder();
				titledBorderclienteorigen=(TitledBorder)this.clienteorigenBeanSwingJInternalFrame.jScrollPanelDatosCliente.getBorder();

				titledBorderclienteorigen.setTitle(titledBorderParametroFactuEmpresa.getTitle() + " -> Cliente");
			}

			if(!Constantes.CON_VARIAS_VENTANAS) {
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
			}

			this.jDesktopPane.add(jinternalFrame);

			jinternalFrame.setSelected(true);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroFactuEmpresaConstantesFunciones.CLASSNAME);
		}
	}

	public void jButtonid_cliente_origenParametroFactuEmpresaUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuempresaLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoclienteorigen=true;

			idTienePermisoclienteorigen=this.tienePermisosUsuarioEnPaginaWebParametroFactuEmpresa(ClienteConstantesFunciones.CLASSNAME);

			if(idTienePermisoclienteorigen) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroFactuEmpresa.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosParametroFactuEmpresa.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosParametroFactuEmpresa.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuempresa =(ParametroFactuEmpresa) this.parametrofactuempresaLogic.getParametroFactuEmpresas().toArray()[this.jTableDatosParametroFactuEmpresa.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.parametrofactuempresa =(ParametroFactuEmpresa) this.parametrofactuempresas.toArray()[this.jTableDatosParametroFactuEmpresa.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualParametroFactuEmpresa(this.getparametrofactuempresa(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuEmpresa(this.parametrofactuempresa);

				this.clienteorigenBeanSwingJInternalFrame=new ClienteBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.clienteorigenBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.clienteorigenBeanSwingJInternalFrame.getClienteLogic().setConnexion(this.parametrofactuempresaLogic.getConnexion());

				if(this.parametrofactuempresa.getid_cliente_origen()!=null) {
					this.clienteorigenBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.clienteorigenBeanSwingJInternalFrame.setIdActual(this.parametrofactuempresa.getid_cliente_origen());
					this.clienteorigenBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.clienteorigenBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.clienteorigenBeanSwingJInternalFrame.inicializarActualizarBindingTablaCliente();
				}

				JInternalFrameBase jinternalFrame =this.clienteorigenBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderParametroFactuEmpresa=(TitledBorder)this.jScrollPanelDatosParametroFactuEmpresa.getBorder();
				TitledBorder titledBorderclienteorigen=(TitledBorder)this.clienteorigenBeanSwingJInternalFrame.jScrollPanelDatosCliente.getBorder();

				titledBorderclienteorigen.setTitle(titledBorderParametroFactuEmpresa.getTitle() + " -> Cliente");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuempresaLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuempresaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroFactuEmpresaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuempresaLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_cliente_origenParametroFactuEmpresaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuempresaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroFactuEmpresa.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroFactuEmpresa(this.getparametrofactuempresa(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuEmpresa(this.parametrofactuempresa);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrofactuempresa =(ParametroFactuEmpresa) this.parametrofactuempresaLogic.getParametroFactuEmpresas().toArray()[this.jTableDatosParametroFactuEmpresa.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrofactuempresa =(ParametroFactuEmpresa) this.parametrofactuempresas.toArray()[this.jTableDatosParametroFactuEmpresa.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrofactuempresa==null) {
						this.parametrofactuempresa = new ParametroFactuEmpresa();
					}

					this.setVariablesFormularioToObjetoActualParametroFactuEmpresa(this.parametrofactuempresa,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuEmpresa(this.parametrofactuempresa);
				}

				if(this.parametrofactuempresa.getid_cliente_origen()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_cliente_origen = "+this.parametrofactuempresa.getid_cliente_origen().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroFactuEmpresa(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuempresaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuempresaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroFactuEmpresaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuempresaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtoncosto_origenParametroFactuEmpresaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuempresaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroFactuEmpresa.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroFactuEmpresa(this.getparametrofactuempresa(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuEmpresa(this.parametrofactuempresa);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrofactuempresa =(ParametroFactuEmpresa) this.parametrofactuempresaLogic.getParametroFactuEmpresas().toArray()[this.jTableDatosParametroFactuEmpresa.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrofactuempresa =(ParametroFactuEmpresa) this.parametrofactuempresas.toArray()[this.jTableDatosParametroFactuEmpresa.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrofactuempresa==null) {
						this.parametrofactuempresa = new ParametroFactuEmpresa();
					}

					this.setVariablesFormularioToObjetoActualParametroFactuEmpresa(this.parametrofactuempresa,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuEmpresa(this.parametrofactuempresa);
				}

				if(this.parametrofactuempresa.getcosto_origen()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where costo_origen = "+this.parametrofactuempresa.getcosto_origen().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroFactuEmpresa(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuempresaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuempresaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroFactuEmpresaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuempresaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_empresa_destinoParametroFactuEmpresaUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuempresaLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoempresadestino=true;

			idTienePermisoempresadestino=this.tienePermisosUsuarioEnPaginaWebParametroFactuEmpresa(EmpresaConstantesFunciones.CLASSNAME);

			if(idTienePermisoempresadestino) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroFactuEmpresa.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosParametroFactuEmpresa.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosParametroFactuEmpresa.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuempresa =(ParametroFactuEmpresa) this.parametrofactuempresaLogic.getParametroFactuEmpresas().toArray()[this.jTableDatosParametroFactuEmpresa.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.parametrofactuempresa =(ParametroFactuEmpresa) this.parametrofactuempresas.toArray()[this.jTableDatosParametroFactuEmpresa.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualParametroFactuEmpresa(this.getparametrofactuempresa(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuEmpresa(this.parametrofactuempresa);

				this.empresadestinoBeanSwingJInternalFrame=new EmpresaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.empresadestinoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.empresadestinoBeanSwingJInternalFrame.getEmpresaLogic().setConnexion(this.parametrofactuempresaLogic.getConnexion());

				if(this.parametrofactuempresa.getid_empresa_destino()!=null) {
					this.empresadestinoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.empresadestinoBeanSwingJInternalFrame.setIdActual(this.parametrofactuempresa.getid_empresa_destino());
					this.empresadestinoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.empresadestinoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.empresadestinoBeanSwingJInternalFrame.inicializarActualizarBindingTablaEmpresa();
				}

				JInternalFrameBase jinternalFrame =this.empresadestinoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderParametroFactuEmpresa=(TitledBorder)this.jScrollPanelDatosParametroFactuEmpresa.getBorder();
				TitledBorder titledBorderempresadestino=(TitledBorder)this.empresadestinoBeanSwingJInternalFrame.jScrollPanelDatosEmpresa.getBorder();

				titledBorderempresadestino.setTitle(titledBorderParametroFactuEmpresa.getTitle() + " -> Empresa");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuempresaLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuempresaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroFactuEmpresaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuempresaLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_empresa_destinoParametroFactuEmpresaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuempresaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroFactuEmpresa.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroFactuEmpresa(this.getparametrofactuempresa(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuEmpresa(this.parametrofactuempresa);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrofactuempresa =(ParametroFactuEmpresa) this.parametrofactuempresaLogic.getParametroFactuEmpresas().toArray()[this.jTableDatosParametroFactuEmpresa.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrofactuempresa =(ParametroFactuEmpresa) this.parametrofactuempresas.toArray()[this.jTableDatosParametroFactuEmpresa.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrofactuempresa==null) {
						this.parametrofactuempresa = new ParametroFactuEmpresa();
					}

					this.setVariablesFormularioToObjetoActualParametroFactuEmpresa(this.parametrofactuempresa,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuEmpresa(this.parametrofactuempresa);
				}

				if(this.parametrofactuempresa.getid_empresa_destino()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_empresa_destino = "+this.parametrofactuempresa.getid_empresa_destino().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroFactuEmpresa(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuempresaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuempresaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroFactuEmpresaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuempresaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_sucursal_destinoParametroFactuEmpresaUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuempresaLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisosucursaldestino=true;

			idTienePermisosucursaldestino=this.tienePermisosUsuarioEnPaginaWebParametroFactuEmpresa(SucursalConstantesFunciones.CLASSNAME);

			if(idTienePermisosucursaldestino) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroFactuEmpresa.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosParametroFactuEmpresa.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosParametroFactuEmpresa.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuempresa =(ParametroFactuEmpresa) this.parametrofactuempresaLogic.getParametroFactuEmpresas().toArray()[this.jTableDatosParametroFactuEmpresa.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.parametrofactuempresa =(ParametroFactuEmpresa) this.parametrofactuempresas.toArray()[this.jTableDatosParametroFactuEmpresa.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualParametroFactuEmpresa(this.getparametrofactuempresa(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuEmpresa(this.parametrofactuempresa);

				this.sucursaldestinoBeanSwingJInternalFrame=new SucursalBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.sucursaldestinoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.sucursaldestinoBeanSwingJInternalFrame.getSucursalLogic().setConnexion(this.parametrofactuempresaLogic.getConnexion());

				if(this.parametrofactuempresa.getid_sucursal_destino()!=null) {
					this.sucursaldestinoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.sucursaldestinoBeanSwingJInternalFrame.setIdActual(this.parametrofactuempresa.getid_sucursal_destino());
					this.sucursaldestinoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.sucursaldestinoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.sucursaldestinoBeanSwingJInternalFrame.inicializarActualizarBindingTablaSucursal();
				}

				JInternalFrameBase jinternalFrame =this.sucursaldestinoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderParametroFactuEmpresa=(TitledBorder)this.jScrollPanelDatosParametroFactuEmpresa.getBorder();
				TitledBorder titledBordersucursaldestino=(TitledBorder)this.sucursaldestinoBeanSwingJInternalFrame.jScrollPanelDatosSucursal.getBorder();

				titledBordersucursaldestino.setTitle(titledBorderParametroFactuEmpresa.getTitle() + " -> Sucursal");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuempresaLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuempresaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroFactuEmpresaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuempresaLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_sucursal_destinoParametroFactuEmpresaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuempresaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroFactuEmpresa.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroFactuEmpresa(this.getparametrofactuempresa(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuEmpresa(this.parametrofactuempresa);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrofactuempresa =(ParametroFactuEmpresa) this.parametrofactuempresaLogic.getParametroFactuEmpresas().toArray()[this.jTableDatosParametroFactuEmpresa.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrofactuempresa =(ParametroFactuEmpresa) this.parametrofactuempresas.toArray()[this.jTableDatosParametroFactuEmpresa.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrofactuempresa==null) {
						this.parametrofactuempresa = new ParametroFactuEmpresa();
					}

					this.setVariablesFormularioToObjetoActualParametroFactuEmpresa(this.parametrofactuempresa,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuEmpresa(this.parametrofactuempresa);
				}

				if(this.parametrofactuempresa.getid_sucursal_destino()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_sucursal_destino = "+this.parametrofactuempresa.getid_sucursal_destino().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroFactuEmpresa(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuempresaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuempresaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroFactuEmpresaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuempresaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_transaccion_destinoParametroFactuEmpresaUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuempresaLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotransacciondestino=true;

			idTienePermisotransacciondestino=this.tienePermisosUsuarioEnPaginaWebParametroFactuEmpresa(TransaccionConstantesFunciones.CLASSNAME);

			if(idTienePermisotransacciondestino) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroFactuEmpresa.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosParametroFactuEmpresa.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosParametroFactuEmpresa.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuempresa =(ParametroFactuEmpresa) this.parametrofactuempresaLogic.getParametroFactuEmpresas().toArray()[this.jTableDatosParametroFactuEmpresa.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.parametrofactuempresa =(ParametroFactuEmpresa) this.parametrofactuempresas.toArray()[this.jTableDatosParametroFactuEmpresa.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualParametroFactuEmpresa(this.getparametrofactuempresa(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuEmpresa(this.parametrofactuempresa);

				this.transacciondestinoBeanSwingJInternalFrame=new TransaccionBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.transacciondestinoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.transacciondestinoBeanSwingJInternalFrame.getTransaccionLogic().setConnexion(this.parametrofactuempresaLogic.getConnexion());

				if(this.parametrofactuempresa.getid_transaccion_destino()!=null) {
					this.transacciondestinoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.transacciondestinoBeanSwingJInternalFrame.setIdActual(this.parametrofactuempresa.getid_transaccion_destino());
					this.transacciondestinoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.transacciondestinoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.transacciondestinoBeanSwingJInternalFrame.inicializarActualizarBindingTablaTransaccion();
				}

				JInternalFrameBase jinternalFrame =this.transacciondestinoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderParametroFactuEmpresa=(TitledBorder)this.jScrollPanelDatosParametroFactuEmpresa.getBorder();
				TitledBorder titledBordertransacciondestino=(TitledBorder)this.transacciondestinoBeanSwingJInternalFrame.jScrollPanelDatosTransaccion.getBorder();

				titledBordertransacciondestino.setTitle(titledBorderParametroFactuEmpresa.getTitle() + " -> Transaccion");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuempresaLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuempresaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroFactuEmpresaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuempresaLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_transaccion_destinoParametroFactuEmpresaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuempresaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroFactuEmpresa.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroFactuEmpresa(this.getparametrofactuempresa(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuEmpresa(this.parametrofactuempresa);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrofactuempresa =(ParametroFactuEmpresa) this.parametrofactuempresaLogic.getParametroFactuEmpresas().toArray()[this.jTableDatosParametroFactuEmpresa.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrofactuempresa =(ParametroFactuEmpresa) this.parametrofactuempresas.toArray()[this.jTableDatosParametroFactuEmpresa.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrofactuempresa==null) {
						this.parametrofactuempresa = new ParametroFactuEmpresa();
					}

					this.setVariablesFormularioToObjetoActualParametroFactuEmpresa(this.parametrofactuempresa,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuEmpresa(this.parametrofactuempresa);
				}

				if(this.parametrofactuempresa.getid_transaccion_destino()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_transaccion_destino = "+this.parametrofactuempresa.getid_transaccion_destino().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroFactuEmpresa(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuempresaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuempresaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroFactuEmpresaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuempresaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_bodega_destinoParametroFactuEmpresaUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuempresaLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisobodegadestino=true;

			idTienePermisobodegadestino=this.tienePermisosUsuarioEnPaginaWebParametroFactuEmpresa(BodegaConstantesFunciones.CLASSNAME);

			if(idTienePermisobodegadestino) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroFactuEmpresa.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosParametroFactuEmpresa.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosParametroFactuEmpresa.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuempresa =(ParametroFactuEmpresa) this.parametrofactuempresaLogic.getParametroFactuEmpresas().toArray()[this.jTableDatosParametroFactuEmpresa.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.parametrofactuempresa =(ParametroFactuEmpresa) this.parametrofactuempresas.toArray()[this.jTableDatosParametroFactuEmpresa.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualParametroFactuEmpresa(this.getparametrofactuempresa(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuEmpresa(this.parametrofactuempresa);

				this.bodegadestinoBeanSwingJInternalFrame=new BodegaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.bodegadestinoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.bodegadestinoBeanSwingJInternalFrame.getBodegaLogic().setConnexion(this.parametrofactuempresaLogic.getConnexion());

				if(this.parametrofactuempresa.getid_bodega_destino()!=null) {
					this.bodegadestinoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.bodegadestinoBeanSwingJInternalFrame.setIdActual(this.parametrofactuempresa.getid_bodega_destino());
					this.bodegadestinoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.bodegadestinoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.bodegadestinoBeanSwingJInternalFrame.inicializarActualizarBindingTablaBodega();
				}

				JInternalFrameBase jinternalFrame =this.bodegadestinoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderParametroFactuEmpresa=(TitledBorder)this.jScrollPanelDatosParametroFactuEmpresa.getBorder();
				TitledBorder titledBorderbodegadestino=(TitledBorder)this.bodegadestinoBeanSwingJInternalFrame.jScrollPanelDatosBodega.getBorder();

				titledBorderbodegadestino.setTitle(titledBorderParametroFactuEmpresa.getTitle() + " -> Bodega");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuempresaLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuempresaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroFactuEmpresaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuempresaLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_bodega_destinoParametroFactuEmpresaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuempresaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroFactuEmpresa.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroFactuEmpresa(this.getparametrofactuempresa(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuEmpresa(this.parametrofactuempresa);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrofactuempresa =(ParametroFactuEmpresa) this.parametrofactuempresaLogic.getParametroFactuEmpresas().toArray()[this.jTableDatosParametroFactuEmpresa.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrofactuempresa =(ParametroFactuEmpresa) this.parametrofactuempresas.toArray()[this.jTableDatosParametroFactuEmpresa.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrofactuempresa==null) {
						this.parametrofactuempresa = new ParametroFactuEmpresa();
					}

					this.setVariablesFormularioToObjetoActualParametroFactuEmpresa(this.parametrofactuempresa,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuEmpresa(this.parametrofactuempresa);
				}

				if(this.parametrofactuempresa.getid_bodega_destino()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_bodega_destino = "+this.parametrofactuempresa.getid_bodega_destino().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroFactuEmpresa(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuempresaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuempresaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroFactuEmpresaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuempresaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_cliente_destinoParametroFactuEmpresaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {
			this.clientedestinoBeanSwingJInternalFrame=new ClienteBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
			this.clientedestinoBeanSwingJInternalFrame.setJInternalFrameParent(this);
			this.clientedestinoBeanSwingJInternalFrame.sTipoBusqueda="ClienteDestino";

			if(!this.sFinalQueryGeneral_clientedestino.equals("")) {
				this.clientedestinoBeanSwingJInternalFrame.setsFinalQueryGeneral(this.sFinalQueryGeneral_clientedestino);
				this.clientedestinoBeanSwingJInternalFrame.sAccionBusqueda="Query";


				this.clientedestinoBeanSwingJInternalFrame.procesarBusqueda(this.clientedestinoBeanSwingJInternalFrame.sAccionBusqueda);
				this.clientedestinoBeanSwingJInternalFrame.inicializarActualizarBindingCliente(false);
			}

			if(!this.sFinalQueryComboClienteDestino.equals("") && false) {
			}


			JInternalFrameBase jinternalFrame =this.clientedestinoBeanSwingJInternalFrame;
			jinternalFrame.setAutoscrolls(true);
			//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
			jinternalFrame.setVisible(true); 


			TitledBorder titledBorderParametroFactuEmpresa=null;
			TitledBorder titledBorderclientedestino=null;

			if(!this.jScrollPanelDatosParametroFactuEmpresa.getBorder().getClass().equals(EmptyBorder.class)) {
				titledBorderParametroFactuEmpresa=(TitledBorder)this.jScrollPanelDatosParametroFactuEmpresa.getBorder();
				titledBorderclientedestino=(TitledBorder)this.clientedestinoBeanSwingJInternalFrame.jScrollPanelDatosCliente.getBorder();

				titledBorderclientedestino.setTitle(titledBorderParametroFactuEmpresa.getTitle() + " -> Cliente");
			}

			if(!Constantes.CON_VARIAS_VENTANAS) {
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
			}

			this.jDesktopPane.add(jinternalFrame);

			jinternalFrame.setSelected(true);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroFactuEmpresaConstantesFunciones.CLASSNAME);
		}
	}

	public void jButtonid_cliente_destinoParametroFactuEmpresaUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuempresaLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoclientedestino=true;

			idTienePermisoclientedestino=this.tienePermisosUsuarioEnPaginaWebParametroFactuEmpresa(ClienteConstantesFunciones.CLASSNAME);

			if(idTienePermisoclientedestino) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroFactuEmpresa.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosParametroFactuEmpresa.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosParametroFactuEmpresa.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuempresa =(ParametroFactuEmpresa) this.parametrofactuempresaLogic.getParametroFactuEmpresas().toArray()[this.jTableDatosParametroFactuEmpresa.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.parametrofactuempresa =(ParametroFactuEmpresa) this.parametrofactuempresas.toArray()[this.jTableDatosParametroFactuEmpresa.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualParametroFactuEmpresa(this.getparametrofactuempresa(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuEmpresa(this.parametrofactuempresa);

				this.clientedestinoBeanSwingJInternalFrame=new ClienteBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.clientedestinoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.clientedestinoBeanSwingJInternalFrame.getClienteLogic().setConnexion(this.parametrofactuempresaLogic.getConnexion());

				if(this.parametrofactuempresa.getid_cliente_destino()!=null) {
					this.clientedestinoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.clientedestinoBeanSwingJInternalFrame.setIdActual(this.parametrofactuempresa.getid_cliente_destino());
					this.clientedestinoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.clientedestinoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.clientedestinoBeanSwingJInternalFrame.inicializarActualizarBindingTablaCliente();
				}

				JInternalFrameBase jinternalFrame =this.clientedestinoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderParametroFactuEmpresa=(TitledBorder)this.jScrollPanelDatosParametroFactuEmpresa.getBorder();
				TitledBorder titledBorderclientedestino=(TitledBorder)this.clientedestinoBeanSwingJInternalFrame.jScrollPanelDatosCliente.getBorder();

				titledBorderclientedestino.setTitle(titledBorderParametroFactuEmpresa.getTitle() + " -> Cliente");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuempresaLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuempresaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroFactuEmpresaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuempresaLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_cliente_destinoParametroFactuEmpresaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuempresaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroFactuEmpresa.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroFactuEmpresa(this.getparametrofactuempresa(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuEmpresa(this.parametrofactuempresa);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrofactuempresa =(ParametroFactuEmpresa) this.parametrofactuempresaLogic.getParametroFactuEmpresas().toArray()[this.jTableDatosParametroFactuEmpresa.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrofactuempresa =(ParametroFactuEmpresa) this.parametrofactuempresas.toArray()[this.jTableDatosParametroFactuEmpresa.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrofactuempresa==null) {
						this.parametrofactuempresa = new ParametroFactuEmpresa();
					}

					this.setVariablesFormularioToObjetoActualParametroFactuEmpresa(this.parametrofactuempresa,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuEmpresa(this.parametrofactuempresa);
				}

				if(this.parametrofactuempresa.getid_cliente_destino()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_cliente_destino = "+this.parametrofactuempresa.getid_cliente_destino().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroFactuEmpresa(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuempresaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuempresaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroFactuEmpresaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuempresaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtoncosto_destinoParametroFactuEmpresaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuempresaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroFactuEmpresa.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroFactuEmpresa(this.getparametrofactuempresa(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuEmpresa(this.parametrofactuempresa);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrofactuempresa =(ParametroFactuEmpresa) this.parametrofactuempresaLogic.getParametroFactuEmpresas().toArray()[this.jTableDatosParametroFactuEmpresa.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrofactuempresa =(ParametroFactuEmpresa) this.parametrofactuempresas.toArray()[this.jTableDatosParametroFactuEmpresa.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrofactuempresa==null) {
						this.parametrofactuempresa = new ParametroFactuEmpresa();
					}

					this.setVariablesFormularioToObjetoActualParametroFactuEmpresa(this.parametrofactuempresa,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuEmpresa(this.parametrofactuempresa);
				}

				if(this.parametrofactuempresa.getcosto_destino()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where costo_destino = "+this.parametrofactuempresa.getcosto_destino().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroFactuEmpresa(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuempresaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuempresaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroFactuEmpresaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuempresaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtoncon_transferenciaParametroFactuEmpresaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuempresaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroFactuEmpresa.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroFactuEmpresa(this.getparametrofactuempresa(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuEmpresa(this.parametrofactuempresa);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrofactuempresa =(ParametroFactuEmpresa) this.parametrofactuempresaLogic.getParametroFactuEmpresas().toArray()[this.jTableDatosParametroFactuEmpresa.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrofactuempresa =(ParametroFactuEmpresa) this.parametrofactuempresas.toArray()[this.jTableDatosParametroFactuEmpresa.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrofactuempresa==null) {
						this.parametrofactuempresa = new ParametroFactuEmpresa();
					}

					this.setVariablesFormularioToObjetoActualParametroFactuEmpresa(this.parametrofactuempresa,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuEmpresa(this.parametrofactuempresa);
				}

				if(this.parametrofactuempresa.getcon_transferencia()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where con_transferencia = "+this.parametrofactuempresa.getcon_transferencia().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroFactuEmpresa(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuempresaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuempresaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroFactuEmpresaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuempresaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_empresa_multi_destinoParametroFactuEmpresaUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuempresaLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoempresamultidestino=true;

			idTienePermisoempresamultidestino=this.tienePermisosUsuarioEnPaginaWebParametroFactuEmpresa(EmpresaConstantesFunciones.CLASSNAME);

			if(idTienePermisoempresamultidestino) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroFactuEmpresa.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosParametroFactuEmpresa.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosParametroFactuEmpresa.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuempresa =(ParametroFactuEmpresa) this.parametrofactuempresaLogic.getParametroFactuEmpresas().toArray()[this.jTableDatosParametroFactuEmpresa.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.parametrofactuempresa =(ParametroFactuEmpresa) this.parametrofactuempresas.toArray()[this.jTableDatosParametroFactuEmpresa.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualParametroFactuEmpresa(this.getparametrofactuempresa(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuEmpresa(this.parametrofactuempresa);

				this.empresamultidestinoBeanSwingJInternalFrame=new EmpresaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.empresamultidestinoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.empresamultidestinoBeanSwingJInternalFrame.getEmpresaLogic().setConnexion(this.parametrofactuempresaLogic.getConnexion());

				if(this.parametrofactuempresa.getid_empresa_multi_destino()!=null) {
					this.empresamultidestinoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.empresamultidestinoBeanSwingJInternalFrame.setIdActual(this.parametrofactuempresa.getid_empresa_multi_destino());
					this.empresamultidestinoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.empresamultidestinoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.empresamultidestinoBeanSwingJInternalFrame.inicializarActualizarBindingTablaEmpresa();
				}

				JInternalFrameBase jinternalFrame =this.empresamultidestinoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderParametroFactuEmpresa=(TitledBorder)this.jScrollPanelDatosParametroFactuEmpresa.getBorder();
				TitledBorder titledBorderempresamultidestino=(TitledBorder)this.empresamultidestinoBeanSwingJInternalFrame.jScrollPanelDatosEmpresa.getBorder();

				titledBorderempresamultidestino.setTitle(titledBorderParametroFactuEmpresa.getTitle() + " -> Empresa");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuempresaLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuempresaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroFactuEmpresaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuempresaLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_empresa_multi_destinoParametroFactuEmpresaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuempresaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroFactuEmpresa.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroFactuEmpresa(this.getparametrofactuempresa(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuEmpresa(this.parametrofactuempresa);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrofactuempresa =(ParametroFactuEmpresa) this.parametrofactuempresaLogic.getParametroFactuEmpresas().toArray()[this.jTableDatosParametroFactuEmpresa.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrofactuempresa =(ParametroFactuEmpresa) this.parametrofactuempresas.toArray()[this.jTableDatosParametroFactuEmpresa.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrofactuempresa==null) {
						this.parametrofactuempresa = new ParametroFactuEmpresa();
					}

					this.setVariablesFormularioToObjetoActualParametroFactuEmpresa(this.parametrofactuempresa,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuEmpresa(this.parametrofactuempresa);
				}

				if(this.parametrofactuempresa.getid_empresa_multi_destino()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_empresa_multi_destino = "+this.parametrofactuempresa.getid_empresa_multi_destino().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroFactuEmpresa(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuempresaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuempresaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroFactuEmpresaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuempresaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_sucursal_multi_destinoParametroFactuEmpresaUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuempresaLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisosucursalmultidestino=true;

			idTienePermisosucursalmultidestino=this.tienePermisosUsuarioEnPaginaWebParametroFactuEmpresa(SucursalConstantesFunciones.CLASSNAME);

			if(idTienePermisosucursalmultidestino) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroFactuEmpresa.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosParametroFactuEmpresa.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosParametroFactuEmpresa.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuempresa =(ParametroFactuEmpresa) this.parametrofactuempresaLogic.getParametroFactuEmpresas().toArray()[this.jTableDatosParametroFactuEmpresa.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.parametrofactuempresa =(ParametroFactuEmpresa) this.parametrofactuempresas.toArray()[this.jTableDatosParametroFactuEmpresa.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualParametroFactuEmpresa(this.getparametrofactuempresa(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuEmpresa(this.parametrofactuempresa);

				this.sucursalmultidestinoBeanSwingJInternalFrame=new SucursalBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.sucursalmultidestinoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.sucursalmultidestinoBeanSwingJInternalFrame.getSucursalLogic().setConnexion(this.parametrofactuempresaLogic.getConnexion());

				if(this.parametrofactuempresa.getid_sucursal_multi_destino()!=null) {
					this.sucursalmultidestinoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.sucursalmultidestinoBeanSwingJInternalFrame.setIdActual(this.parametrofactuempresa.getid_sucursal_multi_destino());
					this.sucursalmultidestinoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.sucursalmultidestinoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.sucursalmultidestinoBeanSwingJInternalFrame.inicializarActualizarBindingTablaSucursal();
				}

				JInternalFrameBase jinternalFrame =this.sucursalmultidestinoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderParametroFactuEmpresa=(TitledBorder)this.jScrollPanelDatosParametroFactuEmpresa.getBorder();
				TitledBorder titledBordersucursalmultidestino=(TitledBorder)this.sucursalmultidestinoBeanSwingJInternalFrame.jScrollPanelDatosSucursal.getBorder();

				titledBordersucursalmultidestino.setTitle(titledBorderParametroFactuEmpresa.getTitle() + " -> Sucursal");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuempresaLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuempresaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroFactuEmpresaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuempresaLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_sucursal_multi_destinoParametroFactuEmpresaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuempresaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroFactuEmpresa.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroFactuEmpresa(this.getparametrofactuempresa(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuEmpresa(this.parametrofactuempresa);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrofactuempresa =(ParametroFactuEmpresa) this.parametrofactuempresaLogic.getParametroFactuEmpresas().toArray()[this.jTableDatosParametroFactuEmpresa.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrofactuempresa =(ParametroFactuEmpresa) this.parametrofactuempresas.toArray()[this.jTableDatosParametroFactuEmpresa.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrofactuempresa==null) {
						this.parametrofactuempresa = new ParametroFactuEmpresa();
					}

					this.setVariablesFormularioToObjetoActualParametroFactuEmpresa(this.parametrofactuempresa,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuEmpresa(this.parametrofactuempresa);
				}

				if(this.parametrofactuempresa.getid_sucursal_multi_destino()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_sucursal_multi_destino = "+this.parametrofactuempresa.getid_sucursal_multi_destino().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroFactuEmpresa(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuempresaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuempresaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroFactuEmpresaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuempresaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_transaccion_multi_destinoParametroFactuEmpresaUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuempresaLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotransaccionmultidestino=true;

			idTienePermisotransaccionmultidestino=this.tienePermisosUsuarioEnPaginaWebParametroFactuEmpresa(TransaccionConstantesFunciones.CLASSNAME);

			if(idTienePermisotransaccionmultidestino) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroFactuEmpresa.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosParametroFactuEmpresa.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosParametroFactuEmpresa.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuempresa =(ParametroFactuEmpresa) this.parametrofactuempresaLogic.getParametroFactuEmpresas().toArray()[this.jTableDatosParametroFactuEmpresa.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.parametrofactuempresa =(ParametroFactuEmpresa) this.parametrofactuempresas.toArray()[this.jTableDatosParametroFactuEmpresa.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualParametroFactuEmpresa(this.getparametrofactuempresa(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuEmpresa(this.parametrofactuempresa);

				this.transaccionmultidestinoBeanSwingJInternalFrame=new TransaccionBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.transaccionmultidestinoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.transaccionmultidestinoBeanSwingJInternalFrame.getTransaccionLogic().setConnexion(this.parametrofactuempresaLogic.getConnexion());

				if(this.parametrofactuempresa.getid_transaccion_multi_destino()!=null) {
					this.transaccionmultidestinoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.transaccionmultidestinoBeanSwingJInternalFrame.setIdActual(this.parametrofactuempresa.getid_transaccion_multi_destino());
					this.transaccionmultidestinoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.transaccionmultidestinoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.transaccionmultidestinoBeanSwingJInternalFrame.inicializarActualizarBindingTablaTransaccion();
				}

				JInternalFrameBase jinternalFrame =this.transaccionmultidestinoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderParametroFactuEmpresa=(TitledBorder)this.jScrollPanelDatosParametroFactuEmpresa.getBorder();
				TitledBorder titledBordertransaccionmultidestino=(TitledBorder)this.transaccionmultidestinoBeanSwingJInternalFrame.jScrollPanelDatosTransaccion.getBorder();

				titledBordertransaccionmultidestino.setTitle(titledBorderParametroFactuEmpresa.getTitle() + " -> Transaccion");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuempresaLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuempresaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroFactuEmpresaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuempresaLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_transaccion_multi_destinoParametroFactuEmpresaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuempresaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroFactuEmpresa.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroFactuEmpresa(this.getparametrofactuempresa(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuEmpresa(this.parametrofactuempresa);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrofactuempresa =(ParametroFactuEmpresa) this.parametrofactuempresaLogic.getParametroFactuEmpresas().toArray()[this.jTableDatosParametroFactuEmpresa.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrofactuempresa =(ParametroFactuEmpresa) this.parametrofactuempresas.toArray()[this.jTableDatosParametroFactuEmpresa.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrofactuempresa==null) {
						this.parametrofactuempresa = new ParametroFactuEmpresa();
					}

					this.setVariablesFormularioToObjetoActualParametroFactuEmpresa(this.parametrofactuempresa,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuEmpresa(this.parametrofactuempresa);
				}

				if(this.parametrofactuempresa.getid_transaccion_multi_destino()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_transaccion_multi_destino = "+this.parametrofactuempresa.getid_transaccion_multi_destino().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroFactuEmpresa(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuempresaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuempresaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroFactuEmpresaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuempresaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_bodega_multi_origenParametroFactuEmpresaUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuempresaLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisobodegamultiorigen=true;

			idTienePermisobodegamultiorigen=this.tienePermisosUsuarioEnPaginaWebParametroFactuEmpresa(BodegaConstantesFunciones.CLASSNAME);

			if(idTienePermisobodegamultiorigen) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroFactuEmpresa.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosParametroFactuEmpresa.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosParametroFactuEmpresa.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuempresa =(ParametroFactuEmpresa) this.parametrofactuempresaLogic.getParametroFactuEmpresas().toArray()[this.jTableDatosParametroFactuEmpresa.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.parametrofactuempresa =(ParametroFactuEmpresa) this.parametrofactuempresas.toArray()[this.jTableDatosParametroFactuEmpresa.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualParametroFactuEmpresa(this.getparametrofactuempresa(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuEmpresa(this.parametrofactuempresa);

				this.bodegamultiorigenBeanSwingJInternalFrame=new BodegaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.bodegamultiorigenBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.bodegamultiorigenBeanSwingJInternalFrame.getBodegaLogic().setConnexion(this.parametrofactuempresaLogic.getConnexion());

				if(this.parametrofactuempresa.getid_bodega_multi_origen()!=null) {
					this.bodegamultiorigenBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.bodegamultiorigenBeanSwingJInternalFrame.setIdActual(this.parametrofactuempresa.getid_bodega_multi_origen());
					this.bodegamultiorigenBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.bodegamultiorigenBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.bodegamultiorigenBeanSwingJInternalFrame.inicializarActualizarBindingTablaBodega();
				}

				JInternalFrameBase jinternalFrame =this.bodegamultiorigenBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderParametroFactuEmpresa=(TitledBorder)this.jScrollPanelDatosParametroFactuEmpresa.getBorder();
				TitledBorder titledBorderbodegamultiorigen=(TitledBorder)this.bodegamultiorigenBeanSwingJInternalFrame.jScrollPanelDatosBodega.getBorder();

				titledBorderbodegamultiorigen.setTitle(titledBorderParametroFactuEmpresa.getTitle() + " -> Bodega");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuempresaLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuempresaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroFactuEmpresaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuempresaLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_bodega_multi_origenParametroFactuEmpresaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuempresaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroFactuEmpresa.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroFactuEmpresa(this.getparametrofactuempresa(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuEmpresa(this.parametrofactuempresa);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrofactuempresa =(ParametroFactuEmpresa) this.parametrofactuempresaLogic.getParametroFactuEmpresas().toArray()[this.jTableDatosParametroFactuEmpresa.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrofactuempresa =(ParametroFactuEmpresa) this.parametrofactuempresas.toArray()[this.jTableDatosParametroFactuEmpresa.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrofactuempresa==null) {
						this.parametrofactuempresa = new ParametroFactuEmpresa();
					}

					this.setVariablesFormularioToObjetoActualParametroFactuEmpresa(this.parametrofactuempresa,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuEmpresa(this.parametrofactuempresa);
				}

				if(this.parametrofactuempresa.getid_bodega_multi_origen()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_bodega_multi_origen = "+this.parametrofactuempresa.getid_bodega_multi_origen().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroFactuEmpresa(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuempresaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuempresaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroFactuEmpresaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuempresaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_bodega_multi_destinoParametroFactuEmpresaUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuempresaLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisobodegamultidestino=true;

			idTienePermisobodegamultidestino=this.tienePermisosUsuarioEnPaginaWebParametroFactuEmpresa(BodegaConstantesFunciones.CLASSNAME);

			if(idTienePermisobodegamultidestino) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroFactuEmpresa.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosParametroFactuEmpresa.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosParametroFactuEmpresa.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuempresa =(ParametroFactuEmpresa) this.parametrofactuempresaLogic.getParametroFactuEmpresas().toArray()[this.jTableDatosParametroFactuEmpresa.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.parametrofactuempresa =(ParametroFactuEmpresa) this.parametrofactuempresas.toArray()[this.jTableDatosParametroFactuEmpresa.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualParametroFactuEmpresa(this.getparametrofactuempresa(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuEmpresa(this.parametrofactuempresa);

				this.bodegamultidestinoBeanSwingJInternalFrame=new BodegaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.bodegamultidestinoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.bodegamultidestinoBeanSwingJInternalFrame.getBodegaLogic().setConnexion(this.parametrofactuempresaLogic.getConnexion());

				if(this.parametrofactuempresa.getid_bodega_multi_destino()!=null) {
					this.bodegamultidestinoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.bodegamultidestinoBeanSwingJInternalFrame.setIdActual(this.parametrofactuempresa.getid_bodega_multi_destino());
					this.bodegamultidestinoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.bodegamultidestinoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.bodegamultidestinoBeanSwingJInternalFrame.inicializarActualizarBindingTablaBodega();
				}

				JInternalFrameBase jinternalFrame =this.bodegamultidestinoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderParametroFactuEmpresa=(TitledBorder)this.jScrollPanelDatosParametroFactuEmpresa.getBorder();
				TitledBorder titledBorderbodegamultidestino=(TitledBorder)this.bodegamultidestinoBeanSwingJInternalFrame.jScrollPanelDatosBodega.getBorder();

				titledBorderbodegamultidestino.setTitle(titledBorderParametroFactuEmpresa.getTitle() + " -> Bodega");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuempresaLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuempresaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroFactuEmpresaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuempresaLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_bodega_multi_destinoParametroFactuEmpresaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuempresaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroFactuEmpresa.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroFactuEmpresa(this.getparametrofactuempresa(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuEmpresa(this.parametrofactuempresa);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrofactuempresa =(ParametroFactuEmpresa) this.parametrofactuempresaLogic.getParametroFactuEmpresas().toArray()[this.jTableDatosParametroFactuEmpresa.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrofactuempresa =(ParametroFactuEmpresa) this.parametrofactuempresas.toArray()[this.jTableDatosParametroFactuEmpresa.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrofactuempresa==null) {
						this.parametrofactuempresa = new ParametroFactuEmpresa();
					}

					this.setVariablesFormularioToObjetoActualParametroFactuEmpresa(this.parametrofactuempresa,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuEmpresa(this.parametrofactuempresa);
				}

				if(this.parametrofactuempresa.getid_bodega_multi_destino()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_bodega_multi_destino = "+this.parametrofactuempresa.getid_bodega_multi_destino().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroFactuEmpresa(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuempresaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuempresaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroFactuEmpresaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuempresaLogic.closeNewConnexionToDeep();
				}

			}
		}

	
	
	public void jButtonFK_IdBodegaDestinoParametroFactuEmpresaActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuempresaLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingParametroFactuEmpresa(false,false);

			this.getParametroFactuEmpresasFK_IdBodegaDestino();

			this.inicializarActualizarBindingParametroFactuEmpresa(false);

			//if(ParametroFactuEmpresaBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingParametroFactuEmpresa(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuempresaLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuempresaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroFactuEmpresaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuempresaLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdBodegaMultiDestinoParametroFactuEmpresaActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuempresaLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingParametroFactuEmpresa(false,false);

			this.getParametroFactuEmpresasFK_IdBodegaMultiDestino();

			this.inicializarActualizarBindingParametroFactuEmpresa(false);

			//if(ParametroFactuEmpresaBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingParametroFactuEmpresa(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuempresaLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuempresaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroFactuEmpresaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuempresaLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdBodegaMultiOrigenParametroFactuEmpresaActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuempresaLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingParametroFactuEmpresa(false,false);

			this.getParametroFactuEmpresasFK_IdBodegaMultiOrigen();

			this.inicializarActualizarBindingParametroFactuEmpresa(false);

			//if(ParametroFactuEmpresaBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingParametroFactuEmpresa(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuempresaLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuempresaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroFactuEmpresaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuempresaLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdBodegaOrigenParametroFactuEmpresaActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuempresaLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingParametroFactuEmpresa(false,false);

			this.getParametroFactuEmpresasFK_IdBodegaOrigen();

			this.inicializarActualizarBindingParametroFactuEmpresa(false);

			//if(ParametroFactuEmpresaBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingParametroFactuEmpresa(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuempresaLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuempresaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroFactuEmpresaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuempresaLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdClienteDestinoParametroFactuEmpresaActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuempresaLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingParametroFactuEmpresa(false,false);

			this.getParametroFactuEmpresasFK_IdClienteDestino();

			this.inicializarActualizarBindingParametroFactuEmpresa(false);

			//if(ParametroFactuEmpresaBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingParametroFactuEmpresa(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuempresaLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuempresaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroFactuEmpresaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuempresaLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdClienteOrigenParametroFactuEmpresaActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuempresaLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingParametroFactuEmpresa(false,false);

			this.getParametroFactuEmpresasFK_IdClienteOrigen();

			this.inicializarActualizarBindingParametroFactuEmpresa(false);

			//if(ParametroFactuEmpresaBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingParametroFactuEmpresa(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuempresaLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuempresaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroFactuEmpresaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuempresaLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdEmpresaParametroFactuEmpresaActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuempresaLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingParametroFactuEmpresa(false,false);

			this.getParametroFactuEmpresasFK_IdEmpresa();

			this.inicializarActualizarBindingParametroFactuEmpresa(false);

			//if(ParametroFactuEmpresaBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingParametroFactuEmpresa(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuempresaLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuempresaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroFactuEmpresaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuempresaLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdEmpresaDestinoParametroFactuEmpresaActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuempresaLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingParametroFactuEmpresa(false,false);

			this.getParametroFactuEmpresasFK_IdEmpresaDestino();

			this.inicializarActualizarBindingParametroFactuEmpresa(false);

			//if(ParametroFactuEmpresaBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingParametroFactuEmpresa(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuempresaLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuempresaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroFactuEmpresaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuempresaLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdEmpresaMultiDestinoParametroFactuEmpresaActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuempresaLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingParametroFactuEmpresa(false,false);

			this.getParametroFactuEmpresasFK_IdEmpresaMultiDestino();

			this.inicializarActualizarBindingParametroFactuEmpresa(false);

			//if(ParametroFactuEmpresaBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingParametroFactuEmpresa(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuempresaLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuempresaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroFactuEmpresaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuempresaLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdEmpresaOrigenParametroFactuEmpresaActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuempresaLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingParametroFactuEmpresa(false,false);

			this.getParametroFactuEmpresasFK_IdEmpresaOrigen();

			this.inicializarActualizarBindingParametroFactuEmpresa(false);

			//if(ParametroFactuEmpresaBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingParametroFactuEmpresa(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuempresaLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuempresaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroFactuEmpresaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuempresaLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdSucursalParametroFactuEmpresaActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuempresaLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingParametroFactuEmpresa(false,false);

			this.getParametroFactuEmpresasFK_IdSucursal();

			this.inicializarActualizarBindingParametroFactuEmpresa(false);

			//if(ParametroFactuEmpresaBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingParametroFactuEmpresa(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuempresaLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuempresaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroFactuEmpresaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuempresaLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdSucursalDestinoParametroFactuEmpresaActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuempresaLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingParametroFactuEmpresa(false,false);

			this.getParametroFactuEmpresasFK_IdSucursalDestino();

			this.inicializarActualizarBindingParametroFactuEmpresa(false);

			//if(ParametroFactuEmpresaBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingParametroFactuEmpresa(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuempresaLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuempresaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroFactuEmpresaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuempresaLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdSucursalMultiDestinoParametroFactuEmpresaActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuempresaLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingParametroFactuEmpresa(false,false);

			this.getParametroFactuEmpresasFK_IdSucursalMultiDestino();

			this.inicializarActualizarBindingParametroFactuEmpresa(false);

			//if(ParametroFactuEmpresaBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingParametroFactuEmpresa(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuempresaLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuempresaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroFactuEmpresaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuempresaLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdTransaccionDestinoParametroFactuEmpresaActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuempresaLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingParametroFactuEmpresa(false,false);

			this.getParametroFactuEmpresasFK_IdTransaccionDestino();

			this.inicializarActualizarBindingParametroFactuEmpresa(false);

			//if(ParametroFactuEmpresaBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingParametroFactuEmpresa(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuempresaLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuempresaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroFactuEmpresaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuempresaLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdTransaccionMultiDestinoParametroFactuEmpresaActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuempresaLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingParametroFactuEmpresa(false,false);

			this.getParametroFactuEmpresasFK_IdTransaccionMultiDestino();

			this.inicializarActualizarBindingParametroFactuEmpresa(false);

			//if(ParametroFactuEmpresaBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingParametroFactuEmpresa(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuempresaLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuempresaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroFactuEmpresaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuempresaLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdTransaccionOrigenParametroFactuEmpresaActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuempresaLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingParametroFactuEmpresa(false,false);

			this.getParametroFactuEmpresasFK_IdTransaccionOrigen();

			this.inicializarActualizarBindingParametroFactuEmpresa(false);

			//if(ParametroFactuEmpresaBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingParametroFactuEmpresa(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuempresaLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuempresaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroFactuEmpresaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuempresaLogic.closeNewConnexionToDeep();
			}
		}
	}

	
	public void closingInternalFrameParametroFactuEmpresa() {
		if(this.jInternalFrameDetalleFormParametroFactuEmpresa!=null) {
			
		
		
		}
		
		if(this.jInternalFrameDetalleFormParametroFactuEmpresa!=null) {
			this.jInternalFrameDetalleFormParametroFactuEmpresa.setVisible(false);	    			
			this.jInternalFrameDetalleFormParametroFactuEmpresa.dispose();
			this.jInternalFrameDetalleFormParametroFactuEmpresa=null;
		}
		
		
		if(this.jInternalFrameReporteDinamicoParametroFactuEmpresa!=null) {
			this.jInternalFrameReporteDinamicoParametroFactuEmpresa.setVisible(false);	    			
			this.jInternalFrameReporteDinamicoParametroFactuEmpresa.dispose();
			this.jInternalFrameReporteDinamicoParametroFactuEmpresa=null;
		}
		
		if(this.jInternalFrameImportacionParametroFactuEmpresa!=null) {
			this.jInternalFrameImportacionParametroFactuEmpresa.setVisible(false);	    			
			this.jInternalFrameImportacionParametroFactuEmpresa.dispose();
			this.jInternalFrameImportacionParametroFactuEmpresa=null;
		}		
		
		
		this.setVisible(false);
		this.dispose();
		//this=null;
	}
	
	
	
	public void jButtonActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {			
			this.startProcessParametroFactuEmpresa();
			
			ParametroFactuEmpresaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.BUTTON,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.parametrofactuempresa,new Object(),this.parametrofactuempresaParameterGeneral,this.parametrofactuempresaReturnGeneral);
			
			
			if(sTipo.equals("NuevoParametroFactuEmpresa")) {
				jButtonNuevoParametroFactuEmpresaActionPerformed(evt,false);
			} else if(sTipo.equals("DuplicarParametroFactuEmpresa")) {
				jButtonDuplicarParametroFactuEmpresaActionPerformed(evt,false);
			} else if(sTipo.equals("CopiarParametroFactuEmpresa")) {
				jButtonCopiarParametroFactuEmpresaActionPerformed(evt);
			} else if(sTipo.equals("VerFormParametroFactuEmpresa")) {
				jButtonVerFormParametroFactuEmpresaActionPerformed(evt);
			} else if(sTipo.equals("NuevoToolBarParametroFactuEmpresa")) {
				jButtonNuevoParametroFactuEmpresaActionPerformed(evt,false);
			} else if(sTipo.equals("DuplicarToolBarParametroFactuEmpresa")) {
				jButtonDuplicarParametroFactuEmpresaActionPerformed(evt,false);
			} else if(sTipo.equals("MenuItemNuevoParametroFactuEmpresa")) {
				jButtonNuevoParametroFactuEmpresaActionPerformed(evt,false);
			} else if(sTipo.equals("MenuItemDuplicarParametroFactuEmpresa")) {
				jButtonDuplicarParametroFactuEmpresaActionPerformed(evt,false);
			} else if(sTipo.equals("NuevoRelacionesParametroFactuEmpresa")) {
				jButtonNuevoParametroFactuEmpresaActionPerformed(evt,true);
			} else if(sTipo.equals("NuevoRelacionesToolBarParametroFactuEmpresa")) {
				jButtonNuevoParametroFactuEmpresaActionPerformed(evt,true);
			} else if(sTipo.equals("MenuItemNuevoRelacionesParametroFactuEmpresa")) {
				jButtonNuevoParametroFactuEmpresaActionPerformed(evt,true);
			} else if(sTipo.equals("ModificarParametroFactuEmpresa")) {
				jButtonModificarParametroFactuEmpresaActionPerformed(evt);
			} else if(sTipo.equals("ModificarToolBarParametroFactuEmpresa")) {
				jButtonModificarParametroFactuEmpresaActionPerformed(evt);
			} else if(sTipo.equals("MenuItemModificarParametroFactuEmpresa")) {
				jButtonModificarParametroFactuEmpresaActionPerformed(evt);
			} else if(sTipo.equals("ActualizarParametroFactuEmpresa")) {
				jButtonActualizarParametroFactuEmpresaActionPerformed(evt);
			} else if(sTipo.equals("ActualizarToolBarParametroFactuEmpresa")) {
				jButtonActualizarParametroFactuEmpresaActionPerformed(evt);
			} else if(sTipo.equals("MenuItemActualizarParametroFactuEmpresa")) {
				jButtonActualizarParametroFactuEmpresaActionPerformed(evt);
			} else if(sTipo.equals("EliminarParametroFactuEmpresa")) {
				jButtonEliminarParametroFactuEmpresaActionPerformed(evt);
			} else if(sTipo.equals("EliminarToolBarParametroFactuEmpresa")) {
				jButtonEliminarParametroFactuEmpresaActionPerformed(evt);
			} else if(sTipo.equals("MenuItemEliminarParametroFactuEmpresa")) {
				jButtonEliminarParametroFactuEmpresaActionPerformed(evt);
			} else if(sTipo.equals("CancelarParametroFactuEmpresa")) {
				jButtonCancelarParametroFactuEmpresaActionPerformed(evt);
			} else if(sTipo.equals("CancelarToolBarParametroFactuEmpresa")) {
				jButtonCancelarParametroFactuEmpresaActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCancelarParametroFactuEmpresa")) {
				jButtonCancelarParametroFactuEmpresaActionPerformed(evt);
			} else if(sTipo.equals("CerrarParametroFactuEmpresa")) {
				jButtonCerrarParametroFactuEmpresaActionPerformed(evt);
			} else if(sTipo.equals("CerrarToolBarParametroFactuEmpresa")) {
				jButtonCerrarParametroFactuEmpresaActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCerrarParametroFactuEmpresa")) {
				jButtonCerrarParametroFactuEmpresaActionPerformed(evt);
			} else if(sTipo.equals("MostrarOcultarToolBarParametroFactuEmpresa")) {
				jButtonMostrarOcultarParametroFactuEmpresaActionPerformed(evt);
			} else if(sTipo.equals("MenuItemDetalleCerrarParametroFactuEmpresa")) {
				jButtonCancelarParametroFactuEmpresaActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosParametroFactuEmpresa")) {
				jButtonGuardarCambiosParametroFactuEmpresaActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosToolBarParametroFactuEmpresa")) {
				jButtonGuardarCambiosParametroFactuEmpresaActionPerformed(evt);
			} else if(sTipo.equals("CopiarToolBarParametroFactuEmpresa")) {
				jButtonCopiarParametroFactuEmpresaActionPerformed(evt);
			} else if(sTipo.equals("VerFormToolBarParametroFactuEmpresa")) {
				jButtonVerFormParametroFactuEmpresaActionPerformed(evt);
			} else if(sTipo.equals("MenuItemGuardarCambiosParametroFactuEmpresa")) {
				jButtonGuardarCambiosParametroFactuEmpresaActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCopiarParametroFactuEmpresa")) {
				jButtonCopiarParametroFactuEmpresaActionPerformed(evt);
			} else if(sTipo.equals("MenuItemVerFormParametroFactuEmpresa")) {
				jButtonVerFormParametroFactuEmpresaActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosTablaParametroFactuEmpresa")) {
				jButtonGuardarCambiosParametroFactuEmpresaActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosTablaToolBarParametroFactuEmpresa")) {
				jButtonGuardarCambiosParametroFactuEmpresaActionPerformed(evt);
			} else if(sTipo.equals("MenuItemGuardarCambiosTablaParametroFactuEmpresa")) {
				jButtonGuardarCambiosParametroFactuEmpresaActionPerformed(evt);
			} else if(sTipo.equals("RecargarInformacionParametroFactuEmpresa")) {
				jButtonRecargarInformacionParametroFactuEmpresaActionPerformed(evt);
			} else if(sTipo.equals("RecargarInformacionToolBarParametroFactuEmpresa")) {
				jButtonRecargarInformacionParametroFactuEmpresaActionPerformed(evt);
			} else if(sTipo.equals("MenuItemRecargarInformacionParametroFactuEmpresa")) {
				jButtonRecargarInformacionParametroFactuEmpresaActionPerformed(evt);
			}
			else if(sTipo.equals("AnterioresParametroFactuEmpresa")) {
				jButtonAnterioresParametroFactuEmpresaActionPerformed(evt);
			} else if(sTipo.equals("AnterioresToolBarParametroFactuEmpresa")) {
				jButtonAnterioresParametroFactuEmpresaActionPerformed(evt);
			} else if(sTipo.equals("MenuItemAnterioreParametroFactuEmpresa")) {
				jButtonAnterioresParametroFactuEmpresaActionPerformed(evt);
			} else if(sTipo.equals("SiguientesParametroFactuEmpresa")) {
				jButtonSiguientesParametroFactuEmpresaActionPerformed(evt);
			} else if(sTipo.equals("SiguientesToolBarParametroFactuEmpresa")) {
				jButtonSiguientesParametroFactuEmpresaActionPerformed(evt);
			} else if(sTipo.equals("MenuItemSiguientesParametroFactuEmpresa")) {
				jButtonSiguientesParametroFactuEmpresaActionPerformed(evt);
			} else if(sTipo.equals("MenuItemAbrirOrderByParametroFactuEmpresa") || sTipo.equals("MenuItemDetalleAbrirOrderByParametroFactuEmpresa")) {
				jButtonAbrirOrderByParametroFactuEmpresaActionPerformed(evt);
			} else if(sTipo.equals("MenuItemMostrarOcultarParametroFactuEmpresa") || sTipo.equals("MenuItemDetalleMostrarOcultarParametroFactuEmpresa")) {
				jButtonMostrarOcultarParametroFactuEmpresaActionPerformed(evt);
			} else if(sTipo.equals("NuevoGuardarCambiosParametroFactuEmpresa")) {
				jButtonNuevoGuardarCambiosParametroFactuEmpresaActionPerformed(evt);
			} else if(sTipo.equals("NuevoGuardarCambiosToolBarParametroFactuEmpresa")) {
				jButtonNuevoGuardarCambiosParametroFactuEmpresaActionPerformed(evt);
			} else if(sTipo.equals("MenuItemNuevoGuardarCambiosParametroFactuEmpresa")) {
				jButtonNuevoGuardarCambiosParametroFactuEmpresaActionPerformed(evt);
			} 
			else if(sTipo.equals("CerrarReporteDinamicoParametroFactuEmpresa")) {
				jButtonCerrarReporteDinamicoParametroFactuEmpresaActionPerformed(evt);
			} else if(sTipo.equals("GenerarReporteDinamicoParametroFactuEmpresa")) {
				jButtonGenerarReporteDinamicoParametroFactuEmpresaActionPerformed(evt);
			} else if(sTipo.equals("GenerarExcelReporteDinamicoParametroFactuEmpresa")) {
				
				jButtonGenerarExcelReporteDinamicoParametroFactuEmpresaActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarImportacionParametroFactuEmpresa")) {
				jButtonCerrarImportacionParametroFactuEmpresaActionPerformed(evt);
			} else if(sTipo.equals("GenerarImportacionParametroFactuEmpresa")) {
				
				jButtonGenerarImportacionParametroFactuEmpresaActionPerformed(evt);
				
			} else if(sTipo.equals("AbrirImportacionParametroFactuEmpresa")) {
				
				jButtonAbrirImportacionParametroFactuEmpresaActionPerformed(evt);
				
			} else if(sTipo.equals("TiposAccionesParametroFactuEmpresa")) {
				jComboBoxTiposAccionesParametroFactuEmpresaActionListener(evt,false);
			} else if(sTipo.equals("TiposRelacionesParametroFactuEmpresa")) {
				jComboBoxTiposRelacionesParametroFactuEmpresaActionListener(evt);
			} else if(sTipo.equals("TiposAccionesFormularioParametroFactuEmpresa")) {
				jComboBoxTiposAccionesParametroFactuEmpresaActionListener(evt,true);
			} else if(sTipo.equals("TiposSeleccionarParametroFactuEmpresa")) {
				
				jComboBoxTiposSeleccionarParametroFactuEmpresaActionListener(evt);
				
			} else if(sTipo.equals("ValorCampoGeneralParametroFactuEmpresa")) {
				jTextFieldValorCampoGeneralParametroFactuEmpresaActionListener(evt);
			}
			
			
			else if(sTipo.equals("AbrirOrderByParametroFactuEmpresa")) {
				jButtonAbrirOrderByParametroFactuEmpresaActionPerformed(evt);
				
			} else if(sTipo.equals("AbrirOrderByToolBarParametroFactuEmpresa")) {
				jButtonAbrirOrderByParametroFactuEmpresaActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarOrderByParametroFactuEmpresa")) {
				jButtonCerrarOrderByParametroFactuEmpresaActionPerformed(evt);
			} 
						
			
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("idParametroFactuEmpresaBusqueda")) {
				this.jButtonidParametroFactuEmpresaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_empresaParametroFactuEmpresaUpdate")) {
				this.jButtonid_empresaParametroFactuEmpresaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_empresaParametroFactuEmpresaBusqueda")) {
				this.jButtonid_empresaParametroFactuEmpresaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_empresa_origenParametroFactuEmpresaUpdate")) {
				this.jButtonid_empresa_origenParametroFactuEmpresaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_empresa_origenParametroFactuEmpresaBusqueda")) {
				this.jButtonid_empresa_origenParametroFactuEmpresaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_sucursalParametroFactuEmpresaUpdate")) {
				this.jButtonid_sucursalParametroFactuEmpresaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_sucursalParametroFactuEmpresaBusqueda")) {
				this.jButtonid_sucursalParametroFactuEmpresaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_transaccion_origenParametroFactuEmpresaUpdate")) {
				this.jButtonid_transaccion_origenParametroFactuEmpresaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_transaccion_origenParametroFactuEmpresaBusqueda")) {
				this.jButtonid_transaccion_origenParametroFactuEmpresaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_bodega_origenParametroFactuEmpresaUpdate")) {
				this.jButtonid_bodega_origenParametroFactuEmpresaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_bodega_origenParametroFactuEmpresaBusqueda")) {
				this.jButtonid_bodega_origenParametroFactuEmpresaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_cliente_origenParametroFactuEmpresa")) {
				this.jButtonid_cliente_origenParametroFactuEmpresaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_cliente_origenParametroFactuEmpresaUpdate")) {
				this.jButtonid_cliente_origenParametroFactuEmpresaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_cliente_origenParametroFactuEmpresaBusqueda")) {
				this.jButtonid_cliente_origenParametroFactuEmpresaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("costo_origenParametroFactuEmpresaBusqueda")) {
				this.jButtoncosto_origenParametroFactuEmpresaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_empresa_destinoParametroFactuEmpresaUpdate")) {
				this.jButtonid_empresa_destinoParametroFactuEmpresaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_empresa_destinoParametroFactuEmpresaBusqueda")) {
				this.jButtonid_empresa_destinoParametroFactuEmpresaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_sucursal_destinoParametroFactuEmpresaUpdate")) {
				this.jButtonid_sucursal_destinoParametroFactuEmpresaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_sucursal_destinoParametroFactuEmpresaBusqueda")) {
				this.jButtonid_sucursal_destinoParametroFactuEmpresaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_transaccion_destinoParametroFactuEmpresaUpdate")) {
				this.jButtonid_transaccion_destinoParametroFactuEmpresaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_transaccion_destinoParametroFactuEmpresaBusqueda")) {
				this.jButtonid_transaccion_destinoParametroFactuEmpresaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_bodega_destinoParametroFactuEmpresaUpdate")) {
				this.jButtonid_bodega_destinoParametroFactuEmpresaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_bodega_destinoParametroFactuEmpresaBusqueda")) {
				this.jButtonid_bodega_destinoParametroFactuEmpresaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_cliente_destinoParametroFactuEmpresa")) {
				this.jButtonid_cliente_destinoParametroFactuEmpresaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_cliente_destinoParametroFactuEmpresaUpdate")) {
				this.jButtonid_cliente_destinoParametroFactuEmpresaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_cliente_destinoParametroFactuEmpresaBusqueda")) {
				this.jButtonid_cliente_destinoParametroFactuEmpresaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("costo_destinoParametroFactuEmpresaBusqueda")) {
				this.jButtoncosto_destinoParametroFactuEmpresaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("con_transferenciaParametroFactuEmpresaBusqueda")) {
				this.jButtoncon_transferenciaParametroFactuEmpresaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_empresa_multi_destinoParametroFactuEmpresaUpdate")) {
				this.jButtonid_empresa_multi_destinoParametroFactuEmpresaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_empresa_multi_destinoParametroFactuEmpresaBusqueda")) {
				this.jButtonid_empresa_multi_destinoParametroFactuEmpresaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_sucursal_multi_destinoParametroFactuEmpresaUpdate")) {
				this.jButtonid_sucursal_multi_destinoParametroFactuEmpresaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_sucursal_multi_destinoParametroFactuEmpresaBusqueda")) {
				this.jButtonid_sucursal_multi_destinoParametroFactuEmpresaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_transaccion_multi_destinoParametroFactuEmpresaUpdate")) {
				this.jButtonid_transaccion_multi_destinoParametroFactuEmpresaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_transaccion_multi_destinoParametroFactuEmpresaBusqueda")) {
				this.jButtonid_transaccion_multi_destinoParametroFactuEmpresaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_bodega_multi_origenParametroFactuEmpresaUpdate")) {
				this.jButtonid_bodega_multi_origenParametroFactuEmpresaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_bodega_multi_origenParametroFactuEmpresaBusqueda")) {
				this.jButtonid_bodega_multi_origenParametroFactuEmpresaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_bodega_multi_destinoParametroFactuEmpresaUpdate")) {
				this.jButtonid_bodega_multi_destinoParametroFactuEmpresaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_bodega_multi_destinoParametroFactuEmpresaBusqueda")) {
				this.jButtonid_bodega_multi_destinoParametroFactuEmpresaBusquedaActionPerformed(evt);
			}
			
			
			else if(sTipo.equals("id_cliente_destinoParametroFactuEmpresa")) {
				this.jButtonid_cliente_destinoParametroFactuEmpresaActionPerformed(evt);
			}
			else if(sTipo.equals("id_cliente_origenParametroFactuEmpresa")) {
				this.jButtonid_cliente_origenParametroFactuEmpresaActionPerformed(evt);
			}
			
			
			else if(sTipo.equals("FK_IdBodegaDestinoParametroFactuEmpresa")) {
				this.jButtonFK_IdBodegaDestinoParametroFactuEmpresaActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdBodegaMultiDestinoParametroFactuEmpresa")) {
				this.jButtonFK_IdBodegaMultiDestinoParametroFactuEmpresaActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdBodegaMultiOrigenParametroFactuEmpresa")) {
				this.jButtonFK_IdBodegaMultiOrigenParametroFactuEmpresaActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdBodegaOrigenParametroFactuEmpresa")) {
				this.jButtonFK_IdBodegaOrigenParametroFactuEmpresaActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdClienteDestinoParametroFactuEmpresa")) {
				this.jButtonFK_IdClienteDestinoParametroFactuEmpresaActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdClienteOrigenParametroFactuEmpresa")) {
				this.jButtonFK_IdClienteOrigenParametroFactuEmpresaActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdEmpresaDestinoParametroFactuEmpresa")) {
				this.jButtonFK_IdEmpresaDestinoParametroFactuEmpresaActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdEmpresaMultiDestinoParametroFactuEmpresa")) {
				this.jButtonFK_IdEmpresaMultiDestinoParametroFactuEmpresaActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdEmpresaOrigenParametroFactuEmpresa")) {
				this.jButtonFK_IdEmpresaOrigenParametroFactuEmpresaActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdSucursalParametroFactuEmpresa")) {
				this.jButtonFK_IdSucursalParametroFactuEmpresaActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdSucursalDestinoParametroFactuEmpresa")) {
				this.jButtonFK_IdSucursalDestinoParametroFactuEmpresaActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdSucursalMultiDestinoParametroFactuEmpresa")) {
				this.jButtonFK_IdSucursalMultiDestinoParametroFactuEmpresaActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdTransaccionDestinoParametroFactuEmpresa")) {
				this.jButtonFK_IdTransaccionDestinoParametroFactuEmpresaActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdTransaccionMultiDestinoParametroFactuEmpresa")) {
				this.jButtonFK_IdTransaccionMultiDestinoParametroFactuEmpresaActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdTransaccionOrigenParametroFactuEmpresa")) {
				this.jButtonFK_IdTransaccionOrigenParametroFactuEmpresaActionPerformed(evt);
			}
			
			;
			
			
			ParametroFactuEmpresaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.BUTTON,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.parametrofactuempresa,new Object(),this.parametrofactuempresaParameterGeneral,this.parametrofactuempresaReturnGeneral);
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroFactuEmpresaConstantesFunciones.CLASSNAME);
			
  		} finally {
      		this.finishProcessParametroFactuEmpresa();
      	}
    }
	
	//FUNCIONA AL APLASTAR ENTER
	public void jTextFieldActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaParametroFactuEmpresaActual();
			
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				Container containerParent=null;
				JTextField jTextField=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParent=jTextField.getParent();
						
				if(containerParent!=null && containerParent.getClass().equals(JTableMe.class)) {
					esControlTabla=true;
				}
						
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.parametrofactuempresa);
				
				this.actualizarInformacion("INFO_PADRE",false,this.parametrofactuempresa);
				
				ParametroFactuEmpresaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametrofactuempresa,new Object(),this.parametrofactuempresaParameterGeneral,this.parametrofactuempresaReturnGeneral);
				
				


				
				ParametroFactuEmpresaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametrofactuempresa,new Object(),this.parametrofactuempresaParameterGeneral,this.parametrofactuempresaReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(ParametroFactuEmpresa.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",ParametroFactuEmpresa.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
				}
				
			} catch(Exception e) {
  				FuncionesSwing.manageException2(this, e,logger,ParametroFactuEmpresaConstantesFunciones.CLASSNAME);
  			}
    }
	
	public Boolean existeCambioValor(ControlTipo controlTipo,String sTipo) throws Exception {
		Boolean existeCambio=true;
		
		try {
			ParametroFactuEmpresa parametrofactuempresaLocal=null;
			
			if(!this.getEsControlTabla()) {
				parametrofactuempresaLocal=this.parametrofactuempresa;
			} else {
				parametrofactuempresaLocal=this.parametrofactuempresaAnterior;
			}
			
			if(controlTipo.equals(ControlTipo.TEXTBOX)) {
				


			}
		
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroFactuEmpresaConstantesFunciones.CLASSNAME);
  		}
		
		return existeCambio;
	}
	
	public void jTextFieldFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTBOX,sTipo)) {
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextField jTextField=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParent=jTextField.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.parametrofactuempresa);
				
				this.actualizarInformacion("INFO_PADRE",false,this.parametrofactuempresa);
				
				ParametroFactuEmpresaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametrofactuempresa,new Object(),this.parametrofactuempresaParameterGeneral,this.parametrofactuempresaReturnGeneral);
							
				
				


				
				ParametroFactuEmpresaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametrofactuempresa,new Object(),this.parametrofactuempresaParameterGeneral,this.parametrofactuempresaReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(ParametroFactuEmpresa.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",ParametroFactuEmpresa.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroFactuEmpresaConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextFieldFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaParametroFactuEmpresaActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosParametroFactuEmpresa.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuempresaAnterior =(ParametroFactuEmpresa) this.parametrofactuempresaLogic.getParametroFactuEmpresas().toArray()[this.jTableDatosParametroFactuEmpresa.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.parametrofactuempresaAnterior =(ParametroFactuEmpresa) this.parametrofactuempresas.toArray()[this.jTableDatosParametroFactuEmpresa.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroFactuEmpresaConstantesFunciones.CLASSNAME);
  		}
    }	
	
	//CUANDO SE CAMBIA ALGUN FORMATO(TIPO DE LETRA,NEGRILLA,ETC)
	public void jTextFieldChangedUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			/*
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			//System.out.println("UPDATE");
			
			Boolean esControlTabla=false;
			//JTextField jTextField=null;
			Container containerParent=null;
			Component componentOpposite=null;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			ParametroFactuEmpresaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametrofactuempresa,new Object(),this.parametrofactuempresaParameterGeneral,this.parametrofactuempresaReturnGeneral);
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			//jTextField=(JTextField)evt.getSource();
			
			containerParent=jTextField.getParent();
					
			componentOpposite=null;//evt.getOppositeComponent();
			
			if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
				|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
			) {					
				esControlTabla=true;
			}
			
			this.esControlTabla=esControlTabla;
			
			


			
			ParametroFactuEmpresaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametrofactuempresa,new Object(),this.parametrofactuempresaParameterGeneral,this.parametrofactuempresaReturnGeneral);
			*/
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroFactuEmpresaConstantesFunciones.CLASSNAME);
  		}
    }
	
	//CUANDO SE QUITA ALGUN CARACTER
	public void jTextFieldRemoveUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			//System.out.println("REMOVE");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroFactuEmpresaConstantesFunciones.CLASSNAME);
  		}
    }
	
	//CUANDO SE INGRESA ALGUN CARACTER
	public void jTextFieldInsertUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			//System.out.println("INSERT");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroFactuEmpresaConstantesFunciones.CLASSNAME);
  		}
    }
	
	//FUNCIONA AL APLASTAR ENTER
	public void jFormattedTextFieldActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaParametroFactuEmpresaActual();
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				Container containerParent=null;
				Container containerParentAux=null;
				JFormattedTextField JFormattedTextField=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				JFormattedTextField=(JFormattedTextField)evt.getSource();
				
				containerParentAux=JFormattedTextField.getParent();
				
				if(containerParentAux!=null && containerParentAux.getClass().equals(JDateChooser.class)) {
					containerParent=containerParentAux.getParent();
				}
				
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.parametrofactuempresa);
				
				this.actualizarInformacion("INFO_PADRE",false,this.parametrofactuempresa);
				
				ParametroFactuEmpresaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametrofactuempresa,new Object(),this.parametrofactuempresaParameterGeneral,this.parametrofactuempresaReturnGeneral);
								
						
				


				
				ParametroFactuEmpresaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametrofactuempresa,new Object(),this.parametrofactuempresaParameterGeneral,this.parametrofactuempresaReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(ParametroFactuEmpresa.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",ParametroFactuEmpresa.class.getName(),sTipo,"DATE",esControlTabla,conIrServidorAplicacionParent,
							id,JFormattedTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroFactuEmpresaConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jFormattedTextFieldFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTBOX,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextField jTextField=null;
				Container containerParent=null;
				Container containerParentAux=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParentAux=jTextField.getParent();
						
				if(containerParentAux!=null && containerParentAux.getClass().equals(JDateChooser.class)) {
					containerParent=containerParentAux.getParent();
				}
				
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.parametrofactuempresa);
				
				this.actualizarInformacion("INFO_PADRE",false,this.parametrofactuempresa);
				
				ParametroFactuEmpresaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametrofactuempresa,new Object(),this.parametrofactuempresaParameterGeneral,this.parametrofactuempresaReturnGeneral);
								
				
				


				
				ParametroFactuEmpresaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametrofactuempresa,new Object(),this.parametrofactuempresaParameterGeneral,this.parametrofactuempresaReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(ParametroFactuEmpresa.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",ParametroFactuEmpresa.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroFactuEmpresaConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jFormattedTextFieldFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaParametroFactuEmpresaActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosParametroFactuEmpresa.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuempresaAnterior =(ParametroFactuEmpresa) this.parametrofactuempresaLogic.getParametroFactuEmpresas().toArray()[this.jTableDatosParametroFactuEmpresa.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.parametrofactuempresaAnterior =(ParametroFactuEmpresa) this.parametrofactuempresas.toArray()[this.jTableDatosParametroFactuEmpresa.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroFactuEmpresaConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.DATE,sTipo)) {
				this.actualizarInformacion("EVENTO_CONTROL",false,this.parametrofactuempresa);
				
				this.actualizarInformacion("INFO_PADRE",false,this.parametrofactuempresa);
			}	
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroFactuEmpresaConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaParametroFactuEmpresaActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosParametroFactuEmpresa.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuempresaAnterior =(ParametroFactuEmpresa) this.parametrofactuempresaLogic.getParametroFactuEmpresas().toArray()[this.jTableDatosParametroFactuEmpresa.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.parametrofactuempresaAnterior =(ParametroFactuEmpresa) this.parametrofactuempresas.toArray()[this.jTableDatosParametroFactuEmpresa.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroFactuEmpresaConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaParametroFactuEmpresaActual();
				
			this.actualizarInformacion("EVENTO_CONTROL",false,this.parametrofactuempresa);
			
			this.actualizarInformacion("INFO_PADRE",false,this.parametrofactuempresa);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroFactuEmpresaConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jTextAreaFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTAREA,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextArea jTextArea=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextArea=(JTextArea)evt.getSource();
				
				containerParent=jTextArea.getParent();
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.parametrofactuempresa);
				
				this.actualizarInformacion("INFO_PADRE",false,this.parametrofactuempresa);
				
				ParametroFactuEmpresaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametrofactuempresa,new Object(),this.parametrofactuempresaParameterGeneral,this.parametrofactuempresaReturnGeneral);
							
				
				


				
				ParametroFactuEmpresaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametrofactuempresa,new Object(),this.parametrofactuempresaParameterGeneral,this.parametrofactuempresaReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(ParametroFactuEmpresa.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",ParametroFactuEmpresa.class.getName(),sTipo,"TEXTAREA",esControlTabla,conIrServidorAplicacionParent,
							id,jTextArea, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroFactuEmpresaConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaParametroFactuEmpresaActual();
			
				//SELECCIONA FILA A OBJETO ANTERIOR
				Integer intSelectedRow = this.jTableDatosParametroFactuEmpresa.getSelectedRow();
						
				if(intSelectedRow!=null && intSelectedRow>-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrofactuempresaAnterior =(ParametroFactuEmpresa) this.parametrofactuempresaLogic.getParametroFactuEmpresas().toArray()[this.jTableDatosParametroFactuEmpresa.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
						this.parametrofactuempresaAnterior =(ParametroFactuEmpresa) this.parametrofactuempresas.toArray()[this.jTableDatosParametroFactuEmpresa.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					//System.out.println(this.banco);
				}
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroFactuEmpresaConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaChangedUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			/*
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			//System.out.println("UPDATE");
			
			Boolean esControlTabla=false;
			//JTextArea jTextArea=null;
			Container containerParent=null;
			Component componentOpposite=null;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			ParametroFactuEmpresaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametrofactuempresa,new Object(),this.parametrofactuempresaParameterGeneral,this.parametrofactuempresaReturnGeneral);
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			//jTextArea=(JTextArea)evt.getSource();
			
			containerParent=jTextArea.getParent();
			componentOpposite=null;//evt.getOppositeComponent();
			
			if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
				|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
			) {
				esControlTabla=true;
			}
			
			this.esControlTabla=esControlTabla;
			
			


			
			ParametroFactuEmpresaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametrofactuempresa,new Object(),this.parametrofactuempresaParameterGeneral,this.parametrofactuempresaReturnGeneral);
			
			*/
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroFactuEmpresaConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaRemoveUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			//System.out.println("REMOVE");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroFactuEmpresaConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaInsertUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			
			//System.out.println("INSERT");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroFactuEmpresaConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO EXISTE O NO ES APLICABLE
	public void jTextAreaActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaParametroFactuEmpresaActual();
			
			this.actualizarInformacion("EVENTO_CONTROL",false,this.parametrofactuempresa);
			
			this.actualizarInformacion("INFO_PADRE",false,this.parametrofactuempresa);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroFactuEmpresaConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jLabelFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JLabel jLabel=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jLabel=(JLabel)evt.getSource();
				
				containerParent=jLabel.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.parametrofactuempresa);
				
				this.actualizarInformacion("INFO_PADRE",false,this.parametrofactuempresa);
				
				ParametroFactuEmpresaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametrofactuempresa,new Object(),this.parametrofactuempresaParameterGeneral,this.parametrofactuempresaReturnGeneral);
								
				
				


				
				ParametroFactuEmpresaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametrofactuempresa,new Object(),this.parametrofactuempresaParameterGeneral,this.parametrofactuempresaReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(ParametroFactuEmpresa.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",ParametroFactuEmpresa.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jLabel, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}	
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroFactuEmpresaConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jLabelFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaParametroFactuEmpresaActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosParametroFactuEmpresa.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuempresaAnterior =(ParametroFactuEmpresa) this.parametrofactuempresaLogic.getParametroFactuEmpresas().toArray()[this.jTableDatosParametroFactuEmpresa.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.parametrofactuempresaAnterior =(ParametroFactuEmpresa) this.parametrofactuempresas.toArray()[this.jTableDatosParametroFactuEmpresa.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroFactuEmpresaConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO EXISTE O NO ES APLICABLE
	public void jLabelActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaParametroFactuEmpresaActual();
				
			this.actualizarInformacion("EVENTO_CONTROL",false,this.parametrofactuempresa);
			
			this.actualizarInformacion("INFO_PADRE",false,this.parametrofactuempresa);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroFactuEmpresaConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxItemListenerGeneral(String sTipo,ItemEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaParametroFactuEmpresaActual();
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JCheckBox jCheckBox=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
							
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jCheckBox=(JCheckBox)evt.getSource();
				
				containerParent=jCheckBox.getParent();
						
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.parametrofactuempresa);
				
				this.actualizarInformacion("INFO_PADRE",false,this.parametrofactuempresa);
				
				ParametroFactuEmpresaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.parametrofactuempresa,new Object(),this.parametrofactuempresaParameterGeneral,this.parametrofactuempresaReturnGeneral);
												
				
				if(sTipo.equals("SeleccionarTodosParametroFactuEmpresa")) {
					jCheckBoxSeleccionarTodosParametroFactuEmpresaItemListener(evt);
				
				} else if(sTipo.equals("SeleccionadosParametroFactuEmpresa")) {
					jCheckBoxSeleccionadosParametroFactuEmpresaItemListener(evt);
				
				} else if(sTipo.equals("NuevoToolBarParametroFactuEmpresa")) {
					
				}
				
				


				
				
				ParametroFactuEmpresaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.parametrofactuempresa,new Object(),this.parametrofactuempresaParameterGeneral,this.parametrofactuempresaReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(ParametroFactuEmpresa.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",ParametroFactuEmpresa.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jCheckBox, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}	
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroFactuEmpresaConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.CHECKBOX,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JCheckBox jCheckBox=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jCheckBox=(JCheckBox)evt.getSource();
				
				containerParent=jCheckBox.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				//this.actualizarInformacion("EVENTO_CONTROL",false,this.parametrofactuempresa);
				
				//this.actualizarInformacion("INFO_PADRE",false,this.parametrofactuempresa);
				
				ParametroFactuEmpresaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.parametrofactuempresa,new Object(),this.parametrofactuempresaParameterGeneral,this.parametrofactuempresaReturnGeneral);
												
				
				


				
				
				ParametroFactuEmpresaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.parametrofactuempresa,new Object(),this.parametrofactuempresaParameterGeneral,this.parametrofactuempresaReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
				
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(ParametroFactuEmpresa.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",ParametroFactuEmpresa.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jCheckBox, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroFactuEmpresaConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaParametroFactuEmpresaActual();
			
				//SELECCIONA FILA A OBJETO ANTERIOR
				Integer intSelectedRow = this.jTableDatosParametroFactuEmpresa.getSelectedRow();
						
				if(intSelectedRow!=null && intSelectedRow>-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrofactuempresaAnterior =(ParametroFactuEmpresa) this.parametrofactuempresaLogic.getParametroFactuEmpresas().toArray()[this.jTableDatosParametroFactuEmpresa.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
						this.parametrofactuempresaAnterior =(ParametroFactuEmpresa) this.parametrofactuempresas.toArray()[this.jTableDatosParametroFactuEmpresa.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					//System.out.println(this.banco);
				}
			}
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroFactuEmpresaConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaParametroFactuEmpresaActual();
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.parametrofactuempresa);
				
				this.actualizarInformacion("INFO_PADRE",false,this.parametrofactuempresa);
				
				ParametroFactuEmpresaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.parametrofactuempresa,new Object(),this.parametrofactuempresaParameterGeneral,this.parametrofactuempresaReturnGeneral);
				
				
				ParametroFactuEmpresaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.parametrofactuempresa,new Object(),this.parametrofactuempresaParameterGeneral,this.parametrofactuempresaReturnGeneral);
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroFactuEmpresaConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO SE UTILIZA, SE USA EL DE ABAJO, IGUAL SE DEJA EL CODIGO COMO RESPALDO Y ES CASI IGUAL
	//ERROR:SI SE USA,AL HACER CLIC EN EL MISMO ELEMENTO O EJECUTAR SELECTEDITEM, SIEMPRE SE EJECUTA COMO SI ESCOGIERA OTRO ELEMENTO(NO DEBERIA)
	//@SuppressWarnings("rawtypes")
	public void jComboBoxActionPerformedGeneral(String sTipo,ActionEvent evt) {		
		try {
			/*		
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			Container containerParent=null;
			Component componentOpposite=null;
			Boolean esControlTabla=false;
				
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			ParametroFactuEmpresaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.parametrofactuempresa,new Object(),this.parametrofactuempresaParameterGeneral,this.parametrofactuempresaReturnGeneral);
			JComboBox jComboBoxGenerico=null;						
			
			if(evt.getSource().getClass().equals(JComboBox.class)
				|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
					
				jComboBoxGenerico=(JComboBox)evt.getSource();
				
				containerParent=jComboBoxGenerico.getParent();
				
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
			}
			
			String sFinalQueryCombo="";
			
			


			
			ParametroFactuEmpresaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametrofactuempresa,new Object(),this.parametrofactuempresaParameterGeneral,this.parametrofactuempresaReturnGeneral);
			*/						
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroFactuEmpresaConstantesFunciones.CLASSNAME);
  		}		
    }
	
	@SuppressWarnings("rawtypes")
	public void jComboBoxItemStateChangedGeneral(String sTipo,ItemEvent evt) { 	  
		try {
			if (evt.getStateChange() == ItemEvent.SELECTED && this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaParametroFactuEmpresaActual();
			
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
			
			
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				Container containerParent=null;
				Component componentOpposite=null;
				Boolean esControlTabla=false;
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				JComboBox jComboBoxGenerico=null;						
				
				if(evt.getSource().getClass().equals(JComboBox.class)
					|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
						
					jComboBoxGenerico=(JComboBox)evt.getSource();
					
					containerParent=jComboBoxGenerico.getParent();
					
					componentOpposite=null;//evt.getOppositeComponent();
					
					if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
					) {					
						esControlTabla=true;
					}		
					
					this.esControlTabla=esControlTabla;
				}
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.parametrofactuempresa);
				
				this.actualizarInformacion("INFO_PADRE",false,this.parametrofactuempresa);
				
				ParametroFactuEmpresaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.parametrofactuempresa,new Object(),this.parametrofactuempresaParameterGeneral,this.parametrofactuempresaReturnGeneral);
				
				
				String sFinalQueryCombo="";
				
				


				
				ParametroFactuEmpresaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametrofactuempresa,new Object(),this.parametrofactuempresaParameterGeneral,this.parametrofactuempresaReturnGeneral);
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
				
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(ParametroFactuEmpresa.class.getName());
								
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",ParametroFactuEmpresa.class.getName(),sTipo,"COMBOBOX",esControlTabla,conIrServidorAplicacionParent,
							id,jComboBoxGenerico, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroFactuEmpresaConstantesFunciones.CLASSNAME);
  		}
    }
	
	//@SuppressWarnings("rawtypes")
	public void jComboBoxFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		//MANEJADO EN ITEMLISTENER
		/*
		try {
			if(this.permiteManejarEventosControl()) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				
				//if(this.esUsoDesdeHijo) {
				//	eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				//}
				
				
				Container containerParent=null;
				Component componentOpposite=null;
				Boolean esControlTabla=false;
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
			
				this.actualizarInformacion("EVENTO_CONTROL",false,this.parametrofactuempresa);
				
				this.actualizarInformacion("INFO_PADRE",false,this.parametrofactuempresa);
				
				ParametroFactuEmpresaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.parametrofactuempresa,new Object(),this.parametrofactuempresaParameterGeneral,this.parametrofactuempresaReturnGeneral);
				JComboBox jComboBoxGenerico=null;						
				
				if(evt.getSource().getClass().equals(JComboBox.class)
					|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
						
					jComboBoxGenerico=(JComboBox)evt.getSource();
					
					containerParent=jComboBoxGenerico.getParent();
					
					componentOpposite=evt.getOppositeComponent();
					
					if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
					) {					
						esControlTabla=true;
					}
					
					this.esControlTabla=esControlTabla;
				}
				
				String sFinalQueryCombo="";
				
				


				
				ParametroFactuEmpresaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametrofactuempresa,new Object(),this.parametrofactuempresaParameterGeneral,this.parametrofactuempresaReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(ParametroFactuEmpresa.class.getName());
				
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",ParametroFactuEmpresa.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jComboBoxGenerico, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroFactuEmpresaConstantesFunciones.CLASSNAME);
  		}
		
		*/
    }
	
	public void jComboBoxFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaParametroFactuEmpresaActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosParametroFactuEmpresa.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuempresaAnterior =(ParametroFactuEmpresa) this.parametrofactuempresaLogic.getParametroFactuEmpresas().toArray()[this.jTableDatosParametroFactuEmpresa.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.parametrofactuempresaAnterior =(ParametroFactuEmpresa) this.parametrofactuempresas.toArray()[this.jTableDatosParametroFactuEmpresa.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroFactuEmpresaConstantesFunciones.CLASSNAME);
  		}
    }		
	
	public void tableValueChangedGeneral(String sTipo,ListSelectionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				ParametroFactuEmpresaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TABLE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametrofactuempresa,new Object(),this.parametrofactuempresaParameterGeneral,this.parametrofactuempresaReturnGeneral);
				
				if(sTipo.equals("TableDatosSeleccionarParametroFactuEmpresa")) {
					//BYDAN_DESHABILITADO
					//try {jTableDatosParametroFactuEmpresaListSelectionListener(e);}catch(Exception e1){e1.printStackTrace();}
					
					//SOLO CUANDO MOUSE ES SOLTADO
					if (!evt.getValueIsAdjusting()) {
						//SELECCIONA FILA A OBJETO ACTUAL
						Integer intSelectedRow = this.jTableDatosParametroFactuEmpresa.getSelectedRow();
						
						if(intSelectedRow!=null && intSelectedRow>-1) {
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								this.parametrofactuempresa =(ParametroFactuEmpresa) this.parametrofactuempresaLogic.getParametroFactuEmpresas().toArray()[this.jTableDatosParametroFactuEmpresa.convertRowIndexToModel(intSelectedRow)];
							} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
								this.parametrofactuempresa =(ParametroFactuEmpresa) this.parametrofactuempresas.toArray()[this.jTableDatosParametroFactuEmpresa.convertRowIndexToModel(intSelectedRow)];
							}
							//ARCHITECTURE
							
							//System.out.println(this.parametrofactuempresa);
						}
					}
					
				} else if(sTipo.equals("jButtonCancelarParametroFactuEmpresa")) {
				
				}
				
				ParametroFactuEmpresaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TABLE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametrofactuempresa,new Object(),this.parametrofactuempresaParameterGeneral,this.parametrofactuempresaReturnGeneral);
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroFactuEmpresaConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void tableMouseAdapterGeneral(String sTipo,MouseEvent evt) { 	  
		try {
			ParametroFactuEmpresaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TABLE,EventoTipo.MOUSE,EventoSubTipo.CLICKED,sTipo,this.parametrofactuempresa,new Object(),this.parametrofactuempresaParameterGeneral,this.parametrofactuempresaReturnGeneral);
			
			if(sTipo.equals("DatosSeleccionarParametroFactuEmpresa")) {
				if (evt.getClickCount() == 2) {
					jButtonIdActionPerformed(null,jTableDatosParametroFactuEmpresa.getSelectedRow(),false,false);
				}	
			} else if(sTipo.equals("jButtonCancelarParametroFactuEmpresa")) {
			
			}
			
			ParametroFactuEmpresaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TABLE,EventoTipo.MOUSE,EventoSubTipo.CLICKED,sTipo,this.parametrofactuempresa,new Object(),this.parametrofactuempresaParameterGeneral,this.parametrofactuempresaReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroFactuEmpresaConstantesFunciones.CLASSNAME);
  		}
    }
	
	;
	
	public void jButtonActionPerformedTecladoGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			this.startProcessParametroFactuEmpresa();
			
			ParametroFactuEmpresaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.KEY,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.parametrofactuempresa,new Object(),this.parametrofactuempresaParameterGeneral,this.parametrofactuempresaReturnGeneral);
			
			if(sTipo.equals("NuevoParametroFactuEmpresa")) {
				jButtonNuevoParametroFactuEmpresaActionPerformed(evt,false);
				
			} else if(sTipo.equals("DuplicarParametroFactuEmpresa")) {
				jButtonDuplicarParametroFactuEmpresaActionPerformed(evt,false);
				
			} else if(sTipo.equals("CopiarParametroFactuEmpresa")) {
				jButtonCopiarParametroFactuEmpresaActionPerformed(evt);
				
			} else if(sTipo.equals("VerFormParametroFactuEmpresa")) {
				jButtonVerFormParametroFactuEmpresaActionPerformed(evt);
				
			} else if(sTipo.equals("NuevoRelacionesParametroFactuEmpresa")) {
				jButtonNuevoParametroFactuEmpresaActionPerformed(evt,true);
				
			} else if(sTipo.equals("ModificarParametroFactuEmpresa")) {
				jButtonModificarParametroFactuEmpresaActionPerformed(evt);
				
			} else if(sTipo.equals("ActualizarParametroFactuEmpresa")) {
				jButtonActualizarParametroFactuEmpresaActionPerformed(evt);
				
			} else if(sTipo.equals("EliminarParametroFactuEmpresa")) {
				jButtonEliminarParametroFactuEmpresaActionPerformed(evt);
				
			} else if(sTipo.equals("GuardarCambiosTablaParametroFactuEmpresa")) {
				jButtonGuardarCambiosParametroFactuEmpresaActionPerformed(evt);
				
			} else if(sTipo.equals("CancelarParametroFactuEmpresa")) {
				jButtonCancelarParametroFactuEmpresaActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarParametroFactuEmpresa")) {
				jButtonCerrarParametroFactuEmpresaActionPerformed(evt);
				
			} else if(sTipo.equals("GuardarCambiosParametroFactuEmpresa")) {
				jButtonGuardarCambiosParametroFactuEmpresaActionPerformed(evt);
			
			} else if(sTipo.equals("NuevoGuardarCambiosParametroFactuEmpresa")) {
				jButtonNuevoGuardarCambiosParametroFactuEmpresaActionPerformed(evt);
			
			} else if(sTipo.equals("AbrirOrderByParametroFactuEmpresa")) {
				jButtonAbrirOrderByParametroFactuEmpresaActionPerformed(evt);
			
			} else if(sTipo.equals("RecargarInformacionParametroFactuEmpresa")) {
				jButtonRecargarInformacionParametroFactuEmpresaActionPerformed(evt);
			
			} else if(sTipo.equals("AnterioresParametroFactuEmpresa")) {
				jButtonAnterioresParametroFactuEmpresaActionPerformed(evt);			
			
			}  else if(sTipo.equals("SiguientesParametroFactuEmpresa")) {
				jButtonSiguientesParametroFactuEmpresaActionPerformed(evt);			
			} 
			
			
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("idParametroFactuEmpresaBusqueda")) {
				this.jButtonidParametroFactuEmpresaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_empresaParametroFactuEmpresaUpdate")) {
				this.jButtonid_empresaParametroFactuEmpresaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_empresaParametroFactuEmpresaBusqueda")) {
				this.jButtonid_empresaParametroFactuEmpresaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_empresa_origenParametroFactuEmpresaUpdate")) {
				this.jButtonid_empresa_origenParametroFactuEmpresaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_empresa_origenParametroFactuEmpresaBusqueda")) {
				this.jButtonid_empresa_origenParametroFactuEmpresaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_sucursalParametroFactuEmpresaUpdate")) {
				this.jButtonid_sucursalParametroFactuEmpresaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_sucursalParametroFactuEmpresaBusqueda")) {
				this.jButtonid_sucursalParametroFactuEmpresaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_transaccion_origenParametroFactuEmpresaUpdate")) {
				this.jButtonid_transaccion_origenParametroFactuEmpresaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_transaccion_origenParametroFactuEmpresaBusqueda")) {
				this.jButtonid_transaccion_origenParametroFactuEmpresaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_bodega_origenParametroFactuEmpresaUpdate")) {
				this.jButtonid_bodega_origenParametroFactuEmpresaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_bodega_origenParametroFactuEmpresaBusqueda")) {
				this.jButtonid_bodega_origenParametroFactuEmpresaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_cliente_origenParametroFactuEmpresa")) {
				this.jButtonid_cliente_origenParametroFactuEmpresaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_cliente_origenParametroFactuEmpresaUpdate")) {
				this.jButtonid_cliente_origenParametroFactuEmpresaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_cliente_origenParametroFactuEmpresaBusqueda")) {
				this.jButtonid_cliente_origenParametroFactuEmpresaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("costo_origenParametroFactuEmpresaBusqueda")) {
				this.jButtoncosto_origenParametroFactuEmpresaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_empresa_destinoParametroFactuEmpresaUpdate")) {
				this.jButtonid_empresa_destinoParametroFactuEmpresaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_empresa_destinoParametroFactuEmpresaBusqueda")) {
				this.jButtonid_empresa_destinoParametroFactuEmpresaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_sucursal_destinoParametroFactuEmpresaUpdate")) {
				this.jButtonid_sucursal_destinoParametroFactuEmpresaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_sucursal_destinoParametroFactuEmpresaBusqueda")) {
				this.jButtonid_sucursal_destinoParametroFactuEmpresaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_transaccion_destinoParametroFactuEmpresaUpdate")) {
				this.jButtonid_transaccion_destinoParametroFactuEmpresaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_transaccion_destinoParametroFactuEmpresaBusqueda")) {
				this.jButtonid_transaccion_destinoParametroFactuEmpresaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_bodega_destinoParametroFactuEmpresaUpdate")) {
				this.jButtonid_bodega_destinoParametroFactuEmpresaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_bodega_destinoParametroFactuEmpresaBusqueda")) {
				this.jButtonid_bodega_destinoParametroFactuEmpresaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_cliente_destinoParametroFactuEmpresa")) {
				this.jButtonid_cliente_destinoParametroFactuEmpresaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_cliente_destinoParametroFactuEmpresaUpdate")) {
				this.jButtonid_cliente_destinoParametroFactuEmpresaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_cliente_destinoParametroFactuEmpresaBusqueda")) {
				this.jButtonid_cliente_destinoParametroFactuEmpresaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("costo_destinoParametroFactuEmpresaBusqueda")) {
				this.jButtoncosto_destinoParametroFactuEmpresaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("con_transferenciaParametroFactuEmpresaBusqueda")) {
				this.jButtoncon_transferenciaParametroFactuEmpresaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_empresa_multi_destinoParametroFactuEmpresaUpdate")) {
				this.jButtonid_empresa_multi_destinoParametroFactuEmpresaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_empresa_multi_destinoParametroFactuEmpresaBusqueda")) {
				this.jButtonid_empresa_multi_destinoParametroFactuEmpresaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_sucursal_multi_destinoParametroFactuEmpresaUpdate")) {
				this.jButtonid_sucursal_multi_destinoParametroFactuEmpresaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_sucursal_multi_destinoParametroFactuEmpresaBusqueda")) {
				this.jButtonid_sucursal_multi_destinoParametroFactuEmpresaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_transaccion_multi_destinoParametroFactuEmpresaUpdate")) {
				this.jButtonid_transaccion_multi_destinoParametroFactuEmpresaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_transaccion_multi_destinoParametroFactuEmpresaBusqueda")) {
				this.jButtonid_transaccion_multi_destinoParametroFactuEmpresaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_bodega_multi_origenParametroFactuEmpresaUpdate")) {
				this.jButtonid_bodega_multi_origenParametroFactuEmpresaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_bodega_multi_origenParametroFactuEmpresaBusqueda")) {
				this.jButtonid_bodega_multi_origenParametroFactuEmpresaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_bodega_multi_destinoParametroFactuEmpresaUpdate")) {
				this.jButtonid_bodega_multi_destinoParametroFactuEmpresaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_bodega_multi_destinoParametroFactuEmpresaBusqueda")) {
				this.jButtonid_bodega_multi_destinoParametroFactuEmpresaBusquedaActionPerformed(evt);
			}
			
			ParametroFactuEmpresaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.KEY,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.parametrofactuempresa,new Object(),this.parametrofactuempresaParameterGeneral,this.parametrofactuempresaReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroFactuEmpresaConstantesFunciones.CLASSNAME);
			
  		}  finally {
      		this.finishProcessParametroFactuEmpresa();
      	}
    }
	
	public void internalFrameClosingInternalFrameGeneral(String sTipo,InternalFrameEvent evt) { 	  
		try {
			ParametroFactuEmpresaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.WINDOW,EventoTipo.CLIC,EventoSubTipo.CLOSING,sTipo,this.parametrofactuempresa,new Object(),this.parametrofactuempresaParameterGeneral,this.parametrofactuempresaReturnGeneral);
			
			if(sTipo.equals("CloseInternalFrameParametroFactuEmpresa")) {
				closingInternalFrameParametroFactuEmpresa();
				
			} else if(sTipo.equals("jButtonCancelarParametroFactuEmpresa")) {
				JInternalFrameBase jInternalFrameDetalleFormParametroFactuEmpresa = (JInternalFrameBase)evt.getSource();
	            	
	            ParametroFactuEmpresaBeanSwingJInternalFrame jInternalFrameParent=(ParametroFactuEmpresaBeanSwingJInternalFrame)jInternalFrameDetalleFormParametroFactuEmpresa.getjInternalFrameParent();
	            
				jInternalFrameParent.jButtonCancelarParametroFactuEmpresaActionPerformed(null);
			}
			
			ParametroFactuEmpresaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.WINDOW,EventoTipo.CLIC,EventoSubTipo.CLOSING,sTipo,this.parametrofactuempresa,new Object(),this.parametrofactuempresaParameterGeneral,this.parametrofactuempresaReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroFactuEmpresaConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void recargarFormParametroFactuEmpresa(String sTipo,String sDominio,EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,String sTipoGeneral,ArrayList<Classe> classes,Boolean conIrServidorAplicacion) throws Exception {
		this.recargarFormParametroFactuEmpresa(sTipo,sDominio,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipoGeneral,classes,conIrServidorAplicacion,false);
	}
	
	public void recargarFormParametroFactuEmpresa(String sTipo,String sDominio,EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,String sTipoGeneral,ArrayList<Classe> classes,Boolean conIrServidorAplicacion,Boolean esControlTabla) throws Exception {
		if(this.permiteRecargarForm && this.permiteMantenimiento(this.parametrofactuempresa)) {
			if(!esControlTabla) {
				if(ParametroFactuEmpresaJInternalFrame.ISBINDING_MANUAL_TABLA) {			
					this.setVariablesFormularioToObjetoActualParametroFactuEmpresa(this.parametrofactuempresa,true,false);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuEmpresa(this.parametrofactuempresa);			
				}
				
				if(this.parametrofactuempresaSessionBean.getEstaModoGuardarRelaciones()) {
					this.setVariablesFormularioRelacionesToObjetoActualParametroFactuEmpresa(this.parametrofactuempresa,classes);				
				}
			
				if(conIrServidorAplicacion) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {						
						this.parametrofactuempresaReturnGeneral=parametrofactuempresaLogic.procesarEventosParametroFactuEmpresasWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.parametrofactuempresaLogic.getParametroFactuEmpresas(),this.parametrofactuempresa,this.parametrofactuempresaParameterGeneral,this.isEsNuevoParametroFactuEmpresa,classes);//this.parametrofactuempresaLogic.getParametroFactuEmpresa()//sTipoGeneral
									
					} else if(Constantes.ISUSAEJBREMOTE) {
									
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE
					
					//ACTUALIZA VARIABLES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
					//this.setVariablesObjetoReturnGeneralToBeanParametroFactuEmpresa(this.parametrofactuempresaReturnGeneral,this.parametrofactuempresaBean,false);
						
					//ACTUALIZA VARIABLES RELACIONES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
					if(this.parametrofactuempresaSessionBean.getEstaModoGuardarRelaciones()) {
						//this.setVariablesRelacionesObjetoReturnGeneralToBeanParametroFactuEmpresa(classes,this.parametrofactuempresaReturnGeneral,this.parametrofactuempresaBean,false);
					}
						
					if(this.parametrofactuempresaReturnGeneral.getConRecargarPropiedades()) {
						//INICIALIZA VARIABLES COMBOS NORMALES (FK)
						this.setVariablesObjetoActualToFormularioForeignKeyParametroFactuEmpresa(this.parametrofactuempresaReturnGeneral.getParametroFactuEmpresa());
							
						//INICIALIZA VARIABLES NORMALES A FORMULARIO(SIN FK)
						this.setVariablesObjetoActualToFormularioParametroFactuEmpresa(this.parametrofactuempresaReturnGeneral.getParametroFactuEmpresa());	
					}
						
					if(this.parametrofactuempresaReturnGeneral.getConRecargarRelaciones()) {
						//INICIALIZA VARIABLES RELACIONES A FORMULARIO
						this.setVariablesRelacionesObjetoActualToFormularioParametroFactuEmpresa(this.parametrofactuempresaReturnGeneral.getParametroFactuEmpresa(),classes);//this.parametrofactuempresaBean);	
					}									
					
				} else {				
					//INICIALIZA VARIABLES RELACIONES A FORMULARIO
					this.setVariablesRelacionesObjetoActualToFormularioParametroFactuEmpresa(this.parametrofactuempresa,classes);//this.parametrofactuempresaBean);									
				}
			
				if(ParametroFactuEmpresaJInternalFrame.ISBINDING_MANUAL_TABLA) {
					this.setVariablesFormularioToObjetoActualParametroFactuEmpresa(this.parametrofactuempresa,true,false);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuEmpresa(this.parametrofactuempresa);				
				}
				
			} else {
				
				if(((controlTipo.equals(ControlTipo.TEXTBOX) || controlTipo.equals(ControlTipo.DATE)
					|| controlTipo.equals(ControlTipo.TEXTAREA) || controlTipo.equals(ControlTipo.COMBOBOX)
					)				
					&& eventoTipo.equals(EventoTipo.CHANGE)
					)
					
					|| (controlTipo.equals(ControlTipo.CHECKBOX) && eventoTipo.equals(EventoTipo.CLIC))
					
				) { // && sTipoGeneral.equals("TEXTBOX")
					
					if(this.parametrofactuempresaAnterior!=null) {
						this.parametrofactuempresa=this.parametrofactuempresaAnterior;
					}
				}
				
				if(conIrServidorAplicacion) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {						
						this.parametrofactuempresaReturnGeneral=parametrofactuempresaLogic.procesarEventosParametroFactuEmpresasWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.parametrofactuempresaLogic.getParametroFactuEmpresas(),this.parametrofactuempresa,this.parametrofactuempresaParameterGeneral,this.isEsNuevoParametroFactuEmpresa,classes);//this.parametrofactuempresaLogic.getParametroFactuEmpresa()//sTipoGeneral
									
					} else if(Constantes.ISUSAEJBREMOTE) {
									
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//NO ENTENDIBLE PORQUE PONER
					//if(this.parametrofactuempresaSessionBean.getEstaModoGuardarRelaciones() 
					//	|| this.parametrofactuempresaSessionBean.getEsGuardarRelacionado())	{
						actualizarLista(this.parametrofactuempresaReturnGeneral.getParametroFactuEmpresa(),parametrofactuempresaLogic.getParametroFactuEmpresas());
					//}
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(this.parametrofactuempresaReturnGeneral.getParametroFactuEmpresa(),this.parametrofactuempresas);
				}
				//ARCHITECTURE
				
				//this.jTableDatosParametroFactuEmpresa.repaint();
				
				//((AbstractTableModel) this.jTableDatosParametroFactuEmpresa.getModel()).fireTableDataChanged();
				
				this.actualizarVisualTableDatosParametroFactuEmpresa();
			}
		}
	}
	
	public void actualizarVisualTableDatosParametroFactuEmpresa() throws Exception {
		
		ParametroFactuEmpresaModel parametrofactuempresaModel=(ParametroFactuEmpresaModel)this.jTableDatosParametroFactuEmpresa.getModel();
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			parametrofactuempresaModel.parametrofactuempresas=this.parametrofactuempresaLogic.getParametroFactuEmpresas();
		
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
			parametrofactuempresaModel.parametrofactuempresas=this.parametrofactuempresas;
		}
		
		
		((ParametroFactuEmpresaModel) this.jTableDatosParametroFactuEmpresa.getModel()).fireTableDataChanged();
	}
	
	public void actualizarVisualTableDatosEventosVistaParametroFactuEmpresa() throws Exception {
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.actualizarLista(this.getparametrofactuempresaAnterior(),this.parametrofactuempresaLogic.getParametroFactuEmpresas());
					
		} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
			this.actualizarLista(this.getparametrofactuempresaAnterior(),this.parametrofactuempresas);
		}
		//ARCHITECTURE
						
		this.actualizarFilaTotales();
						
		this.actualizarVisualTableDatosParametroFactuEmpresa();	
	}
	
	public void setVariablesRelacionesObjetoActualToFormularioParametroFactuEmpresa(ParametroFactuEmpresa parametrofactuempresa,ArrayList<Classe> classes) throws Exception { 
		try {
			
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroFactuEmpresaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setEventoParentGeneral(Boolean esUsoDesdeHijo,String sDominio,String sDominioTipo,String sTipo,String sTipoGeneral,Boolean esControlTabla,Boolean conIrServidorAplicacion,
						Long id,Component control, EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,ArrayList<String> arrClasses,
						Object evt,GeneralEntityParameterReturnGeneral generalEntityParameterGeneral,Object otro) { 	  
		try {
			
			if(this.permiteManejarEventosControl()) {
				
				//BASE COPIADO DESDE TEXTFIELLOSTFOCUS
				
				//EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				Boolean conTodasRelaciones=false;
				
				this.esUsoDesdeHijo=esUsoDesdeHijo;
										
				ParametroFactuEmpresaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.parametrofactuempresa,new Object(),generalEntityParameterGeneral,this.parametrofactuempresaReturnGeneral);
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				for(String sClasse:arrClasses) {
					if(sClasse.equals("TODOS")) {
						conTodasRelaciones=true;
						break;
					}
				}
				
				if(this.parametrofactuempresaSessionBean.getConGuardarRelaciones()) {
					if(conTodasRelaciones) {
						classes=ParametroFactuEmpresaConstantesFunciones.getClassesRelationshipsOfParametroFactuEmpresa(new ArrayList<Classe>(),DeepLoadType.NONE);
					} else {
						classes=ParametroFactuEmpresaConstantesFunciones.getClassesRelationshipsFromStringsOfParametroFactuEmpresa(arrClasses,DeepLoadType.NONE);
					}
				}
	
				this.classesActual=new ArrayList<Classe>();
				this.classesActual.addAll(classes);
	
				this.recargarFormParametroFactuEmpresa(sTipo,sDominio,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipoGeneral,classes,conIrServidorAplicacion,esControlTabla);
										
				ParametroFactuEmpresaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.parametrofactuempresa,new Object(),generalEntityParameterGeneral,this.parametrofactuempresaReturnGeneral);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroFactuEmpresaConstantesFunciones.CLASSNAME);
  		}
    }
	
	/*
	public void setVariablesRelacionesObjetoBeanActualToFormularioParametroFactuEmpresa(ParametroFactuEmpresaBean parametrofactuempresaBean) throws Exception { 
		try {
			
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroFactuEmpresaConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesRelacionesObjetoReturnGeneralToBeanParametroFactuEmpresa(ArrayList<Classe> classes,ParametroFactuEmpresaReturnGeneral parametrofactuempresaReturnGeneral,ParametroFactuEmpresaBean parametrofactuempresaBean,Boolean conDefault) throws Exception {
		
	}
	*/
	
	public void setVariablesFormularioRelacionesToObjetoActualParametroFactuEmpresa(ParametroFactuEmpresa parametrofactuempresa,ArrayList<Classe> classes) throws Exception {
		
	}
	
	public Boolean permiteManejarEventosControl() {
		Boolean permite=true;				
		
		if(this.estaModoNuevo || this.estaModoSeleccionar || this.estaModoEliminarGuardarCambios) {
			permite=false;
			
		} 
		
		//NO DEBE MEZCLARSE CONCEPTOS
		/*	
		if(!paraTabla && !this.permiteMantenimiento(this.parametrofactuempresa)) {
			System.out.println("ERROR:EL OBJETO ACTUAL NO PUEDE SER FILA TOTALES");
				
			//JOptionPane.showMessageDialog(this,"EL OBJETO ACTUAL NO PUEDE SER FILA TOTALES","EVENTO",JOptionPane.ERROR_MESSAGE);			
		}
		*/
		
		return permite;
	}
	
	public void inicializarFormDetalle() throws Exception {
		
		this.jInternalFrameDetalleFormParametroFactuEmpresa = new ParametroFactuEmpresaDetalleFormJInternalFrame(jDesktopPane,this.parametrofactuempresaSessionBean.getConGuardarRelaciones(),this.parametrofactuempresaSessionBean.getEsGuardarRelacionado(),this.cargarRelaciones,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo);
		
		this.jDesktopPane.add(this.jInternalFrameDetalleFormParametroFactuEmpresa);
		this.jInternalFrameDetalleFormParametroFactuEmpresa.setVisible(false);
		this.jInternalFrameDetalleFormParametroFactuEmpresa.setSelected(false);						
		
		this.jInternalFrameDetalleFormParametroFactuEmpresa.setJInternalFrameParent(this);
		
		this.jInternalFrameDetalleFormParametroFactuEmpresa.parametrofactuempresaLogic=this.parametrofactuempresaLogic;
		
		this.cargarCombosFrameForeignKeyParametroFactuEmpresa("Formulario");
		
		this.inicializarActualizarBindingBotonesPermisosManualFormDetalleParametroFactuEmpresa();
		this.inicializarActualizarBindingtiposArchivosReportesAccionesManualFormDetalleParametroFactuEmpresa();
		
		this.initActionsFormDetalle();		
		
		this.initActionsCombosTodosForeignKeyParametroFactuEmpresa("Formulario");
		
		//TALVEZ conSetVariablesGlobales COMO if() 
		this.setVariablesGlobalesCombosForeignKeyParametroFactuEmpresa();
		
		this.cargarMenuRelaciones();
		
	}
	
	public void initActionsFormDetalle() {	
		
		this.jInternalFrameDetalleFormParametroFactuEmpresa.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"jButtonCancelarParametroFactuEmpresa"));
		
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtonModificarParametroFactuEmpresa.addActionListener(new ButtonActionListener(this,"ModificarParametroFactuEmpresa"));

		
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtonModificarToolBarParametroFactuEmpresa.addActionListener(new ButtonActionListener(this,"ModificarToolBarParametroFactuEmpresa"));
					
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jMenuItemModificarParametroFactuEmpresa.addActionListener(new ButtonActionListener(this,"MenuItemModificarParametroFactuEmpresa"));		
		
		
		
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtonActualizarParametroFactuEmpresa.addActionListener (new ButtonActionListener(this,"ActualizarParametroFactuEmpresa"));
		
		
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtonActualizarToolBarParametroFactuEmpresa.addActionListener(new ButtonActionListener(this,"ActualizarToolBarParametroFactuEmpresa"));
						
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jMenuItemActualizarParametroFactuEmpresa.addActionListener (new ButtonActionListener(this,"MenuItemActualizarParametroFactuEmpresa"));		
		
		
		
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtonEliminarParametroFactuEmpresa.addActionListener (new ButtonActionListener(this,"EliminarParametroFactuEmpresa"));
		
		
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtonEliminarToolBarParametroFactuEmpresa.addActionListener (new ButtonActionListener(this,"EliminarToolBarParametroFactuEmpresa"));
								
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jMenuItemEliminarParametroFactuEmpresa.addActionListener (new ButtonActionListener(this,"MenuItemEliminarParametroFactuEmpresa"));		
		
		
		
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtonCancelarParametroFactuEmpresa.addActionListener (new ButtonActionListener(this,"CancelarParametroFactuEmpresa"));
		
		
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtonCancelarToolBarParametroFactuEmpresa.addActionListener (new ButtonActionListener(this,"CancelarToolBarParametroFactuEmpresa"));
					
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jMenuItemCancelarParametroFactuEmpresa.addActionListener (new ButtonActionListener(this,"MenuItemCancelarParametroFactuEmpresa"));		
		
		
		
		
		
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jMenuItemDetalleCerrarParametroFactuEmpresa.addActionListener (new ButtonActionListener(this,"MenuItemDetalleCerrarParametroFactuEmpresa"));		
		
		
		
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtonGuardarCambiosToolBarParametroFactuEmpresa.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarParametroFactuEmpresa"));
		
		
		
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtonGuardarCambiosToolBarParametroFactuEmpresa.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarParametroFactuEmpresa"));
		
		
		
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxTiposAccionesFormularioParametroFactuEmpresa.addActionListener (new ButtonActionListener(this,"TiposAccionesFormularioParametroFactuEmpresa"));
		
		
				
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtonidParametroFactuEmpresaBusqueda.addActionListener(new ButtonActionListener(this,"idParametroFactuEmpresaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtonid_empresaParametroFactuEmpresaUpdate.addActionListener(new ButtonActionListener(this,"id_empresaParametroFactuEmpresaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtonid_empresaParametroFactuEmpresaBusqueda.addActionListener(new ButtonActionListener(this,"id_empresaParametroFactuEmpresaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtonid_empresa_origenParametroFactuEmpresaUpdate.addActionListener(new ButtonActionListener(this,"id_empresa_origenParametroFactuEmpresaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtonid_empresa_origenParametroFactuEmpresaBusqueda.addActionListener(new ButtonActionListener(this,"id_empresa_origenParametroFactuEmpresaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtonid_sucursalParametroFactuEmpresaUpdate.addActionListener(new ButtonActionListener(this,"id_sucursalParametroFactuEmpresaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtonid_sucursalParametroFactuEmpresaBusqueda.addActionListener(new ButtonActionListener(this,"id_sucursalParametroFactuEmpresaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtonid_transaccion_origenParametroFactuEmpresaUpdate.addActionListener(new ButtonActionListener(this,"id_transaccion_origenParametroFactuEmpresaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtonid_transaccion_origenParametroFactuEmpresaBusqueda.addActionListener(new ButtonActionListener(this,"id_transaccion_origenParametroFactuEmpresaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtonid_bodega_origenParametroFactuEmpresaUpdate.addActionListener(new ButtonActionListener(this,"id_bodega_origenParametroFactuEmpresaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtonid_bodega_origenParametroFactuEmpresaBusqueda.addActionListener(new ButtonActionListener(this,"id_bodega_origenParametroFactuEmpresaBusqueda"));
		//jButtonid_cliente_origenParametroFactuEmpresa.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_cliente_origenParametroFactuEmpresaActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtonid_cliente_origenParametroFactuEmpresa.addActionListener(new ButtonActionListener(this,"id_cliente_origenParametroFactuEmpresa"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtonid_cliente_origenParametroFactuEmpresaUpdate.addActionListener(new ButtonActionListener(this,"id_cliente_origenParametroFactuEmpresaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtonid_cliente_origenParametroFactuEmpresaBusqueda.addActionListener(new ButtonActionListener(this,"id_cliente_origenParametroFactuEmpresaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtoncosto_origenParametroFactuEmpresaBusqueda.addActionListener(new ButtonActionListener(this,"costo_origenParametroFactuEmpresaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtonid_empresa_destinoParametroFactuEmpresaUpdate.addActionListener(new ButtonActionListener(this,"id_empresa_destinoParametroFactuEmpresaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtonid_empresa_destinoParametroFactuEmpresaBusqueda.addActionListener(new ButtonActionListener(this,"id_empresa_destinoParametroFactuEmpresaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtonid_sucursal_destinoParametroFactuEmpresaUpdate.addActionListener(new ButtonActionListener(this,"id_sucursal_destinoParametroFactuEmpresaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtonid_sucursal_destinoParametroFactuEmpresaBusqueda.addActionListener(new ButtonActionListener(this,"id_sucursal_destinoParametroFactuEmpresaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtonid_transaccion_destinoParametroFactuEmpresaUpdate.addActionListener(new ButtonActionListener(this,"id_transaccion_destinoParametroFactuEmpresaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtonid_transaccion_destinoParametroFactuEmpresaBusqueda.addActionListener(new ButtonActionListener(this,"id_transaccion_destinoParametroFactuEmpresaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtonid_bodega_destinoParametroFactuEmpresaUpdate.addActionListener(new ButtonActionListener(this,"id_bodega_destinoParametroFactuEmpresaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtonid_bodega_destinoParametroFactuEmpresaBusqueda.addActionListener(new ButtonActionListener(this,"id_bodega_destinoParametroFactuEmpresaBusqueda"));
		//jButtonid_cliente_destinoParametroFactuEmpresa.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_cliente_destinoParametroFactuEmpresaActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtonid_cliente_destinoParametroFactuEmpresa.addActionListener(new ButtonActionListener(this,"id_cliente_destinoParametroFactuEmpresa"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtonid_cliente_destinoParametroFactuEmpresaUpdate.addActionListener(new ButtonActionListener(this,"id_cliente_destinoParametroFactuEmpresaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtonid_cliente_destinoParametroFactuEmpresaBusqueda.addActionListener(new ButtonActionListener(this,"id_cliente_destinoParametroFactuEmpresaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtoncosto_destinoParametroFactuEmpresaBusqueda.addActionListener(new ButtonActionListener(this,"costo_destinoParametroFactuEmpresaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtoncon_transferenciaParametroFactuEmpresaBusqueda.addActionListener(new ButtonActionListener(this,"con_transferenciaParametroFactuEmpresaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtonid_empresa_multi_destinoParametroFactuEmpresaUpdate.addActionListener(new ButtonActionListener(this,"id_empresa_multi_destinoParametroFactuEmpresaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtonid_empresa_multi_destinoParametroFactuEmpresaBusqueda.addActionListener(new ButtonActionListener(this,"id_empresa_multi_destinoParametroFactuEmpresaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtonid_sucursal_multi_destinoParametroFactuEmpresaUpdate.addActionListener(new ButtonActionListener(this,"id_sucursal_multi_destinoParametroFactuEmpresaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtonid_sucursal_multi_destinoParametroFactuEmpresaBusqueda.addActionListener(new ButtonActionListener(this,"id_sucursal_multi_destinoParametroFactuEmpresaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtonid_transaccion_multi_destinoParametroFactuEmpresaUpdate.addActionListener(new ButtonActionListener(this,"id_transaccion_multi_destinoParametroFactuEmpresaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtonid_transaccion_multi_destinoParametroFactuEmpresaBusqueda.addActionListener(new ButtonActionListener(this,"id_transaccion_multi_destinoParametroFactuEmpresaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtonid_bodega_multi_origenParametroFactuEmpresaUpdate.addActionListener(new ButtonActionListener(this,"id_bodega_multi_origenParametroFactuEmpresaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtonid_bodega_multi_origenParametroFactuEmpresaBusqueda.addActionListener(new ButtonActionListener(this,"id_bodega_multi_origenParametroFactuEmpresaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtonid_bodega_multi_destinoParametroFactuEmpresaUpdate.addActionListener(new ButtonActionListener(this,"id_bodega_multi_destinoParametroFactuEmpresaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtonid_bodega_multi_destinoParametroFactuEmpresaBusqueda.addActionListener(new ButtonActionListener(this,"id_bodega_multi_destinoParametroFactuEmpresaBusqueda"));
		
		
		;

		//TABBED PANE RELACIONES
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jTabbedPaneRelacionesParametroFactuEmpresa.addChangeListener(new TabbedPaneChangeListener(this,"RelacionesParametroFactuEmpresa"));
		
		;		
		//TABBED PANE RELACIONES FIN(EXTRA TAB)	
	}
	
	public void initActions() {				
		this.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"CloseInternalFrameParametroFactuEmpresa"));
		
		if(this.jInternalFrameDetalleFormParametroFactuEmpresa!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormParametroFactuEmpresa.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"jButtonCancelarParametroFactuEmpresa"));
		}
		
		this.jTableDatosParametroFactuEmpresa.getSelectionModel().addListSelectionListener(new TableListSelectionListener(this,"TableDatosSeleccionarParametroFactuEmpresa"));
		
		this.jTableDatosParametroFactuEmpresa.addMouseListener(new TableMouseAdapter(this,"DatosSeleccionarParametroFactuEmpresa"));
		
		this.jButtonNuevoParametroFactuEmpresa.addActionListener(new ButtonActionListener(this,"NuevoParametroFactuEmpresa"));
		
		this.jButtonDuplicarParametroFactuEmpresa.addActionListener(new ButtonActionListener(this,"DuplicarParametroFactuEmpresa"));
		
		this.jButtonCopiarParametroFactuEmpresa.addActionListener(new ButtonActionListener(this,"CopiarParametroFactuEmpresa"));
		
		this.jButtonVerFormParametroFactuEmpresa.addActionListener(new ButtonActionListener(this,"VerFormParametroFactuEmpresa"));
		
		
		this.jButtonNuevoToolBarParametroFactuEmpresa.addActionListener(new ButtonActionListener(this,"NuevoToolBarParametroFactuEmpresa"));
			
		this.jButtonDuplicarToolBarParametroFactuEmpresa.addActionListener(new ButtonActionListener(this,"DuplicarToolBarParametroFactuEmpresa"));
			
		this.jMenuItemNuevoParametroFactuEmpresa.addActionListener (new ButtonActionListener(this,"MenuItemNuevoParametroFactuEmpresa"));
			
		this.jMenuItemDuplicarParametroFactuEmpresa.addActionListener (new ButtonActionListener(this,"MenuItemDuplicarParametroFactuEmpresa"));		
		
		
		this.jButtonNuevoRelacionesParametroFactuEmpresa.addActionListener (new ButtonActionListener(this,"NuevoRelacionesParametroFactuEmpresa"));
		
		
		this.jButtonNuevoRelacionesToolBarParametroFactuEmpresa.addActionListener(new ButtonActionListener(this,"NuevoRelacionesToolBarParametroFactuEmpresa"));
			
		this.jMenuItemNuevoRelacionesParametroFactuEmpresa.addActionListener(new ButtonActionListener(this,"MenuItemNuevoRelacionesParametroFactuEmpresa"));		
		
		
		if(this.jInternalFrameDetalleFormParametroFactuEmpresa!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtonModificarParametroFactuEmpresa.addActionListener(new ButtonActionListener(this,"ModificarParametroFactuEmpresa"));
		}
		
		
		if(this.jInternalFrameDetalleFormParametroFactuEmpresa!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtonModificarToolBarParametroFactuEmpresa.addActionListener(new ButtonActionListener(this,"ModificarToolBarParametroFactuEmpresa"));
			
			this.jInternalFrameDetalleFormParametroFactuEmpresa.jMenuItemModificarParametroFactuEmpresa.addActionListener(new ButtonActionListener(this,"MenuItemModificarParametroFactuEmpresa"));		
		}
		
		
		if(this.jInternalFrameDetalleFormParametroFactuEmpresa!=null) { //if(this.conCargarFormDetalle) {			
			this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtonActualizarParametroFactuEmpresa.addActionListener (new ButtonActionListener(this,"ActualizarParametroFactuEmpresa"));
		}
		
		
		if(this.jInternalFrameDetalleFormParametroFactuEmpresa!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtonActualizarToolBarParametroFactuEmpresa.addActionListener(new ButtonActionListener(this,"ActualizarToolBarParametroFactuEmpresa"));
				
			this.jInternalFrameDetalleFormParametroFactuEmpresa.jMenuItemActualizarParametroFactuEmpresa.addActionListener (new ButtonActionListener(this,"MenuItemActualizarParametroFactuEmpresa"));		
		}
		
		
		if(this.jInternalFrameDetalleFormParametroFactuEmpresa!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtonEliminarParametroFactuEmpresa.addActionListener (new ButtonActionListener(this,"EliminarParametroFactuEmpresa"));
		}
		
		
		if(this.jInternalFrameDetalleFormParametroFactuEmpresa!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtonEliminarToolBarParametroFactuEmpresa.addActionListener (new ButtonActionListener(this,"EliminarToolBarParametroFactuEmpresa"));
						
			this.jInternalFrameDetalleFormParametroFactuEmpresa.jMenuItemEliminarParametroFactuEmpresa.addActionListener (new ButtonActionListener(this,"MenuItemEliminarParametroFactuEmpresa"));		
		}
		
		
		if(this.jInternalFrameDetalleFormParametroFactuEmpresa!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtonCancelarParametroFactuEmpresa.addActionListener (new ButtonActionListener(this,"CancelarParametroFactuEmpresa"));
		}
		
		
		if(this.jInternalFrameDetalleFormParametroFactuEmpresa!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtonCancelarToolBarParametroFactuEmpresa.addActionListener (new ButtonActionListener(this,"CancelarToolBarParametroFactuEmpresa"));
			
			this.jInternalFrameDetalleFormParametroFactuEmpresa.jMenuItemCancelarParametroFactuEmpresa.addActionListener (new ButtonActionListener(this,"MenuItemCancelarParametroFactuEmpresa"));		
		}
		
		this.jButtonMostrarOcultarTablaToolBarParametroFactuEmpresa.addActionListener (new ButtonActionListener(this,"MostrarOcultarToolBarParametroFactuEmpresa"));		
		
		
		this.jButtonCerrarParametroFactuEmpresa.addActionListener (new ButtonActionListener(this,"CerrarParametroFactuEmpresa"));
		
		
		this.jButtonCerrarToolBarParametroFactuEmpresa.addActionListener (new ButtonActionListener(this,"CerrarToolBarParametroFactuEmpresa"));
			
		this.jMenuItemCerrarParametroFactuEmpresa.addActionListener (new ButtonActionListener(this,"MenuItemCerrarParametroFactuEmpresa"));
			
		if(this.jInternalFrameDetalleFormParametroFactuEmpresa!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormParametroFactuEmpresa.jMenuItemDetalleCerrarParametroFactuEmpresa.addActionListener (new ButtonActionListener(this,"MenuItemDetalleCerrarParametroFactuEmpresa"));		
		}
		
		
		if(this.jInternalFrameDetalleFormParametroFactuEmpresa!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtonGuardarCambiosParametroFactuEmpresa.addActionListener (new ButtonActionListener(this,"GuardarCambiosParametroFactuEmpresa"));
		}
		
		
		if(this.jInternalFrameDetalleFormParametroFactuEmpresa!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtonGuardarCambiosToolBarParametroFactuEmpresa.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarParametroFactuEmpresa"));
		}
		
		this.jButtonCopiarToolBarParametroFactuEmpresa.addActionListener (new ButtonActionListener(this,"CopiarToolBarParametroFactuEmpresa"));
			
		this.jButtonVerFormToolBarParametroFactuEmpresa.addActionListener (new ButtonActionListener(this,"VerFormToolBarParametroFactuEmpresa"));
		
		this.jMenuItemGuardarCambiosParametroFactuEmpresa.addActionListener (new ButtonActionListener(this,"MenuItemGuardarCambiosParametroFactuEmpresa"));
			
		this.jMenuItemCopiarParametroFactuEmpresa.addActionListener (new ButtonActionListener(this,"MenuItemCopiarParametroFactuEmpresa"));		
		
		this.jMenuItemVerFormParametroFactuEmpresa.addActionListener (new ButtonActionListener(this,"MenuItemVerFormParametroFactuEmpresa"));		
		
		
		this.jButtonGuardarCambiosTablaParametroFactuEmpresa.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaParametroFactuEmpresa"));
		
		
		this.jButtonGuardarCambiosTablaToolBarParametroFactuEmpresa.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaToolBarParametroFactuEmpresa"));
			
		this.jMenuItemGuardarCambiosTablaParametroFactuEmpresa.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaParametroFactuEmpresa"));		
		
		
		
		this.jButtonRecargarInformacionParametroFactuEmpresa.addActionListener (new ButtonActionListener(this,"RecargarInformacionParametroFactuEmpresa"));
					
		this.jButtonRecargarInformacionToolBarParametroFactuEmpresa.addActionListener (new ButtonActionListener(this,"RecargarInformacionToolBarParametroFactuEmpresa"));
		
		this.jMenuItemRecargarInformacionParametroFactuEmpresa.addActionListener (new ButtonActionListener(this,"MenuItemRecargarInformacionParametroFactuEmpresa"));		
		
		
		
		this.jButtonAnterioresParametroFactuEmpresa.addActionListener (new ButtonActionListener(this,"AnterioresParametroFactuEmpresa"));
		
		
		this.jButtonAnterioresToolBarParametroFactuEmpresa.addActionListener (new ButtonActionListener(this,"AnterioresToolBarParametroFactuEmpresa"));
		
		this.jMenuItemAnterioresParametroFactuEmpresa.addActionListener (new ButtonActionListener(this,"MenuItemAnterioresParametroFactuEmpresa"));		
		
		
		this.jButtonSiguientesParametroFactuEmpresa.addActionListener (new ButtonActionListener(this,"SiguientesParametroFactuEmpresa"));
		
		
		this.jButtonSiguientesToolBarParametroFactuEmpresa.addActionListener (new ButtonActionListener(this,"SiguientesToolBarParametroFactuEmpresa"));
			
		this.jMenuItemSiguientesParametroFactuEmpresa.addActionListener (new ButtonActionListener(this,"MenuItemSiguientesParametroFactuEmpresa"));
			
		this.jMenuItemAbrirOrderByParametroFactuEmpresa.addActionListener (new ButtonActionListener(this,"MenuItemAbrirOrderByParametroFactuEmpresa"));
			
		this.jMenuItemMostrarOcultarParametroFactuEmpresa.addActionListener (new ButtonActionListener(this,"MenuItemMostrarOcultarParametroFactuEmpresa"));
			
		this.jMenuItemDetalleAbrirOrderByParametroFactuEmpresa.addActionListener (new ButtonActionListener(this,"MenuItemDetalleAbrirOrderByParametroFactuEmpresa"));
			
		this.jMenuItemDetalleMostarOcultarParametroFactuEmpresa.addActionListener (new ButtonActionListener(this,"MenuItemDetalleMostrarOcultarParametroFactuEmpresa"));		
		
		
		this.jButtonNuevoGuardarCambiosParametroFactuEmpresa.addActionListener (new ButtonActionListener(this,"NuevoGuardarCambiosParametroFactuEmpresa"));
		
		
		this.jButtonNuevoGuardarCambiosToolBarParametroFactuEmpresa.addActionListener (new ButtonActionListener(this,"NuevoGuardarCambiosToolBarParametroFactuEmpresa"));
			
		this.jMenuItemNuevoGuardarCambiosParametroFactuEmpresa.addActionListener (new ButtonActionListener(this,"MenuItemNuevoGuardarCambiosParametroFactuEmpresa"));		
		
		
		
		//SELECCIONAR TODOS
		
		this.jCheckBoxSeleccionarTodosParametroFactuEmpresa.addItemListener(new CheckBoxItemListener(this,"SeleccionarTodosParametroFactuEmpresa"));

		this.jCheckBoxSeleccionadosParametroFactuEmpresa.addItemListener(new CheckBoxItemListener(this,"SeleccionadosParametroFactuEmpresa"));
		
		if(this.jInternalFrameDetalleFormParametroFactuEmpresa!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxTiposAccionesFormularioParametroFactuEmpresa.addActionListener (new ButtonActionListener(this,"TiposAccionesFormularioParametroFactuEmpresa"));
		}
		
		
		this.jComboBoxTiposRelacionesParametroFactuEmpresa.addActionListener (new ButtonActionListener(this,"TiposRelacionesParametroFactuEmpresa"));
			
		this.jComboBoxTiposAccionesParametroFactuEmpresa.addActionListener (new ButtonActionListener(this,"TiposAccionesParametroFactuEmpresa"));
					
		this.jComboBoxTiposSeleccionarParametroFactuEmpresa.addActionListener (new ButtonActionListener(this,"TiposSeleccionarParametroFactuEmpresa"));
			
		this.jTextFieldValorCampoGeneralParametroFactuEmpresa.addActionListener (new ButtonActionListener(this,"ValorCampoGeneralParametroFactuEmpresa"));		
		
		
		if(this.jInternalFrameDetalleFormParametroFactuEmpresa!=null) { //if(this.conCargarFormDetalle) {
		
		
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtonidParametroFactuEmpresaBusqueda.addActionListener(new ButtonActionListener(this,"idParametroFactuEmpresaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtonid_empresaParametroFactuEmpresaUpdate.addActionListener(new ButtonActionListener(this,"id_empresaParametroFactuEmpresaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtonid_empresaParametroFactuEmpresaBusqueda.addActionListener(new ButtonActionListener(this,"id_empresaParametroFactuEmpresaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtonid_empresa_origenParametroFactuEmpresaUpdate.addActionListener(new ButtonActionListener(this,"id_empresa_origenParametroFactuEmpresaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtonid_empresa_origenParametroFactuEmpresaBusqueda.addActionListener(new ButtonActionListener(this,"id_empresa_origenParametroFactuEmpresaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtonid_sucursalParametroFactuEmpresaUpdate.addActionListener(new ButtonActionListener(this,"id_sucursalParametroFactuEmpresaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtonid_sucursalParametroFactuEmpresaBusqueda.addActionListener(new ButtonActionListener(this,"id_sucursalParametroFactuEmpresaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtonid_transaccion_origenParametroFactuEmpresaUpdate.addActionListener(new ButtonActionListener(this,"id_transaccion_origenParametroFactuEmpresaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtonid_transaccion_origenParametroFactuEmpresaBusqueda.addActionListener(new ButtonActionListener(this,"id_transaccion_origenParametroFactuEmpresaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtonid_bodega_origenParametroFactuEmpresaUpdate.addActionListener(new ButtonActionListener(this,"id_bodega_origenParametroFactuEmpresaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtonid_bodega_origenParametroFactuEmpresaBusqueda.addActionListener(new ButtonActionListener(this,"id_bodega_origenParametroFactuEmpresaBusqueda"));
		//jButtonid_cliente_origenParametroFactuEmpresa.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_cliente_origenParametroFactuEmpresaActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtonid_cliente_origenParametroFactuEmpresa.addActionListener(new ButtonActionListener(this,"id_cliente_origenParametroFactuEmpresa"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtonid_cliente_origenParametroFactuEmpresaUpdate.addActionListener(new ButtonActionListener(this,"id_cliente_origenParametroFactuEmpresaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtonid_cliente_origenParametroFactuEmpresaBusqueda.addActionListener(new ButtonActionListener(this,"id_cliente_origenParametroFactuEmpresaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtoncosto_origenParametroFactuEmpresaBusqueda.addActionListener(new ButtonActionListener(this,"costo_origenParametroFactuEmpresaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtonid_empresa_destinoParametroFactuEmpresaUpdate.addActionListener(new ButtonActionListener(this,"id_empresa_destinoParametroFactuEmpresaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtonid_empresa_destinoParametroFactuEmpresaBusqueda.addActionListener(new ButtonActionListener(this,"id_empresa_destinoParametroFactuEmpresaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtonid_sucursal_destinoParametroFactuEmpresaUpdate.addActionListener(new ButtonActionListener(this,"id_sucursal_destinoParametroFactuEmpresaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtonid_sucursal_destinoParametroFactuEmpresaBusqueda.addActionListener(new ButtonActionListener(this,"id_sucursal_destinoParametroFactuEmpresaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtonid_transaccion_destinoParametroFactuEmpresaUpdate.addActionListener(new ButtonActionListener(this,"id_transaccion_destinoParametroFactuEmpresaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtonid_transaccion_destinoParametroFactuEmpresaBusqueda.addActionListener(new ButtonActionListener(this,"id_transaccion_destinoParametroFactuEmpresaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtonid_bodega_destinoParametroFactuEmpresaUpdate.addActionListener(new ButtonActionListener(this,"id_bodega_destinoParametroFactuEmpresaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtonid_bodega_destinoParametroFactuEmpresaBusqueda.addActionListener(new ButtonActionListener(this,"id_bodega_destinoParametroFactuEmpresaBusqueda"));
		//jButtonid_cliente_destinoParametroFactuEmpresa.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_cliente_destinoParametroFactuEmpresaActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtonid_cliente_destinoParametroFactuEmpresa.addActionListener(new ButtonActionListener(this,"id_cliente_destinoParametroFactuEmpresa"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtonid_cliente_destinoParametroFactuEmpresaUpdate.addActionListener(new ButtonActionListener(this,"id_cliente_destinoParametroFactuEmpresaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtonid_cliente_destinoParametroFactuEmpresaBusqueda.addActionListener(new ButtonActionListener(this,"id_cliente_destinoParametroFactuEmpresaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtoncosto_destinoParametroFactuEmpresaBusqueda.addActionListener(new ButtonActionListener(this,"costo_destinoParametroFactuEmpresaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtoncon_transferenciaParametroFactuEmpresaBusqueda.addActionListener(new ButtonActionListener(this,"con_transferenciaParametroFactuEmpresaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtonid_empresa_multi_destinoParametroFactuEmpresaUpdate.addActionListener(new ButtonActionListener(this,"id_empresa_multi_destinoParametroFactuEmpresaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtonid_empresa_multi_destinoParametroFactuEmpresaBusqueda.addActionListener(new ButtonActionListener(this,"id_empresa_multi_destinoParametroFactuEmpresaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtonid_sucursal_multi_destinoParametroFactuEmpresaUpdate.addActionListener(new ButtonActionListener(this,"id_sucursal_multi_destinoParametroFactuEmpresaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtonid_sucursal_multi_destinoParametroFactuEmpresaBusqueda.addActionListener(new ButtonActionListener(this,"id_sucursal_multi_destinoParametroFactuEmpresaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtonid_transaccion_multi_destinoParametroFactuEmpresaUpdate.addActionListener(new ButtonActionListener(this,"id_transaccion_multi_destinoParametroFactuEmpresaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtonid_transaccion_multi_destinoParametroFactuEmpresaBusqueda.addActionListener(new ButtonActionListener(this,"id_transaccion_multi_destinoParametroFactuEmpresaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtonid_bodega_multi_origenParametroFactuEmpresaUpdate.addActionListener(new ButtonActionListener(this,"id_bodega_multi_origenParametroFactuEmpresaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtonid_bodega_multi_origenParametroFactuEmpresaBusqueda.addActionListener(new ButtonActionListener(this,"id_bodega_multi_origenParametroFactuEmpresaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtonid_bodega_multi_destinoParametroFactuEmpresaUpdate.addActionListener(new ButtonActionListener(this,"id_bodega_multi_destinoParametroFactuEmpresaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtonid_bodega_multi_destinoParametroFactuEmpresaBusqueda.addActionListener(new ButtonActionListener(this,"id_bodega_multi_destinoParametroFactuEmpresaBusqueda"));
		}
		
		if(!this.conCargarMinimo) {
		//BYDAN_BUSQUEDAS
		
		
			this.jButtonFK_IdBodegaDestinoParametroFactuEmpresa.addActionListener(new ButtonActionListener(this,"FK_IdBodegaDestinoParametroFactuEmpresa"));

			this.jButtonFK_IdBodegaMultiDestinoParametroFactuEmpresa.addActionListener(new ButtonActionListener(this,"FK_IdBodegaMultiDestinoParametroFactuEmpresa"));

			this.jButtonFK_IdBodegaMultiOrigenParametroFactuEmpresa.addActionListener(new ButtonActionListener(this,"FK_IdBodegaMultiOrigenParametroFactuEmpresa"));

			this.jButtonFK_IdBodegaOrigenParametroFactuEmpresa.addActionListener(new ButtonActionListener(this,"FK_IdBodegaOrigenParametroFactuEmpresa"));

			this.jButtonFK_IdClienteDestinoParametroFactuEmpresa.addActionListener(new ButtonActionListener(this,"FK_IdClienteDestinoParametroFactuEmpresa"));

			this.jButtonBuscarFK_IdClienteDestinoid_cliente_destinoParametroFactuEmpresa.addActionListener(new ButtonActionListener(this,"id_cliente_destinoParametroFactuEmpresa"));

			this.jButtonFK_IdClienteOrigenParametroFactuEmpresa.addActionListener(new ButtonActionListener(this,"FK_IdClienteOrigenParametroFactuEmpresa"));

			this.jButtonBuscarFK_IdClienteOrigenid_cliente_origenParametroFactuEmpresa.addActionListener(new ButtonActionListener(this,"id_cliente_origenParametroFactuEmpresa"));

			this.jButtonFK_IdEmpresaDestinoParametroFactuEmpresa.addActionListener(new ButtonActionListener(this,"FK_IdEmpresaDestinoParametroFactuEmpresa"));

			this.jButtonFK_IdEmpresaMultiDestinoParametroFactuEmpresa.addActionListener(new ButtonActionListener(this,"FK_IdEmpresaMultiDestinoParametroFactuEmpresa"));

			this.jButtonFK_IdEmpresaOrigenParametroFactuEmpresa.addActionListener(new ButtonActionListener(this,"FK_IdEmpresaOrigenParametroFactuEmpresa"));

			this.jButtonFK_IdSucursalParametroFactuEmpresa.addActionListener(new ButtonActionListener(this,"FK_IdSucursalParametroFactuEmpresa"));

			this.jButtonFK_IdSucursalDestinoParametroFactuEmpresa.addActionListener(new ButtonActionListener(this,"FK_IdSucursalDestinoParametroFactuEmpresa"));

			this.jButtonFK_IdSucursalMultiDestinoParametroFactuEmpresa.addActionListener(new ButtonActionListener(this,"FK_IdSucursalMultiDestinoParametroFactuEmpresa"));

			this.jButtonFK_IdTransaccionDestinoParametroFactuEmpresa.addActionListener(new ButtonActionListener(this,"FK_IdTransaccionDestinoParametroFactuEmpresa"));

			this.jButtonFK_IdTransaccionMultiDestinoParametroFactuEmpresa.addActionListener(new ButtonActionListener(this,"FK_IdTransaccionMultiDestinoParametroFactuEmpresa"));

			this.jButtonFK_IdTransaccionOrigenParametroFactuEmpresa.addActionListener(new ButtonActionListener(this,"FK_IdTransaccionOrigenParametroFactuEmpresa"));
		
		
		
			//REPORTE DINAMICO
			
			if(this.jInternalFrameReporteDinamicoParametroFactuEmpresa!=null) {
				this.jInternalFrameReporteDinamicoParametroFactuEmpresa.getjButtonCerrarReporteDinamico().addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoParametroFactuEmpresa"));
				this.jInternalFrameReporteDinamicoParametroFactuEmpresa.getjButtonGenerarReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoParametroFactuEmpresa"));
				this.jInternalFrameReporteDinamicoParametroFactuEmpresa.getjButtonGenerarExcelReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoParametroFactuEmpresa"));
			}
			
			//this.jButtonCerrarReporteDinamicoParametroFactuEmpresa.addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoParametroFactuEmpresa"));				
			//this.jButtonGenerarReporteDinamicoParametroFactuEmpresa.addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoParametroFactuEmpresa"));
			//this.jButtonGenerarExcelReporteDinamicoParametroFactuEmpresa.addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoParametroFactuEmpresa"));
				
				
			//IMPORTACION			
			if(this.jInternalFrameImportacionParametroFactuEmpresa!=null) {
				this.jInternalFrameImportacionParametroFactuEmpresa.getjButtonCerrarImportacion().addActionListener (new ButtonActionListener(this,"CerrarImportacionParametroFactuEmpresa"));
				this.jInternalFrameImportacionParametroFactuEmpresa.getjButtonGenerarImportacion().addActionListener (new ButtonActionListener(this,"GenerarImportacionParametroFactuEmpresa"));
				this.jInternalFrameImportacionParametroFactuEmpresa.getjButtonAbrirImportacion().addActionListener (new ButtonActionListener(this,"AbrirImportacionParametroFactuEmpresa"));
			}
			
			//ORDER BY
			this.jButtonAbrirOrderByParametroFactuEmpresa.addActionListener (new ButtonActionListener(this,"AbrirOrderByParametroFactuEmpresa"));
			
			this.jButtonAbrirOrderByToolBarParametroFactuEmpresa.addActionListener (new ButtonActionListener(this,"AbrirOrderByToolBarParametroFactuEmpresa"));			
			
			if(this.jInternalFrameOrderByParametroFactuEmpresa!=null) {
				this.jInternalFrameOrderByParametroFactuEmpresa.getjButtonCerrarOrderBy().addActionListener (new ButtonActionListener(this,"CerrarOrderByParametroFactuEmpresa"));				
			}
			
			
		}
		
		
		
		if(!this.conCargarMinimo) {
			if(this.jInternalFrameDetalleFormParametroFactuEmpresa!=null) { //if(this.conCargarFormDetalle) {
			;
			}
		}
		
		
		//TABBED PANE RELACIONES
		if(this.jInternalFrameDetalleFormParametroFactuEmpresa!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormParametroFactuEmpresa.jTabbedPaneRelacionesParametroFactuEmpresa.addChangeListener(new TabbedPaneChangeListener(this,"RelacionesParametroFactuEmpresa"));
		
		;
		}
		//TABBED PANE RELACIONES FIN(EXTRA TAB)		
	}
	
	/*
	public void initActions() {
		String sMapKey = "";
		InputMap inputMap =null;
		
		this.addInternalFrameListener(new javax.swing.event.InternalFrameAdapter() {
            public void internalFrameClosing(InternalFrameEvent event) {          	
            	try {
            		closingInternalFrameParametroFactuEmpresa();
				} catch (Exception e) {
					e.printStackTrace();
				}
            }
        });
		
		this.jInternalFrameDetalleFormParametroFactuEmpresa.addInternalFrameListener(new javax.swing.event.InternalFrameAdapter() {
	        public void internalFrameClosing(InternalFrameEvent event) {
	            JInternalFrameBase jInternalFrameDetalleFormParametroFactuEmpresa = (JInternalFrameBase)event.getSource();
	            	
	            ParametroFactuEmpresaBeanSwingJInternalFrame jInternalFrameParent=(ParametroFactuEmpresaBeanSwingJInternalFrame)jInternalFrameDetalleFormParametroFactuEmpresa.getjInternalFrameParent();
	                
	            try {
					jInternalFrameParent.jButtonCancelarParametroFactuEmpresaActionPerformed(null);
					
					//jInternalFrameParent.dispose();
					//jInternalFrameParent=null;
					
				} catch (Exception e) {
					e.printStackTrace();
				}
	        }
	    });
			
		this.jTableDatosParametroFactuEmpresa.getSelectionModel().addListSelectionListener (
	                new ListSelectionListener() {
	                    public void valueChanged(ListSelectionEvent e) {
							//BYDAN_DESHABILITADO
	                    	//try {jTableDatosParametroFactuEmpresaListSelectionListener(e);}catch(Exception e1){e1.printStackTrace();}
	                    }
	                }
	     );
		
		this.jTableDatosParametroFactuEmpresa.addMouseListener(new MouseAdapter() {
			   public void mouseClicked(MouseEvent evt) {
				      if (evt.getClickCount() == 2) {
				    	  jButtonIdActionPerformed(null,jTableDatosParametroFactuEmpresa.getSelectedRow(),false,false);
				      }
				   }
		});
		
		this.jButtonNuevoParametroFactuEmpresa.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoParametroFactuEmpresaActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoToolBarParametroFactuEmpresa.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoParametroFactuEmpresaActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoParametroFactuEmpresa.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoParametroFactuEmpresaActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "NuevoParametroFactuEmpresa";
		inputMap = this.jButtonNuevoParametroFactuEmpresa.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_N , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonNuevoParametroFactuEmpresa.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonNuevoParametroFactuEmpresaActionPerformed(evt,false);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonNuevoRelacionesParametroFactuEmpresa.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoParametroFactuEmpresaActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoRelacionesToolBarParametroFactuEmpresa.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoParametroFactuEmpresaActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoRelacionesParametroFactuEmpresa.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoParametroFactuEmpresaActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "NuevoRelacionesParametroFactuEmpresa";
		inputMap = this.jButtonNuevoRelacionesParametroFactuEmpresa.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_R , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonNuevoRelacionesParametroFactuEmpresa.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonNuevoParametroFactuEmpresaActionPerformed(evt,true);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonModificarParametroFactuEmpresa.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarParametroFactuEmpresaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonModificarToolBarParametroFactuEmpresa.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarParametroFactuEmpresaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemModificarParametroFactuEmpresa.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarParametroFactuEmpresaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "ModificarParametroFactuEmpresa";
		inputMap = this.jButtonModificarParametroFactuEmpresa.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_M , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonModificarParametroFactuEmpresa.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonModificarParametroFactuEmpresaActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonActualizarParametroFactuEmpresa.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarParametroFactuEmpresaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonActualizarToolBarParametroFactuEmpresa.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarParametroFactuEmpresaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemActualizarParametroFactuEmpresa.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarParametroFactuEmpresaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "ActualizarParametroFactuEmpresa";
		inputMap = this.jButtonActualizarParametroFactuEmpresa.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_G , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonActualizarParametroFactuEmpresa.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonActualizarParametroFactuEmpresaActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonEliminarParametroFactuEmpresa.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarParametroFactuEmpresaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonEliminarToolBarParametroFactuEmpresa.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarParametroFactuEmpresaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
				
		this.jMenuItemEliminarParametroFactuEmpresa.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarParametroFactuEmpresaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "EliminarParametroFactuEmpresa";
		inputMap = this.jButtonEliminarParametroFactuEmpresa.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_E , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonEliminarParametroFactuEmpresa.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonEliminarParametroFactuEmpresaActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonCancelarParametroFactuEmpresa.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarParametroFactuEmpresaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonCancelarToolBarParametroFactuEmpresa.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarParametroFactuEmpresaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemCancelarParametroFactuEmpresa.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarParametroFactuEmpresaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "CancelarParametroFactuEmpresa";
		inputMap = this.jButtonCancelarParametroFactuEmpresa.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_Q , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonCancelarParametroFactuEmpresa.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonCancelarParametroFactuEmpresaActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonCerrarParametroFactuEmpresa.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarParametroFactuEmpresaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonCerrarToolBarParametroFactuEmpresa.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarParametroFactuEmpresaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemCerrarParametroFactuEmpresa.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarParametroFactuEmpresaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemDetalleCerrarParametroFactuEmpresa.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  //try {jButtonCerrarParametroFactuEmpresaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
					try {jButtonCancelarParametroFactuEmpresaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "CerrarParametroFactuEmpresa";
		inputMap = this.jButtonCerrarParametroFactuEmpresa.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_C , KeyEvent.ALT_MASK), sMapKey);
			
		this.jButtonCerrarParametroFactuEmpresa.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonCerrarParametroFactuEmpresaActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtonGuardarCambiosParametroFactuEmpresa.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosParametroFactuEmpresaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosToolBarParametroFactuEmpresa.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosParametroFactuEmpresaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemGuardarCambiosParametroFactuEmpresa.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosParametroFactuEmpresaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosTablaParametroFactuEmpresa.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosParametroFactuEmpresaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosTablaToolBarParametroFactuEmpresa.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosParametroFactuEmpresaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemGuardarCambiosTablaParametroFactuEmpresa.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosParametroFactuEmpresaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "GuardarCambiosParametroFactuEmpresa";
		inputMap = this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtonGuardarCambiosParametroFactuEmpresa.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_G , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtonGuardarCambiosParametroFactuEmpresa.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonGuardarCambiosParametroFactuEmpresaActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonRecargarInformacionParametroFactuEmpresa.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionParametroFactuEmpresaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonRecargarInformacionToolBarParametroFactuEmpresa.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionParametroFactuEmpresaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemRecargarInformacionParametroFactuEmpresa.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionParametroFactuEmpresaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		
		this.jButtonAnterioresParametroFactuEmpresa.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresParametroFactuEmpresaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonAnterioresToolBarParametroFactuEmpresa.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresParametroFactuEmpresaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemAnterioresParametroFactuEmpresa.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresParametroFactuEmpresaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonSiguientesParametroFactuEmpresa.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesParametroFactuEmpresaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonSiguientesToolBarParametroFactuEmpresa.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesParametroFactuEmpresaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemSiguientesParametroFactuEmpresa.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesParametroFactuEmpresaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoGuardarCambiosParametroFactuEmpresa.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosParametroFactuEmpresaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoGuardarCambiosToolBarParametroFactuEmpresa.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosParametroFactuEmpresaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoGuardarCambiosParametroFactuEmpresa.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosParametroFactuEmpresaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		
		//SELECCIONAR TODOS
		this.jCheckBoxSeleccionarTodosParametroFactuEmpresa.addItemListener(new ItemListener() {		
			public void itemStateChanged(ItemEvent evt) {
				try {jCheckBoxSeleccionarTodosParametroFactuEmpresaItemListener(evt);}catch(Exception e){e.printStackTrace();}
			}
		});

		this.jComboBoxTiposAccionesParametroFactuEmpresa.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jComboBoxTiposAccionesParametroFactuEmpresaActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		this.jComboBoxTiposSeleccionarParametroFactuEmpresa.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jComboBoxTiposSeleccionarParametroFactuEmpresaActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		this.jTextFieldValorCampoGeneralParametroFactuEmpresa.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jTextFieldValorCampoGeneralParametroFactuEmpresaActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtonidParametroFactuEmpresaBusqueda.addActionListener(new ButtonActionListener(this,"idParametroFactuEmpresaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtonid_empresaParametroFactuEmpresaUpdate.addActionListener(new ButtonActionListener(this,"id_empresaParametroFactuEmpresaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtonid_empresaParametroFactuEmpresaBusqueda.addActionListener(new ButtonActionListener(this,"id_empresaParametroFactuEmpresaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtonid_empresa_origenParametroFactuEmpresaUpdate.addActionListener(new ButtonActionListener(this,"id_empresa_origenParametroFactuEmpresaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtonid_empresa_origenParametroFactuEmpresaBusqueda.addActionListener(new ButtonActionListener(this,"id_empresa_origenParametroFactuEmpresaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtonid_sucursalParametroFactuEmpresaUpdate.addActionListener(new ButtonActionListener(this,"id_sucursalParametroFactuEmpresaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtonid_sucursalParametroFactuEmpresaBusqueda.addActionListener(new ButtonActionListener(this,"id_sucursalParametroFactuEmpresaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtonid_transaccion_origenParametroFactuEmpresaUpdate.addActionListener(new ButtonActionListener(this,"id_transaccion_origenParametroFactuEmpresaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtonid_transaccion_origenParametroFactuEmpresaBusqueda.addActionListener(new ButtonActionListener(this,"id_transaccion_origenParametroFactuEmpresaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtonid_bodega_origenParametroFactuEmpresaUpdate.addActionListener(new ButtonActionListener(this,"id_bodega_origenParametroFactuEmpresaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtonid_bodega_origenParametroFactuEmpresaBusqueda.addActionListener(new ButtonActionListener(this,"id_bodega_origenParametroFactuEmpresaBusqueda"));
		//jButtonid_cliente_origenParametroFactuEmpresa.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_cliente_origenParametroFactuEmpresaActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtonid_cliente_origenParametroFactuEmpresa.addActionListener(new ButtonActionListener(this,"id_cliente_origenParametroFactuEmpresa"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtonid_cliente_origenParametroFactuEmpresaUpdate.addActionListener(new ButtonActionListener(this,"id_cliente_origenParametroFactuEmpresaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtonid_cliente_origenParametroFactuEmpresaBusqueda.addActionListener(new ButtonActionListener(this,"id_cliente_origenParametroFactuEmpresaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtoncosto_origenParametroFactuEmpresaBusqueda.addActionListener(new ButtonActionListener(this,"costo_origenParametroFactuEmpresaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtonid_empresa_destinoParametroFactuEmpresaUpdate.addActionListener(new ButtonActionListener(this,"id_empresa_destinoParametroFactuEmpresaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtonid_empresa_destinoParametroFactuEmpresaBusqueda.addActionListener(new ButtonActionListener(this,"id_empresa_destinoParametroFactuEmpresaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtonid_sucursal_destinoParametroFactuEmpresaUpdate.addActionListener(new ButtonActionListener(this,"id_sucursal_destinoParametroFactuEmpresaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtonid_sucursal_destinoParametroFactuEmpresaBusqueda.addActionListener(new ButtonActionListener(this,"id_sucursal_destinoParametroFactuEmpresaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtonid_transaccion_destinoParametroFactuEmpresaUpdate.addActionListener(new ButtonActionListener(this,"id_transaccion_destinoParametroFactuEmpresaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtonid_transaccion_destinoParametroFactuEmpresaBusqueda.addActionListener(new ButtonActionListener(this,"id_transaccion_destinoParametroFactuEmpresaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtonid_bodega_destinoParametroFactuEmpresaUpdate.addActionListener(new ButtonActionListener(this,"id_bodega_destinoParametroFactuEmpresaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtonid_bodega_destinoParametroFactuEmpresaBusqueda.addActionListener(new ButtonActionListener(this,"id_bodega_destinoParametroFactuEmpresaBusqueda"));
		//jButtonid_cliente_destinoParametroFactuEmpresa.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_cliente_destinoParametroFactuEmpresaActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtonid_cliente_destinoParametroFactuEmpresa.addActionListener(new ButtonActionListener(this,"id_cliente_destinoParametroFactuEmpresa"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtonid_cliente_destinoParametroFactuEmpresaUpdate.addActionListener(new ButtonActionListener(this,"id_cliente_destinoParametroFactuEmpresaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtonid_cliente_destinoParametroFactuEmpresaBusqueda.addActionListener(new ButtonActionListener(this,"id_cliente_destinoParametroFactuEmpresaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtoncosto_destinoParametroFactuEmpresaBusqueda.addActionListener(new ButtonActionListener(this,"costo_destinoParametroFactuEmpresaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtoncon_transferenciaParametroFactuEmpresaBusqueda.addActionListener(new ButtonActionListener(this,"con_transferenciaParametroFactuEmpresaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtonid_empresa_multi_destinoParametroFactuEmpresaUpdate.addActionListener(new ButtonActionListener(this,"id_empresa_multi_destinoParametroFactuEmpresaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtonid_empresa_multi_destinoParametroFactuEmpresaBusqueda.addActionListener(new ButtonActionListener(this,"id_empresa_multi_destinoParametroFactuEmpresaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtonid_sucursal_multi_destinoParametroFactuEmpresaUpdate.addActionListener(new ButtonActionListener(this,"id_sucursal_multi_destinoParametroFactuEmpresaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtonid_sucursal_multi_destinoParametroFactuEmpresaBusqueda.addActionListener(new ButtonActionListener(this,"id_sucursal_multi_destinoParametroFactuEmpresaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtonid_transaccion_multi_destinoParametroFactuEmpresaUpdate.addActionListener(new ButtonActionListener(this,"id_transaccion_multi_destinoParametroFactuEmpresaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtonid_transaccion_multi_destinoParametroFactuEmpresaBusqueda.addActionListener(new ButtonActionListener(this,"id_transaccion_multi_destinoParametroFactuEmpresaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtonid_bodega_multi_origenParametroFactuEmpresaUpdate.addActionListener(new ButtonActionListener(this,"id_bodega_multi_origenParametroFactuEmpresaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtonid_bodega_multi_origenParametroFactuEmpresaBusqueda.addActionListener(new ButtonActionListener(this,"id_bodega_multi_origenParametroFactuEmpresaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtonid_bodega_multi_destinoParametroFactuEmpresaUpdate.addActionListener(new ButtonActionListener(this,"id_bodega_multi_destinoParametroFactuEmpresaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtonid_bodega_multi_destinoParametroFactuEmpresaBusqueda.addActionListener(new ButtonActionListener(this,"id_bodega_multi_destinoParametroFactuEmpresaBusqueda"));
		
		
		this.jButtonFK_IdBodegaDestinoParametroFactuEmpresa.addActionListener(new ButtonActionListener(this,"FK_IdBodegaDestinoParametroFactuEmpresa"));

		this.jButtonFK_IdBodegaMultiDestinoParametroFactuEmpresa.addActionListener(new ButtonActionListener(this,"FK_IdBodegaMultiDestinoParametroFactuEmpresa"));

		this.jButtonFK_IdBodegaMultiOrigenParametroFactuEmpresa.addActionListener(new ButtonActionListener(this,"FK_IdBodegaMultiOrigenParametroFactuEmpresa"));

		this.jButtonFK_IdBodegaOrigenParametroFactuEmpresa.addActionListener(new ButtonActionListener(this,"FK_IdBodegaOrigenParametroFactuEmpresa"));

		this.jButtonFK_IdClienteDestinoParametroFactuEmpresa.addActionListener(new ButtonActionListener(this,"FK_IdClienteDestinoParametroFactuEmpresa"));

		this.jButtonBuscarFK_IdClienteDestinoid_cliente_destinoParametroFactuEmpresa.addActionListener(new ButtonActionListener(this,"id_cliente_destinoParametroFactuEmpresa"));

		this.jButtonFK_IdClienteOrigenParametroFactuEmpresa.addActionListener(new ButtonActionListener(this,"FK_IdClienteOrigenParametroFactuEmpresa"));

		this.jButtonBuscarFK_IdClienteOrigenid_cliente_origenParametroFactuEmpresa.addActionListener(new ButtonActionListener(this,"id_cliente_origenParametroFactuEmpresa"));

		this.jButtonFK_IdEmpresaDestinoParametroFactuEmpresa.addActionListener(new ButtonActionListener(this,"FK_IdEmpresaDestinoParametroFactuEmpresa"));

		this.jButtonFK_IdEmpresaMultiDestinoParametroFactuEmpresa.addActionListener(new ButtonActionListener(this,"FK_IdEmpresaMultiDestinoParametroFactuEmpresa"));

		this.jButtonFK_IdEmpresaOrigenParametroFactuEmpresa.addActionListener(new ButtonActionListener(this,"FK_IdEmpresaOrigenParametroFactuEmpresa"));

		this.jButtonFK_IdSucursalParametroFactuEmpresa.addActionListener(new ButtonActionListener(this,"FK_IdSucursalParametroFactuEmpresa"));

		this.jButtonFK_IdSucursalDestinoParametroFactuEmpresa.addActionListener(new ButtonActionListener(this,"FK_IdSucursalDestinoParametroFactuEmpresa"));

		this.jButtonFK_IdSucursalMultiDestinoParametroFactuEmpresa.addActionListener(new ButtonActionListener(this,"FK_IdSucursalMultiDestinoParametroFactuEmpresa"));

		this.jButtonFK_IdTransaccionDestinoParametroFactuEmpresa.addActionListener(new ButtonActionListener(this,"FK_IdTransaccionDestinoParametroFactuEmpresa"));

		this.jButtonFK_IdTransaccionMultiDestinoParametroFactuEmpresa.addActionListener(new ButtonActionListener(this,"FK_IdTransaccionMultiDestinoParametroFactuEmpresa"));

		this.jButtonFK_IdTransaccionOrigenParametroFactuEmpresa.addActionListener(new ButtonActionListener(this,"FK_IdTransaccionOrigenParametroFactuEmpresa"));

		
		//REPORTE DINAMICO
		this.jButtonCerrarReporteDinamicoParametroFactuEmpresa.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarReporteDinamicoParametroFactuEmpresaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarReporteDinamicoParametroFactuEmpresa.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarReporteDinamicoParametroFactuEmpresaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarExcelReporteDinamicoParametroFactuEmpresa.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarExcelReporteDinamicoParametroFactuEmpresaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		//IMPORTACION
		this.jButtonCerrarImportacionParametroFactuEmpresa.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarImportacionParametroFactuEmpresaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarImportacionParametroFactuEmpresa.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarImportacionParametroFactuEmpresaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonAbrirImportacionParametroFactuEmpresa.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAbrirImportacionParametroFactuEmpresaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
	}
	*/
	
	
	public void jComboBoxTiposSeleccionarParametroFactuEmpresaActionListener(ActionEvent evt) throws Exception {    		
		try {			
			Reporte reporte=(Reporte)this.jComboBoxTiposSeleccionarParametroFactuEmpresa.getSelectedItem();
			
			//if(reporte.getsCodigo().equals("SELECCIONAR")) {
			//}					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroFactuEmpresaConstantesFunciones.CLASSNAME);
		}
	}	
	
	
	
	public void seleccionarTodosParametroFactuEmpresa(Boolean conSeleccionarTodos) throws Exception {    		
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {				
				for(ParametroFactuEmpresa parametrofactuempresaAux:this.parametrofactuempresaLogic.getParametroFactuEmpresas()) {
					parametrofactuempresaAux.setIsSelected(conSeleccionarTodos);
				}			
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(ParametroFactuEmpresa parametrofactuempresaAux:parametrofactuempresas) {
					parametrofactuempresaAux.setIsSelected(conSeleccionarTodos);
				}
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroFactuEmpresaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionarTodosParametroFactuEmpresaItemListener(ItemEvent evt) throws Exception {    		
		try {			
			this.inicializarActualizarBindingParametroFactuEmpresa(false,false);
			
			//JCheckBox jCheckBox=(JCheckBox)evt.getSource();			
			//System.out.println("ok");		
			
			Boolean existe=false;
			
			if(sTipoSeleccionar.equals("COLUMNAS")) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					for(ParametroFactuEmpresa parametrofactuempresaAux:this.parametrofactuempresaLogic.getParametroFactuEmpresas()) {
						parametrofactuempresaAux.setIsSelected(this.isSeleccionarTodos);
					}			
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(ParametroFactuEmpresa parametrofactuempresaAux:parametrofactuempresas) {
						parametrofactuempresaAux.setIsSelected(this.isSeleccionarTodos);
					}
				}
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					for(ParametroFactuEmpresa parametrofactuempresaAux:this.parametrofactuempresaLogic.getParametroFactuEmpresas()) {
					
						if(sTipoSeleccionar.equals(ParametroFactuEmpresaConstantesFunciones.LABEL_CONTRANSFERENCIA)) {
							existe=true;
							parametrofactuempresaAux.setcon_transferencia(this.isSeleccionarTodos);
						}
					}	
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(ParametroFactuEmpresa parametrofactuempresaAux:parametrofactuempresas) {
						
						if(sTipoSeleccionar.equals(ParametroFactuEmpresaConstantesFunciones.LABEL_CONTRANSFERENCIA)) {
							existe=true;
							parametrofactuempresaAux.setcon_transferencia(this.isSeleccionarTodos);
						}
					}
				}
			}
					
			if(existe) {
				this.inicializarActualizarBindingTablaParametroFactuEmpresa(false);
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}	
			
			//TableCellRenderer tableCellRenderer=null;			
			
			//TableCellEditor tableCellEditor=null;						
						
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			/*
			for(int i = 0; i < this.jTableDatosParametroFactuEmpresa.getRowCount(); i++) {				
				tableCellRenderer=this.jTableDatosSistema.getCellRenderer(i, 2);
				tableCellEditor=this.jTableDatosSistema.getCellEditor(i, 2);
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellRenderer;				
				idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellEditor;
				
				if(idSeleccionarTableCell.jCheckBoxId!=null) {
					idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				}
				
				//System.out.println(idSeleccionarTableCell.valor);
				
				//this.jTableDatosParametroFactuEmpresa.getModel().setValueAt(jCheckBox.isSelected(), i, Funciones2.getColumnIndexByName(this.jTableDatosParametroFactuEmpresa,Constantes2.S_SELECCIONAR));
		    } 
			*/
					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroFactuEmpresaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionadosParametroFactuEmpresaItemListener(ItemEvent evt) throws Exception {    		
		try {			
			this.inicializarActualizarBindingParametroFactuEmpresa(false,false);
			
			//JCheckBox jCheckBox=(JCheckBox)evt.getSource();			
			//System.out.println("ok");		
			
			Boolean existe=false;
			int[] arrNumRowsSeleccionados=null;
			
			arrNumRowsSeleccionados=this.jTableDatosParametroFactuEmpresa.getSelectedRows();
			
			ParametroFactuEmpresa parametrofactuempresaLocal=new ParametroFactuEmpresa();
			
			//this.seleccionarTodosParametroFactuEmpresa(false);
			
			for(Integer iNumRowSeleccionado:arrNumRowsSeleccionados) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {
					parametrofactuempresaLocal =(ParametroFactuEmpresa) this.parametrofactuempresaLogic.getParametroFactuEmpresas().toArray()[this.jTableDatosParametroFactuEmpresa.convertRowIndexToModel(iNumRowSeleccionado)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					parametrofactuempresaLocal =(ParametroFactuEmpresa) this.parametrofactuempresas.toArray()[this.jTableDatosParametroFactuEmpresa.convertRowIndexToModel(iNumRowSeleccionado)];
				}
				
				parametrofactuempresaLocal.setIsSelected(this.isSeleccionados);
			}
			
			/*
			if(sTipoSeleccionar.equals("SELECCIONAR")) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					for(ParametroFactuEmpresa parametrofactuempresaAux:this.parametrofactuempresaLogic.getParametroFactuEmpresas()) {
						parametrofactuempresaAux.setIsSelected(this.isSeleccionados);
					}			
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(ParametroFactuEmpresa parametrofactuempresaAux:parametrofactuempresas) {
						parametrofactuempresaAux.setIsSelected(this.isSeleccionados);
					}
				}
			}
			*/
			
			//if(existe) {
				this.inicializarActualizarBindingTablaParametroFactuEmpresa(false);
			/*
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}	
			*/
			
			
			//TableCellRenderer tableCellRenderer=null;			
			
			//TableCellEditor tableCellEditor=null;						
						
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			/*
			for(int i = 0; i < this.jTableDatosParametroFactuEmpresa.getRowCount(); i++) {				
				tableCellRenderer=this.jTableDatosSistema.getCellRenderer(i, 2);
				tableCellEditor=this.jTableDatosSistema.getCellEditor(i, 2);
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellRenderer;				
				idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellEditor;
				
				if(idSeleccionarTableCell.jCheckBoxId!=null) {
					idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				}
				
				//System.out.println(idSeleccionarTableCell.valor);
				
				//this.jTableDatosParametroFactuEmpresa.getModel().setValueAt(jCheckBox.isSelected(), i, Funciones2.getColumnIndexByName(this.jTableDatosParametroFactuEmpresa,Constantes2.S_SELECCIONAR));
		    } 
			*/
					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroFactuEmpresaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionarActualParametroFactuEmpresaItemListener(ItemEvent evt,Long idActual) throws Exception {    		
		try {
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroFactuEmpresaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void ejecutarAuxiliarParametroFactuEmpresaParaAjaxPostBack() throws Exception {    		
		try {
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroFactuEmpresaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jTextFieldValorCampoGeneralParametroFactuEmpresaActionListener(ActionEvent evt) throws Exception {    		
		try {
			this.inicializarActualizarBindingParametroFactuEmpresa(false,false);
			
			//System.out.println(this.jTextFieldValorCampoGeneralParametroFactuEmpresa.getText());		
			
			Boolean existe=false;
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				for(ParametroFactuEmpresa parametrofactuempresaAux:this.parametrofactuempresaLogic.getParametroFactuEmpresas()) {
				
						if(sTipoSeleccionar.equals(ParametroFactuEmpresaConstantesFunciones.LABEL_COSTOORIGEN)) {
							existe=true;
							parametrofactuempresaAux.setcosto_origen(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ParametroFactuEmpresaConstantesFunciones.LABEL_COSTODESTINO)) {
							existe=true;
							parametrofactuempresaAux.setcosto_destino(Double.parseDouble(this.sValorCampoGeneral));
						}
				}	
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(ParametroFactuEmpresa parametrofactuempresaAux:parametrofactuempresas) {
					
						if(sTipoSeleccionar.equals(ParametroFactuEmpresaConstantesFunciones.LABEL_COSTOORIGEN)) {
							existe=true;
							parametrofactuempresaAux.setcosto_origen(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ParametroFactuEmpresaConstantesFunciones.LABEL_COSTODESTINO)) {
							existe=true;
							parametrofactuempresaAux.setcosto_destino(Double.parseDouble(this.sValorCampoGeneral));
						}
				}
			}
								
			if(existe) {
				this.inicializarActualizarBindingTablaParametroFactuEmpresa(false);
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroFactuEmpresaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jComboBoxTiposAccionesParametroFactuEmpresaActionListener(ActionEvent evt,Boolean esParaAccionDesdeFormulario) throws Exception {    				
		Boolean conSplash=true;
		
		try {							
		
			this.inicializarActualizarBindingParametroFactuEmpresa(false,false);
			
			Reporte reporte=new Reporte();
			
			this.esParaAccionDesdeFormularioParametroFactuEmpresa=esParaAccionDesdeFormulario;
			
			if(!esParaAccionDesdeFormulario) {
				
				reporte=(Reporte)this.jComboBoxTiposAccionesParametroFactuEmpresa.getSelectedItem();
				
			} else {
				reporte=(Reporte)this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxTiposAccionesFormularioParametroFactuEmpresa.getSelectedItem();
			}
			String sTipoAccionLocal=this.sTipoAccion;
			
			if(!esParaAccionDesdeFormulario) {
				sTipoAccionLocal=this.sTipoAccion;
			} else {
				sTipoAccionLocal=this.sTipoAccionFormulario;
			}
			
			if(sTipoAccionLocal.equals("GENERAR REPORTE")) {//reporte.getsCodigo().equals("GENERAR REPORTE")) {
				if(this.isPermisoReporteParametroFactuEmpresa) {				
					conSplash=true;//false;										
					
					//this.startProcessParametroFactuEmpresa(conSplash);
				
					this.generarReporteParametroFactuEmpresasSeleccionados();
				} else {
					JOptionPane.showMessageDialog(this,"NO TIENE PERMISO PARA GENERAR REPORTES","REPORTE",JOptionPane.ERROR_MESSAGE);					
				}
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesParametroFactuEmpresa.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxTiposAccionesFormularioParametroFactuEmpresa.setSelectedIndex(0);					
				}
			} else if(sTipoAccionLocal.equals("GENERAR REPORTE DINAMICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.mostrarReporteDinamicoParametroFactuEmpresasSeleccionados();
				//this.jComboBoxTiposAccionesParametroFactuEmpresa.setSelectedIndex(0);					
			}  else if(sTipoAccionLocal.equals("GENERAR_REPORTE_GROUP_GENERICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.generarReporteGroupGenericoParametroFactuEmpresasSeleccionados(false);
				//this.jComboBoxTiposAccionesParametroFactuEmpresa.setSelectedIndex(0);					
			} else if(sTipoAccionLocal.equals("GENERAR_REPORTE_TOTALES_GROUP_GENERICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.generarReporteGroupGenericoParametroFactuEmpresasSeleccionados(true);
				//this.jComboBoxTiposAccionesParametroFactuEmpresa.setSelectedIndex(0);					
			} else if(sTipoAccionLocal.equals("EXPORTAR_DATOS")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//this.startProcessParametroFactuEmpresa();
				
				this.exportarParametroFactuEmpresasSeleccionados();
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesParametroFactuEmpresa.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxTiposAccionesFormularioParametroFactuEmpresa.setSelectedIndex(0);					
				}					
			} else if(sTipoAccionLocal.equals("IMPORTAR_DATOS")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				this.mostrarImportacionParametroFactuEmpresas();
				//this.importarParametroFactuEmpresas();
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesParametroFactuEmpresa.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxTiposAccionesFormularioParametroFactuEmpresa.setSelectedIndex(0);					
				}					
			} else if(sTipoAccionLocal.equals("EXPORTAR_DATOS_EXCEL")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//this.startProcessParametroFactuEmpresa();
				//SE EXPORTA SEGUN TIPO ARCHIVO SELECCIONADO
				//this.exportarExcelParametroFactuEmpresasSeleccionados();
				//this.jComboBoxTiposAccionesParametroFactuEmpresa.setSelectedIndex(0);					
			}  else if(sTipoAccionLocal.equals("RECARGAR_FK")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {								
				if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE RECARGAR REFERENCIAS ?", "MANTENIMIENTO DE Parametro Empresa ", JOptionPane.OK_CANCEL_OPTION) == 0) {
				
				//this.startProcessParametroFactuEmpresa();
				
					if(!esParaAccionDesdeFormulario || (esParaAccionDesdeFormulario && this.isEsNuevoParametroFactuEmpresa)) {
						this.esRecargarFks=true;
						this.cargarCombosForeignKeyParametroFactuEmpresa(false,false,false);
						this.esRecargarFks=false;
						
						JOptionPane.showMessageDialog(this,"PROCESO EJECUTADO CORRECTAMENTE","MANTENIMIENTO DE Parametro Empresa ",JOptionPane.INFORMATION_MESSAGE);
					} else {
						JOptionPane.showMessageDialog(this,"ESTE PROCESO SOLO FUNCIONA AL INGRESAR UN NUEVO ELEMENTO","MANTENIMIENTO",JOptionPane.ERROR_MESSAGE);	
					}
					
					
				}
				
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesParametroFactuEmpresa.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxTiposAccionesFormularioParametroFactuEmpresa.setSelectedIndex(0);					
				}	
			} 			
			else if(ParametroFactuEmpresaBeanSwingJInternalFrame.EsProcesoReporte(reporte.getsCodigo())){
				if(this.isPermisoReporteParametroFactuEmpresa) {				
					if(this.tieneElementosSeleccionados()) {
						this.quitarFilaTotales();
						
						conSplash=false;
						
						//this.startProcessParametroFactuEmpresa(conSplash);
					
						//this.actualizarParametrosGeneralParametroFactuEmpresa();
						
						this.generarReporteProcesoAccionParametroFactuEmpresasSeleccionados(reporte.getsCodigo());
						
						if(!esParaAccionDesdeFormulario) {
							
							this.jComboBoxTiposAccionesParametroFactuEmpresa.setSelectedIndex(0);					
							
						} else {
							this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxTiposAccionesFormularioParametroFactuEmpresa.setSelectedIndex(0);					
						}
					} else {
						JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO TIENE PERMISO PARA GENERAR REPORTES","REPORTE",JOptionPane.ERROR_MESSAGE);					
				}
			} 
			else if(ParametroFactuEmpresaBeanSwingJInternalFrameAdditional.EsProcesoAccionNormal(reporte.getsCodigo())){
				if(this.tieneElementosSeleccionados()) {
					this.quitarFilaTotales();
					
					if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE PROCESAR "+reporte.getsDescripcion()+" EN PROCESO Parametro Empresa S SELECCIONADOS?", "MANTENIMIENTO DE Parametro Empresa ", JOptionPane.OK_CANCEL_OPTION) == 0) {
						//this.startProcessParametroFactuEmpresa();
				
						this.actualizarParametrosGeneralParametroFactuEmpresa();
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {						
							this.parametrofactuempresaReturnGeneral=parametrofactuempresaLogic.procesarAccionParametroFactuEmpresasWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,sTipoAccionLocal,this.parametrofactuempresaLogic.getParametroFactuEmpresas(),this.parametrofactuempresaParameterGeneral);
						
						} else if(Constantes.ISUSAEJBREMOTE) {
						
						} else if(Constantes.ISUSAEJBHOME) {
						}
						//ARCHITECTURE
						
						this.procesarParametroFactuEmpresaReturnGeneral();
					
					if(!esParaAccionDesdeFormulario) {
						
						this.jComboBoxTiposAccionesParametroFactuEmpresa.setSelectedIndex(0);					
						
					} else {
						this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxTiposAccionesFormularioParametroFactuEmpresa.setSelectedIndex(0);					
					}
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
				}				
			} 
			else {
				if(this.tieneElementosSeleccionados()) {
					this.quitarFilaTotales();
					
					this.actualizarParametrosGeneralParametroFactuEmpresa();
					
					ParametroFactuEmpresaBeanSwingJInternalFrameAdditional.ProcesarAccion(reporte.getsCodigo(),reporte.getsDescripcion(),this);
					
					this.procesarParametroFactuEmpresaReturnGeneral();
					
					if(!esParaAccionDesdeFormulario) {
						
						this.jComboBoxTiposAccionesParametroFactuEmpresa.setSelectedIndex(0);					
						
					} else {
						this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxTiposAccionesFormularioParametroFactuEmpresa.setSelectedIndex(0);					
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
				}
			}
		} catch(Exception e) {
			this.esRecargarFks=false;
			
			FuncionesSwing.manageException(this, e,logger,ParametroFactuEmpresaConstantesFunciones.CLASSNAME);
		
		}  finally {
      		//this.finishProcessParametroFactuEmpresa(conSplash);
      	}
	}
	
	public void jComboBoxTiposRelacionesParametroFactuEmpresaActionListener(ActionEvent evt) throws Exception {    				
		Boolean conSplash=true;
		
		try {			
			this.startProcessParametroFactuEmpresa();
			
			if(this.jInternalFrameDetalleFormParametroFactuEmpresa==null) { //if(!this.conCargarFormDetalle) {			
				this.inicializarFormDetalle();
			}
			
			ArrayList<ParametroFactuEmpresa> parametrofactuempresasSeleccionados=new ArrayList<ParametroFactuEmpresa>();		
			ParametroFactuEmpresa parametrofactuempresa=new ParametroFactuEmpresa();
			
			int rowIndex=-1;//CON ESTO SE DESHABILITA SELECCION POR INDICE
			
			this.inicializarActualizarBindingParametroFactuEmpresa(false,false);
			
			Reporte reporte=new Reporte();
			
			
			reporte=(Reporte)this.jComboBoxTiposRelacionesParametroFactuEmpresa.getSelectedItem();
			
			
			
			
			parametrofactuempresasSeleccionados=this.getParametroFactuEmpresasSeleccionados(true);
			//this.sTipoAccion;
			
			if(parametrofactuempresasSeleccionados.size()==1) {
				for(ParametroFactuEmpresa parametrofactuempresaAux:parametrofactuempresasSeleccionados) {
					parametrofactuempresa=parametrofactuempresaAux;
				}
				
				if(this.sTipoAccion.equals("NONE")) {
				
				}
				
			} else {
				JOptionPane.showMessageDialog(this,"SELECCIONE SOLO UN REGISTRO","RELACIONES",JOptionPane.ERROR_MESSAGE);
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroFactuEmpresaConstantesFunciones.CLASSNAME);
		
		}  finally {
			this.finishProcessParametroFactuEmpresa();
			
      		//this.finishProcessParametroFactuEmpresa(conSplash);
      	}
	}
			
	public static Boolean EsProcesoReporte(String sTipoProceso) throws Exception {
		Boolean esProcesoAccionRepoorte=false;

		if(sTipoProceso.contains("REPORTE_")) {
			 esProcesoAccionRepoorte=true;
		}

		return esProcesoAccionRepoorte;
	}
	
	public void procesarParametroFactuEmpresaReturnGeneral() throws Exception {
		if(this.parametrofactuempresaReturnGeneral.getConRetornoEstaProcesado()) {
			JOptionPane.showMessageDialog(this,this.parametrofactuempresaReturnGeneral.getsMensajeProceso(),"PROCESO",JOptionPane.INFORMATION_MESSAGE);
		}
		
		if(this.parametrofactuempresaReturnGeneral.getConMostrarMensaje()) {
			JOptionPane.showMessageDialog(this,this.parametrofactuempresaReturnGeneral.getsMensajeProceso(),"PROCESO",FuncionesSwing.getColorSelectedBackground(this.parametrofactuempresaReturnGeneral.getsTipoMensaje()));
		}
		
		if(this.parametrofactuempresaReturnGeneral.getConRecargarInformacion()) {
			this.procesarBusqueda(this.sAccionBusqueda);
			
			this.inicializarActualizarBindingParametroFactuEmpresa(false);
		}
		
		if(this.parametrofactuempresaReturnGeneral.getConRetornoLista() || this.parametrofactuempresaReturnGeneral.getConRetornoObjeto()) {
			if(this.parametrofactuempresaReturnGeneral.getConRetornoLista()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.parametrofactuempresaLogic.setParametroFactuEmpresas(this.parametrofactuempresaReturnGeneral.getParametroFactuEmpresas());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
			
			if(this.parametrofactuempresaReturnGeneral.getConRetornoObjeto()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.parametrofactuempresaLogic.setParametroFactuEmpresa(this.parametrofactuempresaReturnGeneral.getParametroFactuEmpresa());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
			
			this.inicializarActualizarBindingParametroFactuEmpresa(false);
		}
	}
	
	public void actualizarParametrosGeneralParametroFactuEmpresa() throws Exception {
		
		
	}
	
	public ArrayList<ParametroFactuEmpresa> getParametroFactuEmpresasSeleccionados(Boolean conSeleccionarTodosAutomatico) throws Exception {
		ArrayList<ParametroFactuEmpresa> parametrofactuempresasSeleccionados=new ArrayList<ParametroFactuEmpresa>();
		Boolean existe=false;
		
		if(!this.esParaAccionDesdeFormularioParametroFactuEmpresa) {
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				
				for(ParametroFactuEmpresa parametrofactuempresaAux:parametrofactuempresaLogic.getParametroFactuEmpresas()) {
					if(parametrofactuempresaAux.getIsSelected()) {
						parametrofactuempresasSeleccionados.add(parametrofactuempresaAux);				
					}
				}
				
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(ParametroFactuEmpresa parametrofactuempresaAux:this.parametrofactuempresas) {
					if(parametrofactuempresaAux.getIsSelected()) {
						parametrofactuempresasSeleccionados.add(parametrofactuempresaAux);				
					}
				}
			}
			
			if(parametrofactuempresasSeleccionados.size()>0) {
				existe=true;
			}
			
			//SI NO ESTA NINGUNO SELECCIONADO SE SELECCIONA TODOS
			if(!existe) {
				if(conSeleccionarTodosAutomatico) {
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						parametrofactuempresasSeleccionados.addAll(this.parametrofactuempresaLogic.getParametroFactuEmpresas());
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						parametrofactuempresasSeleccionados.addAll(this.parametrofactuempresas);				
					}
				}
			}
		} else {
			parametrofactuempresasSeleccionados.add(this.parametrofactuempresa);
		}
		
		return parametrofactuempresasSeleccionados;
	}
	
	public void actualizarVariablesTipoReporte(Boolean esReporteNormal,Boolean esReporteDinamico,Boolean esReporteAccionProceso,String sPath) {
		if(esReporteNormal) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=false;
			this.sPathReporteDinamico="";
			this.esReporteAccionProceso=false;
			
		} else if(esReporteAccionProceso) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=false;
			this.sPathReporteDinamico="";
			this.esReporteAccionProceso=true;
			
		} else if(esReporteDinamico) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=true;
			this.esReporteAccionProceso=false;
			this.sPathReporteDinamico=sPath.replace(".jrxml",".jasper");			
		}
	}
	
	public void generarReporteParametroFactuEmpresasSeleccionados() throws Exception {
		Boolean existe=false;
		
		if(this.sTipoReporte.equals("NORMAL") || this.sTipoReporte.equals("FORMULARIO")) {
			existe=true;								
			this.generarReporteNormalParametroFactuEmpresasSeleccionados();
			
		} else if(this.sTipoReporte.equals("DINAMICO")) {
			existe=true;
			this.mostrarReporteDinamicoParametroFactuEmpresasSeleccionados();
			
		} else if(this.sTipoReporte.equals("GRUPO_GENERICO")) {
			existe=true;
			this.generarReporteGroupGenericoParametroFactuEmpresasSeleccionados(false);
			
		} else if(this.sTipoReporte.equals("TOTALES_GRUPO_GENERICO")) {
			existe=true;
			this.generarReporteGroupGenericoParametroFactuEmpresasSeleccionados(true);
		}
		
		if(!existe) {
			JOptionPane.showMessageDialog(this,"SELECCIONE UN TIPO DE REPORTE VALIDO","REPORTE DE Parametro Empresa ",JOptionPane.ERROR_MESSAGE);
		}
	}
	
	public void generarReporteRelacionesParametroFactuEmpresasSeleccionados() throws Exception {
		ArrayList<ParametroFactuEmpresa> parametrofactuempresasSeleccionados=new ArrayList<ParametroFactuEmpresa>();		
		
		parametrofactuempresasSeleccionados=this.getParametroFactuEmpresasSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
					
		//this.sTipoReporteExtra="MasterRelaciones";
		
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		
		this.generarReporteParametroFactuEmpresas("Todos",parametrofactuempresasSeleccionados);
		
	}	
	
	public void generarReporteNormalParametroFactuEmpresasSeleccionados() throws Exception {
		ArrayList<ParametroFactuEmpresa> parametrofactuempresasSeleccionados=new ArrayList<ParametroFactuEmpresa>();		
		
		parametrofactuempresasSeleccionados=this.getParametroFactuEmpresasSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
								
		if(this.sTipoReporte.equals("FORMULARIO")) {
			this.sTipoReporteExtra="Vertical";					
		}
		
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		this.generarReporteParametroFactuEmpresas("Todos",parametrofactuempresasSeleccionados);
	}		
	
	public void generarReporteProcesoAccionParametroFactuEmpresasSeleccionados(String sProcesoReporte) throws Exception {
		ArrayList<ParametroFactuEmpresa> parametrofactuempresasSeleccionados=new ArrayList<ParametroFactuEmpresa>();
		
		parametrofactuempresasSeleccionados=this.getParametroFactuEmpresasSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(false,false,true,"");
		
		/*
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		this.sTipoReporteExtra=sProcesoReporte.toLowerCase();
		
		this.esReporteAccionProceso=true;
		this.generarReporteParametroFactuEmpresas("Todos",parametrofactuempresasSeleccionados);
		this.esReporteAccionProceso=false;
	}
	
	
	public void mostrarReporteDinamicoParametroFactuEmpresasSeleccionados() throws Exception {
		ArrayList<ParametroFactuEmpresa> parametrofactuempresasSeleccionados=new ArrayList<ParametroFactuEmpresa>();		
		
		
		this.abrirInicializarFrameReporteDinamicoParametroFactuEmpresa();
		
		
		parametrofactuempresasSeleccionados=this.getParametroFactuEmpresasSeleccionados(true);
		
		this.sTipoReporteExtra="";
		//this.actualizarVariablesTipoReporte(true,false,false,"");
		
		
		this.abrirFrameReporteDinamicoParametroFactuEmpresa();
		
		
		//this.generarReporteParametroFactuEmpresas("Todos",parametrofactuempresasSeleccionados ,parametrofactuempresaImplementable,parametrofactuempresaImplementableHome);
	}
	
	public void mostrarImportacionParametroFactuEmpresas() throws Exception {
		//this.sTipoReporteExtra="";
		//this.actualizarVariablesTipoReporte(true,false,false,"");
		
		
		this.abrirInicializarFrameImportacionParametroFactuEmpresa();
		
		this.abrirFrameImportacionParametroFactuEmpresa();		
		
			
		//this.generarReporteParametroFactuEmpresas("Todos",parametrofactuempresasSeleccionados ,parametrofactuempresaImplementable,parametrofactuempresaImplementableHome);
	}
	
	public void importarParametroFactuEmpresas() throws Exception {		
	
	}
	
	public void exportarParametroFactuEmpresasSeleccionados() throws Exception {
		Boolean existe=false;
		
		if(this.sTipoArchivoReporte.equals("EXCEL")) {
			existe=true;
			this.exportarExcelParametroFactuEmpresasSeleccionados();
			
		} else if(this.sTipoArchivoReporte.equals("TEXTO")) {
			existe=true;
			this.exportarTextoParametroFactuEmpresasSeleccionados();
		
		} else if(this.sTipoArchivoReporte.equals("XML")) {
			existe=true;
			this.exportarXmlParametroFactuEmpresasSeleccionados();
		} 
		
		if(!existe) {
			JOptionPane.showMessageDialog(this,"SELECCIONE UN TIPO DE ARCHIVO VALIDO","EXPORTACION DE Parametro Empresa ",JOptionPane.ERROR_MESSAGE);
		}
	}
	
	public void exportarTextoParametroFactuEmpresasSeleccionados() throws Exception {
		ArrayList<ParametroFactuEmpresa> parametrofactuempresasSeleccionados=new ArrayList<ParametroFactuEmpresa>();		
		
		parametrofactuempresasSeleccionados=this.getParametroFactuEmpresasSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"parametrofactuempresa."+"txt";//Funciones2.getTipoExtensionArchivoExportar(this.parametroGeneralUsuario);
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		BufferedWriter bufferedWriter = null;
		FileWriter fileWriter=null;
		
		fileWriter=new FileWriter(sPath);
		
		bufferedWriter = new BufferedWriter(fileWriter);
		
		try {
			if(conCabecera) {
				sFilaCabecera=this.getFilaCabeceraExportarParametroFactuEmpresa(sDelimiter);
				
				bufferedWriter.write(sFilaCabecera);
			}				
			
			for(ParametroFactuEmpresa parametrofactuempresaAux:parametrofactuempresasSeleccionados) {
				sFilaDatos=this.getFilaDatosExportarParametroFactuEmpresa(parametrofactuempresaAux,sDelimiter);
				
				bufferedWriter.write(sFilaDatos);
				
				//parametrofactuempresaAux.setsDetalleGeneralEntityReporte(parametrofactuempresaAux.toString());			
			}
			
			bufferedWriter.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.parametrofactuempresaSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Parametro Empresa ",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {
       		if (bufferedWriter != null) {
				bufferedWriter.close();
			}
		}
	}
	
	public String getFilaCabeceraExportarParametroFactuEmpresa(String sDelimiter) {
		String sFilaCabecera="";
		
		
		sFilaCabecera+=ParametroFactuEmpresaConstantesFunciones.LABEL_ID;

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
			sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroFactuEmpresaConstantesFunciones.LABEL_VERSIONROW;
		}

		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroFactuEmpresaConstantesFunciones.LABEL_IDEMPRESA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroFactuEmpresaConstantesFunciones.LABEL_IDEMPRESAORIGEN;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroFactuEmpresaConstantesFunciones.LABEL_IDSUCURSAL;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroFactuEmpresaConstantesFunciones.LABEL_IDTRANSACCIONORIGEN;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroFactuEmpresaConstantesFunciones.LABEL_IDBODEGAORIGEN;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroFactuEmpresaConstantesFunciones.LABEL_IDCLIENTEORIGEN;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroFactuEmpresaConstantesFunciones.LABEL_COSTOORIGEN;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroFactuEmpresaConstantesFunciones.LABEL_IDEMPRESADESTINO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroFactuEmpresaConstantesFunciones.LABEL_IDSUCURSALDESTINO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroFactuEmpresaConstantesFunciones.LABEL_IDTRANSACCIONDESTINO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroFactuEmpresaConstantesFunciones.LABEL_IDBODEGADESTINO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroFactuEmpresaConstantesFunciones.LABEL_IDCLIENTEDESTINO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroFactuEmpresaConstantesFunciones.LABEL_COSTODESTINO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroFactuEmpresaConstantesFunciones.LABEL_CONTRANSFERENCIA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroFactuEmpresaConstantesFunciones.LABEL_IDEMPRESAMULTIDESTINO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroFactuEmpresaConstantesFunciones.LABEL_IDSUCURSALMULTIDESTINO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroFactuEmpresaConstantesFunciones.LABEL_IDTRANSACCIONMULTIDESTINO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroFactuEmpresaConstantesFunciones.LABEL_IDBODEGAMULTIORIGEN;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroFactuEmpresaConstantesFunciones.LABEL_IDBODEGAMULTIDESTINO;
		
		return sFilaCabecera;
	}
	
	public String getFilaDatosExportarParametroFactuEmpresa(ParametroFactuEmpresa parametrofactuempresa,String sDelimiter) {
		String sFilaDatos="";
		
		sFilaDatos+="\r\n";
		
		
		sFilaDatos+=parametrofactuempresa.getId().toString();

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
			sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrofactuempresa.getVersionRow().toString();
		}

		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrofactuempresa.getempresa_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrofactuempresa.getempresaorigen_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrofactuempresa.getsucursal_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrofactuempresa.gettransaccionorigen_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrofactuempresa.getbodegaorigen_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrofactuempresa.getclienteorigen_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrofactuempresa.getcosto_origen().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrofactuempresa.getempresadestino_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrofactuempresa.getsucursaldestino_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrofactuempresa.gettransacciondestino_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrofactuempresa.getbodegadestino_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrofactuempresa.getclientedestino_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrofactuempresa.getcosto_destino().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrofactuempresa.getcon_transferencia().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrofactuempresa.getempresamultidestino_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrofactuempresa.getsucursalmultidestino_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrofactuempresa.gettransaccionmultidestino_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrofactuempresa.getbodegamultiorigen_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrofactuempresa.getbodegamultidestino_descripcion();
		
		return sFilaDatos;
	}
	
	//@SuppressWarnings("deprecation")
	public void exportarExcelParametroFactuEmpresasSeleccionados() throws Exception {
		ArrayList<ParametroFactuEmpresa> parametrofactuempresasSeleccionados=new ArrayList<ParametroFactuEmpresa>();		
		
		parametrofactuempresasSeleccionados=this.getParametroFactuEmpresasSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"parametrofactuempresa.xls";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		FileOutputStream fileOutputStream=null;
		
		try {
			HSSFWorkbook workbook = new HSSFWorkbook();
			HSSFSheet sheet = workbook.createSheet("ParametroFactuEmpresas");
						
		    			
			Integer iRow=0;
			Integer iCell=0;
			
			HSSFRow row = sheet.createRow(iRow);
			HSSFCell cell = row.createCell(iCell);
			//cell.setCellValue("Blahblah");

			if(conCabecera) {
				this.getFilaCabeceraExportarExcelParametroFactuEmpresa(row);				
				iRow++;
			}				
			
			for(ParametroFactuEmpresa parametrofactuempresaAux:parametrofactuempresasSeleccionados) {
				row = sheet.createRow(iRow);
				
				this.getFilaDatosExportarExcelParametroFactuEmpresa(parametrofactuempresaAux,row);
				
				iRow++;
			}
			
			
			fileOutputStream = new FileOutputStream(new File(sPath));
		    
			workbook.write(fileOutputStream);
			
			//fileOutputStream.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.parametrofactuempresaSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Parametro Empresa ",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			
       		if (fileOutputStream != null) {
				fileOutputStream.close();
			}			
		}
	}		
	
	public void exportarXmlParametroFactuEmpresasSeleccionados() throws Exception {
		ArrayList<ParametroFactuEmpresa> parametrofactuempresasSeleccionados=new ArrayList<ParametroFactuEmpresa>();		
		
		parametrofactuempresasSeleccionados=this.getParametroFactuEmpresasSeleccionados(true);
		
		//String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		//Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		//String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"parametrofactuempresa.xml";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		DocumentBuilderFactory documentBuilderFactory=null;
		DocumentBuilder documentBuilder =null;
		
		try {
			documentBuilderFactory = DocumentBuilderFactory.newInstance();
			documentBuilder = documentBuilderFactory.newDocumentBuilder();
	
			Document document = documentBuilder.newDocument();
			Element elementRoot = document.createElement("parametrofactuempresas");
			
			document.appendChild(elementRoot);
		    			
												
			Element element = null;//document.createElement("parametrofactuempresa");
			//elementRoot.appendChild(element);
		
			for(ParametroFactuEmpresa parametrofactuempresaAux:parametrofactuempresasSeleccionados) {
				element = document.createElement("parametrofactuempresa");
				elementRoot.appendChild(element);
			
				this.setFilaDatosExportarXmlParametroFactuEmpresa(parametrofactuempresaAux,document,element);
			}
			
			TransformerFactory transformerFactory = TransformerFactory.newInstance();
			Transformer transformer = transformerFactory.newTransformer();
			DOMSource domSource = new DOMSource(document);
			
			StreamResult streamResult = new StreamResult(new File(sPath));
	
			transformer.transform(domSource, streamResult);
						
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.parametrofactuempresaSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Parametro Empresa ",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			       				
		}
	}	
	
	//@SuppressWarnings("deprecation")
	public void getFilaCabeceraExportarExcelParametroFactuEmpresa(HSSFRow row) {
		Integer iColumn=0;
		
		
		HSSFCell cell =null;
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroFactuEmpresaConstantesFunciones.LABEL_ID);

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroFactuEmpresaConstantesFunciones.LABEL_VERSIONROW);
		}

		cell = row.createCell(iColumn++);cell.setCellValue(ParametroFactuEmpresaConstantesFunciones.LABEL_IDEMPRESA);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroFactuEmpresaConstantesFunciones.LABEL_IDEMPRESAORIGEN);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroFactuEmpresaConstantesFunciones.LABEL_IDSUCURSAL);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroFactuEmpresaConstantesFunciones.LABEL_IDTRANSACCIONORIGEN);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroFactuEmpresaConstantesFunciones.LABEL_IDBODEGAORIGEN);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroFactuEmpresaConstantesFunciones.LABEL_IDCLIENTEORIGEN);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroFactuEmpresaConstantesFunciones.LABEL_COSTOORIGEN);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroFactuEmpresaConstantesFunciones.LABEL_IDEMPRESADESTINO);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroFactuEmpresaConstantesFunciones.LABEL_IDSUCURSALDESTINO);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroFactuEmpresaConstantesFunciones.LABEL_IDTRANSACCIONDESTINO);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroFactuEmpresaConstantesFunciones.LABEL_IDBODEGADESTINO);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroFactuEmpresaConstantesFunciones.LABEL_IDCLIENTEDESTINO);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroFactuEmpresaConstantesFunciones.LABEL_COSTODESTINO);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroFactuEmpresaConstantesFunciones.LABEL_CONTRANSFERENCIA);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroFactuEmpresaConstantesFunciones.LABEL_IDEMPRESAMULTIDESTINO);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroFactuEmpresaConstantesFunciones.LABEL_IDSUCURSALMULTIDESTINO);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroFactuEmpresaConstantesFunciones.LABEL_IDTRANSACCIONMULTIDESTINO);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroFactuEmpresaConstantesFunciones.LABEL_IDBODEGAMULTIORIGEN);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroFactuEmpresaConstantesFunciones.LABEL_IDBODEGAMULTIDESTINO);
	}
	
	//@SuppressWarnings("deprecation")
	public void getFilaDatosExportarExcelParametroFactuEmpresa(ParametroFactuEmpresa parametrofactuempresa,HSSFRow row) {
		Integer iColumn=0;
		
		
		HSSFCell cell =null;
		cell = row.createCell(iColumn++);cell.setCellValue(parametrofactuempresa.getId());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrofactuempresa.getempresa_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrofactuempresa.getempresaorigen_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrofactuempresa.getsucursal_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrofactuempresa.gettransaccionorigen_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrofactuempresa.getbodegaorigen_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrofactuempresa.getclienteorigen_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrofactuempresa.getcosto_origen());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrofactuempresa.getempresadestino_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrofactuempresa.getsucursaldestino_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrofactuempresa.gettransacciondestino_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrofactuempresa.getbodegadestino_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrofactuempresa.getclientedestino_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrofactuempresa.getcosto_destino());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrofactuempresa.getcon_transferencia());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrofactuempresa.getempresamultidestino_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrofactuempresa.getsucursalmultidestino_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrofactuempresa.gettransaccionmultidestino_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrofactuempresa.getbodegamultiorigen_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrofactuempresa.getbodegamultidestino_descripcion());				
	}
	
	public void setFilaDatosExportarXmlParametroFactuEmpresa(ParametroFactuEmpresa parametrofactuempresa,Document document,Element element) {
		/*
		Element lastname = document.createElement("lastname");
		lastname.appendChild(document.createTextNode("mook kim"));
		element.appendChild(lastname);
		*/
		

		Element elementId = document.createElement(ParametroFactuEmpresaConstantesFunciones.ID);
		elementId.appendChild(document.createTextNode(parametrofactuempresa.getId().toString().trim()));
		element.appendChild(elementId);

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){

		Element elementVersionRow = document.createElement(ParametroFactuEmpresaConstantesFunciones.VERSIONROW);
		elementVersionRow.appendChild(document.createTextNode(parametrofactuempresa.getVersionRow().toString().trim()));
		element.appendChild(elementVersionRow);
		}


		Element elementempresa_descripcion = document.createElement(ParametroFactuEmpresaConstantesFunciones.IDEMPRESA);
		elementempresa_descripcion.appendChild(document.createTextNode(parametrofactuempresa.getempresa_descripcion()));
		element.appendChild(elementempresa_descripcion);

		Element elementempresaorigen_descripcion = document.createElement(ParametroFactuEmpresaConstantesFunciones.IDEMPRESAORIGEN);
		elementempresaorigen_descripcion.appendChild(document.createTextNode(parametrofactuempresa.getempresaorigen_descripcion()));
		element.appendChild(elementempresaorigen_descripcion);

		Element elementsucursal_descripcion = document.createElement(ParametroFactuEmpresaConstantesFunciones.IDSUCURSAL);
		elementsucursal_descripcion.appendChild(document.createTextNode(parametrofactuempresa.getsucursal_descripcion()));
		element.appendChild(elementsucursal_descripcion);

		Element elementtransaccionorigen_descripcion = document.createElement(ParametroFactuEmpresaConstantesFunciones.IDTRANSACCIONORIGEN);
		elementtransaccionorigen_descripcion.appendChild(document.createTextNode(parametrofactuempresa.gettransaccionorigen_descripcion()));
		element.appendChild(elementtransaccionorigen_descripcion);

		Element elementbodegaorigen_descripcion = document.createElement(ParametroFactuEmpresaConstantesFunciones.IDBODEGAORIGEN);
		elementbodegaorigen_descripcion.appendChild(document.createTextNode(parametrofactuempresa.getbodegaorigen_descripcion()));
		element.appendChild(elementbodegaorigen_descripcion);

		Element elementclienteorigen_descripcion = document.createElement(ParametroFactuEmpresaConstantesFunciones.IDCLIENTEORIGEN);
		elementclienteorigen_descripcion.appendChild(document.createTextNode(parametrofactuempresa.getclienteorigen_descripcion()));
		element.appendChild(elementclienteorigen_descripcion);

		Element elementcosto_origen = document.createElement(ParametroFactuEmpresaConstantesFunciones.COSTOORIGEN);
		elementcosto_origen.appendChild(document.createTextNode(parametrofactuempresa.getcosto_origen().toString().trim()));
		element.appendChild(elementcosto_origen);

		Element elementempresadestino_descripcion = document.createElement(ParametroFactuEmpresaConstantesFunciones.IDEMPRESADESTINO);
		elementempresadestino_descripcion.appendChild(document.createTextNode(parametrofactuempresa.getempresadestino_descripcion()));
		element.appendChild(elementempresadestino_descripcion);

		Element elementsucursaldestino_descripcion = document.createElement(ParametroFactuEmpresaConstantesFunciones.IDSUCURSALDESTINO);
		elementsucursaldestino_descripcion.appendChild(document.createTextNode(parametrofactuempresa.getsucursaldestino_descripcion()));
		element.appendChild(elementsucursaldestino_descripcion);

		Element elementtransacciondestino_descripcion = document.createElement(ParametroFactuEmpresaConstantesFunciones.IDTRANSACCIONDESTINO);
		elementtransacciondestino_descripcion.appendChild(document.createTextNode(parametrofactuempresa.gettransacciondestino_descripcion()));
		element.appendChild(elementtransacciondestino_descripcion);

		Element elementbodegadestino_descripcion = document.createElement(ParametroFactuEmpresaConstantesFunciones.IDBODEGADESTINO);
		elementbodegadestino_descripcion.appendChild(document.createTextNode(parametrofactuempresa.getbodegadestino_descripcion()));
		element.appendChild(elementbodegadestino_descripcion);

		Element elementclientedestino_descripcion = document.createElement(ParametroFactuEmpresaConstantesFunciones.IDCLIENTEDESTINO);
		elementclientedestino_descripcion.appendChild(document.createTextNode(parametrofactuempresa.getclientedestino_descripcion()));
		element.appendChild(elementclientedestino_descripcion);

		Element elementcosto_destino = document.createElement(ParametroFactuEmpresaConstantesFunciones.COSTODESTINO);
		elementcosto_destino.appendChild(document.createTextNode(parametrofactuempresa.getcosto_destino().toString().trim()));
		element.appendChild(elementcosto_destino);

		Element elementcon_transferencia = document.createElement(ParametroFactuEmpresaConstantesFunciones.CONTRANSFERENCIA);
		elementcon_transferencia.appendChild(document.createTextNode(parametrofactuempresa.getcon_transferencia().toString().trim()));
		element.appendChild(elementcon_transferencia);

		Element elementempresamultidestino_descripcion = document.createElement(ParametroFactuEmpresaConstantesFunciones.IDEMPRESAMULTIDESTINO);
		elementempresamultidestino_descripcion.appendChild(document.createTextNode(parametrofactuempresa.getempresamultidestino_descripcion()));
		element.appendChild(elementempresamultidestino_descripcion);

		Element elementsucursalmultidestino_descripcion = document.createElement(ParametroFactuEmpresaConstantesFunciones.IDSUCURSALMULTIDESTINO);
		elementsucursalmultidestino_descripcion.appendChild(document.createTextNode(parametrofactuempresa.getsucursalmultidestino_descripcion()));
		element.appendChild(elementsucursalmultidestino_descripcion);

		Element elementtransaccionmultidestino_descripcion = document.createElement(ParametroFactuEmpresaConstantesFunciones.IDTRANSACCIONMULTIDESTINO);
		elementtransaccionmultidestino_descripcion.appendChild(document.createTextNode(parametrofactuempresa.gettransaccionmultidestino_descripcion()));
		element.appendChild(elementtransaccionmultidestino_descripcion);

		Element elementbodegamultiorigen_descripcion = document.createElement(ParametroFactuEmpresaConstantesFunciones.IDBODEGAMULTIORIGEN);
		elementbodegamultiorigen_descripcion.appendChild(document.createTextNode(parametrofactuempresa.getbodegamultiorigen_descripcion()));
		element.appendChild(elementbodegamultiorigen_descripcion);

		Element elementbodegamultidestino_descripcion = document.createElement(ParametroFactuEmpresaConstantesFunciones.IDBODEGAMULTIDESTINO);
		elementbodegamultidestino_descripcion.appendChild(document.createTextNode(parametrofactuempresa.getbodegamultidestino_descripcion()));
		element.appendChild(elementbodegamultidestino_descripcion);
	}
	
	public void generarReporteGroupGenericoParametroFactuEmpresasSeleccionados(Boolean soloTotales) throws Exception {
		ArrayList<ParametroFactuEmpresa> parametrofactuempresasSeleccionados=new ArrayList<ParametroFactuEmpresa>();
		
		parametrofactuempresasSeleccionados=this.getParametroFactuEmpresasSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
		
		/*
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		if(!soloTotales) {
			this.sTipoReporteExtra=Constantes2.S_REPORTE_EXTRA_GROUP_GENERICO;
		} else {
			this.sTipoReporteExtra=Constantes2.S_REPORTE_EXTRA_GROUP_TOTALES_GENERICO;
		}
		
		this.setColumnaDescripcionReporteGroupGenericoParametroFactuEmpresa(parametrofactuempresasSeleccionados);
		
		this.generarReporteParametroFactuEmpresas("Todos",parametrofactuempresasSeleccionados);
	}
	
	public void setColumnaDescripcionReporteGroupGenericoParametroFactuEmpresa(ArrayList<ParametroFactuEmpresa> parametrofactuempresasSeleccionados) throws Exception {    		
		try {
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			
			Boolean existe=false;
			
			for(ParametroFactuEmpresa parametrofactuempresaAux:parametrofactuempresasSeleccionados) {
				parametrofactuempresaAux.setsDetalleGeneralEntityReporte(parametrofactuempresaAux.toString());
			
				if(sTipoSeleccionar.equals(ParametroFactuEmpresaConstantesFunciones.LABEL_IDEMPRESA)) {
					existe=true;
					parametrofactuempresaAux.setsDescripcionGeneralEntityReporte1(parametrofactuempresaAux.getempresa_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ParametroFactuEmpresaConstantesFunciones.LABEL_IDEMPRESAORIGEN)) {
					existe=true;
					parametrofactuempresaAux.setsDescripcionGeneralEntityReporte1(parametrofactuempresaAux.getempresaorigen_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ParametroFactuEmpresaConstantesFunciones.LABEL_IDSUCURSAL)) {
					existe=true;
					parametrofactuempresaAux.setsDescripcionGeneralEntityReporte1(parametrofactuempresaAux.getsucursal_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ParametroFactuEmpresaConstantesFunciones.LABEL_IDTRANSACCIONORIGEN)) {
					existe=true;
					parametrofactuempresaAux.setsDescripcionGeneralEntityReporte1(parametrofactuempresaAux.gettransaccionorigen_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ParametroFactuEmpresaConstantesFunciones.LABEL_IDBODEGAORIGEN)) {
					existe=true;
					parametrofactuempresaAux.setsDescripcionGeneralEntityReporte1(parametrofactuempresaAux.getbodegaorigen_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ParametroFactuEmpresaConstantesFunciones.LABEL_IDCLIENTEORIGEN)) {
					existe=true;
					parametrofactuempresaAux.setsDescripcionGeneralEntityReporte1(parametrofactuempresaAux.getclienteorigen_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ParametroFactuEmpresaConstantesFunciones.LABEL_IDEMPRESADESTINO)) {
					existe=true;
					parametrofactuempresaAux.setsDescripcionGeneralEntityReporte1(parametrofactuempresaAux.getempresadestino_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ParametroFactuEmpresaConstantesFunciones.LABEL_IDSUCURSALDESTINO)) {
					existe=true;
					parametrofactuempresaAux.setsDescripcionGeneralEntityReporte1(parametrofactuempresaAux.getsucursaldestino_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ParametroFactuEmpresaConstantesFunciones.LABEL_IDTRANSACCIONDESTINO)) {
					existe=true;
					parametrofactuempresaAux.setsDescripcionGeneralEntityReporte1(parametrofactuempresaAux.gettransacciondestino_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ParametroFactuEmpresaConstantesFunciones.LABEL_IDBODEGADESTINO)) {
					existe=true;
					parametrofactuempresaAux.setsDescripcionGeneralEntityReporte1(parametrofactuempresaAux.getbodegadestino_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ParametroFactuEmpresaConstantesFunciones.LABEL_IDCLIENTEDESTINO)) {
					existe=true;
					parametrofactuempresaAux.setsDescripcionGeneralEntityReporte1(parametrofactuempresaAux.getclientedestino_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ParametroFactuEmpresaConstantesFunciones.LABEL_CONTRANSFERENCIA)) {
					existe=true;
					parametrofactuempresaAux.setsDescripcionGeneralEntityReporte1(Funciones2.getDescripcionBoolean(parametrofactuempresaAux.getcon_transferencia()));
				}
				 else if(sTipoSeleccionar.equals(ParametroFactuEmpresaConstantesFunciones.LABEL_IDEMPRESAMULTIDESTINO)) {
					existe=true;
					parametrofactuempresaAux.setsDescripcionGeneralEntityReporte1(parametrofactuempresaAux.getempresamultidestino_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ParametroFactuEmpresaConstantesFunciones.LABEL_IDSUCURSALMULTIDESTINO)) {
					existe=true;
					parametrofactuempresaAux.setsDescripcionGeneralEntityReporte1(parametrofactuempresaAux.getsucursalmultidestino_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ParametroFactuEmpresaConstantesFunciones.LABEL_IDTRANSACCIONMULTIDESTINO)) {
					existe=true;
					parametrofactuempresaAux.setsDescripcionGeneralEntityReporte1(parametrofactuempresaAux.gettransaccionmultidestino_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ParametroFactuEmpresaConstantesFunciones.LABEL_IDBODEGAMULTIORIGEN)) {
					existe=true;
					parametrofactuempresaAux.setsDescripcionGeneralEntityReporte1(parametrofactuempresaAux.getbodegamultiorigen_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ParametroFactuEmpresaConstantesFunciones.LABEL_IDBODEGAMULTIDESTINO)) {
					existe=true;
					parametrofactuempresaAux.setsDescripcionGeneralEntityReporte1(parametrofactuempresaAux.getbodegamultidestino_descripcion());
				}
			}	
											
			if(!existe) {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}										
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroFactuEmpresaConstantesFunciones.CLASSNAME);
		}
	}
	
	
	public void actualizarEstadoCeldasBotonesParametroFactuEmpresa(String sAccion,Boolean isGuardarCambiosEnLote,Boolean isEsMantenimientoRelacionado) throws Exception {
		if(sAccion=="n") {
			if(!this.esParaBusquedaForeignKey) {
				this.isVisibilidadCeldaNuevoParametroFactuEmpresa=true;
				this.isVisibilidadCeldaNuevoRelacionesParametroFactuEmpresa=true;
				this.isVisibilidadCeldaGuardarCambiosParametroFactuEmpresa=true;
			}
			
			this.isVisibilidadCeldaModificarParametroFactuEmpresa=false;
			this.isVisibilidadCeldaActualizarParametroFactuEmpresa=false;
			this.isVisibilidadCeldaEliminarParametroFactuEmpresa=false;
			this.isVisibilidadCeldaCancelarParametroFactuEmpresa=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarParametroFactuEmpresa=true;
				} else {
					this.isVisibilidadCeldaGuardarParametroFactuEmpresa=false;
				}
			}
		} else if(sAccion=="a") {
			this.isVisibilidadCeldaNuevoParametroFactuEmpresa=false;
			this.isVisibilidadCeldaNuevoRelacionesParametroFactuEmpresa=false;
			this.isVisibilidadCeldaGuardarCambiosParametroFactuEmpresa=false;
			this.isVisibilidadCeldaModificarParametroFactuEmpresa=false;
			this.isVisibilidadCeldaActualizarParametroFactuEmpresa=true;
			this.isVisibilidadCeldaEliminarParametroFactuEmpresa=false;
			this.isVisibilidadCeldaCancelarParametroFactuEmpresa=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarParametroFactuEmpresa=true;
				} else {
					this.isVisibilidadCeldaGuardarParametroFactuEmpresa=false;
				}
			}
		} else if(sAccion=="ae") {
			this.isVisibilidadCeldaNuevoParametroFactuEmpresa=false;
			this.isVisibilidadCeldaNuevoRelacionesParametroFactuEmpresa=false;
			this.isVisibilidadCeldaGuardarCambiosParametroFactuEmpresa=false;
			this.isVisibilidadCeldaModificarParametroFactuEmpresa=false;
			this.isVisibilidadCeldaActualizarParametroFactuEmpresa=true;
			this.isVisibilidadCeldaEliminarParametroFactuEmpresa=true;
			this.isVisibilidadCeldaCancelarParametroFactuEmpresa=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarParametroFactuEmpresa=true;
				} else {
					this.isVisibilidadCeldaGuardarParametroFactuEmpresa=false;
				}
			}
		}
		//Para Mantenimientos de tablas relacionados con mas de columnas minimas
		else if(sAccion=="ae2") {
			this.isVisibilidadCeldaNuevoParametroFactuEmpresa=false;
			this.isVisibilidadCeldaNuevoRelacionesParametroFactuEmpresa=false;
			this.isVisibilidadCeldaGuardarCambiosParametroFactuEmpresa=false;
			this.isVisibilidadCeldaModificarParametroFactuEmpresa=false;
			this.isVisibilidadCeldaActualizarParametroFactuEmpresa=true;
			this.isVisibilidadCeldaEliminarParametroFactuEmpresa=false;
			this.isVisibilidadCeldaCancelarParametroFactuEmpresa=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarParametroFactuEmpresa=false;
				} else {
					this.isVisibilidadCeldaGuardarParametroFactuEmpresa=false;
				}
			}
		} else if(sAccion=="c") {
			this.isVisibilidadCeldaNuevoParametroFactuEmpresa=true;
			this.isVisibilidadCeldaNuevoRelacionesParametroFactuEmpresa=true;
			this.isVisibilidadCeldaGuardarCambiosParametroFactuEmpresa=true;
			this.isVisibilidadCeldaModificarParametroFactuEmpresa=false;
			this.isVisibilidadCeldaActualizarParametroFactuEmpresa=false;
			this.isVisibilidadCeldaEliminarParametroFactuEmpresa=false;
			this.isVisibilidadCeldaCancelarParametroFactuEmpresa=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarParametroFactuEmpresa=true;
				} else {
					this.isVisibilidadCeldaGuardarParametroFactuEmpresa=false;
				}
			}
		} else if(sAccion=="t") {
			this.isVisibilidadCeldaNuevoParametroFactuEmpresa=false;
			this.isVisibilidadCeldaNuevoRelacionesParametroFactuEmpresa=false;
			this.isVisibilidadCeldaGuardarCambiosParametroFactuEmpresa=false;
			this.isVisibilidadCeldaActualizarParametroFactuEmpresa=false;
			this.isVisibilidadCeldaEliminarParametroFactuEmpresa=false;
			this.isVisibilidadCeldaCancelarParametroFactuEmpresa=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarParametroFactuEmpresa=false;
				} else {
					this.isVisibilidadCeldaGuardarParametroFactuEmpresa=false;
				}
			}
		}  else if(sAccion=="s"||sAccion=="s2") {
			this.isVisibilidadCeldaNuevoParametroFactuEmpresa=false;
			this.isVisibilidadCeldaNuevoRelacionesParametroFactuEmpresa=false;
			this.isVisibilidadCeldaGuardarCambiosParametroFactuEmpresa=false;
			this.isVisibilidadCeldaModificarParametroFactuEmpresa=true;
			this.isVisibilidadCeldaActualizarParametroFactuEmpresa=false;
			this.isVisibilidadCeldaEliminarParametroFactuEmpresa=false;
			this.isVisibilidadCeldaCancelarParametroFactuEmpresa=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarParametroFactuEmpresa=false;
				} else {
					this.isVisibilidadCeldaGuardarParametroFactuEmpresa=false;
				}
			}
		}
		
		//ACTUALIZA VISIBILIDAD PANELES
		if(ParametroFactuEmpresaJInternalFrame.CON_DATOS_FRAME && !this.esParaBusquedaForeignKey) {
			//SIEMPRE VISIBLE
			this.isVisibilidadCeldaNuevoParametroFactuEmpresa=true;
			this.isVisibilidadCeldaNuevoRelacionesParametroFactuEmpresa=true;
			this.isVisibilidadCeldaGuardarCambiosParametroFactuEmpresa=true;
		} else {
			this.actualizarEstadoPanelsParametroFactuEmpresa(sAccion);						
		}
		
		if(this.esParaBusquedaForeignKey) {
			this.isVisibilidadCeldaCopiarParametroFactuEmpresa=false;
			//this.isVisibilidadCeldaVerFormParametroFactuEmpresa=false;
			this.isVisibilidadCeldaDuplicarParametroFactuEmpresa=false;
		}
		
		//SI ES MANTENIMIENTO RELACIONES
		if(!parametrofactuempresaSessionBean.getConGuardarRelaciones()) {
			this.isVisibilidadCeldaNuevoRelacionesParametroFactuEmpresa=false;
		} else {
			this.isVisibilidadCeldaNuevoParametroFactuEmpresa=false;
			this.isVisibilidadCeldaGuardarCambiosParametroFactuEmpresa=false;
		}
		
		//SI ES MANTENIMIENTO RELACIONADO
		if(parametrofactuempresaSessionBean.getEsGuardarRelacionado()) {
			if(!parametrofactuempresaSessionBean.getConGuardarRelaciones()) {	
				this.isVisibilidadCeldaNuevoRelacionesParametroFactuEmpresa=false;												
			}
			
			this.jButtonCerrarParametroFactuEmpresa.setVisible(false);
		}
		
		//SI NO TIENE MAXIMO DE RELACIONES PERMITIDAS
		if(!this.conMaximoRelaciones) {
			this.isVisibilidadCeldaNuevoRelacionesParametroFactuEmpresa=false;
		}
		
		if(!this.permiteMantenimiento(this.parametrofactuempresa)) {
			this.isVisibilidadCeldaActualizarParametroFactuEmpresa=false;
			this.isVisibilidadCeldaEliminarParametroFactuEmpresa=false;
		}
		
		
		
	}
	
	public void actualizarEstadoCeldasBotonesConGuardarRelacionesParametroFactuEmpresa() {
	}
	
	public void actualizarEstadoPanelsParametroFactuEmpresa(String sAccion) {
		if(sAccion=="n") {
			if(this.jScrollPanelDatosEdicionParametroFactuEmpresa!=null) {
				this.jScrollPanelDatosEdicionParametroFactuEmpresa.setVisible(false);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasParametroFactuEmpresa!=null) {
				this.jTabbedPaneBusquedasParametroFactuEmpresa.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosParametroFactuEmpresa!=null) {
				this.jScrollPanelDatosParametroFactuEmpresa.setVisible(true);
			}
			
			if(this.jPanelPaginacionParametroFactuEmpresa!=null) {
				this.jPanelPaginacionParametroFactuEmpresa.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesParametroFactuEmpresa!=null) {
				this.jPanelParametrosReportesParametroFactuEmpresa.setVisible(true);		    
			}
			
		} else if(sAccion=="a") {				
			if(this.jScrollPanelDatosEdicionParametroFactuEmpresa!=null) {
				this.jScrollPanelDatosEdicionParametroFactuEmpresa.setVisible(true);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasParametroFactuEmpresa!=null) {
				this.jTabbedPaneBusquedasParametroFactuEmpresa.setVisible(false);			
			}
			
			
			
			if(this.jScrollPanelDatosParametroFactuEmpresa!=null) {
				this.jScrollPanelDatosParametroFactuEmpresa.setVisible(false);
			}
			
			if(this.jPanelPaginacionParametroFactuEmpresa!=null) {
				this.jPanelPaginacionParametroFactuEmpresa.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesParametroFactuEmpresa!=null) {
				this.jPanelParametrosReportesParametroFactuEmpresa.setVisible(false);
			}
						
		} else if(sAccion=="ae") {		
			if(this.jScrollPanelDatosEdicionParametroFactuEmpresa!=null) {
				this.jScrollPanelDatosEdicionParametroFactuEmpresa.setVisible(true);		
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasParametroFactuEmpresa!=null) {
				this.jTabbedPaneBusquedasParametroFactuEmpresa.setVisible(false);			
			}
			
			
			if(this.jScrollPanelDatosParametroFactuEmpresa!=null) {
				this.jScrollPanelDatosParametroFactuEmpresa.setVisible(false);
			}
			
			if(this.jPanelPaginacionParametroFactuEmpresa!=null) {
				this.jPanelPaginacionParametroFactuEmpresa.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesParametroFactuEmpresa!=null) {
				this.jPanelParametrosReportesParametroFactuEmpresa.setVisible(false);
			}
						
		}
		//Para Mantenimientos de tablas relacionados con mas de columnas minimas
		else if(sAccion=="ae2") {	
			if(this.jScrollPanelDatosEdicionParametroFactuEmpresa!=null) {
				this.jScrollPanelDatosEdicionParametroFactuEmpresa.setVisible(true);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasParametroFactuEmpresa!=null) {
				this.jTabbedPaneBusquedasParametroFactuEmpresa.setVisible(false);			
			}
			
			
			if(this.jScrollPanelDatosParametroFactuEmpresa!=null) {
				this.jScrollPanelDatosParametroFactuEmpresa.setVisible(false);
			}
			
			if(this.jPanelPaginacionParametroFactuEmpresa!=null) {
				this.jPanelPaginacionParametroFactuEmpresa.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesParametroFactuEmpresa!=null) {
				this.jPanelParametrosReportesParametroFactuEmpresa.setVisible(false);
			}
						
		} else if(sAccion=="c") {	
			if(this.jScrollPanelDatosEdicionParametroFactuEmpresa!=null) {
				this.jScrollPanelDatosEdicionParametroFactuEmpresa.setVisible(false);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasParametroFactuEmpresa!=null) {
				this.jTabbedPaneBusquedasParametroFactuEmpresa.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosParametroFactuEmpresa!=null) {
				this.jScrollPanelDatosParametroFactuEmpresa.setVisible(true);
			}
			
			if(this.jPanelPaginacionParametroFactuEmpresa!=null) {
				this.jPanelPaginacionParametroFactuEmpresa.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesParametroFactuEmpresa!=null) {
				this.jPanelParametrosReportesParametroFactuEmpresa.setVisible(true);
			}
						
		} else if(sAccion=="t") {
			
			if(this.jScrollPanelDatosEdicionParametroFactuEmpresa!=null) {
				this.jScrollPanelDatosEdicionParametroFactuEmpresa.setVisible(false);
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasParametroFactuEmpresa!=null) {
				this.jTabbedPaneBusquedasParametroFactuEmpresa.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosParametroFactuEmpresa!=null) {
				this.jScrollPanelDatosParametroFactuEmpresa.setVisible(true);
			}
			
			if(this.jPanelPaginacionParametroFactuEmpresa!=null) {
				this.jPanelPaginacionParametroFactuEmpresa.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesParametroFactuEmpresa!=null) {
				this.jPanelParametrosReportesParametroFactuEmpresa.setVisible(true);
			}
						
		}  else if(sAccion=="s"||sAccion=="s2") {
			if(this.jScrollPanelDatosEdicionParametroFactuEmpresa!=null) {
				this.jScrollPanelDatosEdicionParametroFactuEmpresa.setVisible(false);
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasParametroFactuEmpresa!=null) {
				this.jTabbedPaneBusquedasParametroFactuEmpresa.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosParametroFactuEmpresa!=null) {
				this.jScrollPanelDatosParametroFactuEmpresa.setVisible(true);
			}
			
			if(this.jPanelPaginacionParametroFactuEmpresa!=null) {
				this.jPanelPaginacionParametroFactuEmpresa.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesParametroFactuEmpresa!=null) {
				this.jPanelParametrosReportesParametroFactuEmpresa.setVisible(true);
			}
			
		} 
		
		if(sAccion.equals("relacionado") || this.parametrofactuempresaSessionBean.getEsGuardarRelacionado()) {
			if(!this.conCargarMinimo) {
				//BYDAN_BUSQUEDAS
				
				if(this.jTabbedPaneBusquedasParametroFactuEmpresa!=null) {
					this.jTabbedPaneBusquedasParametroFactuEmpresa.setVisible(false);				
				}
				
			}
			
			if(this.jPanelParametrosReportesParametroFactuEmpresa!=null) {
				this.jPanelParametrosReportesParametroFactuEmpresa.setVisible(false);
			}
		
		} else if(sAccion.equals("no_relacionado") && !this.parametrofactuempresaSessionBean.getEsGuardarRelacionado()) {
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasParametroFactuEmpresa!=null) {
				this.jTabbedPaneBusquedasParametroFactuEmpresa.setVisible(true);			
			}
			
			if(this.jPanelParametrosReportesParametroFactuEmpresa!=null) {
				this.jPanelParametrosReportesParametroFactuEmpresa.setVisible(true);
			}
		}
	}	
	
	

	public void setVisibilidadBusquedasParaEmpresa(Boolean isParaEmpresa){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaEmpresaNegation=!isParaEmpresa;

			this.isVisibilidadFK_IdBodegaDestino=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdBodegaDestino) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdBodegaDestinoParametroFactuEmpresa);}

			this.isVisibilidadFK_IdBodegaMultiDestino=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdBodegaMultiDestino) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdBodegaMultiDestinoParametroFactuEmpresa);}

			this.isVisibilidadFK_IdBodegaMultiOrigen=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdBodegaMultiOrigen) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdBodegaMultiOrigenParametroFactuEmpresa);}

			this.isVisibilidadFK_IdBodegaOrigen=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdBodegaOrigen) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdBodegaOrigenParametroFactuEmpresa);}

			this.isVisibilidadFK_IdClienteDestino=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdClienteDestino) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdClienteDestinoParametroFactuEmpresa);}

			this.isVisibilidadFK_IdClienteOrigen=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdClienteOrigen) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdClienteOrigenParametroFactuEmpresa);}

			this.isVisibilidadFK_IdEmpresaDestino=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdEmpresaDestino) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdEmpresaDestinoParametroFactuEmpresa);}

			this.isVisibilidadFK_IdEmpresaMultiDestino=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdEmpresaMultiDestino) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdEmpresaMultiDestinoParametroFactuEmpresa);}

			this.isVisibilidadFK_IdEmpresaOrigen=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdEmpresaOrigen) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdEmpresaOrigenParametroFactuEmpresa);}

			this.isVisibilidadFK_IdSucursal=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdSucursal) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdSucursalParametroFactuEmpresa);}

			this.isVisibilidadFK_IdSucursalDestino=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdSucursalDestino) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdSucursalDestinoParametroFactuEmpresa);}

			this.isVisibilidadFK_IdSucursalMultiDestino=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdSucursalMultiDestino) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdSucursalMultiDestinoParametroFactuEmpresa);}

			this.isVisibilidadFK_IdTransaccionDestino=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdTransaccionDestino) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdTransaccionDestinoParametroFactuEmpresa);}

			this.isVisibilidadFK_IdTransaccionMultiDestino=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdTransaccionMultiDestino) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdTransaccionMultiDestinoParametroFactuEmpresa);}

			this.isVisibilidadFK_IdTransaccionOrigen=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdTransaccionOrigen) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdTransaccionOrigenParametroFactuEmpresa);}
		}
		
	}

	public void setVisibilidadBusquedasParaEmpresaOrigen(Boolean isParaEmpresaOrigen){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaEmpresaOrigenNegation=!isParaEmpresaOrigen;

			this.isVisibilidadFK_IdBodegaDestino=isParaEmpresaOrigenNegation;
			if(!this.isVisibilidadFK_IdBodegaDestino) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdBodegaDestinoParametroFactuEmpresa);}

			this.isVisibilidadFK_IdBodegaMultiDestino=isParaEmpresaOrigenNegation;
			if(!this.isVisibilidadFK_IdBodegaMultiDestino) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdBodegaMultiDestinoParametroFactuEmpresa);}

			this.isVisibilidadFK_IdBodegaMultiOrigen=isParaEmpresaOrigenNegation;
			if(!this.isVisibilidadFK_IdBodegaMultiOrigen) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdBodegaMultiOrigenParametroFactuEmpresa);}

			this.isVisibilidadFK_IdBodegaOrigen=isParaEmpresaOrigenNegation;
			if(!this.isVisibilidadFK_IdBodegaOrigen) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdBodegaOrigenParametroFactuEmpresa);}

			this.isVisibilidadFK_IdClienteDestino=isParaEmpresaOrigenNegation;
			if(!this.isVisibilidadFK_IdClienteDestino) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdClienteDestinoParametroFactuEmpresa);}

			this.isVisibilidadFK_IdClienteOrigen=isParaEmpresaOrigenNegation;
			if(!this.isVisibilidadFK_IdClienteOrigen) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdClienteOrigenParametroFactuEmpresa);}

			this.isVisibilidadFK_IdEmpresaDestino=isParaEmpresaOrigenNegation;
			if(!this.isVisibilidadFK_IdEmpresaDestino) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdEmpresaDestinoParametroFactuEmpresa);}

			this.isVisibilidadFK_IdEmpresaMultiDestino=isParaEmpresaOrigenNegation;
			if(!this.isVisibilidadFK_IdEmpresaMultiDestino) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdEmpresaMultiDestinoParametroFactuEmpresa);}

			this.isVisibilidadFK_IdEmpresaOrigen=isParaEmpresaOrigen;
			if(!this.isVisibilidadFK_IdEmpresaOrigen) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdEmpresaOrigenParametroFactuEmpresa);}

			this.isVisibilidadFK_IdSucursal=isParaEmpresaOrigenNegation;
			if(!this.isVisibilidadFK_IdSucursal) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdSucursalParametroFactuEmpresa);}

			this.isVisibilidadFK_IdSucursalDestino=isParaEmpresaOrigenNegation;
			if(!this.isVisibilidadFK_IdSucursalDestino) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdSucursalDestinoParametroFactuEmpresa);}

			this.isVisibilidadFK_IdSucursalMultiDestino=isParaEmpresaOrigenNegation;
			if(!this.isVisibilidadFK_IdSucursalMultiDestino) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdSucursalMultiDestinoParametroFactuEmpresa);}

			this.isVisibilidadFK_IdTransaccionDestino=isParaEmpresaOrigenNegation;
			if(!this.isVisibilidadFK_IdTransaccionDestino) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdTransaccionDestinoParametroFactuEmpresa);}

			this.isVisibilidadFK_IdTransaccionMultiDestino=isParaEmpresaOrigenNegation;
			if(!this.isVisibilidadFK_IdTransaccionMultiDestino) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdTransaccionMultiDestinoParametroFactuEmpresa);}

			this.isVisibilidadFK_IdTransaccionOrigen=isParaEmpresaOrigenNegation;
			if(!this.isVisibilidadFK_IdTransaccionOrigen) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdTransaccionOrigenParametroFactuEmpresa);}
		}
		
	}

	public void setVisibilidadBusquedasParaSucursal(Boolean isParaSucursal){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaSucursalNegation=!isParaSucursal;

			this.isVisibilidadFK_IdBodegaDestino=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdBodegaDestino) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdBodegaDestinoParametroFactuEmpresa);}

			this.isVisibilidadFK_IdBodegaMultiDestino=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdBodegaMultiDestino) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdBodegaMultiDestinoParametroFactuEmpresa);}

			this.isVisibilidadFK_IdBodegaMultiOrigen=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdBodegaMultiOrigen) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdBodegaMultiOrigenParametroFactuEmpresa);}

			this.isVisibilidadFK_IdBodegaOrigen=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdBodegaOrigen) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdBodegaOrigenParametroFactuEmpresa);}

			this.isVisibilidadFK_IdClienteDestino=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdClienteDestino) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdClienteDestinoParametroFactuEmpresa);}

			this.isVisibilidadFK_IdClienteOrigen=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdClienteOrigen) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdClienteOrigenParametroFactuEmpresa);}

			this.isVisibilidadFK_IdEmpresaDestino=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdEmpresaDestino) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdEmpresaDestinoParametroFactuEmpresa);}

			this.isVisibilidadFK_IdEmpresaMultiDestino=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdEmpresaMultiDestino) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdEmpresaMultiDestinoParametroFactuEmpresa);}

			this.isVisibilidadFK_IdEmpresaOrigen=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdEmpresaOrigen) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdEmpresaOrigenParametroFactuEmpresa);}

			this.isVisibilidadFK_IdSucursal=isParaSucursal;
			if(!this.isVisibilidadFK_IdSucursal) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdSucursalParametroFactuEmpresa);}

			this.isVisibilidadFK_IdSucursalDestino=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdSucursalDestino) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdSucursalDestinoParametroFactuEmpresa);}

			this.isVisibilidadFK_IdSucursalMultiDestino=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdSucursalMultiDestino) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdSucursalMultiDestinoParametroFactuEmpresa);}

			this.isVisibilidadFK_IdTransaccionDestino=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdTransaccionDestino) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdTransaccionDestinoParametroFactuEmpresa);}

			this.isVisibilidadFK_IdTransaccionMultiDestino=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdTransaccionMultiDestino) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdTransaccionMultiDestinoParametroFactuEmpresa);}

			this.isVisibilidadFK_IdTransaccionOrigen=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdTransaccionOrigen) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdTransaccionOrigenParametroFactuEmpresa);}
		}
		
	}

	public void setVisibilidadBusquedasParaTransaccionOrigen(Boolean isParaTransaccionOrigen){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaTransaccionOrigenNegation=!isParaTransaccionOrigen;

			this.isVisibilidadFK_IdBodegaDestino=isParaTransaccionOrigenNegation;
			if(!this.isVisibilidadFK_IdBodegaDestino) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdBodegaDestinoParametroFactuEmpresa);}

			this.isVisibilidadFK_IdBodegaMultiDestino=isParaTransaccionOrigenNegation;
			if(!this.isVisibilidadFK_IdBodegaMultiDestino) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdBodegaMultiDestinoParametroFactuEmpresa);}

			this.isVisibilidadFK_IdBodegaMultiOrigen=isParaTransaccionOrigenNegation;
			if(!this.isVisibilidadFK_IdBodegaMultiOrigen) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdBodegaMultiOrigenParametroFactuEmpresa);}

			this.isVisibilidadFK_IdBodegaOrigen=isParaTransaccionOrigenNegation;
			if(!this.isVisibilidadFK_IdBodegaOrigen) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdBodegaOrigenParametroFactuEmpresa);}

			this.isVisibilidadFK_IdClienteDestino=isParaTransaccionOrigenNegation;
			if(!this.isVisibilidadFK_IdClienteDestino) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdClienteDestinoParametroFactuEmpresa);}

			this.isVisibilidadFK_IdClienteOrigen=isParaTransaccionOrigenNegation;
			if(!this.isVisibilidadFK_IdClienteOrigen) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdClienteOrigenParametroFactuEmpresa);}

			this.isVisibilidadFK_IdEmpresaDestino=isParaTransaccionOrigenNegation;
			if(!this.isVisibilidadFK_IdEmpresaDestino) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdEmpresaDestinoParametroFactuEmpresa);}

			this.isVisibilidadFK_IdEmpresaMultiDestino=isParaTransaccionOrigenNegation;
			if(!this.isVisibilidadFK_IdEmpresaMultiDestino) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdEmpresaMultiDestinoParametroFactuEmpresa);}

			this.isVisibilidadFK_IdEmpresaOrigen=isParaTransaccionOrigenNegation;
			if(!this.isVisibilidadFK_IdEmpresaOrigen) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdEmpresaOrigenParametroFactuEmpresa);}

			this.isVisibilidadFK_IdSucursal=isParaTransaccionOrigenNegation;
			if(!this.isVisibilidadFK_IdSucursal) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdSucursalParametroFactuEmpresa);}

			this.isVisibilidadFK_IdSucursalDestino=isParaTransaccionOrigenNegation;
			if(!this.isVisibilidadFK_IdSucursalDestino) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdSucursalDestinoParametroFactuEmpresa);}

			this.isVisibilidadFK_IdSucursalMultiDestino=isParaTransaccionOrigenNegation;
			if(!this.isVisibilidadFK_IdSucursalMultiDestino) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdSucursalMultiDestinoParametroFactuEmpresa);}

			this.isVisibilidadFK_IdTransaccionDestino=isParaTransaccionOrigenNegation;
			if(!this.isVisibilidadFK_IdTransaccionDestino) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdTransaccionDestinoParametroFactuEmpresa);}

			this.isVisibilidadFK_IdTransaccionMultiDestino=isParaTransaccionOrigenNegation;
			if(!this.isVisibilidadFK_IdTransaccionMultiDestino) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdTransaccionMultiDestinoParametroFactuEmpresa);}

			this.isVisibilidadFK_IdTransaccionOrigen=isParaTransaccionOrigen;
			if(!this.isVisibilidadFK_IdTransaccionOrigen) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdTransaccionOrigenParametroFactuEmpresa);}
		}
		
	}

	public void setVisibilidadBusquedasParaBodegaOrigen(Boolean isParaBodegaOrigen){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaBodegaOrigenNegation=!isParaBodegaOrigen;

			this.isVisibilidadFK_IdBodegaDestino=isParaBodegaOrigenNegation;
			if(!this.isVisibilidadFK_IdBodegaDestino) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdBodegaDestinoParametroFactuEmpresa);}

			this.isVisibilidadFK_IdBodegaMultiDestino=isParaBodegaOrigenNegation;
			if(!this.isVisibilidadFK_IdBodegaMultiDestino) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdBodegaMultiDestinoParametroFactuEmpresa);}

			this.isVisibilidadFK_IdBodegaMultiOrigen=isParaBodegaOrigenNegation;
			if(!this.isVisibilidadFK_IdBodegaMultiOrigen) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdBodegaMultiOrigenParametroFactuEmpresa);}

			this.isVisibilidadFK_IdBodegaOrigen=isParaBodegaOrigen;
			if(!this.isVisibilidadFK_IdBodegaOrigen) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdBodegaOrigenParametroFactuEmpresa);}

			this.isVisibilidadFK_IdClienteDestino=isParaBodegaOrigenNegation;
			if(!this.isVisibilidadFK_IdClienteDestino) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdClienteDestinoParametroFactuEmpresa);}

			this.isVisibilidadFK_IdClienteOrigen=isParaBodegaOrigenNegation;
			if(!this.isVisibilidadFK_IdClienteOrigen) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdClienteOrigenParametroFactuEmpresa);}

			this.isVisibilidadFK_IdEmpresaDestino=isParaBodegaOrigenNegation;
			if(!this.isVisibilidadFK_IdEmpresaDestino) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdEmpresaDestinoParametroFactuEmpresa);}

			this.isVisibilidadFK_IdEmpresaMultiDestino=isParaBodegaOrigenNegation;
			if(!this.isVisibilidadFK_IdEmpresaMultiDestino) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdEmpresaMultiDestinoParametroFactuEmpresa);}

			this.isVisibilidadFK_IdEmpresaOrigen=isParaBodegaOrigenNegation;
			if(!this.isVisibilidadFK_IdEmpresaOrigen) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdEmpresaOrigenParametroFactuEmpresa);}

			this.isVisibilidadFK_IdSucursal=isParaBodegaOrigenNegation;
			if(!this.isVisibilidadFK_IdSucursal) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdSucursalParametroFactuEmpresa);}

			this.isVisibilidadFK_IdSucursalDestino=isParaBodegaOrigenNegation;
			if(!this.isVisibilidadFK_IdSucursalDestino) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdSucursalDestinoParametroFactuEmpresa);}

			this.isVisibilidadFK_IdSucursalMultiDestino=isParaBodegaOrigenNegation;
			if(!this.isVisibilidadFK_IdSucursalMultiDestino) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdSucursalMultiDestinoParametroFactuEmpresa);}

			this.isVisibilidadFK_IdTransaccionDestino=isParaBodegaOrigenNegation;
			if(!this.isVisibilidadFK_IdTransaccionDestino) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdTransaccionDestinoParametroFactuEmpresa);}

			this.isVisibilidadFK_IdTransaccionMultiDestino=isParaBodegaOrigenNegation;
			if(!this.isVisibilidadFK_IdTransaccionMultiDestino) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdTransaccionMultiDestinoParametroFactuEmpresa);}

			this.isVisibilidadFK_IdTransaccionOrigen=isParaBodegaOrigenNegation;
			if(!this.isVisibilidadFK_IdTransaccionOrigen) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdTransaccionOrigenParametroFactuEmpresa);}
		}
		
	}

	public void setVisibilidadBusquedasParaClienteOrigen(Boolean isParaClienteOrigen){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaClienteOrigenNegation=!isParaClienteOrigen;

			this.isVisibilidadFK_IdBodegaDestino=isParaClienteOrigenNegation;
			if(!this.isVisibilidadFK_IdBodegaDestino) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdBodegaDestinoParametroFactuEmpresa);}

			this.isVisibilidadFK_IdBodegaMultiDestino=isParaClienteOrigenNegation;
			if(!this.isVisibilidadFK_IdBodegaMultiDestino) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdBodegaMultiDestinoParametroFactuEmpresa);}

			this.isVisibilidadFK_IdBodegaMultiOrigen=isParaClienteOrigenNegation;
			if(!this.isVisibilidadFK_IdBodegaMultiOrigen) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdBodegaMultiOrigenParametroFactuEmpresa);}

			this.isVisibilidadFK_IdBodegaOrigen=isParaClienteOrigenNegation;
			if(!this.isVisibilidadFK_IdBodegaOrigen) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdBodegaOrigenParametroFactuEmpresa);}

			this.isVisibilidadFK_IdClienteDestino=isParaClienteOrigenNegation;
			if(!this.isVisibilidadFK_IdClienteDestino) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdClienteDestinoParametroFactuEmpresa);}

			this.isVisibilidadFK_IdClienteOrigen=isParaClienteOrigen;
			if(!this.isVisibilidadFK_IdClienteOrigen) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdClienteOrigenParametroFactuEmpresa);}

			this.isVisibilidadFK_IdEmpresaDestino=isParaClienteOrigenNegation;
			if(!this.isVisibilidadFK_IdEmpresaDestino) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdEmpresaDestinoParametroFactuEmpresa);}

			this.isVisibilidadFK_IdEmpresaMultiDestino=isParaClienteOrigenNegation;
			if(!this.isVisibilidadFK_IdEmpresaMultiDestino) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdEmpresaMultiDestinoParametroFactuEmpresa);}

			this.isVisibilidadFK_IdEmpresaOrigen=isParaClienteOrigenNegation;
			if(!this.isVisibilidadFK_IdEmpresaOrigen) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdEmpresaOrigenParametroFactuEmpresa);}

			this.isVisibilidadFK_IdSucursal=isParaClienteOrigenNegation;
			if(!this.isVisibilidadFK_IdSucursal) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdSucursalParametroFactuEmpresa);}

			this.isVisibilidadFK_IdSucursalDestino=isParaClienteOrigenNegation;
			if(!this.isVisibilidadFK_IdSucursalDestino) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdSucursalDestinoParametroFactuEmpresa);}

			this.isVisibilidadFK_IdSucursalMultiDestino=isParaClienteOrigenNegation;
			if(!this.isVisibilidadFK_IdSucursalMultiDestino) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdSucursalMultiDestinoParametroFactuEmpresa);}

			this.isVisibilidadFK_IdTransaccionDestino=isParaClienteOrigenNegation;
			if(!this.isVisibilidadFK_IdTransaccionDestino) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdTransaccionDestinoParametroFactuEmpresa);}

			this.isVisibilidadFK_IdTransaccionMultiDestino=isParaClienteOrigenNegation;
			if(!this.isVisibilidadFK_IdTransaccionMultiDestino) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdTransaccionMultiDestinoParametroFactuEmpresa);}

			this.isVisibilidadFK_IdTransaccionOrigen=isParaClienteOrigenNegation;
			if(!this.isVisibilidadFK_IdTransaccionOrigen) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdTransaccionOrigenParametroFactuEmpresa);}
		}
		
	}

	public void setVisibilidadBusquedasParaEmpresaDestino(Boolean isParaEmpresaDestino){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaEmpresaDestinoNegation=!isParaEmpresaDestino;

			this.isVisibilidadFK_IdBodegaDestino=isParaEmpresaDestinoNegation;
			if(!this.isVisibilidadFK_IdBodegaDestino) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdBodegaDestinoParametroFactuEmpresa);}

			this.isVisibilidadFK_IdBodegaMultiDestino=isParaEmpresaDestinoNegation;
			if(!this.isVisibilidadFK_IdBodegaMultiDestino) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdBodegaMultiDestinoParametroFactuEmpresa);}

			this.isVisibilidadFK_IdBodegaMultiOrigen=isParaEmpresaDestinoNegation;
			if(!this.isVisibilidadFK_IdBodegaMultiOrigen) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdBodegaMultiOrigenParametroFactuEmpresa);}

			this.isVisibilidadFK_IdBodegaOrigen=isParaEmpresaDestinoNegation;
			if(!this.isVisibilidadFK_IdBodegaOrigen) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdBodegaOrigenParametroFactuEmpresa);}

			this.isVisibilidadFK_IdClienteDestino=isParaEmpresaDestinoNegation;
			if(!this.isVisibilidadFK_IdClienteDestino) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdClienteDestinoParametroFactuEmpresa);}

			this.isVisibilidadFK_IdClienteOrigen=isParaEmpresaDestinoNegation;
			if(!this.isVisibilidadFK_IdClienteOrigen) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdClienteOrigenParametroFactuEmpresa);}

			this.isVisibilidadFK_IdEmpresaDestino=isParaEmpresaDestino;
			if(!this.isVisibilidadFK_IdEmpresaDestino) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdEmpresaDestinoParametroFactuEmpresa);}

			this.isVisibilidadFK_IdEmpresaMultiDestino=isParaEmpresaDestinoNegation;
			if(!this.isVisibilidadFK_IdEmpresaMultiDestino) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdEmpresaMultiDestinoParametroFactuEmpresa);}

			this.isVisibilidadFK_IdEmpresaOrigen=isParaEmpresaDestinoNegation;
			if(!this.isVisibilidadFK_IdEmpresaOrigen) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdEmpresaOrigenParametroFactuEmpresa);}

			this.isVisibilidadFK_IdSucursal=isParaEmpresaDestinoNegation;
			if(!this.isVisibilidadFK_IdSucursal) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdSucursalParametroFactuEmpresa);}

			this.isVisibilidadFK_IdSucursalDestino=isParaEmpresaDestinoNegation;
			if(!this.isVisibilidadFK_IdSucursalDestino) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdSucursalDestinoParametroFactuEmpresa);}

			this.isVisibilidadFK_IdSucursalMultiDestino=isParaEmpresaDestinoNegation;
			if(!this.isVisibilidadFK_IdSucursalMultiDestino) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdSucursalMultiDestinoParametroFactuEmpresa);}

			this.isVisibilidadFK_IdTransaccionDestino=isParaEmpresaDestinoNegation;
			if(!this.isVisibilidadFK_IdTransaccionDestino) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdTransaccionDestinoParametroFactuEmpresa);}

			this.isVisibilidadFK_IdTransaccionMultiDestino=isParaEmpresaDestinoNegation;
			if(!this.isVisibilidadFK_IdTransaccionMultiDestino) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdTransaccionMultiDestinoParametroFactuEmpresa);}

			this.isVisibilidadFK_IdTransaccionOrigen=isParaEmpresaDestinoNegation;
			if(!this.isVisibilidadFK_IdTransaccionOrigen) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdTransaccionOrigenParametroFactuEmpresa);}
		}
		
	}

	public void setVisibilidadBusquedasParaSucursalDestino(Boolean isParaSucursalDestino){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaSucursalDestinoNegation=!isParaSucursalDestino;

			this.isVisibilidadFK_IdBodegaDestino=isParaSucursalDestinoNegation;
			if(!this.isVisibilidadFK_IdBodegaDestino) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdBodegaDestinoParametroFactuEmpresa);}

			this.isVisibilidadFK_IdBodegaMultiDestino=isParaSucursalDestinoNegation;
			if(!this.isVisibilidadFK_IdBodegaMultiDestino) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdBodegaMultiDestinoParametroFactuEmpresa);}

			this.isVisibilidadFK_IdBodegaMultiOrigen=isParaSucursalDestinoNegation;
			if(!this.isVisibilidadFK_IdBodegaMultiOrigen) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdBodegaMultiOrigenParametroFactuEmpresa);}

			this.isVisibilidadFK_IdBodegaOrigen=isParaSucursalDestinoNegation;
			if(!this.isVisibilidadFK_IdBodegaOrigen) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdBodegaOrigenParametroFactuEmpresa);}

			this.isVisibilidadFK_IdClienteDestino=isParaSucursalDestinoNegation;
			if(!this.isVisibilidadFK_IdClienteDestino) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdClienteDestinoParametroFactuEmpresa);}

			this.isVisibilidadFK_IdClienteOrigen=isParaSucursalDestinoNegation;
			if(!this.isVisibilidadFK_IdClienteOrigen) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdClienteOrigenParametroFactuEmpresa);}

			this.isVisibilidadFK_IdEmpresaDestino=isParaSucursalDestinoNegation;
			if(!this.isVisibilidadFK_IdEmpresaDestino) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdEmpresaDestinoParametroFactuEmpresa);}

			this.isVisibilidadFK_IdEmpresaMultiDestino=isParaSucursalDestinoNegation;
			if(!this.isVisibilidadFK_IdEmpresaMultiDestino) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdEmpresaMultiDestinoParametroFactuEmpresa);}

			this.isVisibilidadFK_IdEmpresaOrigen=isParaSucursalDestinoNegation;
			if(!this.isVisibilidadFK_IdEmpresaOrigen) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdEmpresaOrigenParametroFactuEmpresa);}

			this.isVisibilidadFK_IdSucursal=isParaSucursalDestinoNegation;
			if(!this.isVisibilidadFK_IdSucursal) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdSucursalParametroFactuEmpresa);}

			this.isVisibilidadFK_IdSucursalDestino=isParaSucursalDestino;
			if(!this.isVisibilidadFK_IdSucursalDestino) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdSucursalDestinoParametroFactuEmpresa);}

			this.isVisibilidadFK_IdSucursalMultiDestino=isParaSucursalDestinoNegation;
			if(!this.isVisibilidadFK_IdSucursalMultiDestino) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdSucursalMultiDestinoParametroFactuEmpresa);}

			this.isVisibilidadFK_IdTransaccionDestino=isParaSucursalDestinoNegation;
			if(!this.isVisibilidadFK_IdTransaccionDestino) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdTransaccionDestinoParametroFactuEmpresa);}

			this.isVisibilidadFK_IdTransaccionMultiDestino=isParaSucursalDestinoNegation;
			if(!this.isVisibilidadFK_IdTransaccionMultiDestino) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdTransaccionMultiDestinoParametroFactuEmpresa);}

			this.isVisibilidadFK_IdTransaccionOrigen=isParaSucursalDestinoNegation;
			if(!this.isVisibilidadFK_IdTransaccionOrigen) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdTransaccionOrigenParametroFactuEmpresa);}
		}
		
	}

	public void setVisibilidadBusquedasParaTransaccionDestino(Boolean isParaTransaccionDestino){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaTransaccionDestinoNegation=!isParaTransaccionDestino;

			this.isVisibilidadFK_IdBodegaDestino=isParaTransaccionDestinoNegation;
			if(!this.isVisibilidadFK_IdBodegaDestino) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdBodegaDestinoParametroFactuEmpresa);}

			this.isVisibilidadFK_IdBodegaMultiDestino=isParaTransaccionDestinoNegation;
			if(!this.isVisibilidadFK_IdBodegaMultiDestino) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdBodegaMultiDestinoParametroFactuEmpresa);}

			this.isVisibilidadFK_IdBodegaMultiOrigen=isParaTransaccionDestinoNegation;
			if(!this.isVisibilidadFK_IdBodegaMultiOrigen) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdBodegaMultiOrigenParametroFactuEmpresa);}

			this.isVisibilidadFK_IdBodegaOrigen=isParaTransaccionDestinoNegation;
			if(!this.isVisibilidadFK_IdBodegaOrigen) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdBodegaOrigenParametroFactuEmpresa);}

			this.isVisibilidadFK_IdClienteDestino=isParaTransaccionDestinoNegation;
			if(!this.isVisibilidadFK_IdClienteDestino) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdClienteDestinoParametroFactuEmpresa);}

			this.isVisibilidadFK_IdClienteOrigen=isParaTransaccionDestinoNegation;
			if(!this.isVisibilidadFK_IdClienteOrigen) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdClienteOrigenParametroFactuEmpresa);}

			this.isVisibilidadFK_IdEmpresaDestino=isParaTransaccionDestinoNegation;
			if(!this.isVisibilidadFK_IdEmpresaDestino) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdEmpresaDestinoParametroFactuEmpresa);}

			this.isVisibilidadFK_IdEmpresaMultiDestino=isParaTransaccionDestinoNegation;
			if(!this.isVisibilidadFK_IdEmpresaMultiDestino) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdEmpresaMultiDestinoParametroFactuEmpresa);}

			this.isVisibilidadFK_IdEmpresaOrigen=isParaTransaccionDestinoNegation;
			if(!this.isVisibilidadFK_IdEmpresaOrigen) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdEmpresaOrigenParametroFactuEmpresa);}

			this.isVisibilidadFK_IdSucursal=isParaTransaccionDestinoNegation;
			if(!this.isVisibilidadFK_IdSucursal) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdSucursalParametroFactuEmpresa);}

			this.isVisibilidadFK_IdSucursalDestino=isParaTransaccionDestinoNegation;
			if(!this.isVisibilidadFK_IdSucursalDestino) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdSucursalDestinoParametroFactuEmpresa);}

			this.isVisibilidadFK_IdSucursalMultiDestino=isParaTransaccionDestinoNegation;
			if(!this.isVisibilidadFK_IdSucursalMultiDestino) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdSucursalMultiDestinoParametroFactuEmpresa);}

			this.isVisibilidadFK_IdTransaccionDestino=isParaTransaccionDestino;
			if(!this.isVisibilidadFK_IdTransaccionDestino) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdTransaccionDestinoParametroFactuEmpresa);}

			this.isVisibilidadFK_IdTransaccionMultiDestino=isParaTransaccionDestinoNegation;
			if(!this.isVisibilidadFK_IdTransaccionMultiDestino) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdTransaccionMultiDestinoParametroFactuEmpresa);}

			this.isVisibilidadFK_IdTransaccionOrigen=isParaTransaccionDestinoNegation;
			if(!this.isVisibilidadFK_IdTransaccionOrigen) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdTransaccionOrigenParametroFactuEmpresa);}
		}
		
	}

	public void setVisibilidadBusquedasParaBodegaDestino(Boolean isParaBodegaDestino){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaBodegaDestinoNegation=!isParaBodegaDestino;

			this.isVisibilidadFK_IdBodegaDestino=isParaBodegaDestino;
			if(!this.isVisibilidadFK_IdBodegaDestino) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdBodegaDestinoParametroFactuEmpresa);}

			this.isVisibilidadFK_IdBodegaMultiDestino=isParaBodegaDestinoNegation;
			if(!this.isVisibilidadFK_IdBodegaMultiDestino) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdBodegaMultiDestinoParametroFactuEmpresa);}

			this.isVisibilidadFK_IdBodegaMultiOrigen=isParaBodegaDestinoNegation;
			if(!this.isVisibilidadFK_IdBodegaMultiOrigen) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdBodegaMultiOrigenParametroFactuEmpresa);}

			this.isVisibilidadFK_IdBodegaOrigen=isParaBodegaDestinoNegation;
			if(!this.isVisibilidadFK_IdBodegaOrigen) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdBodegaOrigenParametroFactuEmpresa);}

			this.isVisibilidadFK_IdClienteDestino=isParaBodegaDestinoNegation;
			if(!this.isVisibilidadFK_IdClienteDestino) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdClienteDestinoParametroFactuEmpresa);}

			this.isVisibilidadFK_IdClienteOrigen=isParaBodegaDestinoNegation;
			if(!this.isVisibilidadFK_IdClienteOrigen) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdClienteOrigenParametroFactuEmpresa);}

			this.isVisibilidadFK_IdEmpresaDestino=isParaBodegaDestinoNegation;
			if(!this.isVisibilidadFK_IdEmpresaDestino) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdEmpresaDestinoParametroFactuEmpresa);}

			this.isVisibilidadFK_IdEmpresaMultiDestino=isParaBodegaDestinoNegation;
			if(!this.isVisibilidadFK_IdEmpresaMultiDestino) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdEmpresaMultiDestinoParametroFactuEmpresa);}

			this.isVisibilidadFK_IdEmpresaOrigen=isParaBodegaDestinoNegation;
			if(!this.isVisibilidadFK_IdEmpresaOrigen) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdEmpresaOrigenParametroFactuEmpresa);}

			this.isVisibilidadFK_IdSucursal=isParaBodegaDestinoNegation;
			if(!this.isVisibilidadFK_IdSucursal) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdSucursalParametroFactuEmpresa);}

			this.isVisibilidadFK_IdSucursalDestino=isParaBodegaDestinoNegation;
			if(!this.isVisibilidadFK_IdSucursalDestino) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdSucursalDestinoParametroFactuEmpresa);}

			this.isVisibilidadFK_IdSucursalMultiDestino=isParaBodegaDestinoNegation;
			if(!this.isVisibilidadFK_IdSucursalMultiDestino) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdSucursalMultiDestinoParametroFactuEmpresa);}

			this.isVisibilidadFK_IdTransaccionDestino=isParaBodegaDestinoNegation;
			if(!this.isVisibilidadFK_IdTransaccionDestino) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdTransaccionDestinoParametroFactuEmpresa);}

			this.isVisibilidadFK_IdTransaccionMultiDestino=isParaBodegaDestinoNegation;
			if(!this.isVisibilidadFK_IdTransaccionMultiDestino) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdTransaccionMultiDestinoParametroFactuEmpresa);}

			this.isVisibilidadFK_IdTransaccionOrigen=isParaBodegaDestinoNegation;
			if(!this.isVisibilidadFK_IdTransaccionOrigen) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdTransaccionOrigenParametroFactuEmpresa);}
		}
		
	}

	public void setVisibilidadBusquedasParaClienteDestino(Boolean isParaClienteDestino){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaClienteDestinoNegation=!isParaClienteDestino;

			this.isVisibilidadFK_IdBodegaDestino=isParaClienteDestinoNegation;
			if(!this.isVisibilidadFK_IdBodegaDestino) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdBodegaDestinoParametroFactuEmpresa);}

			this.isVisibilidadFK_IdBodegaMultiDestino=isParaClienteDestinoNegation;
			if(!this.isVisibilidadFK_IdBodegaMultiDestino) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdBodegaMultiDestinoParametroFactuEmpresa);}

			this.isVisibilidadFK_IdBodegaMultiOrigen=isParaClienteDestinoNegation;
			if(!this.isVisibilidadFK_IdBodegaMultiOrigen) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdBodegaMultiOrigenParametroFactuEmpresa);}

			this.isVisibilidadFK_IdBodegaOrigen=isParaClienteDestinoNegation;
			if(!this.isVisibilidadFK_IdBodegaOrigen) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdBodegaOrigenParametroFactuEmpresa);}

			this.isVisibilidadFK_IdClienteDestino=isParaClienteDestino;
			if(!this.isVisibilidadFK_IdClienteDestino) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdClienteDestinoParametroFactuEmpresa);}

			this.isVisibilidadFK_IdClienteOrigen=isParaClienteDestinoNegation;
			if(!this.isVisibilidadFK_IdClienteOrigen) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdClienteOrigenParametroFactuEmpresa);}

			this.isVisibilidadFK_IdEmpresaDestino=isParaClienteDestinoNegation;
			if(!this.isVisibilidadFK_IdEmpresaDestino) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdEmpresaDestinoParametroFactuEmpresa);}

			this.isVisibilidadFK_IdEmpresaMultiDestino=isParaClienteDestinoNegation;
			if(!this.isVisibilidadFK_IdEmpresaMultiDestino) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdEmpresaMultiDestinoParametroFactuEmpresa);}

			this.isVisibilidadFK_IdEmpresaOrigen=isParaClienteDestinoNegation;
			if(!this.isVisibilidadFK_IdEmpresaOrigen) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdEmpresaOrigenParametroFactuEmpresa);}

			this.isVisibilidadFK_IdSucursal=isParaClienteDestinoNegation;
			if(!this.isVisibilidadFK_IdSucursal) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdSucursalParametroFactuEmpresa);}

			this.isVisibilidadFK_IdSucursalDestino=isParaClienteDestinoNegation;
			if(!this.isVisibilidadFK_IdSucursalDestino) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdSucursalDestinoParametroFactuEmpresa);}

			this.isVisibilidadFK_IdSucursalMultiDestino=isParaClienteDestinoNegation;
			if(!this.isVisibilidadFK_IdSucursalMultiDestino) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdSucursalMultiDestinoParametroFactuEmpresa);}

			this.isVisibilidadFK_IdTransaccionDestino=isParaClienteDestinoNegation;
			if(!this.isVisibilidadFK_IdTransaccionDestino) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdTransaccionDestinoParametroFactuEmpresa);}

			this.isVisibilidadFK_IdTransaccionMultiDestino=isParaClienteDestinoNegation;
			if(!this.isVisibilidadFK_IdTransaccionMultiDestino) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdTransaccionMultiDestinoParametroFactuEmpresa);}

			this.isVisibilidadFK_IdTransaccionOrigen=isParaClienteDestinoNegation;
			if(!this.isVisibilidadFK_IdTransaccionOrigen) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdTransaccionOrigenParametroFactuEmpresa);}
		}
		
	}

	public void setVisibilidadBusquedasParaEmpresaMultiDestino(Boolean isParaEmpresaMultiDestino){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaEmpresaMultiDestinoNegation=!isParaEmpresaMultiDestino;

			this.isVisibilidadFK_IdBodegaDestino=isParaEmpresaMultiDestinoNegation;
			if(!this.isVisibilidadFK_IdBodegaDestino) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdBodegaDestinoParametroFactuEmpresa);}

			this.isVisibilidadFK_IdBodegaMultiDestino=isParaEmpresaMultiDestinoNegation;
			if(!this.isVisibilidadFK_IdBodegaMultiDestino) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdBodegaMultiDestinoParametroFactuEmpresa);}

			this.isVisibilidadFK_IdBodegaMultiOrigen=isParaEmpresaMultiDestinoNegation;
			if(!this.isVisibilidadFK_IdBodegaMultiOrigen) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdBodegaMultiOrigenParametroFactuEmpresa);}

			this.isVisibilidadFK_IdBodegaOrigen=isParaEmpresaMultiDestinoNegation;
			if(!this.isVisibilidadFK_IdBodegaOrigen) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdBodegaOrigenParametroFactuEmpresa);}

			this.isVisibilidadFK_IdClienteDestino=isParaEmpresaMultiDestinoNegation;
			if(!this.isVisibilidadFK_IdClienteDestino) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdClienteDestinoParametroFactuEmpresa);}

			this.isVisibilidadFK_IdClienteOrigen=isParaEmpresaMultiDestinoNegation;
			if(!this.isVisibilidadFK_IdClienteOrigen) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdClienteOrigenParametroFactuEmpresa);}

			this.isVisibilidadFK_IdEmpresaDestino=isParaEmpresaMultiDestinoNegation;
			if(!this.isVisibilidadFK_IdEmpresaDestino) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdEmpresaDestinoParametroFactuEmpresa);}

			this.isVisibilidadFK_IdEmpresaMultiDestino=isParaEmpresaMultiDestino;
			if(!this.isVisibilidadFK_IdEmpresaMultiDestino) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdEmpresaMultiDestinoParametroFactuEmpresa);}

			this.isVisibilidadFK_IdEmpresaOrigen=isParaEmpresaMultiDestinoNegation;
			if(!this.isVisibilidadFK_IdEmpresaOrigen) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdEmpresaOrigenParametroFactuEmpresa);}

			this.isVisibilidadFK_IdSucursal=isParaEmpresaMultiDestinoNegation;
			if(!this.isVisibilidadFK_IdSucursal) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdSucursalParametroFactuEmpresa);}

			this.isVisibilidadFK_IdSucursalDestino=isParaEmpresaMultiDestinoNegation;
			if(!this.isVisibilidadFK_IdSucursalDestino) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdSucursalDestinoParametroFactuEmpresa);}

			this.isVisibilidadFK_IdSucursalMultiDestino=isParaEmpresaMultiDestinoNegation;
			if(!this.isVisibilidadFK_IdSucursalMultiDestino) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdSucursalMultiDestinoParametroFactuEmpresa);}

			this.isVisibilidadFK_IdTransaccionDestino=isParaEmpresaMultiDestinoNegation;
			if(!this.isVisibilidadFK_IdTransaccionDestino) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdTransaccionDestinoParametroFactuEmpresa);}

			this.isVisibilidadFK_IdTransaccionMultiDestino=isParaEmpresaMultiDestinoNegation;
			if(!this.isVisibilidadFK_IdTransaccionMultiDestino) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdTransaccionMultiDestinoParametroFactuEmpresa);}

			this.isVisibilidadFK_IdTransaccionOrigen=isParaEmpresaMultiDestinoNegation;
			if(!this.isVisibilidadFK_IdTransaccionOrigen) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdTransaccionOrigenParametroFactuEmpresa);}
		}
		
	}

	public void setVisibilidadBusquedasParaSucursalMultiDestino(Boolean isParaSucursalMultiDestino){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaSucursalMultiDestinoNegation=!isParaSucursalMultiDestino;

			this.isVisibilidadFK_IdBodegaDestino=isParaSucursalMultiDestinoNegation;
			if(!this.isVisibilidadFK_IdBodegaDestino) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdBodegaDestinoParametroFactuEmpresa);}

			this.isVisibilidadFK_IdBodegaMultiDestino=isParaSucursalMultiDestinoNegation;
			if(!this.isVisibilidadFK_IdBodegaMultiDestino) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdBodegaMultiDestinoParametroFactuEmpresa);}

			this.isVisibilidadFK_IdBodegaMultiOrigen=isParaSucursalMultiDestinoNegation;
			if(!this.isVisibilidadFK_IdBodegaMultiOrigen) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdBodegaMultiOrigenParametroFactuEmpresa);}

			this.isVisibilidadFK_IdBodegaOrigen=isParaSucursalMultiDestinoNegation;
			if(!this.isVisibilidadFK_IdBodegaOrigen) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdBodegaOrigenParametroFactuEmpresa);}

			this.isVisibilidadFK_IdClienteDestino=isParaSucursalMultiDestinoNegation;
			if(!this.isVisibilidadFK_IdClienteDestino) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdClienteDestinoParametroFactuEmpresa);}

			this.isVisibilidadFK_IdClienteOrigen=isParaSucursalMultiDestinoNegation;
			if(!this.isVisibilidadFK_IdClienteOrigen) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdClienteOrigenParametroFactuEmpresa);}

			this.isVisibilidadFK_IdEmpresaDestino=isParaSucursalMultiDestinoNegation;
			if(!this.isVisibilidadFK_IdEmpresaDestino) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdEmpresaDestinoParametroFactuEmpresa);}

			this.isVisibilidadFK_IdEmpresaMultiDestino=isParaSucursalMultiDestinoNegation;
			if(!this.isVisibilidadFK_IdEmpresaMultiDestino) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdEmpresaMultiDestinoParametroFactuEmpresa);}

			this.isVisibilidadFK_IdEmpresaOrigen=isParaSucursalMultiDestinoNegation;
			if(!this.isVisibilidadFK_IdEmpresaOrigen) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdEmpresaOrigenParametroFactuEmpresa);}

			this.isVisibilidadFK_IdSucursal=isParaSucursalMultiDestinoNegation;
			if(!this.isVisibilidadFK_IdSucursal) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdSucursalParametroFactuEmpresa);}

			this.isVisibilidadFK_IdSucursalDestino=isParaSucursalMultiDestinoNegation;
			if(!this.isVisibilidadFK_IdSucursalDestino) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdSucursalDestinoParametroFactuEmpresa);}

			this.isVisibilidadFK_IdSucursalMultiDestino=isParaSucursalMultiDestino;
			if(!this.isVisibilidadFK_IdSucursalMultiDestino) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdSucursalMultiDestinoParametroFactuEmpresa);}

			this.isVisibilidadFK_IdTransaccionDestino=isParaSucursalMultiDestinoNegation;
			if(!this.isVisibilidadFK_IdTransaccionDestino) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdTransaccionDestinoParametroFactuEmpresa);}

			this.isVisibilidadFK_IdTransaccionMultiDestino=isParaSucursalMultiDestinoNegation;
			if(!this.isVisibilidadFK_IdTransaccionMultiDestino) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdTransaccionMultiDestinoParametroFactuEmpresa);}

			this.isVisibilidadFK_IdTransaccionOrigen=isParaSucursalMultiDestinoNegation;
			if(!this.isVisibilidadFK_IdTransaccionOrigen) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdTransaccionOrigenParametroFactuEmpresa);}
		}
		
	}

	public void setVisibilidadBusquedasParaTransaccionMultiDestino(Boolean isParaTransaccionMultiDestino){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaTransaccionMultiDestinoNegation=!isParaTransaccionMultiDestino;

			this.isVisibilidadFK_IdBodegaDestino=isParaTransaccionMultiDestinoNegation;
			if(!this.isVisibilidadFK_IdBodegaDestino) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdBodegaDestinoParametroFactuEmpresa);}

			this.isVisibilidadFK_IdBodegaMultiDestino=isParaTransaccionMultiDestinoNegation;
			if(!this.isVisibilidadFK_IdBodegaMultiDestino) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdBodegaMultiDestinoParametroFactuEmpresa);}

			this.isVisibilidadFK_IdBodegaMultiOrigen=isParaTransaccionMultiDestinoNegation;
			if(!this.isVisibilidadFK_IdBodegaMultiOrigen) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdBodegaMultiOrigenParametroFactuEmpresa);}

			this.isVisibilidadFK_IdBodegaOrigen=isParaTransaccionMultiDestinoNegation;
			if(!this.isVisibilidadFK_IdBodegaOrigen) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdBodegaOrigenParametroFactuEmpresa);}

			this.isVisibilidadFK_IdClienteDestino=isParaTransaccionMultiDestinoNegation;
			if(!this.isVisibilidadFK_IdClienteDestino) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdClienteDestinoParametroFactuEmpresa);}

			this.isVisibilidadFK_IdClienteOrigen=isParaTransaccionMultiDestinoNegation;
			if(!this.isVisibilidadFK_IdClienteOrigen) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdClienteOrigenParametroFactuEmpresa);}

			this.isVisibilidadFK_IdEmpresaDestino=isParaTransaccionMultiDestinoNegation;
			if(!this.isVisibilidadFK_IdEmpresaDestino) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdEmpresaDestinoParametroFactuEmpresa);}

			this.isVisibilidadFK_IdEmpresaMultiDestino=isParaTransaccionMultiDestinoNegation;
			if(!this.isVisibilidadFK_IdEmpresaMultiDestino) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdEmpresaMultiDestinoParametroFactuEmpresa);}

			this.isVisibilidadFK_IdEmpresaOrigen=isParaTransaccionMultiDestinoNegation;
			if(!this.isVisibilidadFK_IdEmpresaOrigen) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdEmpresaOrigenParametroFactuEmpresa);}

			this.isVisibilidadFK_IdSucursal=isParaTransaccionMultiDestinoNegation;
			if(!this.isVisibilidadFK_IdSucursal) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdSucursalParametroFactuEmpresa);}

			this.isVisibilidadFK_IdSucursalDestino=isParaTransaccionMultiDestinoNegation;
			if(!this.isVisibilidadFK_IdSucursalDestino) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdSucursalDestinoParametroFactuEmpresa);}

			this.isVisibilidadFK_IdSucursalMultiDestino=isParaTransaccionMultiDestinoNegation;
			if(!this.isVisibilidadFK_IdSucursalMultiDestino) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdSucursalMultiDestinoParametroFactuEmpresa);}

			this.isVisibilidadFK_IdTransaccionDestino=isParaTransaccionMultiDestinoNegation;
			if(!this.isVisibilidadFK_IdTransaccionDestino) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdTransaccionDestinoParametroFactuEmpresa);}

			this.isVisibilidadFK_IdTransaccionMultiDestino=isParaTransaccionMultiDestino;
			if(!this.isVisibilidadFK_IdTransaccionMultiDestino) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdTransaccionMultiDestinoParametroFactuEmpresa);}

			this.isVisibilidadFK_IdTransaccionOrigen=isParaTransaccionMultiDestinoNegation;
			if(!this.isVisibilidadFK_IdTransaccionOrigen) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdTransaccionOrigenParametroFactuEmpresa);}
		}
		
	}

	public void setVisibilidadBusquedasParaBodegaMultiOrigen(Boolean isParaBodegaMultiOrigen){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaBodegaMultiOrigenNegation=!isParaBodegaMultiOrigen;

			this.isVisibilidadFK_IdBodegaDestino=isParaBodegaMultiOrigenNegation;
			if(!this.isVisibilidadFK_IdBodegaDestino) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdBodegaDestinoParametroFactuEmpresa);}

			this.isVisibilidadFK_IdBodegaMultiDestino=isParaBodegaMultiOrigenNegation;
			if(!this.isVisibilidadFK_IdBodegaMultiDestino) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdBodegaMultiDestinoParametroFactuEmpresa);}

			this.isVisibilidadFK_IdBodegaMultiOrigen=isParaBodegaMultiOrigen;
			if(!this.isVisibilidadFK_IdBodegaMultiOrigen) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdBodegaMultiOrigenParametroFactuEmpresa);}

			this.isVisibilidadFK_IdBodegaOrigen=isParaBodegaMultiOrigenNegation;
			if(!this.isVisibilidadFK_IdBodegaOrigen) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdBodegaOrigenParametroFactuEmpresa);}

			this.isVisibilidadFK_IdClienteDestino=isParaBodegaMultiOrigenNegation;
			if(!this.isVisibilidadFK_IdClienteDestino) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdClienteDestinoParametroFactuEmpresa);}

			this.isVisibilidadFK_IdClienteOrigen=isParaBodegaMultiOrigenNegation;
			if(!this.isVisibilidadFK_IdClienteOrigen) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdClienteOrigenParametroFactuEmpresa);}

			this.isVisibilidadFK_IdEmpresaDestino=isParaBodegaMultiOrigenNegation;
			if(!this.isVisibilidadFK_IdEmpresaDestino) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdEmpresaDestinoParametroFactuEmpresa);}

			this.isVisibilidadFK_IdEmpresaMultiDestino=isParaBodegaMultiOrigenNegation;
			if(!this.isVisibilidadFK_IdEmpresaMultiDestino) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdEmpresaMultiDestinoParametroFactuEmpresa);}

			this.isVisibilidadFK_IdEmpresaOrigen=isParaBodegaMultiOrigenNegation;
			if(!this.isVisibilidadFK_IdEmpresaOrigen) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdEmpresaOrigenParametroFactuEmpresa);}

			this.isVisibilidadFK_IdSucursal=isParaBodegaMultiOrigenNegation;
			if(!this.isVisibilidadFK_IdSucursal) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdSucursalParametroFactuEmpresa);}

			this.isVisibilidadFK_IdSucursalDestino=isParaBodegaMultiOrigenNegation;
			if(!this.isVisibilidadFK_IdSucursalDestino) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdSucursalDestinoParametroFactuEmpresa);}

			this.isVisibilidadFK_IdSucursalMultiDestino=isParaBodegaMultiOrigenNegation;
			if(!this.isVisibilidadFK_IdSucursalMultiDestino) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdSucursalMultiDestinoParametroFactuEmpresa);}

			this.isVisibilidadFK_IdTransaccionDestino=isParaBodegaMultiOrigenNegation;
			if(!this.isVisibilidadFK_IdTransaccionDestino) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdTransaccionDestinoParametroFactuEmpresa);}

			this.isVisibilidadFK_IdTransaccionMultiDestino=isParaBodegaMultiOrigenNegation;
			if(!this.isVisibilidadFK_IdTransaccionMultiDestino) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdTransaccionMultiDestinoParametroFactuEmpresa);}

			this.isVisibilidadFK_IdTransaccionOrigen=isParaBodegaMultiOrigenNegation;
			if(!this.isVisibilidadFK_IdTransaccionOrigen) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdTransaccionOrigenParametroFactuEmpresa);}
		}
		
	}

	public void setVisibilidadBusquedasParaBodegaMultiDestino(Boolean isParaBodegaMultiDestino){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaBodegaMultiDestinoNegation=!isParaBodegaMultiDestino;

			this.isVisibilidadFK_IdBodegaDestino=isParaBodegaMultiDestinoNegation;
			if(!this.isVisibilidadFK_IdBodegaDestino) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdBodegaDestinoParametroFactuEmpresa);}

			this.isVisibilidadFK_IdBodegaMultiDestino=isParaBodegaMultiDestino;
			if(!this.isVisibilidadFK_IdBodegaMultiDestino) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdBodegaMultiDestinoParametroFactuEmpresa);}

			this.isVisibilidadFK_IdBodegaMultiOrigen=isParaBodegaMultiDestinoNegation;
			if(!this.isVisibilidadFK_IdBodegaMultiOrigen) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdBodegaMultiOrigenParametroFactuEmpresa);}

			this.isVisibilidadFK_IdBodegaOrigen=isParaBodegaMultiDestinoNegation;
			if(!this.isVisibilidadFK_IdBodegaOrigen) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdBodegaOrigenParametroFactuEmpresa);}

			this.isVisibilidadFK_IdClienteDestino=isParaBodegaMultiDestinoNegation;
			if(!this.isVisibilidadFK_IdClienteDestino) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdClienteDestinoParametroFactuEmpresa);}

			this.isVisibilidadFK_IdClienteOrigen=isParaBodegaMultiDestinoNegation;
			if(!this.isVisibilidadFK_IdClienteOrigen) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdClienteOrigenParametroFactuEmpresa);}

			this.isVisibilidadFK_IdEmpresaDestino=isParaBodegaMultiDestinoNegation;
			if(!this.isVisibilidadFK_IdEmpresaDestino) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdEmpresaDestinoParametroFactuEmpresa);}

			this.isVisibilidadFK_IdEmpresaMultiDestino=isParaBodegaMultiDestinoNegation;
			if(!this.isVisibilidadFK_IdEmpresaMultiDestino) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdEmpresaMultiDestinoParametroFactuEmpresa);}

			this.isVisibilidadFK_IdEmpresaOrigen=isParaBodegaMultiDestinoNegation;
			if(!this.isVisibilidadFK_IdEmpresaOrigen) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdEmpresaOrigenParametroFactuEmpresa);}

			this.isVisibilidadFK_IdSucursal=isParaBodegaMultiDestinoNegation;
			if(!this.isVisibilidadFK_IdSucursal) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdSucursalParametroFactuEmpresa);}

			this.isVisibilidadFK_IdSucursalDestino=isParaBodegaMultiDestinoNegation;
			if(!this.isVisibilidadFK_IdSucursalDestino) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdSucursalDestinoParametroFactuEmpresa);}

			this.isVisibilidadFK_IdSucursalMultiDestino=isParaBodegaMultiDestinoNegation;
			if(!this.isVisibilidadFK_IdSucursalMultiDestino) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdSucursalMultiDestinoParametroFactuEmpresa);}

			this.isVisibilidadFK_IdTransaccionDestino=isParaBodegaMultiDestinoNegation;
			if(!this.isVisibilidadFK_IdTransaccionDestino) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdTransaccionDestinoParametroFactuEmpresa);}

			this.isVisibilidadFK_IdTransaccionMultiDestino=isParaBodegaMultiDestinoNegation;
			if(!this.isVisibilidadFK_IdTransaccionMultiDestino) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdTransaccionMultiDestinoParametroFactuEmpresa);}

			this.isVisibilidadFK_IdTransaccionOrigen=isParaBodegaMultiDestinoNegation;
			if(!this.isVisibilidadFK_IdTransaccionOrigen) {this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(jPanelFK_IdTransaccionOrigenParametroFactuEmpresa);}
		}
		
	}
	
	
	
	

	public String registrarSesionParametroFactuEmpresaParaBusquedaClienteOrigens() throws Exception {
		Boolean isPaginaPopupCliente=false;

		try {

			if(parametrofactuempresaSessionBean==null) {
				parametrofactuempresaSessionBean=new ParametroFactuEmpresaSessionBean();
			}

			if(clienteorigenSessionBean==null) {
				clienteorigenSessionBean=new ClienteSessionBean();
			}

			clienteorigenSessionBean.setsPathNavegacionActual(parametrofactuempresaSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+ClienteConstantesFunciones.SCLASSWEBTITULO);
			clienteorigenSessionBean.setisPermiteRecargarInformacion(false);
			clienteorigenSessionBean.setisPaginaPopup(true);
			isPaginaPopupCliente=clienteorigenSessionBean.getisPaginaPopup();
			clienteorigenSessionBean.setisPaginaPopup(false);
			clienteorigenSessionBean.setEstaModoBusqueda(true);
			clienteorigenSessionBean.setsFuncionBusquedaRapida("window.opener.parametrofactuempresaFuncionGeneral.setCombosCodigoDesdeBusquedaid_cliente_origen(TO_REPLACE);");
			clienteorigenSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeCliente(true);
			clienteorigenSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeCliente(ParametroFactuEmpresaConstantesFunciones.SNOMBREOPCION);
			//clienteSessionBean.setisBusquedaDesdeForeignKeySesionParametroFactuEmpresa(true);
			//clienteSessionBean.setlidParametroFactuEmpresaActual(this.idParametroFactuEmpresaActual);

			parametrofactuempresaSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyParametroFactuEmpresa(true);
			parametrofactuempresaSessionBean.setlIdParametroFactuEmpresaActualForeignKey(this.idParametroFactuEmpresaActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
			return "";
	}

	public String registrarSesionParametroFactuEmpresaParaBusquedaClienteDestinos() throws Exception {
		Boolean isPaginaPopupCliente=false;

		try {

			if(parametrofactuempresaSessionBean==null) {
				parametrofactuempresaSessionBean=new ParametroFactuEmpresaSessionBean();
			}

			if(clientedestinoSessionBean==null) {
				clientedestinoSessionBean=new ClienteSessionBean();
			}

			clientedestinoSessionBean.setsPathNavegacionActual(parametrofactuempresaSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+ClienteConstantesFunciones.SCLASSWEBTITULO);
			clientedestinoSessionBean.setisPermiteRecargarInformacion(false);
			clientedestinoSessionBean.setisPaginaPopup(true);
			isPaginaPopupCliente=clientedestinoSessionBean.getisPaginaPopup();
			clientedestinoSessionBean.setisPaginaPopup(false);
			clientedestinoSessionBean.setEstaModoBusqueda(true);
			clientedestinoSessionBean.setsFuncionBusquedaRapida("window.opener.parametrofactuempresaFuncionGeneral.setCombosCodigoDesdeBusquedaid_cliente_destino(TO_REPLACE);");
			clientedestinoSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeCliente(true);
			clientedestinoSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeCliente(ParametroFactuEmpresaConstantesFunciones.SNOMBREOPCION);
			//clienteSessionBean.setisBusquedaDesdeForeignKeySesionParametroFactuEmpresa(true);
			//clienteSessionBean.setlidParametroFactuEmpresaActual(this.idParametroFactuEmpresaActual);

			parametrofactuempresaSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyParametroFactuEmpresa(true);
			parametrofactuempresaSessionBean.setlIdParametroFactuEmpresaActualForeignKey(this.idParametroFactuEmpresaActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
			return "";
	}
	
	
	public void guardarDatosBusquedaSession() throws Exception {
		
		//ParametroFactuEmpresaSessionBean parametrofactuempresaSessionBean=new ParametroFactuEmpresaSessionBean();
		
		if(this.parametrofactuempresaSessionBean==null) {
			this.parametrofactuempresaSessionBean=new ParametroFactuEmpresaSessionBean();
		}
		
		this.parametrofactuempresaSessionBean.setsUltimaBusquedaParametroFactuEmpresa(this.getsAccionBusqueda());
		this.parametrofactuempresaSessionBean.setiNumeroPaginacion(this.getiNumeroPaginacion());
		this.parametrofactuempresaSessionBean.setiNumeroPaginacionPagina(this.getiNumeroPaginacionPagina());
		
		if(this.getsAccionBusqueda().equals("Todos")) {
			;
		}
		

		else if(this.getsAccionBusqueda().equals("FK_IdBodegaDestino")) {
			parametrofactuempresaSessionBean.setid_bodega_destino(this.getid_bodega_destinoFK_IdBodegaDestino());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdBodegaMultiDestino")) {
			parametrofactuempresaSessionBean.setid_bodega_multi_destino(this.getid_bodega_multi_destinoFK_IdBodegaMultiDestino());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdBodegaMultiOrigen")) {
			parametrofactuempresaSessionBean.setid_bodega_multi_origen(this.getid_bodega_multi_origenFK_IdBodegaMultiOrigen());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdBodegaOrigen")) {
			parametrofactuempresaSessionBean.setid_bodega_origen(this.getid_bodega_origenFK_IdBodegaOrigen());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdClienteDestino")) {
			parametrofactuempresaSessionBean.setid_cliente_destino(this.getid_cliente_destinoFK_IdClienteDestino());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdClienteOrigen")) {
			parametrofactuempresaSessionBean.setid_cliente_origen(this.getid_cliente_origenFK_IdClienteOrigen());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdEmpresa")) {
			parametrofactuempresaSessionBean.setid_empresa(this.getid_empresaFK_IdEmpresa());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdEmpresaDestino")) {
			parametrofactuempresaSessionBean.setid_empresa_destino(this.getid_empresa_destinoFK_IdEmpresaDestino());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdEmpresaMultiDestino")) {
			parametrofactuempresaSessionBean.setid_empresa_multi_destino(this.getid_empresa_multi_destinoFK_IdEmpresaMultiDestino());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdEmpresaOrigen")) {
			parametrofactuempresaSessionBean.setid_empresa_origen(this.getid_empresa_origenFK_IdEmpresaOrigen());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdSucursal")) {
			parametrofactuempresaSessionBean.setid_sucursal(this.getid_sucursalFK_IdSucursal());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdSucursalDestino")) {
			parametrofactuempresaSessionBean.setid_sucursal_destino(this.getid_sucursal_destinoFK_IdSucursalDestino());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdSucursalMultiDestino")) {
			parametrofactuempresaSessionBean.setid_sucursal_multi_destino(this.getid_sucursal_multi_destinoFK_IdSucursalMultiDestino());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdTransaccionDestino")) {
			parametrofactuempresaSessionBean.setid_transaccion_destino(this.getid_transaccion_destinoFK_IdTransaccionDestino());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdTransaccionMultiDestino")) {
			parametrofactuempresaSessionBean.setid_transaccion_multi_destino(this.getid_transaccion_multi_destinoFK_IdTransaccionMultiDestino());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdTransaccionOrigen")) {
			parametrofactuempresaSessionBean.setid_transaccion_origen(this.getid_transaccion_origenFK_IdTransaccionOrigen());	
		}
		
	}
	
	public void traerDatosBusquedaDesdeSession() throws Exception {
		//ParametroFactuEmpresaSessionBean parametrofactuempresaSessionBean=new ParametroFactuEmpresaSessionBean();
		
		if(this.parametrofactuempresaSessionBean==null) {
			this.parametrofactuempresaSessionBean=new ParametroFactuEmpresaSessionBean();
		}
		
		if(this.parametrofactuempresaSessionBean.getsUltimaBusquedaParametroFactuEmpresa()!=null&&!this.parametrofactuempresaSessionBean.getsUltimaBusquedaParametroFactuEmpresa().equals("")) {
			this.setsAccionBusqueda(parametrofactuempresaSessionBean.getsUltimaBusquedaParametroFactuEmpresa());
			this.setiNumeroPaginacion(parametrofactuempresaSessionBean.getiNumeroPaginacion());
			this.setiNumeroPaginacionPagina(parametrofactuempresaSessionBean.getiNumeroPaginacionPagina());		
				
			if(this.getsAccionBusqueda().equals("Todos")) {
				;
			}
			

			 else if(this.getsAccionBusqueda().equals("FK_IdBodegaDestino")) {
				this.setid_bodega_destinoFK_IdBodegaDestino(parametrofactuempresaSessionBean.getid_bodega_destino());
				parametrofactuempresaSessionBean.setid_bodega_destino(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdBodegaMultiDestino")) {
				this.setid_bodega_multi_destinoFK_IdBodegaMultiDestino(parametrofactuempresaSessionBean.getid_bodega_multi_destino());
				parametrofactuempresaSessionBean.setid_bodega_multi_destino(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdBodegaMultiOrigen")) {
				this.setid_bodega_multi_origenFK_IdBodegaMultiOrigen(parametrofactuempresaSessionBean.getid_bodega_multi_origen());
				parametrofactuempresaSessionBean.setid_bodega_multi_origen(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdBodegaOrigen")) {
				this.setid_bodega_origenFK_IdBodegaOrigen(parametrofactuempresaSessionBean.getid_bodega_origen());
				parametrofactuempresaSessionBean.setid_bodega_origen(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdClienteDestino")) {
				this.setid_cliente_destinoFK_IdClienteDestino(parametrofactuempresaSessionBean.getid_cliente_destino());
				parametrofactuempresaSessionBean.setid_cliente_destino(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdClienteOrigen")) {
				this.setid_cliente_origenFK_IdClienteOrigen(parametrofactuempresaSessionBean.getid_cliente_origen());
				parametrofactuempresaSessionBean.setid_cliente_origen(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdEmpresa")) {
				this.setid_empresaFK_IdEmpresa(parametrofactuempresaSessionBean.getid_empresa());
				parametrofactuempresaSessionBean.setid_empresa(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdEmpresaDestino")) {
				this.setid_empresa_destinoFK_IdEmpresaDestino(parametrofactuempresaSessionBean.getid_empresa_destino());
				parametrofactuempresaSessionBean.setid_empresa_destino(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdEmpresaMultiDestino")) {
				this.setid_empresa_multi_destinoFK_IdEmpresaMultiDestino(parametrofactuempresaSessionBean.getid_empresa_multi_destino());
				parametrofactuempresaSessionBean.setid_empresa_multi_destino(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdEmpresaOrigen")) {
				this.setid_empresa_origenFK_IdEmpresaOrigen(parametrofactuempresaSessionBean.getid_empresa_origen());
				parametrofactuempresaSessionBean.setid_empresa_origen(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdSucursal")) {
				this.setid_sucursalFK_IdSucursal(parametrofactuempresaSessionBean.getid_sucursal());
				parametrofactuempresaSessionBean.setid_sucursal(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdSucursalDestino")) {
				this.setid_sucursal_destinoFK_IdSucursalDestino(parametrofactuempresaSessionBean.getid_sucursal_destino());
				parametrofactuempresaSessionBean.setid_sucursal_destino(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdSucursalMultiDestino")) {
				this.setid_sucursal_multi_destinoFK_IdSucursalMultiDestino(parametrofactuempresaSessionBean.getid_sucursal_multi_destino());
				parametrofactuempresaSessionBean.setid_sucursal_multi_destino(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdTransaccionDestino")) {
				this.setid_transaccion_destinoFK_IdTransaccionDestino(parametrofactuempresaSessionBean.getid_transaccion_destino());
				parametrofactuempresaSessionBean.setid_transaccion_destino(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdTransaccionMultiDestino")) {
				this.setid_transaccion_multi_destinoFK_IdTransaccionMultiDestino(parametrofactuempresaSessionBean.getid_transaccion_multi_destino());
				parametrofactuempresaSessionBean.setid_transaccion_multi_destino(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdTransaccionOrigen")) {
				this.setid_transaccion_origenFK_IdTransaccionOrigen(parametrofactuempresaSessionBean.getid_transaccion_origen());
				parametrofactuempresaSessionBean.setid_transaccion_origen(-1L);
			}
		}
		
		this.parametrofactuempresaSessionBean.setsUltimaBusquedaParametroFactuEmpresa("");
		this.parametrofactuempresaSessionBean.setiNumeroPaginacion(ParametroFactuEmpresaConstantesFunciones.INUMEROPAGINACION);
		this.parametrofactuempresaSessionBean.setiNumeroPaginacionPagina(0);
		
	}
	
	public void procesoActualizarFilaTotales(Boolean esCampoValor,String sTipo) {
		try {
			this.actualizarFilaTotales();
				
			this.traerValoresTablaTotales();
			
			this.inicializarActualizarBindingTablaParametroFactuEmpresa(false);
			
			
			
			
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	
	
	public void updateBusquedasFormularioParametroFactuEmpresa() {
		this.updateBorderResaltarBusquedasFormularioParametroFactuEmpresa();
		this.updateVisibilidadBusquedasFormularioParametroFactuEmpresa();
		this.updateHabilitarBusquedasFormularioParametroFactuEmpresa();
	}
	
	public void updateBorderResaltarBusquedasFormularioParametroFactuEmpresa() {					
	//BYDAN_BUSQUEDAS
		
	int index=0;
		
	if(this.jTabbedPaneBusquedasParametroFactuEmpresa.getComponents().length>0) {
	

		if(this.parametrofactuempresaConstantesFunciones.resaltarFK_IdBodegaDestinoParametroFactuEmpresa!=null) {
			index= this.jTabbedPaneBusquedasParametroFactuEmpresa.indexOfComponent(this.jPanelFK_IdBodegaDestinoParametroFactuEmpresa);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuEmpresa.getComponent(index);
				jPanel.setBorder(this.parametrofactuempresaConstantesFunciones.resaltarFK_IdBodegaDestinoParametroFactuEmpresa);
			}
		}

		if(this.parametrofactuempresaConstantesFunciones.resaltarFK_IdBodegaMultiDestinoParametroFactuEmpresa!=null) {
			index= this.jTabbedPaneBusquedasParametroFactuEmpresa.indexOfComponent(this.jPanelFK_IdBodegaMultiDestinoParametroFactuEmpresa);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuEmpresa.getComponent(index);
				jPanel.setBorder(this.parametrofactuempresaConstantesFunciones.resaltarFK_IdBodegaMultiDestinoParametroFactuEmpresa);
			}
		}

		if(this.parametrofactuempresaConstantesFunciones.resaltarFK_IdBodegaMultiOrigenParametroFactuEmpresa!=null) {
			index= this.jTabbedPaneBusquedasParametroFactuEmpresa.indexOfComponent(this.jPanelFK_IdBodegaMultiOrigenParametroFactuEmpresa);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuEmpresa.getComponent(index);
				jPanel.setBorder(this.parametrofactuempresaConstantesFunciones.resaltarFK_IdBodegaMultiOrigenParametroFactuEmpresa);
			}
		}

		if(this.parametrofactuempresaConstantesFunciones.resaltarFK_IdBodegaOrigenParametroFactuEmpresa!=null) {
			index= this.jTabbedPaneBusquedasParametroFactuEmpresa.indexOfComponent(this.jPanelFK_IdBodegaOrigenParametroFactuEmpresa);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuEmpresa.getComponent(index);
				jPanel.setBorder(this.parametrofactuempresaConstantesFunciones.resaltarFK_IdBodegaOrigenParametroFactuEmpresa);
			}
		}

		if(this.parametrofactuempresaConstantesFunciones.resaltarFK_IdClienteDestinoParametroFactuEmpresa!=null) {
			index= this.jTabbedPaneBusquedasParametroFactuEmpresa.indexOfComponent(this.jPanelFK_IdClienteDestinoParametroFactuEmpresa);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuEmpresa.getComponent(index);
				jPanel.setBorder(this.parametrofactuempresaConstantesFunciones.resaltarFK_IdClienteDestinoParametroFactuEmpresa);
			}
		}

		if(this.parametrofactuempresaConstantesFunciones.resaltarFK_IdClienteOrigenParametroFactuEmpresa!=null) {
			index= this.jTabbedPaneBusquedasParametroFactuEmpresa.indexOfComponent(this.jPanelFK_IdClienteOrigenParametroFactuEmpresa);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuEmpresa.getComponent(index);
				jPanel.setBorder(this.parametrofactuempresaConstantesFunciones.resaltarFK_IdClienteOrigenParametroFactuEmpresa);
			}
		}

		if(this.parametrofactuempresaConstantesFunciones.resaltarFK_IdEmpresaDestinoParametroFactuEmpresa!=null) {
			index= this.jTabbedPaneBusquedasParametroFactuEmpresa.indexOfComponent(this.jPanelFK_IdEmpresaDestinoParametroFactuEmpresa);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuEmpresa.getComponent(index);
				jPanel.setBorder(this.parametrofactuempresaConstantesFunciones.resaltarFK_IdEmpresaDestinoParametroFactuEmpresa);
			}
		}

		if(this.parametrofactuempresaConstantesFunciones.resaltarFK_IdEmpresaMultiDestinoParametroFactuEmpresa!=null) {
			index= this.jTabbedPaneBusquedasParametroFactuEmpresa.indexOfComponent(this.jPanelFK_IdEmpresaMultiDestinoParametroFactuEmpresa);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuEmpresa.getComponent(index);
				jPanel.setBorder(this.parametrofactuempresaConstantesFunciones.resaltarFK_IdEmpresaMultiDestinoParametroFactuEmpresa);
			}
		}

		if(this.parametrofactuempresaConstantesFunciones.resaltarFK_IdEmpresaOrigenParametroFactuEmpresa!=null) {
			index= this.jTabbedPaneBusquedasParametroFactuEmpresa.indexOfComponent(this.jPanelFK_IdEmpresaOrigenParametroFactuEmpresa);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuEmpresa.getComponent(index);
				jPanel.setBorder(this.parametrofactuempresaConstantesFunciones.resaltarFK_IdEmpresaOrigenParametroFactuEmpresa);
			}
		}

		if(this.parametrofactuempresaConstantesFunciones.resaltarFK_IdSucursalParametroFactuEmpresa!=null) {
			index= this.jTabbedPaneBusquedasParametroFactuEmpresa.indexOfComponent(this.jPanelFK_IdSucursalParametroFactuEmpresa);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuEmpresa.getComponent(index);
				jPanel.setBorder(this.parametrofactuempresaConstantesFunciones.resaltarFK_IdSucursalParametroFactuEmpresa);
			}
		}

		if(this.parametrofactuempresaConstantesFunciones.resaltarFK_IdSucursalDestinoParametroFactuEmpresa!=null) {
			index= this.jTabbedPaneBusquedasParametroFactuEmpresa.indexOfComponent(this.jPanelFK_IdSucursalDestinoParametroFactuEmpresa);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuEmpresa.getComponent(index);
				jPanel.setBorder(this.parametrofactuempresaConstantesFunciones.resaltarFK_IdSucursalDestinoParametroFactuEmpresa);
			}
		}

		if(this.parametrofactuempresaConstantesFunciones.resaltarFK_IdSucursalMultiDestinoParametroFactuEmpresa!=null) {
			index= this.jTabbedPaneBusquedasParametroFactuEmpresa.indexOfComponent(this.jPanelFK_IdSucursalMultiDestinoParametroFactuEmpresa);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuEmpresa.getComponent(index);
				jPanel.setBorder(this.parametrofactuempresaConstantesFunciones.resaltarFK_IdSucursalMultiDestinoParametroFactuEmpresa);
			}
		}

		if(this.parametrofactuempresaConstantesFunciones.resaltarFK_IdTransaccionDestinoParametroFactuEmpresa!=null) {
			index= this.jTabbedPaneBusquedasParametroFactuEmpresa.indexOfComponent(this.jPanelFK_IdTransaccionDestinoParametroFactuEmpresa);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuEmpresa.getComponent(index);
				jPanel.setBorder(this.parametrofactuempresaConstantesFunciones.resaltarFK_IdTransaccionDestinoParametroFactuEmpresa);
			}
		}

		if(this.parametrofactuempresaConstantesFunciones.resaltarFK_IdTransaccionMultiDestinoParametroFactuEmpresa!=null) {
			index= this.jTabbedPaneBusquedasParametroFactuEmpresa.indexOfComponent(this.jPanelFK_IdTransaccionMultiDestinoParametroFactuEmpresa);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuEmpresa.getComponent(index);
				jPanel.setBorder(this.parametrofactuempresaConstantesFunciones.resaltarFK_IdTransaccionMultiDestinoParametroFactuEmpresa);
			}
		}

		if(this.parametrofactuempresaConstantesFunciones.resaltarFK_IdTransaccionOrigenParametroFactuEmpresa!=null) {
			index= this.jTabbedPaneBusquedasParametroFactuEmpresa.indexOfComponent(this.jPanelFK_IdTransaccionOrigenParametroFactuEmpresa);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuEmpresa.getComponent(index);
				jPanel.setBorder(this.parametrofactuempresaConstantesFunciones.resaltarFK_IdTransaccionOrigenParametroFactuEmpresa);
			}
		}
	}	
	
	}
	
	public void updateVisibilidadBusquedasFormularioParametroFactuEmpresa() {
	//BYDAN_BUSQUEDAS
	
	int index=0;
	JPanel jPanel=null;
		
	if(this.jTabbedPaneBusquedasParametroFactuEmpresa.getComponents().length>0) {
	

			index= this.jTabbedPaneBusquedasParametroFactuEmpresa.indexOfComponent(this.jPanelFK_IdBodegaDestinoParametroFactuEmpresa);
			jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuEmpresa.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.parametrofactuempresaConstantesFunciones.mostrarFK_IdBodegaDestinoParametroFactuEmpresa);
			if(!this.parametrofactuempresaConstantesFunciones.mostrarFK_IdBodegaDestinoParametroFactuEmpresa && index>-1) {
				this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(index);
			}

			index= this.jTabbedPaneBusquedasParametroFactuEmpresa.indexOfComponent(this.jPanelFK_IdBodegaMultiDestinoParametroFactuEmpresa);
			jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuEmpresa.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.parametrofactuempresaConstantesFunciones.mostrarFK_IdBodegaMultiDestinoParametroFactuEmpresa);
			if(!this.parametrofactuempresaConstantesFunciones.mostrarFK_IdBodegaMultiDestinoParametroFactuEmpresa && index>-1) {
				this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(index);
			}

			index= this.jTabbedPaneBusquedasParametroFactuEmpresa.indexOfComponent(this.jPanelFK_IdBodegaMultiOrigenParametroFactuEmpresa);
			jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuEmpresa.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.parametrofactuempresaConstantesFunciones.mostrarFK_IdBodegaMultiOrigenParametroFactuEmpresa);
			if(!this.parametrofactuempresaConstantesFunciones.mostrarFK_IdBodegaMultiOrigenParametroFactuEmpresa && index>-1) {
				this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(index);
			}

			index= this.jTabbedPaneBusquedasParametroFactuEmpresa.indexOfComponent(this.jPanelFK_IdBodegaOrigenParametroFactuEmpresa);
			jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuEmpresa.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.parametrofactuempresaConstantesFunciones.mostrarFK_IdBodegaOrigenParametroFactuEmpresa);
			if(!this.parametrofactuempresaConstantesFunciones.mostrarFK_IdBodegaOrigenParametroFactuEmpresa && index>-1) {
				this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(index);
			}

			index= this.jTabbedPaneBusquedasParametroFactuEmpresa.indexOfComponent(this.jPanelFK_IdClienteDestinoParametroFactuEmpresa);
			jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuEmpresa.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.parametrofactuempresaConstantesFunciones.mostrarFK_IdClienteDestinoParametroFactuEmpresa);
			if(!this.parametrofactuempresaConstantesFunciones.mostrarFK_IdClienteDestinoParametroFactuEmpresa && index>-1) {
				this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(index);
			}

			index= this.jTabbedPaneBusquedasParametroFactuEmpresa.indexOfComponent(this.jPanelFK_IdClienteOrigenParametroFactuEmpresa);
			jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuEmpresa.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.parametrofactuempresaConstantesFunciones.mostrarFK_IdClienteOrigenParametroFactuEmpresa);
			if(!this.parametrofactuempresaConstantesFunciones.mostrarFK_IdClienteOrigenParametroFactuEmpresa && index>-1) {
				this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(index);
			}

			index= this.jTabbedPaneBusquedasParametroFactuEmpresa.indexOfComponent(this.jPanelFK_IdEmpresaDestinoParametroFactuEmpresa);
			jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuEmpresa.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.parametrofactuempresaConstantesFunciones.mostrarFK_IdEmpresaDestinoParametroFactuEmpresa);
			if(!this.parametrofactuempresaConstantesFunciones.mostrarFK_IdEmpresaDestinoParametroFactuEmpresa && index>-1) {
				this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(index);
			}

			index= this.jTabbedPaneBusquedasParametroFactuEmpresa.indexOfComponent(this.jPanelFK_IdEmpresaMultiDestinoParametroFactuEmpresa);
			jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuEmpresa.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.parametrofactuempresaConstantesFunciones.mostrarFK_IdEmpresaMultiDestinoParametroFactuEmpresa);
			if(!this.parametrofactuempresaConstantesFunciones.mostrarFK_IdEmpresaMultiDestinoParametroFactuEmpresa && index>-1) {
				this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(index);
			}

			index= this.jTabbedPaneBusquedasParametroFactuEmpresa.indexOfComponent(this.jPanelFK_IdEmpresaOrigenParametroFactuEmpresa);
			jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuEmpresa.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.parametrofactuempresaConstantesFunciones.mostrarFK_IdEmpresaOrigenParametroFactuEmpresa);
			if(!this.parametrofactuempresaConstantesFunciones.mostrarFK_IdEmpresaOrigenParametroFactuEmpresa && index>-1) {
				this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(index);
			}

			index= this.jTabbedPaneBusquedasParametroFactuEmpresa.indexOfComponent(this.jPanelFK_IdSucursalParametroFactuEmpresa);
			jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuEmpresa.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.parametrofactuempresaConstantesFunciones.mostrarFK_IdSucursalParametroFactuEmpresa);
			if(!this.parametrofactuempresaConstantesFunciones.mostrarFK_IdSucursalParametroFactuEmpresa && index>-1) {
				this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(index);
			}

			index= this.jTabbedPaneBusquedasParametroFactuEmpresa.indexOfComponent(this.jPanelFK_IdSucursalDestinoParametroFactuEmpresa);
			jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuEmpresa.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.parametrofactuempresaConstantesFunciones.mostrarFK_IdSucursalDestinoParametroFactuEmpresa);
			if(!this.parametrofactuempresaConstantesFunciones.mostrarFK_IdSucursalDestinoParametroFactuEmpresa && index>-1) {
				this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(index);
			}

			index= this.jTabbedPaneBusquedasParametroFactuEmpresa.indexOfComponent(this.jPanelFK_IdSucursalMultiDestinoParametroFactuEmpresa);
			jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuEmpresa.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.parametrofactuempresaConstantesFunciones.mostrarFK_IdSucursalMultiDestinoParametroFactuEmpresa);
			if(!this.parametrofactuempresaConstantesFunciones.mostrarFK_IdSucursalMultiDestinoParametroFactuEmpresa && index>-1) {
				this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(index);
			}

			index= this.jTabbedPaneBusquedasParametroFactuEmpresa.indexOfComponent(this.jPanelFK_IdTransaccionDestinoParametroFactuEmpresa);
			jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuEmpresa.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.parametrofactuempresaConstantesFunciones.mostrarFK_IdTransaccionDestinoParametroFactuEmpresa);
			if(!this.parametrofactuempresaConstantesFunciones.mostrarFK_IdTransaccionDestinoParametroFactuEmpresa && index>-1) {
				this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(index);
			}

			index= this.jTabbedPaneBusquedasParametroFactuEmpresa.indexOfComponent(this.jPanelFK_IdTransaccionMultiDestinoParametroFactuEmpresa);
			jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuEmpresa.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.parametrofactuempresaConstantesFunciones.mostrarFK_IdTransaccionMultiDestinoParametroFactuEmpresa);
			if(!this.parametrofactuempresaConstantesFunciones.mostrarFK_IdTransaccionMultiDestinoParametroFactuEmpresa && index>-1) {
				this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(index);
			}

			index= this.jTabbedPaneBusquedasParametroFactuEmpresa.indexOfComponent(this.jPanelFK_IdTransaccionOrigenParametroFactuEmpresa);
			jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuEmpresa.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.parametrofactuempresaConstantesFunciones.mostrarFK_IdTransaccionOrigenParametroFactuEmpresa);
			if(!this.parametrofactuempresaConstantesFunciones.mostrarFK_IdTransaccionOrigenParametroFactuEmpresa && index>-1) {
				this.jTabbedPaneBusquedasParametroFactuEmpresa.remove(index);
			}
	}	
	
	}
	
	public void updateHabilitarBusquedasFormularioParametroFactuEmpresa() {
	
	//BYDAN_BUSQUEDAS		
		int index=0;
		JPanel jPanel=null;
			
		if(this.jTabbedPaneBusquedasParametroFactuEmpresa.getComponents().length>0) {
	

			index= this.jTabbedPaneBusquedasParametroFactuEmpresa.indexOfComponent(this.jPanelFK_IdBodegaDestinoParametroFactuEmpresa);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuEmpresa.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.parametrofactuempresaConstantesFunciones.activarFK_IdBodegaDestinoParametroFactuEmpresa);
				this.jTabbedPaneBusquedasParametroFactuEmpresa.setEnabledAt(index,this.parametrofactuempresaConstantesFunciones.activarFK_IdBodegaDestinoParametroFactuEmpresa);
			}

			index= this.jTabbedPaneBusquedasParametroFactuEmpresa.indexOfComponent(this.jPanelFK_IdBodegaMultiDestinoParametroFactuEmpresa);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuEmpresa.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.parametrofactuempresaConstantesFunciones.activarFK_IdBodegaMultiDestinoParametroFactuEmpresa);
				this.jTabbedPaneBusquedasParametroFactuEmpresa.setEnabledAt(index,this.parametrofactuempresaConstantesFunciones.activarFK_IdBodegaMultiDestinoParametroFactuEmpresa);
			}

			index= this.jTabbedPaneBusquedasParametroFactuEmpresa.indexOfComponent(this.jPanelFK_IdBodegaMultiOrigenParametroFactuEmpresa);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuEmpresa.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.parametrofactuempresaConstantesFunciones.activarFK_IdBodegaMultiOrigenParametroFactuEmpresa);
				this.jTabbedPaneBusquedasParametroFactuEmpresa.setEnabledAt(index,this.parametrofactuempresaConstantesFunciones.activarFK_IdBodegaMultiOrigenParametroFactuEmpresa);
			}

			index= this.jTabbedPaneBusquedasParametroFactuEmpresa.indexOfComponent(this.jPanelFK_IdBodegaOrigenParametroFactuEmpresa);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuEmpresa.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.parametrofactuempresaConstantesFunciones.activarFK_IdBodegaOrigenParametroFactuEmpresa);
				this.jTabbedPaneBusquedasParametroFactuEmpresa.setEnabledAt(index,this.parametrofactuempresaConstantesFunciones.activarFK_IdBodegaOrigenParametroFactuEmpresa);
			}

			index= this.jTabbedPaneBusquedasParametroFactuEmpresa.indexOfComponent(this.jPanelFK_IdClienteDestinoParametroFactuEmpresa);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuEmpresa.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.parametrofactuempresaConstantesFunciones.activarFK_IdClienteDestinoParametroFactuEmpresa);
				this.jTabbedPaneBusquedasParametroFactuEmpresa.setEnabledAt(index,this.parametrofactuempresaConstantesFunciones.activarFK_IdClienteDestinoParametroFactuEmpresa);
			}

			index= this.jTabbedPaneBusquedasParametroFactuEmpresa.indexOfComponent(this.jPanelFK_IdClienteOrigenParametroFactuEmpresa);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuEmpresa.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.parametrofactuempresaConstantesFunciones.activarFK_IdClienteOrigenParametroFactuEmpresa);
				this.jTabbedPaneBusquedasParametroFactuEmpresa.setEnabledAt(index,this.parametrofactuempresaConstantesFunciones.activarFK_IdClienteOrigenParametroFactuEmpresa);
			}

			index= this.jTabbedPaneBusquedasParametroFactuEmpresa.indexOfComponent(this.jPanelFK_IdEmpresaDestinoParametroFactuEmpresa);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuEmpresa.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.parametrofactuempresaConstantesFunciones.activarFK_IdEmpresaDestinoParametroFactuEmpresa);
				this.jTabbedPaneBusquedasParametroFactuEmpresa.setEnabledAt(index,this.parametrofactuempresaConstantesFunciones.activarFK_IdEmpresaDestinoParametroFactuEmpresa);
			}

			index= this.jTabbedPaneBusquedasParametroFactuEmpresa.indexOfComponent(this.jPanelFK_IdEmpresaMultiDestinoParametroFactuEmpresa);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuEmpresa.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.parametrofactuempresaConstantesFunciones.activarFK_IdEmpresaMultiDestinoParametroFactuEmpresa);
				this.jTabbedPaneBusquedasParametroFactuEmpresa.setEnabledAt(index,this.parametrofactuempresaConstantesFunciones.activarFK_IdEmpresaMultiDestinoParametroFactuEmpresa);
			}

			index= this.jTabbedPaneBusquedasParametroFactuEmpresa.indexOfComponent(this.jPanelFK_IdEmpresaOrigenParametroFactuEmpresa);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuEmpresa.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.parametrofactuempresaConstantesFunciones.activarFK_IdEmpresaOrigenParametroFactuEmpresa);
				this.jTabbedPaneBusquedasParametroFactuEmpresa.setEnabledAt(index,this.parametrofactuempresaConstantesFunciones.activarFK_IdEmpresaOrigenParametroFactuEmpresa);
			}

			index= this.jTabbedPaneBusquedasParametroFactuEmpresa.indexOfComponent(this.jPanelFK_IdSucursalParametroFactuEmpresa);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuEmpresa.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.parametrofactuempresaConstantesFunciones.activarFK_IdSucursalParametroFactuEmpresa);
				this.jTabbedPaneBusquedasParametroFactuEmpresa.setEnabledAt(index,this.parametrofactuempresaConstantesFunciones.activarFK_IdSucursalParametroFactuEmpresa);
			}

			index= this.jTabbedPaneBusquedasParametroFactuEmpresa.indexOfComponent(this.jPanelFK_IdSucursalDestinoParametroFactuEmpresa);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuEmpresa.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.parametrofactuempresaConstantesFunciones.activarFK_IdSucursalDestinoParametroFactuEmpresa);
				this.jTabbedPaneBusquedasParametroFactuEmpresa.setEnabledAt(index,this.parametrofactuempresaConstantesFunciones.activarFK_IdSucursalDestinoParametroFactuEmpresa);
			}

			index= this.jTabbedPaneBusquedasParametroFactuEmpresa.indexOfComponent(this.jPanelFK_IdSucursalMultiDestinoParametroFactuEmpresa);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuEmpresa.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.parametrofactuempresaConstantesFunciones.activarFK_IdSucursalMultiDestinoParametroFactuEmpresa);
				this.jTabbedPaneBusquedasParametroFactuEmpresa.setEnabledAt(index,this.parametrofactuempresaConstantesFunciones.activarFK_IdSucursalMultiDestinoParametroFactuEmpresa);
			}

			index= this.jTabbedPaneBusquedasParametroFactuEmpresa.indexOfComponent(this.jPanelFK_IdTransaccionDestinoParametroFactuEmpresa);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuEmpresa.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.parametrofactuempresaConstantesFunciones.activarFK_IdTransaccionDestinoParametroFactuEmpresa);
				this.jTabbedPaneBusquedasParametroFactuEmpresa.setEnabledAt(index,this.parametrofactuempresaConstantesFunciones.activarFK_IdTransaccionDestinoParametroFactuEmpresa);
			}

			index= this.jTabbedPaneBusquedasParametroFactuEmpresa.indexOfComponent(this.jPanelFK_IdTransaccionMultiDestinoParametroFactuEmpresa);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuEmpresa.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.parametrofactuempresaConstantesFunciones.activarFK_IdTransaccionMultiDestinoParametroFactuEmpresa);
				this.jTabbedPaneBusquedasParametroFactuEmpresa.setEnabledAt(index,this.parametrofactuempresaConstantesFunciones.activarFK_IdTransaccionMultiDestinoParametroFactuEmpresa);
			}

			index= this.jTabbedPaneBusquedasParametroFactuEmpresa.indexOfComponent(this.jPanelFK_IdTransaccionOrigenParametroFactuEmpresa);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuEmpresa.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.parametrofactuempresaConstantesFunciones.activarFK_IdTransaccionOrigenParametroFactuEmpresa);
				this.jTabbedPaneBusquedasParametroFactuEmpresa.setEnabledAt(index,this.parametrofactuempresaConstantesFunciones.activarFK_IdTransaccionOrigenParametroFactuEmpresa);
			}
		}	
	
	}
	
	
	public void resaltarPanelBusquedaParametroFactuEmpresa(String sTipoBusqueda) {
		Boolean existe=false;
		//BYDAN_BUSQUEDAS
		
		int index=0;
		Border resaltar = Funciones2.getBorderResaltar(this.parametroGeneralUsuario,"TAB");

		if(sTipoBusqueda.equals("FK_IdBodegaDestino")) {
			index= this.jTabbedPaneBusquedasParametroFactuEmpresa.indexOfComponent(this.jPanelFK_IdBodegaDestinoParametroFactuEmpresa);

			this.jTabbedPaneBusquedasParametroFactuEmpresa.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuEmpresa.getComponent(index);

			this.parametrofactuempresaConstantesFunciones.setResaltarFK_IdBodegaDestinoParametroFactuEmpresa(resaltar);

			jPanel.setBorder(this.parametrofactuempresaConstantesFunciones.resaltarFK_IdBodegaDestinoParametroFactuEmpresa);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdBodegaMultiDestino")) {
			index= this.jTabbedPaneBusquedasParametroFactuEmpresa.indexOfComponent(this.jPanelFK_IdBodegaMultiDestinoParametroFactuEmpresa);

			this.jTabbedPaneBusquedasParametroFactuEmpresa.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuEmpresa.getComponent(index);

			this.parametrofactuempresaConstantesFunciones.setResaltarFK_IdBodegaMultiDestinoParametroFactuEmpresa(resaltar);

			jPanel.setBorder(this.parametrofactuempresaConstantesFunciones.resaltarFK_IdBodegaMultiDestinoParametroFactuEmpresa);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdBodegaMultiOrigen")) {
			index= this.jTabbedPaneBusquedasParametroFactuEmpresa.indexOfComponent(this.jPanelFK_IdBodegaMultiOrigenParametroFactuEmpresa);

			this.jTabbedPaneBusquedasParametroFactuEmpresa.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuEmpresa.getComponent(index);

			this.parametrofactuempresaConstantesFunciones.setResaltarFK_IdBodegaMultiOrigenParametroFactuEmpresa(resaltar);

			jPanel.setBorder(this.parametrofactuempresaConstantesFunciones.resaltarFK_IdBodegaMultiOrigenParametroFactuEmpresa);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdBodegaOrigen")) {
			index= this.jTabbedPaneBusquedasParametroFactuEmpresa.indexOfComponent(this.jPanelFK_IdBodegaOrigenParametroFactuEmpresa);

			this.jTabbedPaneBusquedasParametroFactuEmpresa.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuEmpresa.getComponent(index);

			this.parametrofactuempresaConstantesFunciones.setResaltarFK_IdBodegaOrigenParametroFactuEmpresa(resaltar);

			jPanel.setBorder(this.parametrofactuempresaConstantesFunciones.resaltarFK_IdBodegaOrigenParametroFactuEmpresa);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdClienteDestino")) {
			index= this.jTabbedPaneBusquedasParametroFactuEmpresa.indexOfComponent(this.jPanelFK_IdClienteDestinoParametroFactuEmpresa);

			this.jTabbedPaneBusquedasParametroFactuEmpresa.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuEmpresa.getComponent(index);

			this.parametrofactuempresaConstantesFunciones.setResaltarFK_IdClienteDestinoParametroFactuEmpresa(resaltar);

			jPanel.setBorder(this.parametrofactuempresaConstantesFunciones.resaltarFK_IdClienteDestinoParametroFactuEmpresa);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdClienteOrigen")) {
			index= this.jTabbedPaneBusquedasParametroFactuEmpresa.indexOfComponent(this.jPanelFK_IdClienteOrigenParametroFactuEmpresa);

			this.jTabbedPaneBusquedasParametroFactuEmpresa.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuEmpresa.getComponent(index);

			this.parametrofactuempresaConstantesFunciones.setResaltarFK_IdClienteOrigenParametroFactuEmpresa(resaltar);

			jPanel.setBorder(this.parametrofactuempresaConstantesFunciones.resaltarFK_IdClienteOrigenParametroFactuEmpresa);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdEmpresaDestino")) {
			index= this.jTabbedPaneBusquedasParametroFactuEmpresa.indexOfComponent(this.jPanelFK_IdEmpresaDestinoParametroFactuEmpresa);

			this.jTabbedPaneBusquedasParametroFactuEmpresa.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuEmpresa.getComponent(index);

			this.parametrofactuempresaConstantesFunciones.setResaltarFK_IdEmpresaDestinoParametroFactuEmpresa(resaltar);

			jPanel.setBorder(this.parametrofactuempresaConstantesFunciones.resaltarFK_IdEmpresaDestinoParametroFactuEmpresa);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdEmpresaMultiDestino")) {
			index= this.jTabbedPaneBusquedasParametroFactuEmpresa.indexOfComponent(this.jPanelFK_IdEmpresaMultiDestinoParametroFactuEmpresa);

			this.jTabbedPaneBusquedasParametroFactuEmpresa.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuEmpresa.getComponent(index);

			this.parametrofactuempresaConstantesFunciones.setResaltarFK_IdEmpresaMultiDestinoParametroFactuEmpresa(resaltar);

			jPanel.setBorder(this.parametrofactuempresaConstantesFunciones.resaltarFK_IdEmpresaMultiDestinoParametroFactuEmpresa);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdEmpresaOrigen")) {
			index= this.jTabbedPaneBusquedasParametroFactuEmpresa.indexOfComponent(this.jPanelFK_IdEmpresaOrigenParametroFactuEmpresa);

			this.jTabbedPaneBusquedasParametroFactuEmpresa.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuEmpresa.getComponent(index);

			this.parametrofactuempresaConstantesFunciones.setResaltarFK_IdEmpresaOrigenParametroFactuEmpresa(resaltar);

			jPanel.setBorder(this.parametrofactuempresaConstantesFunciones.resaltarFK_IdEmpresaOrigenParametroFactuEmpresa);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdSucursal")) {
			index= this.jTabbedPaneBusquedasParametroFactuEmpresa.indexOfComponent(this.jPanelFK_IdSucursalParametroFactuEmpresa);

			this.jTabbedPaneBusquedasParametroFactuEmpresa.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuEmpresa.getComponent(index);

			this.parametrofactuempresaConstantesFunciones.setResaltarFK_IdSucursalParametroFactuEmpresa(resaltar);

			jPanel.setBorder(this.parametrofactuempresaConstantesFunciones.resaltarFK_IdSucursalParametroFactuEmpresa);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdSucursalDestino")) {
			index= this.jTabbedPaneBusquedasParametroFactuEmpresa.indexOfComponent(this.jPanelFK_IdSucursalDestinoParametroFactuEmpresa);

			this.jTabbedPaneBusquedasParametroFactuEmpresa.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuEmpresa.getComponent(index);

			this.parametrofactuempresaConstantesFunciones.setResaltarFK_IdSucursalDestinoParametroFactuEmpresa(resaltar);

			jPanel.setBorder(this.parametrofactuempresaConstantesFunciones.resaltarFK_IdSucursalDestinoParametroFactuEmpresa);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdSucursalMultiDestino")) {
			index= this.jTabbedPaneBusquedasParametroFactuEmpresa.indexOfComponent(this.jPanelFK_IdSucursalMultiDestinoParametroFactuEmpresa);

			this.jTabbedPaneBusquedasParametroFactuEmpresa.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuEmpresa.getComponent(index);

			this.parametrofactuempresaConstantesFunciones.setResaltarFK_IdSucursalMultiDestinoParametroFactuEmpresa(resaltar);

			jPanel.setBorder(this.parametrofactuempresaConstantesFunciones.resaltarFK_IdSucursalMultiDestinoParametroFactuEmpresa);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdTransaccionDestino")) {
			index= this.jTabbedPaneBusquedasParametroFactuEmpresa.indexOfComponent(this.jPanelFK_IdTransaccionDestinoParametroFactuEmpresa);

			this.jTabbedPaneBusquedasParametroFactuEmpresa.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuEmpresa.getComponent(index);

			this.parametrofactuempresaConstantesFunciones.setResaltarFK_IdTransaccionDestinoParametroFactuEmpresa(resaltar);

			jPanel.setBorder(this.parametrofactuempresaConstantesFunciones.resaltarFK_IdTransaccionDestinoParametroFactuEmpresa);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdTransaccionMultiDestino")) {
			index= this.jTabbedPaneBusquedasParametroFactuEmpresa.indexOfComponent(this.jPanelFK_IdTransaccionMultiDestinoParametroFactuEmpresa);

			this.jTabbedPaneBusquedasParametroFactuEmpresa.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuEmpresa.getComponent(index);

			this.parametrofactuempresaConstantesFunciones.setResaltarFK_IdTransaccionMultiDestinoParametroFactuEmpresa(resaltar);

			jPanel.setBorder(this.parametrofactuempresaConstantesFunciones.resaltarFK_IdTransaccionMultiDestinoParametroFactuEmpresa);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdTransaccionOrigen")) {
			index= this.jTabbedPaneBusquedasParametroFactuEmpresa.indexOfComponent(this.jPanelFK_IdTransaccionOrigenParametroFactuEmpresa);

			this.jTabbedPaneBusquedasParametroFactuEmpresa.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuEmpresa.getComponent(index);

			this.parametrofactuempresaConstantesFunciones.setResaltarFK_IdTransaccionOrigenParametroFactuEmpresa(resaltar);

			jPanel.setBorder(this.parametrofactuempresaConstantesFunciones.resaltarFK_IdTransaccionOrigenParametroFactuEmpresa);
			existe=true;
		}
		

		if(existe) {
			
			this.jTtoolBarParametroFactuEmpresa.setBorder(resaltar);
			
		}
	}	
	
	//NO FUNCIONA
	public void windowClosed(WindowEvent e) {	
	}
		
	public void windowClosing(WindowEvent e) {	    	    
	}

	public void windowOpened(WindowEvent e) {	    
	}

	public void windowIconified(WindowEvent e) {	    
	}

	public void windowDeiconified(WindowEvent e) {	    
	}

	public void windowActivated(WindowEvent e) {	    
	}

	public void windowDeactivated(WindowEvent e) {	    
	}

	public void windowGainedFocus(WindowEvent e) {	    
	}

	public void windowLostFocus(WindowEvent e) {	    
	}
	
	public void updateControlesFormularioParametroFactuEmpresa() throws Exception {

		if(this.jInternalFrameDetalleFormParametroFactuEmpresa==null) { //if(!this.conCargarFormDetalle) {			
			this.inicializarFormDetalle();
		}
		
		this.updateBorderResaltarControlesFormularioParametroFactuEmpresa();
		this.updateVisibilidadResaltarControlesFormularioParametroFactuEmpresa();
		this.updateHabilitarResaltarControlesFormularioParametroFactuEmpresa();
		
	}
	
	public void updateBorderResaltarControlesFormularioParametroFactuEmpresa() throws Exception {
		if(this.jInternalFrameDetalleFormParametroFactuEmpresa==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
	
		if(this.parametrofactuempresaConstantesFunciones.resaltaridParametroFactuEmpresa!=null && this.jInternalFrameDetalleFormParametroFactuEmpresa!=null) {this.jInternalFrameDetalleFormParametroFactuEmpresa.jLabelidParametroFactuEmpresa.setBorder(this.parametrofactuempresaConstantesFunciones.resaltaridParametroFactuEmpresa);}
		if(this.parametrofactuempresaConstantesFunciones.resaltarid_empresaParametroFactuEmpresa!=null && this.jInternalFrameDetalleFormParametroFactuEmpresa!=null) {this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_empresaParametroFactuEmpresa.setBorder(this.parametrofactuempresaConstantesFunciones.resaltarid_empresaParametroFactuEmpresa);}
		if(this.parametrofactuempresaConstantesFunciones.resaltarid_empresa_origenParametroFactuEmpresa!=null && this.jInternalFrameDetalleFormParametroFactuEmpresa!=null) {this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_empresa_origenParametroFactuEmpresa.setBorder(this.parametrofactuempresaConstantesFunciones.resaltarid_empresa_origenParametroFactuEmpresa);}
		if(this.parametrofactuempresaConstantesFunciones.resaltarid_sucursalParametroFactuEmpresa!=null && this.jInternalFrameDetalleFormParametroFactuEmpresa!=null) {this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_sucursalParametroFactuEmpresa.setBorder(this.parametrofactuempresaConstantesFunciones.resaltarid_sucursalParametroFactuEmpresa);}
		if(this.parametrofactuempresaConstantesFunciones.resaltarid_transaccion_origenParametroFactuEmpresa!=null && this.jInternalFrameDetalleFormParametroFactuEmpresa!=null) {this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_transaccion_origenParametroFactuEmpresa.setBorder(this.parametrofactuempresaConstantesFunciones.resaltarid_transaccion_origenParametroFactuEmpresa);}
		if(this.parametrofactuempresaConstantesFunciones.resaltarid_bodega_origenParametroFactuEmpresa!=null && this.jInternalFrameDetalleFormParametroFactuEmpresa!=null) {this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_bodega_origenParametroFactuEmpresa.setBorder(this.parametrofactuempresaConstantesFunciones.resaltarid_bodega_origenParametroFactuEmpresa);}
		if(this.parametrofactuempresaConstantesFunciones.resaltarid_cliente_origenParametroFactuEmpresa!=null && this.jInternalFrameDetalleFormParametroFactuEmpresa!=null) {this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_cliente_origenParametroFactuEmpresa.setBorder(this.parametrofactuempresaConstantesFunciones.resaltarid_cliente_origenParametroFactuEmpresa);}
		if(this.parametrofactuempresaConstantesFunciones.resaltarcosto_origenParametroFactuEmpresa!=null && this.jInternalFrameDetalleFormParametroFactuEmpresa!=null) {this.jInternalFrameDetalleFormParametroFactuEmpresa.jTextFieldcosto_origenParametroFactuEmpresa.setBorder(this.parametrofactuempresaConstantesFunciones.resaltarcosto_origenParametroFactuEmpresa);}
		if(this.parametrofactuempresaConstantesFunciones.resaltarid_empresa_destinoParametroFactuEmpresa!=null && this.jInternalFrameDetalleFormParametroFactuEmpresa!=null) {this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_empresa_destinoParametroFactuEmpresa.setBorder(this.parametrofactuempresaConstantesFunciones.resaltarid_empresa_destinoParametroFactuEmpresa);}
		if(this.parametrofactuempresaConstantesFunciones.resaltarid_sucursal_destinoParametroFactuEmpresa!=null && this.jInternalFrameDetalleFormParametroFactuEmpresa!=null) {this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_sucursal_destinoParametroFactuEmpresa.setBorder(this.parametrofactuempresaConstantesFunciones.resaltarid_sucursal_destinoParametroFactuEmpresa);}
		if(this.parametrofactuempresaConstantesFunciones.resaltarid_transaccion_destinoParametroFactuEmpresa!=null && this.jInternalFrameDetalleFormParametroFactuEmpresa!=null) {this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_transaccion_destinoParametroFactuEmpresa.setBorder(this.parametrofactuempresaConstantesFunciones.resaltarid_transaccion_destinoParametroFactuEmpresa);}
		if(this.parametrofactuempresaConstantesFunciones.resaltarid_bodega_destinoParametroFactuEmpresa!=null && this.jInternalFrameDetalleFormParametroFactuEmpresa!=null) {this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_bodega_destinoParametroFactuEmpresa.setBorder(this.parametrofactuempresaConstantesFunciones.resaltarid_bodega_destinoParametroFactuEmpresa);}
		if(this.parametrofactuempresaConstantesFunciones.resaltarid_cliente_destinoParametroFactuEmpresa!=null && this.jInternalFrameDetalleFormParametroFactuEmpresa!=null) {this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_cliente_destinoParametroFactuEmpresa.setBorder(this.parametrofactuempresaConstantesFunciones.resaltarid_cliente_destinoParametroFactuEmpresa);}
		if(this.parametrofactuempresaConstantesFunciones.resaltarcosto_destinoParametroFactuEmpresa!=null && this.jInternalFrameDetalleFormParametroFactuEmpresa!=null) {this.jInternalFrameDetalleFormParametroFactuEmpresa.jTextFieldcosto_destinoParametroFactuEmpresa.setBorder(this.parametrofactuempresaConstantesFunciones.resaltarcosto_destinoParametroFactuEmpresa);}
		if(this.parametrofactuempresaConstantesFunciones.resaltarcon_transferenciaParametroFactuEmpresa!=null && this.jInternalFrameDetalleFormParametroFactuEmpresa!=null) {this.jInternalFrameDetalleFormParametroFactuEmpresa.jCheckBoxcon_transferenciaParametroFactuEmpresa.setBorderPainted(true);this.jInternalFrameDetalleFormParametroFactuEmpresa.jCheckBoxcon_transferenciaParametroFactuEmpresa.setBorder(this.parametrofactuempresaConstantesFunciones.resaltarcon_transferenciaParametroFactuEmpresa);}
		if(this.parametrofactuempresaConstantesFunciones.resaltarid_empresa_multi_destinoParametroFactuEmpresa!=null && this.jInternalFrameDetalleFormParametroFactuEmpresa!=null) {this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_empresa_multi_destinoParametroFactuEmpresa.setBorder(this.parametrofactuempresaConstantesFunciones.resaltarid_empresa_multi_destinoParametroFactuEmpresa);}
		if(this.parametrofactuempresaConstantesFunciones.resaltarid_sucursal_multi_destinoParametroFactuEmpresa!=null && this.jInternalFrameDetalleFormParametroFactuEmpresa!=null) {this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_sucursal_multi_destinoParametroFactuEmpresa.setBorder(this.parametrofactuempresaConstantesFunciones.resaltarid_sucursal_multi_destinoParametroFactuEmpresa);}
		if(this.parametrofactuempresaConstantesFunciones.resaltarid_transaccion_multi_destinoParametroFactuEmpresa!=null && this.jInternalFrameDetalleFormParametroFactuEmpresa!=null) {this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_transaccion_multi_destinoParametroFactuEmpresa.setBorder(this.parametrofactuempresaConstantesFunciones.resaltarid_transaccion_multi_destinoParametroFactuEmpresa);}
		if(this.parametrofactuempresaConstantesFunciones.resaltarid_bodega_multi_origenParametroFactuEmpresa!=null && this.jInternalFrameDetalleFormParametroFactuEmpresa!=null) {this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_bodega_multi_origenParametroFactuEmpresa.setBorder(this.parametrofactuempresaConstantesFunciones.resaltarid_bodega_multi_origenParametroFactuEmpresa);}
		if(this.parametrofactuempresaConstantesFunciones.resaltarid_bodega_multi_destinoParametroFactuEmpresa!=null && this.jInternalFrameDetalleFormParametroFactuEmpresa!=null) {this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_bodega_multi_destinoParametroFactuEmpresa.setBorder(this.parametrofactuempresaConstantesFunciones.resaltarid_bodega_multi_destinoParametroFactuEmpresa);}
	}
	
	public void updateVisibilidadResaltarControlesFormularioParametroFactuEmpresa() throws Exception {		
		if(this.jInternalFrameDetalleFormParametroFactuEmpresa==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
		if(this.jInternalFrameDetalleFormParametroFactuEmpresa!=null) {
	
		//this.jInternalFrameDetalleFormParametroFactuEmpresa.jLabelidParametroFactuEmpresa.setVisible(this.parametrofactuempresaConstantesFunciones.mostraridParametroFactuEmpresa);
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jPanelidParametroFactuEmpresa.setVisible(this.parametrofactuempresaConstantesFunciones.mostraridParametroFactuEmpresa);
		//this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_empresaParametroFactuEmpresa.setVisible(this.parametrofactuempresaConstantesFunciones.mostrarid_empresaParametroFactuEmpresa);
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jPanelid_empresaParametroFactuEmpresa.setVisible(this.parametrofactuempresaConstantesFunciones.mostrarid_empresaParametroFactuEmpresa);
		//this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_empresa_origenParametroFactuEmpresa.setVisible(this.parametrofactuempresaConstantesFunciones.mostrarid_empresa_origenParametroFactuEmpresa);
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jPanelid_empresa_origenParametroFactuEmpresa.setVisible(this.parametrofactuempresaConstantesFunciones.mostrarid_empresa_origenParametroFactuEmpresa);
		//this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_sucursalParametroFactuEmpresa.setVisible(this.parametrofactuempresaConstantesFunciones.mostrarid_sucursalParametroFactuEmpresa);
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jPanelid_sucursalParametroFactuEmpresa.setVisible(this.parametrofactuempresaConstantesFunciones.mostrarid_sucursalParametroFactuEmpresa);
		//this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_transaccion_origenParametroFactuEmpresa.setVisible(this.parametrofactuempresaConstantesFunciones.mostrarid_transaccion_origenParametroFactuEmpresa);
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jPanelid_transaccion_origenParametroFactuEmpresa.setVisible(this.parametrofactuempresaConstantesFunciones.mostrarid_transaccion_origenParametroFactuEmpresa);
		//this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_bodega_origenParametroFactuEmpresa.setVisible(this.parametrofactuempresaConstantesFunciones.mostrarid_bodega_origenParametroFactuEmpresa);
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jPanelid_bodega_origenParametroFactuEmpresa.setVisible(this.parametrofactuempresaConstantesFunciones.mostrarid_bodega_origenParametroFactuEmpresa);
		//this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_cliente_origenParametroFactuEmpresa.setVisible(this.parametrofactuempresaConstantesFunciones.mostrarid_cliente_origenParametroFactuEmpresa);
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jPanelid_cliente_origenParametroFactuEmpresa.setVisible(this.parametrofactuempresaConstantesFunciones.mostrarid_cliente_origenParametroFactuEmpresa);
			this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtonid_cliente_origenParametroFactuEmpresa.setVisible(this.parametrofactuempresaConstantesFunciones.mostrarid_cliente_origenParametroFactuEmpresa);
		//this.jInternalFrameDetalleFormParametroFactuEmpresa.jTextFieldcosto_origenParametroFactuEmpresa.setVisible(this.parametrofactuempresaConstantesFunciones.mostrarcosto_origenParametroFactuEmpresa);
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jPanelcosto_origenParametroFactuEmpresa.setVisible(this.parametrofactuempresaConstantesFunciones.mostrarcosto_origenParametroFactuEmpresa);
		//this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_empresa_destinoParametroFactuEmpresa.setVisible(this.parametrofactuempresaConstantesFunciones.mostrarid_empresa_destinoParametroFactuEmpresa);
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jPanelid_empresa_destinoParametroFactuEmpresa.setVisible(this.parametrofactuempresaConstantesFunciones.mostrarid_empresa_destinoParametroFactuEmpresa);
		//this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_sucursal_destinoParametroFactuEmpresa.setVisible(this.parametrofactuempresaConstantesFunciones.mostrarid_sucursal_destinoParametroFactuEmpresa);
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jPanelid_sucursal_destinoParametroFactuEmpresa.setVisible(this.parametrofactuempresaConstantesFunciones.mostrarid_sucursal_destinoParametroFactuEmpresa);
		//this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_transaccion_destinoParametroFactuEmpresa.setVisible(this.parametrofactuempresaConstantesFunciones.mostrarid_transaccion_destinoParametroFactuEmpresa);
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jPanelid_transaccion_destinoParametroFactuEmpresa.setVisible(this.parametrofactuempresaConstantesFunciones.mostrarid_transaccion_destinoParametroFactuEmpresa);
		//this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_bodega_destinoParametroFactuEmpresa.setVisible(this.parametrofactuempresaConstantesFunciones.mostrarid_bodega_destinoParametroFactuEmpresa);
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jPanelid_bodega_destinoParametroFactuEmpresa.setVisible(this.parametrofactuempresaConstantesFunciones.mostrarid_bodega_destinoParametroFactuEmpresa);
		//this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_cliente_destinoParametroFactuEmpresa.setVisible(this.parametrofactuempresaConstantesFunciones.mostrarid_cliente_destinoParametroFactuEmpresa);
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jPanelid_cliente_destinoParametroFactuEmpresa.setVisible(this.parametrofactuempresaConstantesFunciones.mostrarid_cliente_destinoParametroFactuEmpresa);
			this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtonid_cliente_destinoParametroFactuEmpresa.setVisible(this.parametrofactuempresaConstantesFunciones.mostrarid_cliente_destinoParametroFactuEmpresa);
		//this.jInternalFrameDetalleFormParametroFactuEmpresa.jTextFieldcosto_destinoParametroFactuEmpresa.setVisible(this.parametrofactuempresaConstantesFunciones.mostrarcosto_destinoParametroFactuEmpresa);
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jPanelcosto_destinoParametroFactuEmpresa.setVisible(this.parametrofactuempresaConstantesFunciones.mostrarcosto_destinoParametroFactuEmpresa);
		//this.jInternalFrameDetalleFormParametroFactuEmpresa.jCheckBoxcon_transferenciaParametroFactuEmpresa.setVisible(this.parametrofactuempresaConstantesFunciones.mostrarcon_transferenciaParametroFactuEmpresa);
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jPanelcon_transferenciaParametroFactuEmpresa.setVisible(this.parametrofactuempresaConstantesFunciones.mostrarcon_transferenciaParametroFactuEmpresa);
		//this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_empresa_multi_destinoParametroFactuEmpresa.setVisible(this.parametrofactuempresaConstantesFunciones.mostrarid_empresa_multi_destinoParametroFactuEmpresa);
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jPanelid_empresa_multi_destinoParametroFactuEmpresa.setVisible(this.parametrofactuempresaConstantesFunciones.mostrarid_empresa_multi_destinoParametroFactuEmpresa);
		//this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_sucursal_multi_destinoParametroFactuEmpresa.setVisible(this.parametrofactuempresaConstantesFunciones.mostrarid_sucursal_multi_destinoParametroFactuEmpresa);
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jPanelid_sucursal_multi_destinoParametroFactuEmpresa.setVisible(this.parametrofactuempresaConstantesFunciones.mostrarid_sucursal_multi_destinoParametroFactuEmpresa);
		//this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_transaccion_multi_destinoParametroFactuEmpresa.setVisible(this.parametrofactuempresaConstantesFunciones.mostrarid_transaccion_multi_destinoParametroFactuEmpresa);
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jPanelid_transaccion_multi_destinoParametroFactuEmpresa.setVisible(this.parametrofactuempresaConstantesFunciones.mostrarid_transaccion_multi_destinoParametroFactuEmpresa);
		//this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_bodega_multi_origenParametroFactuEmpresa.setVisible(this.parametrofactuempresaConstantesFunciones.mostrarid_bodega_multi_origenParametroFactuEmpresa);
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jPanelid_bodega_multi_origenParametroFactuEmpresa.setVisible(this.parametrofactuempresaConstantesFunciones.mostrarid_bodega_multi_origenParametroFactuEmpresa);
		//this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_bodega_multi_destinoParametroFactuEmpresa.setVisible(this.parametrofactuempresaConstantesFunciones.mostrarid_bodega_multi_destinoParametroFactuEmpresa);
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jPanelid_bodega_multi_destinoParametroFactuEmpresa.setVisible(this.parametrofactuempresaConstantesFunciones.mostrarid_bodega_multi_destinoParametroFactuEmpresa);
		}
	}
	
	public void updateHabilitarResaltarControlesFormularioParametroFactuEmpresa() throws Exception {
		if(this.jInternalFrameDetalleFormParametroFactuEmpresa==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
		if(this.jInternalFrameDetalleFormParametroFactuEmpresa!=null) {
	
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jLabelidParametroFactuEmpresa.setEnabled(this.parametrofactuempresaConstantesFunciones.activaridParametroFactuEmpresa);
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_empresaParametroFactuEmpresa.setEnabled(this.parametrofactuempresaConstantesFunciones.activarid_empresaParametroFactuEmpresa);
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_empresa_origenParametroFactuEmpresa.setEnabled(this.parametrofactuempresaConstantesFunciones.activarid_empresa_origenParametroFactuEmpresa);
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_sucursalParametroFactuEmpresa.setEnabled(this.parametrofactuempresaConstantesFunciones.activarid_sucursalParametroFactuEmpresa);
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_transaccion_origenParametroFactuEmpresa.setEnabled(this.parametrofactuempresaConstantesFunciones.activarid_transaccion_origenParametroFactuEmpresa);
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_bodega_origenParametroFactuEmpresa.setEnabled(this.parametrofactuempresaConstantesFunciones.activarid_bodega_origenParametroFactuEmpresa);
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_cliente_origenParametroFactuEmpresa.setEnabled(this.parametrofactuempresaConstantesFunciones.activarid_cliente_origenParametroFactuEmpresa);
			this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtonid_cliente_origenParametroFactuEmpresa.setEnabled(this.parametrofactuempresaConstantesFunciones.activarid_cliente_origenParametroFactuEmpresa);
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jTextFieldcosto_origenParametroFactuEmpresa.setEnabled(this.parametrofactuempresaConstantesFunciones.activarcosto_origenParametroFactuEmpresa);
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_empresa_destinoParametroFactuEmpresa.setEnabled(this.parametrofactuempresaConstantesFunciones.activarid_empresa_destinoParametroFactuEmpresa);
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_sucursal_destinoParametroFactuEmpresa.setEnabled(this.parametrofactuempresaConstantesFunciones.activarid_sucursal_destinoParametroFactuEmpresa);
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_transaccion_destinoParametroFactuEmpresa.setEnabled(this.parametrofactuempresaConstantesFunciones.activarid_transaccion_destinoParametroFactuEmpresa);
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_bodega_destinoParametroFactuEmpresa.setEnabled(this.parametrofactuempresaConstantesFunciones.activarid_bodega_destinoParametroFactuEmpresa);
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_cliente_destinoParametroFactuEmpresa.setEnabled(this.parametrofactuempresaConstantesFunciones.activarid_cliente_destinoParametroFactuEmpresa);
			this.jInternalFrameDetalleFormParametroFactuEmpresa.jButtonid_cliente_destinoParametroFactuEmpresa.setEnabled(this.parametrofactuempresaConstantesFunciones.activarid_cliente_destinoParametroFactuEmpresa);
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jTextFieldcosto_destinoParametroFactuEmpresa.setEnabled(this.parametrofactuempresaConstantesFunciones.activarcosto_destinoParametroFactuEmpresa);
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jCheckBoxcon_transferenciaParametroFactuEmpresa.setEnabled(this.parametrofactuempresaConstantesFunciones.activarcon_transferenciaParametroFactuEmpresa);
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_empresa_multi_destinoParametroFactuEmpresa.setEnabled(this.parametrofactuempresaConstantesFunciones.activarid_empresa_multi_destinoParametroFactuEmpresa);
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_sucursal_multi_destinoParametroFactuEmpresa.setEnabled(this.parametrofactuempresaConstantesFunciones.activarid_sucursal_multi_destinoParametroFactuEmpresa);
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_transaccion_multi_destinoParametroFactuEmpresa.setEnabled(this.parametrofactuempresaConstantesFunciones.activarid_transaccion_multi_destinoParametroFactuEmpresa);
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_bodega_multi_origenParametroFactuEmpresa.setEnabled(this.parametrofactuempresaConstantesFunciones.activarid_bodega_multi_origenParametroFactuEmpresa);
		this.jInternalFrameDetalleFormParametroFactuEmpresa.jComboBoxid_bodega_multi_destinoParametroFactuEmpresa.setEnabled(this.parametrofactuempresaConstantesFunciones.activarid_bodega_multi_destinoParametroFactuEmpresa);
		}
	}
	
		
}