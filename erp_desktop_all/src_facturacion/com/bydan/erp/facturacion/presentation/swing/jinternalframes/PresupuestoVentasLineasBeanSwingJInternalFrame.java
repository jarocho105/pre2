/*
*AVISO LEGAL
Â© Copyright
*Este programa esta protegido por la ley de derechos de autor.
*La reproduccion o distribucion ilicita de este programa o de cualquiera de
*sus partes esta penado por la ley con severas sanciones civiles y penales,
*y seran objeto de todas las sanciones legales que correspondan.

*Su contenido no puede copiarse para fines comerciales o de otras,
*ni puede mostrarse, incluso en una version modificada, en otros sitios Web.
Solo esta permitido colocar hipervinculos al sitio web.
*/
package com.bydan.erp.facturacion.presentation.swing.jinternalframes;




import com.bydan.erp.seguridad.business.entity.Usuario;
import com.bydan.erp.seguridad.business.entity.ResumenUsuario;
import com.bydan.erp.seguridad.business.entity.Opcion;
import com.bydan.erp.seguridad.business.entity.PerfilOpcion;
import com.bydan.erp.seguridad.business.entity.PerfilCampo;
import com.bydan.erp.seguridad.business.entity.PerfilAccion;
import com.bydan.erp.seguridad.business.entity.ParametroGeneralSg;
import com.bydan.erp.seguridad.business.entity.ParametroGeneralUsuario;
import com.bydan.erp.seguridad.business.entity.Modulo;
import com.bydan.erp.seguridad.business.entity.Accion;

import com.bydan.erp.seguridad.util.SistemaParameterReturnGeneralAdditional;
import com.bydan.erp.seguridad.util.SistemaParameterReturnGeneral;


//import com.bydan.erp.seguridad.business.entity.PerfilAccion;


import com.bydan.erp.seguridad.util.SistemaConstantesFunciones;
import com.bydan.erp.seguridad.util.SistemaConstantesFuncionesAdditional;
import com.bydan.erp.seguridad.business.logic.SistemaLogicAdditional;

import com.bydan.erp.facturacion.util.PresupuestoVentasLineasConstantesFunciones;
import com.bydan.erp.facturacion.util.PresupuestoVentasLineasParameterReturnGeneral;
//import com.bydan.erp.facturacion.util.PresupuestoVentasLineasParameterGeneral;
//import com.bydan.erp.facturacion.presentation.report.source.PresupuestoVentasLineasBean;
import com.bydan.framework.erp.business.dataaccess.ConstantesSql;
import com.bydan.framework.erp.business.entity.Classe;
import com.bydan.framework.erp.business.entity.DatoGeneral;
import com.bydan.framework.erp.business.entity.GeneralEntityParameterGeneral;
import com.bydan.framework.erp.business.entity.OrderBy;
import com.bydan.framework.erp.business.entity.DatoGeneralMinimo;
import com.bydan.framework.erp.business.entity.GeneralEntity;
import com.bydan.framework.erp.business.entity.Mensajes;
import com.bydan.framework.erp.business.entity.GeneralEntityParameterReturnGeneral;
//import com.bydan.framework.erp.business.entity.MaintenanceType;
import com.bydan.framework.erp.util.MaintenanceType;
import com.bydan.framework.erp.util.FuncionesReporte;
import com.bydan.framework.erp.business.logic.DatosCliente;
import com.bydan.framework.erp.business.logic.Pagination;

import com.bydan.erp.facturacion.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.framework.erp.presentation.desktop.swing.TablaGeneralTotalModel;
import com.bydan.framework.erp.presentation.desktop.swing.TablaGeneralOrderByModel;
import com.bydan.framework.erp.presentation.desktop.swing.DateConverter;
import com.bydan.framework.erp.presentation.desktop.swing.DateConverterFromDate;
import com.bydan.framework.erp.presentation.desktop.swing.DateRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.DateEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.BooleanRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.BooleanEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.TextFieldRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.RunnableProceso;
import com.bydan.framework.erp.presentation.desktop.swing.*;
//import com.bydan.framework.erp.presentation.desktop.swing.TextFieldEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.HeaderRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.JInternalFrameBase;
import com.bydan.framework.erp.presentation.desktop.swing.FuncionesSwing;
import com.bydan.framework.erp.presentation.desktop.swing.MainJFrame;
import com.bydan.framework.erp.resources.imagenes.AuxiliarImagenes;
import com.bydan.erp.facturacion.resources.reportes.AuxiliarReportes;


import com.bydan.erp.facturacion.util.*;
import com.bydan.erp.facturacion.business.logic.*;

import com.bydan.erp.seguridad.business.logic.*;
import com.bydan.erp.contabilidad.business.logic.*;
import com.bydan.erp.comisiones.business.logic.*;
import com.bydan.erp.inventario.business.logic.*;

//EJB

//PARAMETROS


//EJB PARAMETROS

import com.bydan.framework.erp.business.logic.*;
import com.bydan.framework.erp.util.*;

import com.bydan.erp.facturacion.business.entity.*;
//import com.bydan.framework.erp.business.entity.ConexionBeanFace;
//import com.bydan.framework.erp.business.entity.Mensajes;


import com.bydan.erp.seguridad.presentation.swing.jinternalframes.*;
import com.bydan.erp.contabilidad.presentation.swing.jinternalframes.*;
import com.bydan.erp.comisiones.presentation.swing.jinternalframes.*;
import com.bydan.erp.inventario.presentation.swing.jinternalframes.*;

import com.bydan.erp.seguridad.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.contabilidad.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.comisiones.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.inventario.presentation.swing.jinternalframes.auxiliar.*;






import javax.imageio.ImageIO;
import java.net.NetworkInterface;
import java.net.InterfaceAddress;
import java.net.InetAddress;
import javax.naming.InitialContext;
import java.lang.Long;
import java.util.Date;
import java.util.Enumeration;
import java.util.Iterator;
import java.util.Set;
import java.util.HashSet;
import java.util.List;
import java.util.ArrayList;
import java.io.Serializable;
import java.util.Hashtable;
import java.util.Collections;
import java.io.File;
import java.io.FileInputStream;
import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.io.BufferedReader;
import java.io.FileReader;
import java.util.HashMap;
import java.util.Map;
import java.io.PrintWriter;
import java.sql.SQLException;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.transform.stream.StreamSource;

import org.xml.sax.EntityResolver;
import org.xml.sax.InputSource;
import org.xml.sax.SAXException;

import org.w3c.dom.Document;
import org.w3c.dom.Document;
import org.w3c.dom.NodeList;
import org.w3c.dom.Node;
import org.w3c.dom.Element;

import org.apache.poi.hssf.usermodel.HSSFCell;
import org.apache.poi.hssf.usermodel.HSSFRow;
import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellStyle;
import org.apache.poi.ss.usermodel.IndexedColors;
import org.apache.poi.ss.util.CellRangeAddress;

import javax.xml.transform.Transformer;
import javax.xml.transform.TransformerFactory;
import javax.xml.transform.dom.DOMSource;
import javax.xml.transform.stream.StreamResult;


import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JRRuntimeException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.engine.export.JRHtmlExporter;
import net.sf.jasperreports.j2ee.servlets.BaseHttpServlet;
import net.sf.jasperreports.engine.JRExporterParameter;
import net.sf.jasperreports.engine.data.JRBeanArrayDataSource;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import net.sf.jasperreports.view.JasperViewer;

import org.apache.log4j.Logger;

import com.bydan.framework.erp.business.entity.Reporte;


//VALIDACION
import org.hibernate.validator.ClassValidator;
import org.hibernate.validator.InvalidValue;

import net.sf.jasperreports.engine.JREmptyDataSource;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperExportManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperPrintManager;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.JasperRunManager;
import net.sf.jasperreports.engine.export.JExcelApiExporter;
import net.sf.jasperreports.engine.export.JRCsvExporter;
import net.sf.jasperreports.engine.export.JRRtfExporter;
import net.sf.jasperreports.engine.export.JRXlsExporter;
import net.sf.jasperreports.engine.export.JRXlsExporterParameter;
import net.sf.jasperreports.engine.util.JRSaver;
import net.sf.jasperreports.engine.xml.JRXmlWriter;


import com.bydan.erp.facturacion.presentation.web.jsf.sessionbean.*;

import java.util.EventObject;
import javax.swing.*;
import javax.swing.border.Border;
import javax.swing.border.TitledBorder;
import javax.swing.border.EmptyBorder;
import javax.swing.event.*;
import javax.swing.table.AbstractTableModel;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.TableColumn;
import javax.swing.table.TableCellEditor;
import javax.swing.table.TableCellRenderer;
import java.awt.*;
import java.awt.event.*;

import org.jdesktop.beansbinding.Binding.SyncFailure;
import org.jdesktop.beansbinding.BindingListener;
import org.jdesktop.beansbinding.Bindings;
import org.jdesktop.beansbinding.BeanProperty;
import org.jdesktop.beansbinding.ELProperty;
import org.jdesktop.beansbinding.AutoBinding.UpdateStrategy;
import org.jdesktop.beansbinding.PropertyStateEvent;
import org.jdesktop.swingbinding.JComboBoxBinding;
import org.jdesktop.swingbinding.SwingBindings;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeEvent;

import com.toedter.calendar.JDateChooser;


import com.bydan.erp.seguridad.business.entity.*;
import com.bydan.erp.contabilidad.business.entity.*;
import com.bydan.erp.comisiones.business.entity.*;
import com.bydan.erp.inventario.business.entity.*;
import com.bydan.erp.seguridad.util.*;
import com.bydan.erp.contabilidad.util.*;
import com.bydan.erp.comisiones.util.*;
import com.bydan.erp.inventario.util.*;
import com.bydan.erp.seguridad.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.contabilidad.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.comisiones.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.inventario.presentation.web.jsf.sessionbean.*;


@SuppressWarnings("unused")
public class PresupuestoVentasLineasBeanSwingJInternalFrame extends PresupuestoVentasLineasJInternalFrame implements WindowListener,WindowFocusListener
{				
	
	public static final long serialVersionUID = 1L;
	
	public static Logger logger = Logger.getLogger(PresupuestoVentasLineasBeanSwingJInternalFrame.class);  
	
	public static ClassValidator<PresupuestoVentasLineas> presupuestoventaslineasValidator = new ClassValidator<PresupuestoVentasLineas>(PresupuestoVentasLineas.class);
	
	public InvalidValue[] invalidValues=null;
		

	//Ejb Foreign Keys
	
	public PresupuestoVentasLineas presupuestoventaslineas;	
	public PresupuestoVentasLineas presupuestoventaslineasAux;
	public PresupuestoVentasLineas presupuestoventaslineasAnterior;//USADO PARA MANEJAR FOCUS GAINED,LOST
	public PresupuestoVentasLineas presupuestoventaslineasTotales;
	public Long idPresupuestoVentasLineasActual;
	public Long iIdNuevoPresupuestoVentasLineas=0L;
	public int rowIndexActual=0;
	
	
	
	
	public String sFinalQueryComboEmpresa="";

	public List<Empresa> empresasForeignKey;

	public List<Empresa> getempresasForeignKey() {
		return empresasForeignKey;
	}

	public void setempresasForeignKey(List<Empresa> empresasForeignKey) {
		this.empresasForeignKey = empresasForeignKey;
	}

	//OBJETO FK ACTUAL
	public Empresa empresaForeignKey;

	public Empresa getempresaForeignKey() {
		return empresaForeignKey;
	}

	public void setempresaForeignKey(Empresa empresaForeignKey) {
		this.empresaForeignKey = empresaForeignKey;
	}

	public String sFinalQueryComboSucursal="";

	public List<Sucursal> sucursalsForeignKey;

	public List<Sucursal> getsucursalsForeignKey() {
		return sucursalsForeignKey;
	}

	public void setsucursalsForeignKey(List<Sucursal> sucursalsForeignKey) {
		this.sucursalsForeignKey = sucursalsForeignKey;
	}

	//OBJETO FK ACTUAL
	public Sucursal sucursalForeignKey;

	public Sucursal getsucursalForeignKey() {
		return sucursalForeignKey;
	}

	public void setsucursalForeignKey(Sucursal sucursalForeignKey) {
		this.sucursalForeignKey = sucursalForeignKey;
	}

	public String sFinalQueryComboEjercicio="";

	public List<Ejercicio> ejerciciosForeignKey;

	public List<Ejercicio> getejerciciosForeignKey() {
		return ejerciciosForeignKey;
	}

	public void setejerciciosForeignKey(List<Ejercicio> ejerciciosForeignKey) {
		this.ejerciciosForeignKey = ejerciciosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Ejercicio ejercicioForeignKey;

	public Ejercicio getejercicioForeignKey() {
		return ejercicioForeignKey;
	}

	public void setejercicioForeignKey(Ejercicio ejercicioForeignKey) {
		this.ejercicioForeignKey = ejercicioForeignKey;
	}

	public String sFinalQueryComboPeriodo="";

	public List<Periodo> periodosForeignKey;

	public List<Periodo> getperiodosForeignKey() {
		return periodosForeignKey;
	}

	public void setperiodosForeignKey(List<Periodo> periodosForeignKey) {
		this.periodosForeignKey = periodosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Periodo periodoForeignKey;

	public Periodo getperiodoForeignKey() {
		return periodoForeignKey;
	}

	public void setperiodoForeignKey(Periodo periodoForeignKey) {
		this.periodoForeignKey = periodoForeignKey;
	}

	public String sFinalQueryComboVendedor="";

	public List<Vendedor> vendedorsForeignKey;

	public List<Vendedor> getvendedorsForeignKey() {
		return vendedorsForeignKey;
	}

	public void setvendedorsForeignKey(List<Vendedor> vendedorsForeignKey) {
		this.vendedorsForeignKey = vendedorsForeignKey;
	}

	//OBJETO FK ACTUAL
	public Vendedor vendedorForeignKey;

	public Vendedor getvendedorForeignKey() {
		return vendedorForeignKey;
	}

	public void setvendedorForeignKey(Vendedor vendedorForeignKey) {
		this.vendedorForeignKey = vendedorForeignKey;
	}

	public String sFinalQueryComboPais="";

	public List<Pais> paissForeignKey;

	public List<Pais> getpaissForeignKey() {
		return paissForeignKey;
	}

	public void setpaissForeignKey(List<Pais> paissForeignKey) {
		this.paissForeignKey = paissForeignKey;
	}

	//OBJETO FK ACTUAL
	public Pais paisForeignKey;

	public Pais getpaisForeignKey() {
		return paisForeignKey;
	}

	public void setpaisForeignKey(Pais paisForeignKey) {
		this.paisForeignKey = paisForeignKey;
	}

	public String sFinalQueryComboCiudad="";

	public List<Ciudad> ciudadsForeignKey;

	public List<Ciudad> getciudadsForeignKey() {
		return ciudadsForeignKey;
	}

	public void setciudadsForeignKey(List<Ciudad> ciudadsForeignKey) {
		this.ciudadsForeignKey = ciudadsForeignKey;
	}

	//OBJETO FK ACTUAL
	public Ciudad ciudadForeignKey;

	public Ciudad getciudadForeignKey() {
		return ciudadForeignKey;
	}

	public void setciudadForeignKey(Ciudad ciudadForeignKey) {
		this.ciudadForeignKey = ciudadForeignKey;
	}

	public String sFinalQueryComboZona="";

	public List<Zona> zonasForeignKey;

	public List<Zona> getzonasForeignKey() {
		return zonasForeignKey;
	}

	public void setzonasForeignKey(List<Zona> zonasForeignKey) {
		this.zonasForeignKey = zonasForeignKey;
	}

	//OBJETO FK ACTUAL
	public Zona zonaForeignKey;

	public Zona getzonaForeignKey() {
		return zonaForeignKey;
	}

	public void setzonaForeignKey(Zona zonaForeignKey) {
		this.zonaForeignKey = zonaForeignKey;
	}

	public String sFinalQueryComboLinea="";

	public List<Linea> lineasForeignKey;

	public List<Linea> getlineasForeignKey() {
		return lineasForeignKey;
	}

	public void setlineasForeignKey(List<Linea> lineasForeignKey) {
		this.lineasForeignKey = lineasForeignKey;
	}

	//OBJETO FK ACTUAL
	public Linea lineaForeignKey;

	public Linea getlineaForeignKey() {
		return lineaForeignKey;
	}

	public void setlineaForeignKey(Linea lineaForeignKey) {
		this.lineaForeignKey = lineaForeignKey;
	}

	public String sFinalQueryComboLineaGrupo="";

	public List<Linea> lineagruposForeignKey;

	public List<Linea> getlineagruposForeignKey() {
		return lineagruposForeignKey;
	}

	public void setlineagruposForeignKey(List<Linea> lineagruposForeignKey) {
		this.lineagruposForeignKey = lineagruposForeignKey;
	}

	//OBJETO FK ACTUAL
	public Linea lineagrupoForeignKey;

	public Linea getlineagrupoForeignKey() {
		return lineagrupoForeignKey;
	}

	public void setlineagrupoForeignKey(Linea lineagrupoForeignKey) {
		this.lineagrupoForeignKey = lineagrupoForeignKey;
	}

	public String sFinalQueryComboLineaCategoria="";

	public List<Linea> lineacategoriasForeignKey;

	public List<Linea> getlineacategoriasForeignKey() {
		return lineacategoriasForeignKey;
	}

	public void setlineacategoriasForeignKey(List<Linea> lineacategoriasForeignKey) {
		this.lineacategoriasForeignKey = lineacategoriasForeignKey;
	}

	//OBJETO FK ACTUAL
	public Linea lineacategoriaForeignKey;

	public Linea getlineacategoriaForeignKey() {
		return lineacategoriaForeignKey;
	}

	public void setlineacategoriaForeignKey(Linea lineacategoriaForeignKey) {
		this.lineacategoriaForeignKey = lineacategoriaForeignKey;
	}

	public String sFinalQueryComboLineaMarca="";

	public List<Linea> lineamarcasForeignKey;

	public List<Linea> getlineamarcasForeignKey() {
		return lineamarcasForeignKey;
	}

	public void setlineamarcasForeignKey(List<Linea> lineamarcasForeignKey) {
		this.lineamarcasForeignKey = lineamarcasForeignKey;
	}

	//OBJETO FK ACTUAL
	public Linea lineamarcaForeignKey;

	public Linea getlineamarcaForeignKey() {
		return lineamarcaForeignKey;
	}

	public void setlineamarcaForeignKey(Linea lineamarcaForeignKey) {
		this.lineamarcaForeignKey = lineamarcaForeignKey;
	}

		
	
	
	
	
	
	
	
	//FALTA:PARA BUSQUEDAS POR CAMPO EN FORMULARIO
	public String sFinalQueryGeneral="";
	public Boolean isEntroOnLoad=false;
	public Boolean isErrorGuardar=false;
	
	public Boolean isGuardarCambiosEnLote=false;
	public Boolean isCargarCombosDependencia=false;
	public Boolean isSeleccionarTodos=false;
	public Boolean isSeleccionados=false;
	public Boolean conGraficoReporte=false;
	
	public Boolean isPostAccionNuevo=false;
	public Boolean isPostAccionSinCerrar=false;
	public Boolean isPostAccionSinMensaje=false;
	
	
	public Boolean esControlTabla=false;
	
	public Boolean isPermisoTodoPresupuestoVentasLineas;
	public Boolean isPermisoNuevoPresupuestoVentasLineas;
	public Boolean isPermisoActualizarPresupuestoVentasLineas;
	public Boolean isPermisoActualizarOriginalPresupuestoVentasLineas;
	public Boolean isPermisoEliminarPresupuestoVentasLineas;
	public Boolean isPermisoGuardarCambiosPresupuestoVentasLineas;
	public Boolean isPermisoConsultaPresupuestoVentasLineas;
	public Boolean isPermisoBusquedaPresupuestoVentasLineas;
	public Boolean isPermisoReportePresupuestoVentasLineas;
	public Boolean isPermisoPaginacionMedioPresupuestoVentasLineas;
	public Boolean isPermisoPaginacionAltoPresupuestoVentasLineas;
	public Boolean isPermisoPaginacionTodoPresupuestoVentasLineas;
	public Boolean isPermisoCopiarPresupuestoVentasLineas;
	public Boolean isPermisoVerFormPresupuestoVentasLineas;
	public Boolean isPermisoDuplicarPresupuestoVentasLineas;
	public Boolean isPermisoOrdenPresupuestoVentasLineas;
	
	
	public ArrayList<DatoGeneral> arrDatoGeneral;
	public ArrayList<String> arrDatoGeneralNo;
	ArrayList<Classe> classesActual=new ArrayList<Classe>();
	
	public List<Accion> accions;	
	public List<Accion> accionsFormulario;
	
	
	public ArrayList<DatoGeneralMinimo> arrDatoGeneralMinimos;
	
	public ArrayList<Reporte> tiposArchivosReportes;
	public ArrayList<Reporte> tiposArchivosReportesDinamico;
	public ArrayList<Reporte> tiposReportes;
	public ArrayList<Reporte> tiposReportesDinamico;
	public ArrayList<Reporte> tiposGraficosReportes;
	public ArrayList<Reporte> tiposPaginacion;
	public ArrayList<Reporte> tiposRelaciones;
	public ArrayList<Reporte> tiposAcciones;
	public ArrayList<Reporte> tiposAccionesFormulario;
	public ArrayList<Reporte> tiposSeleccionar;
	
	public ArrayList<Reporte> tiposColumnasSelect;
	public ArrayList<Reporte> tiposRelacionesSelect;
	
	
	public Integer iNumeroPaginacion;
	public Integer iNumeroPaginacionPagina;
	public Pagination pagination;
	public DatosCliente datosCliente;
	public DatosDeep datosDeep;
	public String sTipoArchivoReporte="";
	public String sTipoArchivoReporteDinamico="";
	public String sTipoReporte="";
	public String sTipoReporteDinamico="";
	public String sTipoGraficoReporte="";
	public String sTipoPaginacion="";
	public String sTipoRelacion="";
	public String sTipoAccion="";
	public String sTipoAccionFormulario="";
	public String sTipoSeleccionar="";	
	public String sDetalleReporte="";
	public Boolean isMostrarNumeroPaginacion;
	public String sTipoReporteExtra="";
	public String sValorCampoGeneral="";
	public Boolean esReporteDinamico=false;
	public Boolean esReporteAccionProceso=false;
	public Boolean esRecargarFks=false;
	public String sPathReporteDinamico="";
	
	public PresupuestoVentasLineasParameterReturnGeneral presupuestoventaslineasReturnGeneral;
	public PresupuestoVentasLineasParameterReturnGeneral presupuestoventaslineasParameterGeneral;
	
	 	
	public JasperPrint jasperPrint = null;
	
	public Long lIdUsuarioSesion=0L;				
	
	public Boolean isEsNuevoPresupuestoVentasLineas=false;
	public Boolean esParaAccionDesdeFormularioPresupuestoVentasLineas=false;
	public Boolean isEsMantenimientoRelacionesRelacionadoUnico=false;
	public Boolean isEsMantenimientoRelaciones=false;
	public Boolean isEsMantenimientoRelacionado=false;	
	public Boolean isContieneImagenes=false;
		
	//public Boolean conTotales=false; //Viene heredado de JInternalFrameBase
	//public Boolean esParaBusquedaForeignKey=false;
	
	
	protected PresupuestoVentasLineasSessionBeanAdditional presupuestoventaslineasSessionBeanAdditional=null;
	
	public PresupuestoVentasLineasSessionBeanAdditional getPresupuestoVentasLineasSessionBeanAdditional() {
		return this.presupuestoventaslineasSessionBeanAdditional;
	}
	
	public void setPresupuestoVentasLineasSessionBeanAdditional(PresupuestoVentasLineasSessionBeanAdditional presupuestoventaslineasSessionBeanAdditional) {
		try {
			this.presupuestoventaslineasSessionBeanAdditional=presupuestoventaslineasSessionBeanAdditional;
		} catch(Exception e) {
			;
		}
	}
	
	
	
	
	protected PresupuestoVentasLineasBeanSwingJInternalFrameAdditional presupuestoventaslineasBeanSwingJInternalFrameAdditional=null;
	//public class PresupuestoVentasLineasBeanSwingJInternalFrame
	
	public PresupuestoVentasLineasBeanSwingJInternalFrameAdditional getPresupuestoVentasLineasBeanSwingJInternalFrameAdditional() {
		return this.presupuestoventaslineasBeanSwingJInternalFrameAdditional;
	}
	
	public void setPresupuestoVentasLineasBeanSwingJInternalFrameAdditional(PresupuestoVentasLineasBeanSwingJInternalFrameAdditional presupuestoventaslineasBeanSwingJInternalFrameAdditional) {
		try {
			this.presupuestoventaslineasBeanSwingJInternalFrameAdditional=presupuestoventaslineasBeanSwingJInternalFrameAdditional;
		} catch(Exception e) {
			;
		}
	}
	
	
	
	
	//ESTA EN PADRE
	
	//public PresupuestoVentasLineasLogic presupuestoventaslineasLogic;
	public SistemaLogicAdditional sistemaLogicAdditional;
	
	
	public PresupuestoVentasLineas presupuestoventaslineasBean;
	public PresupuestoVentasLineasConstantesFunciones presupuestoventaslineasConstantesFunciones;
	//public PresupuestoVentasLineasParameterReturnGeneral presupuestoventaslineasReturnGeneral;
	
	//FK
	
	public EmpresaLogic empresaLogic;
	public SucursalLogic sucursalLogic;
	public EjercicioLogic ejercicioLogic;
	public PeriodoLogic periodoLogic;
	public VendedorLogic vendedorLogic;
	public PaisLogic paisLogic;
	public CiudadLogic ciudadLogic;
	public ZonaLogic zonaLogic;
	public LineaLogic lineaLogic;
	public LineaLogic lineagrupoLogic;
	public LineaLogic lineacategoriaLogic;
	public LineaLogic lineamarcaLogic;
	
	//PARAMETROS
	
	
	//public List<PresupuestoVentasLineas> presupuestoventaslineass;	
	//public List<PresupuestoVentasLineas> presupuestoventaslineassEliminados;
	//public List<PresupuestoVentasLineas> presupuestoventaslineassAux;
	
	public String sAccionMantenimiento="";
	public String sAccionBusqueda="";
	public String sAccionAdicional="";
	public String sUltimaBusqueda="";
	
	public Mensaje mensaje;
	
	
	public String sVisibilidadTablaBusquedas="";					
	public String sVisibilidadTablaElementos="";	
	public String sVisibilidadTablaAcciones="";			
	
	public Boolean isVisibilidadCeldaNuevoPresupuestoVentasLineas=false;
	public Boolean isVisibilidadCeldaDuplicarPresupuestoVentasLineas=true;
	public Boolean isVisibilidadCeldaCopiarPresupuestoVentasLineas=true;
	public Boolean isVisibilidadCeldaVerFormPresupuestoVentasLineas=true;
	public Boolean isVisibilidadCeldaOrdenPresupuestoVentasLineas=true;
	public Boolean isVisibilidadCeldaNuevoRelacionesPresupuestoVentasLineas=false;
	public Boolean isVisibilidadCeldaModificarPresupuestoVentasLineas=false;
	public Boolean isVisibilidadCeldaActualizarPresupuestoVentasLineas=false;
	public Boolean isVisibilidadCeldaEliminarPresupuestoVentasLineas=false;
	public Boolean isVisibilidadCeldaCancelarPresupuestoVentasLineas=false;
	public Boolean isVisibilidadCeldaGuardarPresupuestoVentasLineas=false;	
	public Boolean isVisibilidadCeldaGuardarCambiosPresupuestoVentasLineas=false;	
	
	
	public Boolean isVisibilidadFK_IdCiudad=false;
	public Boolean isVisibilidadFK_IdEjercicio=false;
	public Boolean isVisibilidadFK_IdEmpresa=false;
	public Boolean isVisibilidadFK_IdLinea=false;
	public Boolean isVisibilidadFK_IdLineaCategoria=false;
	public Boolean isVisibilidadFK_IdLineaGrupo=false;
	public Boolean isVisibilidadFK_IdLineaMarca=false;
	public Boolean isVisibilidadFK_IdPais=false;
	public Boolean isVisibilidadFK_IdPeriodo=false;
	public Boolean isVisibilidadFK_IdSucursal=false;
	public Boolean isVisibilidadFK_IdVendedor=false;
	public Boolean isVisibilidadFK_IdZona=false;
	
	public Long getiIdNuevoPresupuestoVentasLineas() {
		return this.iIdNuevoPresupuestoVentasLineas;
	}

	public void setiIdNuevoPresupuestoVentasLineas(Long iIdNuevoPresupuestoVentasLineas) {
		this.iIdNuevoPresupuestoVentasLineas = iIdNuevoPresupuestoVentasLineas;
	}
	
	public Long getidPresupuestoVentasLineasActual() {
		return this.idPresupuestoVentasLineasActual;
	}

	public void setidPresupuestoVentasLineasActual(Long idPresupuestoVentasLineasActual) {
		this.idPresupuestoVentasLineasActual = idPresupuestoVentasLineasActual;
	}
	
	public int getrowIndexActual() {
		return this.rowIndexActual;
	}

	public void setrowIndexActual(int rowIndexActual) {
		this.rowIndexActual=rowIndexActual;
	}
	
	
	public PresupuestoVentasLineas getpresupuestoventaslineas() {
		return this.presupuestoventaslineas;
	}

	public void setpresupuestoventaslineas(PresupuestoVentasLineas presupuestoventaslineas) {
		this.presupuestoventaslineas = presupuestoventaslineas;
	}
	
	public PresupuestoVentasLineas getpresupuestoventaslineasAux() {
		return this.presupuestoventaslineasAux;
	}

	public void setpresupuestoventaslineasAux(PresupuestoVentasLineas presupuestoventaslineasAux) {
		this.presupuestoventaslineasAux = presupuestoventaslineasAux;
	}				
	
	public PresupuestoVentasLineas getpresupuestoventaslineasAnterior() {
		return this.presupuestoventaslineasAnterior;
	}

	public void setpresupuestoventaslineasAnterior(PresupuestoVentasLineas presupuestoventaslineasAnterior) {
		this.presupuestoventaslineasAnterior = presupuestoventaslineasAnterior;
	}	
	
	public PresupuestoVentasLineas getpresupuestoventaslineasTotales() {
		return this.presupuestoventaslineasTotales;
	}

	public void setpresupuestoventaslineasTotales(PresupuestoVentasLineas presupuestoventaslineasTotales) {
		this.presupuestoventaslineasTotales = presupuestoventaslineasTotales;
	}	
	
	public PresupuestoVentasLineas getpresupuestoventaslineasBean() {
		return this.presupuestoventaslineasBean;
	}

	public void setpresupuestoventaslineasBean(PresupuestoVentasLineas presupuestoventaslineasBean) {
		this.presupuestoventaslineasBean = presupuestoventaslineasBean;
	}	
	
	public PresupuestoVentasLineasParameterReturnGeneral getpresupuestoventaslineasReturnGeneral() {
		return this.presupuestoventaslineasReturnGeneral;
	}

	public void setpresupuestoventaslineasReturnGeneral(PresupuestoVentasLineasParameterReturnGeneral presupuestoventaslineasReturnGeneral) {
		this.presupuestoventaslineasReturnGeneral = presupuestoventaslineasReturnGeneral;
	}	
	
	
	public Long id_ciudadFK_IdCiudad=-1L;

	public Long getid_ciudadFK_IdCiudad() {
		return this.id_ciudadFK_IdCiudad;
	}

	public void setid_ciudadFK_IdCiudad(Long id_ciudadFK_IdCiudad) {
		this.id_ciudadFK_IdCiudad = id_ciudadFK_IdCiudad;
	}

	public Long id_ejercicioFK_IdEjercicio=-1L;

	public Long getid_ejercicioFK_IdEjercicio() {
		return this.id_ejercicioFK_IdEjercicio;
	}

	public void setid_ejercicioFK_IdEjercicio(Long id_ejercicioFK_IdEjercicio) {
		this.id_ejercicioFK_IdEjercicio = id_ejercicioFK_IdEjercicio;
	}

	public Long id_empresaFK_IdEmpresa=-1L;

	public Long getid_empresaFK_IdEmpresa() {
		return this.id_empresaFK_IdEmpresa;
	}

	public void setid_empresaFK_IdEmpresa(Long id_empresaFK_IdEmpresa) {
		this.id_empresaFK_IdEmpresa = id_empresaFK_IdEmpresa;
	}

	public Long id_lineaFK_IdLinea=-1L;

	public Long getid_lineaFK_IdLinea() {
		return this.id_lineaFK_IdLinea;
	}

	public void setid_lineaFK_IdLinea(Long id_lineaFK_IdLinea) {
		this.id_lineaFK_IdLinea = id_lineaFK_IdLinea;
	}

	public Long id_linea_categoriaFK_IdLineaCategoria=null;

	public Long getid_linea_categoriaFK_IdLineaCategoria() {
		return this.id_linea_categoriaFK_IdLineaCategoria;
	}

	public void setid_linea_categoriaFK_IdLineaCategoria(Long id_linea_categoriaFK_IdLineaCategoria) {
		this.id_linea_categoriaFK_IdLineaCategoria = id_linea_categoriaFK_IdLineaCategoria;
	}

	public Long id_linea_grupoFK_IdLineaGrupo=null;

	public Long getid_linea_grupoFK_IdLineaGrupo() {
		return this.id_linea_grupoFK_IdLineaGrupo;
	}

	public void setid_linea_grupoFK_IdLineaGrupo(Long id_linea_grupoFK_IdLineaGrupo) {
		this.id_linea_grupoFK_IdLineaGrupo = id_linea_grupoFK_IdLineaGrupo;
	}

	public Long id_linea_marcaFK_IdLineaMarca=null;

	public Long getid_linea_marcaFK_IdLineaMarca() {
		return this.id_linea_marcaFK_IdLineaMarca;
	}

	public void setid_linea_marcaFK_IdLineaMarca(Long id_linea_marcaFK_IdLineaMarca) {
		this.id_linea_marcaFK_IdLineaMarca = id_linea_marcaFK_IdLineaMarca;
	}

	public Long id_paisFK_IdPais=-1L;

	public Long getid_paisFK_IdPais() {
		return this.id_paisFK_IdPais;
	}

	public void setid_paisFK_IdPais(Long id_paisFK_IdPais) {
		this.id_paisFK_IdPais = id_paisFK_IdPais;
	}

	public Long id_periodoFK_IdPeriodo=-1L;

	public Long getid_periodoFK_IdPeriodo() {
		return this.id_periodoFK_IdPeriodo;
	}

	public void setid_periodoFK_IdPeriodo(Long id_periodoFK_IdPeriodo) {
		this.id_periodoFK_IdPeriodo = id_periodoFK_IdPeriodo;
	}

	public Long id_sucursalFK_IdSucursal=-1L;

	public Long getid_sucursalFK_IdSucursal() {
		return this.id_sucursalFK_IdSucursal;
	}

	public void setid_sucursalFK_IdSucursal(Long id_sucursalFK_IdSucursal) {
		this.id_sucursalFK_IdSucursal = id_sucursalFK_IdSucursal;
	}

	public Long id_vendedorFK_IdVendedor=-1L;

	public Long getid_vendedorFK_IdVendedor() {
		return this.id_vendedorFK_IdVendedor;
	}

	public void setid_vendedorFK_IdVendedor(Long id_vendedorFK_IdVendedor) {
		this.id_vendedorFK_IdVendedor = id_vendedorFK_IdVendedor;
	}

	public Long id_zonaFK_IdZona=null;

	public Long getid_zonaFK_IdZona() {
		return this.id_zonaFK_IdZona;
	}

	public void setid_zonaFK_IdZona(Long id_zonaFK_IdZona) {
		this.id_zonaFK_IdZona = id_zonaFK_IdZona;
	}

		
	
	//ELEMENTOS TABLAS PARAMETOS
	
	
	
	
	
	
	//ELEMENTOS TABLAS PARAMETOS_FIN
	
	
	public PresupuestoVentasLineasLogic getPresupuestoVentasLineasLogic()	{		
		return presupuestoventaslineasLogic;
	}

	public void setPresupuestoVentasLineasLogic(PresupuestoVentasLineasLogic presupuestoventaslineasLogic) {
		this.presupuestoventaslineasLogic = presupuestoventaslineasLogic;
	}
	
	
	public void setsFinalQueryGeneral(String sFinalQueryGeneral) {
		this.sFinalQueryGeneral=sFinalQueryGeneral;
	}
	
	public String getsFinalQueryGeneral() {
		return this.sFinalQueryGeneral;
	}
		
	public Boolean getIsGuardarCambiosEnLote() {
		return isGuardarCambiosEnLote;
	}

	public void setIsGuardarCambiosEnLote(Boolean isGuardarCambiosEnLote) {
		this.isGuardarCambiosEnLote = isGuardarCambiosEnLote;
	}
	
	public Boolean getIsCargarCombosDependencia() {
		return isCargarCombosDependencia;
	}

	public void setIsCargarCombosDependencia(Boolean isCargarCombosDependencia) {
		this.isCargarCombosDependencia = isCargarCombosDependencia;
	}
	
	public Boolean getIsEsNuevoPresupuestoVentasLineas() {
		return isEsNuevoPresupuestoVentasLineas;
	}

	public void setIsEsNuevoPresupuestoVentasLineas(Boolean isEsNuevoPresupuestoVentasLineas) {
		this.isEsNuevoPresupuestoVentasLineas = isEsNuevoPresupuestoVentasLineas;
	}

	public Boolean getEsParaAccionDesdeFormularioPresupuestoVentasLineas() {
		return esParaAccionDesdeFormularioPresupuestoVentasLineas;
	}
	
	public void setEsParaAccionDesdeFormularioPresupuestoVentasLineas(Boolean esParaAccionDesdeFormularioPresupuestoVentasLineas) {
		this.esParaAccionDesdeFormularioPresupuestoVentasLineas = esParaAccionDesdeFormularioPresupuestoVentasLineas;
	}
	
	public Boolean getIsEsMantenimientoRelacionesRelacionadoUnico() {
		return isEsMantenimientoRelacionesRelacionadoUnico;
	}

	public void setIsEsMantenimientoRelacionesRelacionadoUnico(Boolean isEsMantenimientoRelacionesRelacionadoUnico) {
		this.isEsMantenimientoRelacionesRelacionadoUnico = isEsMantenimientoRelacionesRelacionadoUnico;
	}

	public Boolean getIsEsMantenimientoRelaciones() {
		return isEsMantenimientoRelaciones;
	}

	public void setIsEsMantenimientoRelaciones(Boolean isEsMantenimientoRelaciones) {
		this.isEsMantenimientoRelaciones = isEsMantenimientoRelaciones;
	}

	public Boolean getIsEsMantenimientoRelacionado() {
		return isEsMantenimientoRelacionado;
	}

	public void setIsEsMantenimientoRelacionado(Boolean isEsMantenimientoRelacionado) {
		this.isEsMantenimientoRelacionado = isEsMantenimientoRelacionado;
	}

	public Boolean getesParaBusquedaForeignKey() {
		return esParaBusquedaForeignKey;
	}

	public void setesParaBusquedaForeignKey(Boolean esParaBusquedaForeignKey) {
		this.esParaBusquedaForeignKey = esParaBusquedaForeignKey;
	}

	public Boolean getIsContieneImagenes() {
		return isContieneImagenes;
	}

	public void setIsContieneImagenes(Boolean isContieneImagenes) {
		this.isContieneImagenes = isContieneImagenes;
	}		
	
	
	public void cargarCombosEmpresasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.empresasForeignKey=new ArrayList<Empresa>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			EmpresaLogic empresaLogic=new EmpresaLogic();

			//empresaLogic.getEmpresaDataAccess().setIsForForeingKeyData(true);

			if(this.presupuestoventaslineasSessionBean==null) {
				this.presupuestoventaslineasSessionBean=new PresupuestoVentasLineasSessionBean();
			}

			if(!this.presupuestoventaslineasSessionBean.getisBusquedaDesdeForeignKeySesionEmpresa()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//empresaLogic.getEmpresaDataAccess().setIsForForeingKeyData(true);

					empresaLogic.getTodosEmpresasWithConnection(sFinalQuery,new Pagination());

					this.empresasForeignKey=empresaLogic.getEmpresas();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaEmpresa(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					empresaLogic.getEntityWithConnection(presupuestoventaslineasSessionBean.getlidEmpresaActual());
					this.empresasForeignKey.add(empresaLogic.getEmpresa());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosSucursalsForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.sucursalsForeignKey=new ArrayList<Sucursal>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			SucursalLogic sucursalLogic=new SucursalLogic();

			//sucursalLogic.getSucursalDataAccess().setIsForForeingKeyData(true);

			if(this.presupuestoventaslineasSessionBean==null) {
				this.presupuestoventaslineasSessionBean=new PresupuestoVentasLineasSessionBean();
			}

			if(!this.presupuestoventaslineasSessionBean.getisBusquedaDesdeForeignKeySesionSucursal()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//sucursalLogic.getSucursalDataAccess().setIsForForeingKeyData(true);

					sucursalLogic.getTodosSucursalsWithConnection(sFinalQuery,new Pagination());

					this.sucursalsForeignKey=sucursalLogic.getSucursals();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaSucursal(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					sucursalLogic.getEntityWithConnection(presupuestoventaslineasSessionBean.getlidSucursalActual());
					this.sucursalsForeignKey.add(sucursalLogic.getSucursal());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosEjerciciosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.ejerciciosForeignKey=new ArrayList<Ejercicio>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			EjercicioLogic ejercicioLogic=new EjercicioLogic();

			//ejercicioLogic.getEjercicioDataAccess().setIsForForeingKeyData(true);

			if(this.presupuestoventaslineasSessionBean==null) {
				this.presupuestoventaslineasSessionBean=new PresupuestoVentasLineasSessionBean();
			}

			if(!this.presupuestoventaslineasSessionBean.getisBusquedaDesdeForeignKeySesionEjercicio()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//ejercicioLogic.getEjercicioDataAccess().setIsForForeingKeyData(true);

					ejercicioLogic.getTodosEjerciciosWithConnection(sFinalQuery,new Pagination());

					this.ejerciciosForeignKey=ejercicioLogic.getEjercicios();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaEjercicio(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					ejercicioLogic.getEntityWithConnection(presupuestoventaslineasSessionBean.getlidEjercicioActual());
					this.ejerciciosForeignKey.add(ejercicioLogic.getEjercicio());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosPeriodosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.periodosForeignKey=new ArrayList<Periodo>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			PeriodoLogic periodoLogic=new PeriodoLogic();

			//periodoLogic.getPeriodoDataAccess().setIsForForeingKeyData(true);

			if(this.presupuestoventaslineasSessionBean==null) {
				this.presupuestoventaslineasSessionBean=new PresupuestoVentasLineasSessionBean();
			}

			if(!this.presupuestoventaslineasSessionBean.getisBusquedaDesdeForeignKeySesionPeriodo()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//periodoLogic.getPeriodoDataAccess().setIsForForeingKeyData(true);

					periodoLogic.getTodosPeriodosWithConnection(sFinalQuery,new Pagination());

					this.periodosForeignKey=periodoLogic.getPeriodos();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaPeriodo(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					periodoLogic.getEntityWithConnection(presupuestoventaslineasSessionBean.getlidPeriodoActual());
					this.periodosForeignKey.add(periodoLogic.getPeriodo());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosVendedorsForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.vendedorsForeignKey=new ArrayList<Vendedor>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			VendedorLogic vendedorLogic=new VendedorLogic();

			//vendedorLogic.getVendedorDataAccess().setIsForForeingKeyData(true);

			if(this.presupuestoventaslineasSessionBean==null) {
				this.presupuestoventaslineasSessionBean=new PresupuestoVentasLineasSessionBean();
			}

			if(!this.presupuestoventaslineasSessionBean.getisBusquedaDesdeForeignKeySesionVendedor()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//vendedorLogic.getVendedorDataAccess().setIsForForeingKeyData(true);

					vendedorLogic.getTodosVendedorsWithConnection(sFinalQuery,new Pagination());

					this.vendedorsForeignKey=vendedorLogic.getVendedors();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaVendedor(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					vendedorLogic.getEntityWithConnection(presupuestoventaslineasSessionBean.getlidVendedorActual());
					this.vendedorsForeignKey.add(vendedorLogic.getVendedor());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosPaissForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.paissForeignKey=new ArrayList<Pais>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			PaisLogic paisLogic=new PaisLogic();

			//paisLogic.getPaisDataAccess().setIsForForeingKeyData(true);

			if(this.presupuestoventaslineasSessionBean==null) {
				this.presupuestoventaslineasSessionBean=new PresupuestoVentasLineasSessionBean();
			}

			if(!this.presupuestoventaslineasSessionBean.getisBusquedaDesdeForeignKeySesionPais()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//paisLogic.getPaisDataAccess().setIsForForeingKeyData(true);

					paisLogic.getTodosPaissWithConnection(sFinalQuery,new Pagination());

					this.paissForeignKey=paisLogic.getPaiss();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaPais(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					paisLogic.getEntityWithConnection(presupuestoventaslineasSessionBean.getlidPaisActual());
					this.paissForeignKey.add(paisLogic.getPais());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosCiudadsForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.ciudadsForeignKey=new ArrayList<Ciudad>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			CiudadLogic ciudadLogic=new CiudadLogic();

			//ciudadLogic.getCiudadDataAccess().setIsForForeingKeyData(true);

			if(this.presupuestoventaslineasSessionBean==null) {
				this.presupuestoventaslineasSessionBean=new PresupuestoVentasLineasSessionBean();
			}

			if(!this.presupuestoventaslineasSessionBean.getisBusquedaDesdeForeignKeySesionCiudad()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//ciudadLogic.getCiudadDataAccess().setIsForForeingKeyData(true);

					ciudadLogic.getTodosCiudadsWithConnection(sFinalQuery,new Pagination());

					this.ciudadsForeignKey=ciudadLogic.getCiudads();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaCiudad(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					ciudadLogic.getEntityWithConnection(presupuestoventaslineasSessionBean.getlidCiudadActual());
					this.ciudadsForeignKey.add(ciudadLogic.getCiudad());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosZonasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.zonasForeignKey=new ArrayList<Zona>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			Zona zonaNulo = new Zona();

			ZonaLogic zonaLogic=new ZonaLogic();

			//zonaLogic.getZonaDataAccess().setIsForForeingKeyData(true);

			if(this.presupuestoventaslineasSessionBean==null) {
				this.presupuestoventaslineasSessionBean=new PresupuestoVentasLineasSessionBean();
			}

			if(!this.presupuestoventaslineasSessionBean.getisBusquedaDesdeForeignKeySesionZona()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//zonaLogic.getZonaDataAccess().setIsForForeingKeyData(true);

					zonaLogic.getTodosZonasWithConnection(sFinalQuery,new Pagination());

					this.zonasForeignKey=zonaLogic.getZonas();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}

				this.zonasForeignKey.add(0, zonaNulo);

				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaZona(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					zonaLogic.getEntityWithConnection(presupuestoventaslineasSessionBean.getlidZonaActual());
					this.zonasForeignKey.add(zonaLogic.getZona());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosLineasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.lineasForeignKey=new ArrayList<Linea>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			LineaLogic lineaLogic=new LineaLogic();

			//lineaLogic.getLineaDataAccess().setIsForForeingKeyData(true);

			if(this.presupuestoventaslineasSessionBean==null) {
				this.presupuestoventaslineasSessionBean=new PresupuestoVentasLineasSessionBean();
			}

			if(!this.presupuestoventaslineasSessionBean.getisBusquedaDesdeForeignKeySesionLinea()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//lineaLogic.getLineaDataAccess().setIsForForeingKeyData(true);

					lineaLogic.getTodosLineasWithConnection(sFinalQuery,new Pagination());

					this.lineasForeignKey=lineaLogic.getLineas();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaLinea(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					lineaLogic.getEntityWithConnection(presupuestoventaslineasSessionBean.getlidLineaActual());
					this.lineasForeignKey.add(lineaLogic.getLinea());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosLineaGruposForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.lineagruposForeignKey=new ArrayList<Linea>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			Linea lineagrupoNulo = new Linea();

			LineaLogic lineaLogic=new LineaLogic();

			//lineaLogic.getLineaDataAccess().setIsForForeingKeyData(true);

			if(this.presupuestoventaslineasSessionBean==null) {
				this.presupuestoventaslineasSessionBean=new PresupuestoVentasLineasSessionBean();
			}

			if(!this.presupuestoventaslineasSessionBean.getisBusquedaDesdeForeignKeySesionLineaGrupo()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//lineagrupoLogic.getLineaDataAccess().setIsForForeingKeyData(true);

					lineaLogic.getTodosLineasWithConnection(sFinalQuery,new Pagination());

					this.lineagruposForeignKey=lineaLogic.getLineas();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}

				this.lineagruposForeignKey.add(0, lineagrupoNulo);

				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaLineaGrupo(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					lineaLogic.getEntityWithConnection(presupuestoventaslineasSessionBean.getlidLineaGrupoActual());
					this.lineagruposForeignKey.add(lineaLogic.getLinea());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosLineaCategoriasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.lineacategoriasForeignKey=new ArrayList<Linea>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			Linea lineacategoriaNulo = new Linea();

			LineaLogic lineaLogic=new LineaLogic();

			//lineaLogic.getLineaDataAccess().setIsForForeingKeyData(true);

			if(this.presupuestoventaslineasSessionBean==null) {
				this.presupuestoventaslineasSessionBean=new PresupuestoVentasLineasSessionBean();
			}

			if(!this.presupuestoventaslineasSessionBean.getisBusquedaDesdeForeignKeySesionLineaCategoria()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//lineacategoriaLogic.getLineaDataAccess().setIsForForeingKeyData(true);

					lineaLogic.getTodosLineasWithConnection(sFinalQuery,new Pagination());

					this.lineacategoriasForeignKey=lineaLogic.getLineas();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}

				this.lineacategoriasForeignKey.add(0, lineacategoriaNulo);

				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaLineaCategoria(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					lineaLogic.getEntityWithConnection(presupuestoventaslineasSessionBean.getlidLineaCategoriaActual());
					this.lineacategoriasForeignKey.add(lineaLogic.getLinea());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosLineaMarcasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.lineamarcasForeignKey=new ArrayList<Linea>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			Linea lineamarcaNulo = new Linea();

			LineaLogic lineaLogic=new LineaLogic();

			//lineaLogic.getLineaDataAccess().setIsForForeingKeyData(true);

			if(this.presupuestoventaslineasSessionBean==null) {
				this.presupuestoventaslineasSessionBean=new PresupuestoVentasLineasSessionBean();
			}

			if(!this.presupuestoventaslineasSessionBean.getisBusquedaDesdeForeignKeySesionLineaMarca()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//lineamarcaLogic.getLineaDataAccess().setIsForForeingKeyData(true);

					lineaLogic.getTodosLineasWithConnection(sFinalQuery,new Pagination());

					this.lineamarcasForeignKey=lineaLogic.getLineas();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}

				this.lineamarcasForeignKey.add(0, lineamarcaNulo);

				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaLineaMarca(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					lineaLogic.getEntityWithConnection(presupuestoventaslineasSessionBean.getlidLineaMarcaActual());
					this.lineamarcasForeignKey.add(lineaLogic.getLinea());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	
	
	public void setActualEmpresaForeignKey(Long idEmpresaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Empresa  empresaTemp=null;

			for(Empresa empresaAux:empresasForeignKey) {
				if(empresaAux.getId()!=null && empresaAux.getId().equals(idEmpresaSeleccionado)) {
					empresaTemp=empresaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(empresaTemp!=null) {

					if(this.presupuestoventaslineas!=null) {
						this.presupuestoventaslineas.setEmpresa(empresaTemp);
					}

					if(this.jInternalFrameDetalleFormPresupuestoVentasLineas!=null) {
						this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_empresaPresupuestoVentasLineas.setSelectedItem(empresaTemp);
					}
				} else {
					//jComboBoxid_empresaPresupuestoVentasLineas.setSelectedItem(empresaTemp);
					if(this.jInternalFrameDetalleFormPresupuestoVentasLineas!=null) {
						if(this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_empresaPresupuestoVentasLineas.getItemCount()>0) {
							this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_empresaPresupuestoVentasLineas.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualEmpresaForeignKeyDescripcion(Long idEmpresaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Empresa  empresaTemp=null;

			for(Empresa empresaAux:empresasForeignKey) {
				if(empresaAux.getId()!=null && empresaAux.getId().equals(idEmpresaSeleccionado)) {
					empresaTemp=empresaAux;
					break;
				}
			}


			sDescripcion=EmpresaConstantesFunciones.getEmpresaDescripcion(empresaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualEmpresaForeignKeyGenerico(Long idEmpresaSeleccionado,JComboBox jComboBoxid_empresaPresupuestoVentasLineasGenerico)throws Exception
	{
		try
		{
			Empresa  empresaTemp=null;

			for(Empresa empresaAux:empresasForeignKey) {
				if(empresaAux.getId()!=null && empresaAux.getId().equals(idEmpresaSeleccionado)) {
					empresaTemp=empresaAux;
					break;
				}
			}

			if(empresaTemp!=null) {
				jComboBoxid_empresaPresupuestoVentasLineasGenerico.setSelectedItem(empresaTemp);
			} else {
				if(jComboBoxid_empresaPresupuestoVentasLineasGenerico!=null && jComboBoxid_empresaPresupuestoVentasLineasGenerico.getItemCount()>0) {
					jComboBoxid_empresaPresupuestoVentasLineasGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualSucursalForeignKey(Long idSucursalSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Sucursal  sucursalTemp=null;

			for(Sucursal sucursalAux:sucursalsForeignKey) {
				if(sucursalAux.getId()!=null && sucursalAux.getId().equals(idSucursalSeleccionado)) {
					sucursalTemp=sucursalAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(sucursalTemp!=null) {

					if(this.presupuestoventaslineas!=null) {
						this.presupuestoventaslineas.setSucursal(sucursalTemp);
					}

					if(this.jInternalFrameDetalleFormPresupuestoVentasLineas!=null) {
						this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_sucursalPresupuestoVentasLineas.setSelectedItem(sucursalTemp);
					}
				} else {
					//jComboBoxid_sucursalPresupuestoVentasLineas.setSelectedItem(sucursalTemp);
					if(this.jInternalFrameDetalleFormPresupuestoVentasLineas!=null) {
						if(this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_sucursalPresupuestoVentasLineas.getItemCount()>0) {
							this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_sucursalPresupuestoVentasLineas.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualSucursalForeignKeyDescripcion(Long idSucursalSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Sucursal  sucursalTemp=null;

			for(Sucursal sucursalAux:sucursalsForeignKey) {
				if(sucursalAux.getId()!=null && sucursalAux.getId().equals(idSucursalSeleccionado)) {
					sucursalTemp=sucursalAux;
					break;
				}
			}


			sDescripcion=SucursalConstantesFunciones.getSucursalDescripcion(sucursalTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualSucursalForeignKeyGenerico(Long idSucursalSeleccionado,JComboBox jComboBoxid_sucursalPresupuestoVentasLineasGenerico)throws Exception
	{
		try
		{
			Sucursal  sucursalTemp=null;

			for(Sucursal sucursalAux:sucursalsForeignKey) {
				if(sucursalAux.getId()!=null && sucursalAux.getId().equals(idSucursalSeleccionado)) {
					sucursalTemp=sucursalAux;
					break;
				}
			}

			if(sucursalTemp!=null) {
				jComboBoxid_sucursalPresupuestoVentasLineasGenerico.setSelectedItem(sucursalTemp);
			} else {
				if(jComboBoxid_sucursalPresupuestoVentasLineasGenerico!=null && jComboBoxid_sucursalPresupuestoVentasLineasGenerico.getItemCount()>0) {
					jComboBoxid_sucursalPresupuestoVentasLineasGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualEjercicioForeignKey(Long idEjercicioSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Ejercicio  ejercicioTemp=null;

			for(Ejercicio ejercicioAux:ejerciciosForeignKey) {
				if(ejercicioAux.getId()!=null && ejercicioAux.getId().equals(idEjercicioSeleccionado)) {
					ejercicioTemp=ejercicioAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(ejercicioTemp!=null) {

					if(this.presupuestoventaslineas!=null) {
						this.presupuestoventaslineas.setEjercicio(ejercicioTemp);
					}

					if(this.jInternalFrameDetalleFormPresupuestoVentasLineas!=null) {
						this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_ejercicioPresupuestoVentasLineas.setSelectedItem(ejercicioTemp);
					}
				} else {
					//jComboBoxid_ejercicioPresupuestoVentasLineas.setSelectedItem(ejercicioTemp);
					if(this.jInternalFrameDetalleFormPresupuestoVentasLineas!=null) {
						if(this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_ejercicioPresupuestoVentasLineas.getItemCount()>0) {
							this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_ejercicioPresupuestoVentasLineas.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualEjercicioForeignKeyDescripcion(Long idEjercicioSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Ejercicio  ejercicioTemp=null;

			for(Ejercicio ejercicioAux:ejerciciosForeignKey) {
				if(ejercicioAux.getId()!=null && ejercicioAux.getId().equals(idEjercicioSeleccionado)) {
					ejercicioTemp=ejercicioAux;
					break;
				}
			}


			sDescripcion=EjercicioConstantesFunciones.getEjercicioDescripcion(ejercicioTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualEjercicioForeignKeyGenerico(Long idEjercicioSeleccionado,JComboBox jComboBoxid_ejercicioPresupuestoVentasLineasGenerico)throws Exception
	{
		try
		{
			Ejercicio  ejercicioTemp=null;

			for(Ejercicio ejercicioAux:ejerciciosForeignKey) {
				if(ejercicioAux.getId()!=null && ejercicioAux.getId().equals(idEjercicioSeleccionado)) {
					ejercicioTemp=ejercicioAux;
					break;
				}
			}

			if(ejercicioTemp!=null) {
				jComboBoxid_ejercicioPresupuestoVentasLineasGenerico.setSelectedItem(ejercicioTemp);
			} else {
				if(jComboBoxid_ejercicioPresupuestoVentasLineasGenerico!=null && jComboBoxid_ejercicioPresupuestoVentasLineasGenerico.getItemCount()>0) {
					jComboBoxid_ejercicioPresupuestoVentasLineasGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualPeriodoForeignKey(Long idPeriodoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Periodo  periodoTemp=null;

			for(Periodo periodoAux:periodosForeignKey) {
				if(periodoAux.getId()!=null && periodoAux.getId().equals(idPeriodoSeleccionado)) {
					periodoTemp=periodoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(periodoTemp!=null) {

					if(this.presupuestoventaslineas!=null) {
						this.presupuestoventaslineas.setPeriodo(periodoTemp);
					}

					if(this.jInternalFrameDetalleFormPresupuestoVentasLineas!=null) {
						this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_periodoPresupuestoVentasLineas.setSelectedItem(periodoTemp);
					}
				} else {
					//jComboBoxid_periodoPresupuestoVentasLineas.setSelectedItem(periodoTemp);
					if(this.jInternalFrameDetalleFormPresupuestoVentasLineas!=null) {
						if(this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_periodoPresupuestoVentasLineas.getItemCount()>0) {
							this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_periodoPresupuestoVentasLineas.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualPeriodoForeignKeyDescripcion(Long idPeriodoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Periodo  periodoTemp=null;

			for(Periodo periodoAux:periodosForeignKey) {
				if(periodoAux.getId()!=null && periodoAux.getId().equals(idPeriodoSeleccionado)) {
					periodoTemp=periodoAux;
					break;
				}
			}


			sDescripcion=PeriodoConstantesFunciones.getPeriodoDescripcion(periodoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualPeriodoForeignKeyGenerico(Long idPeriodoSeleccionado,JComboBox jComboBoxid_periodoPresupuestoVentasLineasGenerico)throws Exception
	{
		try
		{
			Periodo  periodoTemp=null;

			for(Periodo periodoAux:periodosForeignKey) {
				if(periodoAux.getId()!=null && periodoAux.getId().equals(idPeriodoSeleccionado)) {
					periodoTemp=periodoAux;
					break;
				}
			}

			if(periodoTemp!=null) {
				jComboBoxid_periodoPresupuestoVentasLineasGenerico.setSelectedItem(periodoTemp);
			} else {
				if(jComboBoxid_periodoPresupuestoVentasLineasGenerico!=null && jComboBoxid_periodoPresupuestoVentasLineasGenerico.getItemCount()>0) {
					jComboBoxid_periodoPresupuestoVentasLineasGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualVendedorForeignKey(Long idVendedorSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Vendedor  vendedorTemp=null;

			for(Vendedor vendedorAux:vendedorsForeignKey) {
				if(vendedorAux.getId()!=null && vendedorAux.getId().equals(idVendedorSeleccionado)) {
					vendedorTemp=vendedorAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(vendedorTemp!=null) {

					if(this.presupuestoventaslineas!=null) {
						this.presupuestoventaslineas.setVendedor(vendedorTemp);
					}

					if(this.jInternalFrameDetalleFormPresupuestoVentasLineas!=null) {
						this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_vendedorPresupuestoVentasLineas.setSelectedItem(vendedorTemp);
					}
				} else {
					//jComboBoxid_vendedorPresupuestoVentasLineas.setSelectedItem(vendedorTemp);
					if(this.jInternalFrameDetalleFormPresupuestoVentasLineas!=null) {
						if(this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_vendedorPresupuestoVentasLineas.getItemCount()>0) {
							this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_vendedorPresupuestoVentasLineas.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdVendedor") || sFormularioTipoBusqueda.equals("Todos")){
					if(vendedorTemp!=null && jComboBoxid_vendedorFK_IdVendedorPresupuestoVentasLineas!=null) {
						jComboBoxid_vendedorFK_IdVendedorPresupuestoVentasLineas.setSelectedItem(vendedorTemp);
					} else {
						if(jComboBoxid_vendedorFK_IdVendedorPresupuestoVentasLineas!=null) {
							//jComboBoxid_vendedorFK_IdVendedorPresupuestoVentasLineas.setSelectedItem(vendedorTemp);
							if(jComboBoxid_vendedorFK_IdVendedorPresupuestoVentasLineas.getItemCount()>0) {
								jComboBoxid_vendedorFK_IdVendedorPresupuestoVentasLineas.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualVendedorForeignKeyDescripcion(Long idVendedorSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Vendedor  vendedorTemp=null;

			for(Vendedor vendedorAux:vendedorsForeignKey) {
				if(vendedorAux.getId()!=null && vendedorAux.getId().equals(idVendedorSeleccionado)) {
					vendedorTemp=vendedorAux;
					break;
				}
			}


			sDescripcion=VendedorConstantesFunciones.getVendedorDescripcion(vendedorTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualVendedorForeignKeyGenerico(Long idVendedorSeleccionado,JComboBox jComboBoxid_vendedorPresupuestoVentasLineasGenerico)throws Exception
	{
		try
		{
			Vendedor  vendedorTemp=null;

			for(Vendedor vendedorAux:vendedorsForeignKey) {
				if(vendedorAux.getId()!=null && vendedorAux.getId().equals(idVendedorSeleccionado)) {
					vendedorTemp=vendedorAux;
					break;
				}
			}

			if(vendedorTemp!=null) {
				jComboBoxid_vendedorPresupuestoVentasLineasGenerico.setSelectedItem(vendedorTemp);
			} else {
				if(jComboBoxid_vendedorPresupuestoVentasLineasGenerico!=null && jComboBoxid_vendedorPresupuestoVentasLineasGenerico.getItemCount()>0) {
					jComboBoxid_vendedorPresupuestoVentasLineasGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualPaisForeignKey(Long idPaisSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Pais  paisTemp=null;

			for(Pais paisAux:paissForeignKey) {
				if(paisAux.getId()!=null && paisAux.getId().equals(idPaisSeleccionado)) {
					paisTemp=paisAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(paisTemp!=null) {

					if(this.presupuestoventaslineas!=null) {
						this.presupuestoventaslineas.setPais(paisTemp);
					}

					if(this.jInternalFrameDetalleFormPresupuestoVentasLineas!=null) {
						this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_paisPresupuestoVentasLineas.setSelectedItem(paisTemp);
					}
				} else {
					//jComboBoxid_paisPresupuestoVentasLineas.setSelectedItem(paisTemp);
					if(this.jInternalFrameDetalleFormPresupuestoVentasLineas!=null) {
						if(this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_paisPresupuestoVentasLineas.getItemCount()>0) {
							this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_paisPresupuestoVentasLineas.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdPais") || sFormularioTipoBusqueda.equals("Todos")){
					if(paisTemp!=null && jComboBoxid_paisFK_IdPaisPresupuestoVentasLineas!=null) {
						jComboBoxid_paisFK_IdPaisPresupuestoVentasLineas.setSelectedItem(paisTemp);
					} else {
						if(jComboBoxid_paisFK_IdPaisPresupuestoVentasLineas!=null) {
							//jComboBoxid_paisFK_IdPaisPresupuestoVentasLineas.setSelectedItem(paisTemp);
							if(jComboBoxid_paisFK_IdPaisPresupuestoVentasLineas.getItemCount()>0) {
								jComboBoxid_paisFK_IdPaisPresupuestoVentasLineas.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualPaisForeignKeyDescripcion(Long idPaisSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Pais  paisTemp=null;

			for(Pais paisAux:paissForeignKey) {
				if(paisAux.getId()!=null && paisAux.getId().equals(idPaisSeleccionado)) {
					paisTemp=paisAux;
					break;
				}
			}


			sDescripcion=PaisConstantesFunciones.getPaisDescripcion(paisTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualPaisForeignKeyGenerico(Long idPaisSeleccionado,JComboBox jComboBoxid_paisPresupuestoVentasLineasGenerico)throws Exception
	{
		try
		{
			Pais  paisTemp=null;

			for(Pais paisAux:paissForeignKey) {
				if(paisAux.getId()!=null && paisAux.getId().equals(idPaisSeleccionado)) {
					paisTemp=paisAux;
					break;
				}
			}

			if(paisTemp!=null) {
				jComboBoxid_paisPresupuestoVentasLineasGenerico.setSelectedItem(paisTemp);
			} else {
				if(jComboBoxid_paisPresupuestoVentasLineasGenerico!=null && jComboBoxid_paisPresupuestoVentasLineasGenerico.getItemCount()>0) {
					jComboBoxid_paisPresupuestoVentasLineasGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualCiudadForeignKey(Long idCiudadSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Ciudad  ciudadTemp=null;

			for(Ciudad ciudadAux:ciudadsForeignKey) {
				if(ciudadAux.getId()!=null && ciudadAux.getId().equals(idCiudadSeleccionado)) {
					ciudadTemp=ciudadAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(ciudadTemp!=null) {

					if(this.presupuestoventaslineas!=null) {
						this.presupuestoventaslineas.setCiudad(ciudadTemp);
					}

					if(this.jInternalFrameDetalleFormPresupuestoVentasLineas!=null) {
						this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_ciudadPresupuestoVentasLineas.setSelectedItem(ciudadTemp);
					}
				} else {
					//jComboBoxid_ciudadPresupuestoVentasLineas.setSelectedItem(ciudadTemp);
					if(this.jInternalFrameDetalleFormPresupuestoVentasLineas!=null) {
						if(this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_ciudadPresupuestoVentasLineas.getItemCount()>0) {
							this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_ciudadPresupuestoVentasLineas.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdCiudad") || sFormularioTipoBusqueda.equals("Todos")){
					if(ciudadTemp!=null && jComboBoxid_ciudadFK_IdCiudadPresupuestoVentasLineas!=null) {
						jComboBoxid_ciudadFK_IdCiudadPresupuestoVentasLineas.setSelectedItem(ciudadTemp);
					} else {
						if(jComboBoxid_ciudadFK_IdCiudadPresupuestoVentasLineas!=null) {
							//jComboBoxid_ciudadFK_IdCiudadPresupuestoVentasLineas.setSelectedItem(ciudadTemp);
							if(jComboBoxid_ciudadFK_IdCiudadPresupuestoVentasLineas.getItemCount()>0) {
								jComboBoxid_ciudadFK_IdCiudadPresupuestoVentasLineas.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualCiudadForeignKeyDescripcion(Long idCiudadSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Ciudad  ciudadTemp=null;

			for(Ciudad ciudadAux:ciudadsForeignKey) {
				if(ciudadAux.getId()!=null && ciudadAux.getId().equals(idCiudadSeleccionado)) {
					ciudadTemp=ciudadAux;
					break;
				}
			}


			sDescripcion=CiudadConstantesFunciones.getCiudadDescripcion(ciudadTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualCiudadForeignKeyGenerico(Long idCiudadSeleccionado,JComboBox jComboBoxid_ciudadPresupuestoVentasLineasGenerico)throws Exception
	{
		try
		{
			Ciudad  ciudadTemp=null;

			for(Ciudad ciudadAux:ciudadsForeignKey) {
				if(ciudadAux.getId()!=null && ciudadAux.getId().equals(idCiudadSeleccionado)) {
					ciudadTemp=ciudadAux;
					break;
				}
			}

			if(ciudadTemp!=null) {
				jComboBoxid_ciudadPresupuestoVentasLineasGenerico.setSelectedItem(ciudadTemp);
			} else {
				if(jComboBoxid_ciudadPresupuestoVentasLineasGenerico!=null && jComboBoxid_ciudadPresupuestoVentasLineasGenerico.getItemCount()>0) {
					jComboBoxid_ciudadPresupuestoVentasLineasGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualZonaForeignKey(Long idZonaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Zona  zonaTemp=null;

			for(Zona zonaAux:zonasForeignKey) {
				if(zonaAux.getId()!=null && zonaAux.getId().equals(idZonaSeleccionado)) {
					zonaTemp=zonaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(zonaTemp!=null) {

					if(this.presupuestoventaslineas!=null) {
						this.presupuestoventaslineas.setZona(zonaTemp);
					}

					if(this.jInternalFrameDetalleFormPresupuestoVentasLineas!=null) {
						this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_zonaPresupuestoVentasLineas.setSelectedItem(zonaTemp);
					}
				} else {
					//jComboBoxid_zonaPresupuestoVentasLineas.setSelectedItem(zonaTemp);
					if(this.jInternalFrameDetalleFormPresupuestoVentasLineas!=null) {
						if(this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_zonaPresupuestoVentasLineas.getItemCount()>0) {
							this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_zonaPresupuestoVentasLineas.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdZona") || sFormularioTipoBusqueda.equals("Todos")){
					if(zonaTemp!=null && jComboBoxid_zonaFK_IdZonaPresupuestoVentasLineas!=null) {
						jComboBoxid_zonaFK_IdZonaPresupuestoVentasLineas.setSelectedItem(zonaTemp);
					} else {
						if(jComboBoxid_zonaFK_IdZonaPresupuestoVentasLineas!=null) {
							//jComboBoxid_zonaFK_IdZonaPresupuestoVentasLineas.setSelectedItem(zonaTemp);
							if(jComboBoxid_zonaFK_IdZonaPresupuestoVentasLineas.getItemCount()>0) {
								jComboBoxid_zonaFK_IdZonaPresupuestoVentasLineas.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualZonaForeignKeyDescripcion(Long idZonaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Zona  zonaTemp=null;

			for(Zona zonaAux:zonasForeignKey) {
				if(zonaAux.getId()!=null && zonaAux.getId().equals(idZonaSeleccionado)) {
					zonaTemp=zonaAux;
					break;
				}
			}


			sDescripcion=ZonaConstantesFunciones.getZonaDescripcion(zonaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualZonaForeignKeyGenerico(Long idZonaSeleccionado,JComboBox jComboBoxid_zonaPresupuestoVentasLineasGenerico)throws Exception
	{
		try
		{
			Zona  zonaTemp=null;

			for(Zona zonaAux:zonasForeignKey) {
				if(zonaAux.getId()!=null && zonaAux.getId().equals(idZonaSeleccionado)) {
					zonaTemp=zonaAux;
					break;
				}
			}

			if(zonaTemp!=null) {
				jComboBoxid_zonaPresupuestoVentasLineasGenerico.setSelectedItem(zonaTemp);
			} else {
				if(jComboBoxid_zonaPresupuestoVentasLineasGenerico!=null && jComboBoxid_zonaPresupuestoVentasLineasGenerico.getItemCount()>0) {
					jComboBoxid_zonaPresupuestoVentasLineasGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualLineaForeignKey(Long idLineaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Linea  lineaTemp=null;

			for(Linea lineaAux:lineasForeignKey) {
				if(lineaAux.getId()!=null && lineaAux.getId().equals(idLineaSeleccionado)) {
					lineaTemp=lineaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(lineaTemp!=null) {

					if(this.presupuestoventaslineas!=null) {
						this.presupuestoventaslineas.setLinea(lineaTemp);
					}

					if(this.jInternalFrameDetalleFormPresupuestoVentasLineas!=null) {
						this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_lineaPresupuestoVentasLineas.setSelectedItem(lineaTemp);
					}
				} else {
					//jComboBoxid_lineaPresupuestoVentasLineas.setSelectedItem(lineaTemp);
					if(this.jInternalFrameDetalleFormPresupuestoVentasLineas!=null) {
						if(this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_lineaPresupuestoVentasLineas.getItemCount()>0) {
							this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_lineaPresupuestoVentasLineas.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdLinea") || sFormularioTipoBusqueda.equals("Todos")){
					if(lineaTemp!=null && jComboBoxid_lineaFK_IdLineaPresupuestoVentasLineas!=null) {
						jComboBoxid_lineaFK_IdLineaPresupuestoVentasLineas.setSelectedItem(lineaTemp);
					} else {
						if(jComboBoxid_lineaFK_IdLineaPresupuestoVentasLineas!=null) {
							//jComboBoxid_lineaFK_IdLineaPresupuestoVentasLineas.setSelectedItem(lineaTemp);
							if(jComboBoxid_lineaFK_IdLineaPresupuestoVentasLineas.getItemCount()>0) {
								jComboBoxid_lineaFK_IdLineaPresupuestoVentasLineas.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualLineaForeignKeyDescripcion(Long idLineaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Linea  lineaTemp=null;

			for(Linea lineaAux:lineasForeignKey) {
				if(lineaAux.getId()!=null && lineaAux.getId().equals(idLineaSeleccionado)) {
					lineaTemp=lineaAux;
					break;
				}
			}


			sDescripcion=LineaConstantesFunciones.getLineaDescripcion(lineaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualLineaForeignKeyGenerico(Long idLineaSeleccionado,JComboBox jComboBoxid_lineaPresupuestoVentasLineasGenerico)throws Exception
	{
		try
		{
			Linea  lineaTemp=null;

			for(Linea lineaAux:lineasForeignKey) {
				if(lineaAux.getId()!=null && lineaAux.getId().equals(idLineaSeleccionado)) {
					lineaTemp=lineaAux;
					break;
				}
			}

			if(lineaTemp!=null) {
				jComboBoxid_lineaPresupuestoVentasLineasGenerico.setSelectedItem(lineaTemp);
			} else {
				if(jComboBoxid_lineaPresupuestoVentasLineasGenerico!=null && jComboBoxid_lineaPresupuestoVentasLineasGenerico.getItemCount()>0) {
					jComboBoxid_lineaPresupuestoVentasLineasGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualLineaGrupoForeignKey(Long idLineaGrupoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Linea  lineagrupoTemp=null;

			for(Linea lineagrupoAux:lineagruposForeignKey) {
				if(lineagrupoAux.getId()!=null && lineagrupoAux.getId().equals(idLineaGrupoSeleccionado)) {
					lineagrupoTemp=lineagrupoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(lineagrupoTemp!=null) {

					if(this.presupuestoventaslineas!=null) {
						this.presupuestoventaslineas.setLineaGrupo(lineagrupoTemp);
					}

					if(this.jInternalFrameDetalleFormPresupuestoVentasLineas!=null) {
						this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_linea_grupoPresupuestoVentasLineas.setSelectedItem(lineagrupoTemp);
					}
				} else {
					//jComboBoxid_linea_grupoPresupuestoVentasLineas.setSelectedItem(lineagrupoTemp);
					if(this.jInternalFrameDetalleFormPresupuestoVentasLineas!=null) {
						if(this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_linea_grupoPresupuestoVentasLineas.getItemCount()>0) {
							this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_linea_grupoPresupuestoVentasLineas.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdLineaGrupo") || sFormularioTipoBusqueda.equals("Todos")){
					if(lineagrupoTemp!=null && jComboBoxid_linea_grupoFK_IdLineaGrupoPresupuestoVentasLineas!=null) {
						jComboBoxid_linea_grupoFK_IdLineaGrupoPresupuestoVentasLineas.setSelectedItem(lineagrupoTemp);
					} else {
						if(jComboBoxid_linea_grupoFK_IdLineaGrupoPresupuestoVentasLineas!=null) {
							//jComboBoxid_linea_grupoFK_IdLineaGrupoPresupuestoVentasLineas.setSelectedItem(lineagrupoTemp);
							if(jComboBoxid_linea_grupoFK_IdLineaGrupoPresupuestoVentasLineas.getItemCount()>0) {
								jComboBoxid_linea_grupoFK_IdLineaGrupoPresupuestoVentasLineas.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualLineaGrupoForeignKeyDescripcion(Long idLineaGrupoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Linea  lineagrupoTemp=null;

			for(Linea lineagrupoAux:lineagruposForeignKey) {
				if(lineagrupoAux.getId()!=null && lineagrupoAux.getId().equals(idLineaGrupoSeleccionado)) {
					lineagrupoTemp=lineagrupoAux;
					break;
				}
			}


			sDescripcion=LineaConstantesFunciones.getLineaDescripcion(lineagrupoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualLineaGrupoForeignKeyGenerico(Long idLineaGrupoSeleccionado,JComboBox jComboBoxid_linea_grupoPresupuestoVentasLineasGenerico)throws Exception
	{
		try
		{
			Linea  lineagrupoTemp=null;

			for(Linea lineagrupoAux:lineagruposForeignKey) {
				if(lineagrupoAux.getId()!=null && lineagrupoAux.getId().equals(idLineaGrupoSeleccionado)) {
					lineagrupoTemp=lineagrupoAux;
					break;
				}
			}

			if(lineagrupoTemp!=null) {
				jComboBoxid_linea_grupoPresupuestoVentasLineasGenerico.setSelectedItem(lineagrupoTemp);
			} else {
				if(jComboBoxid_linea_grupoPresupuestoVentasLineasGenerico!=null && jComboBoxid_linea_grupoPresupuestoVentasLineasGenerico.getItemCount()>0) {
					jComboBoxid_linea_grupoPresupuestoVentasLineasGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualLineaCategoriaForeignKey(Long idLineaCategoriaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Linea  lineacategoriaTemp=null;

			for(Linea lineacategoriaAux:lineacategoriasForeignKey) {
				if(lineacategoriaAux.getId()!=null && lineacategoriaAux.getId().equals(idLineaCategoriaSeleccionado)) {
					lineacategoriaTemp=lineacategoriaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(lineacategoriaTemp!=null) {

					if(this.presupuestoventaslineas!=null) {
						this.presupuestoventaslineas.setLineaCategoria(lineacategoriaTemp);
					}

					if(this.jInternalFrameDetalleFormPresupuestoVentasLineas!=null) {
						this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_linea_categoriaPresupuestoVentasLineas.setSelectedItem(lineacategoriaTemp);
					}
				} else {
					//jComboBoxid_linea_categoriaPresupuestoVentasLineas.setSelectedItem(lineacategoriaTemp);
					if(this.jInternalFrameDetalleFormPresupuestoVentasLineas!=null) {
						if(this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_linea_categoriaPresupuestoVentasLineas.getItemCount()>0) {
							this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_linea_categoriaPresupuestoVentasLineas.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdLineaCategoria") || sFormularioTipoBusqueda.equals("Todos")){
					if(lineacategoriaTemp!=null && jComboBoxid_linea_categoriaFK_IdLineaCategoriaPresupuestoVentasLineas!=null) {
						jComboBoxid_linea_categoriaFK_IdLineaCategoriaPresupuestoVentasLineas.setSelectedItem(lineacategoriaTemp);
					} else {
						if(jComboBoxid_linea_categoriaFK_IdLineaCategoriaPresupuestoVentasLineas!=null) {
							//jComboBoxid_linea_categoriaFK_IdLineaCategoriaPresupuestoVentasLineas.setSelectedItem(lineacategoriaTemp);
							if(jComboBoxid_linea_categoriaFK_IdLineaCategoriaPresupuestoVentasLineas.getItemCount()>0) {
								jComboBoxid_linea_categoriaFK_IdLineaCategoriaPresupuestoVentasLineas.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualLineaCategoriaForeignKeyDescripcion(Long idLineaCategoriaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Linea  lineacategoriaTemp=null;

			for(Linea lineacategoriaAux:lineacategoriasForeignKey) {
				if(lineacategoriaAux.getId()!=null && lineacategoriaAux.getId().equals(idLineaCategoriaSeleccionado)) {
					lineacategoriaTemp=lineacategoriaAux;
					break;
				}
			}


			sDescripcion=LineaConstantesFunciones.getLineaDescripcion(lineacategoriaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualLineaCategoriaForeignKeyGenerico(Long idLineaCategoriaSeleccionado,JComboBox jComboBoxid_linea_categoriaPresupuestoVentasLineasGenerico)throws Exception
	{
		try
		{
			Linea  lineacategoriaTemp=null;

			for(Linea lineacategoriaAux:lineacategoriasForeignKey) {
				if(lineacategoriaAux.getId()!=null && lineacategoriaAux.getId().equals(idLineaCategoriaSeleccionado)) {
					lineacategoriaTemp=lineacategoriaAux;
					break;
				}
			}

			if(lineacategoriaTemp!=null) {
				jComboBoxid_linea_categoriaPresupuestoVentasLineasGenerico.setSelectedItem(lineacategoriaTemp);
			} else {
				if(jComboBoxid_linea_categoriaPresupuestoVentasLineasGenerico!=null && jComboBoxid_linea_categoriaPresupuestoVentasLineasGenerico.getItemCount()>0) {
					jComboBoxid_linea_categoriaPresupuestoVentasLineasGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualLineaMarcaForeignKey(Long idLineaMarcaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Linea  lineamarcaTemp=null;

			for(Linea lineamarcaAux:lineamarcasForeignKey) {
				if(lineamarcaAux.getId()!=null && lineamarcaAux.getId().equals(idLineaMarcaSeleccionado)) {
					lineamarcaTemp=lineamarcaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(lineamarcaTemp!=null) {

					if(this.presupuestoventaslineas!=null) {
						this.presupuestoventaslineas.setLineaMarca(lineamarcaTemp);
					}

					if(this.jInternalFrameDetalleFormPresupuestoVentasLineas!=null) {
						this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_linea_marcaPresupuestoVentasLineas.setSelectedItem(lineamarcaTemp);
					}
				} else {
					//jComboBoxid_linea_marcaPresupuestoVentasLineas.setSelectedItem(lineamarcaTemp);
					if(this.jInternalFrameDetalleFormPresupuestoVentasLineas!=null) {
						if(this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_linea_marcaPresupuestoVentasLineas.getItemCount()>0) {
							this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_linea_marcaPresupuestoVentasLineas.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdLineaMarca") || sFormularioTipoBusqueda.equals("Todos")){
					if(lineamarcaTemp!=null && jComboBoxid_linea_marcaFK_IdLineaMarcaPresupuestoVentasLineas!=null) {
						jComboBoxid_linea_marcaFK_IdLineaMarcaPresupuestoVentasLineas.setSelectedItem(lineamarcaTemp);
					} else {
						if(jComboBoxid_linea_marcaFK_IdLineaMarcaPresupuestoVentasLineas!=null) {
							//jComboBoxid_linea_marcaFK_IdLineaMarcaPresupuestoVentasLineas.setSelectedItem(lineamarcaTemp);
							if(jComboBoxid_linea_marcaFK_IdLineaMarcaPresupuestoVentasLineas.getItemCount()>0) {
								jComboBoxid_linea_marcaFK_IdLineaMarcaPresupuestoVentasLineas.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualLineaMarcaForeignKeyDescripcion(Long idLineaMarcaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Linea  lineamarcaTemp=null;

			for(Linea lineamarcaAux:lineamarcasForeignKey) {
				if(lineamarcaAux.getId()!=null && lineamarcaAux.getId().equals(idLineaMarcaSeleccionado)) {
					lineamarcaTemp=lineamarcaAux;
					break;
				}
			}


			sDescripcion=LineaConstantesFunciones.getLineaDescripcion(lineamarcaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualLineaMarcaForeignKeyGenerico(Long idLineaMarcaSeleccionado,JComboBox jComboBoxid_linea_marcaPresupuestoVentasLineasGenerico)throws Exception
	{
		try
		{
			Linea  lineamarcaTemp=null;

			for(Linea lineamarcaAux:lineamarcasForeignKey) {
				if(lineamarcaAux.getId()!=null && lineamarcaAux.getId().equals(idLineaMarcaSeleccionado)) {
					lineamarcaTemp=lineamarcaAux;
					break;
				}
			}

			if(lineamarcaTemp!=null) {
				jComboBoxid_linea_marcaPresupuestoVentasLineasGenerico.setSelectedItem(lineamarcaTemp);
			} else {
				if(jComboBoxid_linea_marcaPresupuestoVentasLineasGenerico!=null && jComboBoxid_linea_marcaPresupuestoVentasLineasGenerico.getItemCount()>0) {
					jComboBoxid_linea_marcaPresupuestoVentasLineasGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	
	
	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarEmpresaForeignKey(PresupuestoVentasLineas presupuestoventaslineas,JComboBox jComboBoxid_empresaPresupuestoVentasLineasGenerico)throws Exception
	{
		try
		{
			Empresa  empresaAux=new Empresa();

			if(jComboBoxid_empresaPresupuestoVentasLineasGenerico==null) {
				empresaAux=(Empresa)this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_empresaPresupuestoVentasLineas.getSelectedItem();
			} else {
				empresaAux=(Empresa)jComboBoxid_empresaPresupuestoVentasLineasGenerico.getSelectedItem();
			}

			if(empresaAux!=null && empresaAux.getId()!=null) {
				presupuestoventaslineas.setid_empresa(empresaAux.getId());
				presupuestoventaslineas.setempresa_descripcion(PresupuestoVentasLineasConstantesFunciones.getEmpresaDescripcion(empresaAux));
				presupuestoventaslineas.setEmpresa(empresaAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarSucursalForeignKey(PresupuestoVentasLineas presupuestoventaslineas,JComboBox jComboBoxid_sucursalPresupuestoVentasLineasGenerico)throws Exception
	{
		try
		{
			Sucursal  sucursalAux=new Sucursal();

			if(jComboBoxid_sucursalPresupuestoVentasLineasGenerico==null) {
				sucursalAux=(Sucursal)this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_sucursalPresupuestoVentasLineas.getSelectedItem();
			} else {
				sucursalAux=(Sucursal)jComboBoxid_sucursalPresupuestoVentasLineasGenerico.getSelectedItem();
			}

			if(sucursalAux!=null && sucursalAux.getId()!=null) {
				presupuestoventaslineas.setid_sucursal(sucursalAux.getId());
				presupuestoventaslineas.setsucursal_descripcion(PresupuestoVentasLineasConstantesFunciones.getSucursalDescripcion(sucursalAux));
				presupuestoventaslineas.setSucursal(sucursalAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarEjercicioForeignKey(PresupuestoVentasLineas presupuestoventaslineas,JComboBox jComboBoxid_ejercicioPresupuestoVentasLineasGenerico)throws Exception
	{
		try
		{
			Ejercicio  ejercicioAux=new Ejercicio();

			if(jComboBoxid_ejercicioPresupuestoVentasLineasGenerico==null) {
				ejercicioAux=(Ejercicio)this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_ejercicioPresupuestoVentasLineas.getSelectedItem();
			} else {
				ejercicioAux=(Ejercicio)jComboBoxid_ejercicioPresupuestoVentasLineasGenerico.getSelectedItem();
			}

			if(ejercicioAux!=null && ejercicioAux.getId()!=null) {
				presupuestoventaslineas.setid_ejercicio(ejercicioAux.getId());
				presupuestoventaslineas.setejercicio_descripcion(PresupuestoVentasLineasConstantesFunciones.getEjercicioDescripcion(ejercicioAux));
				presupuestoventaslineas.setEjercicio(ejercicioAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarPeriodoForeignKey(PresupuestoVentasLineas presupuestoventaslineas,JComboBox jComboBoxid_periodoPresupuestoVentasLineasGenerico)throws Exception
	{
		try
		{
			Periodo  periodoAux=new Periodo();

			if(jComboBoxid_periodoPresupuestoVentasLineasGenerico==null) {
				periodoAux=(Periodo)this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_periodoPresupuestoVentasLineas.getSelectedItem();
			} else {
				periodoAux=(Periodo)jComboBoxid_periodoPresupuestoVentasLineasGenerico.getSelectedItem();
			}

			if(periodoAux!=null && periodoAux.getId()!=null) {
				if(periodoAux.getid_estado_periodo().equals(0L)) {
					throw new Exception("Periodo INACTIVO, NO PUEDE GUARDAR LA INFORMACION CONSULTE CON EL ADMINISTRADOR");
				}

				presupuestoventaslineas.setid_periodo(periodoAux.getId());
				presupuestoventaslineas.setperiodo_descripcion(PresupuestoVentasLineasConstantesFunciones.getPeriodoDescripcion(periodoAux));
				presupuestoventaslineas.setPeriodo(periodoAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarVendedorForeignKey(PresupuestoVentasLineas presupuestoventaslineas,JComboBox jComboBoxid_vendedorPresupuestoVentasLineasGenerico)throws Exception
	{
		try
		{
			Vendedor  vendedorAux=new Vendedor();

			if(jComboBoxid_vendedorPresupuestoVentasLineasGenerico==null) {
				vendedorAux=(Vendedor)this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_vendedorPresupuestoVentasLineas.getSelectedItem();
			} else {
				vendedorAux=(Vendedor)jComboBoxid_vendedorPresupuestoVentasLineasGenerico.getSelectedItem();
			}

			if(vendedorAux!=null && vendedorAux.getId()!=null) {
				presupuestoventaslineas.setid_vendedor(vendedorAux.getId());
				presupuestoventaslineas.setvendedor_descripcion(PresupuestoVentasLineasConstantesFunciones.getVendedorDescripcion(vendedorAux));
				presupuestoventaslineas.setVendedor(vendedorAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarPaisForeignKey(PresupuestoVentasLineas presupuestoventaslineas,JComboBox jComboBoxid_paisPresupuestoVentasLineasGenerico)throws Exception
	{
		try
		{
			Pais  paisAux=new Pais();

			if(jComboBoxid_paisPresupuestoVentasLineasGenerico==null) {
				paisAux=(Pais)this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_paisPresupuestoVentasLineas.getSelectedItem();
			} else {
				paisAux=(Pais)jComboBoxid_paisPresupuestoVentasLineasGenerico.getSelectedItem();
			}

			if(paisAux!=null && paisAux.getId()!=null) {
				presupuestoventaslineas.setid_pais(paisAux.getId());
				presupuestoventaslineas.setpais_descripcion(PresupuestoVentasLineasConstantesFunciones.getPaisDescripcion(paisAux));
				presupuestoventaslineas.setPais(paisAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarCiudadForeignKey(PresupuestoVentasLineas presupuestoventaslineas,JComboBox jComboBoxid_ciudadPresupuestoVentasLineasGenerico)throws Exception
	{
		try
		{
			Ciudad  ciudadAux=new Ciudad();

			if(jComboBoxid_ciudadPresupuestoVentasLineasGenerico==null) {
				ciudadAux=(Ciudad)this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_ciudadPresupuestoVentasLineas.getSelectedItem();
			} else {
				ciudadAux=(Ciudad)jComboBoxid_ciudadPresupuestoVentasLineasGenerico.getSelectedItem();
			}

			if(ciudadAux!=null && ciudadAux.getId()!=null) {
				presupuestoventaslineas.setid_ciudad(ciudadAux.getId());
				presupuestoventaslineas.setciudad_descripcion(PresupuestoVentasLineasConstantesFunciones.getCiudadDescripcion(ciudadAux));
				presupuestoventaslineas.setCiudad(ciudadAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarZonaForeignKey(PresupuestoVentasLineas presupuestoventaslineas,JComboBox jComboBoxid_zonaPresupuestoVentasLineasGenerico)throws Exception
	{
		try
		{
			Zona  zonaAux=new Zona();

			if(jComboBoxid_zonaPresupuestoVentasLineasGenerico==null) {
				zonaAux=(Zona)this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_zonaPresupuestoVentasLineas.getSelectedItem();
			} else {
				zonaAux=(Zona)jComboBoxid_zonaPresupuestoVentasLineasGenerico.getSelectedItem();
			}

			if(zonaAux!=null) {
				presupuestoventaslineas.setid_zona(zonaAux.getId());
				presupuestoventaslineas.setzona_descripcion(PresupuestoVentasLineasConstantesFunciones.getZonaDescripcion(zonaAux));
				presupuestoventaslineas.setZona(zonaAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarLineaForeignKey(PresupuestoVentasLineas presupuestoventaslineas,JComboBox jComboBoxid_lineaPresupuestoVentasLineasGenerico)throws Exception
	{
		try
		{
			Linea  lineaAux=new Linea();

			if(jComboBoxid_lineaPresupuestoVentasLineasGenerico==null) {
				lineaAux=(Linea)this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_lineaPresupuestoVentasLineas.getSelectedItem();
			} else {
				lineaAux=(Linea)jComboBoxid_lineaPresupuestoVentasLineasGenerico.getSelectedItem();
			}

			if(lineaAux!=null && lineaAux.getId()!=null) {
				presupuestoventaslineas.setid_linea(lineaAux.getId());
				presupuestoventaslineas.setlinea_descripcion(PresupuestoVentasLineasConstantesFunciones.getLineaDescripcion(lineaAux));
				presupuestoventaslineas.setLinea(lineaAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarLineaGrupoForeignKey(PresupuestoVentasLineas presupuestoventaslineas,JComboBox jComboBoxid_linea_grupoPresupuestoVentasLineasGenerico)throws Exception
	{
		try
		{
			Linea  lineaAux=new Linea();

			if(jComboBoxid_linea_grupoPresupuestoVentasLineasGenerico==null) {
				lineaAux=(Linea)this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_linea_grupoPresupuestoVentasLineas.getSelectedItem();
			} else {
				lineaAux=(Linea)jComboBoxid_linea_grupoPresupuestoVentasLineasGenerico.getSelectedItem();
			}

			if(lineaAux!=null) {
				presupuestoventaslineas.setid_linea_grupo(lineaAux.getId());
				presupuestoventaslineas.setlineagrupo_descripcion(PresupuestoVentasLineasConstantesFunciones.getLineaGrupoDescripcion(lineaAux));
				presupuestoventaslineas.setLineaGrupo(lineaAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarLineaCategoriaForeignKey(PresupuestoVentasLineas presupuestoventaslineas,JComboBox jComboBoxid_linea_categoriaPresupuestoVentasLineasGenerico)throws Exception
	{
		try
		{
			Linea  lineaAux=new Linea();

			if(jComboBoxid_linea_categoriaPresupuestoVentasLineasGenerico==null) {
				lineaAux=(Linea)this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_linea_categoriaPresupuestoVentasLineas.getSelectedItem();
			} else {
				lineaAux=(Linea)jComboBoxid_linea_categoriaPresupuestoVentasLineasGenerico.getSelectedItem();
			}

			if(lineaAux!=null) {
				presupuestoventaslineas.setid_linea_categoria(lineaAux.getId());
				presupuestoventaslineas.setlineacategoria_descripcion(PresupuestoVentasLineasConstantesFunciones.getLineaCategoriaDescripcion(lineaAux));
				presupuestoventaslineas.setLineaCategoria(lineaAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarLineaMarcaForeignKey(PresupuestoVentasLineas presupuestoventaslineas,JComboBox jComboBoxid_linea_marcaPresupuestoVentasLineasGenerico)throws Exception
	{
		try
		{
			Linea  lineaAux=new Linea();

			if(jComboBoxid_linea_marcaPresupuestoVentasLineasGenerico==null) {
				lineaAux=(Linea)this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_linea_marcaPresupuestoVentasLineas.getSelectedItem();
			} else {
				lineaAux=(Linea)jComboBoxid_linea_marcaPresupuestoVentasLineasGenerico.getSelectedItem();
			}

			if(lineaAux!=null) {
				presupuestoventaslineas.setid_linea_marca(lineaAux.getId());
				presupuestoventaslineas.setlineamarca_descripcion(PresupuestoVentasLineasConstantesFunciones.getLineaMarcaDescripcion(lineaAux));
				presupuestoventaslineas.setLineaMarca(lineaAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	
	


		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameEmpresasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingEmpresa=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!PresupuestoVentasLineasJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormPresupuestoVentasLineas!=null) { 
							this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_empresaPresupuestoVentasLineas.removeAllItems();

							for(Empresa empresa:this.empresasForeignKey) {
								this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_empresaPresupuestoVentasLineas.addItem(empresa);
							}
						}
					}

					if(this.jInternalFrameDetalleFormPresupuestoVentasLineas!=null) { 
					}

					if(!PresupuestoVentasLineasJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameSucursalsForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingSucursal=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!PresupuestoVentasLineasJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormPresupuestoVentasLineas!=null) { 
							this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_sucursalPresupuestoVentasLineas.removeAllItems();

							for(Sucursal sucursal:this.sucursalsForeignKey) {
								this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_sucursalPresupuestoVentasLineas.addItem(sucursal);
							}
						}
					}

					if(this.jInternalFrameDetalleFormPresupuestoVentasLineas!=null) { 
					}

					if(!PresupuestoVentasLineasJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameEjerciciosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingEjercicio=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!PresupuestoVentasLineasJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormPresupuestoVentasLineas!=null) { 
							this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_ejercicioPresupuestoVentasLineas.removeAllItems();

							for(Ejercicio ejercicio:this.ejerciciosForeignKey) {
								this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_ejercicioPresupuestoVentasLineas.addItem(ejercicio);
							}
						}
					}

					if(this.jInternalFrameDetalleFormPresupuestoVentasLineas!=null) { 
					}

					if(!PresupuestoVentasLineasJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFramePeriodosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingPeriodo=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!PresupuestoVentasLineasJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormPresupuestoVentasLineas!=null) { 
							this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_periodoPresupuestoVentasLineas.removeAllItems();

							for(Periodo periodo:this.periodosForeignKey) {
								this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_periodoPresupuestoVentasLineas.addItem(periodo);
							}
						}
					}

					if(this.jInternalFrameDetalleFormPresupuestoVentasLineas!=null) { 
					}

					if(!PresupuestoVentasLineasJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameVendedorsForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingVendedor=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!PresupuestoVentasLineasJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormPresupuestoVentasLineas!=null) { 
							this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_vendedorPresupuestoVentasLineas.removeAllItems();

							for(Vendedor vendedor:this.vendedorsForeignKey) {
								this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_vendedorPresupuestoVentasLineas.addItem(vendedor);
							}
						}
					}

					if(this.jInternalFrameDetalleFormPresupuestoVentasLineas!=null) { 
					}

					if(!PresupuestoVentasLineasJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdVendedor") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!PresupuestoVentasLineasJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_vendedorFK_IdVendedorPresupuestoVentasLineas.removeAllItems();

							for(Vendedor vendedor:this.vendedorsForeignKey) {
								this.jComboBoxid_vendedorFK_IdVendedorPresupuestoVentasLineas.addItem(vendedor);
							}
						}

						if(!PresupuestoVentasLineasJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFramePaissForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingPais=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!PresupuestoVentasLineasJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormPresupuestoVentasLineas!=null) { 
							this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_paisPresupuestoVentasLineas.removeAllItems();

							for(Pais pais:this.paissForeignKey) {
								this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_paisPresupuestoVentasLineas.addItem(pais);
							}
						}
					}

					if(this.jInternalFrameDetalleFormPresupuestoVentasLineas!=null) { 
					}

					if(!PresupuestoVentasLineasJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdPais") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!PresupuestoVentasLineasJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_paisFK_IdPaisPresupuestoVentasLineas.removeAllItems();

							for(Pais pais:this.paissForeignKey) {
								this.jComboBoxid_paisFK_IdPaisPresupuestoVentasLineas.addItem(pais);
							}
						}

						if(!PresupuestoVentasLineasJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameCiudadsForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingCiudad=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!PresupuestoVentasLineasJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormPresupuestoVentasLineas!=null) { 
							this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_ciudadPresupuestoVentasLineas.removeAllItems();

							for(Ciudad ciudad:this.ciudadsForeignKey) {
								this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_ciudadPresupuestoVentasLineas.addItem(ciudad);
							}
						}
					}

					if(this.jInternalFrameDetalleFormPresupuestoVentasLineas!=null) { 
					}

					if(!PresupuestoVentasLineasJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdCiudad") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!PresupuestoVentasLineasJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_ciudadFK_IdCiudadPresupuestoVentasLineas.removeAllItems();

							for(Ciudad ciudad:this.ciudadsForeignKey) {
								this.jComboBoxid_ciudadFK_IdCiudadPresupuestoVentasLineas.addItem(ciudad);
							}
						}

						if(!PresupuestoVentasLineasJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameZonasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingZona=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!PresupuestoVentasLineasJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormPresupuestoVentasLineas!=null) { 
							this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_zonaPresupuestoVentasLineas.removeAllItems();

							for(Zona zona:this.zonasForeignKey) {
								this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_zonaPresupuestoVentasLineas.addItem(zona);
							}
						}
					}

					if(this.jInternalFrameDetalleFormPresupuestoVentasLineas!=null) { 
					}

					if(!PresupuestoVentasLineasJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdZona") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!PresupuestoVentasLineasJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_zonaFK_IdZonaPresupuestoVentasLineas.removeAllItems();

							for(Zona zona:this.zonasForeignKey) {
								this.jComboBoxid_zonaFK_IdZonaPresupuestoVentasLineas.addItem(zona);
							}
						}

						if(!PresupuestoVentasLineasJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameLineasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingLinea=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!PresupuestoVentasLineasJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormPresupuestoVentasLineas!=null) { 
							this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_lineaPresupuestoVentasLineas.removeAllItems();

							for(Linea linea:this.lineasForeignKey) {
								this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_lineaPresupuestoVentasLineas.addItem(linea);
							}
						}
					}

					if(this.jInternalFrameDetalleFormPresupuestoVentasLineas!=null) { 
					}

					if(!PresupuestoVentasLineasJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdLinea") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!PresupuestoVentasLineasJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_lineaFK_IdLineaPresupuestoVentasLineas.removeAllItems();

							for(Linea linea:this.lineasForeignKey) {
								this.jComboBoxid_lineaFK_IdLineaPresupuestoVentasLineas.addItem(linea);
							}
						}

						if(!PresupuestoVentasLineasJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameLineaGruposForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingLinea=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!PresupuestoVentasLineasJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormPresupuestoVentasLineas!=null) { 
							this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_linea_grupoPresupuestoVentasLineas.removeAllItems();

							for(Linea lineagrupo:this.lineagruposForeignKey) {
								this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_linea_grupoPresupuestoVentasLineas.addItem(lineagrupo);
							}
						}
					}

					if(this.jInternalFrameDetalleFormPresupuestoVentasLineas!=null) { 
					}

					if(!PresupuestoVentasLineasJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdLineaGrupo") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!PresupuestoVentasLineasJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_linea_grupoFK_IdLineaGrupoPresupuestoVentasLineas.removeAllItems();

							for(Linea lineagrupo:this.lineagruposForeignKey) {
								this.jComboBoxid_linea_grupoFK_IdLineaGrupoPresupuestoVentasLineas.addItem(lineagrupo);
							}
						}

						if(!PresupuestoVentasLineasJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameLineaCategoriasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingLinea=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!PresupuestoVentasLineasJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormPresupuestoVentasLineas!=null) { 
							this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_linea_categoriaPresupuestoVentasLineas.removeAllItems();

							for(Linea lineacategoria:this.lineacategoriasForeignKey) {
								this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_linea_categoriaPresupuestoVentasLineas.addItem(lineacategoria);
							}
						}
					}

					if(this.jInternalFrameDetalleFormPresupuestoVentasLineas!=null) { 
					}

					if(!PresupuestoVentasLineasJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdLineaCategoria") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!PresupuestoVentasLineasJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_linea_categoriaFK_IdLineaCategoriaPresupuestoVentasLineas.removeAllItems();

							for(Linea lineacategoria:this.lineacategoriasForeignKey) {
								this.jComboBoxid_linea_categoriaFK_IdLineaCategoriaPresupuestoVentasLineas.addItem(lineacategoria);
							}
						}

						if(!PresupuestoVentasLineasJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameLineaMarcasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingLinea=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!PresupuestoVentasLineasJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormPresupuestoVentasLineas!=null) { 
							this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_linea_marcaPresupuestoVentasLineas.removeAllItems();

							for(Linea lineamarca:this.lineamarcasForeignKey) {
								this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_linea_marcaPresupuestoVentasLineas.addItem(lineamarca);
							}
						}
					}

					if(this.jInternalFrameDetalleFormPresupuestoVentasLineas!=null) { 
					}

					if(!PresupuestoVentasLineasJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdLineaMarca") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!PresupuestoVentasLineasJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_linea_marcaFK_IdLineaMarcaPresupuestoVentasLineas.removeAllItems();

							for(Linea lineamarca:this.lineamarcasForeignKey) {
								this.jComboBoxid_linea_marcaFK_IdLineaMarcaPresupuestoVentasLineas.addItem(lineamarca);
							}
						}

						if(!PresupuestoVentasLineasJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

	


		public void setSelectedItemCombosFrameEmpresaForeignKey(Empresa empresa,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormPresupuestoVentasLineas!=null) {
							this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_empresaPresupuestoVentasLineas.setSelectedItem(empresa);
						}
					} else {
						if(this.jInternalFrameDetalleFormPresupuestoVentasLineas!=null) {
							this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_empresaPresupuestoVentasLineas.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameSucursalForeignKey(Sucursal sucursal,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormPresupuestoVentasLineas!=null) {
							this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_sucursalPresupuestoVentasLineas.setSelectedItem(sucursal);
						}
					} else {
						if(this.jInternalFrameDetalleFormPresupuestoVentasLineas!=null) {
							this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_sucursalPresupuestoVentasLineas.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameEjercicioForeignKey(Ejercicio ejercicio,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormPresupuestoVentasLineas!=null) {
							this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_ejercicioPresupuestoVentasLineas.setSelectedItem(ejercicio);
						}
					} else {
						if(this.jInternalFrameDetalleFormPresupuestoVentasLineas!=null) {
							this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_ejercicioPresupuestoVentasLineas.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFramePeriodoForeignKey(Periodo periodo,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormPresupuestoVentasLineas!=null) {
							this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_periodoPresupuestoVentasLineas.setSelectedItem(periodo);
						}
					} else {
						if(this.jInternalFrameDetalleFormPresupuestoVentasLineas!=null) {
							this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_periodoPresupuestoVentasLineas.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameVendedorForeignKey(Vendedor vendedor,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormPresupuestoVentasLineas!=null) {
							this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_vendedorPresupuestoVentasLineas.setSelectedItem(vendedor);
						}
					} else {
						if(this.jInternalFrameDetalleFormPresupuestoVentasLineas!=null) {
							this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_vendedorPresupuestoVentasLineas.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_vendedorFK_IdVendedorPresupuestoVentasLineas.setSelectedItem(vendedor);
						} else {
							this.jComboBoxid_vendedorFK_IdVendedorPresupuestoVentasLineas.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFramePaisForeignKey(Pais pais,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormPresupuestoVentasLineas!=null) {
							this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_paisPresupuestoVentasLineas.setSelectedItem(pais);
						}
					} else {
						if(this.jInternalFrameDetalleFormPresupuestoVentasLineas!=null) {
							this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_paisPresupuestoVentasLineas.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_paisFK_IdPaisPresupuestoVentasLineas.setSelectedItem(pais);
						} else {
							this.jComboBoxid_paisFK_IdPaisPresupuestoVentasLineas.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameCiudadForeignKey(Ciudad ciudad,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormPresupuestoVentasLineas!=null) {
							this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_ciudadPresupuestoVentasLineas.setSelectedItem(ciudad);
						}
					} else {
						if(this.jInternalFrameDetalleFormPresupuestoVentasLineas!=null) {
							this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_ciudadPresupuestoVentasLineas.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_ciudadFK_IdCiudadPresupuestoVentasLineas.setSelectedItem(ciudad);
						} else {
							this.jComboBoxid_ciudadFK_IdCiudadPresupuestoVentasLineas.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameZonaForeignKey(Zona zona,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormPresupuestoVentasLineas!=null) {
							this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_zonaPresupuestoVentasLineas.setSelectedItem(zona);
						}
					} else {
						if(this.jInternalFrameDetalleFormPresupuestoVentasLineas!=null) {
							this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_zonaPresupuestoVentasLineas.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_zonaFK_IdZonaPresupuestoVentasLineas.setSelectedItem(zona);
						} else {
							this.jComboBoxid_zonaFK_IdZonaPresupuestoVentasLineas.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameLineaForeignKey(Linea linea,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormPresupuestoVentasLineas!=null) {
							this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_lineaPresupuestoVentasLineas.setSelectedItem(linea);
						}
					} else {
						if(this.jInternalFrameDetalleFormPresupuestoVentasLineas!=null) {
							this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_lineaPresupuestoVentasLineas.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_lineaFK_IdLineaPresupuestoVentasLineas.setSelectedItem(linea);
						} else {
							this.jComboBoxid_lineaFK_IdLineaPresupuestoVentasLineas.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameLineaGrupoForeignKey(Linea lineagrupo,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormPresupuestoVentasLineas!=null) {
							this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_linea_grupoPresupuestoVentasLineas.setSelectedItem(lineagrupo);
						}
					} else {
						if(this.jInternalFrameDetalleFormPresupuestoVentasLineas!=null) {
							this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_linea_grupoPresupuestoVentasLineas.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_linea_grupoFK_IdLineaGrupoPresupuestoVentasLineas.setSelectedItem(lineagrupo);
						} else {
							this.jComboBoxid_linea_grupoFK_IdLineaGrupoPresupuestoVentasLineas.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameLineaCategoriaForeignKey(Linea lineacategoria,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormPresupuestoVentasLineas!=null) {
							this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_linea_categoriaPresupuestoVentasLineas.setSelectedItem(lineacategoria);
						}
					} else {
						if(this.jInternalFrameDetalleFormPresupuestoVentasLineas!=null) {
							this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_linea_categoriaPresupuestoVentasLineas.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_linea_categoriaFK_IdLineaCategoriaPresupuestoVentasLineas.setSelectedItem(lineacategoria);
						} else {
							this.jComboBoxid_linea_categoriaFK_IdLineaCategoriaPresupuestoVentasLineas.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameLineaMarcaForeignKey(Linea lineamarca,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormPresupuestoVentasLineas!=null) {
							this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_linea_marcaPresupuestoVentasLineas.setSelectedItem(lineamarca);
						}
					} else {
						if(this.jInternalFrameDetalleFormPresupuestoVentasLineas!=null) {
							this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_linea_marcaPresupuestoVentasLineas.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_linea_marcaFK_IdLineaMarcaPresupuestoVentasLineas.setSelectedItem(lineamarca);
						} else {
							this.jComboBoxid_linea_marcaFK_IdLineaMarcaPresupuestoVentasLineas.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

	


	
	public void refrescarForeignKeysDescripcionesPresupuestoVentasLineas() throws Exception {
		//SI FUNCIONA DEEPLOAD ESTO VA AL ULTIMO
		if(Constantes.ISUSAEJBLOGICLAYER) {
			PresupuestoVentasLineasConstantesFunciones.refrescarForeignKeysDescripcionesPresupuestoVentasLineas(this.presupuestoventaslineasLogic.getPresupuestoVentasLineass());
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			PresupuestoVentasLineasConstantesFunciones.refrescarForeignKeysDescripcionesPresupuestoVentasLineas(this.presupuestoventaslineass);
		}
		
		/*
		ArrayList<Classe> classes=new ArrayList<Classe>();
		
		classes.add(new Classe(Empresa.class));
		classes.add(new Classe(Sucursal.class));
		classes.add(new Classe(Ejercicio.class));
		classes.add(new Classe(Periodo.class));
		classes.add(new Classe(Vendedor.class));
		classes.add(new Classe(Pais.class));
		classes.add(new Classe(Ciudad.class));
		classes.add(new Classe(Zona.class));
		classes.add(new Classe(Linea.class));
			
		if(Constantes.ISUSAEJBLOGICLAYER) {
			//USA LOS OBJETOS DE LOGIC DIRECTAMENTE
			//presupuestoventaslineasLogic.setPresupuestoVentasLineass(this.presupuestoventaslineass);
			presupuestoventaslineasLogic.deepLoadsWithConnection(false, DeepLoadType.INCLUDE, classes,"");
	
		} else if(Constantes.ISUSAEJBREMOTE) {
		} else if(Constantes.ISUSAEJBHOME) {
		}
		*/				
	}	
	
	
	
	public Integer getiNumeroPaginacion() {
		return iNumeroPaginacion;
	}

	public void setiNumeroPaginacion(Integer iNumeroPaginacion) {
		this.iNumeroPaginacion= iNumeroPaginacion;
	}
	
	public Integer getiNumeroPaginacionPagina() {
		return iNumeroPaginacionPagina;
	}

	public void setiNumeroPaginacionPagina(Integer iNumeroPaginacionPagina) {
		this.iNumeroPaginacionPagina= iNumeroPaginacionPagina;
	}
	
	
	public Boolean getIsSeleccionarTodos() {
		return this.isSeleccionarTodos;
	}

	public void setIsSeleccionarTodos(Boolean isSeleccionarTodos) {
		this.isSeleccionarTodos= isSeleccionarTodos;
	}
	
	public Boolean getEsControlTabla() {
		return this.esControlTabla;
	}

	public void setEsControlTabla(Boolean esControlTabla) {
		this.esControlTabla= esControlTabla;
	}
	
	public Boolean getIsSeleccionados() {
		return this.isSeleccionados;
	}

	public void setIsSeleccionados(Boolean isSeleccionados) {
		this.isSeleccionados= isSeleccionados;
	}
	
	public Boolean getIsPostAccionNuevo() {
		return this.isPostAccionNuevo;
	}

	public void setIsPostAccionNuevo(Boolean isPostAccionNuevo) {
		this.isPostAccionNuevo= isPostAccionNuevo;
	}
	
	public Boolean getIsPostAccionSinCerrar() {
		return this.isPostAccionSinCerrar;
	}

	public void setIsPostAccionSinCerrar(Boolean isPostAccionSinCerrar) {
		this.isPostAccionSinCerrar= isPostAccionSinCerrar;
	}
	
	public Boolean getIsPostAccionSinMensaje() {
		return this.isPostAccionSinMensaje;
	}

	public void setIsPostAccionSinMensaje(Boolean isPostAccionSinMensaje) {
		this.isPostAccionSinMensaje= isPostAccionSinMensaje;
	}
	
	public Boolean getConGraficoReporte() {
		return this.conGraficoReporte;
	}

	public void setConGraficoReporte(Boolean conGraficoReporte) {
		this.conGraficoReporte= conGraficoReporte;
	}
	
	
	public ArrayList<Reporte> gettiposArchivosReportes() {
		return this.tiposArchivosReportes;
	}
	
	public void settiposArchivosReportes(ArrayList<Reporte> tiposArchivosReportes) {
		this.tiposArchivosReportes = tiposArchivosReportes;
	}
	
	//TIPOS ARCHIVOS DINAMICOS
	public ArrayList<Reporte> gettiposArchivosReportesDinamico() {
		return this.tiposArchivosReportesDinamico;
	}
	
	public void settiposArchivosReportesDinamico(ArrayList<Reporte> tiposArchivosReportesDinamico) {
		this.tiposArchivosReportesDinamico = tiposArchivosReportesDinamico;
	}
	
	//TIPOS REPORTES
	public ArrayList<Reporte> gettiposReportes() {
		return this.tiposReportes;
	}
	
	public void settiposReportes(ArrayList<Reporte> tiposReportes) {
		this.tiposReportes = tiposReportes;
	}
	
	//TIPOS REPORTES
	public ArrayList<Reporte> gettiposReportesDinamico() {
		return this.tiposReportesDinamico;
	}
	
	public void settiposReportesDinamico(ArrayList<Reporte> tiposReportesDinamico) {
		this.tiposReportesDinamico = tiposReportesDinamico;
	}
	
	//TIPOS GRAFICOS REPORTES
	public ArrayList<Reporte> gettiposGraficosReportes() {
		return this.tiposGraficosReportes;
	}
	
	public void settiposGraficosReportes(ArrayList<Reporte> tiposGraficosReportes) {
		this.tiposGraficosReportes = tiposGraficosReportes;
	}
	
	public ArrayList<Reporte> gettiposPaginacion() {
		return this.tiposPaginacion;
	}
	
	public void settiposPaginacion(ArrayList<Reporte> tiposPaginacion) {
		this.tiposPaginacion = tiposPaginacion;
	}
	
	public ArrayList<Reporte> gettiposRelaciones() {
		return this.tiposRelaciones;
	}
	
	public void settiposRelaciones(ArrayList<Reporte> tiposRelaciones) {
		this.tiposRelaciones= tiposRelaciones;
	}
	
	public ArrayList<Reporte> gettiposAcciones() {
		return this.tiposAcciones;
	}
	
	public void settiposAcciones(ArrayList<Reporte> tiposAcciones) {
		this.tiposAcciones = tiposAcciones;
	}
	
	public ArrayList<Reporte> gettiposAccionesFormulario() {
		return this.tiposAccionesFormulario;
	}
	
	public void settiposAccionesFormulario(ArrayList<Reporte> tiposAccionesFormulario) {
		this.tiposAccionesFormulario = tiposAccionesFormulario;
	}
	
	public ArrayList<Reporte> gettiposSeleccionar() {
		return this.tiposSeleccionar;
	}
	
	public void settiposSeleccionar(ArrayList<Reporte> tiposSeleccionar) {
		this.tiposSeleccionar = tiposSeleccionar;
	}
	
	public ArrayList<Reporte> gettiposColumnasSelect() {
		return this.tiposColumnasSelect;
	}
	
	public void settiposColumnasSelect(ArrayList<Reporte> tiposColumnasSelect) {
		this.tiposColumnasSelect = tiposColumnasSelect;
	}
		
	public ArrayList<Reporte> gettiposRelacionesSelect() {
		return this.tiposRelacionesSelect;
	}
	
	public void settiposRelacionesSelect(ArrayList<Reporte> tiposRelacionesSelect) {
		this.tiposRelacionesSelect = tiposRelacionesSelect;
	}
	
	public Long getIIdUsuarioSesion() {
		return lIdUsuarioSesion;
	}

	public void setIIdUsuarioSesion(Long lIdUsuarioSesion) {
		this.lIdUsuarioSesion = lIdUsuarioSesion;
	}
	
	
	public List<Accion> getAccions() {
		return this.accions;
	}

	public void setAccions(List<Accion> accions) {
		this.accions = accions;
	}
	
	public List<Accion> getAccionsFormulario() {
		return this.accionsFormulario;
	}

	public void setAccionsFormulario(List<Accion> accionsFormulario) {
		this.accionsFormulario = accionsFormulario;
	}
	
	public String getsAccionMantenimiento() {
		return sAccionMantenimiento;
	}

	public void setsAccionMantenimiento(String sAccionMantenimiento) {
		this.sAccionMantenimiento = sAccionMantenimiento;
	}

	public String getsAccionBusqueda() {
		return sAccionBusqueda;
	}

	public void setsAccionBusqueda(String sAccionBusqueda) {
		this.sAccionBusqueda = sAccionBusqueda;
	}

	public String getsAccionAdicional() {
		return sAccionAdicional;
	}

	public void setsAccionAdicional(String sAccionAdicional) {
		this.sAccionAdicional = sAccionAdicional;
	}

	public String getsUltimaBusqueda() {
		return sUltimaBusqueda;
	}

	public void setsUltimaBusqueda(String sUltimaBusqueda) {
		this.sUltimaBusqueda = sUltimaBusqueda;
	}
	
	public String getsTipoArchivoReporte() {
		return sTipoArchivoReporte;
	}

	public void setsTipoArchivoReporte(String sTipoArchivoReporte) {
		this.sTipoArchivoReporte = sTipoArchivoReporte;
	}
	
	public String getsTipoArchivoReporteDinamico() {
		return sTipoArchivoReporteDinamico;
	}

	public void setsTipoArchivoReporteDinamico(String sTipoArchivoReporteDinamico) {
		this.sTipoArchivoReporteDinamico = sTipoArchivoReporteDinamico;
	}
	
	public String getsTipoReporte() {
		return sTipoReporte;
	}

	public void setsTipoReporte(String sTipoReporte) {
		this.sTipoReporte = sTipoReporte;
	}
	
	public String getsTipoReporteDinamico() {
		return sTipoReporteDinamico;
	}

	public void setsTipoReporteDinamico(String sTipoReporteDinamico) {
		this.sTipoReporteDinamico = sTipoReporteDinamico;
	}
	
	public String getsTipoGraficoReporte() {
		return sTipoGraficoReporte;
	}

	public void setsTipoGraficoReporte(String sTipoGraficoReporte) {
		this.sTipoGraficoReporte = sTipoGraficoReporte;
	}
	
	public String getsTipoPaginacion() {
		return sTipoPaginacion;
	}

	public void setsTipoPaginacion(String sTipoPaginacion) {
		this.sTipoPaginacion = sTipoPaginacion;
	}
	
	public String getsTipoRelacion() {
		return sTipoRelacion;
	}

	public void setsTipoRelacion(String sTipoRelacion) {
		this.sTipoRelacion = sTipoRelacion;
	}
	
	public String getsTipoAccion() {
		return sTipoAccion;
	}

	public void setsTipoAccion(String sTipoAccion) {
		this.sTipoAccion = sTipoAccion;
	}
	
	public String getsTipoAccionFormulario() {
		return sTipoAccionFormulario;
	}

	public void setsTipoAccionFormulario(String sTipoAccionFormulario) {
		this.sTipoAccionFormulario = sTipoAccionFormulario;
	}
	
	public String getsTipoSeleccionar() {
		return sTipoSeleccionar;
	}

	public void setsTipoSeleccionar(String sTipoSeleccionar) {
		this.sTipoSeleccionar = sTipoSeleccionar;
	}
	
	public String getsValorCampoGeneral() {
		return sValorCampoGeneral;
	}

	public void setsValorCampoGeneral(String sValorCampoGeneral) {
		this.sValorCampoGeneral = sValorCampoGeneral;
	}			

	public String getsDetalleReporte() {
		return sDetalleReporte;
	}

	public void setsDetalleReporte(String sDetalleReporte) {
		this.sDetalleReporte = sDetalleReporte;
	}
	
	
	public String getsTipoReporteExtra() {
		return sTipoReporteExtra;
	}

	public void setsTipoReporteExtra(String sTipoReporteExtra) {
		this.sTipoReporteExtra = sTipoReporteExtra;
	}
	
	public Boolean getesReporteDinamico() {
		return esReporteDinamico;
	}	
	
	public void setesReporteDinamico(Boolean esReporteDinamico) {
		this.esReporteDinamico = esReporteDinamico;
	}
	
	public Boolean getesRecargarFks() {
		return esRecargarFks;
	}	
	
	public void setesRecargarFks(Boolean esRecargarFks) {
		this.esRecargarFks = esRecargarFks;
	}
	
	public Boolean getesReporteAccionProceso() {
		return esReporteAccionProceso;
	}	
	
	public void setesReporteAccionProceso(Boolean esReporteAccionProceso) {
		this.esReporteAccionProceso= esReporteAccionProceso;
	}
		
	public PresupuestoVentasLineasParameterReturnGeneral getPresupuestoVentasLineasParameterGeneral() {
		return this.presupuestoventaslineasParameterGeneral;
	}
	
	public void setPresupuestoVentasLineasParameterGeneral(PresupuestoVentasLineasParameterReturnGeneral presupuestoventaslineasParameterGeneral) {
		this.presupuestoventaslineasParameterGeneral = presupuestoventaslineasParameterGeneral;
	}
	
	public String getsPathReporteDinamico() {
		return sPathReporteDinamico;
	}

	public void setsPathReporteDinamico(String sPathReporteDinamico) {
		this.sPathReporteDinamico = sPathReporteDinamico;
	}
		
	public Boolean getisMostrarNumeroPaginacion() {
		return isMostrarNumeroPaginacion;
	}

	public void setisMostrarNumeroPaginacion(Boolean isMostrarNumeroPaginacion) {
		this.isMostrarNumeroPaginacion = isMostrarNumeroPaginacion;
	}
	
	public Mensaje getMensaje() {
		return mensaje;
	}

	public void setMensaje(Mensaje mensaje) {
		this.mensaje = mensaje;
	}
	
	public Boolean getIsPermisoTodoPresupuestoVentasLineas() {
		return isPermisoTodoPresupuestoVentasLineas;
	}

	public void setIsPermisoTodoPresupuestoVentasLineas(Boolean isPermisoTodoPresupuestoVentasLineas) {
		this.isPermisoTodoPresupuestoVentasLineas = isPermisoTodoPresupuestoVentasLineas;
	}

	public Boolean getIsPermisoNuevoPresupuestoVentasLineas() {
		return isPermisoNuevoPresupuestoVentasLineas;
	}

	public void setIsPermisoNuevoPresupuestoVentasLineas(Boolean isPermisoNuevoPresupuestoVentasLineas) {
		this.isPermisoNuevoPresupuestoVentasLineas = isPermisoNuevoPresupuestoVentasLineas;
	}

	public Boolean getIsPermisoActualizarPresupuestoVentasLineas() {
		return isPermisoActualizarPresupuestoVentasLineas;
	}

	public void setIsPermisoActualizarPresupuestoVentasLineas(Boolean isPermisoActualizarPresupuestoVentasLineas) {
		this.isPermisoActualizarPresupuestoVentasLineas = isPermisoActualizarPresupuestoVentasLineas;
	}

	public Boolean getIsPermisoEliminarPresupuestoVentasLineas() {
		return isPermisoEliminarPresupuestoVentasLineas;
	}

	public void setIsPermisoEliminarPresupuestoVentasLineas(Boolean isPermisoEliminarPresupuestoVentasLineas) {
		this.isPermisoEliminarPresupuestoVentasLineas = isPermisoEliminarPresupuestoVentasLineas;
	}

	public Boolean getIsPermisoGuardarCambiosPresupuestoVentasLineas() {
		return isPermisoGuardarCambiosPresupuestoVentasLineas;
	}

	public void setIsPermisoGuardarCambiosPresupuestoVentasLineas(Boolean isPermisoGuardarCambiosPresupuestoVentasLineas) {
		this.isPermisoGuardarCambiosPresupuestoVentasLineas = isPermisoGuardarCambiosPresupuestoVentasLineas;
	}
	
	public Boolean getIsPermisoConsultaPresupuestoVentasLineas() {
		return isPermisoConsultaPresupuestoVentasLineas;
	}

	public void setIsPermisoConsultaPresupuestoVentasLineas(Boolean isPermisoConsultaPresupuestoVentasLineas) {
		this.isPermisoConsultaPresupuestoVentasLineas = isPermisoConsultaPresupuestoVentasLineas;
	}

	public Boolean getIsPermisoBusquedaPresupuestoVentasLineas() {
		return isPermisoBusquedaPresupuestoVentasLineas;
	}

	public void setIsPermisoBusquedaPresupuestoVentasLineas(Boolean isPermisoBusquedaPresupuestoVentasLineas) {
		this.isPermisoBusquedaPresupuestoVentasLineas = isPermisoBusquedaPresupuestoVentasLineas;
	}

	public Boolean getIsPermisoReportePresupuestoVentasLineas() {
		return isPermisoReportePresupuestoVentasLineas;
	}

	public void setIsPermisoReportePresupuestoVentasLineas(Boolean isPermisoReportePresupuestoVentasLineas) {
		this.isPermisoReportePresupuestoVentasLineas = isPermisoReportePresupuestoVentasLineas;
	}
	
	public Boolean getIsPermisoPaginacionMedioPresupuestoVentasLineas() {
		return isPermisoPaginacionMedioPresupuestoVentasLineas;
	}

	public void setIsPermisoPaginacionMedioPresupuestoVentasLineas(Boolean isPermisoPaginacionMedioPresupuestoVentasLineas) {
		this.isPermisoPaginacionMedioPresupuestoVentasLineas = isPermisoPaginacionMedioPresupuestoVentasLineas;
	}
	
	public Boolean getIsPermisoPaginacionTodoPresupuestoVentasLineas() {
		return isPermisoPaginacionTodoPresupuestoVentasLineas;
	}

	public void setIsPermisoPaginacionTodoPresupuestoVentasLineas(Boolean isPermisoPaginacionTodoPresupuestoVentasLineas) {
		this.isPermisoPaginacionTodoPresupuestoVentasLineas = isPermisoPaginacionTodoPresupuestoVentasLineas;
	}
	
	public Boolean getIsPermisoPaginacionAltoPresupuestoVentasLineas() {
		return isPermisoPaginacionAltoPresupuestoVentasLineas;
	}

	public void setIsPermisoPaginacionAltoPresupuestoVentasLineas(Boolean isPermisoPaginacionAltoPresupuestoVentasLineas) {
		this.isPermisoPaginacionAltoPresupuestoVentasLineas = isPermisoPaginacionAltoPresupuestoVentasLineas;
	}
	
	public Boolean getIsPermisoCopiarPresupuestoVentasLineas() {
		return isPermisoCopiarPresupuestoVentasLineas;
	}

	public void setIsPermisoCopiarPresupuestoVentasLineas(Boolean isPermisoCopiarPresupuestoVentasLineas) {
		this.isPermisoCopiarPresupuestoVentasLineas = isPermisoCopiarPresupuestoVentasLineas;
	}
	
	public Boolean getIsPermisoVerFormPresupuestoVentasLineas() {
		return isPermisoVerFormPresupuestoVentasLineas;
	}

	public void setIsPermisoVerFormPresupuestoVentasLineas(Boolean isPermisoVerFormPresupuestoVentasLineas) {
		this.isPermisoVerFormPresupuestoVentasLineas = isPermisoVerFormPresupuestoVentasLineas;
	}
	
	public Boolean getIsPermisoDuplicarPresupuestoVentasLineas() {
		return isPermisoDuplicarPresupuestoVentasLineas;
	}

	public void setIsPermisoDuplicarPresupuestoVentasLineas(Boolean isPermisoDuplicarPresupuestoVentasLineas) {
		this.isPermisoDuplicarPresupuestoVentasLineas = isPermisoDuplicarPresupuestoVentasLineas;
	}
	
	public Boolean getIsPermisoOrdenPresupuestoVentasLineas() {
		return isPermisoOrdenPresupuestoVentasLineas;
	}

	public void setIsPermisoOrdenPresupuestoVentasLineas(Boolean isPermisoOrdenPresupuestoVentasLineas) {
		this.isPermisoOrdenPresupuestoVentasLineas = isPermisoOrdenPresupuestoVentasLineas;
	}
	
	public String getsVisibilidadTablaBusquedas() {
		return sVisibilidadTablaBusquedas;
	}

	public void setsVisibilidadTablaBusquedas(String sVisibilidadTablaBusquedas) {
		this.sVisibilidadTablaBusquedas = sVisibilidadTablaBusquedas;
	}
	
	public String getsVisibilidadTablaElementos() {
		return sVisibilidadTablaElementos;
	}

	public void setsVisibilidadTablaElementos(String sVisibilidadTablaElementos) {
		this.sVisibilidadTablaElementos = sVisibilidadTablaElementos;
	}

	public String getsVisibilidadTablaAcciones() {
		return sVisibilidadTablaAcciones;
	}

	public void setsVisibilidadTablaAcciones(String sVisibilidadTablaAcciones) {
		this.sVisibilidadTablaAcciones = sVisibilidadTablaAcciones;
	}
	
	public Boolean getIsVisibilidadCeldaNuevoPresupuestoVentasLineas() {
		return isVisibilidadCeldaNuevoPresupuestoVentasLineas;
	}

	public void setIsVisibilidadCeldaNuevoPresupuestoVentasLineas(Boolean isVisibilidadCeldaNuevoPresupuestoVentasLineas) {
		this.isVisibilidadCeldaNuevoPresupuestoVentasLineas = isVisibilidadCeldaNuevoPresupuestoVentasLineas;
	}
	
	public Boolean getIsVisibilidadCeldaDuplicarPresupuestoVentasLineas() {
		return isVisibilidadCeldaDuplicarPresupuestoVentasLineas;
	}

	public void setIsVisibilidadCeldaDuplicarPresupuestoVentasLineas(Boolean isVisibilidadCeldaDuplicarPresupuestoVentasLineas) {
		this.isVisibilidadCeldaDuplicarPresupuestoVentasLineas = isVisibilidadCeldaDuplicarPresupuestoVentasLineas;
	}
	
	public Boolean getIsVisibilidadCeldaCopiarPresupuestoVentasLineas() {
		return isVisibilidadCeldaCopiarPresupuestoVentasLineas;
	}

	public void setIsVisibilidadCeldaCopiarPresupuestoVentasLineas(Boolean isVisibilidadCeldaCopiarPresupuestoVentasLineas) {
		this.isVisibilidadCeldaCopiarPresupuestoVentasLineas = isVisibilidadCeldaCopiarPresupuestoVentasLineas;
	}
	
	public Boolean getIsVisibilidadCeldaVerFormPresupuestoVentasLineas() {
		return isVisibilidadCeldaVerFormPresupuestoVentasLineas;
	}

	public void setIsVisibilidadCeldaVerFormPresupuestoVentasLineas(Boolean isVisibilidadCeldaVerFormPresupuestoVentasLineas) {
		this.isVisibilidadCeldaVerFormPresupuestoVentasLineas = isVisibilidadCeldaVerFormPresupuestoVentasLineas;
	}
	
	public Boolean getIsVisibilidadCeldaOrdenPresupuestoVentasLineas() {
		return isVisibilidadCeldaOrdenPresupuestoVentasLineas;
	}

	public void setIsVisibilidadCeldaOrdenPresupuestoVentasLineas(Boolean isVisibilidadCeldaOrdenPresupuestoVentasLineas) {
		this.isVisibilidadCeldaOrdenPresupuestoVentasLineas = isVisibilidadCeldaOrdenPresupuestoVentasLineas;
	}
	
	public Boolean getIsVisibilidadCeldaNuevoRelacionesPresupuestoVentasLineas() {
		return isVisibilidadCeldaNuevoRelacionesPresupuestoVentasLineas;
	}

	public void setIsVisibilidadCeldaNuevoRelacionesPresupuestoVentasLineas(Boolean isVisibilidadCeldaNuevoRelacionesPresupuestoVentasLineas) {
		this.isVisibilidadCeldaNuevoRelacionesPresupuestoVentasLineas = isVisibilidadCeldaNuevoRelacionesPresupuestoVentasLineas;
	}
	
	public Boolean getIsVisibilidadCeldaModificarPresupuestoVentasLineas() {
		return isVisibilidadCeldaModificarPresupuestoVentasLineas;
	}

	public void setIsVisibilidadCeldaModificarPresupuestoVentasLineas(Boolean isVisibilidadCeldaModificarPresupuestoVentasLineas) {
		this.isVisibilidadCeldaModificarPresupuestoVentasLineas = isVisibilidadCeldaModificarPresupuestoVentasLineas;
	}
	
	public Boolean getIsVisibilidadCeldaActualizarPresupuestoVentasLineas() {
		return isVisibilidadCeldaActualizarPresupuestoVentasLineas;
	}

	public void setIsVisibilidadCeldaActualizarPresupuestoVentasLineas(Boolean isVisibilidadCeldaActualizarPresupuestoVentasLineas) {
		this.isVisibilidadCeldaActualizarPresupuestoVentasLineas = isVisibilidadCeldaActualizarPresupuestoVentasLineas;
	}

	public Boolean getIsVisibilidadCeldaEliminarPresupuestoVentasLineas() {
		return isVisibilidadCeldaEliminarPresupuestoVentasLineas;
	}

	public void setIsVisibilidadCeldaEliminarPresupuestoVentasLineas(Boolean isVisibilidadCeldaEliminarPresupuestoVentasLineas) {
		this.isVisibilidadCeldaEliminarPresupuestoVentasLineas = isVisibilidadCeldaEliminarPresupuestoVentasLineas;
	}

	public Boolean getIsVisibilidadCeldaCancelarPresupuestoVentasLineas() {
		return isVisibilidadCeldaCancelarPresupuestoVentasLineas;
	}

	public void setIsVisibilidadCeldaCancelarPresupuestoVentasLineas(Boolean isVisibilidadCeldaCancelarPresupuestoVentasLineas) {
		this.isVisibilidadCeldaCancelarPresupuestoVentasLineas = isVisibilidadCeldaCancelarPresupuestoVentasLineas;
	}

	public Boolean getIsVisibilidadCeldaGuardarPresupuestoVentasLineas() {
		return isVisibilidadCeldaGuardarPresupuestoVentasLineas;
	}

	public void setIsVisibilidadCeldaGuardarPresupuestoVentasLineas(Boolean isVisibilidadCeldaGuardarPresupuestoVentasLineas) {
		this.isVisibilidadCeldaGuardarPresupuestoVentasLineas = isVisibilidadCeldaGuardarPresupuestoVentasLineas;
	}
	
	public Boolean getIsVisibilidadCeldaGuardarCambiosPresupuestoVentasLineas() {
		return isVisibilidadCeldaGuardarCambiosPresupuestoVentasLineas;
	}

	public void setIsVisibilidadCeldaGuardarCambiosPresupuestoVentasLineas(Boolean isVisibilidadCeldaGuardarCambiosPresupuestoVentasLineas) {
		this.isVisibilidadCeldaGuardarCambiosPresupuestoVentasLineas = isVisibilidadCeldaGuardarCambiosPresupuestoVentasLineas;
	}
		
	public PresupuestoVentasLineasSessionBean getpresupuestoventaslineasSessionBean() {
		return this.presupuestoventaslineasSessionBean;
	}
	
	public void setpresupuestoventaslineasSessionBean(PresupuestoVentasLineasSessionBean presupuestoventaslineasSessionBean) {
		this.presupuestoventaslineasSessionBean=presupuestoventaslineasSessionBean;
	}
	
	
	public Boolean getisVisibilidadFK_IdCiudad() {
		return this.isVisibilidadFK_IdCiudad;
	}

	public void setisVisibilidadFK_IdCiudad(Boolean isVisibilidadFK_IdCiudad) {
		this.isVisibilidadFK_IdCiudad=isVisibilidadFK_IdCiudad;
	}

	public Boolean getisVisibilidadFK_IdEjercicio() {
		return this.isVisibilidadFK_IdEjercicio;
	}

	public void setisVisibilidadFK_IdEjercicio(Boolean isVisibilidadFK_IdEjercicio) {
		this.isVisibilidadFK_IdEjercicio=isVisibilidadFK_IdEjercicio;
	}

	public Boolean getisVisibilidadFK_IdEmpresa() {
		return this.isVisibilidadFK_IdEmpresa;
	}

	public void setisVisibilidadFK_IdEmpresa(Boolean isVisibilidadFK_IdEmpresa) {
		this.isVisibilidadFK_IdEmpresa=isVisibilidadFK_IdEmpresa;
	}

	public Boolean getisVisibilidadFK_IdLinea() {
		return this.isVisibilidadFK_IdLinea;
	}

	public void setisVisibilidadFK_IdLinea(Boolean isVisibilidadFK_IdLinea) {
		this.isVisibilidadFK_IdLinea=isVisibilidadFK_IdLinea;
	}

	public Boolean getisVisibilidadFK_IdLineaCategoria() {
		return this.isVisibilidadFK_IdLineaCategoria;
	}

	public void setisVisibilidadFK_IdLineaCategoria(Boolean isVisibilidadFK_IdLineaCategoria) {
		this.isVisibilidadFK_IdLineaCategoria=isVisibilidadFK_IdLineaCategoria;
	}

	public Boolean getisVisibilidadFK_IdLineaGrupo() {
		return this.isVisibilidadFK_IdLineaGrupo;
	}

	public void setisVisibilidadFK_IdLineaGrupo(Boolean isVisibilidadFK_IdLineaGrupo) {
		this.isVisibilidadFK_IdLineaGrupo=isVisibilidadFK_IdLineaGrupo;
	}

	public Boolean getisVisibilidadFK_IdLineaMarca() {
		return this.isVisibilidadFK_IdLineaMarca;
	}

	public void setisVisibilidadFK_IdLineaMarca(Boolean isVisibilidadFK_IdLineaMarca) {
		this.isVisibilidadFK_IdLineaMarca=isVisibilidadFK_IdLineaMarca;
	}

	public Boolean getisVisibilidadFK_IdPais() {
		return this.isVisibilidadFK_IdPais;
	}

	public void setisVisibilidadFK_IdPais(Boolean isVisibilidadFK_IdPais) {
		this.isVisibilidadFK_IdPais=isVisibilidadFK_IdPais;
	}

	public Boolean getisVisibilidadFK_IdPeriodo() {
		return this.isVisibilidadFK_IdPeriodo;
	}

	public void setisVisibilidadFK_IdPeriodo(Boolean isVisibilidadFK_IdPeriodo) {
		this.isVisibilidadFK_IdPeriodo=isVisibilidadFK_IdPeriodo;
	}

	public Boolean getisVisibilidadFK_IdSucursal() {
		return this.isVisibilidadFK_IdSucursal;
	}

	public void setisVisibilidadFK_IdSucursal(Boolean isVisibilidadFK_IdSucursal) {
		this.isVisibilidadFK_IdSucursal=isVisibilidadFK_IdSucursal;
	}

	public Boolean getisVisibilidadFK_IdVendedor() {
		return this.isVisibilidadFK_IdVendedor;
	}

	public void setisVisibilidadFK_IdVendedor(Boolean isVisibilidadFK_IdVendedor) {
		this.isVisibilidadFK_IdVendedor=isVisibilidadFK_IdVendedor;
	}

	public Boolean getisVisibilidadFK_IdZona() {
		return this.isVisibilidadFK_IdZona;
	}

	public void setisVisibilidadFK_IdZona(Boolean isVisibilidadFK_IdZona) {
		this.isVisibilidadFK_IdZona=isVisibilidadFK_IdZona;
	}

	
	
	public void setVariablesFormularioToObjetoActualForeignKeysPresupuestoVentasLineas(PresupuestoVentasLineas presupuestoventaslineas)throws Exception {
		try {
			
				this.setActualParaGuardarEmpresaForeignKey(presupuestoventaslineas,null);
				this.setActualParaGuardarSucursalForeignKey(presupuestoventaslineas,null);
				this.setActualParaGuardarEjercicioForeignKey(presupuestoventaslineas,null);
				this.setActualParaGuardarPeriodoForeignKey(presupuestoventaslineas,null);
				this.setActualParaGuardarVendedorForeignKey(presupuestoventaslineas,null);
				this.setActualParaGuardarPaisForeignKey(presupuestoventaslineas,null);
				this.setActualParaGuardarCiudadForeignKey(presupuestoventaslineas,null);
				this.setActualParaGuardarZonaForeignKey(presupuestoventaslineas,null);
				this.setActualParaGuardarLineaForeignKey(presupuestoventaslineas,null);
				this.setActualParaGuardarLineaGrupoForeignKey(presupuestoventaslineas,null);
				this.setActualParaGuardarLineaCategoriaForeignKey(presupuestoventaslineas,null);
				this.setActualParaGuardarLineaMarcaForeignKey(presupuestoventaslineas,null);
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void cargarLicenciaCliente(DatosCliente datosCliente) throws Exception {
		Boolean existe=false;
			
		try {
				InputStream reportFile=null;
				
				String sPath=this.parametroGeneralUsuario.getpath_exportar()+"erp_bydan/license/license.xml";
				
				reportFile = new FileInputStream(sPath);
				
				Document documentBuilder=null;
				
				if(this.constantes2.DOCUMENT_BUILDER==null) {
					documentBuilder=Funciones2.parseXml(reportFile);
				} else {
					documentBuilder=this.constantes2.DOCUMENT_BUILDER;
				}
				
				//GlobalSeguridad.readXml(documentBuilder);
				
				String sNamePCServerLicencia="";
				String sClaveSistemaLicencia="";
				Date dFechaServerLicencia=null;
				
				//CARGAR ELEMENTOS DE LICENCIA
				NodeList nodeList = documentBuilder.getElementsByTagName("Licencia");
				
				for (int iIndice = 0; iIndice < nodeList.getLength(); iIndice++) {
					Node node = nodeList.item(iIndice);
				
					if (node.getNodeType() == Node.ELEMENT_NODE) {
						Element element = (Element) node;
						 
						sNamePCServerLicencia=element.getElementsByTagName("NombrePc").item(0).getTextContent();
						sClaveSistemaLicencia=element.getElementsByTagName("ClaveSistema").item(0).getTextContent();
						
						existe=true;
						break;
					}
				}														
			
				
			if(existe) {
				datosCliente.setsClaveSistema(sClaveSistemaLicencia);
				
				if(!datosCliente.getsNamePCServer().equals(sNamePCServerLicencia)
					&& !datosCliente.getsNamePCServer().equals("")) {
					
					datosCliente.setsNamePCServer(sNamePCServerLicencia);
				}
			} else {
				throw new Exception("NO EXISTE LICENCIA O NO ESTA BIEN FORMADO");
			}
		} catch(Exception e) {
			throw new Exception("NO EXISTE LICENCIA O NO ESTA BIEN FORMADO");
		}						
	}
	
	public void cargarDatosCliente() throws Exception {
		String sPrimerMacAddress="";		
		String sHostName="";		 
		String sHostIp="";		  
		String sHostUser="";
		
		
		sPrimerMacAddress=FuncionesNetwork.getPrimerMacAddress();		
		sHostName=FuncionesNetwork.getHostName();		 
		sHostIp=FuncionesNetwork.getHostIp();		  
		sHostUser=FuncionesNetwork.getHostUser();
		
		
		this.datosCliente=new DatosCliente();
		if(lIdUsuarioSesion!=null){datosCliente.setIdUsuario(this.lIdUsuarioSesion);}
		
		//SERVIDOR WEB Y TALVEZ SERVIDOR SWING WINDOWS
		this.datosCliente.setsUsuarioPCServer(sHostUser);
		this.datosCliente.setsNamePCServer(sHostName);
		this.datosCliente.setsIPPCServer(sHostIp);
		this.datosCliente.setsMacAddressPCServer(sPrimerMacAddress);
			
			//CLIENTE SWING WINDOWS
			this.datosCliente.setIsClienteWeb(false);
			
			this.datosCliente.setsUsuarioPC(sHostUser);
			this.datosCliente.setsNamePC(sHostName);
			this.datosCliente.setsIPPC(sHostIp);
			this.datosCliente.setsMacAddressPC(sPrimerMacAddress);	
			
			
			//this.cargarLicenciaCliente(this.datosCliente);
			
	}
	
	public void bugActualizarReferenciaActual(PresupuestoVentasLineas presupuestoventaslineas,PresupuestoVentasLineas presupuestoventaslineasAux) throws Exception {
		//ARCHITECTURE		
		//EL ID NEGATIVO GUARDADO EN ORIGINAL SIRVE PARA VERIFICAR Y ACTUALIZAR EL REGISTRO NUEVO (ID,VERSIONROW)
		this.setCamposBaseDesdeOriginalPresupuestoVentasLineas(presupuestoventaslineas);
					
		//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
		presupuestoventaslineasAux.setId(presupuestoventaslineas.getId());
		presupuestoventaslineasAux.setVersionRow(presupuestoventaslineas.getVersionRow());					
	}
	
	public void ejecutarMantenimiento(MaintenanceType maintenanceType)throws Exception {	
		try	{								
			
			//this.startProcessPresupuestoVentasLineas();
		
			int intSelectedRow = this.jTableDatosPresupuestoVentasLineas.getSelectedRow();	       
			
			//PUEDE SER -1 CUANDO SE ELIMINA EN GUARDAR CAMBIOS
			if(intSelectedRow>=0 && maintenanceType!=MaintenanceType.GUARDARCAMBIOS) {
				//SE PIEDE INDICE SELECTED CON FILA TOTALES, ASEGURARSE QUE OBJETO ACTUAL ESTE EN FORMULARIO
					
				//ARCHITECTURE
				
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoventaslineas =(PresupuestoVentasLineas) this.presupuestoventaslineasLogic.getPresupuestoVentasLineass().toArray()[this.jTableDatosPresupuestoVentasLineas.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
					this.presupuestoventaslineas =(PresupuestoVentasLineas) this.presupuestoventaslineass.toArray()[this.jTableDatosPresupuestoVentasLineas.convertRowIndexToModel(intSelectedRow)];
				}
				
				//ARCHITECTURE
				
				if(PresupuestoVentasLineasJInternalFrame.ISBINDING_MANUAL_TABLA) {
					//this.setVariablesFormularioToObjetoActualPresupuestoVentasLineas(this.presupuestoventaslineas,true);
				}
				
				this.setVariablesFormularioToObjetoActualForeignKeysPresupuestoVentasLineas(this.presupuestoventaslineas);
			}
			
			//LUEGO DE TRAER DATOS CORRESPONDIENTES QUE COINCIDA LISTA TABLA QUITO FILA TOTALES
			if(this.conTotales) {
				//MEJOR LO DEJO, SI EXISTE EXCEPCION SE PIEDE FILA TOTALES Y ORDEN INDICE FILA ACTUAL
				//this.quitarFilaTotales();
			}
			
			this.cargarDatosCliente();
			
			this.datosDeep=new DatosDeep();
			
			//SE CAMBIA ESTADOS CON ERROR, ENTONCES SE EJECUTA ANTES
			//this.invalidValues = presupuestoventaslineasValidator.getInvalidValues(this.presupuestoventaslineas);
			
			//if(this.invalidValues==null || this.invalidValues.length<=0) {
			
			presupuestoventaslineasLogic.setDatosCliente(datosCliente);
			presupuestoventaslineasLogic.setIsConDeep(false);
			
			if(maintenanceType==MaintenanceType.NUEVO) {
				presupuestoventaslineasAux=new  PresupuestoVentasLineas();
				
				presupuestoventaslineasAux.setIsNew(true);
				presupuestoventaslineasAux.setIsChanged(true);
				
				presupuestoventaslineasAux.setPresupuestoVentasLineasOriginal(this.presupuestoventaslineas);
				
				presupuestoventaslineasAux.setId(this.presupuestoventaslineas.getId());	
				presupuestoventaslineasAux.setVersionRow(this.presupuestoventaslineas.getVersionRow());	
				presupuestoventaslineasAux.setid_empresa(this.presupuestoventaslineas.getid_empresa());	
				presupuestoventaslineasAux.setid_sucursal(this.presupuestoventaslineas.getid_sucursal());	
				presupuestoventaslineasAux.setid_ejercicio(this.presupuestoventaslineas.getid_ejercicio());	
				presupuestoventaslineasAux.setid_periodo(this.presupuestoventaslineas.getid_periodo());	
				presupuestoventaslineasAux.setid_vendedor(this.presupuestoventaslineas.getid_vendedor());	
				presupuestoventaslineasAux.setid_pais(this.presupuestoventaslineas.getid_pais());	
				presupuestoventaslineasAux.setid_ciudad(this.presupuestoventaslineas.getid_ciudad());	
				
				if(this.presupuestoventaslineas.getid_zona()!=null && this.presupuestoventaslineas.getid_zona()>0L) {
					presupuestoventaslineasAux.setid_zona(this.presupuestoventaslineas.getid_zona());
				} else {
					presupuestoventaslineasAux.setid_zona(null);
				}	
				presupuestoventaslineasAux.setid_linea(this.presupuestoventaslineas.getid_linea());	
				
				if(this.presupuestoventaslineas.getid_linea_grupo()!=null && this.presupuestoventaslineas.getid_linea_grupo()>0L) {
					presupuestoventaslineasAux.setid_linea_grupo(this.presupuestoventaslineas.getid_linea_grupo());
				} else {
					presupuestoventaslineasAux.setid_linea_grupo(null);
				}	
				
				if(this.presupuestoventaslineas.getid_linea_categoria()!=null && this.presupuestoventaslineas.getid_linea_categoria()>0L) {
					presupuestoventaslineasAux.setid_linea_categoria(this.presupuestoventaslineas.getid_linea_categoria());
				} else {
					presupuestoventaslineasAux.setid_linea_categoria(null);
				}	
				
				if(this.presupuestoventaslineas.getid_linea_marca()!=null && this.presupuestoventaslineas.getid_linea_marca()>0L) {
					presupuestoventaslineasAux.setid_linea_marca(this.presupuestoventaslineas.getid_linea_marca());
				} else {
					presupuestoventaslineasAux.setid_linea_marca(null);
				}	
				presupuestoventaslineasAux.setprecio(this.presupuestoventaslineas.getprecio());	
				presupuestoventaslineasAux.setcantidad(this.presupuestoventaslineas.getcantidad());	
				presupuestoventaslineasAux.setvalor(this.presupuestoventaslineas.getvalor());	
				presupuestoventaslineasAux.setporcentaje(this.presupuestoventaslineas.getporcentaje());	
				presupuestoventaslineasAux.setcantidad_total(this.presupuestoventaslineas.getcantidad_total());	
				presupuestoventaslineasAux.setvalor_total(this.presupuestoventaslineas.getvalor_total());	
								
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//NO ENTENDIBLE PORQUE PONER
					//if(this.presupuestoventaslineasSessionBean.getEstaModoGuardarRelaciones() 
					//	|| this.presupuestoventaslineasSessionBean.getEsGuardarRelacionado())	{
						actualizarLista(presupuestoventaslineasAux,presupuestoventaslineasLogic.getPresupuestoVentasLineass());
					//}
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(presupuestoventaslineasAux,presupuestoventaslineass);
				}
				//ARCHITECTURE
				
				if(!isGuardarCambiosEnLote  && !this.presupuestoventaslineasSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.presupuestoventaslineasSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						presupuestoventaslineasLogic.savePresupuestoVentasLineass();//WithConnection
						//presupuestoventaslineasLogic.getSetVersionRowPresupuestoVentasLineass();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE		
					
					//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
					this.bugActualizarReferenciaActual(this.presupuestoventaslineas,presupuestoventaslineasAux);
					
					this.refrescarForeignKeysDescripcionesPresupuestoVentasLineas();
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					if(this.presupuestoventaslineasSessionBean.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
						}
						//ARCHITECTURE	
						
						if(!this.presupuestoventaslineasSessionBean.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE
												
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								presupuestoventaslineasLogic.savePresupuestoVentasLineasRelaciones(presupuestoventaslineasAux);//WithConnection
								//presupuestoventaslineasLogic.getSetVersionRowPresupuestoVentasLineass();//WithConnection
							} else if(Constantes.ISUSAEJBREMOTE) {
							} else if(Constantes.ISUSAEJBHOME) {
							}
							//ARCHITECTURE
							
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							this.bugActualizarReferenciaActual(this.presupuestoventaslineas,presupuestoventaslineasAux);
					
					
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE	
						} else {
							
							
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								if(this.presupuestoventaslineasSessionBean.getEstaModoGuardarRelaciones() 
									|| this.presupuestoventaslineasSessionBean.getEsGuardarRelacionado())	{
									actualizarLista(presupuestoventaslineasAux,presupuestoventaslineasLogic.getPresupuestoVentasLineass());
								}
							} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
								actualizarLista(presupuestoventaslineasAux,presupuestoventaslineass);
							}
							//ARCHITECTURE
							
							//AQUI EL ID NEGATIVO ES EL ID BUSCADO, YA QUE NO SE GENERA OTRO EN LA DB POR INGRESAR UNO NUEVO
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							//this.bugActualizarReferenciaActual(this.presupuestoventaslineas,presupuestoventaslineasAux);												
						}
					}
				}
			} else if(maintenanceType==MaintenanceType.ACTUALIZAR) {
				presupuestoventaslineasAux=new  PresupuestoVentasLineas();
				
				//PUEDE QUE SE ACTUALIZE ALGUN REGISTRO NUEVO
				if(!this.presupuestoventaslineasSessionBean.getEsGuardarRelacionado() 
					|| (this.presupuestoventaslineasSessionBean.getEsGuardarRelacionado() && this.presupuestoventaslineas.getId()>=0)) {
						
					presupuestoventaslineasAux.setIsNew(false);
				}
				
				presupuestoventaslineasAux.setIsDeleted(false);
			
				presupuestoventaslineasAux.setId(this.presupuestoventaslineas.getId());	
				presupuestoventaslineasAux.setVersionRow(this.presupuestoventaslineas.getVersionRow());	
				presupuestoventaslineasAux.setid_empresa(this.presupuestoventaslineas.getid_empresa());	
				presupuestoventaslineasAux.setid_sucursal(this.presupuestoventaslineas.getid_sucursal());	
				presupuestoventaslineasAux.setid_ejercicio(this.presupuestoventaslineas.getid_ejercicio());	
				presupuestoventaslineasAux.setid_periodo(this.presupuestoventaslineas.getid_periodo());	
				presupuestoventaslineasAux.setid_vendedor(this.presupuestoventaslineas.getid_vendedor());	
				presupuestoventaslineasAux.setid_pais(this.presupuestoventaslineas.getid_pais());	
				presupuestoventaslineasAux.setid_ciudad(this.presupuestoventaslineas.getid_ciudad());	
				
				if(this.presupuestoventaslineas.getid_zona()!=null && this.presupuestoventaslineas.getid_zona()>0L) {
					presupuestoventaslineasAux.setid_zona(this.presupuestoventaslineas.getid_zona());
				} else {
					presupuestoventaslineasAux.setid_zona(null);
				}	
				presupuestoventaslineasAux.setid_linea(this.presupuestoventaslineas.getid_linea());	
				
				if(this.presupuestoventaslineas.getid_linea_grupo()!=null && this.presupuestoventaslineas.getid_linea_grupo()>0L) {
					presupuestoventaslineasAux.setid_linea_grupo(this.presupuestoventaslineas.getid_linea_grupo());
				} else {
					presupuestoventaslineasAux.setid_linea_grupo(null);
				}	
				
				if(this.presupuestoventaslineas.getid_linea_categoria()!=null && this.presupuestoventaslineas.getid_linea_categoria()>0L) {
					presupuestoventaslineasAux.setid_linea_categoria(this.presupuestoventaslineas.getid_linea_categoria());
				} else {
					presupuestoventaslineasAux.setid_linea_categoria(null);
				}	
				
				if(this.presupuestoventaslineas.getid_linea_marca()!=null && this.presupuestoventaslineas.getid_linea_marca()>0L) {
					presupuestoventaslineasAux.setid_linea_marca(this.presupuestoventaslineas.getid_linea_marca());
				} else {
					presupuestoventaslineasAux.setid_linea_marca(null);
				}	
				presupuestoventaslineasAux.setprecio(this.presupuestoventaslineas.getprecio());	
				presupuestoventaslineasAux.setcantidad(this.presupuestoventaslineas.getcantidad());	
				presupuestoventaslineasAux.setvalor(this.presupuestoventaslineas.getvalor());	
				presupuestoventaslineasAux.setporcentaje(this.presupuestoventaslineas.getporcentaje());	
				presupuestoventaslineasAux.setcantidad_total(this.presupuestoventaslineas.getcantidad_total());	
				presupuestoventaslineasAux.setvalor_total(this.presupuestoventaslineas.getvalor_total());	
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					actualizarLista(presupuestoventaslineasAux,presupuestoventaslineasLogic.getPresupuestoVentasLineass());
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(presupuestoventaslineasAux,presupuestoventaslineass);
				}
				//ARCHITECTURE
				
				if(!isGuardarCambiosEnLote && !this.presupuestoventaslineasSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.presupuestoventaslineasSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						presupuestoventaslineasLogic.savePresupuestoVentasLineass();//WithConnection
						//presupuestoventaslineasLogic.getSetVersionRowPresupuestoVentasLineass();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}	
					//ARCHITECTURE
					
					//TALVEZ ESTA DEMAS POR SER UPDATE
					//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
					this.bugActualizarReferenciaActual(this.presupuestoventaslineas,presupuestoventaslineasAux);
					
					this.refrescarForeignKeysDescripcionesPresupuestoVentasLineas();
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					if(this.presupuestoventaslineasSessionBean.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
						}
						//ARCHITECTURE
						
						if(!this.presupuestoventaslineasSessionBean.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								presupuestoventaslineasLogic.savePresupuestoVentasLineasRelaciones(presupuestoventaslineasAux);//WithConnection
								//presupuestoventaslineasLogic.getSetVersionRowPresupuestoVentasLineass();//WithConnection
							} else if(Constantes.ISUSAEJBREMOTE) {
							} else if(Constantes.ISUSAEJBHOME) {
							}
							//ARCHITECTURE
							
							//TALVEZ ESTA DEMAS POR SER UPDATE
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							this.bugActualizarReferenciaActual(this.presupuestoventaslineas,presupuestoventaslineasAux);
					
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE
						} else {
							
							
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								if(this.presupuestoventaslineasSessionBean.getEstaModoGuardarRelaciones() 
									|| this.presupuestoventaslineasSessionBean.getEsGuardarRelacionado())	{
									actualizarLista(presupuestoventaslineasAux,presupuestoventaslineasLogic.getPresupuestoVentasLineass());
								}
							} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
								actualizarLista(presupuestoventaslineasAux,presupuestoventaslineass);
							}
							//ARCHITECTURE
							
							//AQUI EL ID NEGATIVO ES EL ID BUSCADO, YA QUE NO SE GENERA OTRO EN LA DB POR INGRESAR UNO NUEVO							
							//TALVEZ ESTA DEMAS POR SER UPDATE
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							//this.bugActualizarReferenciaActual(this.presupuestoventaslineas,presupuestoventaslineasAux);
					
						}
					}
				}				
			} else if(maintenanceType==MaintenanceType.ELIMINAR) {
				presupuestoventaslineasAux=new  PresupuestoVentasLineas();
				
				presupuestoventaslineasAux.setIsNew(false);
				presupuestoventaslineasAux.setIsChanged(false);
				
				presupuestoventaslineasAux.setIsDeleted(true);
				
				presupuestoventaslineasAux.setId(this.presupuestoventaslineas.getId());	
				presupuestoventaslineasAux.setVersionRow(this.presupuestoventaslineas.getVersionRow());	
				presupuestoventaslineasAux.setid_empresa(this.presupuestoventaslineas.getid_empresa());	
				presupuestoventaslineasAux.setid_sucursal(this.presupuestoventaslineas.getid_sucursal());	
				presupuestoventaslineasAux.setid_ejercicio(this.presupuestoventaslineas.getid_ejercicio());	
				presupuestoventaslineasAux.setid_periodo(this.presupuestoventaslineas.getid_periodo());	
				presupuestoventaslineasAux.setid_vendedor(this.presupuestoventaslineas.getid_vendedor());	
				presupuestoventaslineasAux.setid_pais(this.presupuestoventaslineas.getid_pais());	
				presupuestoventaslineasAux.setid_ciudad(this.presupuestoventaslineas.getid_ciudad());	
				
				if(this.presupuestoventaslineas.getid_zona()!=null && this.presupuestoventaslineas.getid_zona()>0L) {
					presupuestoventaslineasAux.setid_zona(this.presupuestoventaslineas.getid_zona());
				} else {
					presupuestoventaslineasAux.setid_zona(null);
				}	
				presupuestoventaslineasAux.setid_linea(this.presupuestoventaslineas.getid_linea());	
				
				if(this.presupuestoventaslineas.getid_linea_grupo()!=null && this.presupuestoventaslineas.getid_linea_grupo()>0L) {
					presupuestoventaslineasAux.setid_linea_grupo(this.presupuestoventaslineas.getid_linea_grupo());
				} else {
					presupuestoventaslineasAux.setid_linea_grupo(null);
				}	
				
				if(this.presupuestoventaslineas.getid_linea_categoria()!=null && this.presupuestoventaslineas.getid_linea_categoria()>0L) {
					presupuestoventaslineasAux.setid_linea_categoria(this.presupuestoventaslineas.getid_linea_categoria());
				} else {
					presupuestoventaslineasAux.setid_linea_categoria(null);
				}	
				
				if(this.presupuestoventaslineas.getid_linea_marca()!=null && this.presupuestoventaslineas.getid_linea_marca()>0L) {
					presupuestoventaslineasAux.setid_linea_marca(this.presupuestoventaslineas.getid_linea_marca());
				} else {
					presupuestoventaslineasAux.setid_linea_marca(null);
				}	
				presupuestoventaslineasAux.setprecio(this.presupuestoventaslineas.getprecio());	
				presupuestoventaslineasAux.setcantidad(this.presupuestoventaslineas.getcantidad());	
				presupuestoventaslineasAux.setvalor(this.presupuestoventaslineas.getvalor());	
				presupuestoventaslineasAux.setporcentaje(this.presupuestoventaslineas.getporcentaje());	
				presupuestoventaslineasAux.setcantidad_total(this.presupuestoventaslineas.getcantidad_total());	
				presupuestoventaslineasAux.setvalor_total(this.presupuestoventaslineas.getvalor_total());	
				
				if(this.presupuestoventaslineasSessionBean.getEsGuardarRelacionado()) {
					//ELEMENTO ACTUAL NO SE HA INGRESADO AL SISTEMA, NO SE PUEDE ELIMINAR ALGO QUE NO EXISTE
					if(this.presupuestoventaslineasAux.getId()>=0) {	
						this.presupuestoventaslineassEliminados.add(presupuestoventaslineasAux);											
					}
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					actualizarLista(presupuestoventaslineasAux,presupuestoventaslineasLogic.getPresupuestoVentasLineass());
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(presupuestoventaslineasAux,presupuestoventaslineass);
				}
				//ARCHITECTURE
				
				
				if(!isGuardarCambiosEnLote && !this.presupuestoventaslineasSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.presupuestoventaslineasSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						presupuestoventaslineasLogic.savePresupuestoVentasLineass();//WithConnection
						//presupuestoventaslineasLogic.getSetVersionRowPresupuestoVentasLineass();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}	
					//ARCHITECTURE
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					if(this.presupuestoventaslineasSessionBean.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
						}
						//ARCHITECTURE
						
						
						if(!this.presupuestoventaslineasSessionBean.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								presupuestoventaslineasLogic.savePresupuestoVentasLineasRelaciones(presupuestoventaslineasAux);//WithConnection
								//presupuestoventaslineasLogic.getSetVersionRowPresupuestoVentasLineass();//WithConnection
							} else if(Constantes.ISUSAEJBREMOTE) {
							} else if(Constantes.ISUSAEJBHOME) {
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE
						}
					}  else {
							
						
								
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							if(this.presupuestoventaslineasSessionBean.getEstaModoGuardarRelaciones() 
								|| this.presupuestoventaslineasSessionBean.getEsGuardarRelacionado())	{
								actualizarLista(presupuestoventaslineasAux,presupuestoventaslineasLogic.getPresupuestoVentasLineass());
							}
						} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
							actualizarLista(presupuestoventaslineasAux,presupuestoventaslineass);
						}
						//ARCHITECTURE
					}
				}				
			} else if(maintenanceType==MaintenanceType.GUARDARCAMBIOS) {		
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoventaslineasLogic.getPresupuestoVentasLineass().addAll(this.presupuestoventaslineassEliminados);
					
					presupuestoventaslineasLogic.savePresupuestoVentasLineass();//WithConnection
					//presupuestoventaslineasLogic.getSetVersionRowPresupuestoVentasLineass();//WithConnection
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}	
				//ARCHITECTURE
				this.refrescarForeignKeysDescripcionesPresupuestoVentasLineas();
				
				this.presupuestoventaslineassEliminados= new ArrayList<PresupuestoVentasLineas>();		
			}
			
			if(this.presupuestoventaslineasSessionBean.getEsGuardarRelacionado()) {
				 this.crearFilaTotales();
			}
			
			
									
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.presupuestoventaslineasSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				if(!this.isPostAccionSinMensaje) {
					JOptionPane.showMessageDialog(this,"Presupuesto Ventas_lineas GUARDADO CORRECTAMENTE","MANTENIMIENTO DE Presupuesto Ventas_lineas",JOptionPane.INFORMATION_MESSAGE);
					if(maintenanceType==MaintenanceType.NUEVO || maintenanceType==MaintenanceType.ACTUALIZAR) {
						//CUANDO ES NUEVO SE PIERDE REFERENCIA NO SE PORQUE
						this.presupuestoventaslineas=presupuestoventaslineasAux;
					}
				}
			}
			
			this.isErrorGuardar=false;
			
			this.inicializarInvalidValues();
		/*
		} else {
			this.mostrarInvalidValues();	
		}
		*/
			
		} catch(Exception e) {
			this.isErrorGuardar=true;
			
			this.crearFilaTotales();
			
			throw e;
		} finally {
      		//this.finishProcessPresupuestoVentasLineas();
      	}
		
	}	
	
	public void actualizarRelaciones(PresupuestoVentasLineas presupuestoventaslineasLocal) throws Exception {
		
		if(this.presupuestoventaslineasSessionBean.getConGuardarRelaciones()) {			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
			
			
			} else {
				
			}
		}
	}
	
	public void actualizarRelacionFkPadreActual(PresupuestoVentasLineas presupuestoventaslineasLocal) throws Exception {	
		if(this.presupuestoventaslineasSessionBean.getEsGuardarRelacionado()) {			
			
		
			if(this.jInternalFrameParent.getClass().equals(EmpresaDetalleFormJInternalFrame.class)) {
				EmpresaBeanSwingJInternalFrame empresaBeanSwingJInternalFrameLocal=(EmpresaBeanSwingJInternalFrame) ((EmpresaDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				empresaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoEmpresa(empresaBeanSwingJInternalFrameLocal.getempresa(),true);
				empresaBeanSwingJInternalFrameLocal.actualizarLista(empresaBeanSwingJInternalFrameLocal.empresa,this.empresasForeignKey);

				empresaBeanSwingJInternalFrameLocal.actualizarRelaciones(empresaBeanSwingJInternalFrameLocal.empresa);

				presupuestoventaslineasLocal.setEmpresa(empresaBeanSwingJInternalFrameLocal.empresa);

				this.addItemDefectoCombosForeignKeyEmpresa();
				this.cargarCombosFrameEmpresasForeignKey("Formulario");
				this.setActualEmpresaForeignKey(empresaBeanSwingJInternalFrameLocal.empresa.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(SucursalDetalleFormJInternalFrame.class)) {
				SucursalBeanSwingJInternalFrame sucursalBeanSwingJInternalFrameLocal=(SucursalBeanSwingJInternalFrame) ((SucursalDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				sucursalBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoSucursal(sucursalBeanSwingJInternalFrameLocal.getsucursal(),true);
				sucursalBeanSwingJInternalFrameLocal.actualizarLista(sucursalBeanSwingJInternalFrameLocal.sucursal,this.sucursalsForeignKey);

				sucursalBeanSwingJInternalFrameLocal.actualizarRelaciones(sucursalBeanSwingJInternalFrameLocal.sucursal);

				presupuestoventaslineasLocal.setSucursal(sucursalBeanSwingJInternalFrameLocal.sucursal);

				this.addItemDefectoCombosForeignKeySucursal();
				this.cargarCombosFrameSucursalsForeignKey("Formulario");
				this.setActualSucursalForeignKey(sucursalBeanSwingJInternalFrameLocal.sucursal.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(EjercicioDetalleFormJInternalFrame.class)) {
				EjercicioBeanSwingJInternalFrame ejercicioBeanSwingJInternalFrameLocal=(EjercicioBeanSwingJInternalFrame) ((EjercicioDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				ejercicioBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoEjercicio(ejercicioBeanSwingJInternalFrameLocal.getejercicio(),true);
				ejercicioBeanSwingJInternalFrameLocal.actualizarLista(ejercicioBeanSwingJInternalFrameLocal.ejercicio,this.ejerciciosForeignKey);

				ejercicioBeanSwingJInternalFrameLocal.actualizarRelaciones(ejercicioBeanSwingJInternalFrameLocal.ejercicio);

				presupuestoventaslineasLocal.setEjercicio(ejercicioBeanSwingJInternalFrameLocal.ejercicio);

				this.addItemDefectoCombosForeignKeyEjercicio();
				this.cargarCombosFrameEjerciciosForeignKey("Formulario");
				this.setActualEjercicioForeignKey(ejercicioBeanSwingJInternalFrameLocal.ejercicio.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(PeriodoDetalleFormJInternalFrame.class)) {
				PeriodoBeanSwingJInternalFrame periodoBeanSwingJInternalFrameLocal=(PeriodoBeanSwingJInternalFrame) ((PeriodoDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				periodoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoPeriodo(periodoBeanSwingJInternalFrameLocal.getperiodo(),true);
				periodoBeanSwingJInternalFrameLocal.actualizarLista(periodoBeanSwingJInternalFrameLocal.periodo,this.periodosForeignKey);

				periodoBeanSwingJInternalFrameLocal.actualizarRelaciones(periodoBeanSwingJInternalFrameLocal.periodo);

				presupuestoventaslineasLocal.setPeriodo(periodoBeanSwingJInternalFrameLocal.periodo);

				this.addItemDefectoCombosForeignKeyPeriodo();
				this.cargarCombosFramePeriodosForeignKey("Formulario");
				this.setActualPeriodoForeignKey(periodoBeanSwingJInternalFrameLocal.periodo.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(VendedorDetalleFormJInternalFrame.class)) {
				VendedorBeanSwingJInternalFrame vendedorBeanSwingJInternalFrameLocal=(VendedorBeanSwingJInternalFrame) ((VendedorDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				vendedorBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoVendedor(vendedorBeanSwingJInternalFrameLocal.getvendedor(),true);
				vendedorBeanSwingJInternalFrameLocal.actualizarLista(vendedorBeanSwingJInternalFrameLocal.vendedor,this.vendedorsForeignKey);

				vendedorBeanSwingJInternalFrameLocal.actualizarRelaciones(vendedorBeanSwingJInternalFrameLocal.vendedor);

				presupuestoventaslineasLocal.setVendedor(vendedorBeanSwingJInternalFrameLocal.vendedor);

				this.addItemDefectoCombosForeignKeyVendedor();
				this.cargarCombosFrameVendedorsForeignKey("Formulario");
				this.setActualVendedorForeignKey(vendedorBeanSwingJInternalFrameLocal.vendedor.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(PaisDetalleFormJInternalFrame.class)) {
				PaisBeanSwingJInternalFrame paisBeanSwingJInternalFrameLocal=(PaisBeanSwingJInternalFrame) ((PaisDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				paisBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoPais(paisBeanSwingJInternalFrameLocal.getpais(),true);
				paisBeanSwingJInternalFrameLocal.actualizarLista(paisBeanSwingJInternalFrameLocal.pais,this.paissForeignKey);

				paisBeanSwingJInternalFrameLocal.actualizarRelaciones(paisBeanSwingJInternalFrameLocal.pais);

				presupuestoventaslineasLocal.setPais(paisBeanSwingJInternalFrameLocal.pais);

				this.addItemDefectoCombosForeignKeyPais();
				this.cargarCombosFramePaissForeignKey("Formulario");
				this.setActualPaisForeignKey(paisBeanSwingJInternalFrameLocal.pais.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(CiudadDetalleFormJInternalFrame.class)) {
				CiudadBeanSwingJInternalFrame ciudadBeanSwingJInternalFrameLocal=(CiudadBeanSwingJInternalFrame) ((CiudadDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				ciudadBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoCiudad(ciudadBeanSwingJInternalFrameLocal.getciudad(),true);
				ciudadBeanSwingJInternalFrameLocal.actualizarLista(ciudadBeanSwingJInternalFrameLocal.ciudad,this.ciudadsForeignKey);

				ciudadBeanSwingJInternalFrameLocal.actualizarRelaciones(ciudadBeanSwingJInternalFrameLocal.ciudad);

				presupuestoventaslineasLocal.setCiudad(ciudadBeanSwingJInternalFrameLocal.ciudad);

				this.addItemDefectoCombosForeignKeyCiudad();
				this.cargarCombosFrameCiudadsForeignKey("Formulario");
				this.setActualCiudadForeignKey(ciudadBeanSwingJInternalFrameLocal.ciudad.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(ZonaDetalleFormJInternalFrame.class)) {
				ZonaBeanSwingJInternalFrame zonaBeanSwingJInternalFrameLocal=(ZonaBeanSwingJInternalFrame) ((ZonaDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				zonaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoZona(zonaBeanSwingJInternalFrameLocal.getzona(),true);
				zonaBeanSwingJInternalFrameLocal.actualizarLista(zonaBeanSwingJInternalFrameLocal.zona,this.zonasForeignKey);

				zonaBeanSwingJInternalFrameLocal.actualizarRelaciones(zonaBeanSwingJInternalFrameLocal.zona);

				presupuestoventaslineasLocal.setZona(zonaBeanSwingJInternalFrameLocal.zona);

				this.addItemDefectoCombosForeignKeyZona();
				this.cargarCombosFrameZonasForeignKey("Formulario");
				this.setActualZonaForeignKey(zonaBeanSwingJInternalFrameLocal.zona.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(LineaDetalleFormJInternalFrame.class)) {
				LineaBeanSwingJInternalFrame lineaBeanSwingJInternalFrameLocal=(LineaBeanSwingJInternalFrame) ((LineaDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				lineaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoLinea(lineaBeanSwingJInternalFrameLocal.getlinea(),true);
				lineaBeanSwingJInternalFrameLocal.actualizarLista(lineaBeanSwingJInternalFrameLocal.linea,this.lineasForeignKey);

				lineaBeanSwingJInternalFrameLocal.actualizarRelaciones(lineaBeanSwingJInternalFrameLocal.linea);

				presupuestoventaslineasLocal.setLinea(lineaBeanSwingJInternalFrameLocal.linea);

				this.addItemDefectoCombosForeignKeyLinea();
				this.cargarCombosFrameLineasForeignKey("Formulario");
				this.setActualLineaForeignKey(lineaBeanSwingJInternalFrameLocal.linea.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(LineaDetalleFormJInternalFrame.class)) {
				LineaBeanSwingJInternalFrame lineagrupoBeanSwingJInternalFrameLocal=(LineaBeanSwingJInternalFrame) ((LineaDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				lineagrupoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoLinea(lineagrupoBeanSwingJInternalFrameLocal.getlinea(),true);
				lineagrupoBeanSwingJInternalFrameLocal.actualizarLista(lineagrupoBeanSwingJInternalFrameLocal.linea,this.lineagruposForeignKey);

				lineagrupoBeanSwingJInternalFrameLocal.actualizarRelaciones(lineagrupoBeanSwingJInternalFrameLocal.linea);

				presupuestoventaslineasLocal.setLineaGrupo(lineagrupoBeanSwingJInternalFrameLocal.linea);

				this.addItemDefectoCombosForeignKeyLineaGrupo();
				this.cargarCombosFrameLineaGruposForeignKey("Formulario");
				this.setActualLineaGrupoForeignKey(lineagrupoBeanSwingJInternalFrameLocal.linea.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(LineaDetalleFormJInternalFrame.class)) {
				LineaBeanSwingJInternalFrame lineacategoriaBeanSwingJInternalFrameLocal=(LineaBeanSwingJInternalFrame) ((LineaDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				lineacategoriaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoLinea(lineacategoriaBeanSwingJInternalFrameLocal.getlinea(),true);
				lineacategoriaBeanSwingJInternalFrameLocal.actualizarLista(lineacategoriaBeanSwingJInternalFrameLocal.linea,this.lineacategoriasForeignKey);

				lineacategoriaBeanSwingJInternalFrameLocal.actualizarRelaciones(lineacategoriaBeanSwingJInternalFrameLocal.linea);

				presupuestoventaslineasLocal.setLineaCategoria(lineacategoriaBeanSwingJInternalFrameLocal.linea);

				this.addItemDefectoCombosForeignKeyLineaCategoria();
				this.cargarCombosFrameLineaCategoriasForeignKey("Formulario");
				this.setActualLineaCategoriaForeignKey(lineacategoriaBeanSwingJInternalFrameLocal.linea.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(LineaDetalleFormJInternalFrame.class)) {
				LineaBeanSwingJInternalFrame lineamarcaBeanSwingJInternalFrameLocal=(LineaBeanSwingJInternalFrame) ((LineaDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				lineamarcaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoLinea(lineamarcaBeanSwingJInternalFrameLocal.getlinea(),true);
				lineamarcaBeanSwingJInternalFrameLocal.actualizarLista(lineamarcaBeanSwingJInternalFrameLocal.linea,this.lineamarcasForeignKey);

				lineamarcaBeanSwingJInternalFrameLocal.actualizarRelaciones(lineamarcaBeanSwingJInternalFrameLocal.linea);

				presupuestoventaslineasLocal.setLineaMarca(lineamarcaBeanSwingJInternalFrameLocal.linea);

				this.addItemDefectoCombosForeignKeyLineaMarca();
				this.cargarCombosFrameLineaMarcasForeignKey("Formulario");
				this.setActualLineaMarcaForeignKey(lineamarcaBeanSwingJInternalFrameLocal.linea.getId(),false,"Formulario");
			}
		
		}
	}
	
	public Boolean validarPresupuestoVentasLineasActual() throws Exception {
		Boolean estaValidado=false;
		this.inicializarInvalidValues();
		
		/*
		int intSelectedRow = this.jTableDatosPresupuestoVentasLineas.getSelectedRow();
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.presupuestoventaslineas =(PresupuestoVentasLineas) this.presupuestoventaslineasLogic.getPresupuestoVentasLineass().toArray()[this.jTableDatosPresupuestoVentasLineas.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
			this.presupuestoventaslineas =(PresupuestoVentasLineas) this.presupuestoventaslineass.toArray()[this.jTableDatosPresupuestoVentasLineas.convertRowIndexToModel(intSelectedRow)];
		}
		//ARCHITECTURE
		*/
		
		this.invalidValues = presupuestoventaslineasValidator.getInvalidValues(this.presupuestoventaslineas);
					
		if(this.invalidValues==null || this.invalidValues.length<=0) {
			estaValidado=true;
		} else {
			this.mostrarInvalidValues();	
		}
		
		return estaValidado;
	}
	
	public void actualizarLista(PresupuestoVentasLineas presupuestoventaslineas,List<PresupuestoVentasLineas> presupuestoventaslineass) throws Exception {
		try	{		
			PresupuestoVentasLineasConstantesFunciones.actualizarLista(presupuestoventaslineas,presupuestoventaslineass,this.presupuestoventaslineasSessionBean.getEsGuardarRelacionado());		
		} catch(Exception e) {
			throw e;
		}
	}		
	
	public void actualizarSelectedLista(PresupuestoVentasLineas presupuestoventaslineas,List<PresupuestoVentasLineas> presupuestoventaslineass) throws Exception {
		try	{			
			PresupuestoVentasLineasConstantesFunciones.actualizarSelectedLista(presupuestoventaslineas,presupuestoventaslineass);
		} catch(Exception e) {
			throw e;
		}
	}	
	
	public Boolean tieneElementosSeleccionados() throws Exception {
		Boolean tiene=false;
		
		List<PresupuestoVentasLineas> presupuestoventaslineassLocal=null;
		
		try	{			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				presupuestoventaslineassLocal=this.presupuestoventaslineasLogic.getPresupuestoVentasLineass();
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
				presupuestoventaslineassLocal=this.presupuestoventaslineass;
			}
			//ARCHITECTURE
		
			for(PresupuestoVentasLineas presupuestoventaslineasLocal:presupuestoventaslineassLocal) {
				if(this.permiteMantenimiento(presupuestoventaslineasLocal) && presupuestoventaslineasLocal.getIsSelected()) {
					tiene=true;
					break;
				}
			}
		} catch(Exception e) {
			throw e;
		}
		
		return tiene;
	}			
	
	public void mostrarInvalidValues() throws Exception {
		String sMensaje="";
				
		for (InvalidValue invalidValue : this.invalidValues) {
			sMensaje+="\r\n"+PresupuestoVentasLineasConstantesFunciones.getPresupuestoVentasLineasLabelDesdeNombre(invalidValue.getPropertyName())+"->"+invalidValue.getMessage();
			
			//MOSTRAR CAMPOS INVALIDOS
			if(invalidValue.getPropertyName().equals(PresupuestoVentasLineasConstantesFunciones.IDEMPRESA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPresupuestoVentasLineas.jLabelid_empresaPresupuestoVentasLineas,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PresupuestoVentasLineasConstantesFunciones.IDSUCURSAL)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPresupuestoVentasLineas.jLabelid_sucursalPresupuestoVentasLineas,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PresupuestoVentasLineasConstantesFunciones.IDEJERCICIO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPresupuestoVentasLineas.jLabelid_ejercicioPresupuestoVentasLineas,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PresupuestoVentasLineasConstantesFunciones.IDPERIODO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPresupuestoVentasLineas.jLabelid_periodoPresupuestoVentasLineas,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PresupuestoVentasLineasConstantesFunciones.IDVENDEDOR)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPresupuestoVentasLineas.jLabelid_vendedorPresupuestoVentasLineas,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PresupuestoVentasLineasConstantesFunciones.IDPAIS)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPresupuestoVentasLineas.jLabelid_paisPresupuestoVentasLineas,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PresupuestoVentasLineasConstantesFunciones.IDCIUDAD)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPresupuestoVentasLineas.jLabelid_ciudadPresupuestoVentasLineas,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PresupuestoVentasLineasConstantesFunciones.IDZONA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPresupuestoVentasLineas.jLabelid_zonaPresupuestoVentasLineas,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PresupuestoVentasLineasConstantesFunciones.IDLINEA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPresupuestoVentasLineas.jLabelid_lineaPresupuestoVentasLineas,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PresupuestoVentasLineasConstantesFunciones.IDLINEAGRUPO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPresupuestoVentasLineas.jLabelid_linea_grupoPresupuestoVentasLineas,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PresupuestoVentasLineasConstantesFunciones.IDLINEACATEGORIA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPresupuestoVentasLineas.jLabelid_linea_categoriaPresupuestoVentasLineas,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PresupuestoVentasLineasConstantesFunciones.IDLINEAMARCA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPresupuestoVentasLineas.jLabelid_linea_marcaPresupuestoVentasLineas,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PresupuestoVentasLineasConstantesFunciones.PRECIO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPresupuestoVentasLineas.jLabelprecioPresupuestoVentasLineas,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PresupuestoVentasLineasConstantesFunciones.CANTIDAD)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPresupuestoVentasLineas.jLabelcantidadPresupuestoVentasLineas,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PresupuestoVentasLineasConstantesFunciones.VALOR)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPresupuestoVentasLineas.jLabelvalorPresupuestoVentasLineas,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PresupuestoVentasLineasConstantesFunciones.PORCENTAJE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPresupuestoVentasLineas.jLabelporcentajePresupuestoVentasLineas,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PresupuestoVentasLineasConstantesFunciones.CANTIDADTOTAL)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPresupuestoVentasLineas.jLabelcantidad_totalPresupuestoVentasLineas,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PresupuestoVentasLineasConstantesFunciones.VALORTOTAL)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPresupuestoVentasLineas.jLabelvalor_totalPresupuestoVentasLineas,invalidValue.getMessage());}
        }
		
		
		if(!sMensaje.equals("")) {
			//JOptionPane.showMessageDialog(this,sMensaje,"VALIDACION ",JOptionPane.ERROR_MESSAGE);
			throw new Exception(sMensaje);			
		}
		
		/*
		System.out.println(invalidValue);
        System.out.println("message=" + invalidValue.getMessage());
        System.out.println("propertyName=" + invalidValue.getPropertyName());
        System.out.println("propertyPath=" + invalidValue.getPropertyPath());
        System.out.println("value=" + invalidValue.getValue());
        */
	}		
	
	public void inicializarInvalidValues() throws Exception {
		String sMensaje="";	
		
		if(this.jInternalFrameDetalleFormPresupuestoVentasLineas!=null) {
		
		//MOSTRAR CAMPOS INVALIDOS
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPresupuestoVentasLineas.jLabelid_empresaPresupuestoVentasLineas,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPresupuestoVentasLineas.jLabelid_sucursalPresupuestoVentasLineas,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPresupuestoVentasLineas.jLabelid_ejercicioPresupuestoVentasLineas,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPresupuestoVentasLineas.jLabelid_periodoPresupuestoVentasLineas,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPresupuestoVentasLineas.jLabelid_vendedorPresupuestoVentasLineas,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPresupuestoVentasLineas.jLabelid_paisPresupuestoVentasLineas,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPresupuestoVentasLineas.jLabelid_ciudadPresupuestoVentasLineas,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPresupuestoVentasLineas.jLabelid_zonaPresupuestoVentasLineas,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPresupuestoVentasLineas.jLabelid_lineaPresupuestoVentasLineas,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPresupuestoVentasLineas.jLabelid_linea_grupoPresupuestoVentasLineas,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPresupuestoVentasLineas.jLabelid_linea_categoriaPresupuestoVentasLineas,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPresupuestoVentasLineas.jLabelid_linea_marcaPresupuestoVentasLineas,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPresupuestoVentasLineas.jLabelprecioPresupuestoVentasLineas,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPresupuestoVentasLineas.jLabelcantidadPresupuestoVentasLineas,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPresupuestoVentasLineas.jLabelvalorPresupuestoVentasLineas,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPresupuestoVentasLineas.jLabelporcentajePresupuestoVentasLineas,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPresupuestoVentasLineas.jLabelcantidad_totalPresupuestoVentasLineas,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPresupuestoVentasLineas.jLabelvalor_totalPresupuestoVentasLineas,"");
		
		}
	}
	
	
	
	public void actualizarObjetoPadreFk(String sTipo)  throws Exception {
		if(sTipo.equals("XXXAuxiliar")) {
		
		}
		
	}
	
	public void nuevoPreparar() throws Exception {
		this.nuevoPreparar(false);
	}
	
	public void nuevoPreparar(Boolean esNuevoGuardarCambios) throws Exception {
		this.iIdNuevoPresupuestoVentasLineas--;	
		
		
		this.presupuestoventaslineasAux=new PresupuestoVentasLineas();
		
		this.presupuestoventaslineasAux.setId(this.iIdNuevoPresupuestoVentasLineas);
		this.presupuestoventaslineasAux.setIsChanged(true);
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.presupuestoventaslineasLogic.getPresupuestoVentasLineass().add(this.presupuestoventaslineasAux);
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			this.presupuestoventaslineass.add(this.presupuestoventaslineasAux);
		}
		//ARCHITECTURE
		
		this.presupuestoventaslineas=this.presupuestoventaslineasAux;
		
		if(PresupuestoVentasLineasJInternalFrame.ISBINDING_MANUAL_TABLA) {
			this.setVariablesObjetoActualToFormularioPresupuestoVentasLineas(this.presupuestoventaslineas);
			this.setVariablesObjetoActualToFormularioForeignKeyPresupuestoVentasLineas(this.presupuestoventaslineas);
		}
				
		//this.setDefaultControlesPresupuestoVentasLineas();
		
		this.inicializarInvalidValues();
				
		//SELECCIONA ITEM DEFECTO-->SET O SELECTED INDEX
		this.setItemDefectoCombosForeignKeyPresupuestoVentasLineas();
		
		
		//INICIALIZA VARIABLES COMBOS GLOBALES A FORMULARIO(ParametroGeneralUsuario)
		this.setVariablesGlobalesCombosForeignKeyPresupuestoVentasLineas();
		
		//INICIALIZA VARIABLES COMBOS GLOBALES AUXILIARES A FORMULARIO(Anio,Mes)
		//this.setVariablesGlobalesAuxiliaresCombosForeignKeyPresupuestoVentasLineas();
		
		//SI TIENE FOREIGN KEY CON CAMPO esDefecto=true, SE ACTUALIZA A OBJETO ACTUAL
		this.setVariablesForeignKeyObjetoBeanDefectoActualToObjetoActualPresupuestoVentasLineas(this.presupuestoventaslineasBean,this.presupuestoventaslineas,false,false);
		
		//ACTUALIZA VALORES PARA EL OBJETO ACTUAL ANTES DE ENVIARLO A ACTUALIZAR
		this.setVariablesFormularioToObjetoActualForeignKeysPresupuestoVentasLineas(this.presupuestoventaslineas);
				
		ArrayList<Classe> classes=new ArrayList<Classe>();
		
		if(this.jInternalFrameParent!=null) {
			this.jInternalFrameParent.actualizarObjetoPadreFk(PresupuestoVentasLineasConstantesFunciones.CLASSNAME);
		}	
		
		
		if(this.presupuestoventaslineasSessionBean.getConGuardarRelaciones()) {
			classes=PresupuestoVentasLineasConstantesFunciones.getClassesRelationshipsOfPresupuestoVentasLineas(new ArrayList<Classe>(),DeepLoadType.NONE);
		}
		
		this.classesActual=new ArrayList<Classe>();
		this.classesActual.addAll(classes);
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {						
			this.presupuestoventaslineasReturnGeneral=presupuestoventaslineasLogic.procesarEventosPresupuestoVentasLineassWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,EventoGlobalTipo.FORM_RECARGAR,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.presupuestoventaslineasLogic.getPresupuestoVentasLineass(),this.presupuestoventaslineas,this.presupuestoventaslineasParameterGeneral,this.isEsNuevoPresupuestoVentasLineas,classes);//this.presupuestoventaslineasLogic.getPresupuestoVentasLineas()
						
		} else if(Constantes.ISUSAEJBREMOTE) {
						
		} else if(Constantes.ISUSAEJBHOME) {
		}
		//ARCHITECTURE
		
		//ACTUALIZA VARIABLES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
		//this.setVariablesObjetoReturnGeneralToBeanPresupuestoVentasLineas(this.presupuestoventaslineasReturnGeneral,this.presupuestoventaslineasBean,false);
		
		if(this.presupuestoventaslineasReturnGeneral.getConRecargarPropiedades()) {
			//INICIALIZA VARIABLES COMBOS NORMALES (FK)
			this.setVariablesObjetoActualToFormularioForeignKeyPresupuestoVentasLineas(this.presupuestoventaslineasReturnGeneral.getPresupuestoVentasLineas());
			
			//INICIALIZA VARIABLES NORMALES A FORMULARIO(SIN FK)
			this.setVariablesObjetoActualToFormularioPresupuestoVentasLineas(this.presupuestoventaslineasReturnGeneral.getPresupuestoVentasLineas());
		}
		
		if(this.presupuestoventaslineasReturnGeneral.getConRecargarRelaciones()) {
			//INICIALIZA VARIABLES RELACIONES A FORMULARIO
			this.setVariablesRelacionesObjetoActualToFormularioPresupuestoVentasLineas(this.presupuestoventaslineasReturnGeneral.getPresupuestoVentasLineas(),classes);//this.presupuestoventaslineasBean);	
		}
			
		//ACTUALIZA VARIABLES FORMULARIO A OBJETO ACTUAL (PARA NUEVO TABLA O GUARDAR CAMBIOS
		if(esNuevoGuardarCambios) {
			this.setVariablesFormularioToObjetoActualPresupuestoVentasLineas(this.presupuestoventaslineas,false);
		}
		
		//INICIALIZA VARIABLES COMBOS DEFAULT DEL PROYECTO(|DEFAULT para FK)
		//this.setVariablesDefaultCombosForeignKeyPresupuestoVentasLineas();
		
		//INICIALIZA VARIABLES COMBOS PARAMETRO DEL PROYECTO(|VALORPARAM Era para ParametroModulo, ahora en logic)
		//this.setVariablesParametroCombosForeignKeyPresupuestoVentasLineas();						
		
		if(!esNuevoGuardarCambios) {
			//INICIALIZA VARIABLES POR OPCION MENU
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			PresupuestoVentasLineasBeanSwingJInternalFrameAdditional.RecargarFormPresupuestoVentasLineas(this,"NUEVO_PREPARAR","",this.arrDatoGeneral);
		
			//NO FUNCIONA BINDINGS			
			this.inicializarActualizarBindingPresupuestoVentasLineas(false);
						
			if(presupuestoventaslineasSessionBean.getConGuardarRelaciones()) {
				//DEBERIA YA ESTAR CARGADO LOS COMBOS Y SI SE NECESITA ALGO MAS SE DEBE CREAR FUNCION LIMITADA
				//SI DEBE TRAER Y RESETEAR TABLA
								
			}
				
			//SI ES MANUAL
			if(PresupuestoVentasLineasJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualPresupuestoVentasLineas();
			}
			
			this.actualizarVisualTableDatosPresupuestoVentasLineas();
			
			this.jTableDatosPresupuestoVentasLineas.setRowSelectionInterval(this.getIndiceNuevoPresupuestoVentasLineas(), this.getIndiceNuevoPresupuestoVentasLineas());
			
			this.seleccionarFilaTablaPresupuestoVentasLineasActual();
						
			this.actualizarEstadoCeldasBotonesPresupuestoVentasLineas("a", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
		
		}		
	}
	
	public void habilitarDeshabilitarControlesPresupuestoVentasLineas(Boolean isHabilitar) throws Exception {
		
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jTextFieldprecioPresupuestoVentasLineas.setEnabled(isHabilitar && this.presupuestoventaslineasConstantesFunciones.activarprecioPresupuestoVentasLineas);
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jTextFieldcantidadPresupuestoVentasLineas.setEnabled(isHabilitar && this.presupuestoventaslineasConstantesFunciones.activarcantidadPresupuestoVentasLineas);
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jTextFieldvalorPresupuestoVentasLineas.setEnabled(isHabilitar && this.presupuestoventaslineasConstantesFunciones.activarvalorPresupuestoVentasLineas);
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jTextFieldporcentajePresupuestoVentasLineas.setEnabled(isHabilitar && this.presupuestoventaslineasConstantesFunciones.activarporcentajePresupuestoVentasLineas);
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jTextFieldcantidad_totalPresupuestoVentasLineas.setEnabled(isHabilitar && this.presupuestoventaslineasConstantesFunciones.activarcantidad_totalPresupuestoVentasLineas);
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jTextFieldvalor_totalPresupuestoVentasLineas.setEnabled(isHabilitar && this.presupuestoventaslineasConstantesFunciones.activarvalor_totalPresupuestoVentasLineas);	
		//
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_empresaPresupuestoVentasLineas.setEnabled(isHabilitar && this.presupuestoventaslineasConstantesFunciones.activarid_empresaPresupuestoVentasLineas);//
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_sucursalPresupuestoVentasLineas.setEnabled(isHabilitar && this.presupuestoventaslineasConstantesFunciones.activarid_sucursalPresupuestoVentasLineas);//
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_ejercicioPresupuestoVentasLineas.setEnabled(isHabilitar && this.presupuestoventaslineasConstantesFunciones.activarid_ejercicioPresupuestoVentasLineas);//
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_periodoPresupuestoVentasLineas.setEnabled(isHabilitar && this.presupuestoventaslineasConstantesFunciones.activarid_periodoPresupuestoVentasLineas);
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_vendedorPresupuestoVentasLineas.setEnabled(isHabilitar && this.presupuestoventaslineasConstantesFunciones.activarid_vendedorPresupuestoVentasLineas);
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_paisPresupuestoVentasLineas.setEnabled(isHabilitar && this.presupuestoventaslineasConstantesFunciones.activarid_paisPresupuestoVentasLineas);
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_ciudadPresupuestoVentasLineas.setEnabled(isHabilitar && this.presupuestoventaslineasConstantesFunciones.activarid_ciudadPresupuestoVentasLineas);
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_zonaPresupuestoVentasLineas.setEnabled(isHabilitar && this.presupuestoventaslineasConstantesFunciones.activarid_zonaPresupuestoVentasLineas);
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_lineaPresupuestoVentasLineas.setEnabled(isHabilitar && this.presupuestoventaslineasConstantesFunciones.activarid_lineaPresupuestoVentasLineas);
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_linea_grupoPresupuestoVentasLineas.setEnabled(isHabilitar && this.presupuestoventaslineasConstantesFunciones.activarid_linea_grupoPresupuestoVentasLineas);
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_linea_categoriaPresupuestoVentasLineas.setEnabled(isHabilitar && this.presupuestoventaslineasConstantesFunciones.activarid_linea_categoriaPresupuestoVentasLineas);
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_linea_marcaPresupuestoVentasLineas.setEnabled(isHabilitar && this.presupuestoventaslineasConstantesFunciones.activarid_linea_marcaPresupuestoVentasLineas);
	};
	
	public void setDefaultControlesPresupuestoVentasLineas() throws Exception {
			
	};
	
	
	public void habilitarDeshabilitarTipoMantenimientoPresupuestoVentasLineas(Boolean esRelaciones) throws Exception {
		if(esRelaciones) {
			//this.presupuestoventaslineasSessionBean.setConGuardarRelaciones(true);			
			this.presupuestoventaslineasSessionBean.setEstaModoGuardarRelaciones(true);				
			this.jInternalFrameDetalleFormPresupuestoVentasLineas.jTabbedPaneRelacionesPresupuestoVentasLineas.setVisible(true);
			
					
		} else {
			//this.presupuestoventaslineasSessionBean.setConGuardarRelaciones(false);			
			this.presupuestoventaslineasSessionBean.setEstaModoGuardarRelaciones(false);						
			this.jInternalFrameDetalleFormPresupuestoVentasLineas.jTabbedPaneRelacionesPresupuestoVentasLineas.setVisible(false);
			
			
		}
	};
	
	public int getIndiceNuevoPresupuestoVentasLineas() throws Exception {
		int iIndice=0;
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(PresupuestoVentasLineas presupuestoventaslineasAux:this.presupuestoventaslineasLogic.getPresupuestoVentasLineass()) {
				if(presupuestoventaslineasAux.getId().equals(this.iIdNuevoPresupuestoVentasLineas)) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(PresupuestoVentasLineas presupuestoventaslineasAux:this.presupuestoventaslineass) {
				if(presupuestoventaslineasAux.getId().equals(this.iIdNuevoPresupuestoVentasLineas)) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
			iIndice=iIndice-1;
		}
		
		return iIndice;
	}
	
	public int getIndiceActualPresupuestoVentasLineas(PresupuestoVentasLineas presupuestoventaslineas,Integer iIndiceActual) throws Exception {
		Integer iIndice=0;
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(PresupuestoVentasLineas presupuestoventaslineasAux:this.presupuestoventaslineasLogic.getPresupuestoVentasLineass()) {
				if(presupuestoventaslineasAux.getId().equals(presupuestoventaslineas.getId())) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(PresupuestoVentasLineas presupuestoventaslineasAux:this.presupuestoventaslineass) {
				if(presupuestoventaslineasAux.getId().equals(presupuestoventaslineas.getId())) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
			iIndice=iIndiceActual;
		}
		
		return iIndice;
	}
	
	public void setCamposBaseDesdeOriginalPresupuestoVentasLineas(PresupuestoVentasLineas presupuestoventaslineasOriginal) throws Exception {
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(PresupuestoVentasLineas presupuestoventaslineasAux:this.presupuestoventaslineasLogic.getPresupuestoVentasLineass()) {
				if(presupuestoventaslineasAux.getPresupuestoVentasLineasOriginal().getId().equals(presupuestoventaslineasOriginal.getId())) {
					existe=true;
					presupuestoventaslineasOriginal.setId(presupuestoventaslineasAux.getId());
					presupuestoventaslineasOriginal.setVersionRow(presupuestoventaslineasAux.getVersionRow());
					break;
				}
				
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(PresupuestoVentasLineas presupuestoventaslineasAux:this.presupuestoventaslineass) {
				if(presupuestoventaslineasAux.getPresupuestoVentasLineasOriginal().getId().equals(presupuestoventaslineasOriginal.getId())) {
					existe=true;
					presupuestoventaslineasOriginal.setId(presupuestoventaslineasAux.getId());
					presupuestoventaslineasOriginal.setVersionRow(presupuestoventaslineasAux.getVersionRow());
					break;
				}				
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
		}
	}
	
	public void cancelarNuevosPresupuestoVentasLineas(Boolean esParaCancelar) throws Exception {
		presupuestoventaslineassAux=new ArrayList<PresupuestoVentasLineas>();
		presupuestoventaslineasAux=new PresupuestoVentasLineas();
		
		if(!this.presupuestoventaslineasSessionBean.getEsGuardarRelacionado()) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				for(PresupuestoVentasLineas presupuestoventaslineasAux:this.presupuestoventaslineasLogic.getPresupuestoVentasLineass()) {
					if(presupuestoventaslineasAux.getId()<0) {
						presupuestoventaslineassAux.add(presupuestoventaslineasAux);
					}		
				}
				this.iIdNuevoPresupuestoVentasLineas=0L;
				this.presupuestoventaslineasLogic.getPresupuestoVentasLineass().removeAll(presupuestoventaslineassAux);
					
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(PresupuestoVentasLineas presupuestoventaslineasAux:this.presupuestoventaslineass) {
					if(presupuestoventaslineasAux.getId()<0) {
						presupuestoventaslineassAux.add(presupuestoventaslineasAux);
					}		
				}
				this.iIdNuevoPresupuestoVentasLineas=0L;
				this.presupuestoventaslineass.removeAll(presupuestoventaslineassAux);
			}	
		} else {			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				if(esParaCancelar && this.isEsNuevoPresupuestoVentasLineas 
					&& this.presupuestoventaslineasLogic.getPresupuestoVentasLineass().size()>0
					) {
					presupuestoventaslineasAux=this.presupuestoventaslineasLogic.getPresupuestoVentasLineass().get(this.presupuestoventaslineasLogic.getPresupuestoVentasLineass().size() - 1);
				
					if(presupuestoventaslineasAux.getId()<0) {
						this.presupuestoventaslineasLogic.getPresupuestoVentasLineass().remove(presupuestoventaslineasAux);
					}
				}
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				if(esParaCancelar && this.isEsNuevoPresupuestoVentasLineas && this.presupuestoventaslineass.size()>0) {
					presupuestoventaslineasAux=this.presupuestoventaslineass.get(this.presupuestoventaslineass.size() - 1);
				
					if(presupuestoventaslineasAux.getId()<0) {
						this.presupuestoventaslineass.remove(presupuestoventaslineasAux);
					}
				}
			}	
		}
	}
	
	public void cancelarNuevoPresupuestoVentasLineas(Boolean esParaCancelar) throws Exception {
		if(Constantes.ISUSAEJBLOGICLAYER) {
			if(presupuestoventaslineas.getId()<0) {
				this.presupuestoventaslineasLogic.getPresupuestoVentasLineass().remove(this.presupuestoventaslineas);
			}					
		} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
			if(presupuestoventaslineas.getId()<0) {
				this.presupuestoventaslineass.remove(this.presupuestoventaslineas);
			}
		}			
	}
	
	public void setEstadosInicialesPresupuestoVentasLineas(List<PresupuestoVentasLineas> presupuestoventaslineassAux) throws Exception {
		PresupuestoVentasLineasConstantesFunciones.setEstadosInicialesPresupuestoVentasLineas(presupuestoventaslineassAux);
	}
	
	public void setEstadosInicialesPresupuestoVentasLineas(PresupuestoVentasLineas presupuestoventaslineasAux) throws Exception {
		PresupuestoVentasLineasConstantesFunciones.setEstadosInicialesPresupuestoVentasLineas(presupuestoventaslineasAux);		
	}
	
	public void nuevo() throws Exception {
		try	{
			//ESTA VALIDADO EN FUNCION ACTUALIZAR
			//if(this.validarPresupuestoVentasLineasActual()) {
				this.ejecutarMantenimiento(MaintenanceType.NUEVO);
				
				this.actualizarEstadoCeldasBotonesPresupuestoVentasLineas("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
				
			//}
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,PresupuestoVentasLineasConstantesFunciones.CLASSNAME);
		}
	}
	
	public void actualizar() throws Exception {
		try	{
			if(this.validarPresupuestoVentasLineasActual()) {
				if(!this.isEsNuevoPresupuestoVentasLineas) {
					this.ejecutarMantenimiento(MaintenanceType.ACTUALIZAR);
					
					this.actualizarEstadoCeldasBotonesPresupuestoVentasLineas("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
					
				} else {					
					this.nuevo();
					this.isEsNuevoPresupuestoVentasLineas=false;
				}
				
				//SE CANCELA AL FINAL DEL PROCESO JBUTTONACTUALIZAR
				//this.cancelar(false);
			}		
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,PresupuestoVentasLineasConstantesFunciones.CLASSNAME);
		}
	}
	
	public void eliminar() throws Exception {
		try	{	
			if(this.validarPresupuestoVentasLineasActual()) {
				if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE ELIMINAR EL/LA Presupuesto Ventas_lineas ?", "MANTENIMIENTO DE Presupuesto Ventas_lineas", JOptionPane.OK_CANCEL_OPTION) == 0) {
					this.ejecutarMantenimiento(MaintenanceType.ELIMINAR);			
					this.actualizarEstadoCeldasBotonesPresupuestoVentasLineas("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
				}
			
			}
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,PresupuestoVentasLineasConstantesFunciones.CLASSNAME);
		}
	}
	
	public void guardarCambios() throws Exception {
		try	{
			this.ejecutarMantenimiento(MaintenanceType.GUARDARCAMBIOS);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PresupuestoVentasLineasConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarAsignar(PresupuestoVentasLineas presupuestoventaslineas) throws Exception {
		PresupuestoVentasLineasConstantesFunciones.seleccionarAsignar(this.presupuestoventaslineas,presupuestoventaslineas);
	}
	
	public void seleccionar() throws Exception {
		try	{
			//ACTUALIZO EL PERMISO ACTUALIZAR CON EL PERMISO ACTUALIZAR ORIGINAL ESTE PERMISO SE UTILIZA PARA EL NUEVO TAMBIEN
			this.isPermisoActualizarPresupuestoVentasLineas=this.isPermisoActualizarOriginalPresupuestoVentasLineas;
			
			
			this.seleccionarAsignar(presupuestoventaslineas);
			
			
			
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			PresupuestoVentasLineasConstantesFunciones.quitarEspaciosPresupuestoVentasLineas(this.presupuestoventaslineas,this.arrDatoGeneral);
			
			
			this.actualizarEstadoCeldasBotonesPresupuestoVentasLineas("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PresupuestoVentasLineasConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarBusqueda(Long id) throws Exception {
		try	{
			this.presupuestoventaslineasSessionBean.setsFuncionBusquedaRapida(this.presupuestoventaslineasSessionBean.getsFuncionBusquedaRapida().replace("TO_REPLACE", id.toString()));
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PresupuestoVentasLineasConstantesFunciones.CLASSNAME);
		}
	}
	
	
	
	public void cancelar() throws Exception {
		this.cancelar(true);
	}
	
	public void cancelar(Boolean esParaCancelar) throws Exception {
		try {
														
			
			//SE UTILIZA COLUMNA ELIMINAR EN TABLA
			if(this.isEsNuevoPresupuestoVentasLineas) {
				//NO CANCELA TODOS NUEVOS POR FUNCIONALIDAD GUARDAR CAMBIOS
				//this.cancelarNuevosPresupuestoVentasLineas(esParaCancelar);				
				this.cancelarNuevoPresupuestoVentasLineas(esParaCancelar);								
			}
			
			this.presupuestoventaslineas=new PresupuestoVentasLineas();
			
			this.inicializarPresupuestoVentasLineas();
			
			this.actualizarEstadoCeldasBotonesPresupuestoVentasLineas("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PresupuestoVentasLineasConstantesFunciones.CLASSNAME);
		}
	}
	
	public void inicializarPresupuestoVentasLineas() throws Exception {
		try {
			PresupuestoVentasLineasConstantesFunciones.inicializarPresupuestoVentasLineas(this.presupuestoventaslineas);
			
			} catch(Exception e) {
			throw e;
		}
	}
	
	public void anteriores()throws Exception {
		try	{
			//this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina-this.iNumeroPaginacion;
			
			if(this.iNumeroPaginacionPagina-this.iNumeroPaginacion<this.iNumeroPaginacion) {
				this.iNumeroPaginacionPagina=0;		
			} else {
				this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina-this.iNumeroPaginacion;
			}
			
			this.procesarBusqueda(this.sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PresupuestoVentasLineasConstantesFunciones.CLASSNAME);
		}
	}
	
	public void siguientes()throws Exception {
		try	{			
			if(this.presupuestoventaslineasLogic.getPresupuestoVentasLineass().size()>0) {
					
				this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina+this.iNumeroPaginacion;
			}
				
			this.procesarBusqueda(this.sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PresupuestoVentasLineasConstantesFunciones.CLASSNAME);
		}
	}		
	
	public void generarReportePresupuestoVentasLineass(String sAccionBusqueda,List<PresupuestoVentasLineas> presupuestoventaslineassParaReportes) throws Exception {
		//HttpSession httpSession = httpServletRequest.getSession();
		Long iIdUsuarioSesion=0L;	
		
		
		if(usuarioActual==null) {
			this.usuarioActual=new Usuario();
		}
		
		iIdUsuarioSesion=usuarioActual.getId();
		
		String sPathReportes="";
		
		InputStream reportFile=null;
		InputStream imageFile=null;
			
		imageFile=AuxiliarImagenes.class.getResourceAsStream("LogoReporte.jpg");			
				
		
		String sPathReporteFinal="";
		
		if(!esReporteAccionProceso) {
			if(!this.sTipoReporte.equals("RELACIONES")) {//!isEsReporteRelaciones
				if(!this.esReporteDinamico) {
					sPathReporteFinal="PresupuestoVentasLineas"+this.sTipoReporteExtra+"Design.jasper";
					reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);	
				} else {
					sPathReporteFinal=this.sPathReporteDinamico;
					reportFile = new FileInputStream(sPathReporteFinal);
				}
			} else {
				sPathReporteFinal="PresupuestoVentasLineasMasterRelaciones"+this.sTipoReporteExtra+"Design.jasper";
				reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);
				//sPathReportes=reportFile.getPath().replace("PresupuestoVentasLineasMasterRelacionesDesign.jasper", "");
			}
		} else {
				sPathReporteFinal="PresupuestoVentasLineas"+this.sTipoReporteExtra+"Design.jasper";
				reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);	
		}
		
		if(reportFile==null) {
			throw new JRRuntimeException(sPathReporteFinal+" no existe");
		}
		
		String sUsuario="";
		
		if(usuarioActual!=null) {
			sUsuario=usuarioActual.getuser_name();
		}
		
		Map<String, Object> parameters = new HashMap<String, Object>();
		parameters.put("usuario", sUsuario);
		
		parameters.put("titulo", Funciones.GetTituloSistemaReporte(this.parametroGeneralSg,this.moduloActual,this.usuarioActual));
		parameters.put("subtitulo", "Reporte De  Presupuesto Ventas_lineases");		
		parameters.put("busquedapor", PresupuestoVentasLineasConstantesFunciones.getNombreIndice(sAccionBusqueda)+sDetalleReporte);
		
		
		if(this.sTipoReporte.equals("RELACIONES")) {//isEsReporteRelaciones
			parameters.put("SUBREPORT_DIR", sPathReportes);
		}
		
		parameters.put("con_grafico", this.conGraficoReporte);
		
		JasperReport jasperReport = (JasperReport)JRLoader.loadObject(reportFile);
				
		this.cargarDatosCliente();
		
		ArrayList<Classe> classes=new ArrayList<Classe>();		
		
		if(this.sTipoReporte.equals("RELACIONES")) {//isEsReporteRelaciones
			
			
		} else {
			//FK DEBERIA TRAERSE DE ANTEMANO
			
		}
								
		
		//CLASSES PARA REPORTES OBJETOS RELACIONADOS
		if(!this.sTipoReporte.equals("RELACIONES")) {//!isEsReporteRelaciones
			classes=new ArrayList<Classe>();
		}
		
		JRBeanArrayDataSource jrbeanArrayDataSourcePresupuestoVentasLineas=null;
		
		if(this.sTipoReporteExtra!=null && !this.sTipoReporteExtra.equals("")) {
			PresupuestoVentasLineasConstantesFunciones.S_TIPOREPORTE_EXTRA=this.sTipoReporteExtra;
		} else {
			PresupuestoVentasLineasConstantesFunciones.S_TIPOREPORTE_EXTRA="";
		}
		
		jrbeanArrayDataSourcePresupuestoVentasLineas=new JRBeanArrayDataSource(PresupuestoVentasLineasJInternalFrame.TraerPresupuestoVentasLineasBeans(presupuestoventaslineassParaReportes,classes).toArray());
		
		jasperPrint = JasperFillManager.fillReport(jasperReport,parameters,jrbeanArrayDataSourcePresupuestoVentasLineas);
				
		
		String sPathDest=Constantes.SUNIDAD_ARCHIVOS+":/"+Constantes.SCONTEXTSERVER+"/"+PresupuestoVentasLineasConstantesFunciones.SCHEMA+"/reportes";
		
		File filePathDest = new File(sPathDest);
		
		if(!filePathDest.exists()) {
			filePathDest.mkdirs();				
		}
				
		String sDestFileName=sPathDest+"/"+PresupuestoVentasLineasConstantesFunciones.CLASSNAME;
				
		if(this.sTipoArchivoReporte=="VISUALIZAR") {
			JasperViewer jasperViewer = new JasperViewer(jasperPrint,false) ;
			jasperViewer.setVisible(true) ; 

		} else if(this.sTipoArchivoReporte=="HTML"||this.sTipoArchivoReporte=="PDF"||this.sTipoArchivoReporte=="XML") {	
			//JasperFillManager.fillReportToFile(reportFile.getAbsolutePath(),parameters, new JRBeanArrayDataSource(PresupuestoVentasLineasBean.TraerPresupuestoVentasLineasBeans(presupuestoventaslineassParaReportes).toArray()));
							
			if(this.sTipoArchivoReporte=="HTML") {
				sDestFileName+=".html";
				JasperExportManager.exportReportToHtmlFile(jasperPrint,sDestFileName);
					
			} else if(this.sTipoArchivoReporte=="PDF") {
				sDestFileName+=".pdf";
				JasperExportManager.exportReportToPdfFile(jasperPrint,sDestFileName);
			} else {
				sDestFileName+=".xml";
				JasperExportManager.exportReportToXmlFile(jasperPrint,sDestFileName, false);
			}	
			
		} else if(this.sTipoArchivoReporte=="WORD"||this.sTipoArchivoReporte=="EXCEL") {
				
			if(this.sTipoArchivoReporte=="WORD") {
				sDestFileName+=".rtf";
					
				JRRtfExporter exporter = new JRRtfExporter();
		
				exporter.setParameter(JRExporterParameter.JASPER_PRINT, jasperPrint);
				exporter.setParameter(JRExporterParameter.OUTPUT_FILE_NAME, sDestFileName);
		
				exporter.exportReport();
				
			} else	{
				sDestFileName+=".xls";
					
				JRXlsExporter exporterXls = new JRXlsExporter();
		
				exporterXls.setParameter(JRExporterParameter.JASPER_PRINT, jasperPrint);
				exporterXls.setParameter(JRExporterParameter.OUTPUT_FILE_NAME, sDestFileName);
				exporterXls.setParameter(JRXlsExporterParameter.IS_ONE_PAGE_PER_SHEET, Boolean.TRUE);
		
				exporterXls.exportReport();
			}
			
		} else if(this.sTipoArchivoReporte=="EXCEL2"||this.sTipoArchivoReporte=="EXCEL2_2") {
			//sDestFileName+=".xlsx";
			
			if(this.sTipoReporte.equals("NORMAL")) {
				this.generarExcelReportePresupuestoVentasLineass(sAccionBusqueda,sTipoArchivoReporte,presupuestoventaslineassParaReportes);
			
			} else if(this.sTipoReporte.equals("FORMULARIO")){
				this.generarExcelReporteVerticalPresupuestoVentasLineass(sAccionBusqueda,sTipoArchivoReporte,presupuestoventaslineassParaReportes,false);
			
			} else if(this.sTipoReporte.equals("DINAMICO")){
				
				if(this.sTipoReporteDinamico.equals("NORMAL")) {
					
					this.jButtonGenerarExcelReporteDinamicoPresupuestoVentasLineasActionPerformed(null);
					//this.generarExcelReportePresupuestoVentasLineass(sAccionBusqueda,sTipoArchivoReporte,presupuestoventaslineassParaReportes);
					
				
				} else if(this.sTipoReporteDinamico.equals("FORMULARIO")){
					this.generarExcelReporteVerticalPresupuestoVentasLineass(sAccionBusqueda,sTipoArchivoReporte,presupuestoventaslineassParaReportes,true);
				
				} else if(this.sTipoReporteDinamico.equals("RELACIONES")){
					this.generarExcelReporteRelacionesPresupuestoVentasLineass(sAccionBusqueda,sTipoArchivoReporte,presupuestoventaslineassParaReportes,true);
				}
				
			} else if(this.sTipoReporte.equals("RELACIONES")){
				this.generarExcelReporteRelacionesPresupuestoVentasLineass(sAccionBusqueda,sTipoArchivoReporte,presupuestoventaslineassParaReportes,false);
			}
		}
		
		if(this.sTipoArchivoReporte=="HTML"||this.sTipoArchivoReporte=="PDF"||this.sTipoArchivoReporte=="XML"||this.sTipoArchivoReporte=="WORD"||this.sTipoArchivoReporte=="EXCEL") {				
			JOptionPane.showMessageDialog(this,"REPORTE "+sDestFileName+" GENERADO SATISFACTORIAMENTE","REPORTES ",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReportePresupuestoVentasLineass(String sAccionBusqueda,String sTipoArchivoReporte,List<PresupuestoVentasLineas> presupuestoventaslineassParaReportes) throws Exception {
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"presupuestoventaslineas";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("PresupuestoVentasLineass");
         
        int iRow = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		this.generarExcelReporteHeaderPresupuestoVentasLineas("NORMAL",row,workbook);
		
		CellStyle cellStyleData = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataAux=null;
		
		int i=0;
		
      	for(PresupuestoVentasLineas presupuestoventaslineas : presupuestoventaslineassParaReportes) {            
			row = sheet.createRow(iRow++);
			iCell = 0;
			
			cellStyleDataAux=null;
			
			if(i%2==0) {
				cellStyleDataAux=cellStyleData;
			}
			
			PresupuestoVentasLineasConstantesFunciones.generarExcelReporteDataPresupuestoVentasLineas("NORMAL",row,workbook,presupuestoventaslineas,cellStyleDataAux);
		
			
			/*
            Cell cell0 = row.createCell(0);
            cell0.setCellValue(country.getName());
            Cell cell1 = row.createCell(1);
            cell1.setCellValue(country.getShortCode());
			*/
			
			i++;
        }
        
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.presupuestoventaslineasSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Presupuesto Ventas_lineas",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReporteHeaderPresupuestoVentasLineas(String sTipo,Row row,Workbook workbook) {
		
		PresupuestoVentasLineasConstantesFunciones.generarExcelReporteHeaderPresupuestoVentasLineas(sTipo,row,workbook);
		
		/*
		Cell cell=null;
		int iCell=0;
		
		CellStyle cellStyle = workbook.createCellStyle();
		cellStyle.setFillBackgroundColor(IndexedColors.GREEN.getIndex());
		cellStyle.setFillPattern(CellStyle.ALIGN_FILL);
		*/
		
	}
	
	public void generarExcelReporteVerticalPresupuestoVentasLineass(String sAccionBusqueda,String sTipoArchivoReporte,List<PresupuestoVentasLineas> presupuestoventaslineassParaReportes,Boolean paraDinamico) throws Exception {
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"presupuestoventaslineas_vertical";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("PresupuestoVentasLineass");
         
        int iRow = 0;
		int iRowLast = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		CellStyle cellStyle = Funciones2.getStyleTitulo(workbook,"ZEBRA");;
		
		CellStyle cellStyleTitulo = Funciones2.getStyleTitulo(workbook,"PRINCIPAL_VERTICAL");
		
		
		for(PresupuestoVentasLineas presupuestoventaslineas : presupuestoventaslineassParaReportes) {
			row = sheet.createRow(iRow++);
			iRowLast=iRow - 1;
			
			cell = row.createCell(0);
			cell.setCellValue(PresupuestoVentasLineasConstantesFunciones.getPresupuestoVentasLineasDescripcion(presupuestoventaslineas));
			cell.setCellStyle(cellStyleTitulo);
			
			sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,0,2));			
	
			


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PresupuestoVentasLineasConstantesFunciones.LABEL_IDEMPRESA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PresupuestoVentasLineasConstantesFunciones.LABEL_IDEMPRESA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(presupuestoventaslineas.getempresa_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PresupuestoVentasLineasConstantesFunciones.LABEL_IDSUCURSAL))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PresupuestoVentasLineasConstantesFunciones.LABEL_IDSUCURSAL);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(presupuestoventaslineas.getsucursal_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PresupuestoVentasLineasConstantesFunciones.LABEL_IDEJERCICIO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PresupuestoVentasLineasConstantesFunciones.LABEL_IDEJERCICIO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(presupuestoventaslineas.getejercicio_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PresupuestoVentasLineasConstantesFunciones.LABEL_IDPERIODO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PresupuestoVentasLineasConstantesFunciones.LABEL_IDPERIODO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(presupuestoventaslineas.getperiodo_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PresupuestoVentasLineasConstantesFunciones.LABEL_IDVENDEDOR))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PresupuestoVentasLineasConstantesFunciones.LABEL_IDVENDEDOR);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(presupuestoventaslineas.getvendedor_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PresupuestoVentasLineasConstantesFunciones.LABEL_IDPAIS))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PresupuestoVentasLineasConstantesFunciones.LABEL_IDPAIS);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(presupuestoventaslineas.getpais_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PresupuestoVentasLineasConstantesFunciones.LABEL_IDCIUDAD))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PresupuestoVentasLineasConstantesFunciones.LABEL_IDCIUDAD);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(presupuestoventaslineas.getciudad_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PresupuestoVentasLineasConstantesFunciones.LABEL_IDZONA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PresupuestoVentasLineasConstantesFunciones.LABEL_IDZONA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(presupuestoventaslineas.getzona_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PresupuestoVentasLineasConstantesFunciones.LABEL_IDLINEA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PresupuestoVentasLineasConstantesFunciones.LABEL_IDLINEA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(presupuestoventaslineas.getlinea_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PresupuestoVentasLineasConstantesFunciones.LABEL_IDLINEAGRUPO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PresupuestoVentasLineasConstantesFunciones.LABEL_IDLINEAGRUPO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(presupuestoventaslineas.getlineagrupo_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PresupuestoVentasLineasConstantesFunciones.LABEL_IDLINEACATEGORIA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PresupuestoVentasLineasConstantesFunciones.LABEL_IDLINEACATEGORIA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(presupuestoventaslineas.getlineacategoria_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PresupuestoVentasLineasConstantesFunciones.LABEL_IDLINEAMARCA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PresupuestoVentasLineasConstantesFunciones.LABEL_IDLINEAMARCA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(presupuestoventaslineas.getlineamarca_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PresupuestoVentasLineasConstantesFunciones.LABEL_PRECIO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PresupuestoVentasLineasConstantesFunciones.LABEL_PRECIO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(presupuestoventaslineas.getprecio());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PresupuestoVentasLineasConstantesFunciones.LABEL_CANTIDAD))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PresupuestoVentasLineasConstantesFunciones.LABEL_CANTIDAD);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(presupuestoventaslineas.getcantidad());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PresupuestoVentasLineasConstantesFunciones.LABEL_VALOR))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PresupuestoVentasLineasConstantesFunciones.LABEL_VALOR);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(presupuestoventaslineas.getvalor());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PresupuestoVentasLineasConstantesFunciones.LABEL_PORCENTAJE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PresupuestoVentasLineasConstantesFunciones.LABEL_PORCENTAJE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(presupuestoventaslineas.getporcentaje());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PresupuestoVentasLineasConstantesFunciones.LABEL_CANTIDADTOTAL))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PresupuestoVentasLineasConstantesFunciones.LABEL_CANTIDADTOTAL);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(presupuestoventaslineas.getcantidad_total());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PresupuestoVentasLineasConstantesFunciones.LABEL_VALORTOTAL))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PresupuestoVentasLineasConstantesFunciones.LABEL_VALORTOTAL);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(presupuestoventaslineas.getvalor_total());


			}						
        }
        
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.presupuestoventaslineasSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Presupuesto Ventas_lineas",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReporteRelacionesPresupuestoVentasLineass(String sAccionBusqueda,String sTipoArchivoReporte,List<PresupuestoVentasLineas> presupuestoventaslineassParaReportes,Boolean paraDinamico) throws Exception {
		
		ArrayList<Classe> classes=new ArrayList<Classe>();
		List<PresupuestoVentasLineas> presupuestoventaslineassRespaldo=null;
		
		classes=PresupuestoVentasLineasConstantesFunciones.getClassesRelationshipsOfPresupuestoVentasLineas(new ArrayList<Classe>(),DeepLoadType.NONE,false);
					
		this.datosDeep=new DatosDeep();
		
		this.datosDeep.setIsDeep(false);
		this.datosDeep.setDeepLoadType(DeepLoadType.INCLUDE);
		this.datosDeep.setClases(classes);
			
		this.datosCliente.setDatosDeepParametros(false, DeepLoadType.INCLUDE, classes, "");
		this.datosCliente.setIsConDeep(true);	
		this.datosCliente.setIsConExportar(false);
		
						
		this.presupuestoventaslineasLogic.setDatosCliente(this.datosCliente);
		this.presupuestoventaslineasLogic.setDatosDeep(this.datosDeep);
		this.presupuestoventaslineasLogic.setIsConDeep(true);
		
		presupuestoventaslineassRespaldo=this.presupuestoventaslineasLogic.getPresupuestoVentasLineass();
		
		this.presupuestoventaslineasLogic.setPresupuestoVentasLineass(presupuestoventaslineassParaReportes);	
		this.presupuestoventaslineasLogic.deepLoadsWithConnection(false, DeepLoadType.INCLUDE, classes,"");
		
		presupuestoventaslineassParaReportes=this.presupuestoventaslineasLogic.getPresupuestoVentasLineass();
		this.presupuestoventaslineasLogic.setPresupuestoVentasLineass(presupuestoventaslineassRespaldo);
		
		
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"presupuestoventaslineas_relacion";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("PresupuestoVentasLineass");
         
        int iRow = 0;
		int iRowLast = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		this.generarExcelReporteHeaderPresupuestoVentasLineas("NORMAL",row,workbook);
		
		int i=0;
		int i2=0;
		
		CellStyle cellStyleData = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataTitulo = Funciones2.getStyleTitulo(workbook,"PRINCIPAL");
		CellStyle cellStyleDataZebra = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataAux =null;
		CellStyle cellStyleDataAuxHijo =null;
		
		for(PresupuestoVentasLineas presupuestoventaslineas : presupuestoventaslineassParaReportes) {			
			if(i!=0) {
				row = sheet.createRow(iRow++);				
				this.generarExcelReporteHeaderPresupuestoVentasLineas("NORMAL",row,workbook);
			}
			
			cellStyleDataAux=null;
			
			if(i%2==0) {
				//cellStyleDataAux=cellStyleData;
			}
			
			row = sheet.createRow(iRow++);						
			PresupuestoVentasLineasConstantesFunciones.generarExcelReporteDataPresupuestoVentasLineas("NORMAL",row,workbook,presupuestoventaslineas,cellStyleDataAux);
		
			
			
			
			i++;
        }
        
		/*
		row = sheet.createRow(iRow++);
		iRowLast=iRow - 1;
			
		cell = row.createCell(0);
		cell.setCellValue(PresupuestoVentasLineasConstantesFunciones.getPresupuestoVentasLineasDescripcion(presupuestoventaslineas));
		cell.setCellStyle(cellStyleTitulo);
			
		sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,0,2));			
		*/
		
			
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.presupuestoventaslineasSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Presupuesto Ventas_lineas",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	
	public Boolean existeColumnaReporteDinamico(String sColumna) {
		Boolean existe=false;
		
		Reporte reporte=new Reporte();
		
		
		for(int index:this.jInternalFrameReporteDinamicoPresupuestoVentasLineas.getjListColumnasSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoPresupuestoVentasLineas.getjListColumnasSelectReporte().getModel().getElementAt(index);
			
			if(sColumna.equals(reporte.getsCodigo())) {
				existe=true;
				break;
			}
		
		}
		
		
		return existe;
	}
	
	public Boolean existeRelacionReporteDinamico(String sColumna) {
		Boolean existe=false;
		
		Reporte reporte=new Reporte();
		
		
		for(int index:this.jInternalFrameReporteDinamicoPresupuestoVentasLineas.getjListRelacionesSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoPresupuestoVentasLineas.getjListRelacionesSelectReporte().getModel().getElementAt(index);
			
			if(sColumna.equals(reporte.getsCodigo())) {
				existe=true;
				break;
			}
		
		}
		
		
		return existe;
	}
	
	public void startProcessPresupuestoVentasLineas() throws Exception {		
		this.startProcessPresupuestoVentasLineas(true);
	}
	
	public void startProcessPresupuestoVentasLineas(Boolean conSplash) throws Exception {		
		//FuncionesSwing.enableDisablePanels(false,this.jTabbedPaneBusquedasPresupuestoVentasLineas ,this.jPanelParametrosReportesPresupuestoVentasLineas, this.jScrollPanelDatosPresupuestoVentasLineas,this.jPanelPaginacionPresupuestoVentasLineas, this.jScrollPanelDatosEdicionPresupuestoVentasLineas, this.jPanelAccionesPresupuestoVentasLineas,this.jPanelAccionesFormularioPresupuestoVentasLineas,this.jmenuBarPresupuestoVentasLineas,this.jmenuBarDetallePresupuestoVentasLineas,this.jTtoolBarPresupuestoVentasLineas,this.jTtoolBarDetallePresupuestoVentasLineas);		
		
		final JTabbedPane jTabbedPaneBusquedasPresupuestoVentasLineas=this.jTabbedPaneBusquedasPresupuestoVentasLineas; 
		
		final JPanel jPanelParametrosReportesPresupuestoVentasLineas=this.jPanelParametrosReportesPresupuestoVentasLineas;
		//final JScrollPane jScrollPanelDatosPresupuestoVentasLineas=this.jScrollPanelDatosPresupuestoVentasLineas;
		final JTable jTableDatosPresupuestoVentasLineas=this.jTableDatosPresupuestoVentasLineas;		
		final JPanel jPanelPaginacionPresupuestoVentasLineas=this.jPanelPaginacionPresupuestoVentasLineas;
		//final JScrollPane jScrollPanelDatosEdicionPresupuestoVentasLineas=this.jScrollPanelDatosEdicionPresupuestoVentasLineas;
		final JPanel jPanelAccionesPresupuestoVentasLineas=this.jPanelAccionesPresupuestoVentasLineas;
		
		JPanel jPanelCamposAuxiliarPresupuestoVentasLineas=new JPanelMe();
		JPanel jPanelAccionesFormularioAuxiliarPresupuestoVentasLineas=new JPanelMe();
		
		if(this.jInternalFrameDetalleFormPresupuestoVentasLineas!=null) {
			jPanelCamposAuxiliarPresupuestoVentasLineas=this.jInternalFrameDetalleFormPresupuestoVentasLineas.jPanelCamposPresupuestoVentasLineas;
			jPanelAccionesFormularioAuxiliarPresupuestoVentasLineas=this.jInternalFrameDetalleFormPresupuestoVentasLineas.jPanelAccionesFormularioPresupuestoVentasLineas;
		}
		
		final JPanel jPanelCamposPresupuestoVentasLineas=jPanelCamposAuxiliarPresupuestoVentasLineas;
		final JPanel jPanelAccionesFormularioPresupuestoVentasLineas=jPanelAccionesFormularioAuxiliarPresupuestoVentasLineas;
		
		
		final JMenuBar jmenuBarPresupuestoVentasLineas=this.jmenuBarPresupuestoVentasLineas;
		final JToolBar jTtoolBarPresupuestoVentasLineas=this.jTtoolBarPresupuestoVentasLineas;		
		
		
		JMenuBar jmenuBarDetalleAuxiliarPresupuestoVentasLineas=new JMenuBar();
		JToolBar jTtoolBarDetalleAuxiliarPresupuestoVentasLineas=new JToolBar();		
		
		if(this.jInternalFrameDetalleFormPresupuestoVentasLineas!=null) {
			jmenuBarDetalleAuxiliarPresupuestoVentasLineas=this.jInternalFrameDetalleFormPresupuestoVentasLineas.jmenuBarDetallePresupuestoVentasLineas;
			jTtoolBarDetalleAuxiliarPresupuestoVentasLineas=this.jInternalFrameDetalleFormPresupuestoVentasLineas.jTtoolBarDetallePresupuestoVentasLineas;
		}
		
		final JMenuBar jmenuBarDetallePresupuestoVentasLineas=jmenuBarDetalleAuxiliarPresupuestoVentasLineas;
		final JToolBar jTtoolBarDetallePresupuestoVentasLineas=jTtoolBarDetalleAuxiliarPresupuestoVentasLineas;		
		
		
		
		
		
		if(Constantes2.CON_PROCESO_HILO) {
			Thread threadRunnableProcess;
			ProcessRunnable processRunnable;
			
			processRunnable=new ProcessRunnable();
			
			processRunnable.setsTipo("START");
			processRunnable.setDesktop(jDesktopPane);
			processRunnable.setModuloActual(moduloActual);
			processRunnable.setModuloUsuarioSeleccionado(moduloActual);
			processRunnable.setOpcionActual(opcionActual);
			processRunnable.setParametroGeneralSg(parametroGeneralSg);
			processRunnable.setParametroGeneralUsuario(parametroGeneralUsuario);
			processRunnable.setResumenUsuarioActual(resumenUsuarioActual);
			processRunnable.setUsuarioActual(usuarioActual);
			
			processRunnable.jTabbedPaneBusquedas=jTabbedPaneBusquedasPresupuestoVentasLineas;
			processRunnable.jPanelParametrosReportes=jPanelParametrosReportesPresupuestoVentasLineas;
			processRunnable.jTableDatos=jTableDatosPresupuestoVentasLineas;
			processRunnable.jPanelCampos=jPanelCamposPresupuestoVentasLineas;
			processRunnable.jPanelPaginacion=jPanelPaginacionPresupuestoVentasLineas;
			processRunnable.jPanelAcciones=jPanelAccionesPresupuestoVentasLineas;
			processRunnable.jPanelAccionesFormulario=jPanelAccionesFormularioPresupuestoVentasLineas;
			
			
			processRunnable.jmenuBar=jmenuBarPresupuestoVentasLineas;
			processRunnable.jmenuBarDetalle=jmenuBarDetallePresupuestoVentasLineas;
			processRunnable.jTtoolBar=jTtoolBarPresupuestoVentasLineas;
			processRunnable.jTtoolBarDetalle=jTtoolBarDetallePresupuestoVentasLineas;
			processRunnable.jInternalFrameBase=this;
			
			//processRunnable.CargarObjetosRendimientoCriticoModuloInventario();
			
			
			threadRunnableProcess=new Thread(processRunnable);//.start();
					
			threadRunnableProcess.start();
			
		} else {
			FuncionesSwing.enableDisablePanels(false,jTabbedPaneBusquedasPresupuestoVentasLineas ,jPanelParametrosReportesPresupuestoVentasLineas,jTableDatosPresupuestoVentasLineas, /*jScrollPanelDatosPresupuestoVentasLineas,*/jPanelCamposPresupuestoVentasLineas,jPanelPaginacionPresupuestoVentasLineas, /*jScrollPanelDatosEdicionPresupuestoVentasLineas,*/ jPanelAccionesPresupuestoVentasLineas,jPanelAccionesFormularioPresupuestoVentasLineas,jmenuBarPresupuestoVentasLineas,jmenuBarDetallePresupuestoVentasLineas,jTtoolBarPresupuestoVentasLineas,jTtoolBarDetallePresupuestoVentasLineas);
		
			startProcess();//this.
		}
						
		/*
		if(conSplash) {
			SwingUtilities.invokeLater(new Runnable() {
			      public void run() {
			    	  try {
							FuncionesSwing.enableDisablePanels(false,jTabbedPaneBusquedasPresupuestoVentasLineas ,jPanelParametrosReportesPresupuestoVentasLineas, jScrollPanelDatosPresupuestoVentasLineas,jPanelPaginacionPresupuestoVentasLineas, jScrollPanelDatosEdicionPresupuestoVentasLineas, jPanelAccionesPresupuestoVentasLineas,jPanelAccionesFormularioPresupuestoVentasLineas,jmenuBarPresupuestoVentasLineas,jmenuBarDetallePresupuestoVentasLineas,jTtoolBarPresupuestoVentasLineas,jTtoolBarDetallePresupuestoVentasLineas);
						
							startProcess();//this.
							
						} catch (Exception e) {
							// TODO Auto-generated catch block
							e.printStackTrace();
						}
			      }
			});
		}
		*/
	}
	
	public void finishProcessPresupuestoVentasLineas() {// throws Exception 
		this.finishProcessPresupuestoVentasLineas(true);
	}
	
	public void finishProcessPresupuestoVentasLineas(Boolean conSplash) {// throws Exception 
		//FuncionesSwing.enableDisablePanels(true,this.jTabbedPaneBusquedasPresupuestoVentasLineas ,this.jPanelParametrosReportesPresupuestoVentasLineas, this.jScrollPanelDatosPresupuestoVentasLineas,this.jPanelPaginacionPresupuestoVentasLineas, this.jScrollPanelDatosEdicionPresupuestoVentasLineas, this.jPanelAccionesPresupuestoVentasLineas,this.jPanelAccionesFormularioPresupuestoVentasLineas,this.jmenuBarPresupuestoVentasLineas,this.jmenuBarDetallePresupuestoVentasLineas,this.jTtoolBarPresupuestoVentasLineas,this.jTtoolBarDetallePresupuestoVentasLineas);		
		
		final JTabbedPane jTabbedPaneBusquedasPresupuestoVentasLineas=this.jTabbedPaneBusquedasPresupuestoVentasLineas; 
		
		final JPanel jPanelParametrosReportesPresupuestoVentasLineas=this.jPanelParametrosReportesPresupuestoVentasLineas;
		//final JScrollPane jScrollPanelDatosPresupuestoVentasLineas=this.jScrollPanelDatosPresupuestoVentasLineas;
		final JTable jTableDatosPresupuestoVentasLineas=this.jTableDatosPresupuestoVentasLineas;		
		final JPanel jPanelPaginacionPresupuestoVentasLineas=this.jPanelPaginacionPresupuestoVentasLineas;
		//final JScrollPane jScrollPanelDatosEdicionPresupuestoVentasLineas=this.jScrollPanelDatosEdicionPresupuestoVentasLineas;
		final JPanel jPanelAccionesPresupuestoVentasLineas=this.jPanelAccionesPresupuestoVentasLineas;
		
		JPanel jPanelCamposAuxiliarPresupuestoVentasLineas=new JPanel();
		JPanel jPanelAccionesFormularioAuxiliarPresupuestoVentasLineas=new JPanel();
		
		if(this.jInternalFrameDetalleFormPresupuestoVentasLineas!=null) {
			jPanelCamposAuxiliarPresupuestoVentasLineas=this.jInternalFrameDetalleFormPresupuestoVentasLineas.jPanelCamposPresupuestoVentasLineas;
			jPanelAccionesFormularioAuxiliarPresupuestoVentasLineas=this.jInternalFrameDetalleFormPresupuestoVentasLineas.jPanelAccionesFormularioPresupuestoVentasLineas;
		}
		
		final JPanel jPanelCamposPresupuestoVentasLineas=jPanelCamposAuxiliarPresupuestoVentasLineas;
		final JPanel jPanelAccionesFormularioPresupuestoVentasLineas=jPanelAccionesFormularioAuxiliarPresupuestoVentasLineas;
		
		
		final JMenuBar jmenuBarPresupuestoVentasLineas=this.jmenuBarPresupuestoVentasLineas;		
		final JToolBar jTtoolBarPresupuestoVentasLineas=this.jTtoolBarPresupuestoVentasLineas;
				
		JMenuBar jmenuBarDetalleAuxiliarPresupuestoVentasLineas=new JMenuBar();
		JToolBar jTtoolBarDetalleAuxiliarPresupuestoVentasLineas=new JToolBar();
		
		if(this.jInternalFrameDetalleFormPresupuestoVentasLineas!=null) {
			jmenuBarDetalleAuxiliarPresupuestoVentasLineas=this.jInternalFrameDetalleFormPresupuestoVentasLineas.jmenuBarDetallePresupuestoVentasLineas;
			jTtoolBarDetalleAuxiliarPresupuestoVentasLineas=this.jInternalFrameDetalleFormPresupuestoVentasLineas.jTtoolBarDetallePresupuestoVentasLineas;		
		}
		
		final JMenuBar jmenuBarDetallePresupuestoVentasLineas=jmenuBarDetalleAuxiliarPresupuestoVentasLineas;
		final JToolBar jTtoolBarDetallePresupuestoVentasLineas=jTtoolBarDetalleAuxiliarPresupuestoVentasLineas;
		
		
		
		if(Constantes2.CON_PROCESO_HILO) {
			Thread threadRunnableProcess;
			ProcessRunnable processRunnable;
			
			processRunnable=new ProcessRunnable();
			
			processRunnable.setsTipo("END");
			processRunnable.setDesktop(jDesktopPane);
			processRunnable.setModuloActual(moduloActual);
			processRunnable.setModuloUsuarioSeleccionado(moduloActual);
			processRunnable.setOpcionActual(opcionActual);
			processRunnable.setParametroGeneralSg(parametroGeneralSg);
			processRunnable.setParametroGeneralUsuario(parametroGeneralUsuario);
			processRunnable.setResumenUsuarioActual(resumenUsuarioActual);
			processRunnable.setUsuarioActual(usuarioActual);
			
			processRunnable.jTabbedPaneBusquedas=jTabbedPaneBusquedasPresupuestoVentasLineas;
			processRunnable.jPanelParametrosReportes=jPanelParametrosReportesPresupuestoVentasLineas;
			processRunnable.jTableDatos=jTableDatosPresupuestoVentasLineas;
			processRunnable.jPanelCampos=jPanelCamposPresupuestoVentasLineas;
			processRunnable.jPanelPaginacion=jPanelPaginacionPresupuestoVentasLineas;
			processRunnable.jPanelAcciones=jPanelAccionesPresupuestoVentasLineas;
			processRunnable.jPanelAccionesFormulario=jPanelAccionesFormularioPresupuestoVentasLineas;
			
			
			processRunnable.jmenuBar=jmenuBarPresupuestoVentasLineas;
			processRunnable.jmenuBarDetalle=jmenuBarDetallePresupuestoVentasLineas;
			processRunnable.jTtoolBar=jTtoolBarPresupuestoVentasLineas;
			processRunnable.jTtoolBarDetalle=jTtoolBarDetallePresupuestoVentasLineas;
			processRunnable.jInternalFrameBase=this;
			
			//processRunnable.CargarObjetosRendimientoCriticoModuloInventario();
			
			
			threadRunnableProcess=new Thread(processRunnable);//.start();
					
			threadRunnableProcess.start();
			
		} else {
			if(conSplash) {
				SwingUtilities.invokeLater(new RunnableProceso(true,this,jTabbedPaneBusquedasPresupuestoVentasLineas ,jPanelParametrosReportesPresupuestoVentasLineas, jTableDatosPresupuestoVentasLineas,/*jScrollPanelDatosPresupuestoVentasLineas,*/jPanelCamposPresupuestoVentasLineas,jPanelPaginacionPresupuestoVentasLineas, /*jScrollPanelDatosEdicionPresupuestoVentasLineas,*/ jPanelAccionesPresupuestoVentasLineas,jPanelAccionesFormularioPresupuestoVentasLineas,jmenuBarPresupuestoVentasLineas,jmenuBarDetallePresupuestoVentasLineas,jTtoolBarPresupuestoVentasLineas,jTtoolBarDetallePresupuestoVentasLineas));
			}
		}						
	}
	
	/*
	public void habilitarDeshabilitarControlesPresupuestoVentasLineas(Boolean esHabilitar,Boolean conDetalle) {
		this.habilitarDeshabilitarToolBarPresupuestoVentasLineas(esHabilitar,conDetalle);
		this.habilitarDeshabilitarMenuPresupuestoVentasLineas(esHabilitar,conDetalle);
	}
	
	public void habilitarDeshabilitarToolBarPresupuestoVentasLineas(Boolean esHabilitar,Boolean conDetalle) {
		FuncionesSwing.enableDisableComponents(this.jTtoolBarPresupuestoVentasLineas,esHabilitar,1,1);
		
		if(conDetalle) {
			FuncionesSwing.enableDisableComponents(this.jTtoolBarDetallePresupuestoVentasLineas,esHabilitar,1,1);
		}
	}
	
	public void habilitarDeshabilitarMenuPresupuestoVentasLineas(Boolean esHabilitar,Boolean conDetalle) {
		FuncionesSwing.enableDisableComponents(this.jmenuBarPresupuestoVentasLineas,esHabilitar,1,1);
		
		if(conDetalle) {
			FuncionesSwing.enableDisableComponents(this.jmenuBarDetallePresupuestoVentasLineas,esHabilitar,1,1);
		}
	}
	*/
	
	
	
	public void procesarBusqueda(String sAccionBusqueda) throws Exception {		
		String  finalQueryPaginacion=this.presupuestoventaslineasConstantesFunciones.getsFinalQueryPresupuestoVentasLineas();
		String  finalQueryPaginacionTodos=this.presupuestoventaslineasConstantesFunciones.getsFinalQueryPresupuestoVentasLineas();
		
		Boolean esBusqueda=false;
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		if(!sAccionBusqueda.equals("Todos"))	{
			esBusqueda=true;
		}
		
		this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
		this.arrDatoGeneralNo= new  ArrayList<String>();
		
		ArrayList<String> arrColumnasGlobalesNo=PresupuestoVentasLineasConstantesFunciones.getArrayColumnasGlobalesNoPresupuestoVentasLineas(this.arrDatoGeneral);
		ArrayList<String> arrColumnasGlobales=PresupuestoVentasLineasConstantesFunciones.getArrayColumnasGlobalesPresupuestoVentasLineas(this.arrDatoGeneral,arrColumnasGlobalesNo);
		
			
		String  finalQueryGlobal="";
		
		finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,!esBusqueda,esBusqueda,arrColumnasGlobales,PresupuestoVentasLineasConstantesFunciones.TABLENAME);
		
		String sOrderBy="";
		
		
		sOrderBy=Funciones2.getFinalQueryOrderBy(this.arrOrderBy);
		
		
		if(!sOrderBy.equals("")) {			
			finalQueryPaginacion=sOrderBy;
			finalQueryPaginacionTodos=sOrderBy;
		}
		
		
		//INICIALIZA ELIMINADOS
		this.presupuestoventaslineassEliminados= new ArrayList<PresupuestoVentasLineas>();
		
		if(!this.isEntroOnLoad) {
			this.onLoad();
		}/* else {
			this.isEntroOnLoad=false;
		}*/
		
		
		
				
		try	{		
			
			//this.startProcessPresupuestoVentasLineas();
		
				///*PresupuestoVentasLineasSessionBean*/this.presupuestoventaslineasSessionBean=new PresupuestoVentasLineasSessionBean();
			
			if(this.presupuestoventaslineasSessionBean==null) {
				this.presupuestoventaslineasSessionBean=new PresupuestoVentasLineasSessionBean();
			}
			
			//ACTUALIZA EL TAMANIO DE PAGINACION DESDE EL COMBO
			if(this.sTipoPaginacion!=null && !this.sTipoPaginacion.equals("")) {
				if(!this.sTipoPaginacion.equals("TODOS")) {
					this.iNumeroPaginacion=Integer.parseInt(this.sTipoPaginacion);
				} else {
					this.iNumeroPaginacion=-1;
					this.iNumeroPaginacionPagina=-1;
				}
			} else {
				if(this.iNumeroPaginacion==null || (this.iNumeroPaginacion!=null && this.iNumeroPaginacion<=0)) {
					this.iNumeroPaginacion=PresupuestoVentasLineasConstantesFunciones.INUMEROPAGINACION;
				}
			}
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);
			
			this.cargarDatosCliente();
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			classes=PresupuestoVentasLineasConstantesFunciones.getClassesForeignKeysOfPresupuestoVentasLineas(new ArrayList<Classe>(),DeepLoadType.NONE);
			
		
			this.datosDeep=new DatosDeep();
			this.datosDeep.setIsDeep(false);
			this.datosDeep.setDeepLoadType(DeepLoadType.INCLUDE);
			this.datosDeep.setClases(classes);
			
			this.datosCliente.setDatosDeepParametros(false, DeepLoadType.INCLUDE, classes, "");
			this.datosCliente.setIsConDeep(true);
			
			if(false) {//this.conExportar
				this.datosCliente.setIsConExportar(true);
				this.datosCliente.setDatosExportarParametros(Funciones2.getTipoExportar(this.parametroGeneralUsuario),this.parametroGeneralUsuario.getcon_exportar_cabecera(),Funciones2.getTipoDelimiter(this.parametroGeneralUsuario),this.parametroGeneralUsuario.getpath_exportar()+"/presupuestoventaslineas."+Funciones2.getTipoExtensionArchivoExportar(this.parametroGeneralUsuario));
			} else {
				this.datosCliente.setIsConExportar(false);
			}
			
			presupuestoventaslineassAux= new ArrayList<PresupuestoVentasLineas>();
			
				
			presupuestoventaslineasLogic.setDatosCliente(this.datosCliente);
			presupuestoventaslineasLogic.setDatosDeep(this.datosDeep);
			presupuestoventaslineasLogic.setIsConDeep(true);
			
			
			presupuestoventaslineasLogic.getPresupuestoVentasLineasDataAccess().setIsForForeingsKeysDataRelationships(true);
			
			if(sAccionBusqueda.equals("Todos") || sAccionBusqueda.equals("Query"))	{	
				if(sAccionBusqueda.equals("Todos")) {
					//FALTA:PARA BUSQUEDAS POR CAMPO EN FORMULARIO
					//this.sFinalQueryGeneral="";
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacionTodos );
					
					presupuestoventaslineasLogic.getTodosPresupuestoVentasLineass(finalQueryGlobal,pagination);
					
					//presupuestoventaslineasLogic.getTodosPresupuestoVentasLineassWithConnection(finalQueryGlobal,pagination);										
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
				
				if(presupuestoventaslineasLogic.getPresupuestoVentasLineass()==null|| presupuestoventaslineasLogic.getPresupuestoVentasLineass().size()==0)	{
					
				
				}
				
				if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(-1);
						this.pagination.setiMaxResults(-1);
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							presupuestoventaslineassAux= new ArrayList<PresupuestoVentasLineas>();
							presupuestoventaslineassAux.addAll(presupuestoventaslineasLogic.getPresupuestoVentasLineass());						
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							presupuestoventaslineassAux= new ArrayList<PresupuestoVentasLineas>();
							presupuestoventaslineassAux.addAll(presupuestoventaslineass);
						}
						//ARCHITECTURE
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							presupuestoventaslineasLogic.getTodosPresupuestoVentasLineass(finalQueryGlobal+"",this.pagination);												
							
							//presupuestoventaslineasLogic.getTodosPresupuestoVentasLineassWithConnection(finalQueryGlobal+"",this.pagination);												
						} else if(Constantes.ISUSAEJBREMOTE) {
						} else if(Constantes.ISUSAEJBHOME) {
						}
						//ARCHITECTURE
						
					}
					
					this.generarReportePresupuestoVentasLineass("Todos",presupuestoventaslineasLogic.getPresupuestoVentasLineass() );
					
					if(false) {//isMostrarTodosResultadosReporte						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							presupuestoventaslineasLogic.setPresupuestoVentasLineass(new ArrayList<PresupuestoVentasLineas>());					
							presupuestoventaslineasLogic.getPresupuestoVentasLineass().addAll(presupuestoventaslineassAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							presupuestoventaslineass=new ArrayList<PresupuestoVentasLineas>();
							presupuestoventaslineass.addAll(presupuestoventaslineassAux);
						}
						//ARCHITECTURE
						
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);														
					}
				}
			}
			else if(sAccionBusqueda.equals("PorId")) {
				Long idPresupuestoVentasLineas=0L;
				
				if(this.idActual!=null && this.idActual!=0L) {
					idPresupuestoVentasLineas=this.idActual;
				
				} else if(this.idPresupuestoVentasLineasActual!=null && this.idPresupuestoVentasLineasActual!=0L) {
					idPresupuestoVentasLineas=idPresupuestoVentasLineasActual;
				}
				
					
				this.sDetalleReporte=PresupuestoVentasLineasConstantesFunciones.getDetalleIndicePorId(idPresupuestoVentasLineas);
				
				this.presupuestoventaslineass=new ArrayList<PresupuestoVentasLineas>();
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {					
					presupuestoventaslineasLogic.getEntity(idPresupuestoVentasLineas);
					
					//presupuestoventaslineasLogic.getEntityWithConnection(idPresupuestoVentasLineas);
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
								
				if(Constantes.ISUSAEJBLOGICLAYER) {
					presupuestoventaslineasLogic.setPresupuestoVentasLineass(new ArrayList<PresupuestoVentasLineas>());
					presupuestoventaslineasLogic.getPresupuestoVentasLineass().add(presupuestoventaslineasLogic.getPresupuestoVentasLineas());
				
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.presupuestoventaslineass=new ArrayList<PresupuestoVentasLineas>();
					this.presupuestoventaslineass.add(presupuestoventaslineas);
				}
				
				if(presupuestoventaslineasLogic.getPresupuestoVentasLineas()==null)	{
					
				
				}			
			}
			
		
			else if(sAccionBusqueda.equals("FK_IdCiudad")) {
				this.sDetalleReporte=PresupuestoVentasLineasConstantesFunciones.getDetalleIndiceFK_IdCiudad(id_ciudadFK_IdCiudad);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					presupuestoventaslineasLogic.getPresupuestoVentasLineassFK_IdCiudad(finalQueryGlobal,pagination,id_ciudadFK_IdCiudad);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PresupuestoVentasLineasConstantesFunciones.getDetalleIndiceFK_IdCiudad(id_ciudadFK_IdCiudad);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PresupuestoVentasLineasConstantesFunciones.getDetalleIndiceFK_IdCiudad(id_ciudadFK_IdCiudad);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=presupuestoventaslineasLogic.getPresupuestoVentasLineass()==null||presupuestoventaslineasLogic.getPresupuestoVentasLineass().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=presupuestoventaslineass==null|| presupuestoventaslineass.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						presupuestoventaslineassAux=new ArrayList<PresupuestoVentasLineas>();
						presupuestoventaslineassAux.addAll(presupuestoventaslineasLogic.getPresupuestoVentasLineass());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							presupuestoventaslineassAux=new ArrayList<PresupuestoVentasLineas>();
							presupuestoventaslineassAux.addAll(presupuestoventaslineass);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							presupuestoventaslineasLogic.getPresupuestoVentasLineassFK_IdCiudad(finalQueryGlobal,pagination,id_ciudadFK_IdCiudad);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PresupuestoVentasLineasConstantesFunciones.getDetalleIndiceFK_IdCiudad(id_ciudadFK_IdCiudad);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PresupuestoVentasLineasConstantesFunciones.getDetalleIndiceFK_IdCiudad(id_ciudadFK_IdCiudad);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReportePresupuestoVentasLineass("FK_IdCiudad",presupuestoventaslineasLogic.getPresupuestoVentasLineass());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReportePresupuestoVentasLineass("FK_IdCiudad",presupuestoventaslineass);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						presupuestoventaslineasLogic.setPresupuestoVentasLineass(new ArrayList<PresupuestoVentasLineas>());
						presupuestoventaslineasLogic.getPresupuestoVentasLineass().addAll(presupuestoventaslineassAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							presupuestoventaslineass=new ArrayList<PresupuestoVentasLineas>();
							presupuestoventaslineass.addAll(presupuestoventaslineassAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdEjercicio")) {
				this.sDetalleReporte=PresupuestoVentasLineasConstantesFunciones.getDetalleIndiceFK_IdEjercicio(id_ejercicioFK_IdEjercicio);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					presupuestoventaslineasLogic.getPresupuestoVentasLineassFK_IdEjercicio(finalQueryGlobal,pagination,id_ejercicioFK_IdEjercicio);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PresupuestoVentasLineasConstantesFunciones.getDetalleIndiceFK_IdEjercicio(id_ejercicioFK_IdEjercicio);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PresupuestoVentasLineasConstantesFunciones.getDetalleIndiceFK_IdEjercicio(id_ejercicioFK_IdEjercicio);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=presupuestoventaslineasLogic.getPresupuestoVentasLineass()==null||presupuestoventaslineasLogic.getPresupuestoVentasLineass().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=presupuestoventaslineass==null|| presupuestoventaslineass.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						presupuestoventaslineassAux=new ArrayList<PresupuestoVentasLineas>();
						presupuestoventaslineassAux.addAll(presupuestoventaslineasLogic.getPresupuestoVentasLineass());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							presupuestoventaslineassAux=new ArrayList<PresupuestoVentasLineas>();
							presupuestoventaslineassAux.addAll(presupuestoventaslineass);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							presupuestoventaslineasLogic.getPresupuestoVentasLineassFK_IdEjercicio(finalQueryGlobal,pagination,id_ejercicioFK_IdEjercicio);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PresupuestoVentasLineasConstantesFunciones.getDetalleIndiceFK_IdEjercicio(id_ejercicioFK_IdEjercicio);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PresupuestoVentasLineasConstantesFunciones.getDetalleIndiceFK_IdEjercicio(id_ejercicioFK_IdEjercicio);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReportePresupuestoVentasLineass("FK_IdEjercicio",presupuestoventaslineasLogic.getPresupuestoVentasLineass());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReportePresupuestoVentasLineass("FK_IdEjercicio",presupuestoventaslineass);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						presupuestoventaslineasLogic.setPresupuestoVentasLineass(new ArrayList<PresupuestoVentasLineas>());
						presupuestoventaslineasLogic.getPresupuestoVentasLineass().addAll(presupuestoventaslineassAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							presupuestoventaslineass=new ArrayList<PresupuestoVentasLineas>();
							presupuestoventaslineass.addAll(presupuestoventaslineassAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdEmpresa")) {
				this.sDetalleReporte=PresupuestoVentasLineasConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					presupuestoventaslineasLogic.getPresupuestoVentasLineassFK_IdEmpresa(finalQueryGlobal,pagination,id_empresaFK_IdEmpresa);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PresupuestoVentasLineasConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PresupuestoVentasLineasConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=presupuestoventaslineasLogic.getPresupuestoVentasLineass()==null||presupuestoventaslineasLogic.getPresupuestoVentasLineass().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=presupuestoventaslineass==null|| presupuestoventaslineass.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						presupuestoventaslineassAux=new ArrayList<PresupuestoVentasLineas>();
						presupuestoventaslineassAux.addAll(presupuestoventaslineasLogic.getPresupuestoVentasLineass());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							presupuestoventaslineassAux=new ArrayList<PresupuestoVentasLineas>();
							presupuestoventaslineassAux.addAll(presupuestoventaslineass);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							presupuestoventaslineasLogic.getPresupuestoVentasLineassFK_IdEmpresa(finalQueryGlobal,pagination,id_empresaFK_IdEmpresa);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PresupuestoVentasLineasConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PresupuestoVentasLineasConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReportePresupuestoVentasLineass("FK_IdEmpresa",presupuestoventaslineasLogic.getPresupuestoVentasLineass());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReportePresupuestoVentasLineass("FK_IdEmpresa",presupuestoventaslineass);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						presupuestoventaslineasLogic.setPresupuestoVentasLineass(new ArrayList<PresupuestoVentasLineas>());
						presupuestoventaslineasLogic.getPresupuestoVentasLineass().addAll(presupuestoventaslineassAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							presupuestoventaslineass=new ArrayList<PresupuestoVentasLineas>();
							presupuestoventaslineass.addAll(presupuestoventaslineassAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdLinea")) {
				this.sDetalleReporte=PresupuestoVentasLineasConstantesFunciones.getDetalleIndiceFK_IdLinea(id_lineaFK_IdLinea);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					presupuestoventaslineasLogic.getPresupuestoVentasLineassFK_IdLinea(finalQueryGlobal,pagination,id_lineaFK_IdLinea);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PresupuestoVentasLineasConstantesFunciones.getDetalleIndiceFK_IdLinea(id_lineaFK_IdLinea);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PresupuestoVentasLineasConstantesFunciones.getDetalleIndiceFK_IdLinea(id_lineaFK_IdLinea);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=presupuestoventaslineasLogic.getPresupuestoVentasLineass()==null||presupuestoventaslineasLogic.getPresupuestoVentasLineass().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=presupuestoventaslineass==null|| presupuestoventaslineass.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						presupuestoventaslineassAux=new ArrayList<PresupuestoVentasLineas>();
						presupuestoventaslineassAux.addAll(presupuestoventaslineasLogic.getPresupuestoVentasLineass());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							presupuestoventaslineassAux=new ArrayList<PresupuestoVentasLineas>();
							presupuestoventaslineassAux.addAll(presupuestoventaslineass);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							presupuestoventaslineasLogic.getPresupuestoVentasLineassFK_IdLinea(finalQueryGlobal,pagination,id_lineaFK_IdLinea);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PresupuestoVentasLineasConstantesFunciones.getDetalleIndiceFK_IdLinea(id_lineaFK_IdLinea);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PresupuestoVentasLineasConstantesFunciones.getDetalleIndiceFK_IdLinea(id_lineaFK_IdLinea);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReportePresupuestoVentasLineass("FK_IdLinea",presupuestoventaslineasLogic.getPresupuestoVentasLineass());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReportePresupuestoVentasLineass("FK_IdLinea",presupuestoventaslineass);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						presupuestoventaslineasLogic.setPresupuestoVentasLineass(new ArrayList<PresupuestoVentasLineas>());
						presupuestoventaslineasLogic.getPresupuestoVentasLineass().addAll(presupuestoventaslineassAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							presupuestoventaslineass=new ArrayList<PresupuestoVentasLineas>();
							presupuestoventaslineass.addAll(presupuestoventaslineassAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdLineaCategoria")) {
				this.sDetalleReporte=PresupuestoVentasLineasConstantesFunciones.getDetalleIndiceFK_IdLineaCategoria(id_linea_categoriaFK_IdLineaCategoria);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					presupuestoventaslineasLogic.getPresupuestoVentasLineassFK_IdLineaCategoria(finalQueryGlobal,pagination,id_linea_categoriaFK_IdLineaCategoria);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PresupuestoVentasLineasConstantesFunciones.getDetalleIndiceFK_IdLineaCategoria(id_linea_categoriaFK_IdLineaCategoria);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PresupuestoVentasLineasConstantesFunciones.getDetalleIndiceFK_IdLineaCategoria(id_linea_categoriaFK_IdLineaCategoria);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=presupuestoventaslineasLogic.getPresupuestoVentasLineass()==null||presupuestoventaslineasLogic.getPresupuestoVentasLineass().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=presupuestoventaslineass==null|| presupuestoventaslineass.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						presupuestoventaslineassAux=new ArrayList<PresupuestoVentasLineas>();
						presupuestoventaslineassAux.addAll(presupuestoventaslineasLogic.getPresupuestoVentasLineass());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							presupuestoventaslineassAux=new ArrayList<PresupuestoVentasLineas>();
							presupuestoventaslineassAux.addAll(presupuestoventaslineass);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							presupuestoventaslineasLogic.getPresupuestoVentasLineassFK_IdLineaCategoria(finalQueryGlobal,pagination,id_linea_categoriaFK_IdLineaCategoria);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PresupuestoVentasLineasConstantesFunciones.getDetalleIndiceFK_IdLineaCategoria(id_linea_categoriaFK_IdLineaCategoria);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PresupuestoVentasLineasConstantesFunciones.getDetalleIndiceFK_IdLineaCategoria(id_linea_categoriaFK_IdLineaCategoria);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReportePresupuestoVentasLineass("FK_IdLineaCategoria",presupuestoventaslineasLogic.getPresupuestoVentasLineass());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReportePresupuestoVentasLineass("FK_IdLineaCategoria",presupuestoventaslineass);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						presupuestoventaslineasLogic.setPresupuestoVentasLineass(new ArrayList<PresupuestoVentasLineas>());
						presupuestoventaslineasLogic.getPresupuestoVentasLineass().addAll(presupuestoventaslineassAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							presupuestoventaslineass=new ArrayList<PresupuestoVentasLineas>();
							presupuestoventaslineass.addAll(presupuestoventaslineassAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdLineaGrupo")) {
				this.sDetalleReporte=PresupuestoVentasLineasConstantesFunciones.getDetalleIndiceFK_IdLineaGrupo(id_linea_grupoFK_IdLineaGrupo);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					presupuestoventaslineasLogic.getPresupuestoVentasLineassFK_IdLineaGrupo(finalQueryGlobal,pagination,id_linea_grupoFK_IdLineaGrupo);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PresupuestoVentasLineasConstantesFunciones.getDetalleIndiceFK_IdLineaGrupo(id_linea_grupoFK_IdLineaGrupo);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PresupuestoVentasLineasConstantesFunciones.getDetalleIndiceFK_IdLineaGrupo(id_linea_grupoFK_IdLineaGrupo);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=presupuestoventaslineasLogic.getPresupuestoVentasLineass()==null||presupuestoventaslineasLogic.getPresupuestoVentasLineass().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=presupuestoventaslineass==null|| presupuestoventaslineass.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						presupuestoventaslineassAux=new ArrayList<PresupuestoVentasLineas>();
						presupuestoventaslineassAux.addAll(presupuestoventaslineasLogic.getPresupuestoVentasLineass());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							presupuestoventaslineassAux=new ArrayList<PresupuestoVentasLineas>();
							presupuestoventaslineassAux.addAll(presupuestoventaslineass);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							presupuestoventaslineasLogic.getPresupuestoVentasLineassFK_IdLineaGrupo(finalQueryGlobal,pagination,id_linea_grupoFK_IdLineaGrupo);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PresupuestoVentasLineasConstantesFunciones.getDetalleIndiceFK_IdLineaGrupo(id_linea_grupoFK_IdLineaGrupo);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PresupuestoVentasLineasConstantesFunciones.getDetalleIndiceFK_IdLineaGrupo(id_linea_grupoFK_IdLineaGrupo);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReportePresupuestoVentasLineass("FK_IdLineaGrupo",presupuestoventaslineasLogic.getPresupuestoVentasLineass());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReportePresupuestoVentasLineass("FK_IdLineaGrupo",presupuestoventaslineass);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						presupuestoventaslineasLogic.setPresupuestoVentasLineass(new ArrayList<PresupuestoVentasLineas>());
						presupuestoventaslineasLogic.getPresupuestoVentasLineass().addAll(presupuestoventaslineassAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							presupuestoventaslineass=new ArrayList<PresupuestoVentasLineas>();
							presupuestoventaslineass.addAll(presupuestoventaslineassAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdLineaMarca")) {
				this.sDetalleReporte=PresupuestoVentasLineasConstantesFunciones.getDetalleIndiceFK_IdLineaMarca(id_linea_marcaFK_IdLineaMarca);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					presupuestoventaslineasLogic.getPresupuestoVentasLineassFK_IdLineaMarca(finalQueryGlobal,pagination,id_linea_marcaFK_IdLineaMarca);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PresupuestoVentasLineasConstantesFunciones.getDetalleIndiceFK_IdLineaMarca(id_linea_marcaFK_IdLineaMarca);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PresupuestoVentasLineasConstantesFunciones.getDetalleIndiceFK_IdLineaMarca(id_linea_marcaFK_IdLineaMarca);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=presupuestoventaslineasLogic.getPresupuestoVentasLineass()==null||presupuestoventaslineasLogic.getPresupuestoVentasLineass().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=presupuestoventaslineass==null|| presupuestoventaslineass.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						presupuestoventaslineassAux=new ArrayList<PresupuestoVentasLineas>();
						presupuestoventaslineassAux.addAll(presupuestoventaslineasLogic.getPresupuestoVentasLineass());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							presupuestoventaslineassAux=new ArrayList<PresupuestoVentasLineas>();
							presupuestoventaslineassAux.addAll(presupuestoventaslineass);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							presupuestoventaslineasLogic.getPresupuestoVentasLineassFK_IdLineaMarca(finalQueryGlobal,pagination,id_linea_marcaFK_IdLineaMarca);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PresupuestoVentasLineasConstantesFunciones.getDetalleIndiceFK_IdLineaMarca(id_linea_marcaFK_IdLineaMarca);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PresupuestoVentasLineasConstantesFunciones.getDetalleIndiceFK_IdLineaMarca(id_linea_marcaFK_IdLineaMarca);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReportePresupuestoVentasLineass("FK_IdLineaMarca",presupuestoventaslineasLogic.getPresupuestoVentasLineass());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReportePresupuestoVentasLineass("FK_IdLineaMarca",presupuestoventaslineass);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						presupuestoventaslineasLogic.setPresupuestoVentasLineass(new ArrayList<PresupuestoVentasLineas>());
						presupuestoventaslineasLogic.getPresupuestoVentasLineass().addAll(presupuestoventaslineassAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							presupuestoventaslineass=new ArrayList<PresupuestoVentasLineas>();
							presupuestoventaslineass.addAll(presupuestoventaslineassAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdPais")) {
				this.sDetalleReporte=PresupuestoVentasLineasConstantesFunciones.getDetalleIndiceFK_IdPais(id_paisFK_IdPais);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					presupuestoventaslineasLogic.getPresupuestoVentasLineassFK_IdPais(finalQueryGlobal,pagination,id_paisFK_IdPais);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PresupuestoVentasLineasConstantesFunciones.getDetalleIndiceFK_IdPais(id_paisFK_IdPais);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PresupuestoVentasLineasConstantesFunciones.getDetalleIndiceFK_IdPais(id_paisFK_IdPais);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=presupuestoventaslineasLogic.getPresupuestoVentasLineass()==null||presupuestoventaslineasLogic.getPresupuestoVentasLineass().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=presupuestoventaslineass==null|| presupuestoventaslineass.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						presupuestoventaslineassAux=new ArrayList<PresupuestoVentasLineas>();
						presupuestoventaslineassAux.addAll(presupuestoventaslineasLogic.getPresupuestoVentasLineass());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							presupuestoventaslineassAux=new ArrayList<PresupuestoVentasLineas>();
							presupuestoventaslineassAux.addAll(presupuestoventaslineass);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							presupuestoventaslineasLogic.getPresupuestoVentasLineassFK_IdPais(finalQueryGlobal,pagination,id_paisFK_IdPais);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PresupuestoVentasLineasConstantesFunciones.getDetalleIndiceFK_IdPais(id_paisFK_IdPais);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PresupuestoVentasLineasConstantesFunciones.getDetalleIndiceFK_IdPais(id_paisFK_IdPais);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReportePresupuestoVentasLineass("FK_IdPais",presupuestoventaslineasLogic.getPresupuestoVentasLineass());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReportePresupuestoVentasLineass("FK_IdPais",presupuestoventaslineass);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						presupuestoventaslineasLogic.setPresupuestoVentasLineass(new ArrayList<PresupuestoVentasLineas>());
						presupuestoventaslineasLogic.getPresupuestoVentasLineass().addAll(presupuestoventaslineassAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							presupuestoventaslineass=new ArrayList<PresupuestoVentasLineas>();
							presupuestoventaslineass.addAll(presupuestoventaslineassAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdPeriodo")) {
				this.sDetalleReporte=PresupuestoVentasLineasConstantesFunciones.getDetalleIndiceFK_IdPeriodo(id_periodoFK_IdPeriodo);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					presupuestoventaslineasLogic.getPresupuestoVentasLineassFK_IdPeriodo(finalQueryGlobal,pagination,id_periodoFK_IdPeriodo);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PresupuestoVentasLineasConstantesFunciones.getDetalleIndiceFK_IdPeriodo(id_periodoFK_IdPeriodo);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PresupuestoVentasLineasConstantesFunciones.getDetalleIndiceFK_IdPeriodo(id_periodoFK_IdPeriodo);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=presupuestoventaslineasLogic.getPresupuestoVentasLineass()==null||presupuestoventaslineasLogic.getPresupuestoVentasLineass().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=presupuestoventaslineass==null|| presupuestoventaslineass.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						presupuestoventaslineassAux=new ArrayList<PresupuestoVentasLineas>();
						presupuestoventaslineassAux.addAll(presupuestoventaslineasLogic.getPresupuestoVentasLineass());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							presupuestoventaslineassAux=new ArrayList<PresupuestoVentasLineas>();
							presupuestoventaslineassAux.addAll(presupuestoventaslineass);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							presupuestoventaslineasLogic.getPresupuestoVentasLineassFK_IdPeriodo(finalQueryGlobal,pagination,id_periodoFK_IdPeriodo);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PresupuestoVentasLineasConstantesFunciones.getDetalleIndiceFK_IdPeriodo(id_periodoFK_IdPeriodo);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PresupuestoVentasLineasConstantesFunciones.getDetalleIndiceFK_IdPeriodo(id_periodoFK_IdPeriodo);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReportePresupuestoVentasLineass("FK_IdPeriodo",presupuestoventaslineasLogic.getPresupuestoVentasLineass());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReportePresupuestoVentasLineass("FK_IdPeriodo",presupuestoventaslineass);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						presupuestoventaslineasLogic.setPresupuestoVentasLineass(new ArrayList<PresupuestoVentasLineas>());
						presupuestoventaslineasLogic.getPresupuestoVentasLineass().addAll(presupuestoventaslineassAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							presupuestoventaslineass=new ArrayList<PresupuestoVentasLineas>();
							presupuestoventaslineass.addAll(presupuestoventaslineassAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdSucursal")) {
				this.sDetalleReporte=PresupuestoVentasLineasConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					presupuestoventaslineasLogic.getPresupuestoVentasLineassFK_IdSucursal(finalQueryGlobal,pagination,id_sucursalFK_IdSucursal);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PresupuestoVentasLineasConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PresupuestoVentasLineasConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=presupuestoventaslineasLogic.getPresupuestoVentasLineass()==null||presupuestoventaslineasLogic.getPresupuestoVentasLineass().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=presupuestoventaslineass==null|| presupuestoventaslineass.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						presupuestoventaslineassAux=new ArrayList<PresupuestoVentasLineas>();
						presupuestoventaslineassAux.addAll(presupuestoventaslineasLogic.getPresupuestoVentasLineass());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							presupuestoventaslineassAux=new ArrayList<PresupuestoVentasLineas>();
							presupuestoventaslineassAux.addAll(presupuestoventaslineass);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							presupuestoventaslineasLogic.getPresupuestoVentasLineassFK_IdSucursal(finalQueryGlobal,pagination,id_sucursalFK_IdSucursal);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PresupuestoVentasLineasConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PresupuestoVentasLineasConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReportePresupuestoVentasLineass("FK_IdSucursal",presupuestoventaslineasLogic.getPresupuestoVentasLineass());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReportePresupuestoVentasLineass("FK_IdSucursal",presupuestoventaslineass);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						presupuestoventaslineasLogic.setPresupuestoVentasLineass(new ArrayList<PresupuestoVentasLineas>());
						presupuestoventaslineasLogic.getPresupuestoVentasLineass().addAll(presupuestoventaslineassAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							presupuestoventaslineass=new ArrayList<PresupuestoVentasLineas>();
							presupuestoventaslineass.addAll(presupuestoventaslineassAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdVendedor")) {
				this.sDetalleReporte=PresupuestoVentasLineasConstantesFunciones.getDetalleIndiceFK_IdVendedor(id_vendedorFK_IdVendedor);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					presupuestoventaslineasLogic.getPresupuestoVentasLineassFK_IdVendedor(finalQueryGlobal,pagination,id_vendedorFK_IdVendedor);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PresupuestoVentasLineasConstantesFunciones.getDetalleIndiceFK_IdVendedor(id_vendedorFK_IdVendedor);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PresupuestoVentasLineasConstantesFunciones.getDetalleIndiceFK_IdVendedor(id_vendedorFK_IdVendedor);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=presupuestoventaslineasLogic.getPresupuestoVentasLineass()==null||presupuestoventaslineasLogic.getPresupuestoVentasLineass().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=presupuestoventaslineass==null|| presupuestoventaslineass.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						presupuestoventaslineassAux=new ArrayList<PresupuestoVentasLineas>();
						presupuestoventaslineassAux.addAll(presupuestoventaslineasLogic.getPresupuestoVentasLineass());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							presupuestoventaslineassAux=new ArrayList<PresupuestoVentasLineas>();
							presupuestoventaslineassAux.addAll(presupuestoventaslineass);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							presupuestoventaslineasLogic.getPresupuestoVentasLineassFK_IdVendedor(finalQueryGlobal,pagination,id_vendedorFK_IdVendedor);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PresupuestoVentasLineasConstantesFunciones.getDetalleIndiceFK_IdVendedor(id_vendedorFK_IdVendedor);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PresupuestoVentasLineasConstantesFunciones.getDetalleIndiceFK_IdVendedor(id_vendedorFK_IdVendedor);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReportePresupuestoVentasLineass("FK_IdVendedor",presupuestoventaslineasLogic.getPresupuestoVentasLineass());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReportePresupuestoVentasLineass("FK_IdVendedor",presupuestoventaslineass);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						presupuestoventaslineasLogic.setPresupuestoVentasLineass(new ArrayList<PresupuestoVentasLineas>());
						presupuestoventaslineasLogic.getPresupuestoVentasLineass().addAll(presupuestoventaslineassAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							presupuestoventaslineass=new ArrayList<PresupuestoVentasLineas>();
							presupuestoventaslineass.addAll(presupuestoventaslineassAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdZona")) {
				this.sDetalleReporte=PresupuestoVentasLineasConstantesFunciones.getDetalleIndiceFK_IdZona(id_zonaFK_IdZona);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					presupuestoventaslineasLogic.getPresupuestoVentasLineassFK_IdZona(finalQueryGlobal,pagination,id_zonaFK_IdZona);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PresupuestoVentasLineasConstantesFunciones.getDetalleIndiceFK_IdZona(id_zonaFK_IdZona);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PresupuestoVentasLineasConstantesFunciones.getDetalleIndiceFK_IdZona(id_zonaFK_IdZona);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=presupuestoventaslineasLogic.getPresupuestoVentasLineass()==null||presupuestoventaslineasLogic.getPresupuestoVentasLineass().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=presupuestoventaslineass==null|| presupuestoventaslineass.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						presupuestoventaslineassAux=new ArrayList<PresupuestoVentasLineas>();
						presupuestoventaslineassAux.addAll(presupuestoventaslineasLogic.getPresupuestoVentasLineass());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							presupuestoventaslineassAux=new ArrayList<PresupuestoVentasLineas>();
							presupuestoventaslineassAux.addAll(presupuestoventaslineass);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							presupuestoventaslineasLogic.getPresupuestoVentasLineassFK_IdZona(finalQueryGlobal,pagination,id_zonaFK_IdZona);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PresupuestoVentasLineasConstantesFunciones.getDetalleIndiceFK_IdZona(id_zonaFK_IdZona);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PresupuestoVentasLineasConstantesFunciones.getDetalleIndiceFK_IdZona(id_zonaFK_IdZona);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReportePresupuestoVentasLineass("FK_IdZona",presupuestoventaslineasLogic.getPresupuestoVentasLineass());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReportePresupuestoVentasLineass("FK_IdZona",presupuestoventaslineass);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						presupuestoventaslineasLogic.setPresupuestoVentasLineass(new ArrayList<PresupuestoVentasLineas>());
						presupuestoventaslineasLogic.getPresupuestoVentasLineass().addAll(presupuestoventaslineassAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							presupuestoventaslineass=new ArrayList<PresupuestoVentasLineas>();
							presupuestoventaslineass.addAll(presupuestoventaslineassAux);
						}
						//ARCHITECTURE
					}
				}

			} 
		
		
		
		this.redimensionarTablaDatos();
		//this.refrescarForeignKeysDescripcionesPresupuestoVentasLineas();
		
		
		if(this.conTotales) {
			this.crearFilaTotales();
		}		
		} catch (JRException e) {
			throw e;
		} catch(Exception e) {
			throw e;
      	} finally {
      		//this.finishProcessPresupuestoVentasLineas();
      	}
		
	}				
	
	public void redimensionarTablaDatos() throws Exception {
		int iSizeTabla=0;
				
		iSizeTabla=this.getSizeTablaDatos();
		
		//ARCHITECTURE
		/*
		if(Constantes.ISUSAEJBLOGICLAYER) {	
			iSizeTabla=presupuestoventaslineasLogic.getPresupuestoVentasLineass().size();
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			iSizeTabla=presupuestoventaslineass.size();
		}
		*/
		//ARCHITECTURE
											
		this.redimensionarTablaDatos(iSizeTabla);		
	}
	
	public Integer getSizeTablaDatos() throws Exception {
		Integer iSizeTabla=0;
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {	
			iSizeTabla=presupuestoventaslineasLogic.getPresupuestoVentasLineass().size();
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			iSizeTabla=presupuestoventaslineass.size();
		}
		//ARCHITECTURE
											
		return iSizeTabla;		
	}
	
			
	public Boolean permiteMantenimiento(PresupuestoVentasLineas presupuestoventaslineas) {
		Boolean permite=true;
		
		if(this.presupuestoventaslineas.getsType().equals(Constantes2.S_TOTALES)) {
			permite=false;
		}
		
		return permite;
	}
	
	public void traerValoresTablaTotales() throws Exception {
	}
	
	
	public void traerValoresTablaOrderBy() throws Exception {
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.arrOrderBy=PresupuestoVentasLineasConstantesFunciones.getOrderByListaPresupuestoVentasLineas();							
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			this.arrOrderBy=PresupuestoVentasLineasConstantesFunciones.getOrderByListaPresupuestoVentasLineas();
		}		
	}
	
	
	public Boolean existeFilaTotales() throws Exception {
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(PresupuestoVentasLineas presupuestoventaslineas:presupuestoventaslineasLogic.getPresupuestoVentasLineass()) {
				if(presupuestoventaslineas.getsType().equals(Constantes2.S_TOTALES)) {
					presupuestoventaslineasTotales=presupuestoventaslineas;
					existe=true;
					break;
				}
			}
								
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(PresupuestoVentasLineas presupuestoventaslineas:this.presupuestoventaslineass) {
				if(presupuestoventaslineas.getsType().equals(Constantes2.S_TOTALES)) {
					presupuestoventaslineasTotales=presupuestoventaslineas;
					existe=true;
					break;
				}
			}
		}
		
		return existe;
	}
	
	public void crearFilaTotales() throws Exception {
		Boolean existe=false;
		
		existe=this.existeFilaTotales();
		
		if(!existe) {
			//SI NO ES UNO A UNO SE CREA FILA TOTALES
			this.presupuestoventaslineasAux=new PresupuestoVentasLineas();
			this.presupuestoventaslineasAux.setsType(Constantes2.S_TOTALES);
			this.presupuestoventaslineasAux.setIsNew(false);
			this.presupuestoventaslineasAux.setIsChanged(false);
			this.presupuestoventaslineasAux.setIsDeleted(false);
				
			if(Constantes.ISUSAEJBLOGICLAYER) {
				PresupuestoVentasLineasConstantesFunciones.TotalizarValoresFilaPresupuestoVentasLineas(this.presupuestoventaslineasLogic.getPresupuestoVentasLineass(),this.presupuestoventaslineasAux);
				
				this.presupuestoventaslineasLogic.getPresupuestoVentasLineass().add(this.presupuestoventaslineasAux);
				
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
				PresupuestoVentasLineasConstantesFunciones.TotalizarValoresFilaPresupuestoVentasLineas(this.presupuestoventaslineass,this.presupuestoventaslineasAux);
				
				this.presupuestoventaslineass.add(this.presupuestoventaslineasAux);
			}
		}
	}
	
	public void quitarFilaTotales() throws Exception {
		presupuestoventaslineasTotales=new PresupuestoVentasLineas();
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			existe=this.existeFilaTotales();
			
			if(existe) {
				this.presupuestoventaslineasLogic.getPresupuestoVentasLineass().remove(presupuestoventaslineasTotales);
			}			
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			existe=this.existeFilaTotales();
			
			if(existe) {
				this.presupuestoventaslineass.remove(presupuestoventaslineasTotales);
			}
		}
	}
	
	public void actualizarFilaTotales() throws Exception {
		presupuestoventaslineasTotales=new PresupuestoVentasLineas();
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(PresupuestoVentasLineas presupuestoventaslineas:presupuestoventaslineasLogic.getPresupuestoVentasLineass()) {
				if(presupuestoventaslineas.getsType().equals(Constantes2.S_TOTALES)) {
					presupuestoventaslineasTotales=presupuestoventaslineas;
					existe=true;
					break;
				}
			}
			
			if(existe) {
				PresupuestoVentasLineasConstantesFunciones.TotalizarValoresFilaPresupuestoVentasLineas(this.presupuestoventaslineasLogic.getPresupuestoVentasLineass(),presupuestoventaslineasTotales);
			}			
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(PresupuestoVentasLineas presupuestoventaslineas:this.presupuestoventaslineass) {
				if(presupuestoventaslineas.getsType().equals(Constantes2.S_TOTALES)) {
					presupuestoventaslineasTotales=presupuestoventaslineas;
					existe=true;
					break;
				}
			}
			
			if(existe) {
				PresupuestoVentasLineasConstantesFunciones.TotalizarValoresFilaPresupuestoVentasLineas(this.presupuestoventaslineass,presupuestoventaslineasTotales);
			}
		}
	}		
	
	public void recargarInformacion()throws Exception {
		try {
			sAccionBusqueda="Todos";
			this.iNumeroPaginacionPagina=0;
			
			this.procesarBusqueda(sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PresupuestoVentasLineasConstantesFunciones.CLASSNAME);
		}	
	}		
	
	
	public void getPresupuestoVentasLineassFK_IdCiudad()throws Exception {
		try {
			sAccionBusqueda="FK_IdCiudad";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getPresupuestoVentasLineassFK_IdEjercicio()throws Exception {
		try {
			sAccionBusqueda="FK_IdEjercicio";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getPresupuestoVentasLineassFK_IdEmpresa()throws Exception {
		try {
			sAccionBusqueda="FK_IdEmpresa";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getPresupuestoVentasLineassFK_IdLinea()throws Exception {
		try {
			sAccionBusqueda="FK_IdLinea";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getPresupuestoVentasLineassFK_IdLineaCategoria()throws Exception {
		try {
			sAccionBusqueda="FK_IdLineaCategoria";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getPresupuestoVentasLineassFK_IdLineaGrupo()throws Exception {
		try {
			sAccionBusqueda="FK_IdLineaGrupo";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getPresupuestoVentasLineassFK_IdLineaMarca()throws Exception {
		try {
			sAccionBusqueda="FK_IdLineaMarca";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getPresupuestoVentasLineassFK_IdPais()throws Exception {
		try {
			sAccionBusqueda="FK_IdPais";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getPresupuestoVentasLineassFK_IdPeriodo()throws Exception {
		try {
			sAccionBusqueda="FK_IdPeriodo";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getPresupuestoVentasLineassFK_IdSucursal()throws Exception {
		try {
			sAccionBusqueda="FK_IdSucursal";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getPresupuestoVentasLineassFK_IdVendedor()throws Exception {
		try {
			sAccionBusqueda="FK_IdVendedor";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getPresupuestoVentasLineassFK_IdZona()throws Exception {
		try {
			sAccionBusqueda="FK_IdZona";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	
	
	public void getPresupuestoVentasLineassFK_IdCiudad(String sFinalQuery,Long id_ciudad)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					presupuestoventaslineasLogic.getPresupuestoVentasLineassFK_IdCiudad(sFinalQuery,this.pagination,id_ciudad);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getPresupuestoVentasLineassFK_IdEjercicio(String sFinalQuery,Long id_ejercicio)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					presupuestoventaslineasLogic.getPresupuestoVentasLineassFK_IdEjercicio(sFinalQuery,this.pagination,id_ejercicio);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getPresupuestoVentasLineassFK_IdEmpresa(String sFinalQuery,Long id_empresa)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					presupuestoventaslineasLogic.getPresupuestoVentasLineassFK_IdEmpresa(sFinalQuery,this.pagination,id_empresa);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getPresupuestoVentasLineassFK_IdLinea(String sFinalQuery,Long id_linea)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					presupuestoventaslineasLogic.getPresupuestoVentasLineassFK_IdLinea(sFinalQuery,this.pagination,id_linea);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getPresupuestoVentasLineassFK_IdLineaCategoria(String sFinalQuery,Long id_linea_categoria)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					presupuestoventaslineasLogic.getPresupuestoVentasLineassFK_IdLineaCategoria(sFinalQuery,this.pagination,id_linea_categoria);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getPresupuestoVentasLineassFK_IdLineaGrupo(String sFinalQuery,Long id_linea_grupo)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					presupuestoventaslineasLogic.getPresupuestoVentasLineassFK_IdLineaGrupo(sFinalQuery,this.pagination,id_linea_grupo);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getPresupuestoVentasLineassFK_IdLineaMarca(String sFinalQuery,Long id_linea_marca)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					presupuestoventaslineasLogic.getPresupuestoVentasLineassFK_IdLineaMarca(sFinalQuery,this.pagination,id_linea_marca);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getPresupuestoVentasLineassFK_IdPais(String sFinalQuery,Long id_pais)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					presupuestoventaslineasLogic.getPresupuestoVentasLineassFK_IdPais(sFinalQuery,this.pagination,id_pais);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getPresupuestoVentasLineassFK_IdPeriodo(String sFinalQuery,Long id_periodo)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					presupuestoventaslineasLogic.getPresupuestoVentasLineassFK_IdPeriodo(sFinalQuery,this.pagination,id_periodo);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getPresupuestoVentasLineassFK_IdSucursal(String sFinalQuery,Long id_sucursal)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					presupuestoventaslineasLogic.getPresupuestoVentasLineassFK_IdSucursal(sFinalQuery,this.pagination,id_sucursal);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getPresupuestoVentasLineassFK_IdVendedor(String sFinalQuery,Long id_vendedor)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					presupuestoventaslineasLogic.getPresupuestoVentasLineassFK_IdVendedor(sFinalQuery,this.pagination,id_vendedor);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getPresupuestoVentasLineassFK_IdZona(String sFinalQuery,Long id_zona)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					presupuestoventaslineasLogic.getPresupuestoVentasLineassFK_IdZona(sFinalQuery,this.pagination,id_zona);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	
	public void onLoad()throws Exception {		
		try {		
			isEntroOnLoad=true;
			//INTENTA TRAER DATOS DE BUSQUEDA ANTERIOR
			this.traerDatosBusquedaDesdeSession();
					
			//SINO SE CUMPLE VIENE DE PADRE FOREIGN O BUSQUEDA ANTIGUA
			if(this.sAccionBusqueda.equals("")) {
				this.sAccionBusqueda="Todos";
			}
								
			this.procesarBusqueda(sAccionBusqueda);
			
		} catch (Exception e) {
			throw e;
		}
	}		
	
	public void inicializarPermisosPresupuestoVentasLineas() {
		this.isPermisoTodoPresupuestoVentasLineas=false;
		this.isPermisoNuevoPresupuestoVentasLineas=false;
		this.isPermisoActualizarPresupuestoVentasLineas=false;
		this.isPermisoActualizarOriginalPresupuestoVentasLineas=false;
		this.isPermisoEliminarPresupuestoVentasLineas=false;
		this.isPermisoGuardarCambiosPresupuestoVentasLineas=false;
		this.isPermisoConsultaPresupuestoVentasLineas=false;
		this.isPermisoBusquedaPresupuestoVentasLineas=false;
		this.isPermisoReportePresupuestoVentasLineas=false;		
		this.isPermisoOrdenPresupuestoVentasLineas=false;		
		this.isPermisoPaginacionMedioPresupuestoVentasLineas=false;		
		this.isPermisoPaginacionAltoPresupuestoVentasLineas=false;
		this.isPermisoPaginacionTodoPresupuestoVentasLineas=false;
		this.isPermisoCopiarPresupuestoVentasLineas=false;		
		this.isPermisoVerFormPresupuestoVentasLineas=false;		
		this.isPermisoDuplicarPresupuestoVentasLineas=false;		
		this.isPermisoOrdenPresupuestoVentasLineas=false;		
	}
	
	public void setPermisosUsuarioPresupuestoVentasLineas(Boolean isPermiso) {
		this.isPermisoTodoPresupuestoVentasLineas=isPermiso;
		this.isPermisoNuevoPresupuestoVentasLineas=isPermiso;
		this.isPermisoActualizarPresupuestoVentasLineas=isPermiso;
		this.isPermisoActualizarOriginalPresupuestoVentasLineas=isPermiso;
		this.isPermisoEliminarPresupuestoVentasLineas=isPermiso;
		this.isPermisoGuardarCambiosPresupuestoVentasLineas=isPermiso;
		this.isPermisoConsultaPresupuestoVentasLineas=isPermiso;
		this.isPermisoBusquedaPresupuestoVentasLineas=isPermiso;
		this.isPermisoReportePresupuestoVentasLineas=isPermiso;
		this.isPermisoOrdenPresupuestoVentasLineas=isPermiso;		
		this.isPermisoPaginacionMedioPresupuestoVentasLineas=isPermiso;		
		this.isPermisoPaginacionAltoPresupuestoVentasLineas=isPermiso;		
		this.isPermisoPaginacionTodoPresupuestoVentasLineas=isPermiso;		
		this.isPermisoCopiarPresupuestoVentasLineas=isPermiso;		
		this.isPermisoVerFormPresupuestoVentasLineas=isPermiso;		
		this.isPermisoDuplicarPresupuestoVentasLineas=isPermiso;
		this.isPermisoOrdenPresupuestoVentasLineas=isPermiso;
	}
	
	public void setPermisosMantenimientoUsuarioPresupuestoVentasLineas(Boolean isPermiso) {
		//this.isPermisoTodoPresupuestoVentasLineas=isPermiso;
		this.isPermisoNuevoPresupuestoVentasLineas=isPermiso;
		this.isPermisoActualizarPresupuestoVentasLineas=isPermiso;
		this.isPermisoActualizarOriginalPresupuestoVentasLineas=isPermiso;
		this.isPermisoEliminarPresupuestoVentasLineas=isPermiso;
		this.isPermisoGuardarCambiosPresupuestoVentasLineas=isPermiso;
		//this.isPermisoConsultaPresupuestoVentasLineas=isPermiso;
		//this.isPermisoBusquedaPresupuestoVentasLineas=isPermiso;
		//this.isPermisoReportePresupuestoVentasLineas=isPermiso;
		//this.isPermisoOrdenPresupuestoVentasLineas=isPermiso;		
		//this.isPermisoPaginacionMedioPresupuestoVentasLineas=isPermiso;		
		//this.isPermisoPaginacionAltoPresupuestoVentasLineas=isPermiso;		
		//this.isPermisoPaginacionTodoPresupuestoVentasLineas=isPermiso;		
		//this.isPermisoCopiarPresupuestoVentasLineas=isPermiso;		
		//this.isPermisoDuplicarPresupuestoVentasLineas=isPermiso;
		//this.isPermisoOrdenPresupuestoVentasLineas=isPermiso;
	}
	
	public void inicializarSetPermisosUsuarioPresupuestoVentasLineasClasesRelacionadas() throws Exception {
		ArrayList<String> arrPaginas=new ArrayList<String>();		
		ArrayList<Opcion> opcionsFinal=new ArrayList<Opcion>();	
		
		
		if(PresupuestoVentasLineasJInternalFrame.CON_LLAMADA_SIMPLE) {
			this.opcionsRelacionadas.addAll(this.sistemaReturnGeneral.getOpcionsRelacionadas());
			
		} else {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				opcionsFinal=sistemaLogicAdditional.tienePermisosOpcionesEnPaginaWeb(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, arrPaginas);
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}
			
			this.opcionsRelacionadas.addAll(opcionsFinal);
		}
		
		
		
	}
	
	public Boolean tienePermisosUsuarioEnPaginaWebPresupuestoVentasLineas(String sPagina) throws Exception {
		Boolean tienePermisos=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			tienePermisos=sistemaLogicAdditional.tienePermisosEnPaginaWeb(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, sPagina);
		} else if(Constantes.ISUSAEJBREMOTE) {
		} else if(Constantes.ISUSAEJBHOME) {
		}
		
		return tienePermisos;
	}
	
	public void inicializarSetPermisosUsuarioPresupuestoVentasLineasClasesRelacionadas(Boolean conPermiso) throws Exception {
		
	}
	
	public Boolean verificarGetPermisosUsuarioPresupuestoVentasLineasClaseRelacionada(ArrayList<String> arrPaginasFinal,String sPaginaActual) throws Exception {
		Boolean verificado=false;
		
		verificado=Funciones2.verificarGetPermisosUsuarioClaseRelacionada(arrPaginasFinal,sPaginaActual);				
		
		return verificado;
	}
	
	public Boolean verificarGetPermisosUsuarioOpcionPresupuestoVentasLineasClaseRelacionada(List<Opcion> opcionsFinal,String sPaginaActual) throws Exception {
		Boolean verificado=false;
		
		verificado=Funciones2.verificarGetPermisosUsuarioOpcionClaseRelacionada(opcionsFinal,sPaginaActual);				
		
		return verificado;
	}
	
	public void actualizarTabsSetPermisosUsuarioPresupuestoVentasLineasClasesRelacionadas() throws Exception {
		
	}
	
	public void setPermisosUsuarioPresupuestoVentasLineas() throws Exception {
		
		PerfilOpcion perfilOpcionUsuario=new PerfilOpcion();		
		Long idOpcion=this.opcionActual.getId();
		
		if(PresupuestoVentasLineasJInternalFrame.CON_LLAMADA_SIMPLE) {
			perfilOpcionUsuario=this.sistemaReturnGeneral.getPerfilOpcion();
			
		} else {
			if(this.presupuestoventaslineasSessionBean.getEsGuardarRelacionado()) {
				idOpcion=0L;
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				perfilOpcionUsuario=sistemaLogicAdditional.traerPermisosPaginaWebPerfilOpcion(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, PresupuestoVentasLineasConstantesFunciones.SNOMBREOPCION,idOpcion);				
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}
		}
		
		if(perfilOpcionUsuario!=null && perfilOpcionUsuario.getId()>0) {
			this.isPermisoNuevoPresupuestoVentasLineas=perfilOpcionUsuario.getingreso()||perfilOpcionUsuario.gettodo();
			this.isPermisoActualizarPresupuestoVentasLineas=perfilOpcionUsuario.getmodificacion()||perfilOpcionUsuario.gettodo();
			this.isPermisoActualizarOriginalPresupuestoVentasLineas=this.isPermisoActualizarPresupuestoVentasLineas;
			this.isPermisoEliminarPresupuestoVentasLineas=perfilOpcionUsuario.geteliminacion()||perfilOpcionUsuario.gettodo();
			this.isPermisoGuardarCambiosPresupuestoVentasLineas=perfilOpcionUsuario.getguardar_cambios()||perfilOpcionUsuario.gettodo();
			this.isPermisoConsultaPresupuestoVentasLineas=perfilOpcionUsuario.getconsulta()||perfilOpcionUsuario.gettodo();
			this.isPermisoBusquedaPresupuestoVentasLineas=perfilOpcionUsuario.getbusqueda()||perfilOpcionUsuario.gettodo();
			this.isPermisoTodoPresupuestoVentasLineas=perfilOpcionUsuario.gettodo()||perfilOpcionUsuario.gettodo();
			this.isPermisoReportePresupuestoVentasLineas=perfilOpcionUsuario.getreporte()||perfilOpcionUsuario.gettodo();
			this.isPermisoOrdenPresupuestoVentasLineas=perfilOpcionUsuario.getorden()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionMedioPresupuestoVentasLineas=perfilOpcionUsuario.getpaginacion_medio()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionAltoPresupuestoVentasLineas=perfilOpcionUsuario.getpaginacion_alto()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionTodoPresupuestoVentasLineas=perfilOpcionUsuario.getpaginacion_todo()||perfilOpcionUsuario.gettodo();
			this.isPermisoCopiarPresupuestoVentasLineas=perfilOpcionUsuario.getcopiar()||perfilOpcionUsuario.gettodo();
			this.isPermisoVerFormPresupuestoVentasLineas=true;//perfilOpcionUsuario.getver_form()||perfilOpcionUsuario.gettodo();
			this.isPermisoDuplicarPresupuestoVentasLineas=perfilOpcionUsuario.getduplicar()||perfilOpcionUsuario.gettodo();
			this.isPermisoOrdenPresupuestoVentasLineas=perfilOpcionUsuario.getorden()||perfilOpcionUsuario.gettodo();
			
			if(this.presupuestoventaslineasSessionBean.getEsGuardarRelacionado()) {
				this.opcionActual.setId(perfilOpcionUsuario.getid_opcion());
				
				this.jTableDatosPresupuestoVentasLineas.setToolTipText(this.jTableDatosPresupuestoVentasLineas.getToolTipText()+"_"+perfilOpcionUsuario.getid_opcion());		
			}
		} else {
			this.setPermisosUsuarioPresupuestoVentasLineas(false);
		}
		
		//SI SE NECESITA PONER TODOS LOS PERMISOS POR DEFECTO
		//
		
	}
	
	public void setAccionesUsuarioPresupuestoVentasLineas(Boolean esParaAccionesFormulario) throws Exception {		
		Reporte reporte=null;
		
		if(!esParaAccionesFormulario) {
			this.accions=new ArrayList<Accion>();
			
			if(PresupuestoVentasLineasJInternalFrame.CON_LLAMADA_SIMPLE) {
				this.accions=this.sistemaReturnGeneral.getAccions();
				
				
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.accions=sistemaLogicAdditional.getAccionesUsuario(this.usuarioActual,this.opcionActual,false);				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}
			
			if(this.accions.size()>0) {			
				for(Accion accion:this.accions) {
					reporte=new Reporte();
					reporte.setsCodigo(accion.getcodigo());
					reporte.setsDescripcion(accion.getnombre());
		
		
					this.tiposAcciones.add(reporte);
				}
			}	
			
			

			reporte=new Reporte();
			reporte.setsCodigo("");
			reporte.setsDescripcion("");

			this.tiposAcciones.add(reporte);
			
		} else {
			//ACCIONES FORMULARIO
			this.accionsFormulario=new ArrayList<Accion>();
			
			if(PresupuestoVentasLineasJInternalFrame.CON_LLAMADA_SIMPLE) {
				this.accionsFormulario=this.sistemaReturnGeneral.getAccionsFormulario();
			
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.accionsFormulario=sistemaLogicAdditional.getAccionesUsuario(this.usuarioActual,this.opcionActual,true);				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}
			
			if(this.accionsFormulario.size()>0) {			
				for(Accion accion:this.accionsFormulario) {
					reporte=new Reporte();
					reporte.setsCodigo(accion.getcodigo());
					reporte.setsDescripcion(accion.getnombre());
					
					this.tiposAccionesFormulario.add(reporte);
				}
			}	
			
			

			reporte=new Reporte();
			reporte.setsCodigo("");
			reporte.setsDescripcion("");

			this.tiposAccionesFormulario.add(reporte);
		}				
	}	 	
	
	public void setRelacionesUsuarioPresupuestoVentasLineas() throws Exception {
		Reporte reporte=null;
		
		
		
		
		//ORDENAR ALFABETICAMENTE
		Collections.sort(this.tiposRelaciones, new ReporteComparator());
		/*
		reporte=new Reporte();
		reporte.setsCodigo(accion.getcodigo());
		reporte.setsDescripcion(accion.getnombre());
			
		this.tiposRelaciones.add(reporte);
		*/
	}	
	
		
	@SuppressWarnings({ "unchecked", "rawtypes" } )
	public void inicializarCombosForeignKeyPresupuestoVentasLineasListas()throws Exception {
		try	{						
			
				this.empresasForeignKey=new ArrayList();
				this.sucursalsForeignKey=new ArrayList();
				this.ejerciciosForeignKey=new ArrayList();
				this.periodosForeignKey=new ArrayList();
				this.vendedorsForeignKey=new ArrayList();
				this.paissForeignKey=new ArrayList();
				this.ciudadsForeignKey=new ArrayList();
				this.zonasForeignKey=new ArrayList();
				this.lineasForeignKey=new ArrayList();
				this.lineagruposForeignKey=new ArrayList();
				this.lineacategoriasForeignKey=new ArrayList();
				this.lineamarcasForeignKey=new ArrayList();
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void cargarCombosTodosForeignKeyPresupuestoVentasLineasListas(Boolean cargarCombosDependencia)throws Exception {
		try	{
			
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			String sFinalQueryCombo="";
			
			Modulo  moduloActualAux=new Modulo();
			
			if(PresupuestoVentasLineasJInternalFrame.ISLOAD_FKLOTE) {
				this.cargarCombosLoteForeignKeyPresupuestoVentasLineasListas(false);
			} else {
			
				this.cargarCombosForeignKeyEmpresaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeySucursalListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyEjercicioListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyPeriodoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyVendedorListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyPaisListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyCiudadListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyZonaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyLineaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyLineaGrupoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyLineaCategoriaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyLineaMarcaListas(cargarCombosDependencia,sFinalQueryCombo);
			}
		} catch(Exception e) {
			throw e;
		}		
	}		
	
	

	public void cargarCombosForeignKeyEmpresaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.empresasForeignKey==null||this.empresasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=EmpresaConstantesFunciones.getArrayColumnasGlobalesEmpresa(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EmpresaConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=EmpresaConstantesFunciones.SFINALQUERY;

				this.cargarCombosEmpresasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeySucursalListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.sucursalsForeignKey==null||this.sucursalsForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=SucursalConstantesFunciones.getArrayColumnasGlobalesSucursal(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,SucursalConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=SucursalConstantesFunciones.SFINALQUERY;

				this.cargarCombosSucursalsForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyEjercicioListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.ejerciciosForeignKey==null||this.ejerciciosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=EjercicioConstantesFunciones.getArrayColumnasGlobalesEjercicio(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EjercicioConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=EjercicioConstantesFunciones.SFINALQUERY;

				this.cargarCombosEjerciciosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyPeriodoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.periodosForeignKey==null||this.periodosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=PeriodoConstantesFunciones.getArrayColumnasGlobalesPeriodo(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,PeriodoConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=PeriodoConstantesFunciones.SFINALQUERY;

				this.cargarCombosPeriodosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyVendedorListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.vendedorsForeignKey==null||this.vendedorsForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=VendedorConstantesFunciones.getArrayColumnasGlobalesVendedor(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,VendedorConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=VendedorConstantesFunciones.SFINALQUERY;

				this.cargarCombosVendedorsForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyPaisListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.paissForeignKey==null||this.paissForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=PaisConstantesFunciones.getArrayColumnasGlobalesPais(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,PaisConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=PaisConstantesFunciones.SFINALQUERY;

				this.cargarCombosPaissForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCiudadListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.ciudadsForeignKey==null||this.ciudadsForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=CiudadConstantesFunciones.getArrayColumnasGlobalesCiudad(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CiudadConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=CiudadConstantesFunciones.SFINALQUERY;

				this.cargarCombosCiudadsForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyZonaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.zonasForeignKey==null||this.zonasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=ZonaConstantesFunciones.getArrayColumnasGlobalesZona(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,ZonaConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=ZonaConstantesFunciones.SFINALQUERY;

				this.cargarCombosZonasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyLineaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.lineasForeignKey==null||this.lineasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=LineaConstantesFunciones.getArrayColumnasGlobalesLinea(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,LineaConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=LineaConstantesFunciones.SFINALQUERY;

				this.cargarCombosLineasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyLineaGrupoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.lineagruposForeignKey==null||this.lineagruposForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=LineaConstantesFunciones.getArrayColumnasGlobalesLinea(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,LineaConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=LineaConstantesFunciones.SFINALQUERY;

				this.cargarCombosLineaGruposForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyLineaCategoriaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.lineacategoriasForeignKey==null||this.lineacategoriasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=LineaConstantesFunciones.getArrayColumnasGlobalesLinea(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,LineaConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=LineaConstantesFunciones.SFINALQUERY;

				this.cargarCombosLineaCategoriasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyLineaMarcaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.lineamarcasForeignKey==null||this.lineamarcasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=LineaConstantesFunciones.getArrayColumnasGlobalesLinea(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,LineaConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=LineaConstantesFunciones.SFINALQUERY;

				this.cargarCombosLineaMarcasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}
	
	public void cargarCombosLoteForeignKeyPresupuestoVentasLineasListas(Boolean cargarCombosDependencia)throws Exception {
		try	{
			
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			
			Modulo  moduloActualAux=new Modulo();
			
			
			PresupuestoVentasLineasParameterReturnGeneral presupuestoventaslineasReturnGeneral=new PresupuestoVentasLineasParameterReturnGeneral();
						
			


				String finalQueryGlobalEmpresa="";

				if(((this.empresasForeignKey==null||this.empresasForeignKey.size()<=0) && this.presupuestoventaslineasConstantesFunciones.cargarid_empresaPresupuestoVentasLineas)
					 || (this.esRecargarFks && this.presupuestoventaslineasConstantesFunciones.cargarid_empresaPresupuestoVentasLineas)) {

					if(!this.presupuestoventaslineasSessionBean.getisBusquedaDesdeForeignKeySesionEmpresa()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=EmpresaConstantesFunciones.getArrayColumnasGlobalesEmpresa(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalEmpresa=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EmpresaConstantesFunciones.TABLENAME);

						finalQueryGlobalEmpresa=Funciones.GetFinalQueryAppend(finalQueryGlobalEmpresa, "");
						finalQueryGlobalEmpresa+=EmpresaConstantesFunciones.SFINALQUERY;

						//this.cargarCombosEmpresasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalEmpresa=" WHERE " + ConstantesSql.ID + "="+presupuestoventaslineasSessionBean.getlidEmpresaActual();
					}
				} else {
					finalQueryGlobalEmpresa="NONE";
				}


				String finalQueryGlobalSucursal="";

				if(((this.sucursalsForeignKey==null||this.sucursalsForeignKey.size()<=0) && this.presupuestoventaslineasConstantesFunciones.cargarid_sucursalPresupuestoVentasLineas)
					 || (this.esRecargarFks && this.presupuestoventaslineasConstantesFunciones.cargarid_sucursalPresupuestoVentasLineas)) {

					if(!this.presupuestoventaslineasSessionBean.getisBusquedaDesdeForeignKeySesionSucursal()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=SucursalConstantesFunciones.getArrayColumnasGlobalesSucursal(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalSucursal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,SucursalConstantesFunciones.TABLENAME);

						finalQueryGlobalSucursal=Funciones.GetFinalQueryAppend(finalQueryGlobalSucursal, "");
						finalQueryGlobalSucursal+=SucursalConstantesFunciones.SFINALQUERY;

						//this.cargarCombosSucursalsForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalSucursal=" WHERE " + ConstantesSql.ID + "="+presupuestoventaslineasSessionBean.getlidSucursalActual();
					}
				} else {
					finalQueryGlobalSucursal="NONE";
				}


				String finalQueryGlobalEjercicio="";

				if(((this.ejerciciosForeignKey==null||this.ejerciciosForeignKey.size()<=0) && this.presupuestoventaslineasConstantesFunciones.cargarid_ejercicioPresupuestoVentasLineas)
					 || (this.esRecargarFks && this.presupuestoventaslineasConstantesFunciones.cargarid_ejercicioPresupuestoVentasLineas)) {

					if(!this.presupuestoventaslineasSessionBean.getisBusquedaDesdeForeignKeySesionEjercicio()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=EjercicioConstantesFunciones.getArrayColumnasGlobalesEjercicio(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalEjercicio=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EjercicioConstantesFunciones.TABLENAME);

						finalQueryGlobalEjercicio=Funciones.GetFinalQueryAppend(finalQueryGlobalEjercicio, "");
						finalQueryGlobalEjercicio+=EjercicioConstantesFunciones.SFINALQUERY;

						//this.cargarCombosEjerciciosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalEjercicio=" WHERE " + ConstantesSql.ID + "="+presupuestoventaslineasSessionBean.getlidEjercicioActual();
					}
				} else {
					finalQueryGlobalEjercicio="NONE";
				}


				String finalQueryGlobalPeriodo="";

				if(((this.periodosForeignKey==null||this.periodosForeignKey.size()<=0) && this.presupuestoventaslineasConstantesFunciones.cargarid_periodoPresupuestoVentasLineas)
					 || (this.esRecargarFks && this.presupuestoventaslineasConstantesFunciones.cargarid_periodoPresupuestoVentasLineas)) {

					if(!this.presupuestoventaslineasSessionBean.getisBusquedaDesdeForeignKeySesionPeriodo()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=PeriodoConstantesFunciones.getArrayColumnasGlobalesPeriodo(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalPeriodo=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,PeriodoConstantesFunciones.TABLENAME);

						finalQueryGlobalPeriodo=Funciones.GetFinalQueryAppend(finalQueryGlobalPeriodo, "");
						finalQueryGlobalPeriodo+=PeriodoConstantesFunciones.SFINALQUERY;

						//this.cargarCombosPeriodosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalPeriodo=" WHERE " + ConstantesSql.ID + "="+presupuestoventaslineasSessionBean.getlidPeriodoActual();
					}
				} else {
					finalQueryGlobalPeriodo="NONE";
				}


				String finalQueryGlobalVendedor="";

				if(((this.vendedorsForeignKey==null||this.vendedorsForeignKey.size()<=0) && this.presupuestoventaslineasConstantesFunciones.cargarid_vendedorPresupuestoVentasLineas)
					 || (this.esRecargarFks && this.presupuestoventaslineasConstantesFunciones.cargarid_vendedorPresupuestoVentasLineas)) {

					if(!this.presupuestoventaslineasSessionBean.getisBusquedaDesdeForeignKeySesionVendedor()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=VendedorConstantesFunciones.getArrayColumnasGlobalesVendedor(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalVendedor=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,VendedorConstantesFunciones.TABLENAME);

						finalQueryGlobalVendedor=Funciones.GetFinalQueryAppend(finalQueryGlobalVendedor, "");
						finalQueryGlobalVendedor+=VendedorConstantesFunciones.SFINALQUERY;

						//this.cargarCombosVendedorsForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalVendedor=" WHERE " + ConstantesSql.ID + "="+presupuestoventaslineasSessionBean.getlidVendedorActual();
					}
				} else {
					finalQueryGlobalVendedor="NONE";
				}


				String finalQueryGlobalPais="";

				if(((this.paissForeignKey==null||this.paissForeignKey.size()<=0) && this.presupuestoventaslineasConstantesFunciones.cargarid_paisPresupuestoVentasLineas)
					 || (this.esRecargarFks && this.presupuestoventaslineasConstantesFunciones.cargarid_paisPresupuestoVentasLineas)) {

					if(!this.presupuestoventaslineasSessionBean.getisBusquedaDesdeForeignKeySesionPais()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=PaisConstantesFunciones.getArrayColumnasGlobalesPais(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalPais=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,PaisConstantesFunciones.TABLENAME);

						finalQueryGlobalPais=Funciones.GetFinalQueryAppend(finalQueryGlobalPais, "");
						finalQueryGlobalPais+=PaisConstantesFunciones.SFINALQUERY;

						//this.cargarCombosPaissForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalPais=" WHERE " + ConstantesSql.ID + "="+presupuestoventaslineasSessionBean.getlidPaisActual();
					}
				} else {
					finalQueryGlobalPais="NONE";
				}


				String finalQueryGlobalCiudad="";

				if(((this.ciudadsForeignKey==null||this.ciudadsForeignKey.size()<=0) && this.presupuestoventaslineasConstantesFunciones.cargarid_ciudadPresupuestoVentasLineas)
					 || (this.esRecargarFks && this.presupuestoventaslineasConstantesFunciones.cargarid_ciudadPresupuestoVentasLineas)) {

					if(!this.presupuestoventaslineasSessionBean.getisBusquedaDesdeForeignKeySesionCiudad()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=CiudadConstantesFunciones.getArrayColumnasGlobalesCiudad(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalCiudad=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CiudadConstantesFunciones.TABLENAME);

						finalQueryGlobalCiudad=Funciones.GetFinalQueryAppend(finalQueryGlobalCiudad, "");
						finalQueryGlobalCiudad+=CiudadConstantesFunciones.SFINALQUERY;

						//this.cargarCombosCiudadsForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalCiudad=" WHERE " + ConstantesSql.ID + "="+presupuestoventaslineasSessionBean.getlidCiudadActual();
					}
				} else {
					finalQueryGlobalCiudad="NONE";
				}


				String finalQueryGlobalZona="";

				if(((this.zonasForeignKey==null||this.zonasForeignKey.size()<=0) && this.presupuestoventaslineasConstantesFunciones.cargarid_zonaPresupuestoVentasLineas)
					 || (this.esRecargarFks && this.presupuestoventaslineasConstantesFunciones.cargarid_zonaPresupuestoVentasLineas)) {

					if(!this.presupuestoventaslineasSessionBean.getisBusquedaDesdeForeignKeySesionZona()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=ZonaConstantesFunciones.getArrayColumnasGlobalesZona(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalZona=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,ZonaConstantesFunciones.TABLENAME);

						finalQueryGlobalZona=Funciones.GetFinalQueryAppend(finalQueryGlobalZona, "");
						finalQueryGlobalZona+=ZonaConstantesFunciones.SFINALQUERY;

						//this.cargarCombosZonasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalZona=" WHERE " + ConstantesSql.ID + "="+presupuestoventaslineasSessionBean.getlidZonaActual();
					}
				} else {
					finalQueryGlobalZona="NONE";
				}


				String finalQueryGlobalLinea="";

				if(((this.lineasForeignKey==null||this.lineasForeignKey.size()<=0) && this.presupuestoventaslineasConstantesFunciones.cargarid_lineaPresupuestoVentasLineas)
					 || (this.esRecargarFks && this.presupuestoventaslineasConstantesFunciones.cargarid_lineaPresupuestoVentasLineas)) {

					if(!this.presupuestoventaslineasSessionBean.getisBusquedaDesdeForeignKeySesionLinea()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=LineaConstantesFunciones.getArrayColumnasGlobalesLinea(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalLinea=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,LineaConstantesFunciones.TABLENAME);

						finalQueryGlobalLinea=Funciones.GetFinalQueryAppend(finalQueryGlobalLinea, "");
						finalQueryGlobalLinea+=LineaConstantesFunciones.SFINALQUERY;

						//this.cargarCombosLineasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalLinea=" WHERE " + ConstantesSql.ID + "="+presupuestoventaslineasSessionBean.getlidLineaActual();
					}
				} else {
					finalQueryGlobalLinea="NONE";
				}


				String finalQueryGlobalLineaGrupo="";

				if(((this.lineagruposForeignKey==null||this.lineagruposForeignKey.size()<=0) && this.presupuestoventaslineasConstantesFunciones.cargarid_linea_grupoPresupuestoVentasLineas)
					 || (this.esRecargarFks && this.presupuestoventaslineasConstantesFunciones.cargarid_linea_grupoPresupuestoVentasLineas)) {

					if(!this.presupuestoventaslineasSessionBean.getisBusquedaDesdeForeignKeySesionLineaGrupo()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=LineaConstantesFunciones.getArrayColumnasGlobalesLinea(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalLineaGrupo=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,LineaConstantesFunciones.TABLENAME);

						finalQueryGlobalLineaGrupo=Funciones.GetFinalQueryAppend(finalQueryGlobalLineaGrupo, "");
						finalQueryGlobalLineaGrupo+=LineaConstantesFunciones.SFINALQUERY;

						//this.cargarCombosLineaGruposForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalLineaGrupo=" WHERE " + ConstantesSql.ID + "="+presupuestoventaslineasSessionBean.getlidLineaGrupoActual();
					}
				} else {
					finalQueryGlobalLineaGrupo="NONE";
				}


				String finalQueryGlobalLineaCategoria="";

				if(((this.lineacategoriasForeignKey==null||this.lineacategoriasForeignKey.size()<=0) && this.presupuestoventaslineasConstantesFunciones.cargarid_linea_categoriaPresupuestoVentasLineas)
					 || (this.esRecargarFks && this.presupuestoventaslineasConstantesFunciones.cargarid_linea_categoriaPresupuestoVentasLineas)) {

					if(!this.presupuestoventaslineasSessionBean.getisBusquedaDesdeForeignKeySesionLineaCategoria()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=LineaConstantesFunciones.getArrayColumnasGlobalesLinea(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalLineaCategoria=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,LineaConstantesFunciones.TABLENAME);

						finalQueryGlobalLineaCategoria=Funciones.GetFinalQueryAppend(finalQueryGlobalLineaCategoria, "");
						finalQueryGlobalLineaCategoria+=LineaConstantesFunciones.SFINALQUERY;

						//this.cargarCombosLineaCategoriasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalLineaCategoria=" WHERE " + ConstantesSql.ID + "="+presupuestoventaslineasSessionBean.getlidLineaCategoriaActual();
					}
				} else {
					finalQueryGlobalLineaCategoria="NONE";
				}


				String finalQueryGlobalLineaMarca="";

				if(((this.lineamarcasForeignKey==null||this.lineamarcasForeignKey.size()<=0) && this.presupuestoventaslineasConstantesFunciones.cargarid_linea_marcaPresupuestoVentasLineas)
					 || (this.esRecargarFks && this.presupuestoventaslineasConstantesFunciones.cargarid_linea_marcaPresupuestoVentasLineas)) {

					if(!this.presupuestoventaslineasSessionBean.getisBusquedaDesdeForeignKeySesionLineaMarca()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=LineaConstantesFunciones.getArrayColumnasGlobalesLinea(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalLineaMarca=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,LineaConstantesFunciones.TABLENAME);

						finalQueryGlobalLineaMarca=Funciones.GetFinalQueryAppend(finalQueryGlobalLineaMarca, "");
						finalQueryGlobalLineaMarca+=LineaConstantesFunciones.SFINALQUERY;

						//this.cargarCombosLineaMarcasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalLineaMarca=" WHERE " + ConstantesSql.ID + "="+presupuestoventaslineasSessionBean.getlidLineaMarcaActual();
					}
				} else {
					finalQueryGlobalLineaMarca="NONE";
				}
			
			//ARCHITECTURE			
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				presupuestoventaslineasReturnGeneral=presupuestoventaslineasLogic.cargarCombosLoteForeignKeyPresupuestoVentasLineas(finalQueryGlobalEmpresa,finalQueryGlobalSucursal,finalQueryGlobalEjercicio,finalQueryGlobalPeriodo,finalQueryGlobalVendedor,finalQueryGlobalPais,finalQueryGlobalCiudad,finalQueryGlobalZona,finalQueryGlobalLinea,finalQueryGlobalLineaGrupo,finalQueryGlobalLineaCategoria,finalQueryGlobalLineaMarca);//WithConnection
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}			
			//ARCHITECTURE
			
			

			if(!finalQueryGlobalEmpresa.equals("NONE")) {
				this.empresasForeignKey=presupuestoventaslineasReturnGeneral.getempresasForeignKey();
			}

			if(!finalQueryGlobalSucursal.equals("NONE")) {
				this.sucursalsForeignKey=presupuestoventaslineasReturnGeneral.getsucursalsForeignKey();
			}

			if(!finalQueryGlobalEjercicio.equals("NONE")) {
				this.ejerciciosForeignKey=presupuestoventaslineasReturnGeneral.getejerciciosForeignKey();
			}

			if(!finalQueryGlobalPeriodo.equals("NONE")) {
				this.periodosForeignKey=presupuestoventaslineasReturnGeneral.getperiodosForeignKey();
			}

			if(!finalQueryGlobalVendedor.equals("NONE")) {
				this.vendedorsForeignKey=presupuestoventaslineasReturnGeneral.getvendedorsForeignKey();
			}

			if(!finalQueryGlobalPais.equals("NONE")) {
				this.paissForeignKey=presupuestoventaslineasReturnGeneral.getpaissForeignKey();
			}

			if(!finalQueryGlobalCiudad.equals("NONE")) {
				this.ciudadsForeignKey=presupuestoventaslineasReturnGeneral.getciudadsForeignKey();
			}

			if(!finalQueryGlobalZona.equals("NONE")) {
				this.zonasForeignKey=presupuestoventaslineasReturnGeneral.getzonasForeignKey();
			}

			if(!finalQueryGlobalLinea.equals("NONE")) {
				this.lineasForeignKey=presupuestoventaslineasReturnGeneral.getlineasForeignKey();
			}

			if(!finalQueryGlobalLineaGrupo.equals("NONE")) {
				this.lineagruposForeignKey=presupuestoventaslineasReturnGeneral.getlineagruposForeignKey();
			}

			if(!finalQueryGlobalLineaCategoria.equals("NONE")) {
				this.lineacategoriasForeignKey=presupuestoventaslineasReturnGeneral.getlineacategoriasForeignKey();
			}

			if(!finalQueryGlobalLineaMarca.equals("NONE")) {
				this.lineamarcasForeignKey=presupuestoventaslineasReturnGeneral.getlineamarcasForeignKey();
			}
			
			
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void addItemDefectoCombosTodosForeignKeyPresupuestoVentasLineas()throws Exception {
		try {
			
			this.addItemDefectoCombosForeignKeyEmpresa();
			this.addItemDefectoCombosForeignKeySucursal();
			this.addItemDefectoCombosForeignKeyEjercicio();
			this.addItemDefectoCombosForeignKeyPeriodo();
			this.addItemDefectoCombosForeignKeyVendedor();
			this.addItemDefectoCombosForeignKeyPais();
			this.addItemDefectoCombosForeignKeyCiudad();
			this.addItemDefectoCombosForeignKeyZona();
			this.addItemDefectoCombosForeignKeyLinea();
			this.addItemDefectoCombosForeignKeyLineaGrupo();
			this.addItemDefectoCombosForeignKeyLineaCategoria();
			this.addItemDefectoCombosForeignKeyLineaMarca();
		} catch(Exception e) {
			throw e;
		}		
	}
	
	



	public void addItemDefectoCombosForeignKeyEmpresa()throws Exception {
		try {
			if(this.presupuestoventaslineasSessionBean==null) {
				this.presupuestoventaslineasSessionBean=new PresupuestoVentasLineasSessionBean();
			}

			if(!this.presupuestoventaslineasSessionBean.getisBusquedaDesdeForeignKeySesionEmpresa()) {
				Empresa empresa=new Empresa();
				EmpresaConstantesFunciones.setEmpresaDescripcion(empresa,Constantes.SMENSAJE_ESCOJA_OPCION);
				empresa.setId(null);

				if(!EmpresaConstantesFunciones.ExisteEnLista(this.empresasForeignKey,empresa,true)) {

					this.empresasForeignKey.add(0,empresa);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeySucursal()throws Exception {
		try {

			if(!this.presupuestoventaslineasSessionBean.getisBusquedaDesdeForeignKeySesionSucursal()) {
				Sucursal sucursal=new Sucursal();
				SucursalConstantesFunciones.setSucursalDescripcion(sucursal,Constantes.SMENSAJE_ESCOJA_OPCION);
				sucursal.setId(null);

				if(!SucursalConstantesFunciones.ExisteEnLista(this.sucursalsForeignKey,sucursal,true)) {

					this.sucursalsForeignKey.add(0,sucursal);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyEjercicio()throws Exception {
		try {

			if(!this.presupuestoventaslineasSessionBean.getisBusquedaDesdeForeignKeySesionEjercicio()) {
				Ejercicio ejercicio=new Ejercicio();
				EjercicioConstantesFunciones.setEjercicioDescripcion(ejercicio,Constantes.SMENSAJE_ESCOJA_OPCION);
				ejercicio.setId(null);

				if(!EjercicioConstantesFunciones.ExisteEnLista(this.ejerciciosForeignKey,ejercicio,true)) {

					this.ejerciciosForeignKey.add(0,ejercicio);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyPeriodo()throws Exception {
		try {

			if(!this.presupuestoventaslineasSessionBean.getisBusquedaDesdeForeignKeySesionPeriodo()) {
				Periodo periodo=new Periodo();
				PeriodoConstantesFunciones.setPeriodoDescripcion(periodo,Constantes.SMENSAJE_ESCOJA_OPCION);
				periodo.setId(null);

				if(!PeriodoConstantesFunciones.ExisteEnLista(this.periodosForeignKey,periodo,true)) {

					this.periodosForeignKey.add(0,periodo);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyVendedor()throws Exception {
		try {

			if(!this.presupuestoventaslineasSessionBean.getisBusquedaDesdeForeignKeySesionVendedor()) {
				Vendedor vendedor=new Vendedor();
				VendedorConstantesFunciones.setVendedorDescripcion(vendedor,Constantes.SMENSAJE_ESCOJA_OPCION);
				vendedor.setId(null);

				if(!VendedorConstantesFunciones.ExisteEnLista(this.vendedorsForeignKey,vendedor,true)) {

					this.vendedorsForeignKey.add(0,vendedor);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyPais()throws Exception {
		try {

			if(!this.presupuestoventaslineasSessionBean.getisBusquedaDesdeForeignKeySesionPais()) {
				Pais pais=new Pais();
				PaisConstantesFunciones.setPaisDescripcion(pais,Constantes.SMENSAJE_ESCOJA_OPCION);
				pais.setId(null);

				if(!PaisConstantesFunciones.ExisteEnLista(this.paissForeignKey,pais,true)) {

					this.paissForeignKey.add(0,pais);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyCiudad()throws Exception {
		try {

			if(!this.presupuestoventaslineasSessionBean.getisBusquedaDesdeForeignKeySesionCiudad()) {
				Ciudad ciudad=new Ciudad();
				CiudadConstantesFunciones.setCiudadDescripcion(ciudad,Constantes.SMENSAJE_ESCOJA_OPCION);
				ciudad.setId(null);

				if(!CiudadConstantesFunciones.ExisteEnLista(this.ciudadsForeignKey,ciudad,true)) {

					this.ciudadsForeignKey.add(0,ciudad);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyZona()throws Exception {
		try {

			if(!this.presupuestoventaslineasSessionBean.getisBusquedaDesdeForeignKeySesionZona()) {
				Zona zona=new Zona();
				ZonaConstantesFunciones.setZonaDescripcion(zona,Constantes.SMENSAJE_ESCOJA_OPCION);
				zona.setId(null);

				if(!ZonaConstantesFunciones.ExisteEnLista(this.zonasForeignKey,zona,true)) {

					this.zonasForeignKey.add(0,zona);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyLinea()throws Exception {
		try {

			if(!this.presupuestoventaslineasSessionBean.getisBusquedaDesdeForeignKeySesionLinea()) {
				Linea linea=new Linea();
				LineaConstantesFunciones.setLineaDescripcion(linea,Constantes.SMENSAJE_ESCOJA_OPCION);
				linea.setId(null);

				if(!LineaConstantesFunciones.ExisteEnLista(this.lineasForeignKey,linea,true)) {

					this.lineasForeignKey.add(0,linea);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyLineaGrupo()throws Exception {
		try {

			if(!this.presupuestoventaslineasSessionBean.getisBusquedaDesdeForeignKeySesionLineaGrupo()) {
				Linea lineagrupo=new Linea();
				LineaConstantesFunciones.setLineaDescripcion(lineagrupo,Constantes.SMENSAJE_ESCOJA_OPCION);
				lineagrupo.setId(null);

				if(!LineaConstantesFunciones.ExisteEnLista(this.lineagruposForeignKey,lineagrupo,true)) {

					this.lineagruposForeignKey.add(0,lineagrupo);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyLineaCategoria()throws Exception {
		try {

			if(!this.presupuestoventaslineasSessionBean.getisBusquedaDesdeForeignKeySesionLineaCategoria()) {
				Linea lineacategoria=new Linea();
				LineaConstantesFunciones.setLineaDescripcion(lineacategoria,Constantes.SMENSAJE_ESCOJA_OPCION);
				lineacategoria.setId(null);

				if(!LineaConstantesFunciones.ExisteEnLista(this.lineacategoriasForeignKey,lineacategoria,true)) {

					this.lineacategoriasForeignKey.add(0,lineacategoria);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyLineaMarca()throws Exception {
		try {

			if(!this.presupuestoventaslineasSessionBean.getisBusquedaDesdeForeignKeySesionLineaMarca()) {
				Linea lineamarca=new Linea();
				LineaConstantesFunciones.setLineaDescripcion(lineamarca,Constantes.SMENSAJE_ESCOJA_OPCION);
				lineamarca.setId(null);

				if(!LineaConstantesFunciones.ExisteEnLista(this.lineamarcasForeignKey,lineamarca,true)) {

					this.lineamarcasForeignKey.add(0,lineamarca);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void initActionsCombosTodosForeignKeyPresupuestoVentasLineas()throws Exception {
		try {
			
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void initActionsCombosTodosForeignKeyPresupuestoVentasLineas(String sFormularioTipoBusqueda)throws Exception {
		try {
			
		} catch(Exception e) {
			throw e;
		}		
	}
	
	


	
	


	
	public void setVariablesGlobalesCombosForeignKeyPresupuestoVentasLineas()throws Exception {	
		try {
			if(this.parametroGeneralUsuario!=null && this.parametroGeneralUsuario.getId()>0) {
			
				this.setActualEmpresaForeignKey(this.parametroGeneralUsuario.getid_empresa(),false,"Formulario");
				this.setActualSucursalForeignKey(this.parametroGeneralUsuario.getid_sucursal(),false,"Formulario");
				this.setActualEjercicioForeignKey(this.parametroGeneralUsuario.getid_ejercicio(),false,"Formulario");
				this.setActualPeriodoForeignKey(this.parametroGeneralUsuario.getid_periodo(),false,"Formulario");
			
			
			}
			
			//INICIALIZA VARIABLES COMBOS GLOBALES AUXILIARES A FORMULARIO(Anio,Mes)
			this.setVariablesGlobalesAuxiliaresCombosForeignKeyPresupuestoVentasLineas();
		
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesObjetoActualToFormularioForeignKeyPresupuestoVentasLineas(PresupuestoVentasLineas presupuestoventaslineas)throws Exception {	
		try {
			
			this.setActualVendedorForeignKey(presupuestoventaslineas.getid_vendedor(),false,"Formulario");
			this.setActualPaisForeignKey(presupuestoventaslineas.getid_pais(),false,"Formulario");
			this.setActualCiudadForeignKey(presupuestoventaslineas.getid_ciudad(),false,"Formulario");
			this.setActualZonaForeignKey(presupuestoventaslineas.getid_zona(),false,"Formulario");
			this.setActualLineaForeignKey(presupuestoventaslineas.getid_linea(),false,"Formulario");
			this.setActualLineaGrupoForeignKey(presupuestoventaslineas.getid_linea_grupo(),false,"Formulario");
			this.setActualLineaCategoriaForeignKey(presupuestoventaslineas.getid_linea_categoria(),false,"Formulario");
			this.setActualLineaMarcaForeignKey(presupuestoventaslineas.getid_linea_marca(),false,"Formulario");			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesObjetoActualToListasForeignKeyPresupuestoVentasLineas(PresupuestoVentasLineas presupuestoventaslineas,String sTipoEvento)throws Exception {	
		try {
			
			
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	/*
	public void setVariablesCombosFromBeanForeignKeyPresupuestoVentasLineas()throws Exception {	
		try {
			
			this.setActualVendedorForeignKey(this.presupuestoventaslineasConstantesFunciones.getid_vendedor(),false,"Formulario");
			this.setActualPaisForeignKey(this.presupuestoventaslineasConstantesFunciones.getid_pais(),false,"Formulario");
			this.setActualCiudadForeignKey(this.presupuestoventaslineasConstantesFunciones.getid_ciudad(),false,"Formulario");
			this.setActualZonaForeignKey(this.presupuestoventaslineasConstantesFunciones.getid_zona(),false,"Formulario");
			this.setActualLineaForeignKey(this.presupuestoventaslineasConstantesFunciones.getid_linea(),false,"Formulario");
			this.setActualLineaGrupoForeignKey(this.presupuestoventaslineasConstantesFunciones.getid_linea_grupo(),false,"Formulario");
			this.setActualLineaCategoriaForeignKey(this.presupuestoventaslineasConstantesFunciones.getid_linea_categoria(),false,"Formulario");
			this.setActualLineaMarcaForeignKey(this.presupuestoventaslineasConstantesFunciones.getid_linea_marca(),false,"Formulario");			
		} catch(Exception e) {
			throw e;
		}
	}
	*/
	
	public void setVariablesGlobalesAuxiliaresCombosForeignKeyPresupuestoVentasLineas()throws Exception {	
		try {
			

				if(this.jInternalFrameDetalleFormPresupuestoVentasLineas!=null) {
					Ejercicio ejercicioActual=(Ejercicio)this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_ejercicioPresupuestoVentasLineas.getSelectedItem();
				}

				if(this.jInternalFrameDetalleFormPresupuestoVentasLineas!=null) {
					Periodo periodoActual=(Periodo)this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_periodoPresupuestoVentasLineas.getSelectedItem();
				}
		
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesDefaultCombosForeignKeyPresupuestoVentasLineas()throws Exception {	
		try {
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesParametroCombosForeignKeyPresupuestoVentasLineas()throws Exception {	
		try {
			
		} catch(Exception e) {
			throw e;
		}
	}		
	
	public void cargarCombosParametroPresupuestoVentasLineas()throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			
			//this.cargarDatosCliente();
			
			
			
		} catch(Exception e) {
			throw e;
		}		
	}
		
	public void cargarCombosFrameForeignKeyPresupuestoVentasLineas()throws Exception {
		try {
			

			this.cargarCombosFrameEmpresasForeignKey("Todos");
			this.cargarCombosFrameSucursalsForeignKey("Todos");
			this.cargarCombosFrameEjerciciosForeignKey("Todos");
			this.cargarCombosFramePeriodosForeignKey("Todos");
			this.cargarCombosFrameVendedorsForeignKey("Todos");
			this.cargarCombosFramePaissForeignKey("Todos");
			this.cargarCombosFrameCiudadsForeignKey("Todos");
			this.cargarCombosFrameZonasForeignKey("Todos");
			this.cargarCombosFrameLineasForeignKey("Todos");
			this.cargarCombosFrameLineaGruposForeignKey("Todos");
			this.cargarCombosFrameLineaCategoriasForeignKey("Todos");
			this.cargarCombosFrameLineaMarcasForeignKey("Todos");

		} catch(Exception e) {
			throw e;
		}		
	}		
	
	public void cargarCombosFrameForeignKeyPresupuestoVentasLineas(String sFormularioTipoBusqueda)throws Exception {
		try {
			

			this.cargarCombosFrameEmpresasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameSucursalsForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameEjerciciosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFramePeriodosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameVendedorsForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFramePaissForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameCiudadsForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameZonasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameLineasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameLineaGruposForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameLineaCategoriasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameLineaMarcasForeignKey(sFormularioTipoBusqueda);

		} catch(Exception e) {
			throw e;
		}		
	}	
	
	public void setItemDefectoCombosForeignKeyPresupuestoVentasLineas()throws Exception {
		try {
			



			if(this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_empresaPresupuestoVentasLineas!=null && this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_empresaPresupuestoVentasLineas.getItemCount()>0) {
				this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_empresaPresupuestoVentasLineas.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_sucursalPresupuestoVentasLineas!=null && this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_sucursalPresupuestoVentasLineas.getItemCount()>0) {
				this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_sucursalPresupuestoVentasLineas.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_ejercicioPresupuestoVentasLineas!=null && this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_ejercicioPresupuestoVentasLineas.getItemCount()>0) {
				this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_ejercicioPresupuestoVentasLineas.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_periodoPresupuestoVentasLineas!=null && this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_periodoPresupuestoVentasLineas.getItemCount()>0) {
				this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_periodoPresupuestoVentasLineas.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_vendedorPresupuestoVentasLineas!=null && this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_vendedorPresupuestoVentasLineas.getItemCount()>0) {
				this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_vendedorPresupuestoVentasLineas.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_paisPresupuestoVentasLineas!=null && this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_paisPresupuestoVentasLineas.getItemCount()>0) {
				this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_paisPresupuestoVentasLineas.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_ciudadPresupuestoVentasLineas!=null && this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_ciudadPresupuestoVentasLineas.getItemCount()>0) {
				this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_ciudadPresupuestoVentasLineas.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_zonaPresupuestoVentasLineas!=null && this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_zonaPresupuestoVentasLineas.getItemCount()>0) {
				this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_zonaPresupuestoVentasLineas.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_lineaPresupuestoVentasLineas!=null && this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_lineaPresupuestoVentasLineas.getItemCount()>0) {
				this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_lineaPresupuestoVentasLineas.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_linea_grupoPresupuestoVentasLineas!=null && this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_linea_grupoPresupuestoVentasLineas.getItemCount()>0) {
				this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_linea_grupoPresupuestoVentasLineas.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_linea_categoriaPresupuestoVentasLineas!=null && this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_linea_categoriaPresupuestoVentasLineas.getItemCount()>0) {
				this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_linea_categoriaPresupuestoVentasLineas.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_linea_marcaPresupuestoVentasLineas!=null && this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_linea_marcaPresupuestoVentasLineas.getItemCount()>0) {
				this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_linea_marcaPresupuestoVentasLineas.setSelectedIndex(0);
			}
		} catch(Exception e) {
			throw e;
		}		
	}		
	
	
























	
	

	public PresupuestoVentasLineasBeanSwingJInternalFrame() throws Exception {
		super(false,PaginaTipo.PRINCIPAL);
	}
	
	public PresupuestoVentasLineasBeanSwingJInternalFrame(Boolean cargarRelaciones,PaginaTipo paginaTipo) throws Exception {
		super(cargarRelaciones,paginaTipo);
	}
	
	public PresupuestoVentasLineasBeanSwingJInternalFrame(Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,PaginaTipo paginaTipo) throws Exception {
		super(cargarRelaciones,paginaTipo);
		
		this.presupuestoventaslineasSessionBean=new PresupuestoVentasLineasSessionBean(); 
		this.presupuestoventaslineasConstantesFunciones=new PresupuestoVentasLineasConstantesFunciones(); 
		this.presupuestoventaslineasBean=new PresupuestoVentasLineas();//(this.presupuestoventaslineasConstantesFunciones); 		
		this.presupuestoventaslineasReturnGeneral=new PresupuestoVentasLineasParameterReturnGeneral(); 
		
		this.presupuestoventaslineasSessionBean.setConGuardarRelaciones(conGuardarRelaciones);
		this.presupuestoventaslineasSessionBean.setEsGuardarRelacionado(esGuardarRelacionado);
				
	}
	
	public PresupuestoVentasLineasBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,Boolean cargarTodosDatos,PaginaTipo paginaTipo) throws Exception {
		this(blncargarCombostrForeignKey,blnCargarInformacionInicial,jdesktopPane,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo,conGuardarRelaciones,esGuardarRelacionado,cargarRelaciones,cargarTodosDatos);
	}
		
	public PresupuestoVentasLineasBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,Boolean cargarRelaciones,Boolean cargarTodosDatos,PaginaTipo paginaTipo) throws Exception {
		this(blncargarCombostrForeignKey,blnCargarInformacionInicial,jdesktopPane,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo,false,false,cargarRelaciones,cargarTodosDatos);
	}	
	
	public PresupuestoVentasLineasBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,PaginaTipo paginaTipo,Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,Boolean cargarTodosDatos) throws Exception //Boolean esParaBusquedaForeignKey
    {
		super(jdesktopPane,conGuardarRelaciones,esGuardarRelacionado,cargarRelaciones,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo);
		
		try {
			
			this.permiteRecargarForm=false;
			
			this.startProcessPresupuestoVentasLineas(true);
			
			Boolean esParaBusquedaForeignKey=false;//ANTES USADO COMO PARAMETRO DEL CONSTRUCTOR
			
			if(paginaTipo.equals(PaginaTipo.BUSQUEDA)) {
				esParaBusquedaForeignKey=true;
			}
			
			
			
			//SE ASIGNA EN CLASE PADRE
			/*
			this.parametroGeneralSg=parametroGeneralSg;		
			this.parametroGeneralUsuario=parametroGeneralUsuario;	
			this.usuarioActual=usuarioActual;
			this.moduloActual=moduloActual;
			*/						
			
			long start_time=0;
			long end_time=0;
			
			if(Constantes2.ISDEVELOPING2) {
				start_time = System.currentTimeMillis();
			}
			
			if(!cargarTodosDatos) {
				this.sAccionBusqueda="NINGUNO";
			}
			
			this.presupuestoventaslineasConstantesFunciones=new PresupuestoVentasLineasConstantesFunciones(); 
			this.presupuestoventaslineasBean=new PresupuestoVentasLineas();//this.presupuestoventaslineasConstantesFunciones); 			
			this.presupuestoventaslineasReturnGeneral=new PresupuestoVentasLineasParameterReturnGeneral(); 
		
			PresupuestoVentasLineasBeanSwingJInternalFrameAdditional.CargaInicialInicio(this, "NORMAL", null);
			
			this.setTitle(Funciones.GetTituloSistema(this.parametroGeneralSg,this.moduloActual,this.usuarioActual,"Presupuesto Ventas_lineas Mantenimiento",paginaTipo));			
			
			this.conTotales=false;
			
			this.conTotales=true;
			
			
			this.presupuestoventaslineas=new PresupuestoVentasLineas();
			this.presupuestoventaslineass = new ArrayList<PresupuestoVentasLineas>();
			this.presupuestoventaslineassAux = new ArrayList<PresupuestoVentasLineas>();
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoventaslineasLogic=new PresupuestoVentasLineasLogic();
				this.presupuestoventaslineasLogic.getNewConnexionToDeep("");
			}
			
			//this.presupuestoventaslineasSessionBean.setConGuardarRelaciones(conGuardarRelaciones);
			//this.presupuestoventaslineasSessionBean.setEsGuardarRelacionado(esGuardarRelacionado);
			
			this.jDesktopPane=jdesktopPane;
			
			if(this.jDesktopPane.getClass().equals(JDesktopPaneMe.class)) {
				this.constantes2=((JDesktopPaneMe)this.jDesktopPane).constantes2;
			}
			
			if(!Constantes.CON_VARIAS_VENTANAS) {
    			MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameDetalleFormPresupuestoVentasLineas);
				
				if(!this.conCargarMinimo) {
					
					if(this.jInternalFrameReporteDinamicoPresupuestoVentasLineas!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameReporteDinamicoPresupuestoVentasLineas);	
					}
					
					if(this.jInternalFrameImportacionPresupuestoVentasLineas!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameImportacionPresupuestoVentasLineas);							
					}
					
				}
				
				
				if(!this.conCargarMinimo) {
					
					if(this.jInternalFrameOrderByPresupuestoVentasLineas!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameOrderByPresupuestoVentasLineas);					
					}
					
				}
			}
			
			//DETALLE DATOS
			if(this.jInternalFrameDetalleFormPresupuestoVentasLineas!=null) { //this.conCargarFormDetalle) {
				this.jDesktopPane.add(this.jInternalFrameDetalleFormPresupuestoVentasLineas);
				this.jInternalFrameDetalleFormPresupuestoVentasLineas.setVisible(false);
				this.jInternalFrameDetalleFormPresupuestoVentasLineas.setSelected(false);						
			}
			
			if(!this.conCargarMinimo) {
				
				//REPORTE DINAMICO
				if(this.jInternalFrameReporteDinamicoPresupuestoVentasLineas!=null) {
					this.jDesktopPane.add(this.jInternalFrameReporteDinamicoPresupuestoVentasLineas);
					this.jInternalFrameReporteDinamicoPresupuestoVentasLineas.setVisible(false);
					this.jInternalFrameReporteDinamicoPresupuestoVentasLineas.setSelected(false);
				}
				
				//IMPORTACION
				if(this.jInternalFrameImportacionPresupuestoVentasLineas!=null) {
					this.jDesktopPane.add(this.jInternalFrameImportacionPresupuestoVentasLineas);
					this.jInternalFrameImportacionPresupuestoVentasLineas.setVisible(false);
					this.jInternalFrameImportacionPresupuestoVentasLineas.setSelected(false);
				}
				
				
			}
			
			
			if(!this.conCargarMinimo) {
				
				if(this.jInternalFrameOrderByPresupuestoVentasLineas!=null) {
					this.jDesktopPane.add(this.jInternalFrameOrderByPresupuestoVentasLineas);
					this.jInternalFrameOrderByPresupuestoVentasLineas.setVisible(false);
					this.jInternalFrameOrderByPresupuestoVentasLineas.setSelected(false);				
				}
				
			}
			
			
			//this.esParaBusquedaForeignKey=false;
			this.esParaBusquedaForeignKey=esParaBusquedaForeignKey;
			
			this.invalidValues=new InvalidValue[0];
			
			
			
			this.idPresupuestoVentasLineasActual=0L;
			this.rowIndexActual=0;
			
			
			this.iNumeroPaginacionPagina=0;
			this.iNumeroPaginacion=PresupuestoVentasLineasConstantesFunciones.INUMEROPAGINACION;
			this.pagination=new Pagination();
			this.datosCliente=new DatosCliente();
			this.lIdUsuarioSesion=0L;	
			this.sTipoArchivoReporte="";
			this.sTipoArchivoReporteDinamico="";
			this.sTipoReporte="";
			this.sTipoReporteDinamico="";
			this.sTipoPaginacion="";
			this.sTipoRelacion="";
			this.sTipoAccion="";
			this.sTipoAccionFormulario="";
			this.sTipoSeleccionar="";			
			this.sDetalleReporte="";
			this.sTipoReporteExtra="";
			this.sValorCampoGeneral="";
			this.sPathReporteDinamico="";			
			
			this.isMostrarNumeroPaginacion=false;
			this.isSeleccionarTodos=false;
			this.isSeleccionados=false;
			this.conGraficoReporte=false;
			this.isPostAccionNuevo=false;
			this.isPostAccionSinCerrar=false;
			this.isPostAccionSinMensaje=false;
			this.esReporteDinamico=false;
			this.esRecargarFks=false;
			this.esReporteAccionProceso=false;
			
			this.presupuestoventaslineasReturnGeneral=new PresupuestoVentasLineasParameterReturnGeneral();
			
			this.presupuestoventaslineasParameterGeneral=new PresupuestoVentasLineasParameterReturnGeneral();
			
			
			
			this.sistemaLogicAdditional=new SistemaLogicAdditional();
			
			this.sistemaLogicAdditional.setConnexion(this.presupuestoventaslineasLogic.getConnexion());			
			
			
			
			
			
			
			
			//VERIFICAR GLOBAL
			this.cargarDatosCliente();			
			
			
			if(!this.presupuestoventaslineasSessionBean.getEsGuardarRelacionado()) {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					if(!sistemaLogicAdditional.validarLicenciaCliente(this.datosCliente,this.moduloActual,this.usuarioActual)) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_CONTROLGLOBAL);
					}
					
				} else if(Constantes.ISUSAEJBREMOTE) {
					
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}			
			
			//VERIFICAR GLOBAL
			
			//VERIFICAR SESSION ACTUAL
			//this.cargarDatosCliente();
			
			this.sistemaReturnGeneral=new SistemaParameterReturnGeneral();
			
			SistemaParameterReturnGeneralAdditional.inicializarSinSeguridad(this.sistemaReturnGeneral);
			
			if(PresupuestoVentasLineasJInternalFrame.CON_LLAMADA_SIMPLE) {
				if(this.presupuestoventaslineasSessionBean.getEsGuardarRelacionado()) {
					this.opcionActual.setId(0L);
					
					//idOpcion=0L;					
				}
				
				ArrayList<String> arrPaginas=new ArrayList<String>();		
				ArrayList<Opcion> opcionsFinal=new ArrayList<Opcion>();	
				
		
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					//this.sistemaReturnGeneral=sistemaLogicAdditional.validarCargarSesionUsuarioActualWithConnection(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual,Constantes.LIDSISTEMAACTUAL,PresupuestoVentasLineasConstantesFunciones.SNOMBREOPCION,this.opcionActual,this.presupuestoventaslineasSessionBean.getEsGuardarRelacionado(),this.presupuestoventaslineasSessionBean.getConGuardarRelaciones(),arrPaginas);
					
					this.sistemaReturnGeneral=sistemaLogicAdditional.validarCargarSesionUsuarioActual(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual,Constantes.LIDSISTEMAACTUAL,PresupuestoVentasLineasConstantesFunciones.SNOMBREOPCION,this.opcionActual,this.presupuestoventaslineasSessionBean.getEsGuardarRelacionado(),this.presupuestoventaslineasSessionBean.getConGuardarRelaciones(),arrPaginas);
					
					if(!this.sistemaReturnGeneral.getEsValidado()) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_SESIONACTUAL);
					}
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
					//FALTA
				}
			} else { 
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					if(!sistemaLogicAdditional.validarSesionUsuarioActual(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual)) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_SESIONACTUAL);
					}
				
				} else if(Constantes.ISUSAEJBREMOTE) {
					
				} else if(Constantes.ISUSAEJBHOME) {
				}
			} 
			//VERIFICAR SESSION ACTUAL
			
			
			this.sVisibilidadTablaBusquedas="table-row";
			this.sVisibilidadTablaElementos="none";
			this.sVisibilidadTablaAcciones="none";
			
			this.isVisibilidadCeldaNuevoPresupuestoVentasLineas=false;
			this.isVisibilidadCeldaDuplicarPresupuestoVentasLineas=true;
			this.isVisibilidadCeldaCopiarPresupuestoVentasLineas=true;
			this.isVisibilidadCeldaVerFormPresupuestoVentasLineas=true;
			this.isVisibilidadCeldaOrdenPresupuestoVentasLineas=true;
			this.isVisibilidadCeldaNuevoRelacionesPresupuestoVentasLineas=false;
			this.isVisibilidadCeldaModificarPresupuestoVentasLineas=false;
			this.isVisibilidadCeldaActualizarPresupuestoVentasLineas=false;
			this.isVisibilidadCeldaEliminarPresupuestoVentasLineas=false;
			this.isVisibilidadCeldaCancelarPresupuestoVentasLineas=false;
			this.isVisibilidadCeldaGuardarPresupuestoVentasLineas=false;
			this.isVisibilidadCeldaGuardarCambiosPresupuestoVentasLineas=false;
			
			
			this.isVisibilidadFK_IdCiudad=true;
			this.isVisibilidadFK_IdEjercicio=true;
			this.isVisibilidadFK_IdEmpresa=true;
			this.isVisibilidadFK_IdLinea=true;
			this.isVisibilidadFK_IdLineaCategoria=true;
			this.isVisibilidadFK_IdLineaGrupo=true;
			this.isVisibilidadFK_IdLineaMarca=true;
			this.isVisibilidadFK_IdPais=true;
			this.isVisibilidadFK_IdPeriodo=true;
			this.isVisibilidadFK_IdSucursal=true;
			this.isVisibilidadFK_IdVendedor=true;
			this.isVisibilidadFK_IdZona=true;
			
			//ELEMENTOS TABLAS PARAMETOS
			
			
			
			//ELEMENTOS TABLAS PARAMETOS_FIN
			
			//this.actualizarEstadoCeldasBotonesPresupuestoVentasLineas("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
						
			
			
			this.inicializarPermisosPresupuestoVentasLineas();
			
			//INICIALIZAR FALSE, TALVEZ COMENTAR
			this.setPermisosUsuarioPresupuestoVentasLineas(false);
			
			this.setPermisosUsuarioPresupuestoVentasLineas();
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.presupuestoventaslineasSessionBean.getEsGuardarRelacionado() 
				|| (this.presupuestoventaslineasSessionBean.getEsGuardarRelacionado() && this.presupuestoventaslineasSessionBean.getConGuardarRelaciones())) {
				
				this.inicializarSetPermisosUsuarioPresupuestoVentasLineasClasesRelacionadas();
			}
			
			if(this.presupuestoventaslineasSessionBean.getConGuardarRelaciones()) {
				this.actualizarTabsSetPermisosUsuarioPresupuestoVentasLineasClasesRelacionadas();
			}
			
			
			
			//SOLO SE EJECUTA LA PRIMERA VEZ, BINDINGS SI FUNCIONA
			if(!PresupuestoVentasLineasJInternalFrame.ISBINDING_MANUAL) {
				this.inicializarActualizarBindingBotonesPermisosPresupuestoVentasLineas();
			} else {
				this.inicializarActualizarBindingBotonesPermisosManualPresupuestoVentasLineas();
			}
			
			if(!this.isPermisoBusquedaPresupuestoVentasLineas) {
				//BYDAN_BUSQUEDAS
				
				this.jTabbedPaneBusquedasPresupuestoVentasLineas.setVisible(false);				
				
			}
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.presupuestoventaslineasSessionBean.getEsGuardarRelacionado()) {				
				this.tiposArchivosReportes=Funciones.getListTiposArchivosReportes();
				this.tiposArchivosReportesDinamico=Funciones.getListTiposArchivosReportes();
				this.tiposReportes=Funciones.getListTiposReportes(true);
				this.tiposReportesDinamico=Funciones.getListTiposReportesDinamico(true);
				
				
				
				this.tiposGraficosReportes=Funciones2.getListTiposGraficosReportes();
				this.tiposPaginacion=Funciones2.getListTiposPaginacion(this.isPermisoPaginacionMedioPresupuestoVentasLineas,this.isPermisoPaginacionMedioPresupuestoVentasLineas,this.isPermisoPaginacionTodoPresupuestoVentasLineas);
				this.tiposSeleccionar=Funciones2.getListTiposSeleccionar();
				this.tiposSeleccionar.addAll(PresupuestoVentasLineasConstantesFunciones.getTiposSeleccionarPresupuestoVentasLineas());
				
				this.tiposColumnasSelect=PresupuestoVentasLineasConstantesFunciones.getTiposSeleccionarPresupuestoVentasLineas(true);
				
				this.tiposRelacionesSelect=new ArrayList<Reporte>();								
				
				
			} else {
				this.tiposArchivosReportes=new ArrayList<Reporte>();
				this.tiposArchivosReportesDinamico=new ArrayList<Reporte>();
				this.tiposReportes=new ArrayList<Reporte>();
				this.tiposReportesDinamico=new ArrayList<Reporte>();
				this.tiposGraficosReportes=new ArrayList<Reporte>();
				this.tiposPaginacion=new ArrayList<Reporte>();
				this.tiposSeleccionar=new ArrayList<Reporte>();			
				this.tiposColumnasSelect=new ArrayList<Reporte>();	
				this.tiposRelacionesSelect=new ArrayList<Reporte>();	
			}
						
			
			//FUNCIONALIDAD_RELACIONADO
			//if(!this.presupuestoventaslineasSessionBean.getEsGuardarRelacionado()) {
				//SE ENCUENTRA MAS ADELANTE CON ACCIONES POR USUARIO
				//ACCIONES GENERALES Y POR USUARIO
				this.tiposRelaciones=Funciones2.getListTiposRelaciones();
				this.setRelacionesUsuarioPresupuestoVentasLineas();
				
				this.tiposAcciones=Funciones2.getListTiposAcciones(true,false,true);
				this.setAccionesUsuarioPresupuestoVentasLineas(false);	
				
				this.tiposAccionesFormulario=Funciones2.getListTiposAccionesFormulario(true,false,true);							
				this.setAccionesUsuarioPresupuestoVentasLineas(true);	
				
				this.inicializarActualizarBindingtiposArchivosReportesAccionesPresupuestoVentasLineas() ;
			
			/*
			} else {
				this.tiposAcciones=new ArrayList<Reporte>();
				this.tiposAccionesFormulario=new ArrayList<Reporte>();
			}
			*/						
			
			this.inicializarInvalidValues();
						
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			
			
			this.arrOrderBy= new  ArrayList<OrderBy>();
			
			
			this.arrDatoGeneralMinimos= new  ArrayList<DatoGeneralMinimo>();
			
			
			this.traerValoresTablaOrderBy();			
			
			
			this.isGuardarCambiosEnLote=false;
			this.isCargarCombosDependencia=false;
			
			 
			jasperPrint = null;												
			
			//FK
			
			this.empresaLogic=new EmpresaLogic();
			this.sucursalLogic=new SucursalLogic();
			this.ejercicioLogic=new EjercicioLogic();
			this.periodoLogic=new PeriodoLogic();
			this.vendedorLogic=new VendedorLogic();
			this.paisLogic=new PaisLogic();
			this.ciudadLogic=new CiudadLogic();
			this.zonaLogic=new ZonaLogic();
			this.lineaLogic=new LineaLogic();
			this.lineagrupoLogic=new LineaLogic();
			this.lineacategoriaLogic=new LineaLogic();
			this.lineamarcaLogic=new LineaLogic();
			
			//PARAMETROS
			
			
			/*
			if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {		
				hashtableEnv =  Funciones.getHashtableEnv();		
				initialContext = new InitialContext(hashtableEnv);	
			}
			*/
			/*
			if(Constantes.ISUSAEJBREMOTE) {
				presupuestoventaslineasImplementable= (PresupuestoVentasLineasImplementable) initialContext.lookup(Constantes.SEJBPACKAGE+Constantes.SEJBSEPARATOR+PresupuestoVentasLineasConstantesFunciones.SEJBNAME+Constantes.SEJBSEPARATOR+Constantes.SEJBREMOTE);
			} else if(Constantes.ISUSAEJBHOME) {
				presupuestoventaslineasImplementableHome= (PresupuestoVentasLineasImplementableHome) initialContext.lookup(Constantes.SEJBPACKAGE+Constantes.SEJBSEPARATOR+PresupuestoVentasLineasConstantesFunciones.SEJBNAME+Constantes.SEJBSEPARATOR+Constantes.SEJBLOCAL);
			}			
			*/
			
			
			this.presupuestoventaslineass= new ArrayList<PresupuestoVentasLineas>();
			this.presupuestoventaslineassEliminados= new ArrayList<PresupuestoVentasLineas>();
						
			this.isEsNuevoPresupuestoVentasLineas=false;
			this.esParaAccionDesdeFormularioPresupuestoVentasLineas=false;
			this.isEsMantenimientoRelacionesRelacionadoUnico=false;
			this.isEsMantenimientoRelaciones=false;
			this.isEsMantenimientoRelacionado=false;
			this.isContieneImagenes=false;
			
			
			
			
			
			//INICIALIZAR LISTAS FK
			
			this.empresasForeignKey=new ArrayList<Empresa>() ;
			this.sucursalsForeignKey=new ArrayList<Sucursal>() ;
			this.ejerciciosForeignKey=new ArrayList<Ejercicio>() ;
			this.periodosForeignKey=new ArrayList<Periodo>() ;
			this.vendedorsForeignKey=new ArrayList<Vendedor>() ;
			this.paissForeignKey=new ArrayList<Pais>() ;
			this.ciudadsForeignKey=new ArrayList<Ciudad>() ;
			this.zonasForeignKey=new ArrayList<Zona>() ;
			this.lineasForeignKey=new ArrayList<Linea>() ;
			this.lineagruposForeignKey=new ArrayList<Linea>() ;
			this.lineacategoriasForeignKey=new ArrayList<Linea>() ;
			this.lineamarcasForeignKey=new ArrayList<Linea>() ;
			
			
			
			
			if(blncargarCombostrForeignKey) {
				this.cargarCombosForeignKeyPresupuestoVentasLineas(this.isCargarCombosDependencia);
			}
			
			this.cargarCombosParametroPresupuestoVentasLineas();
			
			
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.presupuestoventaslineasSessionBean.getEsGuardarRelacionado()) {
				this.onLoad();
			}
						
			PresupuestoVentasLineasBeanSwingJInternalFrameAdditional.RecargarVentanaSegunOpcion(this,opcionActual);
			
			/*
			if(blnCargarInformacionInicial) {
				this.recargarInformacion();
			}
			*/
			//this.iNumeroPaginacionPagina=0;
			//this.iNumeroPaginacion=PresupuestoVentasLineasConstantesFunciones.INUMEROPAGINACION;
			
			this.actualizarEstadoCeldasBotonesPresupuestoVentasLineas("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			//SOLO LA PRIMERA VEZ HACE LOS BINDINGS, SOLO AHI FUNCIONA
			this.inicializarActualizarBindingPresupuestoVentasLineas(true); 
			
			//SE REDIMENSIONA SINO NO SE ACTUALIZA
			this.redimensionarTablaDatos();
			
			
			this.initActions();
			
			;
						
			if(this.jInternalFrameDetalleFormPresupuestoVentasLineas!=null) {//if(this.conCargarFormDetalle) {
				this.cargarMenuRelaciones();
			}
			
			//OBLIGA CARGAR DETALLE, MEJOR DESHABILITAR, FALTA TALVEZ PONER EN SELECCIONAR
			//MAYBE
			//this.updateControlesFormularioPresupuestoVentasLineas();
			
			if(!this.conCargarMinimo) {
				this.updateBusquedasFormularioPresupuestoVentasLineas();
			}
			
			PresupuestoVentasLineasBeanSwingJInternalFrameAdditional.CargaInicial(this, "NORMAL", null);
			
			
			//SE REALIZA ESTO PARA QUE SE PUEDA RECORRER TAB SIN IMPORTAR ORDEN
			Boolean existeTabBusqueda=false;
			
			if(!this.conCargarMinimo) {
				//BYDAN_BUSQUEDAS
				
				
				for(int i=0; i<this.jTabbedPaneBusquedasPresupuestoVentasLineas.getTabCount(); i++) {
					this.jTabbedPaneBusquedasPresupuestoVentasLineas.setSelectedIndex(i);
						
					if(!existeTabBusqueda) {
						existeTabBusqueda=true;
					}
				}
					
				if(existeTabBusqueda) {
					this.jTabbedPaneBusquedasPresupuestoVentasLineas.setSelectedIndex(0);
				}	
				
				
			}
			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoventaslineasLogic.commitNewConnexionToDeep();
			}
			
			
			if(Constantes2.ISDEVELOPING2) {
				end_time = System.currentTimeMillis();			
				String sTipo="Load Ventana";
				Funciones2.getMensajeTiempoEjecucion(start_time, end_time, sTipo,false);
			}  
			
			this.finishProcessPresupuestoVentasLineas(true);
			
			this.dEnd=(double)System.currentTimeMillis();
			
			this.dDif=this.dEnd - this.dStart;
			
			if(Constantes.ISDEVELOPING) {
				System.out.println("Tiempo(ms) Carga PresupuestoVentasLineas: " + this.dDif); 
			}
			
			this.permiteRecargarForm=true;
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoventaslineasLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,PresupuestoVentasLineasConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoventaslineasLogic.closeNewConnexionToDeep();
			}
		}	 
    }
	
	public void cargarTiposRelacionesSelectPresupuestoVentasLineas() {
		Reporte reporte=new Reporte();
		
	
	}
	
	
	
	public void jTabbedPaneChangeListenerGeneral(String sTipo,ChangeEvent evt) { 	  
		Boolean procesaCargarParteTab=false;
			
		try {
			int iIndex=0;		    			
			String sTitle="";
			
			//TABBED PANE RELACIONES
			if(sTipo.equals("RelacionesPresupuestoVentasLineas")) {
				iIndex=this.jInternalFrameDetalleFormPresupuestoVentasLineas.jTabbedPaneRelacionesPresupuestoVentasLineas.getSelectedIndex();		    
			
				sTitle=this.jInternalFrameDetalleFormPresupuestoVentasLineas.jTabbedPaneRelacionesPresupuestoVentasLineas.getTitleAt(iIndex);
				
				Integer intSelectedRow = 0;	
			
				intSelectedRow = this.jTableDatosPresupuestoVentasLineas.getSelectedRow();	
				
				
				
			}
			
			//TABBED PANE RELACIONES FIN(EXTRA TAB)
			;
			
  		} catch(Exception e) {
  			e.printStackTrace();
  		} finally {
			if(procesaCargarParteTab) {				
				this.finishProcessPresupuestoVentasLineas();	
			}
		}
    }
	
	
	
	public void jButtonRelacionActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
  		} catch(Exception e) {
  			e.printStackTrace();
  		}
    }
	
	public void cargarMenuRelaciones() {	
		JMenuItem jmenuItem= new JMenuItem("General");
		String sLabelMenu="";
		
	}		
	
	public void cargarCombosForeignKeyPresupuestoVentasLineas(Boolean cargarCombosDependencia) throws Exception {   
		this.cargarCombosForeignKeyPresupuestoVentasLineas(cargarCombosDependencia,true,true);
	}
	
	//CARGAR COMBOS EN LOTE
	public void cargarCombosForeignKeyPresupuestoVentasLineas(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales) throws Exception {   
		this.cargarCombosTodosForeignKeyPresupuestoVentasLineasListas(cargarCombosDependencia);
				
		this.addItemDefectoCombosTodosForeignKeyPresupuestoVentasLineas();
		
		this.cargarCombosFrameForeignKeyPresupuestoVentasLineas();						
		
		if(conInitActions) {
			this.initActionsCombosTodosForeignKeyPresupuestoVentasLineas();
		}
		
		if(conSetVariablesGlobales) {
			this.setVariablesGlobalesCombosForeignKeyPresupuestoVentasLineas();
		}
	}
	
	

	public void cargarCombosForeignKeyVendedor(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyVendedorListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyVendedor();
				this.cargarCombosFrameVendedorsForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaVendedor(this.vendedorsForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyPais(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyPaisListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyPais();
				this.cargarCombosFramePaissForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaPais(this.paissForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCiudad(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyCiudadListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyCiudad();
				this.cargarCombosFrameCiudadsForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaCiudad(this.ciudadsForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyZona(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyZonaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyZona();
				this.cargarCombosFrameZonasForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaZona(this.zonasForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyLinea(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyLineaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyLinea();
				this.cargarCombosFrameLineasForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaLinea(this.lineasForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyLineaGrupo(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyLineaGrupoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyLineaGrupo();
				this.cargarCombosFrameLineaGruposForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaLineaGrupo(this.lineagruposForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyLineaCategoria(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyLineaCategoriaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyLineaCategoria();
				this.cargarCombosFrameLineaCategoriasForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaLineaCategoria(this.lineacategoriasForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyLineaMarca(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyLineaMarcaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyLineaMarca();
				this.cargarCombosFrameLineaMarcasForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaLineaMarca(this.lineamarcasForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}
	
	public void jButtonNuevoPresupuestoVentasLineasActionPerformed(ActionEvent evt,Boolean esRelaciones) throws Exception {   
		try {
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.FORM_RECARGAR;
			String sTipo="NUEVO_NORMAL";
			
			this.estaModoNuevo=true;
			
			if(this.presupuestoventaslineasSessionBean.getConGuardarRelaciones()) {
				this.dStart=(double)System.currentTimeMillis();
			}
				
			//if(this.esUsoDesdeHijo) {
			//	eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			//}
											
			if(this.jInternalFrameDetalleFormPresupuestoVentasLineas==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}			
				
			PresupuestoVentasLineasBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.presupuestoventaslineas,new Object(),this.presupuestoventaslineasParameterGeneral,this.presupuestoventaslineasReturnGeneral);
			
			
			if(jTableDatosPresupuestoVentasLineas.getRowCount()>=1) {
				jTableDatosPresupuestoVentasLineas.removeRowSelectionInterval(0, jTableDatosPresupuestoVentasLineas.getRowCount()-1);						
			}
			
			this.isEsNuevoPresupuestoVentasLineas=true;
			
			//ESTABLECE SI ES RELACIONADO O NO 
			this.habilitarDeshabilitarTipoMantenimientoPresupuestoVentasLineas(esRelaciones);
			
			this.nuevoPreparar(false); 
			this.habilitarDeshabilitarControlesPresupuestoVentasLineas(true);			
			//this.presupuestoventaslineas=new PresupuestoVentasLineas();
			//this.presupuestoventaslineas.setIsChanged(true);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesPresupuestoVentasLineas(false) ;						
			 
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualPresupuestoVentasLineas() ;
			
			if(PresupuestoVentasLineasJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetallePresupuestoVentasLineas(esRelaciones);
			}
					
			//Se Duplica, sin sentido
			//this.actualizarInformacion("EVENTO_NUEVO",false,this.presupuestoventaslineas);	
			this.actualizarInformacion("INFO_PADRE",false,this.presupuestoventaslineas);				
			
			PresupuestoVentasLineasBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.presupuestoventaslineas,new Object(),this.presupuestoventaslineasParameterGeneral,this.presupuestoventaslineasReturnGeneral);
			
			if(this.presupuestoventaslineasSessionBean.getConGuardarRelaciones()) {
				this.dEnd=(double)System.currentTimeMillis();					
				this.dDif=this.dEnd - this.dStart;
					
				if(Constantes.ISDEVELOPING) {
					System.out.println("Tiempo(ms) Nuevo Preparar PresupuestoVentasLineas: " + this.dDif); 
				}
			}
			
			//false para que pueda generar eventos
			this.estaModoNuevo=false;
							
			//Con this.estaModoNuevo=false;, se permite actualizar y usar eventos control al mismo tiempo (FuncionTipo.LAST)			
			PresupuestoVentasLineasBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.LAST,ControlTipo.FORM,EventoTipo.CLIC,EventoSubTipo.NEW,sTipo,this.presupuestoventaslineas,new Object(),this.presupuestoventaslineasParameterGeneral,this.presupuestoventaslineasReturnGeneral);
			
		} catch(Exception e) {									
			FuncionesSwing.manageException(this, e,logger,PresupuestoVentasLineasConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoNuevo=false;			
		}
	}
	
	public void jButtonDuplicarPresupuestoVentasLineasActionPerformed(ActionEvent evt,Boolean esRelaciones) throws Exception {   
		try {
			Boolean soloDuplicarUno=false;
			Boolean conSeleccionarFilaTabla=false;
			
			this.estaModoNuevo=true;
			this.estaModoDuplicar=true;
			
			ArrayList<PresupuestoVentasLineas> presupuestoventaslineassSeleccionados=new ArrayList<PresupuestoVentasLineas>();
			int intSelectedRow =-1;
			Integer iNumRowsSeleccionados=0;
			int[] arrNumRowsSeleccionados=null;
			
			//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
			if(conSeleccionarFilaTabla) {
				arrNumRowsSeleccionados=this.jTableDatosPresupuestoVentasLineas.getSelectedRows();
				iNumRowsSeleccionados=this.jTableDatosPresupuestoVentasLineas.getSelectedRows().length;			
			}
			
			presupuestoventaslineassSeleccionados=this.getPresupuestoVentasLineassSeleccionados(false);
				
			if((soloDuplicarUno && iNumRowsSeleccionados.equals(1)) || !soloDuplicarUno) {
				//LO HACE NUEVOPREPARAR
				//this.iIdNuevoPresupuestoVentasLineas--;			
				//PresupuestoVentasLineas presupuestoventaslineasAux= new PresupuestoVentasLineas();			
				//presupuestoventaslineasAux.setId(this.iIdNuevoPresupuestoVentasLineas);																
				
				//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
				//PresupuestoVentasLineas presupuestoventaslineasOrigen=new PresupuestoVentasLineas();
				//for(Integer iNumRowSeleccionado:arrNumRowsSeleccionados) {				
				
				for(PresupuestoVentasLineas presupuestoventaslineasOrigen : presupuestoventaslineassSeleccionados) {
					if(conSeleccionarFilaTabla) {
						if(!soloDuplicarUno) {
							//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
							//intSelectedRow =iNumRowSeleccionado;
						} else {
							intSelectedRow = this.jTableDatosPresupuestoVentasLineas.getSelectedRow();
						}
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							presupuestoventaslineasOrigen =(PresupuestoVentasLineas) this.presupuestoventaslineasLogic.getPresupuestoVentasLineass().toArray()[this.jTableDatosPresupuestoVentasLineas.convertRowIndexToModel(intSelectedRow)];
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							presupuestoventaslineasOrigen =(PresupuestoVentasLineas) this.presupuestoventaslineass.toArray()[this.jTableDatosPresupuestoVentasLineas.convertRowIndexToModel(intSelectedRow)];
						}
					}
					
					this.aumentarTamanioFilaNuevaTablaPresupuestoVentasLineas();
					
					if(this.conTotales) {
						this.quitarFilaTotales();
					}
					
					this.nuevoPreparar(true);
					
					this.presupuestoventaslineas.setsType("DUPLICADO");
					
					this.setCopiarVariablesObjetosPresupuestoVentasLineas(presupuestoventaslineasOrigen,this.presupuestoventaslineas,true,true);
					
					this.setVariablesFormularioToObjetoActualForeignKeysPresupuestoVentasLineas(this.presupuestoventaslineas);
					
					//LO HACE NUEVOPREPARAR
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						this.presupuestoventaslineasLogic.getPresupuestoVentasLineass().add(this.presupuestoventaslineasAux);
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						this.presupuestoventaslineass.add(this.presupuestoventaslineasAux);				
					}
					*/
				}
				
				this.inicializarActualizarBindingTablaPresupuestoVentasLineas(false);
				
				this.jTableDatosPresupuestoVentasLineas.setRowSelectionInterval(this.getIndiceNuevoPresupuestoVentasLineas(), this.getIndiceNuevoPresupuestoVentasLineas());
				
				int iLastRow =  this.jTableDatosPresupuestoVentasLineas.getRowCount () - 1;
				Rectangle rectangle = this.jTableDatosPresupuestoVentasLineas.getCellRect(iLastRow, 0, true);
				
				this.jTableDatosPresupuestoVentasLineas.scrollRectToVisible(rectangle);
				
				//FILA TOTALES
				if(this.conTotales) {
					this.crearFilaTotales();
					
					this.inicializarActualizarBindingTablaPresupuestoVentasLineas(false);
				}
			} else {
				throw new Exception("DEBE ESTAR SELECCIONADO 1 REGISTRO");
			}
			
		} catch(Exception e) {			
			FuncionesSwing.manageException(this, e,logger,PresupuestoVentasLineasConstantesFunciones.CLASSNAME);
		
		} finally {
			this.estaModoNuevo=false;
			this.estaModoDuplicar=false;
		}
	}
	
	public void jButtonCopiarPresupuestoVentasLineasActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			Boolean conSeleccionarFilaTabla=false;
			Integer iNumRowsSeleccionados=0;
			int[] intSelectedRows =null;
			int intSelectedRow =0;
			
			this.estaModoCopiar=true;
			
			ArrayList<PresupuestoVentasLineas> presupuestoventaslineassSeleccionados=new ArrayList<PresupuestoVentasLineas>();									
		
			PresupuestoVentasLineas presupuestoventaslineasOrigen=new PresupuestoVentasLineas();
			PresupuestoVentasLineas presupuestoventaslineasDestino=new PresupuestoVentasLineas();
				
			presupuestoventaslineassSeleccionados=this.getPresupuestoVentasLineassSeleccionados(false);
			
			if(conSeleccionarFilaTabla) {
				iNumRowsSeleccionados=this.jTableDatosPresupuestoVentasLineas.getSelectedRows().length;	
			}
			
			if(iNumRowsSeleccionados.equals(2) || presupuestoventaslineassSeleccionados.size()==2) {
				if(conSeleccionarFilaTabla) {
					intSelectedRows =this.jTableDatosPresupuestoVentasLineas.getSelectedRows();
					intSelectedRow = intSelectedRows[0];	
									
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						presupuestoventaslineasOrigen =(PresupuestoVentasLineas) this.presupuestoventaslineasLogic.getPresupuestoVentasLineass().toArray()[this.jTableDatosPresupuestoVentasLineas.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						presupuestoventaslineasOrigen =(PresupuestoVentasLineas) this.presupuestoventaslineass.toArray()[this.jTableDatosPresupuestoVentasLineas.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					intSelectedRow = intSelectedRows[1];
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						presupuestoventaslineasDestino =(PresupuestoVentasLineas) this.presupuestoventaslineasLogic.getPresupuestoVentasLineass().toArray()[this.jTableDatosPresupuestoVentasLineas.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						presupuestoventaslineasDestino =(PresupuestoVentasLineas) this.presupuestoventaslineass.toArray()[this.jTableDatosPresupuestoVentasLineas.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				}
				
				presupuestoventaslineasOrigen =presupuestoventaslineassSeleccionados.get(0);
				presupuestoventaslineasDestino =presupuestoventaslineassSeleccionados.get(1);
				
				this.setCopiarVariablesObjetosPresupuestoVentasLineas(presupuestoventaslineasOrigen,presupuestoventaslineasDestino,true,false);
				
				presupuestoventaslineasDestino.setsType("DUPLICADO");
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					actualizarLista(presupuestoventaslineasDestino,presupuestoventaslineasLogic.getPresupuestoVentasLineass());					
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(presupuestoventaslineasDestino,presupuestoventaslineass);
				}
				//ARCHITECTURE
				
				this.inicializarActualizarBindingTablaPresupuestoVentasLineas(false);
				
				//this.jTableDatosPresupuestoVentasLineas.setRowSelectionInterval(this.getIndiceNuevoPresupuestoVentasLineas(), this.getIndiceNuevoPresupuestoVentasLineas());
				
				int iLastRow =  this.jTableDatosPresupuestoVentasLineas.getRowCount () - 1;
				Rectangle rectangle = this.jTableDatosPresupuestoVentasLineas.getCellRect(iLastRow, 0, true);
				
				this.jTableDatosPresupuestoVentasLineas.scrollRectToVisible(rectangle);
				
				//FILA TOTALES
				if(this.conTotales) {
					//this.crearFilaTotales();
					
					this.inicializarActualizarBindingTablaPresupuestoVentasLineas(false);
				}
			} else {
				throw new Exception("DEBEN ESTAR SELECCIONADOS 2 REGISTROS");
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PresupuestoVentasLineasConstantesFunciones.CLASSNAME);
		
		}  finally {
			this.estaModoCopiar=false;
		}
	}
	
	public void jButtonVerFormPresupuestoVentasLineasActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			if(this.jInternalFrameDetalleFormPresupuestoVentasLineas==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			this.jInternalFrameDetalleFormPresupuestoVentasLineas.setSelected(true);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PresupuestoVentasLineasConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonMostrarOcultarPresupuestoVentasLineasActionPerformed(ActionEvent evt) throws Exception {   
		try {
			Boolean isVisible=this.jPanelParametrosReportesPresupuestoVentasLineas.isVisible();
			
			//BYDAN_BUSQUEDAS
			
			this.jTabbedPaneBusquedasPresupuestoVentasLineas.setVisible(!isVisible);			
			
			
			this.jPanelParametrosReportesPresupuestoVentasLineas.setVisible(!isVisible);
			this.jPanelPaginacionPresupuestoVentasLineas.setVisible(!isVisible);
			this.jPanelAccionesPresupuestoVentasLineas.setVisible(!isVisible);
							
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PresupuestoVentasLineasConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarPresupuestoVentasLineasActionPerformed(ActionEvent evt) throws Exception {   
		try {
			this.closingInternalFramePresupuestoVentasLineas();
			
			//if(this.jInternalFrameParent==null) {
				//this.dispose();
			/*} else {
				this.setVisible(false);
	        	this.setSelected(false);	
			}*/			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PresupuestoVentasLineasConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarReporteDinamicoPresupuestoVentasLineasActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.cerrarFrameReporteDinamicoPresupuestoVentasLineas();
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PresupuestoVentasLineasConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarImportacionPresupuestoVentasLineasActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.cerrarFrameImportacionPresupuestoVentasLineas();
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PresupuestoVentasLineasConstantesFunciones.CLASSNAME);
		}
	}
	
	
	public void jButtonAbrirOrderByPresupuestoVentasLineasActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			
			this.abrirInicializarFrameOrderByPresupuestoVentasLineas();
			
			this.abrirFrameOrderByPresupuestoVentasLineas();
			
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PresupuestoVentasLineasConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarOrderByPresupuestoVentasLineasActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.cerrarFrameOrderByPresupuestoVentasLineas();
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PresupuestoVentasLineasConstantesFunciones.CLASSNAME);
		}
	}
	
	public void abrirFrameDetallePresupuestoVentasLineas(Boolean esRelaciones) throws Exception {	    	        
	    try {
			//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false
			//this.jDesktopPane.add(jInternalFrameDetalleFormPresupuestoVentasLineas);
			
			if(!esRelaciones) {
				if(this.jInternalFrameDetalleFormPresupuestoVentasLineas.isMaximum()) {
					this.jInternalFrameDetalleFormPresupuestoVentasLineas.setMaximum(false);
				}								
				
	    		this.jInternalFrameDetalleFormPresupuestoVentasLineas.setSize(this.jInternalFrameDetalleFormPresupuestoVentasLineas.iWidthFormulario,this.jInternalFrameDetalleFormPresupuestoVentasLineas.iHeightFormulario);
	    	} else {
				if(this.iWidthScroll<this.jInternalFrameDetalleFormPresupuestoVentasLineas.iWidthFormularioMaximo) {
	    			this.jInternalFrameDetalleFormPresupuestoVentasLineas.setSize(this.iWidthScroll,this.iHeightScroll);
				} else {
					if(!this.jInternalFrameDetalleFormPresupuestoVentasLineas.isMaximum()) {
						this.jInternalFrameDetalleFormPresupuestoVentasLineas.setMaximum(true);
					}
				}
				
				if(this.jInternalFrameDetalleFormPresupuestoVentasLineas.jContentPaneDetallePresupuestoVentasLineas.getWidth() > this.getWidth()) {
					this.jInternalFrameDetalleFormPresupuestoVentasLineas.jTabbedPaneRelacionesPresupuestoVentasLineas.setMinimumSize(new Dimension(this.jInternalFrameDetalleFormPresupuestoVentasLineas.jContentPaneDetallePresupuestoVentasLineas.getWidth(),PresupuestoVentasLineasConstantesFunciones.ALTO_TABPANE_RELACIONES));
					this.jInternalFrameDetalleFormPresupuestoVentasLineas.jTabbedPaneRelacionesPresupuestoVentasLineas.setMaximumSize(new Dimension(this.jInternalFrameDetalleFormPresupuestoVentasLineas.jContentPaneDetallePresupuestoVentasLineas.getWidth(),PresupuestoVentasLineasConstantesFunciones.ALTO_TABPANE_RELACIONES));
					this.jInternalFrameDetalleFormPresupuestoVentasLineas.jTabbedPaneRelacionesPresupuestoVentasLineas.setPreferredSize(new Dimension(this.jInternalFrameDetalleFormPresupuestoVentasLineas.jContentPaneDetallePresupuestoVentasLineas.getWidth(),PresupuestoVentasLineasConstantesFunciones.ALTO_TABPANE_RELACIONES));
					
					Dimension dimension=new Dimension(); 
					
					
					
				}
	    	}
			
		
	       	this.jInternalFrameDetalleFormPresupuestoVentasLineas.setVisible(true);
	        this.jInternalFrameDetalleFormPresupuestoVentasLineas.setSelected(true);
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,PresupuestoVentasLineasConstantesFunciones.CLASSNAME);
	    }
	}
	
	
	public void abrirInicializarFrameOrderByPresupuestoVentasLineas() throws Exception {	    	        
	    try {
			if(this.jInternalFrameOrderByPresupuestoVentasLineas==null) {
				
				if(!this.conCargarMinimo) {
					this.jInternalFrameOrderByPresupuestoVentasLineas=new OrderByJInternalFrame(STIPO_TAMANIO_GENERAL,this.jButtonAbrirOrderByPresupuestoVentasLineas,false,this);
				} else {
					this.jInternalFrameOrderByPresupuestoVentasLineas=new OrderByJInternalFrame(STIPO_TAMANIO_GENERAL,this.jButtonAbrirOrderByPresupuestoVentasLineas,true,this);
				}
				
				this.jDesktopPane.add(this.jInternalFrameOrderByPresupuestoVentasLineas);
				this.jInternalFrameOrderByPresupuestoVentasLineas.setVisible(false);
				this.jInternalFrameOrderByPresupuestoVentasLineas.setSelected(false);
				
				this.jInternalFrameOrderByPresupuestoVentasLineas.getjButtonCerrarOrderBy().addActionListener (new ButtonActionListener(this,"CerrarOrderByPresupuestoVentasLineas"));
				
				this.inicializarActualizarBindingTablaOrderByPresupuestoVentasLineas();
			}
		} catch (final Exception e) {
			
		}
	}
	
	
	
	public void abrirInicializarFrameImportacionPresupuestoVentasLineas() throws Exception {	    	        
	    try {
			if(this.jInternalFrameImportacionPresupuestoVentasLineas==null) {
				
				this.jInternalFrameImportacionPresupuestoVentasLineas=new ImportacionJInternalFrame(PresupuestoVentasLineasConstantesFunciones.SCLASSWEBTITULO,this);			
				
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameImportacionPresupuestoVentasLineas);							
				
				this.jDesktopPane.add(this.jInternalFrameImportacionPresupuestoVentasLineas);
				this.jInternalFrameImportacionPresupuestoVentasLineas.setVisible(false);
				this.jInternalFrameImportacionPresupuestoVentasLineas.setSelected(false);


				this.jInternalFrameImportacionPresupuestoVentasLineas.getjButtonCerrarImportacion().addActionListener (new ButtonActionListener(this,"CerrarImportacionPresupuestoVentasLineas"));
				this.jInternalFrameImportacionPresupuestoVentasLineas.getjButtonGenerarImportacion().addActionListener (new ButtonActionListener(this,"GenerarImportacionPresupuestoVentasLineas"));
				this.jInternalFrameImportacionPresupuestoVentasLineas.getjButtonAbrirImportacion().addActionListener (new ButtonActionListener(this,"AbrirImportacionPresupuestoVentasLineas"));


			}
		} catch (final Exception e) {
			
		}
	}		
	
	
	
	public void abrirInicializarFrameReporteDinamicoPresupuestoVentasLineas() throws Exception {	    	        
	    try {
			
			if(this.jInternalFrameReporteDinamicoPresupuestoVentasLineas==null) {
				this.jInternalFrameReporteDinamicoPresupuestoVentasLineas=new ReporteDinamicoJInternalFrame(PresupuestoVentasLineasConstantesFunciones.SCLASSWEBTITULO,this);	
				
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameReporteDinamicoPresupuestoVentasLineas);	
	
	
				this.jDesktopPane.add(this.jInternalFrameReporteDinamicoPresupuestoVentasLineas);
				this.jInternalFrameReporteDinamicoPresupuestoVentasLineas.setVisible(false);
				this.jInternalFrameReporteDinamicoPresupuestoVentasLineas.setSelected(false);
	
	
	
				this.jInternalFrameReporteDinamicoPresupuestoVentasLineas.getjButtonCerrarReporteDinamico().addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoPresupuestoVentasLineas"));
				this.jInternalFrameReporteDinamicoPresupuestoVentasLineas.getjButtonGenerarReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoPresupuestoVentasLineas"));
				this.jInternalFrameReporteDinamicoPresupuestoVentasLineas.getjButtonGenerarExcelReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoPresupuestoVentasLineas"));
	
				this.inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualPresupuestoVentasLineas();
			}

		} catch (final Exception e) {
			
		}
	}	
	
	
	
		
					
	public void cerrarFrameDetallePresupuestoVentasLineas() throws Exception {	    	        
	    try {
			//this.jDesktopPane.add(jInternalFrameDetalleFormPresupuestoVentasLineas);
			
	       	this.jInternalFrameDetalleFormPresupuestoVentasLineas.setVisible(false);
	        this.jInternalFrameDetalleFormPresupuestoVentasLineas.setSelected(false);
			
			//this.jInternalFrameDetalleFormPresupuestoVentasLineas.dispose();
			//this.jInternalFrameDetalleFormPresupuestoVentasLineas=null;
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,PresupuestoVentasLineasConstantesFunciones.CLASSNAME);
	    }
	}
	
	
	public void abrirFrameReporteDinamicoPresupuestoVentasLineas() throws Exception {	    	        
	    try {
			
			this.jInternalFrameReporteDinamicoPresupuestoVentasLineas.setVisible(true);
	        this.jInternalFrameReporteDinamicoPresupuestoVentasLineas.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,PresupuestoVentasLineasConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void abrirFrameImportacionPresupuestoVentasLineas() throws Exception {	    	        		
	    try {			
			this.jInternalFrameImportacionPresupuestoVentasLineas.setVisible(true);
	        this.jInternalFrameImportacionPresupuestoVentasLineas.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,PresupuestoVentasLineasConstantesFunciones.CLASSNAME);
	    }		
	}	
	
	
	
	
	
	public void abrirFrameOrderByPresupuestoVentasLineas() throws Exception {	    	        		
	    try {
			this.jInternalFrameOrderByPresupuestoVentasLineas.setVisible(true);
	        this.jInternalFrameOrderByPresupuestoVentasLineas.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,PresupuestoVentasLineasConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void cerrarFrameOrderByPresupuestoVentasLineas() throws Exception {	    	        		
	    try {			
			this.jInternalFrameOrderByPresupuestoVentasLineas.setVisible(false);
	        this.jInternalFrameOrderByPresupuestoVentasLineas.setSelected(false);			
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,PresupuestoVentasLineasConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void cerrarFrameReporteDinamicoPresupuestoVentasLineas() throws Exception {			
	    try {
			this.jInternalFrameReporteDinamicoPresupuestoVentasLineas.setVisible(false);
	        this.jInternalFrameReporteDinamicoPresupuestoVentasLineas.setSelected(false);			
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,PresupuestoVentasLineasConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void cerrarFrameImportacionPresupuestoVentasLineas() throws Exception {	    	        		
	    try {
			this.jInternalFrameImportacionPresupuestoVentasLineas.setVisible(false);
	        this.jInternalFrameImportacionPresupuestoVentasLineas.setSelected(false);
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,PresupuestoVentasLineasConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	

				public void abrirFrameTreeVendedor(String sTipoProceso) { //throws Exception
					try {
						//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false
						//this.jDesktopPane.add(jInternalFrameTreeVendedor);
						VendedorBeanSwingJInternalFrame vendedorBeanSwingJInternalFrame=new VendedorBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
						vendedorBeanSwingJInternalFrame.setJInternalFrameParent(this);
						vendedorBeanSwingJInternalFrame.jInternalFrameTreeVendedor.setsTipoProceso(sTipoProceso);

						if(sTipoProceso.equals("BUSQUEDA_FK")) {
							vendedorBeanSwingJInternalFrame.jInternalFrameTreeVendedor.sTipoBusqueda="Vendedor";
						}

						vendedorBeanSwingJInternalFrame.getTodosVendedorArbol();
						vendedorBeanSwingJInternalFrame.jInternalFrameTreeVendedor.setVendedors(vendedorBeanSwingJInternalFrame.vendedorsArbol);
						vendedorBeanSwingJInternalFrame.jInternalFrameTreeVendedor.CargarTreeVendedor();
						vendedorBeanSwingJInternalFrame.jInternalFrameTreeVendedor.setVisible(true);
						vendedorBeanSwingJInternalFrame.jInternalFrameTreeVendedor.setSelected(true);

						//SE CAMBIA PARENT ORIGINAL PARA QUE RETORNE EN ESTE FORMULARIO
						vendedorBeanSwingJInternalFrame.jInternalFrameTreeVendedor.jInternalFrameParent=this;
						TitledBorder titledBorderPresupuestoVentasLineas=(TitledBorder)this.jScrollPanelDatosPresupuestoVentasLineas.getBorder();
						TitledBorder titledBorderVendedor=(TitledBorder)vendedorBeanSwingJInternalFrame.jScrollPanelDatosVendedor.getBorder();

						titledBorderVendedor.setTitle(titledBorderPresupuestoVentasLineas.getTitle() + " -> Vendedor");


						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,vendedorBeanSwingJInternalFrame);
						}
						this.jDesktopPane.add(vendedorBeanSwingJInternalFrame);

					} catch (Exception e) {
						e.getStackTrace();
						//Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
					}
				}

				public void cerrarFrameTreeVendedor(VendedorBeanSwingJInternalFrame jInternalFrameTreeVendedor) throws Exception {
					try {
						//jDesktopPane.add(jInternalFrameTreeVendedor);
						jInternalFrameTreeVendedor.setVisible(false);
						jInternalFrameTreeVendedor.setSelected(false);
						//jInternalFrameTreeVendedor.dispose();
						//jInternalFrameTreeVendedor=null;
					} catch (final java.beans.PropertyVetoException e) {
						FuncionesSwing.manageException(this, e,logger);
					}
				}

				public void abrirFrameTreeLinea(String sTipoProceso) { //throws Exception
					try {
						//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false
						//this.jDesktopPane.add(jInternalFrameTreeLinea);
						LineaBeanSwingJInternalFrame lineaBeanSwingJInternalFrame=new LineaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
						lineaBeanSwingJInternalFrame.setJInternalFrameParent(this);
						lineaBeanSwingJInternalFrame.jInternalFrameTreeLinea.setsTipoProceso(sTipoProceso);

						if(sTipoProceso.equals("BUSQUEDA_FK")) {
							lineaBeanSwingJInternalFrame.jInternalFrameTreeLinea.sTipoBusqueda="Linea";
						}

						lineaBeanSwingJInternalFrame.getTodosLineaArbol();
						lineaBeanSwingJInternalFrame.jInternalFrameTreeLinea.setLineas(lineaBeanSwingJInternalFrame.lineasArbol);
						lineaBeanSwingJInternalFrame.jInternalFrameTreeLinea.CargarTreeLinea();
						lineaBeanSwingJInternalFrame.jInternalFrameTreeLinea.setVisible(true);
						lineaBeanSwingJInternalFrame.jInternalFrameTreeLinea.setSelected(true);

						//SE CAMBIA PARENT ORIGINAL PARA QUE RETORNE EN ESTE FORMULARIO
						lineaBeanSwingJInternalFrame.jInternalFrameTreeLinea.jInternalFrameParent=this;
						TitledBorder titledBorderPresupuestoVentasLineas=(TitledBorder)this.jScrollPanelDatosPresupuestoVentasLineas.getBorder();
						TitledBorder titledBorderLinea=(TitledBorder)lineaBeanSwingJInternalFrame.jScrollPanelDatosLinea.getBorder();

						titledBorderLinea.setTitle(titledBorderPresupuestoVentasLineas.getTitle() + " -> Linea");


						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,lineaBeanSwingJInternalFrame);
						}
						this.jDesktopPane.add(lineaBeanSwingJInternalFrame);

					} catch (Exception e) {
						e.getStackTrace();
						//Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
					}
				}

				public void cerrarFrameTreeLinea(LineaBeanSwingJInternalFrame jInternalFrameTreeLinea) throws Exception {
					try {
						//jDesktopPane.add(jInternalFrameTreeLinea);
						jInternalFrameTreeLinea.setVisible(false);
						jInternalFrameTreeLinea.setSelected(false);
						//jInternalFrameTreeLinea.dispose();
						//jInternalFrameTreeLinea=null;
					} catch (final java.beans.PropertyVetoException e) {
						FuncionesSwing.manageException(this, e,logger);
					}
				}

				public void abrirFrameTreeLineaGrupo(String sTipoProceso) { //throws Exception
					try {
						//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false
						//this.jDesktopPane.add(jInternalFrameTreeLinea);
						LineaBeanSwingJInternalFrame lineaBeanSwingJInternalFrame=new LineaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
						lineaBeanSwingJInternalFrame.setJInternalFrameParent(this);
						lineaBeanSwingJInternalFrame.jInternalFrameTreeLinea.setsTipoProceso(sTipoProceso);

						if(sTipoProceso.equals("BUSQUEDA_FK")) {
							lineaBeanSwingJInternalFrame.jInternalFrameTreeLinea.sTipoBusqueda="LineaGrupo";
						}

						lineaBeanSwingJInternalFrame.getTodosLineaArbol();
						lineaBeanSwingJInternalFrame.jInternalFrameTreeLinea.setLineas(lineaBeanSwingJInternalFrame.lineasArbol);
						lineaBeanSwingJInternalFrame.jInternalFrameTreeLinea.CargarTreeLinea();
						lineaBeanSwingJInternalFrame.jInternalFrameTreeLinea.setVisible(true);
						lineaBeanSwingJInternalFrame.jInternalFrameTreeLinea.setSelected(true);

						//SE CAMBIA PARENT ORIGINAL PARA QUE RETORNE EN ESTE FORMULARIO
						lineaBeanSwingJInternalFrame.jInternalFrameTreeLinea.jInternalFrameParent=this;
						TitledBorder titledBorderPresupuestoVentasLineas=(TitledBorder)this.jScrollPanelDatosPresupuestoVentasLineas.getBorder();
						TitledBorder titledBorderLineaGrupo=(TitledBorder)lineaBeanSwingJInternalFrame.jScrollPanelDatosLinea.getBorder();

						titledBorderLineaGrupo.setTitle(titledBorderPresupuestoVentasLineas.getTitle() + " -> Linea");


						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,lineaBeanSwingJInternalFrame);
						}
						this.jDesktopPane.add(lineaBeanSwingJInternalFrame);

					} catch (Exception e) {
						e.getStackTrace();
						//Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
					}
				}

				public void cerrarFrameTreeLineaGrupo(LineaBeanSwingJInternalFrame jInternalFrameTreeLinea) throws Exception {
					try {
						//jDesktopPane.add(jInternalFrameTreeLinea);
						jInternalFrameTreeLinea.setVisible(false);
						jInternalFrameTreeLinea.setSelected(false);
						//jInternalFrameTreeLinea.dispose();
						//jInternalFrameTreeLinea=null;
					} catch (final java.beans.PropertyVetoException e) {
						FuncionesSwing.manageException(this, e,logger);
					}
				}

				public void abrirFrameTreeLineaCategoria(String sTipoProceso) { //throws Exception
					try {
						//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false
						//this.jDesktopPane.add(jInternalFrameTreeLinea);
						LineaBeanSwingJInternalFrame lineaBeanSwingJInternalFrame=new LineaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
						lineaBeanSwingJInternalFrame.setJInternalFrameParent(this);
						lineaBeanSwingJInternalFrame.jInternalFrameTreeLinea.setsTipoProceso(sTipoProceso);

						if(sTipoProceso.equals("BUSQUEDA_FK")) {
							lineaBeanSwingJInternalFrame.jInternalFrameTreeLinea.sTipoBusqueda="LineaCategoria";
						}

						lineaBeanSwingJInternalFrame.getTodosLineaArbol();
						lineaBeanSwingJInternalFrame.jInternalFrameTreeLinea.setLineas(lineaBeanSwingJInternalFrame.lineasArbol);
						lineaBeanSwingJInternalFrame.jInternalFrameTreeLinea.CargarTreeLinea();
						lineaBeanSwingJInternalFrame.jInternalFrameTreeLinea.setVisible(true);
						lineaBeanSwingJInternalFrame.jInternalFrameTreeLinea.setSelected(true);

						//SE CAMBIA PARENT ORIGINAL PARA QUE RETORNE EN ESTE FORMULARIO
						lineaBeanSwingJInternalFrame.jInternalFrameTreeLinea.jInternalFrameParent=this;
						TitledBorder titledBorderPresupuestoVentasLineas=(TitledBorder)this.jScrollPanelDatosPresupuestoVentasLineas.getBorder();
						TitledBorder titledBorderLineaCategoria=(TitledBorder)lineaBeanSwingJInternalFrame.jScrollPanelDatosLinea.getBorder();

						titledBorderLineaCategoria.setTitle(titledBorderPresupuestoVentasLineas.getTitle() + " -> Linea");


						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,lineaBeanSwingJInternalFrame);
						}
						this.jDesktopPane.add(lineaBeanSwingJInternalFrame);

					} catch (Exception e) {
						e.getStackTrace();
						//Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
					}
				}

				public void cerrarFrameTreeLineaCategoria(LineaBeanSwingJInternalFrame jInternalFrameTreeLinea) throws Exception {
					try {
						//jDesktopPane.add(jInternalFrameTreeLinea);
						jInternalFrameTreeLinea.setVisible(false);
						jInternalFrameTreeLinea.setSelected(false);
						//jInternalFrameTreeLinea.dispose();
						//jInternalFrameTreeLinea=null;
					} catch (final java.beans.PropertyVetoException e) {
						FuncionesSwing.manageException(this, e,logger);
					}
				}

				public void abrirFrameTreeLineaMarca(String sTipoProceso) { //throws Exception
					try {
						//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false
						//this.jDesktopPane.add(jInternalFrameTreeLinea);
						LineaBeanSwingJInternalFrame lineaBeanSwingJInternalFrame=new LineaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
						lineaBeanSwingJInternalFrame.setJInternalFrameParent(this);
						lineaBeanSwingJInternalFrame.jInternalFrameTreeLinea.setsTipoProceso(sTipoProceso);

						if(sTipoProceso.equals("BUSQUEDA_FK")) {
							lineaBeanSwingJInternalFrame.jInternalFrameTreeLinea.sTipoBusqueda="LineaMarca";
						}

						lineaBeanSwingJInternalFrame.getTodosLineaArbol();
						lineaBeanSwingJInternalFrame.jInternalFrameTreeLinea.setLineas(lineaBeanSwingJInternalFrame.lineasArbol);
						lineaBeanSwingJInternalFrame.jInternalFrameTreeLinea.CargarTreeLinea();
						lineaBeanSwingJInternalFrame.jInternalFrameTreeLinea.setVisible(true);
						lineaBeanSwingJInternalFrame.jInternalFrameTreeLinea.setSelected(true);

						//SE CAMBIA PARENT ORIGINAL PARA QUE RETORNE EN ESTE FORMULARIO
						lineaBeanSwingJInternalFrame.jInternalFrameTreeLinea.jInternalFrameParent=this;
						TitledBorder titledBorderPresupuestoVentasLineas=(TitledBorder)this.jScrollPanelDatosPresupuestoVentasLineas.getBorder();
						TitledBorder titledBorderLineaMarca=(TitledBorder)lineaBeanSwingJInternalFrame.jScrollPanelDatosLinea.getBorder();

						titledBorderLineaMarca.setTitle(titledBorderPresupuestoVentasLineas.getTitle() + " -> Linea");


						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,lineaBeanSwingJInternalFrame);
						}
						this.jDesktopPane.add(lineaBeanSwingJInternalFrame);

					} catch (Exception e) {
						e.getStackTrace();
						//Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
					}
				}

				public void cerrarFrameTreeLineaMarca(LineaBeanSwingJInternalFrame jInternalFrameTreeLinea) throws Exception {
					try {
						//jDesktopPane.add(jInternalFrameTreeLinea);
						jInternalFrameTreeLinea.setVisible(false);
						jInternalFrameTreeLinea.setSelected(false);
						//jInternalFrameTreeLinea.dispose();
						//jInternalFrameTreeLinea=null;
					} catch (final java.beans.PropertyVetoException e) {
						FuncionesSwing.manageException(this, e,logger);
					}
				}
	
	public void jButtonModificarPresupuestoVentasLineasActionPerformed(ActionEvent evt) throws Exception {   
		try {
			this.modificarPresupuestoVentasLineas(evt,-1,false);
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PresupuestoVentasLineasConstantesFunciones.CLASSNAME);
		}
	}
	
	public void modificarPresupuestoVentasLineas(ActionEvent evt,int rowIndex,Boolean esRelaciones) throws Exception {   
		try {
			int intSelectedRow = 0;	
			
			if(rowIndex>=0) {
				intSelectedRow=rowIndex;
			} else {
				intSelectedRow = this.jTableDatosPresupuestoVentasLineas.getSelectedRow();
			}
			
			this.habilitarDeshabilitarControlesPresupuestoVentasLineas(true);
			//this.isEsNuevoPresupuestoVentasLineas=false;
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoventaslineas =(PresupuestoVentasLineas) this.presupuestoventaslineasLogic.getPresupuestoVentasLineass().toArray()[this.jTableDatosPresupuestoVentasLineas.convertRowIndexToModel(intSelectedRow)];
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.presupuestoventaslineas =(PresupuestoVentasLineas) this.presupuestoventaslineass.toArray()[this.jTableDatosPresupuestoVentasLineas.convertRowIndexToModel(intSelectedRow)];
			}
			//ARCHITECTURE
			
			this.actualizarEstadoCeldasBotonesPresupuestoVentasLineas("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesPresupuestoVentasLineas(false) ;
			
			if(presupuestoventaslineasSessionBean.getConGuardarRelaciones()) {
			
			}
			
			if(PresupuestoVentasLineasJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetallePresupuestoVentasLineas(esRelaciones);
			}
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualPresupuestoVentasLineas(false) ;
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PresupuestoVentasLineasConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarFilaTablaPresupuestoVentasLineasActual() { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL
			Integer intSelectedRow = this.jTableDatosPresupuestoVentasLineas.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoventaslineas =(PresupuestoVentasLineas) this.presupuestoventaslineasLogic.getPresupuestoVentasLineass().toArray()[this.jTableDatosPresupuestoVentasLineas.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.presupuestoventaslineas =(PresupuestoVentasLineas) this.presupuestoventaslineass.toArray()[this.jTableDatosPresupuestoVentasLineas.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PresupuestoVentasLineasConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void seleccionarPresupuestoVentasLineas(ActionEvent evt,int rowIndex) throws Exception {   
		try {
			
			if(this.jInternalFrameDetalleFormPresupuestoVentasLineas==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			int intSelectedRow = 0;	
			
			if(rowIndex>=0) {
				intSelectedRow=rowIndex;
			} else {
				intSelectedRow = this.jTableDatosPresupuestoVentasLineas.getSelectedRow();
			}
			
			//this.habilitarDeshabilitarControlesPresupuestoVentasLineas(true);
			//this.isEsNuevoPresupuestoVentasLineas=false;
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoventaslineas =(PresupuestoVentasLineas) this.presupuestoventaslineasLogic.getPresupuestoVentasLineass().toArray()[this.jTableDatosPresupuestoVentasLineas.convertRowIndexToModel(intSelectedRow)];
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.presupuestoventaslineas =(PresupuestoVentasLineas) this.presupuestoventaslineass.toArray()[this.jTableDatosPresupuestoVentasLineas.convertRowIndexToModel(intSelectedRow)];
			}
			//ARCHITECTURE
			
			this.jInternalFrameParent.setIdCombosCodigoDesdeBusquedaForeignKey(this.presupuestoventaslineas.getId(),this.sTipoBusqueda);
			
			this.dispose();
			
			//this.actualizarEstadoCeldasBotonesPresupuestoVentasLineas("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
			//NO FUNCIONA BINDINGS
			/*
			this.inicializarActualizarBindingBotonesPresupuestoVentasLineas(false) ;
			
			if(PresupuestoVentasLineasJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetallePresupuestoVentasLineas(esRelaciones);
			}
			*/
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualPresupuestoVentasLineas(false) ;
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PresupuestoVentasLineasConstantesFunciones.CLASSNAME);
		}
	}		
	
	public void setIdCombosCodigoDesdeBusquedaForeignKey(Long id,String sType)throws Exception{
		
		try {
		} catch(Exception e) {
			throw e;
		}
	}
	
					
	
	public void recargarComboTablaVendedor(List<Vendedor> vendedorsForeignKey)throws Exception{
		TableColumn tableColumnVendedor=this.jTableDatosPresupuestoVentasLineas.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPresupuestoVentasLineas,PresupuestoVentasLineasConstantesFunciones.LABEL_IDVENDEDOR));
		TableCellEditor tableCellEditorVendedor =tableColumnVendedor.getCellEditor();

		VendedorTableCell vendedorTableCellFk=(VendedorTableCell)tableCellEditorVendedor;

		if(vendedorTableCellFk!=null) {
			vendedorTableCellFk.setvendedorsForeignKey(vendedorsForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosPresupuestoVentasLineas.getSelectedRow();

		//if(intSelectedRow<=0) {
			//vendedorTableCellFk.setRowActual(intSelectedRow);
			//vendedorTableCellFk.setvendedorsForeignKeyActual(vendedorsForeignKey);
		//}


		if(vendedorTableCellFk!=null) {
			vendedorTableCellFk.RecargarVendedorsForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaPais(List<Pais> paissForeignKey)throws Exception{
		TableColumn tableColumnPais=this.jTableDatosPresupuestoVentasLineas.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPresupuestoVentasLineas,PresupuestoVentasLineasConstantesFunciones.LABEL_IDPAIS));
		TableCellEditor tableCellEditorPais =tableColumnPais.getCellEditor();

		PaisTableCell paisTableCellFk=(PaisTableCell)tableCellEditorPais;

		if(paisTableCellFk!=null) {
			paisTableCellFk.setpaissForeignKey(paissForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosPresupuestoVentasLineas.getSelectedRow();

		//if(intSelectedRow<=0) {
			//paisTableCellFk.setRowActual(intSelectedRow);
			//paisTableCellFk.setpaissForeignKeyActual(paissForeignKey);
		//}


		if(paisTableCellFk!=null) {
			paisTableCellFk.RecargarPaissForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaCiudad(List<Ciudad> ciudadsForeignKey)throws Exception{
		TableColumn tableColumnCiudad=this.jTableDatosPresupuestoVentasLineas.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPresupuestoVentasLineas,PresupuestoVentasLineasConstantesFunciones.LABEL_IDCIUDAD));
		TableCellEditor tableCellEditorCiudad =tableColumnCiudad.getCellEditor();

		CiudadTableCell ciudadTableCellFk=(CiudadTableCell)tableCellEditorCiudad;

		if(ciudadTableCellFk!=null) {
			ciudadTableCellFk.setciudadsForeignKey(ciudadsForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosPresupuestoVentasLineas.getSelectedRow();

		//if(intSelectedRow<=0) {
			//ciudadTableCellFk.setRowActual(intSelectedRow);
			//ciudadTableCellFk.setciudadsForeignKeyActual(ciudadsForeignKey);
		//}


		if(ciudadTableCellFk!=null) {
			ciudadTableCellFk.RecargarCiudadsForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaZona(List<Zona> zonasForeignKey)throws Exception{
		TableColumn tableColumnZona=this.jTableDatosPresupuestoVentasLineas.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPresupuestoVentasLineas,PresupuestoVentasLineasConstantesFunciones.LABEL_IDZONA));
		TableCellEditor tableCellEditorZona =tableColumnZona.getCellEditor();

		ZonaTableCell zonaTableCellFk=(ZonaTableCell)tableCellEditorZona;

		if(zonaTableCellFk!=null) {
			zonaTableCellFk.setzonasForeignKey(zonasForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosPresupuestoVentasLineas.getSelectedRow();

		//if(intSelectedRow<=0) {
			//zonaTableCellFk.setRowActual(intSelectedRow);
			//zonaTableCellFk.setzonasForeignKeyActual(zonasForeignKey);
		//}


		if(zonaTableCellFk!=null) {
			zonaTableCellFk.RecargarZonasForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaLinea(List<Linea> lineasForeignKey)throws Exception{
		TableColumn tableColumnLinea=this.jTableDatosPresupuestoVentasLineas.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPresupuestoVentasLineas,PresupuestoVentasLineasConstantesFunciones.LABEL_IDLINEA));
		TableCellEditor tableCellEditorLinea =tableColumnLinea.getCellEditor();

		LineaTableCell lineaTableCellFk=(LineaTableCell)tableCellEditorLinea;

		if(lineaTableCellFk!=null) {
			lineaTableCellFk.setlineasForeignKey(lineasForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosPresupuestoVentasLineas.getSelectedRow();

		//if(intSelectedRow<=0) {
			//lineaTableCellFk.setRowActual(intSelectedRow);
			//lineaTableCellFk.setlineasForeignKeyActual(lineasForeignKey);
		//}


		if(lineaTableCellFk!=null) {
			lineaTableCellFk.RecargarLineasForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaLineaGrupo(List<Linea> lineagruposForeignKey)throws Exception{
		TableColumn tableColumnLineaGrupo=this.jTableDatosPresupuestoVentasLineas.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPresupuestoVentasLineas,PresupuestoVentasLineasConstantesFunciones.LABEL_IDLINEAGRUPO));
		TableCellEditor tableCellEditorLineaGrupo =tableColumnLineaGrupo.getCellEditor();

		LineaTableCell lineaTableCellFk=(LineaTableCell)tableCellEditorLineaGrupo;

		if(lineaTableCellFk!=null) {
			lineaTableCellFk.setlineasForeignKey(lineagruposForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosPresupuestoVentasLineas.getSelectedRow();

		//if(intSelectedRow<=0) {
			//lineaTableCellFk.setRowActual(intSelectedRow);
			//lineaTableCellFk.setlineasForeignKeyActual(lineagruposForeignKey);
		//}


		if(lineaTableCellFk!=null) {
			lineaTableCellFk.RecargarLineasForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaLineaCategoria(List<Linea> lineacategoriasForeignKey)throws Exception{
		TableColumn tableColumnLineaCategoria=this.jTableDatosPresupuestoVentasLineas.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPresupuestoVentasLineas,PresupuestoVentasLineasConstantesFunciones.LABEL_IDLINEACATEGORIA));
		TableCellEditor tableCellEditorLineaCategoria =tableColumnLineaCategoria.getCellEditor();

		LineaTableCell lineaTableCellFk=(LineaTableCell)tableCellEditorLineaCategoria;

		if(lineaTableCellFk!=null) {
			lineaTableCellFk.setlineasForeignKey(lineacategoriasForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosPresupuestoVentasLineas.getSelectedRow();

		//if(intSelectedRow<=0) {
			//lineaTableCellFk.setRowActual(intSelectedRow);
			//lineaTableCellFk.setlineasForeignKeyActual(lineacategoriasForeignKey);
		//}


		if(lineaTableCellFk!=null) {
			lineaTableCellFk.RecargarLineasForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaLineaMarca(List<Linea> lineamarcasForeignKey)throws Exception{
		TableColumn tableColumnLineaMarca=this.jTableDatosPresupuestoVentasLineas.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPresupuestoVentasLineas,PresupuestoVentasLineasConstantesFunciones.LABEL_IDLINEAMARCA));
		TableCellEditor tableCellEditorLineaMarca =tableColumnLineaMarca.getCellEditor();

		LineaTableCell lineaTableCellFk=(LineaTableCell)tableCellEditorLineaMarca;

		if(lineaTableCellFk!=null) {
			lineaTableCellFk.setlineasForeignKey(lineamarcasForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosPresupuestoVentasLineas.getSelectedRow();

		//if(intSelectedRow<=0) {
			//lineaTableCellFk.setRowActual(intSelectedRow);
			//lineaTableCellFk.setlineasForeignKeyActual(lineamarcasForeignKey);
		//}


		if(lineaTableCellFk!=null) {
			lineaTableCellFk.RecargarLineasForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	
	public void jButtonActualizarPresupuestoVentasLineasActionPerformed(ActionEvent evt) throws Exception {   
		try	{
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoventaslineasLogic.getNewConnexionToDeep("");
			}
			
			this.inicializarActualizarBindingParametrosReportesPresupuestoVentasLineas(false);
			
			//if(!this.isEsNuevoPresupuestoVentasLineas) {								
				int intSelectedRow = this.jTableDatosPresupuestoVentasLineas.getSelectedRow();	
				
				//SE PIEDE INDICE SELECTED CON FILA TOTALES, ASEGURARSE QUE OBJETO ACTUAL ESTE EN FORMULARIO
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoventaslineas =(PresupuestoVentasLineas) this.presupuestoventaslineasLogic.getPresupuestoVentasLineass().toArray()[this.jTableDatosPresupuestoVentasLineas.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.presupuestoventaslineas =(PresupuestoVentasLineas) this.presupuestoventaslineass.toArray()[this.jTableDatosPresupuestoVentasLineas.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
			//}
				
			if(PresupuestoVentasLineasJInternalFrame.ISBINDING_MANUAL_TABLA) {
				this.setVariablesFormularioToObjetoActualPresupuestoVentasLineas(this.presupuestoventaslineas,true);
				this.setVariablesFormularioToObjetoActualForeignKeysPresupuestoVentasLineas(this.presupuestoventaslineas);
				
			}
			
			if(this.permiteMantenimiento(this.presupuestoventaslineas)) {	
				this.actualizar();
				
				if(!this.isGuardarCambiosEnLote && !this.presupuestoventaslineasSessionBean.getEsGuardarRelacionado()) {
					this.procesarBusqueda(sAccionBusqueda);
					
					this.isEsNuevoPresupuestoVentasLineas=true;
					this.inicializarActualizarBindingTablaPresupuestoVentasLineas(false);
					this.isEsNuevoPresupuestoVentasLineas=false;
				
				} else {					
					
					//PARA RELACIONADO ACTUALIZAR FILA TOTALES
					this.isEsNuevoPresupuestoVentasLineas=true;
					this.procesoActualizarFilaTotales(false,"MANTENIMIENTO");
					this.isEsNuevoPresupuestoVentasLineas=false;
				}
						
								
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingBotonesPresupuestoVentasLineas(false);
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualPresupuestoVentasLineas(false);
				
				this.habilitarDeshabilitarControlesPresupuestoVentasLineas(false);
			
												
				
				if(PresupuestoVentasLineasJInternalFrame.CON_DATOS_FRAME) {
					if(!this.isPostAccionSinCerrar) {
						this.cerrarFrameDetallePresupuestoVentasLineas();
					}
				}
				
				if(this.isPostAccionNuevo) {
					this.jButtonNuevoPresupuestoVentasLineasActionPerformed(evt,presupuestoventaslineasSessionBean.getConGuardarRelaciones());
				} else {
					if(this.isPostAccionSinCerrar) {
						Integer intSelectedRowActual=this.getIndiceActualPresupuestoVentasLineas(this.presupuestoventaslineas,intSelectedRow);
						
						if(intSelectedRow>-1) {
							this.jTableDatosPresupuestoVentasLineas.setRowSelectionInterval(intSelectedRowActual, intSelectedRowActual);
							this.jButtonIdActionPerformed(evt,intSelectedRowActual,presupuestoventaslineasSessionBean.getConGuardarRelaciones(),false);
						}
					}
				}
				
				this.cancelar(false);
				
			} else {
				JOptionPane.showMessageDialog(this,"ESTE REGISTRO NO PUEDE ACTUALIZARSE","EDITAR",JOptionPane.ERROR_MESSAGE);
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoventaslineasLogic.commitNewConnexionToDeep();
			}
			
			
			if(this.jInternalFrameParent!=null) { //&& this.isEsMantenimientoRelacionado) {
				Boolean esUsoDesdeHijoLocal=true;
				String sTipo="Formulario";
				Boolean conIrServidorAplicacionParent=false;
				Long id=this.presupuestoventaslineas.getId();
				ArrayList<String> arrClasses=new ArrayList<String>();
				
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();
				
				generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
				generalEntityParameterGeneral.setsDominio("Formulario");
				generalEntityParameterGeneral.setsDominioTipo(PresupuestoVentasLineas.class.getName());
				
				this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",PresupuestoVentasLineas.class.getName(),sTipo,"FORMULARIO",esControlTabla,conIrServidorAplicacionParent,
					id,this, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.FORM,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
					evt,generalEntityParameterGeneral,this);
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoventaslineasLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,PresupuestoVentasLineasConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoventaslineasLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonEliminarPresupuestoVentasLineasActionPerformed(ActionEvent evt) throws Exception {   
		try	{
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoventaslineasLogic.getNewConnexionToDeep("");
			}
			
			int intSelectedRow = this.jTableDatosPresupuestoVentasLineas.getSelectedRow();	       
							
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoventaslineas =(PresupuestoVentasLineas) this.presupuestoventaslineasLogic.getPresupuestoVentasLineass().toArray()[this.jTableDatosPresupuestoVentasLineas.convertRowIndexToModel(intSelectedRow)];
				this.presupuestoventaslineas.setIsDeleted(true);
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.presupuestoventaslineas =(PresupuestoVentasLineas) this.presupuestoventaslineass.toArray()[this.jTableDatosPresupuestoVentasLineas.convertRowIndexToModel(intSelectedRow)];
				this.presupuestoventaslineas.setIsDeleted(true);
			}
			//ARCHITECTURE
			
			if(this.permiteMantenimiento(this.presupuestoventaslineas)) {
				this.eliminar();
				
				if(!this.isGuardarCambiosEnLote && !this.presupuestoventaslineasSessionBean.getEsGuardarRelacionado()) {
					this.procesarBusqueda(sAccionBusqueda);
				}
				
				((PresupuestoVentasLineasModel) this.jTableDatosPresupuestoVentasLineas.getModel()).fireTableRowsDeleted(intSelectedRow,intSelectedRow);
				
				this.isEsNuevoPresupuestoVentasLineas=true;
				this.inicializarActualizarBindingTablaPresupuestoVentasLineas(false);
				this.isEsNuevoPresupuestoVentasLineas=false;									
					
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingBotonesPresupuestoVentasLineas(false);
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualPresupuestoVentasLineas(false);
				
				this.habilitarDeshabilitarControlesPresupuestoVentasLineas(false);
				
				
				
				if(PresupuestoVentasLineasJInternalFrame.CON_DATOS_FRAME) {
					this.cerrarFrameDetallePresupuestoVentasLineas();
				}
			} else {
				JOptionPane.showMessageDialog(this,"ESTE REGISTRO NO PUEDE ACTUALIZARSE","EDITAR",JOptionPane.ERROR_MESSAGE);
			}	
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoventaslineasLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoventaslineasLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PresupuestoVentasLineasConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoventaslineasLogic.closeNewConnexionToDeep();
			}
		}		
	}
		
	public void jButtonCancelarPresupuestoVentasLineasActionPerformed(ActionEvent evt) throws Exception {                                         	   	       
	  	try {
			if(jTableDatosPresupuestoVentasLineas.getRowCount()>=1) {
				jTableDatosPresupuestoVentasLineas.removeRowSelectionInterval(0, jTableDatosPresupuestoVentasLineas.getRowCount()-1);						
			}
						
			this.invalidValues=new InvalidValue[0];
			this.habilitarDeshabilitarControlesPresupuestoVentasLineas(false);
			this.cancelar(true);			
			this.inicializarActualizarBindingTablaPresupuestoVentasLineas(false);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesPresupuestoVentasLineas(false) ;
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualPresupuestoVentasLineas(false) ;
			
			this.isEsNuevoPresupuestoVentasLineas=false;
			
			if(PresupuestoVentasLineasJInternalFrame.CON_DATOS_FRAME) {
				this.cerrarFrameDetallePresupuestoVentasLineas();
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PresupuestoVentasLineasConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonGuardarCambiosPresupuestoVentasLineasActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoventaslineasLogic.getNewConnexionToDeep("");
			}
			
			//this.estaModoGuardarCambios=true;
			
	    	this.guardarCambios();
			
			if(!this.isErrorGuardar) {
				this.procesarBusqueda(this.sAccionBusqueda);
				
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingPresupuestoVentasLineas(false);
				
				//SI ES MANUAL
				if(PresupuestoVentasLineasJInternalFrame.ISBINDING_MANUAL) {				
					//this.inicializarActualizarBindingManualPresupuestoVentasLineas();				
				}
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoventaslineasLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoventaslineasLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PresupuestoVentasLineasConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoventaslineasLogic.closeNewConnexionToDeep();
			}
			
			//this.estaModoGuardarCambios=false;
		}
	}
	
	public void jButtonNuevoGuardarCambiosPresupuestoVentasLineasActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			
			this.estaModoNuevo=true;
			this.estaModoNuevoGuardarCambios=true;
			
			//LO HACE NUEVOPREPARAR
			//this.iIdNuevoPresupuestoVentasLineas--;			
			//PresupuestoVentasLineas presupuestoventaslineasAux= new PresupuestoVentasLineas();			
			//presupuestoventaslineasAux.setId(this.iIdNuevoPresupuestoVentasLineas);
			
			if(this.jInternalFrameDetalleFormPresupuestoVentasLineas==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			this.aumentarTamanioFilaNuevaTablaPresupuestoVentasLineas();
			
			if(this.conTotales) {
				this.quitarFilaTotales();
			}
			
			this.nuevoPreparar(true);
			
			this.setVariablesFormularioToObjetoActualForeignKeysPresupuestoVentasLineas(this.presupuestoventaslineas);
			
			this.presupuestoventaslineas.setsType("NUEVO_GUARDAR_CAMBIOS");
			
			//LO HACE NUEVOPREPARAR
			/*
			if(Constantes.ISUSAEJBLOGICLAYER) {				
				this.presupuestoventaslineasLogic.getPresupuestoVentasLineass().add(this.presupuestoventaslineasAux);
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				this.presupuestoventaslineass.add(this.presupuestoventaslineasAux);				
			}
			*/
			
			this.inicializarActualizarBindingTablaPresupuestoVentasLineas(false);
			
			this.jTableDatosPresupuestoVentasLineas.setRowSelectionInterval(this.getIndiceNuevoPresupuestoVentasLineas(), this.getIndiceNuevoPresupuestoVentasLineas());
			
			int iLastRow =  this.jTableDatosPresupuestoVentasLineas.getRowCount () - 1;
			Rectangle rectangle = this.jTableDatosPresupuestoVentasLineas.getCellRect(iLastRow, 0, true);
			
			this.jTableDatosPresupuestoVentasLineas.scrollRectToVisible(rectangle);
			
			//FILA TOTALES
			if(this.conTotales) {
				this.crearFilaTotales();
				
				this.inicializarActualizarBindingTablaPresupuestoVentasLineas(false);
			}

		} catch(Exception e) {									
			FuncionesSwing.manageException(this, e,logger,PresupuestoVentasLineasConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoNuevo=false;
			this.estaModoNuevoGuardarCambios=false;
		}
	}		
	
	public void jButtonRecargarInformacionPresupuestoVentasLineasActionPerformed(ActionEvent evt) throws Exception {    		
		try {
			this.iNumeroPaginacionPagina=0;
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoventaslineasLogic.getNewConnexionToDeep("");
			}
			
			this.inicializarActualizarBindingPresupuestoVentasLineas(false,false);
			
	    	this.recargarInformacion();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingPresupuestoVentasLineas(false);
			
			//SI ES MANUAL
			if(PresupuestoVentasLineasJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualPresupuestoVentasLineas();
			}
			
			//this.abrirFrameTreePresupuestoVentasLineas();
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoventaslineasLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoventaslineasLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,PresupuestoVentasLineasConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoventaslineasLogic.closeNewConnexionToDeep();
			}
		}	
	}
	
	
	public void jButtonGenerarImportacionPresupuestoVentasLineasActionPerformed(ActionEvent evt) throws Exception {    				
		BufferedReader bufferedReader = null;
		String sXmlStringFile="";
		String sPath="";
		this.arrDatoGeneralMinimos= new  ArrayList<DatoGeneralMinimo>();
		DatoGeneralMinimo datoGeneralMinimo=new DatoGeneralMinimo();
		String sLine="";
		
		try {			
			if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE PROCESAR IMPORTACION DE Presupuesto Ventas_lineasES ?", "MANTENIMIENTO DE Presupuesto Ventas_lineas", JOptionPane.OK_CANCEL_OPTION) == 0) {
				bufferedReader = new BufferedReader(new FileReader(this.jInternalFrameImportacionPresupuestoVentasLineas.getFileImportacion().getAbsolutePath()));
								
				while ((sLine = bufferedReader.readLine()) != null) {
					datoGeneralMinimo=new DatoGeneralMinimo();
					datoGeneralMinimo.setsDescripcion(sLine);
					
					this.arrDatoGeneralMinimos.add(datoGeneralMinimo);
				}
				
				this.actualizarParametrosGeneralPresupuestoVentasLineas();
						
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {						
					this.presupuestoventaslineasReturnGeneral=presupuestoventaslineasLogic.procesarImportacionPresupuestoVentasLineassWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this.arrDatoGeneralMinimos,this.presupuestoventaslineasParameterGeneral);
						
				} else if(Constantes.ISUSAEJBREMOTE) {
						
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
						
				this.procesarPresupuestoVentasLineasReturnGeneral();
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PresupuestoVentasLineasConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedReader != null) {
				bufferedReader.close();
			}	
		}				
	}
	
	
	
	public void jButtonAbrirImportacionPresupuestoVentasLineasActionPerformed(ActionEvent evt) throws Exception {    				
		BufferedWriter bufferedWriter = null;
		String sXmlStringFile="";
		String sPath="";
		
		try {
			int iReturnArchivo = this.jInternalFrameImportacionPresupuestoVentasLineas.getjFileChooserImportacion().showOpenDialog(this);
 
            if (iReturnArchivo == JFileChooser.APPROVE_OPTION) {
            	this.jInternalFrameImportacionPresupuestoVentasLineas.setFileImportacion(this.jInternalFrameImportacionPresupuestoVentasLineas.getjFileChooserImportacion().getSelectedFile());
            	
				this.jInternalFrameImportacionPresupuestoVentasLineas.getjTextFieldPathArchivoImportacion().setText(this.jInternalFrameImportacionPresupuestoVentasLineas.getFileImportacion().getName());
				
				//System.out.println("ARCHIVO ESCOGIDO: "+this.fileImportacionPresupuestoVentasLineas.getName());
				
            } else {
                //System.out.println("CANCELAR SELECCION");
				this.jInternalFrameImportacionPresupuestoVentasLineas.getjTextFieldPathArchivoImportacion().setText("SELECCION CANCELADA");
            }			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PresupuestoVentasLineasConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedWriter != null) {
				bufferedWriter.close();
			}	
		}		
	}
	
	
	public void jButtonGenerarReporteDinamicoPresupuestoVentasLineasActionPerformed(ActionEvent evt) throws Exception {    		
		BufferedWriter bufferedWriter = null;
		String sXmlStringFile="";
		String sPath="";
		
		try {	
		
		ArrayList<PresupuestoVentasLineas> presupuestoventaslineassSeleccionados=new ArrayList<PresupuestoVentasLineas>();		

		presupuestoventaslineassSeleccionados=this.getPresupuestoVentasLineassSeleccionados(true);
		
		
		this.sTipoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoPresupuestoVentasLineas.getjComboBoxTiposReportesDinamico().getSelectedItem()).getsCodigo();
		
		this.sTipoArchivoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoPresupuestoVentasLineas.getjComboBoxTiposArchivosReportesDinamico().getSelectedItem()).getsCodigo();			
		
		
		this.sTipoArchivoReporte=this.sTipoArchivoReporteDinamico;
		
		//this.sTipoReporteExtra="Base";
		
			InputStream reportFile=null;
			InputStream imageFile=null;
			
			imageFile=AuxiliarImagenes.class.getResourceAsStream("LogoReporte.jpg");			
				
		
		
			reportFile = AuxiliarReportes.class.getResourceAsStream("PresupuestoVentasLineasBaseDesign.jrxml");	
			
			sPath=this.parametroGeneralUsuario.getpath_exportar()+"PresupuestoVentasLineasBaseDesign.jrxml";
			
			sXmlStringFile=Funciones2.getStringFromInputStream(reportFile);
						
			bufferedWriter = new BufferedWriter(new FileWriter(sPath));
			
			
			sXmlStringFile=this.actualizarReporteDinamico(sXmlStringFile);
			
			
			bufferedWriter.write(sXmlStringFile);
			
			bufferedWriter.close();
			
			try{JasperCompileManager.compileReportToFile(sPath);}catch(Exception e){e.printStackTrace();}
			
			this.actualizarVariablesTipoReporte(false,true,false,sPath);
			
			/*
			this.esReporteDinamico=true;
			this.sPathReporteDinamico=sPath.replace(".jrxml",".jasper");
			this.sTipoReporteExtra="";
			*/
			
			this.generarReportePresupuestoVentasLineass("Todos",presupuestoventaslineassSeleccionados );

			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.presupuestoventaslineasSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				//DEBE APARECER EL REPORTE DIRECTAMENTE
				//JOptionPane.showMessageDialog(this,"GENERADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Presupuesto Ventas_lineas",JOptionPane.INFORMATION_MESSAGE);
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PresupuestoVentasLineasConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedWriter != null) {
				bufferedWriter.close();
			}	
		}
	}		
	
	
	public String actualizarReporteDinamico(String sXmlStringFile) {				
		Reporte reporte=new Reporte();
		Integer iAnchoMaximoVertical=535;//781,782
		Integer iAnchoMaximoHorizontal=782;
		Integer iAnchoSum=0;
		Integer iAnchoColumna=0;
		
		Integer iAnchoMargenes=60;
		String sWidthGrafico="535";
		
		for(int index:this.jInternalFrameReporteDinamicoPresupuestoVentasLineas.getjListColumnasSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoPresupuestoVentasLineas.getjListColumnasSelectReporte().getModel().getElementAt(index);
			
			switch(reporte.getsCodigo()) {
				
				case PresupuestoVentasLineasConstantesFunciones.LABEL_IDEMPRESA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Empresa_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Empresa_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Empresa_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Empresa_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PresupuestoVentasLineasConstantesFunciones.LABEL_IDSUCURSAL:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Sucursal_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Sucursal_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Sucursal_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Sucursal_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PresupuestoVentasLineasConstantesFunciones.LABEL_IDEJERCICIO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Ejercicio_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Ejercicio_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Ejercicio_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Ejercicio_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PresupuestoVentasLineasConstantesFunciones.LABEL_IDPERIODO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Periodo_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Periodo_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Periodo_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Periodo_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PresupuestoVentasLineasConstantesFunciones.LABEL_IDVENDEDOR:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Vendedor_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Vendedor_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Vendedor_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Vendedor_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PresupuestoVentasLineasConstantesFunciones.LABEL_IDPAIS:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Pais_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Pais_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Pais_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Pais_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PresupuestoVentasLineasConstantesFunciones.LABEL_IDCIUDAD:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Ciudad_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Ciudad_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Ciudad_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Ciudad_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PresupuestoVentasLineasConstantesFunciones.LABEL_IDZONA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Zona_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Zona_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Zona_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Zona_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PresupuestoVentasLineasConstantesFunciones.LABEL_IDLINEA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Linea_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Linea_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Linea_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Linea_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PresupuestoVentasLineasConstantesFunciones.LABEL_IDLINEAGRUPO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_LineaGrupo_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_LineaGrupo_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_LineaGrupo_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_LineaGrupo_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PresupuestoVentasLineasConstantesFunciones.LABEL_IDLINEACATEGORIA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_LineaCategoria_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_LineaCategoria_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_LineaCategoria_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_LineaCategoria_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PresupuestoVentasLineasConstantesFunciones.LABEL_IDLINEAMARCA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_LineaMarca_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_LineaMarca_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_LineaMarca_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_LineaMarca_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PresupuestoVentasLineasConstantesFunciones.LABEL_PRECIO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_ecio_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_ecio_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_ecio_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_ecio_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PresupuestoVentasLineasConstantesFunciones.LABEL_CANTIDAD:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_ntidad_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_ntidad_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_ntidad_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_ntidad_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PresupuestoVentasLineasConstantesFunciones.LABEL_VALOR:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_lor_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_lor_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_lor_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_lor_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PresupuestoVentasLineasConstantesFunciones.LABEL_PORCENTAJE:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_rcentaje_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_rcentaje_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_rcentaje_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_rcentaje_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PresupuestoVentasLineasConstantesFunciones.LABEL_CANTIDADTOTAL:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_ntidadTotal_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_ntidadTotal_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_ntidadTotal_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_ntidadTotal_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PresupuestoVentasLineasConstantesFunciones.LABEL_VALORTOTAL:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_lorTotal_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_lorTotal_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_lorTotal_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_lorTotal_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;
					
				default :
					break;
			}
		}
		
		iAnchoSum+=iAnchoMargenes;
		
		if(iAnchoSum>iAnchoMaximoVertical) {
			sXmlStringFile=sXmlStringFile.replace("595", "842");
			//sXmlStringFile=sXmlStringFile.replace("842", "595");
			sXmlStringFile=sXmlStringFile.replace("535", "782");
			sXmlStringFile=sXmlStringFile.replace("Portrait", "Landscape");			
			sWidthGrafico="782";
		
		} else {
			sXmlStringFile=sXmlStringFile.replace("842", "595");
			//sXmlStringFile=sXmlStringFile.replace("595", "842");
			sXmlStringFile=sXmlStringFile.replace("782", "535");
			sXmlStringFile=sXmlStringFile.replace("Landscape", "Portrait");
			sWidthGrafico="535";
		}
		
		if(this.jInternalFrameReporteDinamicoPresupuestoVentasLineas.getjCheckBoxConGraficoDinamico().isSelected()) {
			sXmlStringFile=this.actualizarGraficoReporteDinamico(sXmlStringFile,sWidthGrafico);
		} else {
			sXmlStringFile=sXmlStringFile.replace("colancho_summary_colancho", "30");
		}
		
		return sXmlStringFile;
	}
	
	
	
	public String actualizarGraficoReporteDinamico(String sXmlStringFile,String sWidthGrafico) {		
		String strGrafico="";		
		String sTipo="NORMAL";
		String strCategorySeries="";
		String sNombreCampoCategoria="";
		String sNombreCampoCategoriaValor="";
		Reporte reporte=new Reporte();
		Reporte reporteCategoriaValor=new Reporte();
		Reporte reporteTipoGraficoReporte=new Reporte();
		Boolean existe=false;
		
		sXmlStringFile=sXmlStringFile.replace("colancho_summary_colancho", "280");
		
		//CATEGORIA GRAFICO				
		reporte=((Reporte)this.jInternalFrameReporteDinamicoPresupuestoVentasLineas.getjComboBoxColumnaCategoriaGrafico().getSelectedItem());
				
		//TIPO GRAFICO REPORTE
		reporteTipoGraficoReporte=((Reporte)this.jInternalFrameReporteDinamicoPresupuestoVentasLineas.getjComboBoxTiposGraficosReportesDinamico().getSelectedItem());
		
		String sTipoGraficoReporte=reporteTipoGraficoReporte.getsCodigo();
		
		switch(reporte.getsCodigo()) {
			
				case PresupuestoVentasLineasConstantesFunciones.LABEL_IDEMPRESA:
					sNombreCampoCategoria="id_empresa";
					break;

				case PresupuestoVentasLineasConstantesFunciones.LABEL_IDSUCURSAL:
					sNombreCampoCategoria="id_sucursal";
					break;

				case PresupuestoVentasLineasConstantesFunciones.LABEL_IDEJERCICIO:
					sNombreCampoCategoria="id_ejercicio";
					break;

				case PresupuestoVentasLineasConstantesFunciones.LABEL_IDPERIODO:
					sNombreCampoCategoria="id_periodo";
					break;

				case PresupuestoVentasLineasConstantesFunciones.LABEL_IDVENDEDOR:
					sNombreCampoCategoria="id_vendedor";
					break;

				case PresupuestoVentasLineasConstantesFunciones.LABEL_IDPAIS:
					sNombreCampoCategoria="id_pais";
					break;

				case PresupuestoVentasLineasConstantesFunciones.LABEL_IDCIUDAD:
					sNombreCampoCategoria="id_ciudad";
					break;

				case PresupuestoVentasLineasConstantesFunciones.LABEL_IDZONA:
					sNombreCampoCategoria="id_zona";
					break;

				case PresupuestoVentasLineasConstantesFunciones.LABEL_IDLINEA:
					sNombreCampoCategoria="id_linea";
					break;

				case PresupuestoVentasLineasConstantesFunciones.LABEL_IDLINEAGRUPO:
					sNombreCampoCategoria="id_linea_grupo";
					break;

				case PresupuestoVentasLineasConstantesFunciones.LABEL_IDLINEACATEGORIA:
					sNombreCampoCategoria="id_linea_categoria";
					break;

				case PresupuestoVentasLineasConstantesFunciones.LABEL_IDLINEAMARCA:
					sNombreCampoCategoria="id_linea_marca";
					break;

				case PresupuestoVentasLineasConstantesFunciones.LABEL_PRECIO:
					sNombreCampoCategoria="precio";
					break;

				case PresupuestoVentasLineasConstantesFunciones.LABEL_CANTIDAD:
					sNombreCampoCategoria="cantidad";
					break;

				case PresupuestoVentasLineasConstantesFunciones.LABEL_VALOR:
					sNombreCampoCategoria="valor";
					break;

				case PresupuestoVentasLineasConstantesFunciones.LABEL_PORCENTAJE:
					sNombreCampoCategoria="porcentaje";
					break;

				case PresupuestoVentasLineasConstantesFunciones.LABEL_CANTIDADTOTAL:
					sNombreCampoCategoria="cantidad_total";
					break;

				case PresupuestoVentasLineasConstantesFunciones.LABEL_VALORTOTAL:
					sNombreCampoCategoria="valor_total";
					break;
					
			default :
				break;
		}		
		//CATEGORIA GRAFICO
		
		//CATEGORIA VALOR				
		reporteCategoriaValor=((Reporte)this.jInternalFrameReporteDinamicoPresupuestoVentasLineas.getjComboBoxColumnaCategoriaValor().getSelectedItem());
		
		switch(reporteCategoriaValor.getsCodigo()) {
			
				case PresupuestoVentasLineasConstantesFunciones.LABEL_IDEMPRESA:
					sNombreCampoCategoriaValor="id_empresa";
					break;

				case PresupuestoVentasLineasConstantesFunciones.LABEL_IDSUCURSAL:
					sNombreCampoCategoriaValor="id_sucursal";
					break;

				case PresupuestoVentasLineasConstantesFunciones.LABEL_IDEJERCICIO:
					sNombreCampoCategoriaValor="id_ejercicio";
					break;

				case PresupuestoVentasLineasConstantesFunciones.LABEL_IDPERIODO:
					sNombreCampoCategoriaValor="id_periodo";
					break;

				case PresupuestoVentasLineasConstantesFunciones.LABEL_IDVENDEDOR:
					sNombreCampoCategoriaValor="id_vendedor";
					break;

				case PresupuestoVentasLineasConstantesFunciones.LABEL_IDPAIS:
					sNombreCampoCategoriaValor="id_pais";
					break;

				case PresupuestoVentasLineasConstantesFunciones.LABEL_IDCIUDAD:
					sNombreCampoCategoriaValor="id_ciudad";
					break;

				case PresupuestoVentasLineasConstantesFunciones.LABEL_IDZONA:
					sNombreCampoCategoriaValor="id_zona";
					break;

				case PresupuestoVentasLineasConstantesFunciones.LABEL_IDLINEA:
					sNombreCampoCategoriaValor="id_linea";
					break;

				case PresupuestoVentasLineasConstantesFunciones.LABEL_IDLINEAGRUPO:
					sNombreCampoCategoriaValor="id_linea_grupo";
					break;

				case PresupuestoVentasLineasConstantesFunciones.LABEL_IDLINEACATEGORIA:
					sNombreCampoCategoriaValor="id_linea_categoria";
					break;

				case PresupuestoVentasLineasConstantesFunciones.LABEL_IDLINEAMARCA:
					sNombreCampoCategoriaValor="id_linea_marca";
					break;

				case PresupuestoVentasLineasConstantesFunciones.LABEL_PRECIO:
					sNombreCampoCategoriaValor="precio";
					break;

				case PresupuestoVentasLineasConstantesFunciones.LABEL_CANTIDAD:
					sNombreCampoCategoriaValor="cantidad";
					break;

				case PresupuestoVentasLineasConstantesFunciones.LABEL_VALOR:
					sNombreCampoCategoriaValor="valor";
					break;

				case PresupuestoVentasLineasConstantesFunciones.LABEL_PORCENTAJE:
					sNombreCampoCategoriaValor="porcentaje";
					break;

				case PresupuestoVentasLineasConstantesFunciones.LABEL_CANTIDADTOTAL:
					sNombreCampoCategoriaValor="cantidad_total";
					break;

				case PresupuestoVentasLineasConstantesFunciones.LABEL_VALORTOTAL:
					sNombreCampoCategoriaValor="valor_total";
					break;
					
			default :
				break;
		}	
		//CATEGORIA VALOR
		
		//VALORES GRAFICO
		for(int index:this.jInternalFrameReporteDinamicoPresupuestoVentasLineas.getjListColumnasValoresGrafico().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoPresupuestoVentasLineas.getjListColumnasValoresGrafico().getModel().getElementAt(index);
			
			switch(reporte.getsCodigo()) {
				
				case PresupuestoVentasLineasConstantesFunciones.LABEL_IDEMPRESA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Empresa",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_empresa");
					break;

				case PresupuestoVentasLineasConstantesFunciones.LABEL_IDSUCURSAL:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Sucursal",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_sucursal");
					break;

				case PresupuestoVentasLineasConstantesFunciones.LABEL_IDEJERCICIO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Ejercicio",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_ejercicio");
					break;

				case PresupuestoVentasLineasConstantesFunciones.LABEL_IDPERIODO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Periodo",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_periodo");
					break;

				case PresupuestoVentasLineasConstantesFunciones.LABEL_IDVENDEDOR:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Vendedor",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_vendedor");
					break;

				case PresupuestoVentasLineasConstantesFunciones.LABEL_IDPAIS:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Pais",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_pais");
					break;

				case PresupuestoVentasLineasConstantesFunciones.LABEL_IDCIUDAD:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Ciudad",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_ciudad");
					break;

				case PresupuestoVentasLineasConstantesFunciones.LABEL_IDZONA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Zona",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_zona");
					break;

				case PresupuestoVentasLineasConstantesFunciones.LABEL_IDLINEA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Linea",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_linea");
					break;

				case PresupuestoVentasLineasConstantesFunciones.LABEL_IDLINEAGRUPO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Linea Grupo",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_linea_grupo");
					break;

				case PresupuestoVentasLineasConstantesFunciones.LABEL_IDLINEACATEGORIA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Linea Categoria",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_linea_categoria");
					break;

				case PresupuestoVentasLineasConstantesFunciones.LABEL_IDLINEAMARCA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Linea Marca",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_linea_marca");
					break;

				case PresupuestoVentasLineasConstantesFunciones.LABEL_PRECIO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Precio",sNombreCampoCategoria,sNombreCampoCategoriaValor,"precio");
					break;

				case PresupuestoVentasLineasConstantesFunciones.LABEL_CANTIDAD:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Cantidad",sNombreCampoCategoria,sNombreCampoCategoriaValor,"cantidad");
					break;

				case PresupuestoVentasLineasConstantesFunciones.LABEL_VALOR:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Valor",sNombreCampoCategoria,sNombreCampoCategoriaValor,"valor");
					break;

				case PresupuestoVentasLineasConstantesFunciones.LABEL_PORCENTAJE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Porcentaje",sNombreCampoCategoria,sNombreCampoCategoriaValor,"porcentaje");
					break;

				case PresupuestoVentasLineasConstantesFunciones.LABEL_CANTIDADTOTAL:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Cantidad Total",sNombreCampoCategoria,sNombreCampoCategoriaValor,"cantidad_total");
					break;

				case PresupuestoVentasLineasConstantesFunciones.LABEL_VALORTOTAL:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Valor Total",sNombreCampoCategoria,sNombreCampoCategoriaValor,"valor_total");
					break;
					
				default :
					break;
			}
		}
		//VALORES GRAFICO
		//if(sTipoGraficoReporte.equals("BARRAS") || sTipoGraficoReporte.equals("BARRAS_3D") || sTipoGraficoReporte.equals("BARRAS_XY") ||
		//   sTipoGraficoReporte.equals("PASTEL") || sTipoGraficoReporte.equals("PASTEL_3D") || sTipoGraficoReporte.equals("APILADO")) {
			
			existe=true;
			strGrafico=FuncionesReporte.getStringGraficoReporte(sTipoGraficoReporte,sWidthGrafico,strCategorySeries);			
		//}
		
		if(existe) {
			sXmlStringFile=sXmlStringFile.replace("<!--GRAFICO-->", strGrafico);
		}												
		
		return sXmlStringFile;
	}
	
	
	//@SuppressWarnings("deprecation")
	
	public void jButtonGenerarExcelReporteDinamicoPresupuestoVentasLineasActionPerformed(ActionEvent evt) throws Exception {		
		ArrayList<PresupuestoVentasLineas> presupuestoventaslineassSeleccionados=new ArrayList<PresupuestoVentasLineas>();		
		
		presupuestoventaslineassSeleccionados=this.getPresupuestoVentasLineassSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"presupuestoventaslineas";//.xls";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		Boolean existeFilas=false;
		
		Workbook workbook = null;
		FileOutputStream fileOutputStream=null;
		Reporte reporte=new Reporte();
		
		try {
			
			if(sTipoArchivoReporte=="EXCEL2") {
				workbook = new HSSFWorkbook();
				sPath+=".xls";
			
			} else if(sTipoArchivoReporte=="EXCEL2_2") {
				workbook = new XSSFWorkbook();
				sPath+=".xlsx";			
			}
		
			Sheet sheet = workbook.createSheet("PresupuestoVentasLineass");
						
		    			
			Integer iRow=0;
			Integer iCell=0;
			
			Row row = sheet.createRow(iRow);
			Cell cell = row.createCell(iCell);
			//cell.setCellValue("Blahblah");
			
			for(int index:this.jInternalFrameReporteDinamicoPresupuestoVentasLineas.getjListColumnasSelectReporte().getSelectedIndices()) {
				reporte=(Reporte)this.jInternalFrameReporteDinamicoPresupuestoVentasLineas.getjListColumnasSelectReporte().getModel().getElementAt(index);
				
				switch(reporte.getsCodigo()) {
					
				case PresupuestoVentasLineasConstantesFunciones.LABEL_IDEMPRESA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PresupuestoVentasLineasConstantesFunciones.LABEL_IDEMPRESA);
					iRow++;

					for(PresupuestoVentasLineas presupuestoventaslineas:presupuestoventaslineassSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(presupuestoventaslineas.getempresa_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PresupuestoVentasLineasConstantesFunciones.LABEL_IDSUCURSAL:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PresupuestoVentasLineasConstantesFunciones.LABEL_IDSUCURSAL);
					iRow++;

					for(PresupuestoVentasLineas presupuestoventaslineas:presupuestoventaslineassSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(presupuestoventaslineas.getsucursal_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PresupuestoVentasLineasConstantesFunciones.LABEL_IDEJERCICIO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PresupuestoVentasLineasConstantesFunciones.LABEL_IDEJERCICIO);
					iRow++;

					for(PresupuestoVentasLineas presupuestoventaslineas:presupuestoventaslineassSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(presupuestoventaslineas.getejercicio_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PresupuestoVentasLineasConstantesFunciones.LABEL_IDPERIODO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PresupuestoVentasLineasConstantesFunciones.LABEL_IDPERIODO);
					iRow++;

					for(PresupuestoVentasLineas presupuestoventaslineas:presupuestoventaslineassSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(presupuestoventaslineas.getperiodo_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PresupuestoVentasLineasConstantesFunciones.LABEL_IDVENDEDOR:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PresupuestoVentasLineasConstantesFunciones.LABEL_IDVENDEDOR);
					iRow++;

					for(PresupuestoVentasLineas presupuestoventaslineas:presupuestoventaslineassSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(presupuestoventaslineas.getvendedor_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PresupuestoVentasLineasConstantesFunciones.LABEL_IDPAIS:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PresupuestoVentasLineasConstantesFunciones.LABEL_IDPAIS);
					iRow++;

					for(PresupuestoVentasLineas presupuestoventaslineas:presupuestoventaslineassSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(presupuestoventaslineas.getpais_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PresupuestoVentasLineasConstantesFunciones.LABEL_IDCIUDAD:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PresupuestoVentasLineasConstantesFunciones.LABEL_IDCIUDAD);
					iRow++;

					for(PresupuestoVentasLineas presupuestoventaslineas:presupuestoventaslineassSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(presupuestoventaslineas.getciudad_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PresupuestoVentasLineasConstantesFunciones.LABEL_IDZONA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PresupuestoVentasLineasConstantesFunciones.LABEL_IDZONA);
					iRow++;

					for(PresupuestoVentasLineas presupuestoventaslineas:presupuestoventaslineassSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(presupuestoventaslineas.getzona_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PresupuestoVentasLineasConstantesFunciones.LABEL_IDLINEA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PresupuestoVentasLineasConstantesFunciones.LABEL_IDLINEA);
					iRow++;

					for(PresupuestoVentasLineas presupuestoventaslineas:presupuestoventaslineassSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(presupuestoventaslineas.getlinea_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PresupuestoVentasLineasConstantesFunciones.LABEL_IDLINEAGRUPO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PresupuestoVentasLineasConstantesFunciones.LABEL_IDLINEAGRUPO);
					iRow++;

					for(PresupuestoVentasLineas presupuestoventaslineas:presupuestoventaslineassSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(presupuestoventaslineas.getlineagrupo_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PresupuestoVentasLineasConstantesFunciones.LABEL_IDLINEACATEGORIA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PresupuestoVentasLineasConstantesFunciones.LABEL_IDLINEACATEGORIA);
					iRow++;

					for(PresupuestoVentasLineas presupuestoventaslineas:presupuestoventaslineassSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(presupuestoventaslineas.getlineacategoria_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PresupuestoVentasLineasConstantesFunciones.LABEL_IDLINEAMARCA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PresupuestoVentasLineasConstantesFunciones.LABEL_IDLINEAMARCA);
					iRow++;

					for(PresupuestoVentasLineas presupuestoventaslineas:presupuestoventaslineassSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(presupuestoventaslineas.getlineamarca_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PresupuestoVentasLineasConstantesFunciones.LABEL_PRECIO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PresupuestoVentasLineasConstantesFunciones.LABEL_PRECIO);
					iRow++;

					for(PresupuestoVentasLineas presupuestoventaslineas:presupuestoventaslineassSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(presupuestoventaslineas.getprecio());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PresupuestoVentasLineasConstantesFunciones.LABEL_CANTIDAD:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PresupuestoVentasLineasConstantesFunciones.LABEL_CANTIDAD);
					iRow++;

					for(PresupuestoVentasLineas presupuestoventaslineas:presupuestoventaslineassSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(presupuestoventaslineas.getcantidad());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PresupuestoVentasLineasConstantesFunciones.LABEL_VALOR:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PresupuestoVentasLineasConstantesFunciones.LABEL_VALOR);
					iRow++;

					for(PresupuestoVentasLineas presupuestoventaslineas:presupuestoventaslineassSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(presupuestoventaslineas.getvalor());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PresupuestoVentasLineasConstantesFunciones.LABEL_PORCENTAJE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PresupuestoVentasLineasConstantesFunciones.LABEL_PORCENTAJE);
					iRow++;

					for(PresupuestoVentasLineas presupuestoventaslineas:presupuestoventaslineassSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(presupuestoventaslineas.getporcentaje());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PresupuestoVentasLineasConstantesFunciones.LABEL_CANTIDADTOTAL:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PresupuestoVentasLineasConstantesFunciones.LABEL_CANTIDADTOTAL);
					iRow++;

					for(PresupuestoVentasLineas presupuestoventaslineas:presupuestoventaslineassSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(presupuestoventaslineas.getcantidad_total());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PresupuestoVentasLineasConstantesFunciones.LABEL_VALORTOTAL:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PresupuestoVentasLineasConstantesFunciones.LABEL_VALORTOTAL);
					iRow++;

					for(PresupuestoVentasLineas presupuestoventaslineas:presupuestoventaslineassSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(presupuestoventaslineas.getvalor_total());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;
					
					default :
						break;
				}
			}
			
			
			//if(conCabecera) {
			//	this.getFilaCabeceraExportarExcelPresupuestoVentasLineas(row);				
			//	iRow++;
			//}				
			
			//for(PresupuestoVentasLineas presupuestoventaslineasAux:presupuestoventaslineassSeleccionados) {
			//	row = sheet.createRow(iRow);
				
			//	this.getFilaDatosExportarExcelPresupuestoVentasLineas(presupuestoventaslineasAux,row);
				
			//	iRow++;
			//}
			
			
			
			fileOutputStream = new FileOutputStream(new File(sPath));
		    
			workbook.write(fileOutputStream);
			
			//fileOutputStream.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.presupuestoventaslineasSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Presupuesto Ventas_lineas",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			
       		if (fileOutputStream != null) {
				fileOutputStream.close();
			}			
		}				
	}	
	
	
	
	
	public void buscarPorId(Long idActual) throws Exception {    		
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoventaslineasLogic.getNewConnexionToDeep("");
			}
			
			this.idActual=idActual;
			this.iNumeroPaginacionPagina=0;
			
			this.procesarBusqueda("PorId");
				    	
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingPresupuestoVentasLineas(false);
			
			//SI ES MANUAL
			if(PresupuestoVentasLineasJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualPresupuestoVentasLineas();
			}	
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoventaslineasLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoventaslineasLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger);
			
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoventaslineasLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonAnterioresPresupuestoVentasLineasActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			//this.iNumeroPaginacion-=this.iNumeroPaginacion;
			/*
			if(this.iNumeroPaginacion<0) {
				this.iNumeroPaginacion=0;
			}
			*/
			//this.iNumeroPaginacionPagina=10;			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoventaslineasLogic.getNewConnexionToDeep("");
			}
			
			this.anteriores();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingPresupuestoVentasLineas(false);
			
			//SI ES MANUAL
			if(PresupuestoVentasLineasJInternalFrame.ISBINDING_MANUAL) {
	    		//this.inicializarActualizarBindingManualPresupuestoVentasLineas();
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoventaslineasLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoventaslineasLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,PresupuestoVentasLineasConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoventaslineasLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonSiguientesPresupuestoVentasLineasActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			//this.iNumeroPaginacion+=this.iNumeroPaginacion;
			//this.iNumeroPaginacionPagina=10;			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoventaslineasLogic.getNewConnexionToDeep("");
			}
			
			this.siguientes();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingPresupuestoVentasLineas(false);
			
			//SI ES MANUAL
			if(PresupuestoVentasLineasJInternalFrame.ISBINDING_MANUAL) {
	    		//this.inicializarActualizarBindingManualPresupuestoVentasLineas();
			}		
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoventaslineasLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoventaslineasLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,PresupuestoVentasLineasConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoventaslineasLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void aumentarTamanioFilaNuevaTablaPresupuestoVentasLineas() throws Exception {		
		Dimension dimensionMinimum=this.jTableDatosPresupuestoVentasLineas.getMinimumSize();
		Dimension dimensionMaximum=this.jTableDatosPresupuestoVentasLineas.getMaximumSize();
		Dimension dimensionPreferred=this.jTableDatosPresupuestoVentasLineas.getPreferredSize();
	
		double iHeightConFilaNueva=dimensionPreferred.getHeight();
		
		iHeightConFilaNueva+=this.jTableDatosPresupuestoVentasLineas.getRowHeight();
		
		dimensionMinimum.setSize(dimensionMinimum.getWidth(),iHeightConFilaNueva);
		dimensionMaximum.setSize(dimensionMaximum.getWidth(),iHeightConFilaNueva);
		dimensionPreferred.setSize(dimensionPreferred.getWidth(),iHeightConFilaNueva);
		
		this.jTableDatosPresupuestoVentasLineas.setMinimumSize(dimensionMinimum);
		this.jTableDatosPresupuestoVentasLineas.setMaximumSize(dimensionMaximum);
		this.jTableDatosPresupuestoVentasLineas.setPreferredSize(dimensionPreferred);	
	}
	
	public void inicializarActualizarBindingPresupuestoVentasLineas(Boolean esInicializar) throws Exception {
		this.inicializarActualizarBindingPresupuestoVentasLineas(esInicializar,true);
	}
	
	public void inicializarActualizarBindingPresupuestoVentasLineas(Boolean esInicializar,Boolean conTabla) throws Exception {		
		if(conTabla) {
			this.inicializarActualizarBindingTablaPresupuestoVentasLineas(esInicializar);
		}
		
		this.inicializarActualizarBindingBotonesPresupuestoVentasLineas(esInicializar);
		
		//FUNCIONALIDAD_RELACIONADO
		if(!this.presupuestoventaslineasSessionBean.getEsGuardarRelacionado()) {
			try{this.inicializarActualizarBindingBusquedasPresupuestoVentasLineas(esInicializar);}catch(Exception e){e.printStackTrace();}
			
			//this.inicializarActualizarBindingtiposArchivosReportesAccionesPresupuestoVentasLineas(esInicializar) ;
			
			this.inicializarActualizarBindingParametrosReportesPresupuestoVentasLineas(esInicializar) ;
		}
		
		if(esInicializar) {
			if( !PresupuestoVentasLineasJInternalFrame.ISBINDING_MANUAL_TABLA ||
			   	!PresupuestoVentasLineasJInternalFrame.ISBINDING_MANUAL) {
			   	
			}
		}
	}
	
	public void inicializarActualizarBindingManualPresupuestoVentasLineas() throws Exception {		
		//NO SE NECESITA HACER BINDING OTRA VEZ
		//this.inicializarActualizarBindingTablaPresupuestoVentasLineas();
		
		this.inicializarActualizarBindingBotonesManualPresupuestoVentasLineas(true);
		
		//FUNCIONALIDAD_RELACIONADO
		if(!this.presupuestoventaslineasSessionBean.getEsGuardarRelacionado()) {
			
			this.inicializarActualizarBindingBusquedasManualPresupuestoVentasLineas();			
			
			
			//this.inicializarActualizarBindingtiposArchivosReportesAccionesPresupuestoVentasLineas() ;
			
			this.inicializarActualizarBindingParametrosReportesPostAccionesManualPresupuestoVentasLineas(false) ;			
			
		}
	}
	
	public void inicializarActualizarBindingParametrosReportesPostAccionesManualPresupuestoVentasLineas(Boolean esSetControles) throws Exception {
		try	{					
			if(!esSetControles) {
				this.isSeleccionarTodos=this.jCheckBoxSeleccionarTodosPresupuestoVentasLineas.isSelected();
				this.isSeleccionados=this.jCheckBoxSeleccionadosPresupuestoVentasLineas.isSelected();
				
				
				this.conGraficoReporte=this.jCheckBoxConGraficoReportePresupuestoVentasLineas.isSelected();															
				
				
				if(this.jInternalFrameDetalleFormPresupuestoVentasLineas!=null) {
				this.isPostAccionNuevo=this.jInternalFrameDetalleFormPresupuestoVentasLineas.jCheckBoxPostAccionNuevoPresupuestoVentasLineas.isSelected();
				this.isPostAccionSinCerrar=this.jInternalFrameDetalleFormPresupuestoVentasLineas.jCheckBoxPostAccionSinCerrarPresupuestoVentasLineas.isSelected();
				this.isPostAccionSinMensaje=this.jInternalFrameDetalleFormPresupuestoVentasLineas.jCheckBoxPostAccionSinMensajePresupuestoVentasLineas.isSelected();
				}
			
			} else {
				this.jCheckBoxSeleccionarTodosPresupuestoVentasLineas.setSelected(this.isSeleccionarTodos);
				this.jCheckBoxSeleccionadosPresupuestoVentasLineas.setSelected(this.isSeleccionados);
				
				
				this.jCheckBoxConGraficoReportePresupuestoVentasLineas.setSelected(this.conGraficoReporte);				
				
				
				if(this.jInternalFrameDetalleFormPresupuestoVentasLineas!=null) {
				this.jInternalFrameDetalleFormPresupuestoVentasLineas.jCheckBoxPostAccionNuevoPresupuestoVentasLineas.setSelected(this.isPostAccionNuevo);
				this.jInternalFrameDetalleFormPresupuestoVentasLineas.jCheckBoxPostAccionSinCerrarPresupuestoVentasLineas.setSelected(this.isPostAccionSinCerrar);
				this.jInternalFrameDetalleFormPresupuestoVentasLineas.jCheckBoxPostAccionSinMensajePresupuestoVentasLineas.setSelected(this.isPostAccionSinMensaje);
				}
			}
			
			
			if(this.jComboBoxTiposPaginacionPresupuestoVentasLineas.getSelectedItem()!=null) {
				this.sTipoPaginacion=((Reporte)this.jComboBoxTiposPaginacionPresupuestoVentasLineas.getSelectedItem()).getsCodigo();			
			}
			
			
			
			if(this.jInternalFrameDetalleFormPresupuestoVentasLineas!=null) {
			this.sTipoAccionFormulario=((Reporte)this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxTiposAccionesFormularioPresupuestoVentasLineas.getSelectedItem()).getsCodigo();
			}
			
			
			
			if(!this.conCargarMinimo) {
				this.sTipoArchivoReporte=((Reporte)this.jComboBoxTiposArchivosReportesPresupuestoVentasLineas.getSelectedItem()).getsCodigo();			
				
				if(this.jInternalFrameReporteDinamicoPresupuestoVentasLineas!=null) {
					this.sTipoArchivoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoPresupuestoVentasLineas.getjComboBoxTiposArchivosReportesDinamico().getSelectedItem()).getsCodigo();			
				}
				
				this.sTipoRelacion=((Reporte)this.jComboBoxTiposRelacionesPresupuestoVentasLineas.getSelectedItem()).getsCodigo();
									
				this.sTipoAccion=((Reporte)this.jComboBoxTiposAccionesPresupuestoVentasLineas.getSelectedItem()).getsCodigo();
													
				this.sTipoSeleccionar=((Reporte)this.jComboBoxTiposSeleccionarPresupuestoVentasLineas.getSelectedItem()).getsCodigo();
									
				this.sTipoReporte=((Reporte)this.jComboBoxTiposReportesPresupuestoVentasLineas.getSelectedItem()).getsCodigo();							
					
				if(this.jInternalFrameReporteDinamicoPresupuestoVentasLineas!=null) {
					this.sTipoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoPresupuestoVentasLineas.getjComboBoxTiposReportesDinamico().getSelectedItem()).getsCodigo();							
				}
				
				this.sTipoGraficoReporte=((Reporte)this.jComboBoxTiposGraficosReportesPresupuestoVentasLineas.getSelectedItem()).getsCodigo();											
			}			
			
			this.sValorCampoGeneral=this.jTextFieldValorCampoGeneralPresupuestoVentasLineas.getText();						
			
			
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void inicializarActualizarBindingParametrosReportesPresupuestoVentasLineas(Boolean esInicializar) throws Exception {
		try	{	
			if(PresupuestoVentasLineasJInternalFrame.ISBINDING_MANUAL) {
				this. inicializarActualizarBindingParametrosReportesPostAccionesManualPresupuestoVentasLineas(false);
			} else {
			}
		} catch(Exception e) {
			throw e;
		}
	}	
	
	public void inicializarActualizarBindingtiposArchivosReportesAccionesPresupuestoVentasLineas() throws Exception {
		try	{
			if(PresupuestoVentasLineasJInternalFrame.ISBINDING_MANUAL) {
				this.inicializarActualizarBindingtiposArchivosReportesAccionesManualPresupuestoVentasLineas();
			} else {
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesAccionesManualFormDetallePresupuestoVentasLineas() throws Exception {
		//TIPOS ACCIONES FORMULARIO	
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxTiposAccionesFormularioPresupuestoVentasLineas.removeAllItems();
				
		for(Reporte reporte:this.tiposAccionesFormulario) {
			this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxTiposAccionesFormularioPresupuestoVentasLineas.addItem(reporte);
		}
		
		//TIPOS ACCIONES FORMULARIO
	}
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesAccionesManualPresupuestoVentasLineas() throws Exception {
		try	{
			
			//TIPOS ARCHIVOS REPORTES
			this.jComboBoxTiposArchivosReportesPresupuestoVentasLineas.removeAllItems();
				
			for(Reporte reporte:this.tiposArchivosReportes) {
				this.jComboBoxTiposArchivosReportesPresupuestoVentasLineas.addItem(reporte);
			}
			
			
				
			//TIPOS REPORTES
			this.jComboBoxTiposReportesPresupuestoVentasLineas.removeAllItems();
				
			for(Reporte reporte:this.tiposReportes) {
				this.jComboBoxTiposReportesPresupuestoVentasLineas.addItem(reporte);
			}
			
			
			//TIPOS GRAFICOS REPORTES
			this.jComboBoxTiposGraficosReportesPresupuestoVentasLineas.removeAllItems();
				
			for(Reporte reporte:this.tiposGraficosReportes) {
				this.jComboBoxTiposGraficosReportesPresupuestoVentasLineas.addItem(reporte);
			}
			
			
			//TIPOS PAGINACION
			this.jComboBoxTiposPaginacionPresupuestoVentasLineas.removeAllItems();
				
			for(Reporte reporte:this.tiposPaginacion) {
				this.jComboBoxTiposPaginacionPresupuestoVentasLineas.addItem(reporte);
			}
			
			
			if(!this.presupuestoventaslineasSessionBean.getEsGuardarRelacionado()) {
				this.jComboBoxTiposPaginacionPresupuestoVentasLineas.setSelectedItem(Funciones2.getTipoPaginacionDefecto("NORMAL",this.tiposPaginacion));
			} else {
				this.jComboBoxTiposPaginacionPresupuestoVentasLineas.setSelectedItem(Funciones2.getTipoPaginacionDefecto("RELACIONADO",this.tiposPaginacion));
			}
				
				
			//TIPOS ACCIONES	
			this.jComboBoxTiposRelacionesPresupuestoVentasLineas.removeAllItems();
				
			for(Reporte reporte:this.tiposRelaciones) {
				this.jComboBoxTiposRelacionesPresupuestoVentasLineas.addItem(reporte);
			}
			
			//TIPOS ACCIONES
				
				
			//TIPOS ACCIONES	
			this.jComboBoxTiposAccionesPresupuestoVentasLineas.removeAllItems();
				
			for(Reporte reporte:this.tiposAcciones) {
				this.jComboBoxTiposAccionesPresupuestoVentasLineas.addItem(reporte);
			}
			
			//TIPOS ACCIONES			
			
			
			
			//TIPOS ACCIONES FORMULARIO	
			if(this.jInternalFrameDetalleFormPresupuestoVentasLineas!=null) { //if(this.conCargarFormDetalle) {
				this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxTiposAccionesFormularioPresupuestoVentasLineas.removeAllItems();
				
				for(Reporte reporte:this.tiposAccionesFormulario) {
					this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxTiposAccionesFormularioPresupuestoVentasLineas.addItem(reporte);
				}
				
			}
			//TIPOS ACCIONES FORMULARIO
			
			
			
			//TIPOS SELECCIONAR
			this.jComboBoxTiposSeleccionarPresupuestoVentasLineas.removeAllItems();
				
			for(Reporte reporte:this.tiposSeleccionar) {
				this.jComboBoxTiposSeleccionarPresupuestoVentasLineas.addItem(reporte);
			}
			
			
			if(this.tiposSeleccionar!=null && this.tiposSeleccionar.size()>1) {
				this.jComboBoxTiposSeleccionarPresupuestoVentasLineas.setSelectedIndex(1);
			}
				
			//REPORTE DINAMICO
			this.inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualPresupuestoVentasLineas();
							
			//TIPOS COLUMNAS SELECT
			//TIPOS SELECCIONAR
			
			
		} catch(Exception e) {
			throw e;
		}
	}		
	
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualPresupuestoVentasLineas() throws Exception {
		try	{
			DefaultListModel<Reporte> defaultListModel=new DefaultListModel<Reporte>();
			
			
			//TIPOS ARCHIVOS REPORTES DINAMICO
			if(this.jInternalFrameReporteDinamicoPresupuestoVentasLineas!=null) {
				this.jInternalFrameReporteDinamicoPresupuestoVentasLineas.getjComboBoxTiposArchivosReportesDinamico().removeAllItems();
					
				for(Reporte reporte:this.tiposArchivosReportesDinamico) {
					this.jInternalFrameReporteDinamicoPresupuestoVentasLineas.getjComboBoxTiposArchivosReportesDinamico().addItem(reporte);
				}
				
			}
			
			//TIPOS REPORTES DINAMICO
			if(this.jInternalFrameReporteDinamicoPresupuestoVentasLineas!=null) {
				this.jInternalFrameReporteDinamicoPresupuestoVentasLineas.getjComboBoxTiposReportesDinamico().removeAllItems();
					
				for(Reporte reporte:this.tiposReportesDinamico) {
					this.jInternalFrameReporteDinamicoPresupuestoVentasLineas.getjComboBoxTiposReportesDinamico().addItem(reporte);
				}
				
			}
			
			defaultListModel=new DefaultListModel<Reporte>();
			
			if(this.jInternalFrameReporteDinamicoPresupuestoVentasLineas!=null) {
				
				if(this.jInternalFrameReporteDinamicoPresupuestoVentasLineas.getjListColumnasSelectReporte()!=null) {
					this.jInternalFrameReporteDinamicoPresupuestoVentasLineas.getjListColumnasSelectReporte().removeAll();
						
					for(Reporte reporte:this.tiposColumnasSelect) {
						defaultListModel.addElement(reporte);
					}						
						
					this.jInternalFrameReporteDinamicoPresupuestoVentasLineas.getjListColumnasSelectReporte().setModel(defaultListModel);									
						
				}	
					
				//TIPOS RELACIONES SELECT
				//TIPOS SELECCIONAR
				defaultListModel=new DefaultListModel<Reporte>();
				if(this.jInternalFrameReporteDinamicoPresupuestoVentasLineas.getjListRelacionesSelectReporte()!=null) {
					this.jInternalFrameReporteDinamicoPresupuestoVentasLineas.getjListRelacionesSelectReporte().removeAll();
						
					for(Reporte reporte:this.tiposRelacionesSelect) {
						defaultListModel.addElement(reporte);
					}						
						
					this.jInternalFrameReporteDinamicoPresupuestoVentasLineas.getjListRelacionesSelectReporte().setModel(defaultListModel);									
						
				}	
				
				
				//TIPOS COLUMNAS CATEGORIA DINAMICO
				if(this.jInternalFrameReporteDinamicoPresupuestoVentasLineas.getjComboBoxColumnaCategoriaGrafico()!=null) {
					this.jInternalFrameReporteDinamicoPresupuestoVentasLineas.getjComboBoxColumnaCategoriaGrafico().removeAllItems();
						
					ArrayList<Reporte> tiposColumnasCategoria=PresupuestoVentasLineasConstantesFunciones.getTiposSeleccionarPresupuestoVentasLineas(true,true,false,true,true);
						
					for(Reporte reporte:tiposColumnasCategoria) {//this.tiposSeleccionar
						this.jInternalFrameReporteDinamicoPresupuestoVentasLineas.getjComboBoxColumnaCategoriaGrafico().addItem(reporte);
					}
					
				}
					
				//TIPOS COLUMNAS CATEGORIA VALOR DINAMICO
				if(this.jInternalFrameReporteDinamicoPresupuestoVentasLineas.getjComboBoxColumnaCategoriaValor()!=null) {
					this.jInternalFrameReporteDinamicoPresupuestoVentasLineas.getjComboBoxColumnaCategoriaValor().removeAllItems();
						
					ArrayList<Reporte> tiposColumnasCategoriaValor=PresupuestoVentasLineasConstantesFunciones.getTiposSeleccionarPresupuestoVentasLineas(false,false,true,false,false);
						
					for(Reporte reporte:tiposColumnasCategoriaValor) {//this.tiposSeleccionar
						this.jInternalFrameReporteDinamicoPresupuestoVentasLineas.getjComboBoxColumnaCategoriaValor().addItem(reporte);
					}
					
				}
					
				//TIPOS COLUMNAS VALOR
				defaultListModel=new DefaultListModel<Reporte>();
					
				if(this.jInternalFrameReporteDinamicoPresupuestoVentasLineas.getjListColumnasValoresGrafico()!=null) {
					this.jInternalFrameReporteDinamicoPresupuestoVentasLineas.getjListColumnasValoresGrafico().removeAll();
						
					ArrayList<Reporte> tiposColumnasValor=PresupuestoVentasLineasConstantesFunciones.getTiposSeleccionarPresupuestoVentasLineas(false,false,true,false,false);
						
					for(Reporte reporte:tiposColumnasValor) {//this.tiposSeleccionar
						defaultListModel.addElement(reporte);
					}						
						
					this.jInternalFrameReporteDinamicoPresupuestoVentasLineas.getjListColumnasValoresGrafico().setModel(defaultListModel);									
						
				}
					
				//TIPOS GRAFICOS REPORTES DINAMICOS
				if(this.jInternalFrameReporteDinamicoPresupuestoVentasLineas.getjComboBoxTiposGraficosReportesDinamico()!=null) {
					this.jInternalFrameReporteDinamicoPresupuestoVentasLineas.getjComboBoxTiposGraficosReportesDinamico().removeAllItems();
						
					for(Reporte reporte:this.tiposGraficosReportes) {
						this.jInternalFrameReporteDinamicoPresupuestoVentasLineas.getjComboBoxTiposGraficosReportesDinamico().addItem(reporte);
					}
					
				}
			
			
			}
		} catch(Exception e) {
			throw e;
		}
	}	
	
	
	
	public void inicializarActualizarBindingBusquedasManualPresupuestoVentasLineas()  throws Exception {				
		//BYDAN_BUSQUEDAS		
		
		if(this.jComboBoxid_ciudadFK_IdCiudadPresupuestoVentasLineas.getSelectedItem()!=null){this.id_ciudadFK_IdCiudad=((Ciudad)this.jComboBoxid_ciudadFK_IdCiudadPresupuestoVentasLineas.getSelectedItem()).getId();}
		if(this.jComboBoxid_lineaFK_IdLineaPresupuestoVentasLineas.getSelectedItem()!=null){this.id_lineaFK_IdLinea=((Linea)this.jComboBoxid_lineaFK_IdLineaPresupuestoVentasLineas.getSelectedItem()).getId();}
		if(this.jComboBoxid_linea_categoriaFK_IdLineaCategoriaPresupuestoVentasLineas.getSelectedItem()!=null){this.id_linea_categoriaFK_IdLineaCategoria=((Linea)this.jComboBoxid_linea_categoriaFK_IdLineaCategoriaPresupuestoVentasLineas.getSelectedItem()).getId();}
		if(this.jComboBoxid_linea_grupoFK_IdLineaGrupoPresupuestoVentasLineas.getSelectedItem()!=null){this.id_linea_grupoFK_IdLineaGrupo=((Linea)this.jComboBoxid_linea_grupoFK_IdLineaGrupoPresupuestoVentasLineas.getSelectedItem()).getId();}
		if(this.jComboBoxid_linea_marcaFK_IdLineaMarcaPresupuestoVentasLineas.getSelectedItem()!=null){this.id_linea_marcaFK_IdLineaMarca=((Linea)this.jComboBoxid_linea_marcaFK_IdLineaMarcaPresupuestoVentasLineas.getSelectedItem()).getId();}
		if(this.jComboBoxid_paisFK_IdPaisPresupuestoVentasLineas.getSelectedItem()!=null){this.id_paisFK_IdPais=((Pais)this.jComboBoxid_paisFK_IdPaisPresupuestoVentasLineas.getSelectedItem()).getId();}
		if(this.jComboBoxid_vendedorFK_IdVendedorPresupuestoVentasLineas.getSelectedItem()!=null){this.id_vendedorFK_IdVendedor=((Vendedor)this.jComboBoxid_vendedorFK_IdVendedorPresupuestoVentasLineas.getSelectedItem()).getId();}
		if(this.jComboBoxid_zonaFK_IdZonaPresupuestoVentasLineas.getSelectedItem()!=null){this.id_zonaFK_IdZona=((Zona)this.jComboBoxid_zonaFK_IdZonaPresupuestoVentasLineas.getSelectedItem()).getId();}
		
	}
	
	
	
	
	public void inicializarActualizarBindingBusquedasPresupuestoVentasLineas(Boolean esInicializar) throws Exception {				
		if(PresupuestoVentasLineasJInternalFrame.ISBINDING_MANUAL) {
			
			this.inicializarActualizarBindingBusquedasManualPresupuestoVentasLineas();			
			
		} else {
		}
	}		
		
	public void inicializarActualizarBindingTablaPresupuestoVentasLineas() throws Exception {
		this.inicializarActualizarBindingTablaPresupuestoVentasLineas(false);
	}
	
	
	public void inicializarActualizarBindingTablaOrderByPresupuestoVentasLineas() {
		//TABLA OrderBy	
		TableColumn tableColumn=new TableColumn();
		Integer iWidthTableDefinicionOrderBy=0;			
			
		this.jInternalFrameOrderByPresupuestoVentasLineas.getjTableDatosOrderBy().setModel(new TablaGeneralOrderByModel(this.arrOrderBy));
					
		//DEFINIR RENDERERS OrderBy
		tableColumn=this.jInternalFrameOrderByPresupuestoVentasLineas.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderByPresupuestoVentasLineas.getjTableDatosOrderBy(),OrderBy.ISSELECTED));			
		//tableColumn.addPropertyChangeListener(new PresupuestoVentasLineasPropertyChangeListener());
					
		tableColumn.setPreferredWidth(50); 	 
		tableColumn.setWidth(50); 	 
		tableColumn.setMinWidth(50);
		tableColumn.setMaxWidth(50);
				
		iWidthTableDefinicionOrderBy+=50;
					
		tableColumn=this.jInternalFrameOrderByPresupuestoVentasLineas.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderByPresupuestoVentasLineas.getjTableDatosOrderBy(),OrderBy.NOMBRE));
		//tableColumn.addPropertyChangeListener(new PresupuestoVentasLineasPropertyChangeListener());
					
		tableColumn.setPreferredWidth(150); 	 
		tableColumn.setWidth(150); 	 
		tableColumn.setMinWidth(150);
		tableColumn.setMaxWidth(150);
				
		iWidthTableDefinicionOrderBy+=150;
					
		//tableColumn=this.jTableDatosPresupuestoVentasLineasOrderBy.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPresupuestoVentasLineasOrderBy,OrderBy.NOMBREDB));			
		////tableColumn.addPropertyChangeListener(new PresupuestoVentasLineasPropertyChangeListener());
								
		tableColumn=this.jInternalFrameOrderByPresupuestoVentasLineas.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderByPresupuestoVentasLineas.getjTableDatosOrderBy(),OrderBy.ESDESC));
		//tableColumn.addPropertyChangeListener(new PresupuestoVentasLineasPropertyChangeListener());
												
		tableColumn.setPreferredWidth(50); 	 
		tableColumn.setWidth(50); 	 
		tableColumn.setMinWidth(50);
		tableColumn.setMaxWidth(50);
				
		((AbstractTableModel) this.jInternalFrameOrderByPresupuestoVentasLineas.getjTableDatosOrderBy().getModel()).fireTableDataChanged();
				
		iWidthTableDefinicionOrderBy+=50;
	}
	
	
	
	public void inicializarActualizarBindingTablaPresupuestoVentasLineas(Boolean esInicializar) throws Exception {
		Boolean isNoExiste=false;
		Integer iCountNumeroColumnasNormal=0;
		Integer iCountNumeroColumnasFk=0;
		
		this.iWidthTableDefinicion=0;
		
		int iSizeTabla=0;
		
		iSizeTabla=this.getSizeTablaDatos();
		
	if(esInicializar || ConstantesSwing.FORZAR_INICIALIZAR_TABLA) {//esInicializar
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			isNoExiste=presupuestoventaslineasLogic.getPresupuestoVentasLineass().size()==0;
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			isNoExiste=presupuestoventaslineass.size()==0;
		}
		//ARCHITECTURE
			
		if(isNoExiste) {
			if(this.iNumeroPaginacion-this.iNumeroPaginacion>0) {
				this.iNumeroPaginacion-=this.iNumeroPaginacion;
			}
		}
		
		TableColumn tableColumn=new TableColumn();
		
		if(PresupuestoVentasLineasJInternalFrame.ISBINDING_MANUAL_TABLA) {
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.jTableDatosPresupuestoVentasLineas.setModel(new PresupuestoVentasLineasModel(this.presupuestoventaslineasLogic.getPresupuestoVentasLineass(),this));
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.jTableDatosPresupuestoVentasLineas.setModel(new PresupuestoVentasLineasModel(this.presupuestoventaslineass,this));
			}
			//ARCHITECTURE
			
							
			
			
			if(this.jInternalFrameOrderByPresupuestoVentasLineas!=null && this.jInternalFrameOrderByPresupuestoVentasLineas.getjTableDatosOrderBy()!=null) {
				this.inicializarActualizarBindingTablaOrderByPresupuestoVentasLineas();
			}
			
								
			//DEFINIR RENDERERS
			tableColumn=this.jTableDatosPresupuestoVentasLineas.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPresupuestoVentasLineas,Constantes2.S_SELECCIONAR));
			//tableColumn.addPropertyChangeListener(new PresupuestoVentasLineasPropertyChangeListener());
			tableColumn.setCellRenderer(new BooleanRenderer(true,"Seleccionar "+PresupuestoVentasLineasConstantesFunciones.SCLASSWEBTITULO,presupuestoventaslineasConstantesFunciones.resaltarSeleccionarPresupuestoVentasLineas,iSizeTabla,true,false,"","",this));
			tableColumn.setCellEditor(new BooleanEditorRenderer(true,"Seleccionar "+PresupuestoVentasLineasConstantesFunciones.SCLASSWEBTITULO,presupuestoventaslineasConstantesFunciones.resaltarSeleccionarPresupuestoVentasLineas,false,"","",this));			
			
			tableColumn.setPreferredWidth(50); 	 
			tableColumn.setWidth(50); 	 
			tableColumn.setMinWidth(50); 
			tableColumn.setMaxWidth(50); 
			
			this.iWidthTableDefinicion+=50;
			
			


			tableColumn=this.jTableDatosPresupuestoVentasLineas.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPresupuestoVentasLineas,PresupuestoVentasLineasConstantesFunciones.LABEL_ID));

		if(this.presupuestoventaslineasConstantesFunciones.mostraridPresupuestoVentasLineas && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PresupuestoVentasLineasConstantesFunciones.LABEL_ID,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.presupuestoventaslineasConstantesFunciones.resaltaridPresupuestoVentasLineas,this.presupuestoventaslineasConstantesFunciones.activaridPresupuestoVentasLineas,iSizeTabla,this,true,"idPresupuestoVentasLineas","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.presupuestoventaslineasConstantesFunciones.resaltaridPresupuestoVentasLineas,this.presupuestoventaslineasConstantesFunciones.activaridPresupuestoVentasLineas,this,true,"idPresupuestoVentasLineas","BASICO",false));

			tableColumn.setPreferredWidth(50);
			tableColumn.setWidth(50);
			tableColumn.setMinWidth(50);
			tableColumn.setMaxWidth(50);

			this.iWidthTableDefinicion+=50;
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPresupuestoVentasLineas.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPresupuestoVentasLineas,PresupuestoVentasLineasConstantesFunciones.LABEL_IDEMPRESA));

		if(this.presupuestoventaslineasConstantesFunciones.mostrarid_empresaPresupuestoVentasLineas && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PresupuestoVentasLineasConstantesFunciones.LABEL_IDEMPRESA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new EmpresaTableCell(this.empresasForeignKey,this.presupuestoventaslineasConstantesFunciones.resaltarid_empresaPresupuestoVentasLineas,this,this.presupuestoventaslineasConstantesFunciones.activarid_empresaPresupuestoVentasLineas,iSizeTabla));
			tableColumn.setCellEditor(new EmpresaTableCell(this.empresasForeignKey,this.presupuestoventaslineasConstantesFunciones.resaltarid_empresaPresupuestoVentasLineas,this,this.presupuestoventaslineasConstantesFunciones.activarid_empresaPresupuestoVentasLineas,false,"id_empresaPresupuestoVentasLineas","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new PresupuestoVentasLineasPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPresupuestoVentasLineas.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPresupuestoVentasLineas,PresupuestoVentasLineasConstantesFunciones.LABEL_IDSUCURSAL));

		if(this.presupuestoventaslineasConstantesFunciones.mostrarid_sucursalPresupuestoVentasLineas && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PresupuestoVentasLineasConstantesFunciones.LABEL_IDSUCURSAL,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new SucursalTableCell(this.sucursalsForeignKey,this.presupuestoventaslineasConstantesFunciones.resaltarid_sucursalPresupuestoVentasLineas,this,this.presupuestoventaslineasConstantesFunciones.activarid_sucursalPresupuestoVentasLineas,iSizeTabla));
			tableColumn.setCellEditor(new SucursalTableCell(this.sucursalsForeignKey,this.presupuestoventaslineasConstantesFunciones.resaltarid_sucursalPresupuestoVentasLineas,this,this.presupuestoventaslineasConstantesFunciones.activarid_sucursalPresupuestoVentasLineas,false,"id_sucursalPresupuestoVentasLineas","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new PresupuestoVentasLineasPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPresupuestoVentasLineas.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPresupuestoVentasLineas,PresupuestoVentasLineasConstantesFunciones.LABEL_IDEJERCICIO));

		if(this.presupuestoventaslineasConstantesFunciones.mostrarid_ejercicioPresupuestoVentasLineas && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PresupuestoVentasLineasConstantesFunciones.LABEL_IDEJERCICIO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new EjercicioTableCell(this.ejerciciosForeignKey,this.presupuestoventaslineasConstantesFunciones.resaltarid_ejercicioPresupuestoVentasLineas,this,this.presupuestoventaslineasConstantesFunciones.activarid_ejercicioPresupuestoVentasLineas,iSizeTabla));
			tableColumn.setCellEditor(new EjercicioTableCell(this.ejerciciosForeignKey,this.presupuestoventaslineasConstantesFunciones.resaltarid_ejercicioPresupuestoVentasLineas,this,this.presupuestoventaslineasConstantesFunciones.activarid_ejercicioPresupuestoVentasLineas,false,"id_ejercicioPresupuestoVentasLineas","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new PresupuestoVentasLineasPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPresupuestoVentasLineas.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPresupuestoVentasLineas,PresupuestoVentasLineasConstantesFunciones.LABEL_IDPERIODO));

		if(this.presupuestoventaslineasConstantesFunciones.mostrarid_periodoPresupuestoVentasLineas && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PresupuestoVentasLineasConstantesFunciones.LABEL_IDPERIODO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new PeriodoTableCell(this.periodosForeignKey,this.presupuestoventaslineasConstantesFunciones.resaltarid_periodoPresupuestoVentasLineas,this,this.presupuestoventaslineasConstantesFunciones.activarid_periodoPresupuestoVentasLineas,iSizeTabla));
			tableColumn.setCellEditor(new PeriodoTableCell(this.periodosForeignKey,this.presupuestoventaslineasConstantesFunciones.resaltarid_periodoPresupuestoVentasLineas,this,this.presupuestoventaslineasConstantesFunciones.activarid_periodoPresupuestoVentasLineas,false,"id_periodoPresupuestoVentasLineas","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new PresupuestoVentasLineasPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPresupuestoVentasLineas.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPresupuestoVentasLineas,PresupuestoVentasLineasConstantesFunciones.LABEL_IDVENDEDOR));

		if(this.presupuestoventaslineasConstantesFunciones.mostrarid_vendedorPresupuestoVentasLineas && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PresupuestoVentasLineasConstantesFunciones.LABEL_IDVENDEDOR,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new VendedorTableCell(this.vendedorsForeignKey,this.presupuestoventaslineasConstantesFunciones.resaltarid_vendedorPresupuestoVentasLineas,this,this.presupuestoventaslineasConstantesFunciones.activarid_vendedorPresupuestoVentasLineas,iSizeTabla));
			tableColumn.setCellEditor(new VendedorTableCell(this.vendedorsForeignKey,this.presupuestoventaslineasConstantesFunciones.resaltarid_vendedorPresupuestoVentasLineas,this,this.presupuestoventaslineasConstantesFunciones.activarid_vendedorPresupuestoVentasLineas,true,"id_vendedorPresupuestoVentasLineas","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new PresupuestoVentasLineasPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPresupuestoVentasLineas.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPresupuestoVentasLineas,PresupuestoVentasLineasConstantesFunciones.LABEL_IDPAIS));

		if(this.presupuestoventaslineasConstantesFunciones.mostrarid_paisPresupuestoVentasLineas && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PresupuestoVentasLineasConstantesFunciones.LABEL_IDPAIS,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new PaisTableCell(this.paissForeignKey,this.presupuestoventaslineasConstantesFunciones.resaltarid_paisPresupuestoVentasLineas,this,this.presupuestoventaslineasConstantesFunciones.activarid_paisPresupuestoVentasLineas,iSizeTabla));
			tableColumn.setCellEditor(new PaisTableCell(this.paissForeignKey,this.presupuestoventaslineasConstantesFunciones.resaltarid_paisPresupuestoVentasLineas,this,this.presupuestoventaslineasConstantesFunciones.activarid_paisPresupuestoVentasLineas,true,"id_paisPresupuestoVentasLineas","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new PresupuestoVentasLineasPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPresupuestoVentasLineas.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPresupuestoVentasLineas,PresupuestoVentasLineasConstantesFunciones.LABEL_IDCIUDAD));

		if(this.presupuestoventaslineasConstantesFunciones.mostrarid_ciudadPresupuestoVentasLineas && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PresupuestoVentasLineasConstantesFunciones.LABEL_IDCIUDAD,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new CiudadTableCell(this.ciudadsForeignKey,this.presupuestoventaslineasConstantesFunciones.resaltarid_ciudadPresupuestoVentasLineas,this,this.presupuestoventaslineasConstantesFunciones.activarid_ciudadPresupuestoVentasLineas,iSizeTabla));
			tableColumn.setCellEditor(new CiudadTableCell(this.ciudadsForeignKey,this.presupuestoventaslineasConstantesFunciones.resaltarid_ciudadPresupuestoVentasLineas,this,this.presupuestoventaslineasConstantesFunciones.activarid_ciudadPresupuestoVentasLineas,true,"id_ciudadPresupuestoVentasLineas","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new PresupuestoVentasLineasPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPresupuestoVentasLineas.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPresupuestoVentasLineas,PresupuestoVentasLineasConstantesFunciones.LABEL_IDZONA));

		if(this.presupuestoventaslineasConstantesFunciones.mostrarid_zonaPresupuestoVentasLineas && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PresupuestoVentasLineasConstantesFunciones.LABEL_IDZONA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new ZonaTableCell(this.zonasForeignKey,this.presupuestoventaslineasConstantesFunciones.resaltarid_zonaPresupuestoVentasLineas,this,this.presupuestoventaslineasConstantesFunciones.activarid_zonaPresupuestoVentasLineas,iSizeTabla));
			tableColumn.setCellEditor(new ZonaTableCell(this.zonasForeignKey,this.presupuestoventaslineasConstantesFunciones.resaltarid_zonaPresupuestoVentasLineas,this,this.presupuestoventaslineasConstantesFunciones.activarid_zonaPresupuestoVentasLineas,true,"id_zonaPresupuestoVentasLineas","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new PresupuestoVentasLineasPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPresupuestoVentasLineas.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPresupuestoVentasLineas,PresupuestoVentasLineasConstantesFunciones.LABEL_IDLINEA));

		if(this.presupuestoventaslineasConstantesFunciones.mostrarid_lineaPresupuestoVentasLineas && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PresupuestoVentasLineasConstantesFunciones.LABEL_IDLINEA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new LineaTableCell(this.lineasForeignKey,this.presupuestoventaslineasConstantesFunciones.resaltarid_lineaPresupuestoVentasLineas,this,this.presupuestoventaslineasConstantesFunciones.activarid_lineaPresupuestoVentasLineas,iSizeTabla));
			tableColumn.setCellEditor(new LineaTableCell(this.lineasForeignKey,this.presupuestoventaslineasConstantesFunciones.resaltarid_lineaPresupuestoVentasLineas,this,this.presupuestoventaslineasConstantesFunciones.activarid_lineaPresupuestoVentasLineas,true,"id_lineaPresupuestoVentasLineas","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new PresupuestoVentasLineasPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPresupuestoVentasLineas.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPresupuestoVentasLineas,PresupuestoVentasLineasConstantesFunciones.LABEL_IDLINEAGRUPO));

		if(this.presupuestoventaslineasConstantesFunciones.mostrarid_linea_grupoPresupuestoVentasLineas && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PresupuestoVentasLineasConstantesFunciones.LABEL_IDLINEAGRUPO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new LineaTableCell(this.lineagruposForeignKey,this.presupuestoventaslineasConstantesFunciones.resaltarid_linea_grupoPresupuestoVentasLineas,this,this.presupuestoventaslineasConstantesFunciones.activarid_linea_grupoPresupuestoVentasLineas,iSizeTabla));
			tableColumn.setCellEditor(new LineaTableCell(this.lineagruposForeignKey,this.presupuestoventaslineasConstantesFunciones.resaltarid_linea_grupoPresupuestoVentasLineas,this,this.presupuestoventaslineasConstantesFunciones.activarid_linea_grupoPresupuestoVentasLineas,true,"id_linea_grupoPresupuestoVentasLineas","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new PresupuestoVentasLineasPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPresupuestoVentasLineas.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPresupuestoVentasLineas,PresupuestoVentasLineasConstantesFunciones.LABEL_IDLINEACATEGORIA));

		if(this.presupuestoventaslineasConstantesFunciones.mostrarid_linea_categoriaPresupuestoVentasLineas && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PresupuestoVentasLineasConstantesFunciones.LABEL_IDLINEACATEGORIA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new LineaTableCell(this.lineacategoriasForeignKey,this.presupuestoventaslineasConstantesFunciones.resaltarid_linea_categoriaPresupuestoVentasLineas,this,this.presupuestoventaslineasConstantesFunciones.activarid_linea_categoriaPresupuestoVentasLineas,iSizeTabla));
			tableColumn.setCellEditor(new LineaTableCell(this.lineacategoriasForeignKey,this.presupuestoventaslineasConstantesFunciones.resaltarid_linea_categoriaPresupuestoVentasLineas,this,this.presupuestoventaslineasConstantesFunciones.activarid_linea_categoriaPresupuestoVentasLineas,true,"id_linea_categoriaPresupuestoVentasLineas","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new PresupuestoVentasLineasPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPresupuestoVentasLineas.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPresupuestoVentasLineas,PresupuestoVentasLineasConstantesFunciones.LABEL_IDLINEAMARCA));

		if(this.presupuestoventaslineasConstantesFunciones.mostrarid_linea_marcaPresupuestoVentasLineas && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PresupuestoVentasLineasConstantesFunciones.LABEL_IDLINEAMARCA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new LineaTableCell(this.lineamarcasForeignKey,this.presupuestoventaslineasConstantesFunciones.resaltarid_linea_marcaPresupuestoVentasLineas,this,this.presupuestoventaslineasConstantesFunciones.activarid_linea_marcaPresupuestoVentasLineas,iSizeTabla));
			tableColumn.setCellEditor(new LineaTableCell(this.lineamarcasForeignKey,this.presupuestoventaslineasConstantesFunciones.resaltarid_linea_marcaPresupuestoVentasLineas,this,this.presupuestoventaslineasConstantesFunciones.activarid_linea_marcaPresupuestoVentasLineas,true,"id_linea_marcaPresupuestoVentasLineas","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new PresupuestoVentasLineasPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPresupuestoVentasLineas.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPresupuestoVentasLineas,PresupuestoVentasLineasConstantesFunciones.LABEL_PRECIO));

		if(this.presupuestoventaslineasConstantesFunciones.mostrarprecioPresupuestoVentasLineas && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PresupuestoVentasLineasConstantesFunciones.LABEL_PRECIO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.presupuestoventaslineasConstantesFunciones.resaltarprecioPresupuestoVentasLineas,this.presupuestoventaslineasConstantesFunciones.activarprecioPresupuestoVentasLineas,iSizeTabla,this,true,"precioPresupuestoVentasLineas","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.presupuestoventaslineasConstantesFunciones.resaltarprecioPresupuestoVentasLineas,this.presupuestoventaslineasConstantesFunciones.activarprecioPresupuestoVentasLineas,this,true,"precioPresupuestoVentasLineas","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new PresupuestoVentasLineasPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPresupuestoVentasLineas.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPresupuestoVentasLineas,PresupuestoVentasLineasConstantesFunciones.LABEL_CANTIDAD));

		if(this.presupuestoventaslineasConstantesFunciones.mostrarcantidadPresupuestoVentasLineas && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PresupuestoVentasLineasConstantesFunciones.LABEL_CANTIDAD,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.presupuestoventaslineasConstantesFunciones.resaltarcantidadPresupuestoVentasLineas,this.presupuestoventaslineasConstantesFunciones.activarcantidadPresupuestoVentasLineas,iSizeTabla,this,true,"cantidadPresupuestoVentasLineas","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.presupuestoventaslineasConstantesFunciones.resaltarcantidadPresupuestoVentasLineas,this.presupuestoventaslineasConstantesFunciones.activarcantidadPresupuestoVentasLineas,this,true,"cantidadPresupuestoVentasLineas","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new PresupuestoVentasLineasPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPresupuestoVentasLineas.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPresupuestoVentasLineas,PresupuestoVentasLineasConstantesFunciones.LABEL_VALOR));

		if(this.presupuestoventaslineasConstantesFunciones.mostrarvalorPresupuestoVentasLineas && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PresupuestoVentasLineasConstantesFunciones.LABEL_VALOR,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.presupuestoventaslineasConstantesFunciones.resaltarvalorPresupuestoVentasLineas,this.presupuestoventaslineasConstantesFunciones.activarvalorPresupuestoVentasLineas,iSizeTabla,this,true,"valorPresupuestoVentasLineas","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.presupuestoventaslineasConstantesFunciones.resaltarvalorPresupuestoVentasLineas,this.presupuestoventaslineasConstantesFunciones.activarvalorPresupuestoVentasLineas,this,true,"valorPresupuestoVentasLineas","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new PresupuestoVentasLineasPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPresupuestoVentasLineas.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPresupuestoVentasLineas,PresupuestoVentasLineasConstantesFunciones.LABEL_PORCENTAJE));

		if(this.presupuestoventaslineasConstantesFunciones.mostrarporcentajePresupuestoVentasLineas && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PresupuestoVentasLineasConstantesFunciones.LABEL_PORCENTAJE,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.presupuestoventaslineasConstantesFunciones.resaltarporcentajePresupuestoVentasLineas,this.presupuestoventaslineasConstantesFunciones.activarporcentajePresupuestoVentasLineas,iSizeTabla,this,true,"porcentajePresupuestoVentasLineas","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.presupuestoventaslineasConstantesFunciones.resaltarporcentajePresupuestoVentasLineas,this.presupuestoventaslineasConstantesFunciones.activarporcentajePresupuestoVentasLineas,this,true,"porcentajePresupuestoVentasLineas","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new PresupuestoVentasLineasPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPresupuestoVentasLineas.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPresupuestoVentasLineas,PresupuestoVentasLineasConstantesFunciones.LABEL_CANTIDADTOTAL));

		if(this.presupuestoventaslineasConstantesFunciones.mostrarcantidad_totalPresupuestoVentasLineas && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PresupuestoVentasLineasConstantesFunciones.LABEL_CANTIDADTOTAL,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.presupuestoventaslineasConstantesFunciones.resaltarcantidad_totalPresupuestoVentasLineas,this.presupuestoventaslineasConstantesFunciones.activarcantidad_totalPresupuestoVentasLineas,iSizeTabla,this,true,"cantidad_totalPresupuestoVentasLineas","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.presupuestoventaslineasConstantesFunciones.resaltarcantidad_totalPresupuestoVentasLineas,this.presupuestoventaslineasConstantesFunciones.activarcantidad_totalPresupuestoVentasLineas,this,true,"cantidad_totalPresupuestoVentasLineas","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new PresupuestoVentasLineasPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPresupuestoVentasLineas.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPresupuestoVentasLineas,PresupuestoVentasLineasConstantesFunciones.LABEL_VALORTOTAL));

		if(this.presupuestoventaslineasConstantesFunciones.mostrarvalor_totalPresupuestoVentasLineas && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PresupuestoVentasLineasConstantesFunciones.LABEL_VALORTOTAL,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.presupuestoventaslineasConstantesFunciones.resaltarvalor_totalPresupuestoVentasLineas,this.presupuestoventaslineasConstantesFunciones.activarvalor_totalPresupuestoVentasLineas,iSizeTabla,this,true,"valor_totalPresupuestoVentasLineas","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.presupuestoventaslineasConstantesFunciones.resaltarvalor_totalPresupuestoVentasLineas,this.presupuestoventaslineasConstantesFunciones.activarvalor_totalPresupuestoVentasLineas,this,true,"valor_totalPresupuestoVentasLineas","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new PresupuestoVentasLineasPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}
			
		} else {
		}			
					
		if(!this.presupuestoventaslineasSessionBean.getEsGuardarRelacionado()
			&& !this.esParaBusquedaForeignKey) {
			
		}
		
		if(true) {
			String sLabelColumnAccion="Editar";
			String sLabelColumnAccionEli="Eli";
			
			if(this.esParaBusquedaForeignKey)  {
				sLabelColumnAccion="Seleccionar";
				
				//LO MISMO QUE ELSE
				tableColumn= new TableColumn();
				tableColumn.setIdentifier(sLabelColumnAccion);
				tableColumn.setHeaderValue(sLabelColumnAccion);
				tableColumn.setCellRenderer(new IdTableCell(this,false,false,this.presupuestoventaslineasSessionBean.getEsGuardarRelacionado(),iSizeTabla));
				tableColumn.setCellEditor(new IdTableCell(this,false,false,this.presupuestoventaslineasSessionBean.getEsGuardarRelacionado(),iSizeTabla));
	
				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				
				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
				
				this.jTableDatosPresupuestoVentasLineas.addColumn(tableColumn);
			
			} else {				
				
				//LO MISMO QUE IF
				
				tableColumn= new TableColumn();
				tableColumn.setIdentifier(sLabelColumnAccion);
				tableColumn.setHeaderValue(sLabelColumnAccion);
				tableColumn.setCellRenderer(new IdTableCell(this,false,false,this.presupuestoventaslineasSessionBean.getEsGuardarRelacionado(),iSizeTabla));
				tableColumn.setCellEditor(new IdTableCell(this,false,false,this.presupuestoventaslineasSessionBean.getEsGuardarRelacionado(),iSizeTabla));
		
				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				
				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
				
				this.jTableDatosPresupuestoVentasLineas.addColumn(tableColumn);				
					
				//ELIMINAR
				if(this.isPermisoEliminarPresupuestoVentasLineas && this.isPermisoGuardarCambiosPresupuestoVentasLineas) {
					tableColumn= new TableColumn();
					tableColumn.setIdentifier(Constantes2.S_ELI);
					tableColumn.setHeaderValue(sLabelColumnAccionEli);
					tableColumn.setCellRenderer(new IdTableCell(this,false,true,this.presupuestoventaslineasSessionBean.getEsGuardarRelacionado(),iSizeTabla));
					tableColumn.setCellEditor(new IdTableCell(this,false,true,this.presupuestoventaslineasSessionBean.getEsGuardarRelacionado(),iSizeTabla));
			
					tableColumn.setPreferredWidth(65); 	 
					tableColumn.setWidth(65); 	 
					tableColumn.setMinWidth(65); 
					tableColumn.setMaxWidth(65);
					
					this.iWidthTableDefinicion+=65;
						
					this.jTableDatosPresupuestoVentasLineas.addColumn(tableColumn);
				}
			}			
						
			
			/*
			tableColumn= new TableColumn();
			tableColumn.setIdentifier(Constantes2.S_SELECCIONAR);
			tableColumn.setHeaderValue(Constantes2.S_SELECCIONAR);
			tableColumn.setCellRenderer(new IdSeleccionarTableCell(this));
			tableColumn.setCellEditor(new IdSeleccionarTableCell(this));
			
			tableColumn.setPreferredWidth(30); 	 
			tableColumn.setWidth(30); 	 
			tableColumn.setMinWidth(30); 
			
			this.iWidthTableDefinicion+=30;
			
			this.jTableDatosPresupuestoVentasLineas.addColumn(tableColumn);
			*/
		}
		
		Integer iUltimaColumna=0;//1
		Integer iNuevaPosicionColumna=0;
		
		
		//PERMITE ELIMINAR SIMPLE
		if(!this.esParaBusquedaForeignKey)  {
			if(this.isPermisoEliminarPresupuestoVentasLineas && this.isPermisoGuardarCambiosPresupuestoVentasLineas) {
				iUltimaColumna++;
			}	
		}
		
		//PERMITE EDITAR SIMPLE
		iUltimaColumna++;	
		
				
		
		//MOVIA SELECCIONAR
		//iUltimaColumna++;
		
		if(!this.esParaBusquedaForeignKey)  {
			if(this.isPermisoEliminarPresupuestoVentasLineas && this.isPermisoGuardarCambiosPresupuestoVentasLineas) {
				//REUBICA ELIMINAR SIMPLE
				jTableDatosPresupuestoVentasLineas.moveColumn(this.jTableDatosPresupuestoVentasLineas.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1,-2 o -3
					
				iUltimaColumna--;
			}
		}
		//REUBICA EDITAR SIMPLE
		jTableDatosPresupuestoVentasLineas.moveColumn(this.jTableDatosPresupuestoVentasLineas.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1,-2 o -3				
		
		
		
		
		//REUBICABA SELECCIONAR
		/*
		if(iUltimaColumna>1) {
			iUltimaColumna--;
		}
		
		//iNuevaPosicionColumna++;
			
		//REUBICA SELECCIONAR FILA CHECK
		jTableDatosPresupuestoVentasLineas.moveColumn(this.jTableDatosPresupuestoVentasLineas.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1		
		*/
		
		//DEFINEN HEADERS
		final TableCellRenderer tableHeaderDefaultCellRenderer = this.jTableDatosPresupuestoVentasLineas.getTableHeader().getDefaultRenderer();
		
		this.jTableDatosPresupuestoVentasLineas.getTableHeader().setDefaultRenderer(new TableCellRendererHeader(this.jTableDatosPresupuestoVentasLineas,tableHeaderDefaultCellRenderer));
	    
		TableColumn column=null;
		
		if(!PresupuestoVentasLineasJInternalFrame.ISBINDING_MANUAL_TABLA) {
			for(int i = 0; i < this.jTableDatosPresupuestoVentasLineas.getColumnModel().getColumnCount(); i++) { 
				column = this.jTableDatosPresupuestoVentasLineas.getColumnModel().getColumn(i); 
				
				if(column.getIdentifier()!=null) {
					//SI SE UTILIZA UN HEADER ES GENERICO
					//column.setHeaderRenderer(new HeaderRenderer(column.getIdentifier().toString()));
				}
				
				if(column.getIdentifier()!=null && column.getIdentifier().equals(Constantes2.S_ELI)) {
					continue;
				}
				
				if(column.getIdentifier()!=null && column.getIdentifier().equals(Constantes2.S_SELECCIONAR)) {
					if(!PresupuestoVentasLineasJInternalFrame.ISBINDING_MANUAL_TABLA) {
						column.setPreferredWidth(50); 	 
						column.setWidth(50); 	 
						column.setMinWidth(50); 	
						column.setMaxWidth(50); 
						
						this.iWidthTableDefinicion+=50;
					}
					
				} else {
					if(!PresupuestoVentasLineasJInternalFrame.ISBINDING_MANUAL_TABLA) {
						column.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
						column.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
						column.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 	
						column.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 	
						
						this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
					}
				}
			}
		}
		
		this.jTableDatosPresupuestoVentasLineas.setSelectionBackground(FuncionesSwing.getColorSelectedBackground());
		this.jTableDatosPresupuestoVentasLineas.setSelectionForeground(FuncionesSwing.getColorSelectedForeground());
		
		/*
		this.jTableDatosPresupuestoVentasLineas.setDefaultRenderer(Object.class, new DefaultTableCellRenderer() {
			private static final long serialVersionUID = 1L;
			
		    @Override
		    public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
		        final Component component= super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
		        //POR DEFECTO ES MEJOR, SE PIERDE DATOS AL SELECCIONAR BLANCO LETRAS BLANCAS
				component.setBackground(row % 2 == 0 ? FuncionesSwing.getColorTextFields(Constantes2.S_FONDOCONTROL_COLOR) : Funciones2.getColorFilaTabla2()); //FuncionesSwing.getColorTextFields(Constantes2.S_FONDOCONTROL_COLOR)
				component.setForeground(Funciones2.getColorTextoFilaTabla1());
				
				try {
		        	int iSize=-999;
		        	
		        	if(conTotales) {
						//FILA TOTALES OTRO COLOR, SI TABLA NO ES UNO A UNO
			        	if(Constantes.ISUSAEJBLOGICLAYER) {
							iSize=presupuestoventaslineasLogic.getPresupuestoVentasLineass().size()-1;
								
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							iSize=presupuestoventaslineass.size()-1;
						}
						
						if(iSize==row) {
							component.setBackground(Funciones2.getColorFilaTablaTotales());
						}
		        	}
					
					//POR EFICIENCIA NO UTILIZAR					
					//if (component instanceof JComponent) {
		            //    JComponent jcomponent = (JComponent) component;		                 		                
		        	//}				
					
				} catch (Exception e) {
					e.printStackTrace();
				}
				
		        return component;
		    }
		});
		*/
		
		//ESTA EN LA DEFINICION DE LA TABLA
		//this.jTableDatosPresupuestoVentasLineas.setRowHeight(Constantes.ISWING_ALTO_FILA_TABLA);
		
		/*
		column=this.jTableDatosPresupuestoVentasLineas.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSistema,Constantes2.S_SELECCIONAR));
		
		if(column!=null) {
			column.setPreferredWidth(25); 	 
			column.setWidth(25); 	 
			column.setMinWidth(25); 	
		}
		*/
			
			//CopyTableToTableTotal();
		} else {
			
			this.actualizarVisualTableDatosPresupuestoVentasLineas();
			
		}
	}
	
	/*
	//COPY_TABLES
	/* FALTARIA RESOLVER:
	   1 SOLO SCROLL PARA 2 TABLAS
	   COPIA EXACTA DE COLUMNAS DE UNA TABLA A OTRA, SI SE MODIFICA TAMANIO TAMBIEN LA OTRA
	*/
	
	public void jButtonIdActionPerformed(ActionEvent evt,int rowIndex,Boolean esRelaciones,Boolean esEliminar) { 
		try {
			if(!esEliminar) {
				this.estaModoSeleccionar=true;
				
				//this.isEsNuevoPresupuestoVentasLineas=false;
					
				PresupuestoVentasLineasBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.SELECTED,"FORM",this.presupuestoventaslineas,new Object(),this.presupuestoventaslineasParameterGeneral,this.presupuestoventaslineasReturnGeneral);
			
				if(this.presupuestoventaslineasSessionBean.getConGuardarRelaciones()) {
					this.dStart=(double)System.currentTimeMillis();
				}
				
				if(this.jInternalFrameDetalleFormPresupuestoVentasLineas==null) {
					this.inicializarFormDetalle();
				}
				
				this.inicializarInvalidValues();
				
				int intSelectedRow = 0;
				
				if(rowIndex>=0) {
					intSelectedRow=rowIndex;
					this.jTableDatosPresupuestoVentasLineas.getSelectionModel().setSelectionInterval(intSelectedRow, intSelectedRow);
				} else {	
					intSelectedRow=this.jTableDatosPresupuestoVentasLineas.getSelectedRow();	       
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoventaslineas =(PresupuestoVentasLineas) this.presupuestoventaslineasLogic.getPresupuestoVentasLineass().toArray()[this.jTableDatosPresupuestoVentasLineas.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.presupuestoventaslineas =(PresupuestoVentasLineas) this.presupuestoventaslineass.toArray()[this.jTableDatosPresupuestoVentasLineas.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//PUEDE SER PARA DUPLICADO O NUEVO TABLA
				
				if(this.presupuestoventaslineas.getsType().equals("DUPLICADO")
				   || this.presupuestoventaslineas.getsType().equals("NUEVO_GUARDAR_CAMBIOS")) {
					
					this.isEsNuevoPresupuestoVentasLineas=true;
				
				} else {
					this.isEsNuevoPresupuestoVentasLineas=false;	
				}
				
				//CONTROL VERSION ANTERIOR
				/*
				if(!this.presupuestoventaslineasSessionBean.getEsGuardarRelacionado()) {
					if(this.presupuestoventaslineas.getId()>=0 && !this.presupuestoventaslineas.getIsNew()) {						
						this.isEsNuevoPresupuestoVentasLineas=false;
						
					} else {
						this.isEsNuevoPresupuestoVentasLineas=true;
					}
					
				} else {
					//CONTROLAR PARA RELACIONADO
				}
				*/
				
				//ESTABLECE SI ES RELACIONADO O NO 
				this.habilitarDeshabilitarTipoMantenimientoPresupuestoVentasLineas(esRelaciones);						
				
				this.seleccionarPresupuestoVentasLineas(evt,null,rowIndex);
				
				//SELECCIONA ACTUAL PERO AUN NO SE HA INGRESADO AL SISTEMA
				//SE DESHABILITA POR GUARDAR CAMBIOS
				/*
				if(this.presupuestoventaslineas.getId()<0) {
					this.isEsNuevoPresupuestoVentasLineas=true;
				}
				*/
				
				if(!this.esParaBusquedaForeignKey) {
					this.modificarPresupuestoVentasLineas(evt,rowIndex,esRelaciones);
				} else {
					this.seleccionarPresupuestoVentasLineas(evt,rowIndex);
				}	
				
				if(this.presupuestoventaslineasSessionBean.getConGuardarRelaciones()) {
					this.dEnd=(double)System.currentTimeMillis();					
					this.dDif=this.dEnd - this.dStart;
					
					if(Constantes.ISDEVELOPING) {
						System.out.println("Tiempo(ms) Seleccion PresupuestoVentasLineas: " + this.dDif); 
					}
				}								
				
				PresupuestoVentasLineasBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.SELECTED,"FORM",this.presupuestoventaslineas,new Object(),this.presupuestoventaslineasParameterGeneral,this.presupuestoventaslineasReturnGeneral);
				
			} else {
				this.estaModoEliminarGuardarCambios=true;
				
				this.seleccionarPresupuestoVentasLineas(evt,null,rowIndex);
				
				if(this.permiteMantenimiento(this.presupuestoventaslineas)) {
					if(this.presupuestoventaslineas.getId()>0) {
						this.presupuestoventaslineas.setIsDeleted(true);
						
						this.presupuestoventaslineassEliminados.add(this.presupuestoventaslineas);
					}
					
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						this.presupuestoventaslineasLogic.getPresupuestoVentasLineass().remove(this.presupuestoventaslineas);
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						this.presupuestoventaslineass.remove(this.presupuestoventaslineas);				
					}
					
					
					((PresupuestoVentasLineasModel) this.jTableDatosPresupuestoVentasLineas.getModel()).fireTableRowsDeleted(rowIndex,rowIndex);
					
					this.actualizarFilaTotales();
					
					this.inicializarActualizarBindingTablaPresupuestoVentasLineas(false);					
				}								
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException2(this, e,logger,PresupuestoVentasLineasConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoSeleccionar=false;				
			this.estaModoEliminarGuardarCambios=false;
		}
	}
	
	
	public void seleccionarPresupuestoVentasLineas(ActionEvent evt,javax.swing.event.ListSelectionEvent evt2,int rowIndex) throws Exception { 
		try {
			//SI PUEDE SER NUEVO Y SELECCIONAR (PARA DUPLICAR Y NUEVO TABLA)
			//if(!this.isEsNuevoPresupuestoVentasLineas) {
			
			if(this.jInternalFrameDetalleFormPresupuestoVentasLineas==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
				int intSelectedRow = 0;
				
				if(rowIndex>=0) {
					intSelectedRow=rowIndex;
					this.jTableDatosPresupuestoVentasLineas.getSelectionModel().setSelectionInterval(intSelectedRow, intSelectedRow);
				} else {	
					intSelectedRow=this.jTableDatosPresupuestoVentasLineas.getSelectedRow();	       
				}
				
				//CUANDO SE RECARGA TABLA TAMBIEN SE SELECCIONA PERO CON -1 POR LO QUE SE NECESITA VALIDAR ANTES
				if(intSelectedRow<0) {
					return;
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoventaslineas =(PresupuestoVentasLineas) this.presupuestoventaslineasLogic.getPresupuestoVentasLineass().toArray()[this.jTableDatosPresupuestoVentasLineas.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.presupuestoventaslineas =(PresupuestoVentasLineas) this.presupuestoventaslineass.toArray()[this.jTableDatosPresupuestoVentasLineas.convertRowIndexToModel(intSelectedRow)];
				}
				
				if(PresupuestoVentasLineasJInternalFrame.ISBINDING_MANUAL_TABLA) {
					this.setVariablesObjetoActualToFormularioPresupuestoVentasLineas(this.presupuestoventaslineas);
				}
				
				//ARCHITECTURE
				try {
					

					//Empresa
					if(!this.presupuestoventaslineasConstantesFunciones.cargarid_empresaPresupuestoVentasLineas || this.presupuestoventaslineasConstantesFunciones.event_dependid_empresaPresupuestoVentasLineas) {
						//this.cargarCombosEmpresasForeignKeyLista(" where id="+this.presupuestoventaslineas.getid_empresa());
									//this.inicializarActualizarBindingPresupuestoVentasLineas(false,false);
						this.empresasForeignKey=new ArrayList<Empresa>();

						if(presupuestoventaslineas.getEmpresa()!=null) {
							this.empresasForeignKey.add(presupuestoventaslineas.getEmpresa());
						}

						this.addItemDefectoCombosForeignKeyEmpresa();
						this.cargarCombosFrameEmpresasForeignKey("Todos");
					}
					this.setActualEmpresaForeignKey(this.presupuestoventaslineas.getid_empresa(),false,"Formulario");

					//Sucursal
					if(!this.presupuestoventaslineasConstantesFunciones.cargarid_sucursalPresupuestoVentasLineas || this.presupuestoventaslineasConstantesFunciones.event_dependid_sucursalPresupuestoVentasLineas) {
						//this.cargarCombosSucursalsForeignKeyLista(" where id="+this.presupuestoventaslineas.getid_sucursal());
									//this.inicializarActualizarBindingPresupuestoVentasLineas(false,false);
						this.sucursalsForeignKey=new ArrayList<Sucursal>();

						if(presupuestoventaslineas.getSucursal()!=null) {
							this.sucursalsForeignKey.add(presupuestoventaslineas.getSucursal());
						}

						this.addItemDefectoCombosForeignKeySucursal();
						this.cargarCombosFrameSucursalsForeignKey("Todos");
					}
					this.setActualSucursalForeignKey(this.presupuestoventaslineas.getid_sucursal(),false,"Formulario");

					//Ejercicio
					if(!this.presupuestoventaslineasConstantesFunciones.cargarid_ejercicioPresupuestoVentasLineas || this.presupuestoventaslineasConstantesFunciones.event_dependid_ejercicioPresupuestoVentasLineas) {
						//this.cargarCombosEjerciciosForeignKeyLista(" where id="+this.presupuestoventaslineas.getid_ejercicio());
									//this.inicializarActualizarBindingPresupuestoVentasLineas(false,false);
						this.ejerciciosForeignKey=new ArrayList<Ejercicio>();

						if(presupuestoventaslineas.getEjercicio()!=null) {
							this.ejerciciosForeignKey.add(presupuestoventaslineas.getEjercicio());
						}

						this.addItemDefectoCombosForeignKeyEjercicio();
						this.cargarCombosFrameEjerciciosForeignKey("Todos");
					}
					this.setActualEjercicioForeignKey(this.presupuestoventaslineas.getid_ejercicio(),false,"Formulario");

					//Periodo
					if(!this.presupuestoventaslineasConstantesFunciones.cargarid_periodoPresupuestoVentasLineas || this.presupuestoventaslineasConstantesFunciones.event_dependid_periodoPresupuestoVentasLineas) {
						//this.cargarCombosPeriodosForeignKeyLista(" where id="+this.presupuestoventaslineas.getid_periodo());
									//this.inicializarActualizarBindingPresupuestoVentasLineas(false,false);
						this.periodosForeignKey=new ArrayList<Periodo>();

						if(presupuestoventaslineas.getPeriodo()!=null) {
							this.periodosForeignKey.add(presupuestoventaslineas.getPeriodo());
						}

						this.addItemDefectoCombosForeignKeyPeriodo();
						this.cargarCombosFramePeriodosForeignKey("Todos");
					}
					this.setActualPeriodoForeignKey(this.presupuestoventaslineas.getid_periodo(),false,"Formulario");

					//Vendedor
					if(!this.presupuestoventaslineasConstantesFunciones.cargarid_vendedorPresupuestoVentasLineas || this.presupuestoventaslineasConstantesFunciones.event_dependid_vendedorPresupuestoVentasLineas) {
						//this.cargarCombosVendedorsForeignKeyLista(" where id="+this.presupuestoventaslineas.getid_vendedor());
									//this.inicializarActualizarBindingPresupuestoVentasLineas(false,false);
						this.vendedorsForeignKey=new ArrayList<Vendedor>();

						if(presupuestoventaslineas.getVendedor()!=null) {
							this.vendedorsForeignKey.add(presupuestoventaslineas.getVendedor());
						}

						this.addItemDefectoCombosForeignKeyVendedor();
						this.cargarCombosFrameVendedorsForeignKey("Todos");
					}
					this.setActualVendedorForeignKey(this.presupuestoventaslineas.getid_vendedor(),false,"Formulario");

					//Pais
					if(!this.presupuestoventaslineasConstantesFunciones.cargarid_paisPresupuestoVentasLineas || this.presupuestoventaslineasConstantesFunciones.event_dependid_paisPresupuestoVentasLineas) {
						//this.cargarCombosPaissForeignKeyLista(" where id="+this.presupuestoventaslineas.getid_pais());
									//this.inicializarActualizarBindingPresupuestoVentasLineas(false,false);
						this.paissForeignKey=new ArrayList<Pais>();

						if(presupuestoventaslineas.getPais()!=null) {
							this.paissForeignKey.add(presupuestoventaslineas.getPais());
						}

						this.addItemDefectoCombosForeignKeyPais();
						this.cargarCombosFramePaissForeignKey("Todos");
					}
					this.setActualPaisForeignKey(this.presupuestoventaslineas.getid_pais(),false,"Formulario");

					//Ciudad
					if(!this.presupuestoventaslineasConstantesFunciones.cargarid_ciudadPresupuestoVentasLineas || this.presupuestoventaslineasConstantesFunciones.event_dependid_ciudadPresupuestoVentasLineas) {
						//this.cargarCombosCiudadsForeignKeyLista(" where id="+this.presupuestoventaslineas.getid_ciudad());
									//this.inicializarActualizarBindingPresupuestoVentasLineas(false,false);
						this.ciudadsForeignKey=new ArrayList<Ciudad>();

						if(presupuestoventaslineas.getCiudad()!=null) {
							this.ciudadsForeignKey.add(presupuestoventaslineas.getCiudad());
						}

						this.addItemDefectoCombosForeignKeyCiudad();
						this.cargarCombosFrameCiudadsForeignKey("Todos");
					}
					this.setActualCiudadForeignKey(this.presupuestoventaslineas.getid_ciudad(),false,"Formulario");

					//Zona
					if(!this.presupuestoventaslineasConstantesFunciones.cargarid_zonaPresupuestoVentasLineas || this.presupuestoventaslineasConstantesFunciones.event_dependid_zonaPresupuestoVentasLineas) {
						//this.cargarCombosZonasForeignKeyLista(" where id="+this.presupuestoventaslineas.getid_zona());
									//this.inicializarActualizarBindingPresupuestoVentasLineas(false,false);
						this.zonasForeignKey=new ArrayList<Zona>();

						if(presupuestoventaslineas.getZona()!=null) {
							this.zonasForeignKey.add(presupuestoventaslineas.getZona());
						}

						this.addItemDefectoCombosForeignKeyZona();
						this.cargarCombosFrameZonasForeignKey("Todos");
					}
					this.setActualZonaForeignKey(this.presupuestoventaslineas.getid_zona(),false,"Formulario");

					//Linea
					if(!this.presupuestoventaslineasConstantesFunciones.cargarid_lineaPresupuestoVentasLineas || this.presupuestoventaslineasConstantesFunciones.event_dependid_lineaPresupuestoVentasLineas) {
						//this.cargarCombosLineasForeignKeyLista(" where id="+this.presupuestoventaslineas.getid_linea());
									//this.inicializarActualizarBindingPresupuestoVentasLineas(false,false);
						this.lineasForeignKey=new ArrayList<Linea>();

						if(presupuestoventaslineas.getLinea()!=null) {
							this.lineasForeignKey.add(presupuestoventaslineas.getLinea());
						}

						this.addItemDefectoCombosForeignKeyLinea();
						this.cargarCombosFrameLineasForeignKey("Todos");
					}
					this.setActualLineaForeignKey(this.presupuestoventaslineas.getid_linea(),false,"Formulario");

					//LineaGrupo
					if(!this.presupuestoventaslineasConstantesFunciones.cargarid_linea_grupoPresupuestoVentasLineas || this.presupuestoventaslineasConstantesFunciones.event_dependid_linea_grupoPresupuestoVentasLineas) {
						//this.cargarCombosLineaGruposForeignKeyLista(" where id="+this.presupuestoventaslineas.getid_linea_grupo());
									//this.inicializarActualizarBindingPresupuestoVentasLineas(false,false);
						this.lineagruposForeignKey=new ArrayList<Linea>();

						if(presupuestoventaslineas.getLineaGrupo()!=null) {
							this.lineagruposForeignKey.add(presupuestoventaslineas.getLineaGrupo());
						}

						this.addItemDefectoCombosForeignKeyLineaGrupo();
						this.cargarCombosFrameLineaGruposForeignKey("Todos");
					}
					this.setActualLineaGrupoForeignKey(this.presupuestoventaslineas.getid_linea_grupo(),false,"Formulario");

					//LineaCategoria
					if(!this.presupuestoventaslineasConstantesFunciones.cargarid_linea_categoriaPresupuestoVentasLineas || this.presupuestoventaslineasConstantesFunciones.event_dependid_linea_categoriaPresupuestoVentasLineas) {
						//this.cargarCombosLineaCategoriasForeignKeyLista(" where id="+this.presupuestoventaslineas.getid_linea_categoria());
									//this.inicializarActualizarBindingPresupuestoVentasLineas(false,false);
						this.lineacategoriasForeignKey=new ArrayList<Linea>();

						if(presupuestoventaslineas.getLineaCategoria()!=null) {
							this.lineacategoriasForeignKey.add(presupuestoventaslineas.getLineaCategoria());
						}

						this.addItemDefectoCombosForeignKeyLineaCategoria();
						this.cargarCombosFrameLineaCategoriasForeignKey("Todos");
					}
					this.setActualLineaCategoriaForeignKey(this.presupuestoventaslineas.getid_linea_categoria(),false,"Formulario");

					//LineaMarca
					if(!this.presupuestoventaslineasConstantesFunciones.cargarid_linea_marcaPresupuestoVentasLineas || this.presupuestoventaslineasConstantesFunciones.event_dependid_linea_marcaPresupuestoVentasLineas) {
						//this.cargarCombosLineaMarcasForeignKeyLista(" where id="+this.presupuestoventaslineas.getid_linea_marca());
									//this.inicializarActualizarBindingPresupuestoVentasLineas(false,false);
						this.lineamarcasForeignKey=new ArrayList<Linea>();

						if(presupuestoventaslineas.getLineaMarca()!=null) {
							this.lineamarcasForeignKey.add(presupuestoventaslineas.getLineaMarca());
						}

						this.addItemDefectoCombosForeignKeyLineaMarca();
						this.cargarCombosFrameLineaMarcasForeignKey("Todos");
					}
					this.setActualLineaMarcaForeignKey(this.presupuestoventaslineas.getid_linea_marca(),false,"Formulario");
				} catch(Exception e) {
					throw e;
				}
				
				this.actualizarEstadoCeldasBotonesPresupuestoVentasLineas("s", this.isGuardarCambiosEnLote, this.isEsMantenimientoRelacionado);
				
				//NO FUNCIONA BINDING PERO SE MANTIENE
				this.inicializarActualizarBindingBotonesPresupuestoVentasLineas(false) ;
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualPresupuestoVentasLineas() ;
			//}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PresupuestoVentasLineasConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setVariablesObjetoActualToFormularioTodoPresupuestoVentasLineas(PresupuestoVentasLineas presupuestoventaslineas) throws Exception { 
		this.setVariablesObjetoActualToFormularioTodoPresupuestoVentasLineas(presupuestoventaslineas,false,"NINGUNO");
	}
	
	public void setVariablesObjetoActualToFormularioTodoPresupuestoVentasLineas(PresupuestoVentasLineas presupuestoventaslineas,Boolean conCargarListasDesdeObjetoActual,String sTipoEvento) throws Exception { 
		this.setVariablesObjetoActualToFormularioPresupuestoVentasLineas(presupuestoventaslineas);
		
		if(conCargarListasDesdeObjetoActual) {
			this.setVariablesObjetoActualToListasForeignKeyPresupuestoVentasLineas(presupuestoventaslineas,sTipoEvento);
		}
		
		this.setVariablesObjetoActualToFormularioForeignKeyPresupuestoVentasLineas(presupuestoventaslineas);
	}
	
	public void setVariablesObjetoActualToFormularioPresupuestoVentasLineas(PresupuestoVentasLineas presupuestoventaslineas) throws Exception { 
		try {			
			Image imageActual=null;
			ImageIcon imageIcon = null;
			
			if(this.jInternalFrameDetalleFormPresupuestoVentasLineas==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			
			this.jInternalFrameDetalleFormPresupuestoVentasLineas.jLabelidPresupuestoVentasLineas.setText(presupuestoventaslineas.getId().toString());
			this.jInternalFrameDetalleFormPresupuestoVentasLineas.jTextFieldprecioPresupuestoVentasLineas.setText(presupuestoventaslineas.getprecio().toString());
			this.jInternalFrameDetalleFormPresupuestoVentasLineas.jTextFieldcantidadPresupuestoVentasLineas.setText(presupuestoventaslineas.getcantidad().toString());
			this.jInternalFrameDetalleFormPresupuestoVentasLineas.jTextFieldvalorPresupuestoVentasLineas.setText(presupuestoventaslineas.getvalor().toString());
			this.jInternalFrameDetalleFormPresupuestoVentasLineas.jTextFieldporcentajePresupuestoVentasLineas.setText(presupuestoventaslineas.getporcentaje().toString());
			this.jInternalFrameDetalleFormPresupuestoVentasLineas.jTextFieldcantidad_totalPresupuestoVentasLineas.setText(presupuestoventaslineas.getcantidad_total().toString());
			this.jInternalFrameDetalleFormPresupuestoVentasLineas.jTextFieldvalor_totalPresupuestoVentasLineas.setText(presupuestoventaslineas.getvalor_total().toString());
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,PresupuestoVentasLineasConstantesFunciones.CLASSNAME);
		}
	}
		
	public void actualizarInformacion(String sTipo,PresupuestoVentasLineas presupuestoventaslineasLocal) throws Exception {
		this.actualizarInformacion(sTipo,false,presupuestoventaslineasLocal);
	}	
	
	public void actualizarInformacion(String sTipo,Boolean conParametroObjeto,PresupuestoVentasLineas presupuestoventaslineasLocal) throws Exception {
		
		if(!conParametroObjeto) {
			if(!this.getEsControlTabla()) {
				presupuestoventaslineasLocal=this.presupuestoventaslineas;
			} else {
				presupuestoventaslineasLocal=this.presupuestoventaslineasAnterior;
			}
		}
		
		if(this.permiteMantenimiento(presupuestoventaslineasLocal)) {
			if(sTipo.equals("EVENTO_CONTROL")) { // || sTipo.equals("EVENTO_NUEVO")
				if(!this.esControlTabla) {
					this.setVariablesFormularioToObjetoActualTodoPresupuestoVentasLineas(presupuestoventaslineasLocal,true);
					
					if(presupuestoventaslineasSessionBean.getConGuardarRelaciones()) {
						this.actualizarRelaciones(presupuestoventaslineasLocal);
					}
				}
			
			} else if(sTipo.equals("INFO_PADRE")) {
				
				if(this.presupuestoventaslineasSessionBean.getEsGuardarRelacionado()) {
					this.actualizarRelacionFkPadreActual(presupuestoventaslineasLocal);
				}
			}
		}
	}
	
	public void setVariablesFormularioToObjetoActualTodoPresupuestoVentasLineas(PresupuestoVentasLineas presupuestoventaslineas,Boolean conColumnasBase) throws Exception { 
		this.setVariablesFormularioToObjetoActualPresupuestoVentasLineas(presupuestoventaslineas,conColumnasBase);
		this.setVariablesFormularioToObjetoActualForeignKeysPresupuestoVentasLineas(presupuestoventaslineas);
	}
	
	public void setVariablesFormularioToObjetoActualPresupuestoVentasLineas(PresupuestoVentasLineas presupuestoventaslineas,Boolean conColumnasBase) throws Exception { 
		this.setVariablesFormularioToObjetoActualPresupuestoVentasLineas(presupuestoventaslineas,conColumnasBase,true);
	}
	
	public void setVariablesFormularioToObjetoActualPresupuestoVentasLineas(PresupuestoVentasLineas presupuestoventaslineas,Boolean conColumnasBase,Boolean conInicializarInvalidValues) throws Exception { 
		String sMensajeCampoActual="";
		Boolean estaValidado=true;
		try {
			
			if(this.jInternalFrameDetalleFormPresupuestoVentasLineas==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			if(conInicializarInvalidValues) {
				this.inicializarInvalidValues();
			}
			
			

		try {
			if(this.jInternalFrameDetalleFormPresupuestoVentasLineas.jLabelidPresupuestoVentasLineas.getText()==null || this.jInternalFrameDetalleFormPresupuestoVentasLineas.jLabelidPresupuestoVentasLineas.getText()=="" || this.jInternalFrameDetalleFormPresupuestoVentasLineas.jLabelidPresupuestoVentasLineas.getText()=="Id") {
				this.jInternalFrameDetalleFormPresupuestoVentasLineas.jLabelidPresupuestoVentasLineas.setText("0");
			}

			if(conColumnasBase) {presupuestoventaslineas.setId(Long.parseLong(this.jInternalFrameDetalleFormPresupuestoVentasLineas.jLabelidPresupuestoVentasLineas.getText()));}
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+PresupuestoVentasLineasConstantesFunciones.LABEL_ID+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPresupuestoVentasLineas.jLabelIdPresupuestoVentasLineas,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			presupuestoventaslineas.setprecio(Double.parseDouble(this.jInternalFrameDetalleFormPresupuestoVentasLineas.jTextFieldprecioPresupuestoVentasLineas.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+PresupuestoVentasLineasConstantesFunciones.LABEL_PRECIO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPresupuestoVentasLineas.jLabelprecioPresupuestoVentasLineas,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			presupuestoventaslineas.setcantidad(Integer.parseInt(this.jInternalFrameDetalleFormPresupuestoVentasLineas.jTextFieldcantidadPresupuestoVentasLineas.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+PresupuestoVentasLineasConstantesFunciones.LABEL_CANTIDAD+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPresupuestoVentasLineas.jLabelcantidadPresupuestoVentasLineas,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			presupuestoventaslineas.setvalor(Double.parseDouble(this.jInternalFrameDetalleFormPresupuestoVentasLineas.jTextFieldvalorPresupuestoVentasLineas.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+PresupuestoVentasLineasConstantesFunciones.LABEL_VALOR+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPresupuestoVentasLineas.jLabelvalorPresupuestoVentasLineas,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			presupuestoventaslineas.setporcentaje(Double.parseDouble(this.jInternalFrameDetalleFormPresupuestoVentasLineas.jTextFieldporcentajePresupuestoVentasLineas.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+PresupuestoVentasLineasConstantesFunciones.LABEL_PORCENTAJE+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPresupuestoVentasLineas.jLabelporcentajePresupuestoVentasLineas,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			presupuestoventaslineas.setcantidad_total(Integer.parseInt(this.jInternalFrameDetalleFormPresupuestoVentasLineas.jTextFieldcantidad_totalPresupuestoVentasLineas.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+PresupuestoVentasLineasConstantesFunciones.LABEL_CANTIDADTOTAL+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPresupuestoVentasLineas.jLabelcantidad_totalPresupuestoVentasLineas,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			presupuestoventaslineas.setvalor_total(Double.parseDouble(this.jInternalFrameDetalleFormPresupuestoVentasLineas.jTextFieldvalor_totalPresupuestoVentasLineas.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+PresupuestoVentasLineasConstantesFunciones.LABEL_VALORTOTAL+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPresupuestoVentasLineas.jLabelvalor_totalPresupuestoVentasLineas,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}
			
			if(!estaValidado) {
				throw new Exception(sMensajeCampoActual);
			}
		} catch(NumberFormatException e) {
			throw new Exception(sMensajeCampoActual);
			//FuncionesSwing.manageException(this, e,logger,MovimientoInventarioConstantesFunciones.CLASSNAME);
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,PresupuestoVentasLineasConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setVariablesForeignKeyObjetoBeanDefectoActualToObjetoActualPresupuestoVentasLineas(PresupuestoVentasLineas presupuestoventaslineasBean,PresupuestoVentasLineas presupuestoventaslineas,Boolean conDefault,Boolean conColumnasBase) throws Exception { 
		try {
			
			if(conDefault || (!conDefault && presupuestoventaslineasBean.getid_vendedor()!=null && !presupuestoventaslineasBean.getid_vendedor().equals(-1L))) {presupuestoventaslineas.setid_vendedor(presupuestoventaslineasBean.getid_vendedor());}
			if(conDefault || (!conDefault && presupuestoventaslineasBean.getid_pais()!=null && !presupuestoventaslineasBean.getid_pais().equals(-1L))) {presupuestoventaslineas.setid_pais(presupuestoventaslineasBean.getid_pais());}
			if(conDefault || (!conDefault && presupuestoventaslineasBean.getid_ciudad()!=null && !presupuestoventaslineasBean.getid_ciudad().equals(-1L))) {presupuestoventaslineas.setid_ciudad(presupuestoventaslineasBean.getid_ciudad());}
			if(conDefault || (!conDefault && presupuestoventaslineasBean.getid_zona()!=null && !presupuestoventaslineasBean.getid_zona().equals(null))) {presupuestoventaslineas.setid_zona(presupuestoventaslineasBean.getid_zona());}
			if(conDefault || (!conDefault && presupuestoventaslineasBean.getid_linea()!=null && !presupuestoventaslineasBean.getid_linea().equals(-1L))) {presupuestoventaslineas.setid_linea(presupuestoventaslineasBean.getid_linea());}
			if(conDefault || (!conDefault && presupuestoventaslineasBean.getid_linea_grupo()!=null && !presupuestoventaslineasBean.getid_linea_grupo().equals(null))) {presupuestoventaslineas.setid_linea_grupo(presupuestoventaslineasBean.getid_linea_grupo());}
			if(conDefault || (!conDefault && presupuestoventaslineasBean.getid_linea_categoria()!=null && !presupuestoventaslineasBean.getid_linea_categoria().equals(null))) {presupuestoventaslineas.setid_linea_categoria(presupuestoventaslineasBean.getid_linea_categoria());}
			if(conDefault || (!conDefault && presupuestoventaslineasBean.getid_linea_marca()!=null && !presupuestoventaslineasBean.getid_linea_marca().equals(null))) {presupuestoventaslineas.setid_linea_marca(presupuestoventaslineasBean.getid_linea_marca());}
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,PresupuestoVentasLineasConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setCopiarVariablesObjetosPresupuestoVentasLineas(PresupuestoVentasLineas presupuestoventaslineasOrigen,PresupuestoVentasLineas presupuestoventaslineas,Boolean conDefault,Boolean conColumnasBase) throws Exception { 
		try {
			
			if(conColumnasBase) {if(conDefault || (!conDefault && presupuestoventaslineasOrigen.getId()!=null && !presupuestoventaslineasOrigen.getId().equals(0L))) {presupuestoventaslineas.setId(presupuestoventaslineasOrigen.getId());}}
			if(conDefault || (!conDefault && presupuestoventaslineasOrigen.getid_vendedor()!=null && !presupuestoventaslineasOrigen.getid_vendedor().equals(-1L))) {presupuestoventaslineas.setid_vendedor(presupuestoventaslineasOrigen.getid_vendedor());}
			if(conDefault || (!conDefault && presupuestoventaslineasOrigen.getid_pais()!=null && !presupuestoventaslineasOrigen.getid_pais().equals(-1L))) {presupuestoventaslineas.setid_pais(presupuestoventaslineasOrigen.getid_pais());}
			if(conDefault || (!conDefault && presupuestoventaslineasOrigen.getid_ciudad()!=null && !presupuestoventaslineasOrigen.getid_ciudad().equals(-1L))) {presupuestoventaslineas.setid_ciudad(presupuestoventaslineasOrigen.getid_ciudad());}
			if(conDefault || (!conDefault && presupuestoventaslineasOrigen.getid_zona()!=null && !presupuestoventaslineasOrigen.getid_zona().equals(null))) {presupuestoventaslineas.setid_zona(presupuestoventaslineasOrigen.getid_zona());}
			if(conDefault || (!conDefault && presupuestoventaslineasOrigen.getid_linea()!=null && !presupuestoventaslineasOrigen.getid_linea().equals(-1L))) {presupuestoventaslineas.setid_linea(presupuestoventaslineasOrigen.getid_linea());}
			if(conDefault || (!conDefault && presupuestoventaslineasOrigen.getid_linea_grupo()!=null && !presupuestoventaslineasOrigen.getid_linea_grupo().equals(null))) {presupuestoventaslineas.setid_linea_grupo(presupuestoventaslineasOrigen.getid_linea_grupo());}
			if(conDefault || (!conDefault && presupuestoventaslineasOrigen.getid_linea_categoria()!=null && !presupuestoventaslineasOrigen.getid_linea_categoria().equals(null))) {presupuestoventaslineas.setid_linea_categoria(presupuestoventaslineasOrigen.getid_linea_categoria());}
			if(conDefault || (!conDefault && presupuestoventaslineasOrigen.getid_linea_marca()!=null && !presupuestoventaslineasOrigen.getid_linea_marca().equals(null))) {presupuestoventaslineas.setid_linea_marca(presupuestoventaslineasOrigen.getid_linea_marca());}
			if(conDefault || (!conDefault && presupuestoventaslineasOrigen.getprecio()!=null && !presupuestoventaslineasOrigen.getprecio().equals(0.0))) {presupuestoventaslineas.setprecio(presupuestoventaslineasOrigen.getprecio());}
			if(conDefault || (!conDefault && presupuestoventaslineasOrigen.getcantidad()!=null && !presupuestoventaslineasOrigen.getcantidad().equals(0))) {presupuestoventaslineas.setcantidad(presupuestoventaslineasOrigen.getcantidad());}
			if(conDefault || (!conDefault && presupuestoventaslineasOrigen.getvalor()!=null && !presupuestoventaslineasOrigen.getvalor().equals(0.0))) {presupuestoventaslineas.setvalor(presupuestoventaslineasOrigen.getvalor());}
			if(conDefault || (!conDefault && presupuestoventaslineasOrigen.getporcentaje()!=null && !presupuestoventaslineasOrigen.getporcentaje().equals(0.0))) {presupuestoventaslineas.setporcentaje(presupuestoventaslineasOrigen.getporcentaje());}
			if(conDefault || (!conDefault && presupuestoventaslineasOrigen.getcantidad_total()!=null && !presupuestoventaslineasOrigen.getcantidad_total().equals(0))) {presupuestoventaslineas.setcantidad_total(presupuestoventaslineasOrigen.getcantidad_total());}
			if(conDefault || (!conDefault && presupuestoventaslineasOrigen.getvalor_total()!=null && !presupuestoventaslineasOrigen.getvalor_total().equals(0.0))) {presupuestoventaslineas.setvalor_total(presupuestoventaslineasOrigen.getvalor_total());}
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,PresupuestoVentasLineasConstantesFunciones.CLASSNAME);
		}
	}
	
	/*
	public void setVariablesObjetoBeanActualToFormularioPresupuestoVentasLineas(PresupuestoVentasLineas presupuestoventaslineas) throws Exception { 
		try {
			
			this.jInternalFrameDetalleFormPresupuestoVentasLineas.jLabelidPresupuestoVentasLineas.setText(presupuestoventaslineas.getId().toString());
			this.jInternalFrameDetalleFormPresupuestoVentasLineas.jTextFieldprecioPresupuestoVentasLineas.setText(presupuestoventaslineas.getprecio().toString());
			this.jInternalFrameDetalleFormPresupuestoVentasLineas.jTextFieldcantidadPresupuestoVentasLineas.setText(presupuestoventaslineas.getcantidad().toString());
			this.jInternalFrameDetalleFormPresupuestoVentasLineas.jTextFieldvalorPresupuestoVentasLineas.setText(presupuestoventaslineas.getvalor().toString());
			this.jInternalFrameDetalleFormPresupuestoVentasLineas.jTextFieldporcentajePresupuestoVentasLineas.setText(presupuestoventaslineas.getporcentaje().toString());
			this.jInternalFrameDetalleFormPresupuestoVentasLineas.jTextFieldcantidad_totalPresupuestoVentasLineas.setText(presupuestoventaslineas.getcantidad_total().toString());
			this.jInternalFrameDetalleFormPresupuestoVentasLineas.jTextFieldvalor_totalPresupuestoVentasLineas.setText(presupuestoventaslineas.getvalor_total().toString());
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PresupuestoVentasLineasConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesObjetoBeanActualToFormularioPresupuestoVentasLineas(PresupuestoVentasLineasBean presupuestoventaslineasBean) throws Exception { 
		try {
			
			this.jInternalFrameDetalleFormPresupuestoVentasLineas.jLabelidPresupuestoVentasLineas.setText(presupuestoventaslineasBean.getId().toString());
			this.jInternalFrameDetalleFormPresupuestoVentasLineas.jTextFieldprecioPresupuestoVentasLineas.setText(presupuestoventaslineasBean.getprecio().toString());
			this.jInternalFrameDetalleFormPresupuestoVentasLineas.jTextFieldcantidadPresupuestoVentasLineas.setText(presupuestoventaslineasBean.getcantidad().toString());
			this.jInternalFrameDetalleFormPresupuestoVentasLineas.jTextFieldvalorPresupuestoVentasLineas.setText(presupuestoventaslineasBean.getvalor().toString());
			this.jInternalFrameDetalleFormPresupuestoVentasLineas.jTextFieldporcentajePresupuestoVentasLineas.setText(presupuestoventaslineasBean.getporcentaje().toString());
			this.jInternalFrameDetalleFormPresupuestoVentasLineas.jTextFieldcantidad_totalPresupuestoVentasLineas.setText(presupuestoventaslineasBean.getcantidad_total().toString());
			this.jInternalFrameDetalleFormPresupuestoVentasLineas.jTextFieldvalor_totalPresupuestoVentasLineas.setText(presupuestoventaslineasBean.getvalor_total().toString());
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PresupuestoVentasLineasConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesObjetoReturnGeneralToBeanPresupuestoVentasLineas(PresupuestoVentasLineasParameterReturnGeneral presupuestoventaslineasReturnGeneral,PresupuestoVentasLineasBean presupuestoventaslineasBean,Boolean conDefault) throws Exception { 
		try {
			PresupuestoVentasLineas presupuestoventaslineasLocal=new PresupuestoVentasLineas();
			
			presupuestoventaslineasLocal=presupuestoventaslineasReturnGeneral.getPresupuestoVentasLineas();
			
			
			if(conColumnasBase) {if(conDefault || (!conDefault && presupuestoventaslineasLocal.getId()!=null && !presupuestoventaslineasLocal.getId().equals(0L))) {presupuestoventaslineasBean.setId(presupuestoventaslineasLocal.getId());}}
			if(conDefault || (!conDefault && presupuestoventaslineasLocal.getid_vendedor()!=null && !presupuestoventaslineasLocal.getid_vendedor().equals(-1L))) {presupuestoventaslineasBean.setid_vendedor(presupuestoventaslineasLocal.getid_vendedor());}
			if(conDefault || (!conDefault && presupuestoventaslineasLocal.getid_pais()!=null && !presupuestoventaslineasLocal.getid_pais().equals(-1L))) {presupuestoventaslineasBean.setid_pais(presupuestoventaslineasLocal.getid_pais());}
			if(conDefault || (!conDefault && presupuestoventaslineasLocal.getid_ciudad()!=null && !presupuestoventaslineasLocal.getid_ciudad().equals(-1L))) {presupuestoventaslineasBean.setid_ciudad(presupuestoventaslineasLocal.getid_ciudad());}
			if(conDefault || (!conDefault && presupuestoventaslineasLocal.getid_zona()!=null && !presupuestoventaslineasLocal.getid_zona().equals(null))) {presupuestoventaslineasBean.setid_zona(presupuestoventaslineasLocal.getid_zona());}
			if(conDefault || (!conDefault && presupuestoventaslineasLocal.getid_linea()!=null && !presupuestoventaslineasLocal.getid_linea().equals(-1L))) {presupuestoventaslineasBean.setid_linea(presupuestoventaslineasLocal.getid_linea());}
			if(conDefault || (!conDefault && presupuestoventaslineasLocal.getid_linea_grupo()!=null && !presupuestoventaslineasLocal.getid_linea_grupo().equals(null))) {presupuestoventaslineasBean.setid_linea_grupo(presupuestoventaslineasLocal.getid_linea_grupo());}
			if(conDefault || (!conDefault && presupuestoventaslineasLocal.getid_linea_categoria()!=null && !presupuestoventaslineasLocal.getid_linea_categoria().equals(null))) {presupuestoventaslineasBean.setid_linea_categoria(presupuestoventaslineasLocal.getid_linea_categoria());}
			if(conDefault || (!conDefault && presupuestoventaslineasLocal.getid_linea_marca()!=null && !presupuestoventaslineasLocal.getid_linea_marca().equals(null))) {presupuestoventaslineasBean.setid_linea_marca(presupuestoventaslineasLocal.getid_linea_marca());}
			if(conDefault || (!conDefault && presupuestoventaslineasLocal.getprecio()!=null && !presupuestoventaslineasLocal.getprecio().equals(0.0))) {presupuestoventaslineasBean.setprecio(presupuestoventaslineasLocal.getprecio());}
			if(conDefault || (!conDefault && presupuestoventaslineasLocal.getcantidad()!=null && !presupuestoventaslineasLocal.getcantidad().equals(0))) {presupuestoventaslineasBean.setcantidad(presupuestoventaslineasLocal.getcantidad());}
			if(conDefault || (!conDefault && presupuestoventaslineasLocal.getvalor()!=null && !presupuestoventaslineasLocal.getvalor().equals(0.0))) {presupuestoventaslineasBean.setvalor(presupuestoventaslineasLocal.getvalor());}
			if(conDefault || (!conDefault && presupuestoventaslineasLocal.getporcentaje()!=null && !presupuestoventaslineasLocal.getporcentaje().equals(0.0))) {presupuestoventaslineasBean.setporcentaje(presupuestoventaslineasLocal.getporcentaje());}
			if(conDefault || (!conDefault && presupuestoventaslineasLocal.getcantidad_total()!=null && !presupuestoventaslineasLocal.getcantidad_total().equals(0))) {presupuestoventaslineasBean.setcantidad_total(presupuestoventaslineasLocal.getcantidad_total());}
			if(conDefault || (!conDefault && presupuestoventaslineasLocal.getvalor_total()!=null && !presupuestoventaslineasLocal.getvalor_total().equals(0.0))) {presupuestoventaslineasBean.setvalor_total(presupuestoventaslineasLocal.getvalor_total());}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PresupuestoVentasLineasConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	@SuppressWarnings("rawtypes")
	public static void setActualComboBoxPresupuestoVentasLineasGenerico(Long idPresupuestoVentasLineasSeleccionado,JComboBox jComboBoxPresupuestoVentasLineas,List<PresupuestoVentasLineas> presupuestoventaslineassLocal)throws Exception {
		try {
			PresupuestoVentasLineas  presupuestoventaslineasTemp=null;

			for(PresupuestoVentasLineas presupuestoventaslineasAux:presupuestoventaslineassLocal) {
				if(presupuestoventaslineasAux.getId()!=null && presupuestoventaslineasAux.getId().equals(idPresupuestoVentasLineasSeleccionado)) {
					presupuestoventaslineasTemp=presupuestoventaslineasAux;
					break;
				}
			}

			jComboBoxPresupuestoVentasLineas.setSelectedItem(presupuestoventaslineasTemp);

		} catch(Exception e) {
			throw e;
		}
	}
	
	@SuppressWarnings("rawtypes")
	public static void setHotKeysComboBoxPresupuestoVentasLineasGenerico(JComboBox jComboBoxPresupuestoVentasLineas,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda)throws Exception {
		try {
			//GLOBAL(id_empresa,id_sucursal,id_ejercicio)
			//BASICO(normal)
			//CON_BUSQUEDA(Permite buscar Fk)
			
			String sKeyStrokeName="";
			KeyStroke keyStrokeControl=null;
			
			if(!sTipoBusqueda.equals("GLOBAL")) {
				
				//BUSCAR
				sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_BUSCAR");
				keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_BUSCAR");
				
				jComboBoxPresupuestoVentasLineas.getInputMap().put(keyStrokeControl, sKeyStrokeName);
				jComboBoxPresupuestoVentasLineas.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction+"Busqueda"));
				//BUSCAR
				
				
				//ACTUALIZAR
				sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_ACTUALIZAR");
				keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_ACTUALIZAR");
				
				jComboBoxPresupuestoVentasLineas.getInputMap().put(keyStrokeControl, sKeyStrokeName);
				jComboBoxPresupuestoVentasLineas.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction+"Update"));
				//ACTUALIZAR
				
				if(sTipoBusqueda.contains("CON_EVENT_CHANGE")) {
					if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
						jComboBoxPresupuestoVentasLineas.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
						jComboBoxPresupuestoVentasLineas.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));						
					}
					
					/*
					if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
						jComboBoxPresupuestoVentasLineas.addItemListener(new ComboBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
					} else {
						jComboBoxPresupuestoVentasLineas.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
					}
					*/
				}								
				
				//CON_BUSQUEDA								
				if(sTipoBusqueda.contains("CON_BUSQUEDA")) {
					sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_BUSQUEDA");
					keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_BUSQUEDA");
							
					jComboBoxPresupuestoVentasLineas.getInputMap().put(keyStrokeControl, sKeyStrokeName);
					jComboBoxPresupuestoVentasLineas.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction));
				}
				//CON_BUSQUEDA
				
				
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	@SuppressWarnings("rawtypes")
	public void setHotKeysComboBoxGenerico(JComboBox jComboBox,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		if(sTipoBusqueda.contains("CON_EVENT_CHANGE")) {
			if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
				jComboBox.addItemListener(new ComboBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
				jComboBox.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
			} else {
				jComboBox.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
				jComboBox.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
			}
		}
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJTextFieldGenerico(JTextField jTextField,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jTextField.addFocusListener(new TextFieldFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		jTextField.addActionListener(new TextFieldActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJTextAreaGenerico(JTextArea jTextArea,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jTextArea.addFocusListener(new TextAreaFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//NO EXISTE
		//jTextArea.addActionListener(new TextAreaActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJLabelGenerico(JLabel jLabel,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jLabel.addFocusListener(new LabelFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//NO EXISTE
		//jLabel.addActionListener(new LabelActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJCheckBoxGenerico(JCheckBox jCheckBox,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jCheckBox.addFocusListener(new CheckBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//SI SE DEFINE AL CAMBIAR VALOR, ESTE NUEVO VALOR NO SE ENVIA AL EVENTO
		//jCheckBox.addItemListener(new CheckBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJDateChooserGenerico(JDateChooser jDateChooser,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		FuncionesSwing.addDateListener(jDateChooser, jInternalFrameBase, sNombreHotKeyAbstractAction);
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJButtonGenerico(JButton jButton,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jButton.addActionListener(new ButtonActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	public void jButtonRelacionActionPerformed(String sTipo,ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado) {
		//ABRIR RELACIONES
		try {
			
		} catch (Exception e) {
			FuncionesSwing.manageException2(this, e,logger,PresupuestoVentasLineasConstantesFunciones.CLASSNAME);
		}
	}
	
	public String getDescripcionFk(String sTipo,JTable table,Object value,int intSelectedRow) throws Exception {
		//DESCRIPCIONES FK		
		String sDescripcion="";
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			presupuestoventaslineas=(PresupuestoVentasLineas) presupuestoventaslineasLogic.getPresupuestoVentasLineass().toArray()[table.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE) {
			presupuestoventaslineas =(PresupuestoVentasLineas) presupuestoventaslineass.toArray()[table.convertRowIndexToModel(intSelectedRow)];
		}
					
		
		if(sTipo.equals("Empresa")) {
			//sDescripcion=this.getActualEmpresaForeignKeyDescripcion((Long)value);
			if(!presupuestoventaslineas.getIsNew() && !presupuestoventaslineas.getIsChanged() && !presupuestoventaslineas.getIsDeleted()) {
				sDescripcion=presupuestoventaslineas.getempresa_descripcion();
			} else {
				//sDescripcion=this.getActualEmpresaForeignKeyDescripcion((Long)value);
				sDescripcion=presupuestoventaslineas.getempresa_descripcion();
			}
		}

		if(sTipo.equals("Sucursal")) {
			//sDescripcion=this.getActualSucursalForeignKeyDescripcion((Long)value);
			if(!presupuestoventaslineas.getIsNew() && !presupuestoventaslineas.getIsChanged() && !presupuestoventaslineas.getIsDeleted()) {
				sDescripcion=presupuestoventaslineas.getsucursal_descripcion();
			} else {
				//sDescripcion=this.getActualSucursalForeignKeyDescripcion((Long)value);
				sDescripcion=presupuestoventaslineas.getsucursal_descripcion();
			}
		}

		if(sTipo.equals("Ejercicio")) {
			//sDescripcion=this.getActualEjercicioForeignKeyDescripcion((Long)value);
			if(!presupuestoventaslineas.getIsNew() && !presupuestoventaslineas.getIsChanged() && !presupuestoventaslineas.getIsDeleted()) {
				sDescripcion=presupuestoventaslineas.getejercicio_descripcion();
			} else {
				//sDescripcion=this.getActualEjercicioForeignKeyDescripcion((Long)value);
				sDescripcion=presupuestoventaslineas.getejercicio_descripcion();
			}
		}

		if(sTipo.equals("Periodo")) {
			//sDescripcion=this.getActualPeriodoForeignKeyDescripcion((Long)value);
			if(!presupuestoventaslineas.getIsNew() && !presupuestoventaslineas.getIsChanged() && !presupuestoventaslineas.getIsDeleted()) {
				sDescripcion=presupuestoventaslineas.getperiodo_descripcion();
			} else {
				//sDescripcion=this.getActualPeriodoForeignKeyDescripcion((Long)value);
				sDescripcion=presupuestoventaslineas.getperiodo_descripcion();
			}
		}

		if(sTipo.equals("Vendedor")) {
			//sDescripcion=this.getActualVendedorForeignKeyDescripcion((Long)value);
			if(!presupuestoventaslineas.getIsNew() && !presupuestoventaslineas.getIsChanged() && !presupuestoventaslineas.getIsDeleted()) {
				sDescripcion=presupuestoventaslineas.getvendedor_descripcion();
			} else {
				//sDescripcion=this.getActualVendedorForeignKeyDescripcion((Long)value);
				sDescripcion=presupuestoventaslineas.getvendedor_descripcion();
			}
		}

		if(sTipo.equals("Pais")) {
			//sDescripcion=this.getActualPaisForeignKeyDescripcion((Long)value);
			if(!presupuestoventaslineas.getIsNew() && !presupuestoventaslineas.getIsChanged() && !presupuestoventaslineas.getIsDeleted()) {
				sDescripcion=presupuestoventaslineas.getpais_descripcion();
			} else {
				//sDescripcion=this.getActualPaisForeignKeyDescripcion((Long)value);
				sDescripcion=presupuestoventaslineas.getpais_descripcion();
			}
		}

		if(sTipo.equals("Ciudad")) {
			//sDescripcion=this.getActualCiudadForeignKeyDescripcion((Long)value);
			if(!presupuestoventaslineas.getIsNew() && !presupuestoventaslineas.getIsChanged() && !presupuestoventaslineas.getIsDeleted()) {
				sDescripcion=presupuestoventaslineas.getciudad_descripcion();
			} else {
				//sDescripcion=this.getActualCiudadForeignKeyDescripcion((Long)value);
				sDescripcion=presupuestoventaslineas.getciudad_descripcion();
			}
		}

		if(sTipo.equals("Zona")) {
			//sDescripcion=this.getActualZonaForeignKeyDescripcion((Long)value);
			if(!presupuestoventaslineas.getIsNew() && !presupuestoventaslineas.getIsChanged() && !presupuestoventaslineas.getIsDeleted()) {
				sDescripcion=presupuestoventaslineas.getzona_descripcion();
			} else {
				//sDescripcion=this.getActualZonaForeignKeyDescripcion((Long)value);
				sDescripcion=presupuestoventaslineas.getzona_descripcion();
			}
		}

		if(sTipo.equals("Linea")) {
			//sDescripcion=this.getActualLineaForeignKeyDescripcion((Long)value);
			if(!presupuestoventaslineas.getIsNew() && !presupuestoventaslineas.getIsChanged() && !presupuestoventaslineas.getIsDeleted()) {
				sDescripcion=presupuestoventaslineas.getlinea_descripcion();
			} else {
				//sDescripcion=this.getActualLineaForeignKeyDescripcion((Long)value);
				sDescripcion=presupuestoventaslineas.getlinea_descripcion();
			}
		}

		if(sTipo.equals("LineaGrupo")) {
			//sDescripcion=this.getActualLineaGrupoForeignKeyDescripcion((Long)value);
			if(!presupuestoventaslineas.getIsNew() && !presupuestoventaslineas.getIsChanged() && !presupuestoventaslineas.getIsDeleted()) {
				sDescripcion=presupuestoventaslineas.getlineagrupo_descripcion();
			} else {
				//sDescripcion=this.getActualLineaGrupoForeignKeyDescripcion((Long)value);
				sDescripcion=presupuestoventaslineas.getlineagrupo_descripcion();
			}
		}

		if(sTipo.equals("LineaCategoria")) {
			//sDescripcion=this.getActualLineaCategoriaForeignKeyDescripcion((Long)value);
			if(!presupuestoventaslineas.getIsNew() && !presupuestoventaslineas.getIsChanged() && !presupuestoventaslineas.getIsDeleted()) {
				sDescripcion=presupuestoventaslineas.getlineacategoria_descripcion();
			} else {
				//sDescripcion=this.getActualLineaCategoriaForeignKeyDescripcion((Long)value);
				sDescripcion=presupuestoventaslineas.getlineacategoria_descripcion();
			}
		}

		if(sTipo.equals("LineaMarca")) {
			//sDescripcion=this.getActualLineaMarcaForeignKeyDescripcion((Long)value);
			if(!presupuestoventaslineas.getIsNew() && !presupuestoventaslineas.getIsChanged() && !presupuestoventaslineas.getIsDeleted()) {
				sDescripcion=presupuestoventaslineas.getlineamarca_descripcion();
			} else {
				//sDescripcion=this.getActualLineaMarcaForeignKeyDescripcion((Long)value);
				sDescripcion=presupuestoventaslineas.getlineamarca_descripcion();
			}
		}

		
		return sDescripcion;
	}
	
	public Color getColorFk(String sTipo,JTable table,Object value,int intSelectedRow) throws Exception {
		//DESCRIPCIONES FK		
		Color color=Color.WHITE;
		
		PresupuestoVentasLineas presupuestoventaslineasRow=new PresupuestoVentasLineas();
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			presupuestoventaslineasRow=(PresupuestoVentasLineas) presupuestoventaslineasLogic.getPresupuestoVentasLineass().toArray()[table.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE) {
			presupuestoventaslineasRow=(PresupuestoVentasLineas) presupuestoventaslineass.toArray()[table.convertRowIndexToModel(intSelectedRow)];
		}
					
		
		
		return color;
	}
	
	
	
	
	
	
	
	public void refrescarBindingTabla(Boolean blnSoloTabla) {
	}
	
	public void inicializarActualizarBindingBotonesManualPresupuestoVentasLineas(Boolean esSetControles) {						
		if(esSetControles) {
			this.jButtonNuevoPresupuestoVentasLineas.setVisible((this.isVisibilidadCeldaNuevoPresupuestoVentasLineas && this.isPermisoNuevoPresupuestoVentasLineas));			
			this.jButtonDuplicarPresupuestoVentasLineas.setVisible((this.isVisibilidadCeldaDuplicarPresupuestoVentasLineas && this.isPermisoDuplicarPresupuestoVentasLineas));			
			this.jButtonCopiarPresupuestoVentasLineas.setVisible((this.isVisibilidadCeldaCopiarPresupuestoVentasLineas && this.isPermisoCopiarPresupuestoVentasLineas));
			this.jButtonVerFormPresupuestoVentasLineas.setVisible((this.isVisibilidadCeldaVerFormPresupuestoVentasLineas && this.isPermisoVerFormPresupuestoVentasLineas));
			
			this.jButtonAbrirOrderByPresupuestoVentasLineas.setVisible((this.isVisibilidadCeldaOrdenPresupuestoVentasLineas && this.isPermisoOrdenPresupuestoVentasLineas));			
			
			this.jButtonNuevoRelacionesPresupuestoVentasLineas.setVisible((this.isVisibilidadCeldaNuevoRelacionesPresupuestoVentasLineas && this.isPermisoNuevoPresupuestoVentasLineas));			
			this.jButtonNuevoGuardarCambiosPresupuestoVentasLineas.setVisible((this.isVisibilidadCeldaNuevoPresupuestoVentasLineas && this.isPermisoNuevoPresupuestoVentasLineas && this.isPermisoGuardarCambiosPresupuestoVentasLineas));
			
			if(this.jInternalFrameDetalleFormPresupuestoVentasLineas!=null) {
			this.jInternalFrameDetalleFormPresupuestoVentasLineas.jButtonModificarPresupuestoVentasLineas.setVisible((this.isVisibilidadCeldaModificarPresupuestoVentasLineas && this.isPermisoActualizarPresupuestoVentasLineas));	
			this.jInternalFrameDetalleFormPresupuestoVentasLineas.jButtonActualizarPresupuestoVentasLineas.setVisible((this.isVisibilidadCeldaActualizarPresupuestoVentasLineas && this.isPermisoActualizarPresupuestoVentasLineas));	
			this.jInternalFrameDetalleFormPresupuestoVentasLineas.jButtonEliminarPresupuestoVentasLineas.setVisible((this.isVisibilidadCeldaEliminarPresupuestoVentasLineas && this.isPermisoEliminarPresupuestoVentasLineas));
			this.jInternalFrameDetalleFormPresupuestoVentasLineas.jButtonCancelarPresupuestoVentasLineas.setVisible(this.isVisibilidadCeldaCancelarPresupuestoVentasLineas);							
			this.jInternalFrameDetalleFormPresupuestoVentasLineas.jButtonGuardarCambiosPresupuestoVentasLineas.setVisible((this.isVisibilidadCeldaGuardarPresupuestoVentasLineas && this.isPermisoGuardarCambiosPresupuestoVentasLineas));			
			
			}
						
			this.jButtonGuardarCambiosTablaPresupuestoVentasLineas.setVisible((this.isVisibilidadCeldaGuardarCambiosPresupuestoVentasLineas && this.isPermisoGuardarCambiosPresupuestoVentasLineas));							
			
			//TOOLBAR
			
			this.jButtonNuevoToolBarPresupuestoVentasLineas.setVisible((this.isVisibilidadCeldaNuevoPresupuestoVentasLineas && this.isPermisoNuevoPresupuestoVentasLineas));						
			this.jButtonDuplicarToolBarPresupuestoVentasLineas.setVisible((this.isVisibilidadCeldaDuplicarPresupuestoVentasLineas && this.isPermisoDuplicarPresupuestoVentasLineas));						
			this.jButtonCopiarToolBarPresupuestoVentasLineas.setVisible((this.isVisibilidadCeldaCopiarPresupuestoVentasLineas && this.isPermisoCopiarPresupuestoVentasLineas));			
			this.jButtonVerFormToolBarPresupuestoVentasLineas.setVisible((this.isVisibilidadCeldaVerFormPresupuestoVentasLineas && this.isPermisoVerFormPresupuestoVentasLineas));			
			this.jButtonAbrirOrderByToolBarPresupuestoVentasLineas.setVisible((this.isVisibilidadCeldaOrdenPresupuestoVentasLineas && this.isPermisoOrdenPresupuestoVentasLineas));
			this.jButtonNuevoRelacionesToolBarPresupuestoVentasLineas.setVisible((this.isVisibilidadCeldaNuevoRelacionesPresupuestoVentasLineas && this.isPermisoNuevoPresupuestoVentasLineas));			
			this.jButtonNuevoGuardarCambiosToolBarPresupuestoVentasLineas.setVisible((this.isVisibilidadCeldaNuevoPresupuestoVentasLineas && this.isPermisoNuevoPresupuestoVentasLineas && this.isPermisoGuardarCambiosPresupuestoVentasLineas));			
			
			if(this.jInternalFrameDetalleFormPresupuestoVentasLineas!=null) {
			this.jInternalFrameDetalleFormPresupuestoVentasLineas.jButtonModificarToolBarPresupuestoVentasLineas.setVisible((this.isVisibilidadCeldaModificarPresupuestoVentasLineas && this.isPermisoActualizarPresupuestoVentasLineas));	
			this.jInternalFrameDetalleFormPresupuestoVentasLineas.jButtonActualizarToolBarPresupuestoVentasLineas.setVisible((this.isVisibilidadCeldaActualizarPresupuestoVentasLineas  && this.isPermisoActualizarPresupuestoVentasLineas));	
			this.jInternalFrameDetalleFormPresupuestoVentasLineas.jButtonEliminarToolBarPresupuestoVentasLineas.setVisible((this.isVisibilidadCeldaEliminarPresupuestoVentasLineas && this.isPermisoEliminarPresupuestoVentasLineas));
			this.jInternalFrameDetalleFormPresupuestoVentasLineas.jButtonCancelarToolBarPresupuestoVentasLineas.setVisible(this.isVisibilidadCeldaCancelarPresupuestoVentasLineas);				
			this.jInternalFrameDetalleFormPresupuestoVentasLineas.jButtonGuardarCambiosToolBarPresupuestoVentasLineas.setVisible((this.isVisibilidadCeldaGuardarPresupuestoVentasLineas && this.isPermisoGuardarCambiosPresupuestoVentasLineas));									
			}
			
			this.jButtonGuardarCambiosTablaToolBarPresupuestoVentasLineas.setVisible((this.isVisibilidadCeldaGuardarCambiosPresupuestoVentasLineas && this.isPermisoGuardarCambiosPresupuestoVentasLineas));									
			
			//TOOLBAR
			
			//MENUS
			
			this.jMenuItemNuevoPresupuestoVentasLineas.setVisible((this.isVisibilidadCeldaNuevoPresupuestoVentasLineas && this.isPermisoNuevoPresupuestoVentasLineas));			
			this.jMenuItemDuplicarPresupuestoVentasLineas.setVisible((this.isVisibilidadCeldaDuplicarPresupuestoVentasLineas && this.isPermisoDuplicarPresupuestoVentasLineas));			
			this.jMenuItemCopiarPresupuestoVentasLineas.setVisible((this.isVisibilidadCeldaCopiarPresupuestoVentasLineas && this.isPermisoCopiarPresupuestoVentasLineas));			
			this.jMenuItemVerFormPresupuestoVentasLineas.setVisible((this.isVisibilidadCeldaVerFormPresupuestoVentasLineas && this.isPermisoVerFormPresupuestoVentasLineas));			
			this.jMenuItemAbrirOrderByPresupuestoVentasLineas.setVisible((this.isVisibilidadCeldaOrdenPresupuestoVentasLineas && this.isPermisoOrdenPresupuestoVentasLineas));			
			//this.jMenuItemMostrarOcultarPresupuestoVentasLineas.setVisible((this.isVisibilidadCeldaOrdenPresupuestoVentasLineas && this.isPermisoOrdenPresupuestoVentasLineas));
			this.jMenuItemDetalleAbrirOrderByPresupuestoVentasLineas.setVisible((this.isVisibilidadCeldaOrdenPresupuestoVentasLineas && this.isPermisoOrdenPresupuestoVentasLineas));			
			//this.jMenuItemDetalleMostrarOcultarPresupuestoVentasLineas.setVisible((this.isVisibilidadCeldaOrdenPresupuestoVentasLineas && this.isPermisoOrdenPresupuestoVentasLineas));			
			this.jMenuItemNuevoRelacionesPresupuestoVentasLineas.setVisible((this.isVisibilidadCeldaNuevoRelacionesPresupuestoVentasLineas && this.isPermisoNuevoPresupuestoVentasLineas));			
			this.jMenuItemNuevoGuardarCambiosPresupuestoVentasLineas.setVisible((this.isVisibilidadCeldaNuevoPresupuestoVentasLineas && this.isPermisoNuevoPresupuestoVentasLineas && this.isPermisoGuardarCambiosPresupuestoVentasLineas));									
			
			if(this.jInternalFrameDetalleFormPresupuestoVentasLineas!=null) {
			this.jInternalFrameDetalleFormPresupuestoVentasLineas.jMenuItemModificarPresupuestoVentasLineas.setVisible((this.isVisibilidadCeldaModificarPresupuestoVentasLineas && this.isPermisoActualizarPresupuestoVentasLineas));	
			this.jInternalFrameDetalleFormPresupuestoVentasLineas.jMenuItemActualizarPresupuestoVentasLineas.setVisible((this.isVisibilidadCeldaActualizarPresupuestoVentasLineas && this.isPermisoActualizarPresupuestoVentasLineas));	
			this.jInternalFrameDetalleFormPresupuestoVentasLineas.jMenuItemEliminarPresupuestoVentasLineas.setVisible((this.isVisibilidadCeldaEliminarPresupuestoVentasLineas && this.isPermisoEliminarPresupuestoVentasLineas));
			this.jInternalFrameDetalleFormPresupuestoVentasLineas.jMenuItemCancelarPresupuestoVentasLineas.setVisible(this.isVisibilidadCeldaCancelarPresupuestoVentasLineas);				
			}
			
			this.jMenuItemGuardarCambiosPresupuestoVentasLineas.setVisible((this.isVisibilidadCeldaGuardarPresupuestoVentasLineas && this.isPermisoGuardarCambiosPresupuestoVentasLineas));						
			this.jMenuItemGuardarCambiosTablaPresupuestoVentasLineas.setVisible((this.isVisibilidadCeldaGuardarCambiosPresupuestoVentasLineas && this.isPermisoGuardarCambiosPresupuestoVentasLineas));						
			
			//MENUS
			
		} else {
			this.isVisibilidadCeldaNuevoPresupuestoVentasLineas=this.jButtonNuevoPresupuestoVentasLineas.isVisible();
			this.isVisibilidadCeldaDuplicarPresupuestoVentasLineas=this.jButtonDuplicarPresupuestoVentasLineas.isVisible();
			this.isVisibilidadCeldaCopiarPresupuestoVentasLineas=this.jButtonCopiarPresupuestoVentasLineas.isVisible();
			this.isVisibilidadCeldaVerFormPresupuestoVentasLineas=this.jButtonVerFormPresupuestoVentasLineas.isVisible();
			
			this.isVisibilidadCeldaOrdenPresupuestoVentasLineas=this.jButtonAbrirOrderByPresupuestoVentasLineas.isVisible();			
			
			this.isVisibilidadCeldaNuevoRelacionesPresupuestoVentasLineas=this.jButtonNuevoRelacionesPresupuestoVentasLineas.isVisible();
			this.isVisibilidadCeldaModificarPresupuestoVentasLineas=this.jButtonModificarPresupuestoVentasLineas.isVisible();
			
			if(this.jInternalFrameDetalleFormPresupuestoVentasLineas!=null) {
			this.isVisibilidadCeldaActualizarPresupuestoVentasLineas=this.jInternalFrameDetalleFormPresupuestoVentasLineas.jButtonActualizarPresupuestoVentasLineas.isVisible();
			this.isVisibilidadCeldaEliminarPresupuestoVentasLineas=this.jInternalFrameDetalleFormPresupuestoVentasLineas.jButtonEliminarPresupuestoVentasLineas.isVisible();
			this.isVisibilidadCeldaCancelarPresupuestoVentasLineas=this.jInternalFrameDetalleFormPresupuestoVentasLineas.jButtonCancelarPresupuestoVentasLineas.isVisible();
			this.isVisibilidadCeldaGuardarPresupuestoVentasLineas=this.jInternalFrameDetalleFormPresupuestoVentasLineas.jButtonGuardarCambiosPresupuestoVentasLineas.isVisible();			
			}
			
			this.isVisibilidadCeldaGuardarCambiosPresupuestoVentasLineas=this.jButtonGuardarCambiosTablaPresupuestoVentasLineas.isVisible();
			
			//TOOLBAR
			
			this.isVisibilidadCeldaNuevoPresupuestoVentasLineas=this.jButtonNuevoToolBarPresupuestoVentasLineas.isVisible();
			this.isVisibilidadCeldaNuevoRelacionesPresupuestoVentasLineas=this.jButtonNuevoRelacionesToolBarPresupuestoVentasLineas.isVisible();
			
			if(this.jInternalFrameDetalleFormPresupuestoVentasLineas!=null) {
			this.isVisibilidadCeldaModificarPresupuestoVentasLineas=this.jInternalFrameDetalleFormPresupuestoVentasLineas.jButtonModificarToolBarPresupuestoVentasLineas.isVisible();
			this.isVisibilidadCeldaActualizarPresupuestoVentasLineas=this.jInternalFrameDetalleFormPresupuestoVentasLineas.jButtonActualizarToolBarPresupuestoVentasLineas.isVisible();
			this.isVisibilidadCeldaEliminarPresupuestoVentasLineas=this.jInternalFrameDetalleFormPresupuestoVentasLineas.jButtonEliminarToolBarPresupuestoVentasLineas.isVisible();
			this.isVisibilidadCeldaCancelarPresupuestoVentasLineas=this.jInternalFrameDetalleFormPresupuestoVentasLineas.jButtonCancelarToolBarPresupuestoVentasLineas.isVisible();
			}
			
			this.isVisibilidadCeldaGuardarPresupuestoVentasLineas=this.jButtonGuardarCambiosToolBarPresupuestoVentasLineas.isVisible();
			this.isVisibilidadCeldaGuardarCambiosPresupuestoVentasLineas=this.jButtonGuardarCambiosTablaToolBarPresupuestoVentasLineas.isVisible();						
			
			//TOOLBAR
			
			//MENUS
			
			this.isVisibilidadCeldaNuevoPresupuestoVentasLineas=this.jMenuItemNuevoPresupuestoVentasLineas.isVisible();
			this.isVisibilidadCeldaNuevoRelacionesPresupuestoVentasLineas=this.jMenuItemNuevoRelacionesPresupuestoVentasLineas.isVisible();
			
			if(this.jInternalFrameDetalleFormPresupuestoVentasLineas!=null) {
			this.isVisibilidadCeldaModificarPresupuestoVentasLineas=this.jInternalFrameDetalleFormPresupuestoVentasLineas.jMenuItemModificarPresupuestoVentasLineas.isVisible();
			this.isVisibilidadCeldaActualizarPresupuestoVentasLineas=this.jInternalFrameDetalleFormPresupuestoVentasLineas.jMenuItemActualizarPresupuestoVentasLineas.isVisible();
			this.isVisibilidadCeldaEliminarPresupuestoVentasLineas=this.jInternalFrameDetalleFormPresupuestoVentasLineas.jMenuItemEliminarPresupuestoVentasLineas.isVisible();
			this.isVisibilidadCeldaCancelarPresupuestoVentasLineas=this.jInternalFrameDetalleFormPresupuestoVentasLineas.jMenuItemCancelarPresupuestoVentasLineas.isVisible();
			}
			
			this.isVisibilidadCeldaGuardarPresupuestoVentasLineas=this.jMenuItemGuardarCambiosPresupuestoVentasLineas.isVisible();
			this.isVisibilidadCeldaGuardarCambiosPresupuestoVentasLineas=this.jMenuItemGuardarCambiosTablaPresupuestoVentasLineas.isVisible();						
			
			//MENUS
		}
	}
	
	public void inicializarActualizarBindingBotonesPresupuestoVentasLineas(Boolean esInicializar) {
		if(PresupuestoVentasLineasJInternalFrame.ISBINDING_MANUAL) {			
			if(this.presupuestoventaslineasSessionBean.getConGuardarRelaciones()) {
				//if(this.presupuestoventaslineasSessionBean.getEsGuardarRelacionado()) {
				
				this.actualizarEstadoCeldasBotonesConGuardarRelacionesPresupuestoVentasLineas();
			}
			
			this.inicializarActualizarBindingBotonesManualPresupuestoVentasLineas(true);
			
		} else {	
		}
	}		
	
	public void inicializarActualizarBindingBotonesPermisosManualPresupuestoVentasLineas() {
		this.jButtonNuevoPresupuestoVentasLineas.setVisible(this.isPermisoNuevoPresupuestoVentasLineas);			
		this.jButtonDuplicarPresupuestoVentasLineas.setVisible(this.isPermisoDuplicarPresupuestoVentasLineas);			
		this.jButtonCopiarPresupuestoVentasLineas.setVisible(this.isPermisoCopiarPresupuestoVentasLineas);			
		this.jButtonVerFormPresupuestoVentasLineas.setVisible(this.isPermisoVerFormPresupuestoVentasLineas);			
		
		this.jButtonAbrirOrderByPresupuestoVentasLineas.setVisible(this.isPermisoOrdenPresupuestoVentasLineas);					
		
		this.jButtonNuevoRelacionesPresupuestoVentasLineas.setVisible(this.isPermisoNuevoPresupuestoVentasLineas);			
		
		if(this.jInternalFrameDetalleFormPresupuestoVentasLineas!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormPresupuestoVentasLineas.jButtonModificarPresupuestoVentasLineas.setVisible(this.isPermisoActualizarPresupuestoVentasLineas);	
			this.jInternalFrameDetalleFormPresupuestoVentasLineas.jButtonActualizarPresupuestoVentasLineas.setVisible(this.isPermisoActualizarPresupuestoVentasLineas);	
			this.jInternalFrameDetalleFormPresupuestoVentasLineas.jButtonEliminarPresupuestoVentasLineas.setVisible(this.isPermisoEliminarPresupuestoVentasLineas);
			this.jInternalFrameDetalleFormPresupuestoVentasLineas.jButtonCancelarPresupuestoVentasLineas.setVisible(this.isVisibilidadCeldaCancelarPresupuestoVentasLineas);						
			this.jInternalFrameDetalleFormPresupuestoVentasLineas.jButtonGuardarCambiosPresupuestoVentasLineas.setVisible(this.isPermisoGuardarCambiosPresupuestoVentasLineas);							
		}
		
		this.jButtonGuardarCambiosTablaPresupuestoVentasLineas.setVisible(this.isPermisoActualizarPresupuestoVentasLineas);
	}
	
	public void inicializarActualizarBindingBotonesPermisosManualFormDetallePresupuestoVentasLineas() {
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jButtonModificarPresupuestoVentasLineas.setVisible(this.isPermisoActualizarPresupuestoVentasLineas);	
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jButtonActualizarPresupuestoVentasLineas.setVisible(this.isPermisoActualizarPresupuestoVentasLineas);	
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jButtonEliminarPresupuestoVentasLineas.setVisible(this.isPermisoEliminarPresupuestoVentasLineas);
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jButtonCancelarPresupuestoVentasLineas.setVisible(this.isVisibilidadCeldaCancelarPresupuestoVentasLineas);							
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jButtonGuardarCambiosPresupuestoVentasLineas.setVisible((this.isVisibilidadCeldaGuardarPresupuestoVentasLineas && this.isPermisoGuardarCambiosPresupuestoVentasLineas));			
	}
	
	public void inicializarActualizarBindingBotonesPermisosPresupuestoVentasLineas() {
		if(PresupuestoVentasLineasJInternalFrame.ISBINDING_MANUAL) {
			this.inicializarActualizarBindingBotonesPermisosManualPresupuestoVentasLineas();
		} else {
		}
	}
	
	
	public void refrescarBindingBotonesPresupuestoVentasLineas() {
	}
	
	public void jTableDatosPresupuestoVentasLineasListSelectionListener(javax.swing.event.ListSelectionEvent evt) throws Exception { 
		try {
			this.seleccionarPresupuestoVentasLineas(null,evt,-1);
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PresupuestoVentasLineasConstantesFunciones.CLASSNAME);
		}
	}
	
	
	public void jButtonidPresupuestoVentasLineasBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoventaslineasLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPresupuestoVentasLineas.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPresupuestoVentasLineas(this.getpresupuestoventaslineas(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPresupuestoVentasLineas(this.presupuestoventaslineas);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.presupuestoventaslineas =(PresupuestoVentasLineas) this.presupuestoventaslineasLogic.getPresupuestoVentasLineass().toArray()[this.jTableDatosPresupuestoVentasLineas.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.presupuestoventaslineas =(PresupuestoVentasLineas) this.presupuestoventaslineass.toArray()[this.jTableDatosPresupuestoVentasLineas.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.presupuestoventaslineas==null) {
						this.presupuestoventaslineas = new PresupuestoVentasLineas();
					}

					this.setVariablesFormularioToObjetoActualPresupuestoVentasLineas(this.presupuestoventaslineas,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPresupuestoVentasLineas(this.presupuestoventaslineas);
				}

				if(this.presupuestoventaslineas.getId()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id = "+this.presupuestoventaslineas.getId().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPresupuestoVentasLineas(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoventaslineasLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoventaslineasLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PresupuestoVentasLineasConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoventaslineasLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_empresaPresupuestoVentasLineasUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoventaslineasLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoempresa=true;

			idTienePermisoempresa=this.tienePermisosUsuarioEnPaginaWebPresupuestoVentasLineas(EmpresaConstantesFunciones.CLASSNAME);

			if(idTienePermisoempresa) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPresupuestoVentasLineas.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosPresupuestoVentasLineas.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosPresupuestoVentasLineas.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoventaslineas =(PresupuestoVentasLineas) this.presupuestoventaslineasLogic.getPresupuestoVentasLineass().toArray()[this.jTableDatosPresupuestoVentasLineas.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.presupuestoventaslineas =(PresupuestoVentasLineas) this.presupuestoventaslineass.toArray()[this.jTableDatosPresupuestoVentasLineas.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualPresupuestoVentasLineas(this.getpresupuestoventaslineas(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysPresupuestoVentasLineas(this.presupuestoventaslineas);

				this.empresaBeanSwingJInternalFrame=new EmpresaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.empresaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.empresaBeanSwingJInternalFrame.getEmpresaLogic().setConnexion(this.presupuestoventaslineasLogic.getConnexion());

				if(this.presupuestoventaslineas.getid_empresa()!=null) {
					this.empresaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.empresaBeanSwingJInternalFrame.setIdActual(this.presupuestoventaslineas.getid_empresa());
					this.empresaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.empresaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.empresaBeanSwingJInternalFrame.inicializarActualizarBindingTablaEmpresa();
				}

				JInternalFrameBase jinternalFrame =this.empresaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderPresupuestoVentasLineas=(TitledBorder)this.jScrollPanelDatosPresupuestoVentasLineas.getBorder();
				TitledBorder titledBorderempresa=(TitledBorder)this.empresaBeanSwingJInternalFrame.jScrollPanelDatosEmpresa.getBorder();

				titledBorderempresa.setTitle(titledBorderPresupuestoVentasLineas.getTitle() + " -> Empresa");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoventaslineasLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoventaslineasLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PresupuestoVentasLineasConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoventaslineasLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_empresaPresupuestoVentasLineasBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoventaslineasLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPresupuestoVentasLineas.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPresupuestoVentasLineas(this.getpresupuestoventaslineas(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPresupuestoVentasLineas(this.presupuestoventaslineas);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.presupuestoventaslineas =(PresupuestoVentasLineas) this.presupuestoventaslineasLogic.getPresupuestoVentasLineass().toArray()[this.jTableDatosPresupuestoVentasLineas.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.presupuestoventaslineas =(PresupuestoVentasLineas) this.presupuestoventaslineass.toArray()[this.jTableDatosPresupuestoVentasLineas.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.presupuestoventaslineas==null) {
						this.presupuestoventaslineas = new PresupuestoVentasLineas();
					}

					this.setVariablesFormularioToObjetoActualPresupuestoVentasLineas(this.presupuestoventaslineas,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPresupuestoVentasLineas(this.presupuestoventaslineas);
				}

				if(this.presupuestoventaslineas.getid_empresa()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_empresa = "+this.presupuestoventaslineas.getid_empresa().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPresupuestoVentasLineas(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoventaslineasLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoventaslineasLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PresupuestoVentasLineasConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoventaslineasLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_sucursalPresupuestoVentasLineasUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoventaslineasLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisosucursal=true;

			idTienePermisosucursal=this.tienePermisosUsuarioEnPaginaWebPresupuestoVentasLineas(SucursalConstantesFunciones.CLASSNAME);

			if(idTienePermisosucursal) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPresupuestoVentasLineas.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosPresupuestoVentasLineas.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosPresupuestoVentasLineas.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoventaslineas =(PresupuestoVentasLineas) this.presupuestoventaslineasLogic.getPresupuestoVentasLineass().toArray()[this.jTableDatosPresupuestoVentasLineas.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.presupuestoventaslineas =(PresupuestoVentasLineas) this.presupuestoventaslineass.toArray()[this.jTableDatosPresupuestoVentasLineas.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualPresupuestoVentasLineas(this.getpresupuestoventaslineas(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysPresupuestoVentasLineas(this.presupuestoventaslineas);

				this.sucursalBeanSwingJInternalFrame=new SucursalBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.sucursalBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.sucursalBeanSwingJInternalFrame.getSucursalLogic().setConnexion(this.presupuestoventaslineasLogic.getConnexion());

				if(this.presupuestoventaslineas.getid_sucursal()!=null) {
					this.sucursalBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.sucursalBeanSwingJInternalFrame.setIdActual(this.presupuestoventaslineas.getid_sucursal());
					this.sucursalBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.sucursalBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.sucursalBeanSwingJInternalFrame.inicializarActualizarBindingTablaSucursal();
				}

				JInternalFrameBase jinternalFrame =this.sucursalBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderPresupuestoVentasLineas=(TitledBorder)this.jScrollPanelDatosPresupuestoVentasLineas.getBorder();
				TitledBorder titledBordersucursal=(TitledBorder)this.sucursalBeanSwingJInternalFrame.jScrollPanelDatosSucursal.getBorder();

				titledBordersucursal.setTitle(titledBorderPresupuestoVentasLineas.getTitle() + " -> Sucursal");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoventaslineasLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoventaslineasLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PresupuestoVentasLineasConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoventaslineasLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_sucursalPresupuestoVentasLineasBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoventaslineasLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPresupuestoVentasLineas.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPresupuestoVentasLineas(this.getpresupuestoventaslineas(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPresupuestoVentasLineas(this.presupuestoventaslineas);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.presupuestoventaslineas =(PresupuestoVentasLineas) this.presupuestoventaslineasLogic.getPresupuestoVentasLineass().toArray()[this.jTableDatosPresupuestoVentasLineas.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.presupuestoventaslineas =(PresupuestoVentasLineas) this.presupuestoventaslineass.toArray()[this.jTableDatosPresupuestoVentasLineas.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.presupuestoventaslineas==null) {
						this.presupuestoventaslineas = new PresupuestoVentasLineas();
					}

					this.setVariablesFormularioToObjetoActualPresupuestoVentasLineas(this.presupuestoventaslineas,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPresupuestoVentasLineas(this.presupuestoventaslineas);
				}

				if(this.presupuestoventaslineas.getid_sucursal()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_sucursal = "+this.presupuestoventaslineas.getid_sucursal().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPresupuestoVentasLineas(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoventaslineasLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoventaslineasLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PresupuestoVentasLineasConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoventaslineasLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_ejercicioPresupuestoVentasLineasUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoventaslineasLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoejercicio=true;

			idTienePermisoejercicio=this.tienePermisosUsuarioEnPaginaWebPresupuestoVentasLineas(EjercicioConstantesFunciones.CLASSNAME);

			if(idTienePermisoejercicio) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPresupuestoVentasLineas.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosPresupuestoVentasLineas.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosPresupuestoVentasLineas.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoventaslineas =(PresupuestoVentasLineas) this.presupuestoventaslineasLogic.getPresupuestoVentasLineass().toArray()[this.jTableDatosPresupuestoVentasLineas.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.presupuestoventaslineas =(PresupuestoVentasLineas) this.presupuestoventaslineass.toArray()[this.jTableDatosPresupuestoVentasLineas.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualPresupuestoVentasLineas(this.getpresupuestoventaslineas(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysPresupuestoVentasLineas(this.presupuestoventaslineas);

				this.ejercicioBeanSwingJInternalFrame=new EjercicioBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.ejercicioBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.ejercicioBeanSwingJInternalFrame.getEjercicioLogic().setConnexion(this.presupuestoventaslineasLogic.getConnexion());

				if(this.presupuestoventaslineas.getid_ejercicio()!=null) {
					this.ejercicioBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.ejercicioBeanSwingJInternalFrame.setIdActual(this.presupuestoventaslineas.getid_ejercicio());
					this.ejercicioBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.ejercicioBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.ejercicioBeanSwingJInternalFrame.inicializarActualizarBindingTablaEjercicio();
				}

				JInternalFrameBase jinternalFrame =this.ejercicioBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderPresupuestoVentasLineas=(TitledBorder)this.jScrollPanelDatosPresupuestoVentasLineas.getBorder();
				TitledBorder titledBorderejercicio=(TitledBorder)this.ejercicioBeanSwingJInternalFrame.jScrollPanelDatosEjercicio.getBorder();

				titledBorderejercicio.setTitle(titledBorderPresupuestoVentasLineas.getTitle() + " -> Ejercicio");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoventaslineasLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoventaslineasLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PresupuestoVentasLineasConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoventaslineasLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_ejercicioPresupuestoVentasLineasBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoventaslineasLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPresupuestoVentasLineas.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPresupuestoVentasLineas(this.getpresupuestoventaslineas(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPresupuestoVentasLineas(this.presupuestoventaslineas);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.presupuestoventaslineas =(PresupuestoVentasLineas) this.presupuestoventaslineasLogic.getPresupuestoVentasLineass().toArray()[this.jTableDatosPresupuestoVentasLineas.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.presupuestoventaslineas =(PresupuestoVentasLineas) this.presupuestoventaslineass.toArray()[this.jTableDatosPresupuestoVentasLineas.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.presupuestoventaslineas==null) {
						this.presupuestoventaslineas = new PresupuestoVentasLineas();
					}

					this.setVariablesFormularioToObjetoActualPresupuestoVentasLineas(this.presupuestoventaslineas,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPresupuestoVentasLineas(this.presupuestoventaslineas);
				}

				if(this.presupuestoventaslineas.getid_ejercicio()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_ejercicio = "+this.presupuestoventaslineas.getid_ejercicio().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPresupuestoVentasLineas(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoventaslineasLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoventaslineasLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PresupuestoVentasLineasConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoventaslineasLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_periodoPresupuestoVentasLineasUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoventaslineasLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoperiodo=true;

			idTienePermisoperiodo=this.tienePermisosUsuarioEnPaginaWebPresupuestoVentasLineas(PeriodoConstantesFunciones.CLASSNAME);

			if(idTienePermisoperiodo) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPresupuestoVentasLineas.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosPresupuestoVentasLineas.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosPresupuestoVentasLineas.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoventaslineas =(PresupuestoVentasLineas) this.presupuestoventaslineasLogic.getPresupuestoVentasLineass().toArray()[this.jTableDatosPresupuestoVentasLineas.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.presupuestoventaslineas =(PresupuestoVentasLineas) this.presupuestoventaslineass.toArray()[this.jTableDatosPresupuestoVentasLineas.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualPresupuestoVentasLineas(this.getpresupuestoventaslineas(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysPresupuestoVentasLineas(this.presupuestoventaslineas);

				this.periodoBeanSwingJInternalFrame=new PeriodoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.periodoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.periodoBeanSwingJInternalFrame.getPeriodoLogic().setConnexion(this.presupuestoventaslineasLogic.getConnexion());

				if(this.presupuestoventaslineas.getid_periodo()!=null) {
					this.periodoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.periodoBeanSwingJInternalFrame.setIdActual(this.presupuestoventaslineas.getid_periodo());
					this.periodoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.periodoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.periodoBeanSwingJInternalFrame.inicializarActualizarBindingTablaPeriodo();
				}

				JInternalFrameBase jinternalFrame =this.periodoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderPresupuestoVentasLineas=(TitledBorder)this.jScrollPanelDatosPresupuestoVentasLineas.getBorder();
				TitledBorder titledBorderperiodo=(TitledBorder)this.periodoBeanSwingJInternalFrame.jScrollPanelDatosPeriodo.getBorder();

				titledBorderperiodo.setTitle(titledBorderPresupuestoVentasLineas.getTitle() + " -> Periodo");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoventaslineasLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoventaslineasLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PresupuestoVentasLineasConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoventaslineasLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_periodoPresupuestoVentasLineasBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoventaslineasLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPresupuestoVentasLineas.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPresupuestoVentasLineas(this.getpresupuestoventaslineas(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPresupuestoVentasLineas(this.presupuestoventaslineas);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.presupuestoventaslineas =(PresupuestoVentasLineas) this.presupuestoventaslineasLogic.getPresupuestoVentasLineass().toArray()[this.jTableDatosPresupuestoVentasLineas.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.presupuestoventaslineas =(PresupuestoVentasLineas) this.presupuestoventaslineass.toArray()[this.jTableDatosPresupuestoVentasLineas.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.presupuestoventaslineas==null) {
						this.presupuestoventaslineas = new PresupuestoVentasLineas();
					}

					this.setVariablesFormularioToObjetoActualPresupuestoVentasLineas(this.presupuestoventaslineas,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPresupuestoVentasLineas(this.presupuestoventaslineas);
				}

				if(this.presupuestoventaslineas.getid_periodo()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_periodo = "+this.presupuestoventaslineas.getid_periodo().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPresupuestoVentasLineas(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoventaslineasLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoventaslineasLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PresupuestoVentasLineasConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoventaslineasLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_vendedorPresupuestoVentasLineasUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoventaslineasLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisovendedor=true;

			idTienePermisovendedor=this.tienePermisosUsuarioEnPaginaWebPresupuestoVentasLineas(VendedorConstantesFunciones.CLASSNAME);

			if(idTienePermisovendedor) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPresupuestoVentasLineas.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosPresupuestoVentasLineas.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosPresupuestoVentasLineas.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoventaslineas =(PresupuestoVentasLineas) this.presupuestoventaslineasLogic.getPresupuestoVentasLineass().toArray()[this.jTableDatosPresupuestoVentasLineas.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.presupuestoventaslineas =(PresupuestoVentasLineas) this.presupuestoventaslineass.toArray()[this.jTableDatosPresupuestoVentasLineas.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualPresupuestoVentasLineas(this.getpresupuestoventaslineas(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysPresupuestoVentasLineas(this.presupuestoventaslineas);

				this.vendedorBeanSwingJInternalFrame=new VendedorBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.vendedorBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.vendedorBeanSwingJInternalFrame.getVendedorLogic().setConnexion(this.presupuestoventaslineasLogic.getConnexion());

				if(this.presupuestoventaslineas.getid_vendedor()!=null) {
					this.vendedorBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.vendedorBeanSwingJInternalFrame.setIdActual(this.presupuestoventaslineas.getid_vendedor());
					this.vendedorBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.vendedorBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.vendedorBeanSwingJInternalFrame.inicializarActualizarBindingTablaVendedor();
				}

				JInternalFrameBase jinternalFrame =this.vendedorBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderPresupuestoVentasLineas=(TitledBorder)this.jScrollPanelDatosPresupuestoVentasLineas.getBorder();
				TitledBorder titledBordervendedor=(TitledBorder)this.vendedorBeanSwingJInternalFrame.jScrollPanelDatosVendedor.getBorder();

				titledBordervendedor.setTitle(titledBorderPresupuestoVentasLineas.getTitle() + " -> Vendedor");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoventaslineasLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoventaslineasLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PresupuestoVentasLineasConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoventaslineasLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_vendedorPresupuestoVentasLineasBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoventaslineasLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPresupuestoVentasLineas.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPresupuestoVentasLineas(this.getpresupuestoventaslineas(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPresupuestoVentasLineas(this.presupuestoventaslineas);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.presupuestoventaslineas =(PresupuestoVentasLineas) this.presupuestoventaslineasLogic.getPresupuestoVentasLineass().toArray()[this.jTableDatosPresupuestoVentasLineas.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.presupuestoventaslineas =(PresupuestoVentasLineas) this.presupuestoventaslineass.toArray()[this.jTableDatosPresupuestoVentasLineas.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.presupuestoventaslineas==null) {
						this.presupuestoventaslineas = new PresupuestoVentasLineas();
					}

					this.setVariablesFormularioToObjetoActualPresupuestoVentasLineas(this.presupuestoventaslineas,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPresupuestoVentasLineas(this.presupuestoventaslineas);
				}

				if(this.presupuestoventaslineas.getid_vendedor()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_vendedor = "+this.presupuestoventaslineas.getid_vendedor().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPresupuestoVentasLineas(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoventaslineasLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoventaslineasLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PresupuestoVentasLineasConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoventaslineasLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_paisPresupuestoVentasLineasUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoventaslineasLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisopais=true;

			idTienePermisopais=this.tienePermisosUsuarioEnPaginaWebPresupuestoVentasLineas(PaisConstantesFunciones.CLASSNAME);

			if(idTienePermisopais) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPresupuestoVentasLineas.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosPresupuestoVentasLineas.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosPresupuestoVentasLineas.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoventaslineas =(PresupuestoVentasLineas) this.presupuestoventaslineasLogic.getPresupuestoVentasLineass().toArray()[this.jTableDatosPresupuestoVentasLineas.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.presupuestoventaslineas =(PresupuestoVentasLineas) this.presupuestoventaslineass.toArray()[this.jTableDatosPresupuestoVentasLineas.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualPresupuestoVentasLineas(this.getpresupuestoventaslineas(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysPresupuestoVentasLineas(this.presupuestoventaslineas);

				this.paisBeanSwingJInternalFrame=new PaisBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.paisBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.paisBeanSwingJInternalFrame.getPaisLogic().setConnexion(this.presupuestoventaslineasLogic.getConnexion());

				if(this.presupuestoventaslineas.getid_pais()!=null) {
					this.paisBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.paisBeanSwingJInternalFrame.setIdActual(this.presupuestoventaslineas.getid_pais());
					this.paisBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.paisBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.paisBeanSwingJInternalFrame.inicializarActualizarBindingTablaPais();
				}

				JInternalFrameBase jinternalFrame =this.paisBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderPresupuestoVentasLineas=(TitledBorder)this.jScrollPanelDatosPresupuestoVentasLineas.getBorder();
				TitledBorder titledBorderpais=(TitledBorder)this.paisBeanSwingJInternalFrame.jScrollPanelDatosPais.getBorder();

				titledBorderpais.setTitle(titledBorderPresupuestoVentasLineas.getTitle() + " -> Pais");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoventaslineasLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoventaslineasLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PresupuestoVentasLineasConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoventaslineasLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_paisPresupuestoVentasLineasBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoventaslineasLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPresupuestoVentasLineas.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPresupuestoVentasLineas(this.getpresupuestoventaslineas(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPresupuestoVentasLineas(this.presupuestoventaslineas);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.presupuestoventaslineas =(PresupuestoVentasLineas) this.presupuestoventaslineasLogic.getPresupuestoVentasLineass().toArray()[this.jTableDatosPresupuestoVentasLineas.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.presupuestoventaslineas =(PresupuestoVentasLineas) this.presupuestoventaslineass.toArray()[this.jTableDatosPresupuestoVentasLineas.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.presupuestoventaslineas==null) {
						this.presupuestoventaslineas = new PresupuestoVentasLineas();
					}

					this.setVariablesFormularioToObjetoActualPresupuestoVentasLineas(this.presupuestoventaslineas,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPresupuestoVentasLineas(this.presupuestoventaslineas);
				}

				if(this.presupuestoventaslineas.getid_pais()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_pais = "+this.presupuestoventaslineas.getid_pais().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPresupuestoVentasLineas(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoventaslineasLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoventaslineasLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PresupuestoVentasLineasConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoventaslineasLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_ciudadPresupuestoVentasLineasUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoventaslineasLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisociudad=true;

			idTienePermisociudad=this.tienePermisosUsuarioEnPaginaWebPresupuestoVentasLineas(CiudadConstantesFunciones.CLASSNAME);

			if(idTienePermisociudad) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPresupuestoVentasLineas.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosPresupuestoVentasLineas.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosPresupuestoVentasLineas.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoventaslineas =(PresupuestoVentasLineas) this.presupuestoventaslineasLogic.getPresupuestoVentasLineass().toArray()[this.jTableDatosPresupuestoVentasLineas.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.presupuestoventaslineas =(PresupuestoVentasLineas) this.presupuestoventaslineass.toArray()[this.jTableDatosPresupuestoVentasLineas.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualPresupuestoVentasLineas(this.getpresupuestoventaslineas(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysPresupuestoVentasLineas(this.presupuestoventaslineas);

				this.ciudadBeanSwingJInternalFrame=new CiudadBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.ciudadBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.ciudadBeanSwingJInternalFrame.getCiudadLogic().setConnexion(this.presupuestoventaslineasLogic.getConnexion());

				if(this.presupuestoventaslineas.getid_ciudad()!=null) {
					this.ciudadBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.ciudadBeanSwingJInternalFrame.setIdActual(this.presupuestoventaslineas.getid_ciudad());
					this.ciudadBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.ciudadBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.ciudadBeanSwingJInternalFrame.inicializarActualizarBindingTablaCiudad();
				}

				JInternalFrameBase jinternalFrame =this.ciudadBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderPresupuestoVentasLineas=(TitledBorder)this.jScrollPanelDatosPresupuestoVentasLineas.getBorder();
				TitledBorder titledBorderciudad=(TitledBorder)this.ciudadBeanSwingJInternalFrame.jScrollPanelDatosCiudad.getBorder();

				titledBorderciudad.setTitle(titledBorderPresupuestoVentasLineas.getTitle() + " -> Ciudad");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoventaslineasLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoventaslineasLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PresupuestoVentasLineasConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoventaslineasLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_ciudadPresupuestoVentasLineasBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoventaslineasLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPresupuestoVentasLineas.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPresupuestoVentasLineas(this.getpresupuestoventaslineas(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPresupuestoVentasLineas(this.presupuestoventaslineas);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.presupuestoventaslineas =(PresupuestoVentasLineas) this.presupuestoventaslineasLogic.getPresupuestoVentasLineass().toArray()[this.jTableDatosPresupuestoVentasLineas.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.presupuestoventaslineas =(PresupuestoVentasLineas) this.presupuestoventaslineass.toArray()[this.jTableDatosPresupuestoVentasLineas.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.presupuestoventaslineas==null) {
						this.presupuestoventaslineas = new PresupuestoVentasLineas();
					}

					this.setVariablesFormularioToObjetoActualPresupuestoVentasLineas(this.presupuestoventaslineas,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPresupuestoVentasLineas(this.presupuestoventaslineas);
				}

				if(this.presupuestoventaslineas.getid_ciudad()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_ciudad = "+this.presupuestoventaslineas.getid_ciudad().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPresupuestoVentasLineas(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoventaslineasLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoventaslineasLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PresupuestoVentasLineasConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoventaslineasLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_zonaPresupuestoVentasLineasUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoventaslineasLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisozona=true;

			idTienePermisozona=this.tienePermisosUsuarioEnPaginaWebPresupuestoVentasLineas(ZonaConstantesFunciones.CLASSNAME);

			if(idTienePermisozona) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPresupuestoVentasLineas.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosPresupuestoVentasLineas.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosPresupuestoVentasLineas.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoventaslineas =(PresupuestoVentasLineas) this.presupuestoventaslineasLogic.getPresupuestoVentasLineass().toArray()[this.jTableDatosPresupuestoVentasLineas.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.presupuestoventaslineas =(PresupuestoVentasLineas) this.presupuestoventaslineass.toArray()[this.jTableDatosPresupuestoVentasLineas.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualPresupuestoVentasLineas(this.getpresupuestoventaslineas(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysPresupuestoVentasLineas(this.presupuestoventaslineas);

				this.zonaBeanSwingJInternalFrame=new ZonaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.zonaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.zonaBeanSwingJInternalFrame.getZonaLogic().setConnexion(this.presupuestoventaslineasLogic.getConnexion());

				if(this.presupuestoventaslineas.getid_zona()!=null) {
					this.zonaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.zonaBeanSwingJInternalFrame.setIdActual(this.presupuestoventaslineas.getid_zona());
					this.zonaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.zonaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.zonaBeanSwingJInternalFrame.inicializarActualizarBindingTablaZona();
				}

				JInternalFrameBase jinternalFrame =this.zonaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderPresupuestoVentasLineas=(TitledBorder)this.jScrollPanelDatosPresupuestoVentasLineas.getBorder();
				TitledBorder titledBorderzona=(TitledBorder)this.zonaBeanSwingJInternalFrame.jScrollPanelDatosZona.getBorder();

				titledBorderzona.setTitle(titledBorderPresupuestoVentasLineas.getTitle() + " -> Zona");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoventaslineasLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoventaslineasLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PresupuestoVentasLineasConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoventaslineasLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_zonaPresupuestoVentasLineasBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoventaslineasLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPresupuestoVentasLineas.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPresupuestoVentasLineas(this.getpresupuestoventaslineas(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPresupuestoVentasLineas(this.presupuestoventaslineas);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.presupuestoventaslineas =(PresupuestoVentasLineas) this.presupuestoventaslineasLogic.getPresupuestoVentasLineass().toArray()[this.jTableDatosPresupuestoVentasLineas.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.presupuestoventaslineas =(PresupuestoVentasLineas) this.presupuestoventaslineass.toArray()[this.jTableDatosPresupuestoVentasLineas.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.presupuestoventaslineas==null) {
						this.presupuestoventaslineas = new PresupuestoVentasLineas();
					}

					this.setVariablesFormularioToObjetoActualPresupuestoVentasLineas(this.presupuestoventaslineas,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPresupuestoVentasLineas(this.presupuestoventaslineas);
				}

				if(this.presupuestoventaslineas.getid_zona()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_zona = "+this.presupuestoventaslineas.getid_zona().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPresupuestoVentasLineas(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoventaslineasLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoventaslineasLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PresupuestoVentasLineasConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoventaslineasLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_lineaPresupuestoVentasLineasUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoventaslineasLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisolinea=true;

			idTienePermisolinea=this.tienePermisosUsuarioEnPaginaWebPresupuestoVentasLineas(LineaConstantesFunciones.CLASSNAME);

			if(idTienePermisolinea) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPresupuestoVentasLineas.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosPresupuestoVentasLineas.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosPresupuestoVentasLineas.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoventaslineas =(PresupuestoVentasLineas) this.presupuestoventaslineasLogic.getPresupuestoVentasLineass().toArray()[this.jTableDatosPresupuestoVentasLineas.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.presupuestoventaslineas =(PresupuestoVentasLineas) this.presupuestoventaslineass.toArray()[this.jTableDatosPresupuestoVentasLineas.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualPresupuestoVentasLineas(this.getpresupuestoventaslineas(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysPresupuestoVentasLineas(this.presupuestoventaslineas);

				this.lineaBeanSwingJInternalFrame=new LineaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.lineaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.lineaBeanSwingJInternalFrame.getLineaLogic().setConnexion(this.presupuestoventaslineasLogic.getConnexion());

				if(this.presupuestoventaslineas.getid_linea()!=null) {
					this.lineaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.lineaBeanSwingJInternalFrame.setIdActual(this.presupuestoventaslineas.getid_linea());
					this.lineaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.lineaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.lineaBeanSwingJInternalFrame.inicializarActualizarBindingTablaLinea();
				}

				JInternalFrameBase jinternalFrame =this.lineaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderPresupuestoVentasLineas=(TitledBorder)this.jScrollPanelDatosPresupuestoVentasLineas.getBorder();
				TitledBorder titledBorderlinea=(TitledBorder)this.lineaBeanSwingJInternalFrame.jScrollPanelDatosLinea.getBorder();

				titledBorderlinea.setTitle(titledBorderPresupuestoVentasLineas.getTitle() + " -> Linea");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoventaslineasLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoventaslineasLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PresupuestoVentasLineasConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoventaslineasLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_lineaPresupuestoVentasLineasBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoventaslineasLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPresupuestoVentasLineas.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPresupuestoVentasLineas(this.getpresupuestoventaslineas(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPresupuestoVentasLineas(this.presupuestoventaslineas);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.presupuestoventaslineas =(PresupuestoVentasLineas) this.presupuestoventaslineasLogic.getPresupuestoVentasLineass().toArray()[this.jTableDatosPresupuestoVentasLineas.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.presupuestoventaslineas =(PresupuestoVentasLineas) this.presupuestoventaslineass.toArray()[this.jTableDatosPresupuestoVentasLineas.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.presupuestoventaslineas==null) {
						this.presupuestoventaslineas = new PresupuestoVentasLineas();
					}

					this.setVariablesFormularioToObjetoActualPresupuestoVentasLineas(this.presupuestoventaslineas,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPresupuestoVentasLineas(this.presupuestoventaslineas);
				}

				if(this.presupuestoventaslineas.getid_linea()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_linea = "+this.presupuestoventaslineas.getid_linea().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPresupuestoVentasLineas(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoventaslineasLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoventaslineasLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PresupuestoVentasLineasConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoventaslineasLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_linea_grupoPresupuestoVentasLineasUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoventaslineasLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisolineagrupo=true;

			idTienePermisolineagrupo=this.tienePermisosUsuarioEnPaginaWebPresupuestoVentasLineas(LineaConstantesFunciones.CLASSNAME);

			if(idTienePermisolineagrupo) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPresupuestoVentasLineas.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosPresupuestoVentasLineas.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosPresupuestoVentasLineas.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoventaslineas =(PresupuestoVentasLineas) this.presupuestoventaslineasLogic.getPresupuestoVentasLineass().toArray()[this.jTableDatosPresupuestoVentasLineas.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.presupuestoventaslineas =(PresupuestoVentasLineas) this.presupuestoventaslineass.toArray()[this.jTableDatosPresupuestoVentasLineas.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualPresupuestoVentasLineas(this.getpresupuestoventaslineas(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysPresupuestoVentasLineas(this.presupuestoventaslineas);

				this.lineagrupoBeanSwingJInternalFrame=new LineaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.lineagrupoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.lineagrupoBeanSwingJInternalFrame.getLineaLogic().setConnexion(this.presupuestoventaslineasLogic.getConnexion());

				if(this.presupuestoventaslineas.getid_linea_grupo()!=null) {
					this.lineagrupoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.lineagrupoBeanSwingJInternalFrame.setIdActual(this.presupuestoventaslineas.getid_linea_grupo());
					this.lineagrupoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.lineagrupoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.lineagrupoBeanSwingJInternalFrame.inicializarActualizarBindingTablaLinea();
				}

				JInternalFrameBase jinternalFrame =this.lineagrupoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderPresupuestoVentasLineas=(TitledBorder)this.jScrollPanelDatosPresupuestoVentasLineas.getBorder();
				TitledBorder titledBorderlineagrupo=(TitledBorder)this.lineagrupoBeanSwingJInternalFrame.jScrollPanelDatosLinea.getBorder();

				titledBorderlineagrupo.setTitle(titledBorderPresupuestoVentasLineas.getTitle() + " -> Linea");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoventaslineasLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoventaslineasLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PresupuestoVentasLineasConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoventaslineasLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_linea_grupoPresupuestoVentasLineasBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoventaslineasLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPresupuestoVentasLineas.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPresupuestoVentasLineas(this.getpresupuestoventaslineas(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPresupuestoVentasLineas(this.presupuestoventaslineas);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.presupuestoventaslineas =(PresupuestoVentasLineas) this.presupuestoventaslineasLogic.getPresupuestoVentasLineass().toArray()[this.jTableDatosPresupuestoVentasLineas.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.presupuestoventaslineas =(PresupuestoVentasLineas) this.presupuestoventaslineass.toArray()[this.jTableDatosPresupuestoVentasLineas.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.presupuestoventaslineas==null) {
						this.presupuestoventaslineas = new PresupuestoVentasLineas();
					}

					this.setVariablesFormularioToObjetoActualPresupuestoVentasLineas(this.presupuestoventaslineas,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPresupuestoVentasLineas(this.presupuestoventaslineas);
				}

				if(this.presupuestoventaslineas.getid_linea_grupo()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_linea_grupo = "+this.presupuestoventaslineas.getid_linea_grupo().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPresupuestoVentasLineas(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoventaslineasLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoventaslineasLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PresupuestoVentasLineasConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoventaslineasLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_linea_categoriaPresupuestoVentasLineasUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoventaslineasLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisolineacategoria=true;

			idTienePermisolineacategoria=this.tienePermisosUsuarioEnPaginaWebPresupuestoVentasLineas(LineaConstantesFunciones.CLASSNAME);

			if(idTienePermisolineacategoria) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPresupuestoVentasLineas.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosPresupuestoVentasLineas.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosPresupuestoVentasLineas.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoventaslineas =(PresupuestoVentasLineas) this.presupuestoventaslineasLogic.getPresupuestoVentasLineass().toArray()[this.jTableDatosPresupuestoVentasLineas.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.presupuestoventaslineas =(PresupuestoVentasLineas) this.presupuestoventaslineass.toArray()[this.jTableDatosPresupuestoVentasLineas.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualPresupuestoVentasLineas(this.getpresupuestoventaslineas(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysPresupuestoVentasLineas(this.presupuestoventaslineas);

				this.lineacategoriaBeanSwingJInternalFrame=new LineaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.lineacategoriaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.lineacategoriaBeanSwingJInternalFrame.getLineaLogic().setConnexion(this.presupuestoventaslineasLogic.getConnexion());

				if(this.presupuestoventaslineas.getid_linea_categoria()!=null) {
					this.lineacategoriaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.lineacategoriaBeanSwingJInternalFrame.setIdActual(this.presupuestoventaslineas.getid_linea_categoria());
					this.lineacategoriaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.lineacategoriaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.lineacategoriaBeanSwingJInternalFrame.inicializarActualizarBindingTablaLinea();
				}

				JInternalFrameBase jinternalFrame =this.lineacategoriaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderPresupuestoVentasLineas=(TitledBorder)this.jScrollPanelDatosPresupuestoVentasLineas.getBorder();
				TitledBorder titledBorderlineacategoria=(TitledBorder)this.lineacategoriaBeanSwingJInternalFrame.jScrollPanelDatosLinea.getBorder();

				titledBorderlineacategoria.setTitle(titledBorderPresupuestoVentasLineas.getTitle() + " -> Linea");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoventaslineasLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoventaslineasLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PresupuestoVentasLineasConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoventaslineasLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_linea_categoriaPresupuestoVentasLineasBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoventaslineasLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPresupuestoVentasLineas.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPresupuestoVentasLineas(this.getpresupuestoventaslineas(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPresupuestoVentasLineas(this.presupuestoventaslineas);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.presupuestoventaslineas =(PresupuestoVentasLineas) this.presupuestoventaslineasLogic.getPresupuestoVentasLineass().toArray()[this.jTableDatosPresupuestoVentasLineas.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.presupuestoventaslineas =(PresupuestoVentasLineas) this.presupuestoventaslineass.toArray()[this.jTableDatosPresupuestoVentasLineas.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.presupuestoventaslineas==null) {
						this.presupuestoventaslineas = new PresupuestoVentasLineas();
					}

					this.setVariablesFormularioToObjetoActualPresupuestoVentasLineas(this.presupuestoventaslineas,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPresupuestoVentasLineas(this.presupuestoventaslineas);
				}

				if(this.presupuestoventaslineas.getid_linea_categoria()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_linea_categoria = "+this.presupuestoventaslineas.getid_linea_categoria().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPresupuestoVentasLineas(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoventaslineasLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoventaslineasLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PresupuestoVentasLineasConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoventaslineasLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_linea_marcaPresupuestoVentasLineasUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoventaslineasLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisolineamarca=true;

			idTienePermisolineamarca=this.tienePermisosUsuarioEnPaginaWebPresupuestoVentasLineas(LineaConstantesFunciones.CLASSNAME);

			if(idTienePermisolineamarca) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPresupuestoVentasLineas.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosPresupuestoVentasLineas.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosPresupuestoVentasLineas.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoventaslineas =(PresupuestoVentasLineas) this.presupuestoventaslineasLogic.getPresupuestoVentasLineass().toArray()[this.jTableDatosPresupuestoVentasLineas.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.presupuestoventaslineas =(PresupuestoVentasLineas) this.presupuestoventaslineass.toArray()[this.jTableDatosPresupuestoVentasLineas.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualPresupuestoVentasLineas(this.getpresupuestoventaslineas(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysPresupuestoVentasLineas(this.presupuestoventaslineas);

				this.lineamarcaBeanSwingJInternalFrame=new LineaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.lineamarcaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.lineamarcaBeanSwingJInternalFrame.getLineaLogic().setConnexion(this.presupuestoventaslineasLogic.getConnexion());

				if(this.presupuestoventaslineas.getid_linea_marca()!=null) {
					this.lineamarcaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.lineamarcaBeanSwingJInternalFrame.setIdActual(this.presupuestoventaslineas.getid_linea_marca());
					this.lineamarcaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.lineamarcaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.lineamarcaBeanSwingJInternalFrame.inicializarActualizarBindingTablaLinea();
				}

				JInternalFrameBase jinternalFrame =this.lineamarcaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderPresupuestoVentasLineas=(TitledBorder)this.jScrollPanelDatosPresupuestoVentasLineas.getBorder();
				TitledBorder titledBorderlineamarca=(TitledBorder)this.lineamarcaBeanSwingJInternalFrame.jScrollPanelDatosLinea.getBorder();

				titledBorderlineamarca.setTitle(titledBorderPresupuestoVentasLineas.getTitle() + " -> Linea");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoventaslineasLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoventaslineasLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PresupuestoVentasLineasConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoventaslineasLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_linea_marcaPresupuestoVentasLineasBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoventaslineasLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPresupuestoVentasLineas.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPresupuestoVentasLineas(this.getpresupuestoventaslineas(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPresupuestoVentasLineas(this.presupuestoventaslineas);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.presupuestoventaslineas =(PresupuestoVentasLineas) this.presupuestoventaslineasLogic.getPresupuestoVentasLineass().toArray()[this.jTableDatosPresupuestoVentasLineas.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.presupuestoventaslineas =(PresupuestoVentasLineas) this.presupuestoventaslineass.toArray()[this.jTableDatosPresupuestoVentasLineas.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.presupuestoventaslineas==null) {
						this.presupuestoventaslineas = new PresupuestoVentasLineas();
					}

					this.setVariablesFormularioToObjetoActualPresupuestoVentasLineas(this.presupuestoventaslineas,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPresupuestoVentasLineas(this.presupuestoventaslineas);
				}

				if(this.presupuestoventaslineas.getid_linea_marca()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_linea_marca = "+this.presupuestoventaslineas.getid_linea_marca().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPresupuestoVentasLineas(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoventaslineasLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoventaslineasLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PresupuestoVentasLineasConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoventaslineasLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonprecioPresupuestoVentasLineasBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoventaslineasLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPresupuestoVentasLineas.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPresupuestoVentasLineas(this.getpresupuestoventaslineas(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPresupuestoVentasLineas(this.presupuestoventaslineas);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.presupuestoventaslineas =(PresupuestoVentasLineas) this.presupuestoventaslineasLogic.getPresupuestoVentasLineass().toArray()[this.jTableDatosPresupuestoVentasLineas.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.presupuestoventaslineas =(PresupuestoVentasLineas) this.presupuestoventaslineass.toArray()[this.jTableDatosPresupuestoVentasLineas.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.presupuestoventaslineas==null) {
						this.presupuestoventaslineas = new PresupuestoVentasLineas();
					}

					this.setVariablesFormularioToObjetoActualPresupuestoVentasLineas(this.presupuestoventaslineas,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPresupuestoVentasLineas(this.presupuestoventaslineas);
				}

				if(this.presupuestoventaslineas.getprecio()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where precio = "+this.presupuestoventaslineas.getprecio().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPresupuestoVentasLineas(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoventaslineasLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoventaslineasLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PresupuestoVentasLineasConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoventaslineasLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtoncantidadPresupuestoVentasLineasBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoventaslineasLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPresupuestoVentasLineas.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPresupuestoVentasLineas(this.getpresupuestoventaslineas(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPresupuestoVentasLineas(this.presupuestoventaslineas);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.presupuestoventaslineas =(PresupuestoVentasLineas) this.presupuestoventaslineasLogic.getPresupuestoVentasLineass().toArray()[this.jTableDatosPresupuestoVentasLineas.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.presupuestoventaslineas =(PresupuestoVentasLineas) this.presupuestoventaslineass.toArray()[this.jTableDatosPresupuestoVentasLineas.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.presupuestoventaslineas==null) {
						this.presupuestoventaslineas = new PresupuestoVentasLineas();
					}

					this.setVariablesFormularioToObjetoActualPresupuestoVentasLineas(this.presupuestoventaslineas,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPresupuestoVentasLineas(this.presupuestoventaslineas);
				}

				if(this.presupuestoventaslineas.getcantidad()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where cantidad = "+this.presupuestoventaslineas.getcantidad().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPresupuestoVentasLineas(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoventaslineasLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoventaslineasLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PresupuestoVentasLineasConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoventaslineasLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonvalorPresupuestoVentasLineasBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoventaslineasLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPresupuestoVentasLineas.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPresupuestoVentasLineas(this.getpresupuestoventaslineas(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPresupuestoVentasLineas(this.presupuestoventaslineas);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.presupuestoventaslineas =(PresupuestoVentasLineas) this.presupuestoventaslineasLogic.getPresupuestoVentasLineass().toArray()[this.jTableDatosPresupuestoVentasLineas.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.presupuestoventaslineas =(PresupuestoVentasLineas) this.presupuestoventaslineass.toArray()[this.jTableDatosPresupuestoVentasLineas.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.presupuestoventaslineas==null) {
						this.presupuestoventaslineas = new PresupuestoVentasLineas();
					}

					this.setVariablesFormularioToObjetoActualPresupuestoVentasLineas(this.presupuestoventaslineas,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPresupuestoVentasLineas(this.presupuestoventaslineas);
				}

				if(this.presupuestoventaslineas.getvalor()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where valor = "+this.presupuestoventaslineas.getvalor().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPresupuestoVentasLineas(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoventaslineasLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoventaslineasLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PresupuestoVentasLineasConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoventaslineasLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonporcentajePresupuestoVentasLineasBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoventaslineasLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPresupuestoVentasLineas.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPresupuestoVentasLineas(this.getpresupuestoventaslineas(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPresupuestoVentasLineas(this.presupuestoventaslineas);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.presupuestoventaslineas =(PresupuestoVentasLineas) this.presupuestoventaslineasLogic.getPresupuestoVentasLineass().toArray()[this.jTableDatosPresupuestoVentasLineas.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.presupuestoventaslineas =(PresupuestoVentasLineas) this.presupuestoventaslineass.toArray()[this.jTableDatosPresupuestoVentasLineas.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.presupuestoventaslineas==null) {
						this.presupuestoventaslineas = new PresupuestoVentasLineas();
					}

					this.setVariablesFormularioToObjetoActualPresupuestoVentasLineas(this.presupuestoventaslineas,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPresupuestoVentasLineas(this.presupuestoventaslineas);
				}

				if(this.presupuestoventaslineas.getporcentaje()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where porcentaje = "+this.presupuestoventaslineas.getporcentaje().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPresupuestoVentasLineas(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoventaslineasLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoventaslineasLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PresupuestoVentasLineasConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoventaslineasLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtoncantidad_totalPresupuestoVentasLineasBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoventaslineasLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPresupuestoVentasLineas.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPresupuestoVentasLineas(this.getpresupuestoventaslineas(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPresupuestoVentasLineas(this.presupuestoventaslineas);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.presupuestoventaslineas =(PresupuestoVentasLineas) this.presupuestoventaslineasLogic.getPresupuestoVentasLineass().toArray()[this.jTableDatosPresupuestoVentasLineas.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.presupuestoventaslineas =(PresupuestoVentasLineas) this.presupuestoventaslineass.toArray()[this.jTableDatosPresupuestoVentasLineas.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.presupuestoventaslineas==null) {
						this.presupuestoventaslineas = new PresupuestoVentasLineas();
					}

					this.setVariablesFormularioToObjetoActualPresupuestoVentasLineas(this.presupuestoventaslineas,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPresupuestoVentasLineas(this.presupuestoventaslineas);
				}

				if(this.presupuestoventaslineas.getcantidad_total()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where cantidad_total = "+this.presupuestoventaslineas.getcantidad_total().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPresupuestoVentasLineas(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoventaslineasLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoventaslineasLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PresupuestoVentasLineasConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoventaslineasLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonvalor_totalPresupuestoVentasLineasBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoventaslineasLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPresupuestoVentasLineas.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPresupuestoVentasLineas(this.getpresupuestoventaslineas(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPresupuestoVentasLineas(this.presupuestoventaslineas);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.presupuestoventaslineas =(PresupuestoVentasLineas) this.presupuestoventaslineasLogic.getPresupuestoVentasLineass().toArray()[this.jTableDatosPresupuestoVentasLineas.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.presupuestoventaslineas =(PresupuestoVentasLineas) this.presupuestoventaslineass.toArray()[this.jTableDatosPresupuestoVentasLineas.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.presupuestoventaslineas==null) {
						this.presupuestoventaslineas = new PresupuestoVentasLineas();
					}

					this.setVariablesFormularioToObjetoActualPresupuestoVentasLineas(this.presupuestoventaslineas,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPresupuestoVentasLineas(this.presupuestoventaslineas);
				}

				if(this.presupuestoventaslineas.getvalor_total()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where valor_total = "+this.presupuestoventaslineas.getvalor_total().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPresupuestoVentasLineas(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoventaslineasLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoventaslineasLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PresupuestoVentasLineasConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoventaslineasLogic.closeNewConnexionToDeep();
				}

			}
		}

	
	
	public void jButtonFK_IdCiudadPresupuestoVentasLineasActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoventaslineasLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingPresupuestoVentasLineas(false,false);

			this.getPresupuestoVentasLineassFK_IdCiudad();

			this.inicializarActualizarBindingPresupuestoVentasLineas(false);

			//if(PresupuestoVentasLineasBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingPresupuestoVentasLineas(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoventaslineasLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoventaslineasLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PresupuestoVentasLineasConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoventaslineasLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdEjercicioPresupuestoVentasLineasActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoventaslineasLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingPresupuestoVentasLineas(false,false);

			this.getPresupuestoVentasLineassFK_IdEjercicio();

			this.inicializarActualizarBindingPresupuestoVentasLineas(false);

			//if(PresupuestoVentasLineasBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingPresupuestoVentasLineas(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoventaslineasLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoventaslineasLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PresupuestoVentasLineasConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoventaslineasLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdEmpresaPresupuestoVentasLineasActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoventaslineasLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingPresupuestoVentasLineas(false,false);

			this.getPresupuestoVentasLineassFK_IdEmpresa();

			this.inicializarActualizarBindingPresupuestoVentasLineas(false);

			//if(PresupuestoVentasLineasBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingPresupuestoVentasLineas(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoventaslineasLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoventaslineasLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PresupuestoVentasLineasConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoventaslineasLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdLineaPresupuestoVentasLineasActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoventaslineasLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingPresupuestoVentasLineas(false,false);

			this.getPresupuestoVentasLineassFK_IdLinea();

			this.inicializarActualizarBindingPresupuestoVentasLineas(false);

			//if(PresupuestoVentasLineasBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingPresupuestoVentasLineas(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoventaslineasLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoventaslineasLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PresupuestoVentasLineasConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoventaslineasLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdLineaCategoriaPresupuestoVentasLineasActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoventaslineasLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingPresupuestoVentasLineas(false,false);

			this.getPresupuestoVentasLineassFK_IdLineaCategoria();

			this.inicializarActualizarBindingPresupuestoVentasLineas(false);

			//if(PresupuestoVentasLineasBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingPresupuestoVentasLineas(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoventaslineasLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoventaslineasLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PresupuestoVentasLineasConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoventaslineasLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdLineaGrupoPresupuestoVentasLineasActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoventaslineasLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingPresupuestoVentasLineas(false,false);

			this.getPresupuestoVentasLineassFK_IdLineaGrupo();

			this.inicializarActualizarBindingPresupuestoVentasLineas(false);

			//if(PresupuestoVentasLineasBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingPresupuestoVentasLineas(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoventaslineasLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoventaslineasLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PresupuestoVentasLineasConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoventaslineasLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdLineaMarcaPresupuestoVentasLineasActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoventaslineasLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingPresupuestoVentasLineas(false,false);

			this.getPresupuestoVentasLineassFK_IdLineaMarca();

			this.inicializarActualizarBindingPresupuestoVentasLineas(false);

			//if(PresupuestoVentasLineasBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingPresupuestoVentasLineas(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoventaslineasLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoventaslineasLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PresupuestoVentasLineasConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoventaslineasLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdPaisPresupuestoVentasLineasActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoventaslineasLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingPresupuestoVentasLineas(false,false);

			this.getPresupuestoVentasLineassFK_IdPais();

			this.inicializarActualizarBindingPresupuestoVentasLineas(false);

			//if(PresupuestoVentasLineasBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingPresupuestoVentasLineas(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoventaslineasLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoventaslineasLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PresupuestoVentasLineasConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoventaslineasLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdPeriodoPresupuestoVentasLineasActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoventaslineasLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingPresupuestoVentasLineas(false,false);

			this.getPresupuestoVentasLineassFK_IdPeriodo();

			this.inicializarActualizarBindingPresupuestoVentasLineas(false);

			//if(PresupuestoVentasLineasBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingPresupuestoVentasLineas(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoventaslineasLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoventaslineasLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PresupuestoVentasLineasConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoventaslineasLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdSucursalPresupuestoVentasLineasActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoventaslineasLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingPresupuestoVentasLineas(false,false);

			this.getPresupuestoVentasLineassFK_IdSucursal();

			this.inicializarActualizarBindingPresupuestoVentasLineas(false);

			//if(PresupuestoVentasLineasBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingPresupuestoVentasLineas(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoventaslineasLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoventaslineasLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PresupuestoVentasLineasConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoventaslineasLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdVendedorPresupuestoVentasLineasActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoventaslineasLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingPresupuestoVentasLineas(false,false);

			this.getPresupuestoVentasLineassFK_IdVendedor();

			this.inicializarActualizarBindingPresupuestoVentasLineas(false);

			//if(PresupuestoVentasLineasBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingPresupuestoVentasLineas(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoventaslineasLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoventaslineasLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PresupuestoVentasLineasConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoventaslineasLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdZonaPresupuestoVentasLineasActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoventaslineasLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingPresupuestoVentasLineas(false,false);

			this.getPresupuestoVentasLineassFK_IdZona();

			this.inicializarActualizarBindingPresupuestoVentasLineas(false);

			//if(PresupuestoVentasLineasBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingPresupuestoVentasLineas(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoventaslineasLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoventaslineasLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PresupuestoVentasLineasConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoventaslineasLogic.closeNewConnexionToDeep();
			}
		}
	}

	
	public void closingInternalFramePresupuestoVentasLineas() {
		if(this.jInternalFrameDetalleFormPresupuestoVentasLineas!=null) {
			
		
		
		}
		
		if(this.jInternalFrameDetalleFormPresupuestoVentasLineas!=null) {
			this.jInternalFrameDetalleFormPresupuestoVentasLineas.setVisible(false);	    			
			this.jInternalFrameDetalleFormPresupuestoVentasLineas.dispose();
			this.jInternalFrameDetalleFormPresupuestoVentasLineas=null;
		}
		
		
		if(this.jInternalFrameReporteDinamicoPresupuestoVentasLineas!=null) {
			this.jInternalFrameReporteDinamicoPresupuestoVentasLineas.setVisible(false);	    			
			this.jInternalFrameReporteDinamicoPresupuestoVentasLineas.dispose();
			this.jInternalFrameReporteDinamicoPresupuestoVentasLineas=null;
		}
		
		if(this.jInternalFrameImportacionPresupuestoVentasLineas!=null) {
			this.jInternalFrameImportacionPresupuestoVentasLineas.setVisible(false);	    			
			this.jInternalFrameImportacionPresupuestoVentasLineas.dispose();
			this.jInternalFrameImportacionPresupuestoVentasLineas=null;
		}		
		
		
		this.setVisible(false);
		this.dispose();
		//this=null;
	}
	
	
	
	public void jButtonActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {			
			this.startProcessPresupuestoVentasLineas();
			
			PresupuestoVentasLineasBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.BUTTON,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.presupuestoventaslineas,new Object(),this.presupuestoventaslineasParameterGeneral,this.presupuestoventaslineasReturnGeneral);
			
			
			if(sTipo.equals("NuevoPresupuestoVentasLineas")) {
				jButtonNuevoPresupuestoVentasLineasActionPerformed(evt,false);
			} else if(sTipo.equals("DuplicarPresupuestoVentasLineas")) {
				jButtonDuplicarPresupuestoVentasLineasActionPerformed(evt,false);
			} else if(sTipo.equals("CopiarPresupuestoVentasLineas")) {
				jButtonCopiarPresupuestoVentasLineasActionPerformed(evt);
			} else if(sTipo.equals("VerFormPresupuestoVentasLineas")) {
				jButtonVerFormPresupuestoVentasLineasActionPerformed(evt);
			} else if(sTipo.equals("NuevoToolBarPresupuestoVentasLineas")) {
				jButtonNuevoPresupuestoVentasLineasActionPerformed(evt,false);
			} else if(sTipo.equals("DuplicarToolBarPresupuestoVentasLineas")) {
				jButtonDuplicarPresupuestoVentasLineasActionPerformed(evt,false);
			} else if(sTipo.equals("MenuItemNuevoPresupuestoVentasLineas")) {
				jButtonNuevoPresupuestoVentasLineasActionPerformed(evt,false);
			} else if(sTipo.equals("MenuItemDuplicarPresupuestoVentasLineas")) {
				jButtonDuplicarPresupuestoVentasLineasActionPerformed(evt,false);
			} else if(sTipo.equals("NuevoRelacionesPresupuestoVentasLineas")) {
				jButtonNuevoPresupuestoVentasLineasActionPerformed(evt,true);
			} else if(sTipo.equals("NuevoRelacionesToolBarPresupuestoVentasLineas")) {
				jButtonNuevoPresupuestoVentasLineasActionPerformed(evt,true);
			} else if(sTipo.equals("MenuItemNuevoRelacionesPresupuestoVentasLineas")) {
				jButtonNuevoPresupuestoVentasLineasActionPerformed(evt,true);
			} else if(sTipo.equals("ModificarPresupuestoVentasLineas")) {
				jButtonModificarPresupuestoVentasLineasActionPerformed(evt);
			} else if(sTipo.equals("ModificarToolBarPresupuestoVentasLineas")) {
				jButtonModificarPresupuestoVentasLineasActionPerformed(evt);
			} else if(sTipo.equals("MenuItemModificarPresupuestoVentasLineas")) {
				jButtonModificarPresupuestoVentasLineasActionPerformed(evt);
			} else if(sTipo.equals("ActualizarPresupuestoVentasLineas")) {
				jButtonActualizarPresupuestoVentasLineasActionPerformed(evt);
			} else if(sTipo.equals("ActualizarToolBarPresupuestoVentasLineas")) {
				jButtonActualizarPresupuestoVentasLineasActionPerformed(evt);
			} else if(sTipo.equals("MenuItemActualizarPresupuestoVentasLineas")) {
				jButtonActualizarPresupuestoVentasLineasActionPerformed(evt);
			} else if(sTipo.equals("EliminarPresupuestoVentasLineas")) {
				jButtonEliminarPresupuestoVentasLineasActionPerformed(evt);
			} else if(sTipo.equals("EliminarToolBarPresupuestoVentasLineas")) {
				jButtonEliminarPresupuestoVentasLineasActionPerformed(evt);
			} else if(sTipo.equals("MenuItemEliminarPresupuestoVentasLineas")) {
				jButtonEliminarPresupuestoVentasLineasActionPerformed(evt);
			} else if(sTipo.equals("CancelarPresupuestoVentasLineas")) {
				jButtonCancelarPresupuestoVentasLineasActionPerformed(evt);
			} else if(sTipo.equals("CancelarToolBarPresupuestoVentasLineas")) {
				jButtonCancelarPresupuestoVentasLineasActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCancelarPresupuestoVentasLineas")) {
				jButtonCancelarPresupuestoVentasLineasActionPerformed(evt);
			} else if(sTipo.equals("CerrarPresupuestoVentasLineas")) {
				jButtonCerrarPresupuestoVentasLineasActionPerformed(evt);
			} else if(sTipo.equals("CerrarToolBarPresupuestoVentasLineas")) {
				jButtonCerrarPresupuestoVentasLineasActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCerrarPresupuestoVentasLineas")) {
				jButtonCerrarPresupuestoVentasLineasActionPerformed(evt);
			} else if(sTipo.equals("MostrarOcultarToolBarPresupuestoVentasLineas")) {
				jButtonMostrarOcultarPresupuestoVentasLineasActionPerformed(evt);
			} else if(sTipo.equals("MenuItemDetalleCerrarPresupuestoVentasLineas")) {
				jButtonCancelarPresupuestoVentasLineasActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosPresupuestoVentasLineas")) {
				jButtonGuardarCambiosPresupuestoVentasLineasActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosToolBarPresupuestoVentasLineas")) {
				jButtonGuardarCambiosPresupuestoVentasLineasActionPerformed(evt);
			} else if(sTipo.equals("CopiarToolBarPresupuestoVentasLineas")) {
				jButtonCopiarPresupuestoVentasLineasActionPerformed(evt);
			} else if(sTipo.equals("VerFormToolBarPresupuestoVentasLineas")) {
				jButtonVerFormPresupuestoVentasLineasActionPerformed(evt);
			} else if(sTipo.equals("MenuItemGuardarCambiosPresupuestoVentasLineas")) {
				jButtonGuardarCambiosPresupuestoVentasLineasActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCopiarPresupuestoVentasLineas")) {
				jButtonCopiarPresupuestoVentasLineasActionPerformed(evt);
			} else if(sTipo.equals("MenuItemVerFormPresupuestoVentasLineas")) {
				jButtonVerFormPresupuestoVentasLineasActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosTablaPresupuestoVentasLineas")) {
				jButtonGuardarCambiosPresupuestoVentasLineasActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosTablaToolBarPresupuestoVentasLineas")) {
				jButtonGuardarCambiosPresupuestoVentasLineasActionPerformed(evt);
			} else if(sTipo.equals("MenuItemGuardarCambiosTablaPresupuestoVentasLineas")) {
				jButtonGuardarCambiosPresupuestoVentasLineasActionPerformed(evt);
			} else if(sTipo.equals("RecargarInformacionPresupuestoVentasLineas")) {
				jButtonRecargarInformacionPresupuestoVentasLineasActionPerformed(evt);
			} else if(sTipo.equals("RecargarInformacionToolBarPresupuestoVentasLineas")) {
				jButtonRecargarInformacionPresupuestoVentasLineasActionPerformed(evt);
			} else if(sTipo.equals("MenuItemRecargarInformacionPresupuestoVentasLineas")) {
				jButtonRecargarInformacionPresupuestoVentasLineasActionPerformed(evt);
			}
			else if(sTipo.equals("AnterioresPresupuestoVentasLineas")) {
				jButtonAnterioresPresupuestoVentasLineasActionPerformed(evt);
			} else if(sTipo.equals("AnterioresToolBarPresupuestoVentasLineas")) {
				jButtonAnterioresPresupuestoVentasLineasActionPerformed(evt);
			} else if(sTipo.equals("MenuItemAnteriorePresupuestoVentasLineas")) {
				jButtonAnterioresPresupuestoVentasLineasActionPerformed(evt);
			} else if(sTipo.equals("SiguientesPresupuestoVentasLineas")) {
				jButtonSiguientesPresupuestoVentasLineasActionPerformed(evt);
			} else if(sTipo.equals("SiguientesToolBarPresupuestoVentasLineas")) {
				jButtonSiguientesPresupuestoVentasLineasActionPerformed(evt);
			} else if(sTipo.equals("MenuItemSiguientesPresupuestoVentasLineas")) {
				jButtonSiguientesPresupuestoVentasLineasActionPerformed(evt);
			} else if(sTipo.equals("MenuItemAbrirOrderByPresupuestoVentasLineas") || sTipo.equals("MenuItemDetalleAbrirOrderByPresupuestoVentasLineas")) {
				jButtonAbrirOrderByPresupuestoVentasLineasActionPerformed(evt);
			} else if(sTipo.equals("MenuItemMostrarOcultarPresupuestoVentasLineas") || sTipo.equals("MenuItemDetalleMostrarOcultarPresupuestoVentasLineas")) {
				jButtonMostrarOcultarPresupuestoVentasLineasActionPerformed(evt);
			} else if(sTipo.equals("NuevoGuardarCambiosPresupuestoVentasLineas")) {
				jButtonNuevoGuardarCambiosPresupuestoVentasLineasActionPerformed(evt);
			} else if(sTipo.equals("NuevoGuardarCambiosToolBarPresupuestoVentasLineas")) {
				jButtonNuevoGuardarCambiosPresupuestoVentasLineasActionPerformed(evt);
			} else if(sTipo.equals("MenuItemNuevoGuardarCambiosPresupuestoVentasLineas")) {
				jButtonNuevoGuardarCambiosPresupuestoVentasLineasActionPerformed(evt);
			} 
			else if(sTipo.equals("CerrarReporteDinamicoPresupuestoVentasLineas")) {
				jButtonCerrarReporteDinamicoPresupuestoVentasLineasActionPerformed(evt);
			} else if(sTipo.equals("GenerarReporteDinamicoPresupuestoVentasLineas")) {
				jButtonGenerarReporteDinamicoPresupuestoVentasLineasActionPerformed(evt);
			} else if(sTipo.equals("GenerarExcelReporteDinamicoPresupuestoVentasLineas")) {
				
				jButtonGenerarExcelReporteDinamicoPresupuestoVentasLineasActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarImportacionPresupuestoVentasLineas")) {
				jButtonCerrarImportacionPresupuestoVentasLineasActionPerformed(evt);
			} else if(sTipo.equals("GenerarImportacionPresupuestoVentasLineas")) {
				
				jButtonGenerarImportacionPresupuestoVentasLineasActionPerformed(evt);
				
			} else if(sTipo.equals("AbrirImportacionPresupuestoVentasLineas")) {
				
				jButtonAbrirImportacionPresupuestoVentasLineasActionPerformed(evt);
				
			} else if(sTipo.equals("TiposAccionesPresupuestoVentasLineas")) {
				jComboBoxTiposAccionesPresupuestoVentasLineasActionListener(evt,false);
			} else if(sTipo.equals("TiposRelacionesPresupuestoVentasLineas")) {
				jComboBoxTiposRelacionesPresupuestoVentasLineasActionListener(evt);
			} else if(sTipo.equals("TiposAccionesFormularioPresupuestoVentasLineas")) {
				jComboBoxTiposAccionesPresupuestoVentasLineasActionListener(evt,true);
			} else if(sTipo.equals("TiposSeleccionarPresupuestoVentasLineas")) {
				
				jComboBoxTiposSeleccionarPresupuestoVentasLineasActionListener(evt);
				
			} else if(sTipo.equals("ValorCampoGeneralPresupuestoVentasLineas")) {
				jTextFieldValorCampoGeneralPresupuestoVentasLineasActionListener(evt);
			}
			
			
			else if(sTipo.equals("AbrirOrderByPresupuestoVentasLineas")) {
				jButtonAbrirOrderByPresupuestoVentasLineasActionPerformed(evt);
				
			} else if(sTipo.equals("AbrirOrderByToolBarPresupuestoVentasLineas")) {
				jButtonAbrirOrderByPresupuestoVentasLineasActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarOrderByPresupuestoVentasLineas")) {
				jButtonCerrarOrderByPresupuestoVentasLineasActionPerformed(evt);
			} 
						
			
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("idPresupuestoVentasLineasBusqueda")) {
				this.jButtonidPresupuestoVentasLineasBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_empresaPresupuestoVentasLineasUpdate")) {
				this.jButtonid_empresaPresupuestoVentasLineasUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_empresaPresupuestoVentasLineasBusqueda")) {
				this.jButtonid_empresaPresupuestoVentasLineasBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_sucursalPresupuestoVentasLineasUpdate")) {
				this.jButtonid_sucursalPresupuestoVentasLineasUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_sucursalPresupuestoVentasLineasBusqueda")) {
				this.jButtonid_sucursalPresupuestoVentasLineasBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_ejercicioPresupuestoVentasLineasUpdate")) {
				this.jButtonid_ejercicioPresupuestoVentasLineasUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_ejercicioPresupuestoVentasLineasBusqueda")) {
				this.jButtonid_ejercicioPresupuestoVentasLineasBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_periodoPresupuestoVentasLineasUpdate")) {
				this.jButtonid_periodoPresupuestoVentasLineasUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_periodoPresupuestoVentasLineasBusqueda")) {
				this.jButtonid_periodoPresupuestoVentasLineasBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_vendedorPresupuestoVentasLineasUpdate")) {
				this.jButtonid_vendedorPresupuestoVentasLineasUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_vendedorPresupuestoVentasLineasBusqueda")) {
				this.jButtonid_vendedorPresupuestoVentasLineasBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_paisPresupuestoVentasLineasUpdate")) {
				this.jButtonid_paisPresupuestoVentasLineasUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_paisPresupuestoVentasLineasBusqueda")) {
				this.jButtonid_paisPresupuestoVentasLineasBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_ciudadPresupuestoVentasLineasUpdate")) {
				this.jButtonid_ciudadPresupuestoVentasLineasUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_ciudadPresupuestoVentasLineasBusqueda")) {
				this.jButtonid_ciudadPresupuestoVentasLineasBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_zonaPresupuestoVentasLineasUpdate")) {
				this.jButtonid_zonaPresupuestoVentasLineasUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_zonaPresupuestoVentasLineasBusqueda")) {
				this.jButtonid_zonaPresupuestoVentasLineasBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_lineaPresupuestoVentasLineasUpdate")) {
				this.jButtonid_lineaPresupuestoVentasLineasUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_lineaPresupuestoVentasLineasBusqueda")) {
				this.jButtonid_lineaPresupuestoVentasLineasBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_linea_grupoPresupuestoVentasLineasUpdate")) {
				this.jButtonid_linea_grupoPresupuestoVentasLineasUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_linea_grupoPresupuestoVentasLineasBusqueda")) {
				this.jButtonid_linea_grupoPresupuestoVentasLineasBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_linea_categoriaPresupuestoVentasLineasUpdate")) {
				this.jButtonid_linea_categoriaPresupuestoVentasLineasUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_linea_categoriaPresupuestoVentasLineasBusqueda")) {
				this.jButtonid_linea_categoriaPresupuestoVentasLineasBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_linea_marcaPresupuestoVentasLineasUpdate")) {
				this.jButtonid_linea_marcaPresupuestoVentasLineasUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_linea_marcaPresupuestoVentasLineasBusqueda")) {
				this.jButtonid_linea_marcaPresupuestoVentasLineasBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("precioPresupuestoVentasLineasBusqueda")) {
				this.jButtonprecioPresupuestoVentasLineasBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("cantidadPresupuestoVentasLineasBusqueda")) {
				this.jButtoncantidadPresupuestoVentasLineasBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("valorPresupuestoVentasLineasBusqueda")) {
				this.jButtonvalorPresupuestoVentasLineasBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("porcentajePresupuestoVentasLineasBusqueda")) {
				this.jButtonporcentajePresupuestoVentasLineasBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("cantidad_totalPresupuestoVentasLineasBusqueda")) {
				this.jButtoncantidad_totalPresupuestoVentasLineasBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("valor_totalPresupuestoVentasLineasBusqueda")) {
				this.jButtonvalor_totalPresupuestoVentasLineasBusquedaActionPerformed(evt);
			}
			
			
			
			
			else if(sTipo.equals("FK_IdCiudadPresupuestoVentasLineas")) {
				this.jButtonFK_IdCiudadPresupuestoVentasLineasActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdLineaPresupuestoVentasLineas")) {
				this.jButtonFK_IdLineaPresupuestoVentasLineasActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdLineaCategoriaPresupuestoVentasLineas")) {
				this.jButtonFK_IdLineaCategoriaPresupuestoVentasLineasActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdLineaGrupoPresupuestoVentasLineas")) {
				this.jButtonFK_IdLineaGrupoPresupuestoVentasLineasActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdLineaMarcaPresupuestoVentasLineas")) {
				this.jButtonFK_IdLineaMarcaPresupuestoVentasLineasActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdPaisPresupuestoVentasLineas")) {
				this.jButtonFK_IdPaisPresupuestoVentasLineasActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdVendedorPresupuestoVentasLineas")) {
				this.jButtonFK_IdVendedorPresupuestoVentasLineasActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdZonaPresupuestoVentasLineas")) {
				this.jButtonFK_IdZonaPresupuestoVentasLineasActionPerformed(evt);
			}
			
			;
			
			
			PresupuestoVentasLineasBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.BUTTON,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.presupuestoventaslineas,new Object(),this.presupuestoventaslineasParameterGeneral,this.presupuestoventaslineasReturnGeneral);
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PresupuestoVentasLineasConstantesFunciones.CLASSNAME);
			
  		} finally {
      		this.finishProcessPresupuestoVentasLineas();
      	}
    }
	
	//FUNCIONA AL APLASTAR ENTER
	public void jTextFieldActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaPresupuestoVentasLineasActual();
			
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				Container containerParent=null;
				JTextField jTextField=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParent=jTextField.getParent();
						
				if(containerParent!=null && containerParent.getClass().equals(JTableMe.class)) {
					esControlTabla=true;
				}
						
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.presupuestoventaslineas);
				
				this.actualizarInformacion("INFO_PADRE",false,this.presupuestoventaslineas);
				
				PresupuestoVentasLineasBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.presupuestoventaslineas,new Object(),this.presupuestoventaslineasParameterGeneral,this.presupuestoventaslineasReturnGeneral);
				
				


				
				PresupuestoVentasLineasBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.presupuestoventaslineas,new Object(),this.presupuestoventaslineasParameterGeneral,this.presupuestoventaslineasReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(PresupuestoVentasLineas.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",PresupuestoVentasLineas.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
				}
				
			} catch(Exception e) {
  				FuncionesSwing.manageException2(this, e,logger,PresupuestoVentasLineasConstantesFunciones.CLASSNAME);
  			}
    }
	
	public Boolean existeCambioValor(ControlTipo controlTipo,String sTipo) throws Exception {
		Boolean existeCambio=true;
		
		try {
			PresupuestoVentasLineas presupuestoventaslineasLocal=null;
			
			if(!this.getEsControlTabla()) {
				presupuestoventaslineasLocal=this.presupuestoventaslineas;
			} else {
				presupuestoventaslineasLocal=this.presupuestoventaslineasAnterior;
			}
			
			if(controlTipo.equals(ControlTipo.TEXTBOX)) {
				


			}
		
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PresupuestoVentasLineasConstantesFunciones.CLASSNAME);
  		}
		
		return existeCambio;
	}
	
	public void jTextFieldFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTBOX,sTipo)) {
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextField jTextField=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParent=jTextField.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.presupuestoventaslineas);
				
				this.actualizarInformacion("INFO_PADRE",false,this.presupuestoventaslineas);
				
				PresupuestoVentasLineasBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.presupuestoventaslineas,new Object(),this.presupuestoventaslineasParameterGeneral,this.presupuestoventaslineasReturnGeneral);
							
				
				


				
				PresupuestoVentasLineasBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.presupuestoventaslineas,new Object(),this.presupuestoventaslineasParameterGeneral,this.presupuestoventaslineasReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(PresupuestoVentasLineas.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",PresupuestoVentasLineas.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PresupuestoVentasLineasConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextFieldFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaPresupuestoVentasLineasActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosPresupuestoVentasLineas.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoventaslineasAnterior =(PresupuestoVentasLineas) this.presupuestoventaslineasLogic.getPresupuestoVentasLineass().toArray()[this.jTableDatosPresupuestoVentasLineas.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.presupuestoventaslineasAnterior =(PresupuestoVentasLineas) this.presupuestoventaslineass.toArray()[this.jTableDatosPresupuestoVentasLineas.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PresupuestoVentasLineasConstantesFunciones.CLASSNAME);
  		}
    }	
	
	//CUANDO SE CAMBIA ALGUN FORMATO(TIPO DE LETRA,NEGRILLA,ETC)
	public void jTextFieldChangedUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			/*
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			//System.out.println("UPDATE");
			
			Boolean esControlTabla=false;
			//JTextField jTextField=null;
			Container containerParent=null;
			Component componentOpposite=null;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			PresupuestoVentasLineasBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.presupuestoventaslineas,new Object(),this.presupuestoventaslineasParameterGeneral,this.presupuestoventaslineasReturnGeneral);
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			//jTextField=(JTextField)evt.getSource();
			
			containerParent=jTextField.getParent();
					
			componentOpposite=null;//evt.getOppositeComponent();
			
			if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
				|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
			) {					
				esControlTabla=true;
			}
			
			this.esControlTabla=esControlTabla;
			
			


			
			PresupuestoVentasLineasBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.presupuestoventaslineas,new Object(),this.presupuestoventaslineasParameterGeneral,this.presupuestoventaslineasReturnGeneral);
			*/
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PresupuestoVentasLineasConstantesFunciones.CLASSNAME);
  		}
    }
	
	//CUANDO SE QUITA ALGUN CARACTER
	public void jTextFieldRemoveUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			//System.out.println("REMOVE");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PresupuestoVentasLineasConstantesFunciones.CLASSNAME);
  		}
    }
	
	//CUANDO SE INGRESA ALGUN CARACTER
	public void jTextFieldInsertUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			//System.out.println("INSERT");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PresupuestoVentasLineasConstantesFunciones.CLASSNAME);
  		}
    }
	
	//FUNCIONA AL APLASTAR ENTER
	public void jFormattedTextFieldActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaPresupuestoVentasLineasActual();
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				Container containerParent=null;
				Container containerParentAux=null;
				JFormattedTextField JFormattedTextField=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				JFormattedTextField=(JFormattedTextField)evt.getSource();
				
				containerParentAux=JFormattedTextField.getParent();
				
				if(containerParentAux!=null && containerParentAux.getClass().equals(JDateChooser.class)) {
					containerParent=containerParentAux.getParent();
				}
				
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.presupuestoventaslineas);
				
				this.actualizarInformacion("INFO_PADRE",false,this.presupuestoventaslineas);
				
				PresupuestoVentasLineasBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.presupuestoventaslineas,new Object(),this.presupuestoventaslineasParameterGeneral,this.presupuestoventaslineasReturnGeneral);
								
						
				


				
				PresupuestoVentasLineasBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.presupuestoventaslineas,new Object(),this.presupuestoventaslineasParameterGeneral,this.presupuestoventaslineasReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(PresupuestoVentasLineas.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",PresupuestoVentasLineas.class.getName(),sTipo,"DATE",esControlTabla,conIrServidorAplicacionParent,
							id,JFormattedTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PresupuestoVentasLineasConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jFormattedTextFieldFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTBOX,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextField jTextField=null;
				Container containerParent=null;
				Container containerParentAux=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParentAux=jTextField.getParent();
						
				if(containerParentAux!=null && containerParentAux.getClass().equals(JDateChooser.class)) {
					containerParent=containerParentAux.getParent();
				}
				
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.presupuestoventaslineas);
				
				this.actualizarInformacion("INFO_PADRE",false,this.presupuestoventaslineas);
				
				PresupuestoVentasLineasBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.presupuestoventaslineas,new Object(),this.presupuestoventaslineasParameterGeneral,this.presupuestoventaslineasReturnGeneral);
								
				
				


				
				PresupuestoVentasLineasBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.presupuestoventaslineas,new Object(),this.presupuestoventaslineasParameterGeneral,this.presupuestoventaslineasReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(PresupuestoVentasLineas.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",PresupuestoVentasLineas.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PresupuestoVentasLineasConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jFormattedTextFieldFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaPresupuestoVentasLineasActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosPresupuestoVentasLineas.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoventaslineasAnterior =(PresupuestoVentasLineas) this.presupuestoventaslineasLogic.getPresupuestoVentasLineass().toArray()[this.jTableDatosPresupuestoVentasLineas.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.presupuestoventaslineasAnterior =(PresupuestoVentasLineas) this.presupuestoventaslineass.toArray()[this.jTableDatosPresupuestoVentasLineas.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PresupuestoVentasLineasConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.DATE,sTipo)) {
				this.actualizarInformacion("EVENTO_CONTROL",false,this.presupuestoventaslineas);
				
				this.actualizarInformacion("INFO_PADRE",false,this.presupuestoventaslineas);
			}	
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PresupuestoVentasLineasConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaPresupuestoVentasLineasActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosPresupuestoVentasLineas.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoventaslineasAnterior =(PresupuestoVentasLineas) this.presupuestoventaslineasLogic.getPresupuestoVentasLineass().toArray()[this.jTableDatosPresupuestoVentasLineas.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.presupuestoventaslineasAnterior =(PresupuestoVentasLineas) this.presupuestoventaslineass.toArray()[this.jTableDatosPresupuestoVentasLineas.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PresupuestoVentasLineasConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaPresupuestoVentasLineasActual();
				
			this.actualizarInformacion("EVENTO_CONTROL",false,this.presupuestoventaslineas);
			
			this.actualizarInformacion("INFO_PADRE",false,this.presupuestoventaslineas);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PresupuestoVentasLineasConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jTextAreaFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTAREA,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextArea jTextArea=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextArea=(JTextArea)evt.getSource();
				
				containerParent=jTextArea.getParent();
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.presupuestoventaslineas);
				
				this.actualizarInformacion("INFO_PADRE",false,this.presupuestoventaslineas);
				
				PresupuestoVentasLineasBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.presupuestoventaslineas,new Object(),this.presupuestoventaslineasParameterGeneral,this.presupuestoventaslineasReturnGeneral);
							
				
				


				
				PresupuestoVentasLineasBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.presupuestoventaslineas,new Object(),this.presupuestoventaslineasParameterGeneral,this.presupuestoventaslineasReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(PresupuestoVentasLineas.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",PresupuestoVentasLineas.class.getName(),sTipo,"TEXTAREA",esControlTabla,conIrServidorAplicacionParent,
							id,jTextArea, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PresupuestoVentasLineasConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaPresupuestoVentasLineasActual();
			
				//SELECCIONA FILA A OBJETO ANTERIOR
				Integer intSelectedRow = this.jTableDatosPresupuestoVentasLineas.getSelectedRow();
						
				if(intSelectedRow!=null && intSelectedRow>-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.presupuestoventaslineasAnterior =(PresupuestoVentasLineas) this.presupuestoventaslineasLogic.getPresupuestoVentasLineass().toArray()[this.jTableDatosPresupuestoVentasLineas.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
						this.presupuestoventaslineasAnterior =(PresupuestoVentasLineas) this.presupuestoventaslineass.toArray()[this.jTableDatosPresupuestoVentasLineas.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					//System.out.println(this.banco);
				}
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PresupuestoVentasLineasConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaChangedUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			/*
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			//System.out.println("UPDATE");
			
			Boolean esControlTabla=false;
			//JTextArea jTextArea=null;
			Container containerParent=null;
			Component componentOpposite=null;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			PresupuestoVentasLineasBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.presupuestoventaslineas,new Object(),this.presupuestoventaslineasParameterGeneral,this.presupuestoventaslineasReturnGeneral);
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			//jTextArea=(JTextArea)evt.getSource();
			
			containerParent=jTextArea.getParent();
			componentOpposite=null;//evt.getOppositeComponent();
			
			if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
				|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
			) {
				esControlTabla=true;
			}
			
			this.esControlTabla=esControlTabla;
			
			


			
			PresupuestoVentasLineasBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.presupuestoventaslineas,new Object(),this.presupuestoventaslineasParameterGeneral,this.presupuestoventaslineasReturnGeneral);
			
			*/
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PresupuestoVentasLineasConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaRemoveUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			//System.out.println("REMOVE");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PresupuestoVentasLineasConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaInsertUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			
			//System.out.println("INSERT");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PresupuestoVentasLineasConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO EXISTE O NO ES APLICABLE
	public void jTextAreaActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaPresupuestoVentasLineasActual();
			
			this.actualizarInformacion("EVENTO_CONTROL",false,this.presupuestoventaslineas);
			
			this.actualizarInformacion("INFO_PADRE",false,this.presupuestoventaslineas);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PresupuestoVentasLineasConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jLabelFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JLabel jLabel=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jLabel=(JLabel)evt.getSource();
				
				containerParent=jLabel.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.presupuestoventaslineas);
				
				this.actualizarInformacion("INFO_PADRE",false,this.presupuestoventaslineas);
				
				PresupuestoVentasLineasBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.presupuestoventaslineas,new Object(),this.presupuestoventaslineasParameterGeneral,this.presupuestoventaslineasReturnGeneral);
								
				
				


				
				PresupuestoVentasLineasBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.presupuestoventaslineas,new Object(),this.presupuestoventaslineasParameterGeneral,this.presupuestoventaslineasReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(PresupuestoVentasLineas.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",PresupuestoVentasLineas.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jLabel, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}	
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PresupuestoVentasLineasConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jLabelFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaPresupuestoVentasLineasActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosPresupuestoVentasLineas.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoventaslineasAnterior =(PresupuestoVentasLineas) this.presupuestoventaslineasLogic.getPresupuestoVentasLineass().toArray()[this.jTableDatosPresupuestoVentasLineas.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.presupuestoventaslineasAnterior =(PresupuestoVentasLineas) this.presupuestoventaslineass.toArray()[this.jTableDatosPresupuestoVentasLineas.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PresupuestoVentasLineasConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO EXISTE O NO ES APLICABLE
	public void jLabelActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaPresupuestoVentasLineasActual();
				
			this.actualizarInformacion("EVENTO_CONTROL",false,this.presupuestoventaslineas);
			
			this.actualizarInformacion("INFO_PADRE",false,this.presupuestoventaslineas);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PresupuestoVentasLineasConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxItemListenerGeneral(String sTipo,ItemEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaPresupuestoVentasLineasActual();
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JCheckBox jCheckBox=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
							
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jCheckBox=(JCheckBox)evt.getSource();
				
				containerParent=jCheckBox.getParent();
						
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.presupuestoventaslineas);
				
				this.actualizarInformacion("INFO_PADRE",false,this.presupuestoventaslineas);
				
				PresupuestoVentasLineasBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.presupuestoventaslineas,new Object(),this.presupuestoventaslineasParameterGeneral,this.presupuestoventaslineasReturnGeneral);
												
				
				if(sTipo.equals("SeleccionarTodosPresupuestoVentasLineas")) {
					jCheckBoxSeleccionarTodosPresupuestoVentasLineasItemListener(evt);
				
				} else if(sTipo.equals("SeleccionadosPresupuestoVentasLineas")) {
					jCheckBoxSeleccionadosPresupuestoVentasLineasItemListener(evt);
				
				} else if(sTipo.equals("NuevoToolBarPresupuestoVentasLineas")) {
					
				}
				
				


				
				
				PresupuestoVentasLineasBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.presupuestoventaslineas,new Object(),this.presupuestoventaslineasParameterGeneral,this.presupuestoventaslineasReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(PresupuestoVentasLineas.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",PresupuestoVentasLineas.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jCheckBox, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}	
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PresupuestoVentasLineasConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.CHECKBOX,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JCheckBox jCheckBox=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jCheckBox=(JCheckBox)evt.getSource();
				
				containerParent=jCheckBox.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				//this.actualizarInformacion("EVENTO_CONTROL",false,this.presupuestoventaslineas);
				
				//this.actualizarInformacion("INFO_PADRE",false,this.presupuestoventaslineas);
				
				PresupuestoVentasLineasBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.presupuestoventaslineas,new Object(),this.presupuestoventaslineasParameterGeneral,this.presupuestoventaslineasReturnGeneral);
												
				
				


				
				
				PresupuestoVentasLineasBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.presupuestoventaslineas,new Object(),this.presupuestoventaslineasParameterGeneral,this.presupuestoventaslineasReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
				
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(PresupuestoVentasLineas.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",PresupuestoVentasLineas.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jCheckBox, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PresupuestoVentasLineasConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaPresupuestoVentasLineasActual();
			
				//SELECCIONA FILA A OBJETO ANTERIOR
				Integer intSelectedRow = this.jTableDatosPresupuestoVentasLineas.getSelectedRow();
						
				if(intSelectedRow!=null && intSelectedRow>-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.presupuestoventaslineasAnterior =(PresupuestoVentasLineas) this.presupuestoventaslineasLogic.getPresupuestoVentasLineass().toArray()[this.jTableDatosPresupuestoVentasLineas.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
						this.presupuestoventaslineasAnterior =(PresupuestoVentasLineas) this.presupuestoventaslineass.toArray()[this.jTableDatosPresupuestoVentasLineas.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					//System.out.println(this.banco);
				}
			}
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PresupuestoVentasLineasConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaPresupuestoVentasLineasActual();
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.presupuestoventaslineas);
				
				this.actualizarInformacion("INFO_PADRE",false,this.presupuestoventaslineas);
				
				PresupuestoVentasLineasBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.presupuestoventaslineas,new Object(),this.presupuestoventaslineasParameterGeneral,this.presupuestoventaslineasReturnGeneral);
				
				
				PresupuestoVentasLineasBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.presupuestoventaslineas,new Object(),this.presupuestoventaslineasParameterGeneral,this.presupuestoventaslineasReturnGeneral);
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PresupuestoVentasLineasConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO SE UTILIZA, SE USA EL DE ABAJO, IGUAL SE DEJA EL CODIGO COMO RESPALDO Y ES CASI IGUAL
	//ERROR:SI SE USA,AL HACER CLIC EN EL MISMO ELEMENTO O EJECUTAR SELECTEDITEM, SIEMPRE SE EJECUTA COMO SI ESCOGIERA OTRO ELEMENTO(NO DEBERIA)
	//@SuppressWarnings("rawtypes")
	public void jComboBoxActionPerformedGeneral(String sTipo,ActionEvent evt) {		
		try {
			/*		
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			Container containerParent=null;
			Component componentOpposite=null;
			Boolean esControlTabla=false;
				
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			PresupuestoVentasLineasBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.presupuestoventaslineas,new Object(),this.presupuestoventaslineasParameterGeneral,this.presupuestoventaslineasReturnGeneral);
			JComboBox jComboBoxGenerico=null;						
			
			if(evt.getSource().getClass().equals(JComboBox.class)
				|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
					
				jComboBoxGenerico=(JComboBox)evt.getSource();
				
				containerParent=jComboBoxGenerico.getParent();
				
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
			}
			
			String sFinalQueryCombo="";
			
			


			
			PresupuestoVentasLineasBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.presupuestoventaslineas,new Object(),this.presupuestoventaslineasParameterGeneral,this.presupuestoventaslineasReturnGeneral);
			*/						
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PresupuestoVentasLineasConstantesFunciones.CLASSNAME);
  		}		
    }
	
	@SuppressWarnings("rawtypes")
	public void jComboBoxItemStateChangedGeneral(String sTipo,ItemEvent evt) { 	  
		try {
			if (evt.getStateChange() == ItemEvent.SELECTED && this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaPresupuestoVentasLineasActual();
			
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
			
			
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				Container containerParent=null;
				Component componentOpposite=null;
				Boolean esControlTabla=false;
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				JComboBox jComboBoxGenerico=null;						
				
				if(evt.getSource().getClass().equals(JComboBox.class)
					|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
						
					jComboBoxGenerico=(JComboBox)evt.getSource();
					
					containerParent=jComboBoxGenerico.getParent();
					
					componentOpposite=null;//evt.getOppositeComponent();
					
					if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
					) {					
						esControlTabla=true;
					}		
					
					this.esControlTabla=esControlTabla;
				}
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.presupuestoventaslineas);
				
				this.actualizarInformacion("INFO_PADRE",false,this.presupuestoventaslineas);
				
				PresupuestoVentasLineasBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.presupuestoventaslineas,new Object(),this.presupuestoventaslineasParameterGeneral,this.presupuestoventaslineasReturnGeneral);
				
				
				String sFinalQueryCombo="";
				
				


				
				PresupuestoVentasLineasBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.presupuestoventaslineas,new Object(),this.presupuestoventaslineasParameterGeneral,this.presupuestoventaslineasReturnGeneral);
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
				
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(PresupuestoVentasLineas.class.getName());
								
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",PresupuestoVentasLineas.class.getName(),sTipo,"COMBOBOX",esControlTabla,conIrServidorAplicacionParent,
							id,jComboBoxGenerico, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PresupuestoVentasLineasConstantesFunciones.CLASSNAME);
  		}
    }
	
	//@SuppressWarnings("rawtypes")
	public void jComboBoxFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		//MANEJADO EN ITEMLISTENER
		/*
		try {
			if(this.permiteManejarEventosControl()) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				
				//if(this.esUsoDesdeHijo) {
				//	eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				//}
				
				
				Container containerParent=null;
				Component componentOpposite=null;
				Boolean esControlTabla=false;
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
			
				this.actualizarInformacion("EVENTO_CONTROL",false,this.presupuestoventaslineas);
				
				this.actualizarInformacion("INFO_PADRE",false,this.presupuestoventaslineas);
				
				PresupuestoVentasLineasBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.presupuestoventaslineas,new Object(),this.presupuestoventaslineasParameterGeneral,this.presupuestoventaslineasReturnGeneral);
				JComboBox jComboBoxGenerico=null;						
				
				if(evt.getSource().getClass().equals(JComboBox.class)
					|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
						
					jComboBoxGenerico=(JComboBox)evt.getSource();
					
					containerParent=jComboBoxGenerico.getParent();
					
					componentOpposite=evt.getOppositeComponent();
					
					if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
					) {					
						esControlTabla=true;
					}
					
					this.esControlTabla=esControlTabla;
				}
				
				String sFinalQueryCombo="";
				
				


				
				PresupuestoVentasLineasBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.presupuestoventaslineas,new Object(),this.presupuestoventaslineasParameterGeneral,this.presupuestoventaslineasReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(PresupuestoVentasLineas.class.getName());
				
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",PresupuestoVentasLineas.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jComboBoxGenerico, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PresupuestoVentasLineasConstantesFunciones.CLASSNAME);
  		}
		
		*/
    }
	
	public void jComboBoxFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaPresupuestoVentasLineasActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosPresupuestoVentasLineas.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoventaslineasAnterior =(PresupuestoVentasLineas) this.presupuestoventaslineasLogic.getPresupuestoVentasLineass().toArray()[this.jTableDatosPresupuestoVentasLineas.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.presupuestoventaslineasAnterior =(PresupuestoVentasLineas) this.presupuestoventaslineass.toArray()[this.jTableDatosPresupuestoVentasLineas.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PresupuestoVentasLineasConstantesFunciones.CLASSNAME);
  		}
    }		
	
	public void tableValueChangedGeneral(String sTipo,ListSelectionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				PresupuestoVentasLineasBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TABLE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.presupuestoventaslineas,new Object(),this.presupuestoventaslineasParameterGeneral,this.presupuestoventaslineasReturnGeneral);
				
				if(sTipo.equals("TableDatosSeleccionarPresupuestoVentasLineas")) {
					//BYDAN_DESHABILITADO
					//try {jTableDatosPresupuestoVentasLineasListSelectionListener(e);}catch(Exception e1){e1.printStackTrace();}
					
					//SOLO CUANDO MOUSE ES SOLTADO
					if (!evt.getValueIsAdjusting()) {
						//SELECCIONA FILA A OBJETO ACTUAL
						Integer intSelectedRow = this.jTableDatosPresupuestoVentasLineas.getSelectedRow();
						
						if(intSelectedRow!=null && intSelectedRow>-1) {
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								this.presupuestoventaslineas =(PresupuestoVentasLineas) this.presupuestoventaslineasLogic.getPresupuestoVentasLineass().toArray()[this.jTableDatosPresupuestoVentasLineas.convertRowIndexToModel(intSelectedRow)];
							} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
								this.presupuestoventaslineas =(PresupuestoVentasLineas) this.presupuestoventaslineass.toArray()[this.jTableDatosPresupuestoVentasLineas.convertRowIndexToModel(intSelectedRow)];
							}
							//ARCHITECTURE
							
							//System.out.println(this.presupuestoventaslineas);
						}
					}
					
				} else if(sTipo.equals("jButtonCancelarPresupuestoVentasLineas")) {
				
				}
				
				PresupuestoVentasLineasBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TABLE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.presupuestoventaslineas,new Object(),this.presupuestoventaslineasParameterGeneral,this.presupuestoventaslineasReturnGeneral);
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PresupuestoVentasLineasConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void tableMouseAdapterGeneral(String sTipo,MouseEvent evt) { 	  
		try {
			PresupuestoVentasLineasBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TABLE,EventoTipo.MOUSE,EventoSubTipo.CLICKED,sTipo,this.presupuestoventaslineas,new Object(),this.presupuestoventaslineasParameterGeneral,this.presupuestoventaslineasReturnGeneral);
			
			if(sTipo.equals("DatosSeleccionarPresupuestoVentasLineas")) {
				if (evt.getClickCount() == 2) {
					jButtonIdActionPerformed(null,jTableDatosPresupuestoVentasLineas.getSelectedRow(),false,false);
				}	
			} else if(sTipo.equals("jButtonCancelarPresupuestoVentasLineas")) {
			
			}
			
			PresupuestoVentasLineasBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TABLE,EventoTipo.MOUSE,EventoSubTipo.CLICKED,sTipo,this.presupuestoventaslineas,new Object(),this.presupuestoventaslineasParameterGeneral,this.presupuestoventaslineasReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PresupuestoVentasLineasConstantesFunciones.CLASSNAME);
  		}
    }
	
	;
	
	public void jButtonActionPerformedTecladoGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			this.startProcessPresupuestoVentasLineas();
			
			PresupuestoVentasLineasBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.KEY,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.presupuestoventaslineas,new Object(),this.presupuestoventaslineasParameterGeneral,this.presupuestoventaslineasReturnGeneral);
			
			if(sTipo.equals("NuevoPresupuestoVentasLineas")) {
				jButtonNuevoPresupuestoVentasLineasActionPerformed(evt,false);
				
			} else if(sTipo.equals("DuplicarPresupuestoVentasLineas")) {
				jButtonDuplicarPresupuestoVentasLineasActionPerformed(evt,false);
				
			} else if(sTipo.equals("CopiarPresupuestoVentasLineas")) {
				jButtonCopiarPresupuestoVentasLineasActionPerformed(evt);
				
			} else if(sTipo.equals("VerFormPresupuestoVentasLineas")) {
				jButtonVerFormPresupuestoVentasLineasActionPerformed(evt);
				
			} else if(sTipo.equals("NuevoRelacionesPresupuestoVentasLineas")) {
				jButtonNuevoPresupuestoVentasLineasActionPerformed(evt,true);
				
			} else if(sTipo.equals("ModificarPresupuestoVentasLineas")) {
				jButtonModificarPresupuestoVentasLineasActionPerformed(evt);
				
			} else if(sTipo.equals("ActualizarPresupuestoVentasLineas")) {
				jButtonActualizarPresupuestoVentasLineasActionPerformed(evt);
				
			} else if(sTipo.equals("EliminarPresupuestoVentasLineas")) {
				jButtonEliminarPresupuestoVentasLineasActionPerformed(evt);
				
			} else if(sTipo.equals("GuardarCambiosTablaPresupuestoVentasLineas")) {
				jButtonGuardarCambiosPresupuestoVentasLineasActionPerformed(evt);
				
			} else if(sTipo.equals("CancelarPresupuestoVentasLineas")) {
				jButtonCancelarPresupuestoVentasLineasActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarPresupuestoVentasLineas")) {
				jButtonCerrarPresupuestoVentasLineasActionPerformed(evt);
				
			} else if(sTipo.equals("GuardarCambiosPresupuestoVentasLineas")) {
				jButtonGuardarCambiosPresupuestoVentasLineasActionPerformed(evt);
			
			} else if(sTipo.equals("NuevoGuardarCambiosPresupuestoVentasLineas")) {
				jButtonNuevoGuardarCambiosPresupuestoVentasLineasActionPerformed(evt);
			
			} else if(sTipo.equals("AbrirOrderByPresupuestoVentasLineas")) {
				jButtonAbrirOrderByPresupuestoVentasLineasActionPerformed(evt);
			
			} else if(sTipo.equals("RecargarInformacionPresupuestoVentasLineas")) {
				jButtonRecargarInformacionPresupuestoVentasLineasActionPerformed(evt);
			
			} else if(sTipo.equals("AnterioresPresupuestoVentasLineas")) {
				jButtonAnterioresPresupuestoVentasLineasActionPerformed(evt);			
			
			}  else if(sTipo.equals("SiguientesPresupuestoVentasLineas")) {
				jButtonSiguientesPresupuestoVentasLineasActionPerformed(evt);			
			} 
			
			
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("idPresupuestoVentasLineasBusqueda")) {
				this.jButtonidPresupuestoVentasLineasBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_empresaPresupuestoVentasLineasUpdate")) {
				this.jButtonid_empresaPresupuestoVentasLineasUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_empresaPresupuestoVentasLineasBusqueda")) {
				this.jButtonid_empresaPresupuestoVentasLineasBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_sucursalPresupuestoVentasLineasUpdate")) {
				this.jButtonid_sucursalPresupuestoVentasLineasUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_sucursalPresupuestoVentasLineasBusqueda")) {
				this.jButtonid_sucursalPresupuestoVentasLineasBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_ejercicioPresupuestoVentasLineasUpdate")) {
				this.jButtonid_ejercicioPresupuestoVentasLineasUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_ejercicioPresupuestoVentasLineasBusqueda")) {
				this.jButtonid_ejercicioPresupuestoVentasLineasBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_periodoPresupuestoVentasLineasUpdate")) {
				this.jButtonid_periodoPresupuestoVentasLineasUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_periodoPresupuestoVentasLineasBusqueda")) {
				this.jButtonid_periodoPresupuestoVentasLineasBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_vendedorPresupuestoVentasLineasUpdate")) {
				this.jButtonid_vendedorPresupuestoVentasLineasUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_vendedorPresupuestoVentasLineasBusqueda")) {
				this.jButtonid_vendedorPresupuestoVentasLineasBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_paisPresupuestoVentasLineasUpdate")) {
				this.jButtonid_paisPresupuestoVentasLineasUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_paisPresupuestoVentasLineasBusqueda")) {
				this.jButtonid_paisPresupuestoVentasLineasBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_ciudadPresupuestoVentasLineasUpdate")) {
				this.jButtonid_ciudadPresupuestoVentasLineasUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_ciudadPresupuestoVentasLineasBusqueda")) {
				this.jButtonid_ciudadPresupuestoVentasLineasBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_zonaPresupuestoVentasLineasUpdate")) {
				this.jButtonid_zonaPresupuestoVentasLineasUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_zonaPresupuestoVentasLineasBusqueda")) {
				this.jButtonid_zonaPresupuestoVentasLineasBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_lineaPresupuestoVentasLineasUpdate")) {
				this.jButtonid_lineaPresupuestoVentasLineasUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_lineaPresupuestoVentasLineasBusqueda")) {
				this.jButtonid_lineaPresupuestoVentasLineasBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_linea_grupoPresupuestoVentasLineasUpdate")) {
				this.jButtonid_linea_grupoPresupuestoVentasLineasUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_linea_grupoPresupuestoVentasLineasBusqueda")) {
				this.jButtonid_linea_grupoPresupuestoVentasLineasBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_linea_categoriaPresupuestoVentasLineasUpdate")) {
				this.jButtonid_linea_categoriaPresupuestoVentasLineasUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_linea_categoriaPresupuestoVentasLineasBusqueda")) {
				this.jButtonid_linea_categoriaPresupuestoVentasLineasBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_linea_marcaPresupuestoVentasLineasUpdate")) {
				this.jButtonid_linea_marcaPresupuestoVentasLineasUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_linea_marcaPresupuestoVentasLineasBusqueda")) {
				this.jButtonid_linea_marcaPresupuestoVentasLineasBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("precioPresupuestoVentasLineasBusqueda")) {
				this.jButtonprecioPresupuestoVentasLineasBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("cantidadPresupuestoVentasLineasBusqueda")) {
				this.jButtoncantidadPresupuestoVentasLineasBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("valorPresupuestoVentasLineasBusqueda")) {
				this.jButtonvalorPresupuestoVentasLineasBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("porcentajePresupuestoVentasLineasBusqueda")) {
				this.jButtonporcentajePresupuestoVentasLineasBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("cantidad_totalPresupuestoVentasLineasBusqueda")) {
				this.jButtoncantidad_totalPresupuestoVentasLineasBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("valor_totalPresupuestoVentasLineasBusqueda")) {
				this.jButtonvalor_totalPresupuestoVentasLineasBusquedaActionPerformed(evt);
			}
			
			PresupuestoVentasLineasBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.KEY,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.presupuestoventaslineas,new Object(),this.presupuestoventaslineasParameterGeneral,this.presupuestoventaslineasReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PresupuestoVentasLineasConstantesFunciones.CLASSNAME);
			
  		}  finally {
      		this.finishProcessPresupuestoVentasLineas();
      	}
    }
	
	public void internalFrameClosingInternalFrameGeneral(String sTipo,InternalFrameEvent evt) { 	  
		try {
			PresupuestoVentasLineasBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.WINDOW,EventoTipo.CLIC,EventoSubTipo.CLOSING,sTipo,this.presupuestoventaslineas,new Object(),this.presupuestoventaslineasParameterGeneral,this.presupuestoventaslineasReturnGeneral);
			
			if(sTipo.equals("CloseInternalFramePresupuestoVentasLineas")) {
				closingInternalFramePresupuestoVentasLineas();
				
			} else if(sTipo.equals("jButtonCancelarPresupuestoVentasLineas")) {
				JInternalFrameBase jInternalFrameDetalleFormPresupuestoVentasLineas = (JInternalFrameBase)evt.getSource();
	            	
	            PresupuestoVentasLineasBeanSwingJInternalFrame jInternalFrameParent=(PresupuestoVentasLineasBeanSwingJInternalFrame)jInternalFrameDetalleFormPresupuestoVentasLineas.getjInternalFrameParent();
	            
				jInternalFrameParent.jButtonCancelarPresupuestoVentasLineasActionPerformed(null);
			}
			
			PresupuestoVentasLineasBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.WINDOW,EventoTipo.CLIC,EventoSubTipo.CLOSING,sTipo,this.presupuestoventaslineas,new Object(),this.presupuestoventaslineasParameterGeneral,this.presupuestoventaslineasReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PresupuestoVentasLineasConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void recargarFormPresupuestoVentasLineas(String sTipo,String sDominio,EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,String sTipoGeneral,ArrayList<Classe> classes,Boolean conIrServidorAplicacion) throws Exception {
		this.recargarFormPresupuestoVentasLineas(sTipo,sDominio,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipoGeneral,classes,conIrServidorAplicacion,false);
	}
	
	public void recargarFormPresupuestoVentasLineas(String sTipo,String sDominio,EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,String sTipoGeneral,ArrayList<Classe> classes,Boolean conIrServidorAplicacion,Boolean esControlTabla) throws Exception {
		if(this.permiteRecargarForm && this.permiteMantenimiento(this.presupuestoventaslineas)) {
			if(!esControlTabla) {
				if(PresupuestoVentasLineasJInternalFrame.ISBINDING_MANUAL_TABLA) {			
					this.setVariablesFormularioToObjetoActualPresupuestoVentasLineas(this.presupuestoventaslineas,true,false);
					this.setVariablesFormularioToObjetoActualForeignKeysPresupuestoVentasLineas(this.presupuestoventaslineas);			
				}
				
				if(this.presupuestoventaslineasSessionBean.getEstaModoGuardarRelaciones()) {
					this.setVariablesFormularioRelacionesToObjetoActualPresupuestoVentasLineas(this.presupuestoventaslineas,classes);				
				}
			
				if(conIrServidorAplicacion) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {						
						this.presupuestoventaslineasReturnGeneral=presupuestoventaslineasLogic.procesarEventosPresupuestoVentasLineassWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.presupuestoventaslineasLogic.getPresupuestoVentasLineass(),this.presupuestoventaslineas,this.presupuestoventaslineasParameterGeneral,this.isEsNuevoPresupuestoVentasLineas,classes);//this.presupuestoventaslineasLogic.getPresupuestoVentasLineas()//sTipoGeneral
									
					} else if(Constantes.ISUSAEJBREMOTE) {
									
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE
					
					//ACTUALIZA VARIABLES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
					//this.setVariablesObjetoReturnGeneralToBeanPresupuestoVentasLineas(this.presupuestoventaslineasReturnGeneral,this.presupuestoventaslineasBean,false);
						
					//ACTUALIZA VARIABLES RELACIONES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
					if(this.presupuestoventaslineasSessionBean.getEstaModoGuardarRelaciones()) {
						//this.setVariablesRelacionesObjetoReturnGeneralToBeanPresupuestoVentasLineas(classes,this.presupuestoventaslineasReturnGeneral,this.presupuestoventaslineasBean,false);
					}
						
					if(this.presupuestoventaslineasReturnGeneral.getConRecargarPropiedades()) {
						//INICIALIZA VARIABLES COMBOS NORMALES (FK)
						this.setVariablesObjetoActualToFormularioForeignKeyPresupuestoVentasLineas(this.presupuestoventaslineasReturnGeneral.getPresupuestoVentasLineas());
							
						//INICIALIZA VARIABLES NORMALES A FORMULARIO(SIN FK)
						this.setVariablesObjetoActualToFormularioPresupuestoVentasLineas(this.presupuestoventaslineasReturnGeneral.getPresupuestoVentasLineas());	
					}
						
					if(this.presupuestoventaslineasReturnGeneral.getConRecargarRelaciones()) {
						//INICIALIZA VARIABLES RELACIONES A FORMULARIO
						this.setVariablesRelacionesObjetoActualToFormularioPresupuestoVentasLineas(this.presupuestoventaslineasReturnGeneral.getPresupuestoVentasLineas(),classes);//this.presupuestoventaslineasBean);	
					}									
					
				} else {				
					//INICIALIZA VARIABLES RELACIONES A FORMULARIO
					this.setVariablesRelacionesObjetoActualToFormularioPresupuestoVentasLineas(this.presupuestoventaslineas,classes);//this.presupuestoventaslineasBean);									
				}
			
				if(PresupuestoVentasLineasJInternalFrame.ISBINDING_MANUAL_TABLA) {
					this.setVariablesFormularioToObjetoActualPresupuestoVentasLineas(this.presupuestoventaslineas,true,false);
					this.setVariablesFormularioToObjetoActualForeignKeysPresupuestoVentasLineas(this.presupuestoventaslineas);				
				}
				
			} else {
				
				if(((controlTipo.equals(ControlTipo.TEXTBOX) || controlTipo.equals(ControlTipo.DATE)
					|| controlTipo.equals(ControlTipo.TEXTAREA) || controlTipo.equals(ControlTipo.COMBOBOX)
					)				
					&& eventoTipo.equals(EventoTipo.CHANGE)
					)
					
					|| (controlTipo.equals(ControlTipo.CHECKBOX) && eventoTipo.equals(EventoTipo.CLIC))
					
				) { // && sTipoGeneral.equals("TEXTBOX")
					
					if(this.presupuestoventaslineasAnterior!=null) {
						this.presupuestoventaslineas=this.presupuestoventaslineasAnterior;
					}
				}
				
				if(conIrServidorAplicacion) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {						
						this.presupuestoventaslineasReturnGeneral=presupuestoventaslineasLogic.procesarEventosPresupuestoVentasLineassWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.presupuestoventaslineasLogic.getPresupuestoVentasLineass(),this.presupuestoventaslineas,this.presupuestoventaslineasParameterGeneral,this.isEsNuevoPresupuestoVentasLineas,classes);//this.presupuestoventaslineasLogic.getPresupuestoVentasLineas()//sTipoGeneral
									
					} else if(Constantes.ISUSAEJBREMOTE) {
									
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//NO ENTENDIBLE PORQUE PONER
					//if(this.presupuestoventaslineasSessionBean.getEstaModoGuardarRelaciones() 
					//	|| this.presupuestoventaslineasSessionBean.getEsGuardarRelacionado())	{
						actualizarLista(this.presupuestoventaslineasReturnGeneral.getPresupuestoVentasLineas(),presupuestoventaslineasLogic.getPresupuestoVentasLineass());
					//}
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(this.presupuestoventaslineasReturnGeneral.getPresupuestoVentasLineas(),this.presupuestoventaslineass);
				}
				//ARCHITECTURE
				
				//this.jTableDatosPresupuestoVentasLineas.repaint();
				
				//((AbstractTableModel) this.jTableDatosPresupuestoVentasLineas.getModel()).fireTableDataChanged();
				
				this.actualizarVisualTableDatosPresupuestoVentasLineas();
			}
		}
	}
	
	public void actualizarVisualTableDatosPresupuestoVentasLineas() throws Exception {
		
		PresupuestoVentasLineasModel presupuestoventaslineasModel=(PresupuestoVentasLineasModel)this.jTableDatosPresupuestoVentasLineas.getModel();
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			presupuestoventaslineasModel.presupuestoventaslineass=this.presupuestoventaslineasLogic.getPresupuestoVentasLineass();
		
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
			presupuestoventaslineasModel.presupuestoventaslineass=this.presupuestoventaslineass;
		}
		
		
		((PresupuestoVentasLineasModel) this.jTableDatosPresupuestoVentasLineas.getModel()).fireTableDataChanged();
	}
	
	public void actualizarVisualTableDatosEventosVistaPresupuestoVentasLineas() throws Exception {
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.actualizarLista(this.getpresupuestoventaslineasAnterior(),this.presupuestoventaslineasLogic.getPresupuestoVentasLineass());
					
		} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
			this.actualizarLista(this.getpresupuestoventaslineasAnterior(),this.presupuestoventaslineass);
		}
		//ARCHITECTURE
						
		this.actualizarFilaTotales();
						
		this.actualizarVisualTableDatosPresupuestoVentasLineas();	
	}
	
	public void setVariablesRelacionesObjetoActualToFormularioPresupuestoVentasLineas(PresupuestoVentasLineas presupuestoventaslineas,ArrayList<Classe> classes) throws Exception { 
		try {
			
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PresupuestoVentasLineasConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setEventoParentGeneral(Boolean esUsoDesdeHijo,String sDominio,String sDominioTipo,String sTipo,String sTipoGeneral,Boolean esControlTabla,Boolean conIrServidorAplicacion,
						Long id,Component control, EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,ArrayList<String> arrClasses,
						Object evt,GeneralEntityParameterReturnGeneral generalEntityParameterGeneral,Object otro) { 	  
		try {
			
			if(this.permiteManejarEventosControl()) {
				
				//BASE COPIADO DESDE TEXTFIELLOSTFOCUS
				
				//EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				Boolean conTodasRelaciones=false;
				
				this.esUsoDesdeHijo=esUsoDesdeHijo;
										
				PresupuestoVentasLineasBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.presupuestoventaslineas,new Object(),generalEntityParameterGeneral,this.presupuestoventaslineasReturnGeneral);
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				for(String sClasse:arrClasses) {
					if(sClasse.equals("TODOS")) {
						conTodasRelaciones=true;
						break;
					}
				}
				
				if(this.presupuestoventaslineasSessionBean.getConGuardarRelaciones()) {
					if(conTodasRelaciones) {
						classes=PresupuestoVentasLineasConstantesFunciones.getClassesRelationshipsOfPresupuestoVentasLineas(new ArrayList<Classe>(),DeepLoadType.NONE);
					} else {
						classes=PresupuestoVentasLineasConstantesFunciones.getClassesRelationshipsFromStringsOfPresupuestoVentasLineas(arrClasses,DeepLoadType.NONE);
					}
				}
	
				this.classesActual=new ArrayList<Classe>();
				this.classesActual.addAll(classes);
	
				this.recargarFormPresupuestoVentasLineas(sTipo,sDominio,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipoGeneral,classes,conIrServidorAplicacion,esControlTabla);
										
				PresupuestoVentasLineasBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.presupuestoventaslineas,new Object(),generalEntityParameterGeneral,this.presupuestoventaslineasReturnGeneral);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PresupuestoVentasLineasConstantesFunciones.CLASSNAME);
  		}
    }
	
	/*
	public void setVariablesRelacionesObjetoBeanActualToFormularioPresupuestoVentasLineas(PresupuestoVentasLineasBean presupuestoventaslineasBean) throws Exception { 
		try {
			
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PresupuestoVentasLineasConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesRelacionesObjetoReturnGeneralToBeanPresupuestoVentasLineas(ArrayList<Classe> classes,PresupuestoVentasLineasReturnGeneral presupuestoventaslineasReturnGeneral,PresupuestoVentasLineasBean presupuestoventaslineasBean,Boolean conDefault) throws Exception {
		
	}
	*/
	
	public void setVariablesFormularioRelacionesToObjetoActualPresupuestoVentasLineas(PresupuestoVentasLineas presupuestoventaslineas,ArrayList<Classe> classes) throws Exception {
		
	}
	
	public Boolean permiteManejarEventosControl() {
		Boolean permite=true;				
		
		if(this.estaModoNuevo || this.estaModoSeleccionar || this.estaModoEliminarGuardarCambios) {
			permite=false;
			
		} 
		
		//NO DEBE MEZCLARSE CONCEPTOS
		/*	
		if(!paraTabla && !this.permiteMantenimiento(this.presupuestoventaslineas)) {
			System.out.println("ERROR:EL OBJETO ACTUAL NO PUEDE SER FILA TOTALES");
				
			//JOptionPane.showMessageDialog(this,"EL OBJETO ACTUAL NO PUEDE SER FILA TOTALES","EVENTO",JOptionPane.ERROR_MESSAGE);			
		}
		*/
		
		return permite;
	}
	
	public void inicializarFormDetalle() throws Exception {
		
		this.jInternalFrameDetalleFormPresupuestoVentasLineas = new PresupuestoVentasLineasDetalleFormJInternalFrame(jDesktopPane,this.presupuestoventaslineasSessionBean.getConGuardarRelaciones(),this.presupuestoventaslineasSessionBean.getEsGuardarRelacionado(),this.cargarRelaciones,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo);
		
		this.jDesktopPane.add(this.jInternalFrameDetalleFormPresupuestoVentasLineas);
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.setVisible(false);
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.setSelected(false);						
		
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.setJInternalFrameParent(this);
		
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.presupuestoventaslineasLogic=this.presupuestoventaslineasLogic;
		
		this.cargarCombosFrameForeignKeyPresupuestoVentasLineas("Formulario");
		
		this.inicializarActualizarBindingBotonesPermisosManualFormDetallePresupuestoVentasLineas();
		this.inicializarActualizarBindingtiposArchivosReportesAccionesManualFormDetallePresupuestoVentasLineas();
		
		this.initActionsFormDetalle();		
		
		this.initActionsCombosTodosForeignKeyPresupuestoVentasLineas("Formulario");
		
		//TALVEZ conSetVariablesGlobales COMO if() 
		this.setVariablesGlobalesCombosForeignKeyPresupuestoVentasLineas();
		
		this.cargarMenuRelaciones();
		
	}
	
	public void initActionsFormDetalle() {	
		
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"jButtonCancelarPresupuestoVentasLineas"));
		
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jButtonModificarPresupuestoVentasLineas.addActionListener(new ButtonActionListener(this,"ModificarPresupuestoVentasLineas"));

		
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jButtonModificarToolBarPresupuestoVentasLineas.addActionListener(new ButtonActionListener(this,"ModificarToolBarPresupuestoVentasLineas"));
					
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jMenuItemModificarPresupuestoVentasLineas.addActionListener(new ButtonActionListener(this,"MenuItemModificarPresupuestoVentasLineas"));		
		
		
		
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jButtonActualizarPresupuestoVentasLineas.addActionListener (new ButtonActionListener(this,"ActualizarPresupuestoVentasLineas"));
		
		
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jButtonActualizarToolBarPresupuestoVentasLineas.addActionListener(new ButtonActionListener(this,"ActualizarToolBarPresupuestoVentasLineas"));
						
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jMenuItemActualizarPresupuestoVentasLineas.addActionListener (new ButtonActionListener(this,"MenuItemActualizarPresupuestoVentasLineas"));		
		
		
		
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jButtonEliminarPresupuestoVentasLineas.addActionListener (new ButtonActionListener(this,"EliminarPresupuestoVentasLineas"));
		
		
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jButtonEliminarToolBarPresupuestoVentasLineas.addActionListener (new ButtonActionListener(this,"EliminarToolBarPresupuestoVentasLineas"));
								
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jMenuItemEliminarPresupuestoVentasLineas.addActionListener (new ButtonActionListener(this,"MenuItemEliminarPresupuestoVentasLineas"));		
		
		
		
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jButtonCancelarPresupuestoVentasLineas.addActionListener (new ButtonActionListener(this,"CancelarPresupuestoVentasLineas"));
		
		
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jButtonCancelarToolBarPresupuestoVentasLineas.addActionListener (new ButtonActionListener(this,"CancelarToolBarPresupuestoVentasLineas"));
					
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jMenuItemCancelarPresupuestoVentasLineas.addActionListener (new ButtonActionListener(this,"MenuItemCancelarPresupuestoVentasLineas"));		
		
		
		
		
		
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jMenuItemDetalleCerrarPresupuestoVentasLineas.addActionListener (new ButtonActionListener(this,"MenuItemDetalleCerrarPresupuestoVentasLineas"));		
		
		
		
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jButtonGuardarCambiosToolBarPresupuestoVentasLineas.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarPresupuestoVentasLineas"));
		
		
		
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jButtonGuardarCambiosToolBarPresupuestoVentasLineas.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarPresupuestoVentasLineas"));
		
		
		
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxTiposAccionesFormularioPresupuestoVentasLineas.addActionListener (new ButtonActionListener(this,"TiposAccionesFormularioPresupuestoVentasLineas"));
		
		
				
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jButtonidPresupuestoVentasLineasBusqueda.addActionListener(new ButtonActionListener(this,"idPresupuestoVentasLineasBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jButtonid_empresaPresupuestoVentasLineasUpdate.addActionListener(new ButtonActionListener(this,"id_empresaPresupuestoVentasLineasUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jButtonid_empresaPresupuestoVentasLineasBusqueda.addActionListener(new ButtonActionListener(this,"id_empresaPresupuestoVentasLineasBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jButtonid_sucursalPresupuestoVentasLineasUpdate.addActionListener(new ButtonActionListener(this,"id_sucursalPresupuestoVentasLineasUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jButtonid_sucursalPresupuestoVentasLineasBusqueda.addActionListener(new ButtonActionListener(this,"id_sucursalPresupuestoVentasLineasBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jButtonid_ejercicioPresupuestoVentasLineasUpdate.addActionListener(new ButtonActionListener(this,"id_ejercicioPresupuestoVentasLineasUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jButtonid_ejercicioPresupuestoVentasLineasBusqueda.addActionListener(new ButtonActionListener(this,"id_ejercicioPresupuestoVentasLineasBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jButtonid_periodoPresupuestoVentasLineasUpdate.addActionListener(new ButtonActionListener(this,"id_periodoPresupuestoVentasLineasUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jButtonid_periodoPresupuestoVentasLineasBusqueda.addActionListener(new ButtonActionListener(this,"id_periodoPresupuestoVentasLineasBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jButtonid_vendedorPresupuestoVentasLineasUpdate.addActionListener(new ButtonActionListener(this,"id_vendedorPresupuestoVentasLineasUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jButtonid_vendedorPresupuestoVentasLineasBusqueda.addActionListener(new ButtonActionListener(this,"id_vendedorPresupuestoVentasLineasBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jButtonid_paisPresupuestoVentasLineasUpdate.addActionListener(new ButtonActionListener(this,"id_paisPresupuestoVentasLineasUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jButtonid_paisPresupuestoVentasLineasBusqueda.addActionListener(new ButtonActionListener(this,"id_paisPresupuestoVentasLineasBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jButtonid_ciudadPresupuestoVentasLineasUpdate.addActionListener(new ButtonActionListener(this,"id_ciudadPresupuestoVentasLineasUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jButtonid_ciudadPresupuestoVentasLineasBusqueda.addActionListener(new ButtonActionListener(this,"id_ciudadPresupuestoVentasLineasBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jButtonid_zonaPresupuestoVentasLineasUpdate.addActionListener(new ButtonActionListener(this,"id_zonaPresupuestoVentasLineasUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jButtonid_zonaPresupuestoVentasLineasBusqueda.addActionListener(new ButtonActionListener(this,"id_zonaPresupuestoVentasLineasBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jButtonid_lineaPresupuestoVentasLineasUpdate.addActionListener(new ButtonActionListener(this,"id_lineaPresupuestoVentasLineasUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jButtonid_lineaPresupuestoVentasLineasBusqueda.addActionListener(new ButtonActionListener(this,"id_lineaPresupuestoVentasLineasBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jButtonid_linea_grupoPresupuestoVentasLineasUpdate.addActionListener(new ButtonActionListener(this,"id_linea_grupoPresupuestoVentasLineasUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jButtonid_linea_grupoPresupuestoVentasLineasBusqueda.addActionListener(new ButtonActionListener(this,"id_linea_grupoPresupuestoVentasLineasBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jButtonid_linea_categoriaPresupuestoVentasLineasUpdate.addActionListener(new ButtonActionListener(this,"id_linea_categoriaPresupuestoVentasLineasUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jButtonid_linea_categoriaPresupuestoVentasLineasBusqueda.addActionListener(new ButtonActionListener(this,"id_linea_categoriaPresupuestoVentasLineasBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jButtonid_linea_marcaPresupuestoVentasLineasUpdate.addActionListener(new ButtonActionListener(this,"id_linea_marcaPresupuestoVentasLineasUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jButtonid_linea_marcaPresupuestoVentasLineasBusqueda.addActionListener(new ButtonActionListener(this,"id_linea_marcaPresupuestoVentasLineasBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jButtonprecioPresupuestoVentasLineasBusqueda.addActionListener(new ButtonActionListener(this,"precioPresupuestoVentasLineasBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jButtoncantidadPresupuestoVentasLineasBusqueda.addActionListener(new ButtonActionListener(this,"cantidadPresupuestoVentasLineasBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jButtonvalorPresupuestoVentasLineasBusqueda.addActionListener(new ButtonActionListener(this,"valorPresupuestoVentasLineasBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jButtonporcentajePresupuestoVentasLineasBusqueda.addActionListener(new ButtonActionListener(this,"porcentajePresupuestoVentasLineasBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jButtoncantidad_totalPresupuestoVentasLineasBusqueda.addActionListener(new ButtonActionListener(this,"cantidad_totalPresupuestoVentasLineasBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jButtonvalor_totalPresupuestoVentasLineasBusqueda.addActionListener(new ButtonActionListener(this,"valor_totalPresupuestoVentasLineasBusqueda"));
		
		
		;

		//TABBED PANE RELACIONES
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jTabbedPaneRelacionesPresupuestoVentasLineas.addChangeListener(new TabbedPaneChangeListener(this,"RelacionesPresupuestoVentasLineas"));
		
		;		
		//TABBED PANE RELACIONES FIN(EXTRA TAB)	
	}
	
	public void initActions() {				
		this.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"CloseInternalFramePresupuestoVentasLineas"));
		
		if(this.jInternalFrameDetalleFormPresupuestoVentasLineas!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormPresupuestoVentasLineas.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"jButtonCancelarPresupuestoVentasLineas"));
		}
		
		this.jTableDatosPresupuestoVentasLineas.getSelectionModel().addListSelectionListener(new TableListSelectionListener(this,"TableDatosSeleccionarPresupuestoVentasLineas"));
		
		this.jTableDatosPresupuestoVentasLineas.addMouseListener(new TableMouseAdapter(this,"DatosSeleccionarPresupuestoVentasLineas"));
		
		this.jButtonNuevoPresupuestoVentasLineas.addActionListener(new ButtonActionListener(this,"NuevoPresupuestoVentasLineas"));
		
		this.jButtonDuplicarPresupuestoVentasLineas.addActionListener(new ButtonActionListener(this,"DuplicarPresupuestoVentasLineas"));
		
		this.jButtonCopiarPresupuestoVentasLineas.addActionListener(new ButtonActionListener(this,"CopiarPresupuestoVentasLineas"));
		
		this.jButtonVerFormPresupuestoVentasLineas.addActionListener(new ButtonActionListener(this,"VerFormPresupuestoVentasLineas"));
		
		
		this.jButtonNuevoToolBarPresupuestoVentasLineas.addActionListener(new ButtonActionListener(this,"NuevoToolBarPresupuestoVentasLineas"));
			
		this.jButtonDuplicarToolBarPresupuestoVentasLineas.addActionListener(new ButtonActionListener(this,"DuplicarToolBarPresupuestoVentasLineas"));
			
		this.jMenuItemNuevoPresupuestoVentasLineas.addActionListener (new ButtonActionListener(this,"MenuItemNuevoPresupuestoVentasLineas"));
			
		this.jMenuItemDuplicarPresupuestoVentasLineas.addActionListener (new ButtonActionListener(this,"MenuItemDuplicarPresupuestoVentasLineas"));		
		
		
		this.jButtonNuevoRelacionesPresupuestoVentasLineas.addActionListener (new ButtonActionListener(this,"NuevoRelacionesPresupuestoVentasLineas"));
		
		
		this.jButtonNuevoRelacionesToolBarPresupuestoVentasLineas.addActionListener(new ButtonActionListener(this,"NuevoRelacionesToolBarPresupuestoVentasLineas"));
			
		this.jMenuItemNuevoRelacionesPresupuestoVentasLineas.addActionListener(new ButtonActionListener(this,"MenuItemNuevoRelacionesPresupuestoVentasLineas"));		
		
		
		if(this.jInternalFrameDetalleFormPresupuestoVentasLineas!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormPresupuestoVentasLineas.jButtonModificarPresupuestoVentasLineas.addActionListener(new ButtonActionListener(this,"ModificarPresupuestoVentasLineas"));
		}
		
		
		if(this.jInternalFrameDetalleFormPresupuestoVentasLineas!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormPresupuestoVentasLineas.jButtonModificarToolBarPresupuestoVentasLineas.addActionListener(new ButtonActionListener(this,"ModificarToolBarPresupuestoVentasLineas"));
			
			this.jInternalFrameDetalleFormPresupuestoVentasLineas.jMenuItemModificarPresupuestoVentasLineas.addActionListener(new ButtonActionListener(this,"MenuItemModificarPresupuestoVentasLineas"));		
		}
		
		
		if(this.jInternalFrameDetalleFormPresupuestoVentasLineas!=null) { //if(this.conCargarFormDetalle) {			
			this.jInternalFrameDetalleFormPresupuestoVentasLineas.jButtonActualizarPresupuestoVentasLineas.addActionListener (new ButtonActionListener(this,"ActualizarPresupuestoVentasLineas"));
		}
		
		
		if(this.jInternalFrameDetalleFormPresupuestoVentasLineas!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormPresupuestoVentasLineas.jButtonActualizarToolBarPresupuestoVentasLineas.addActionListener(new ButtonActionListener(this,"ActualizarToolBarPresupuestoVentasLineas"));
				
			this.jInternalFrameDetalleFormPresupuestoVentasLineas.jMenuItemActualizarPresupuestoVentasLineas.addActionListener (new ButtonActionListener(this,"MenuItemActualizarPresupuestoVentasLineas"));		
		}
		
		
		if(this.jInternalFrameDetalleFormPresupuestoVentasLineas!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormPresupuestoVentasLineas.jButtonEliminarPresupuestoVentasLineas.addActionListener (new ButtonActionListener(this,"EliminarPresupuestoVentasLineas"));
		}
		
		
		if(this.jInternalFrameDetalleFormPresupuestoVentasLineas!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormPresupuestoVentasLineas.jButtonEliminarToolBarPresupuestoVentasLineas.addActionListener (new ButtonActionListener(this,"EliminarToolBarPresupuestoVentasLineas"));
						
			this.jInternalFrameDetalleFormPresupuestoVentasLineas.jMenuItemEliminarPresupuestoVentasLineas.addActionListener (new ButtonActionListener(this,"MenuItemEliminarPresupuestoVentasLineas"));		
		}
		
		
		if(this.jInternalFrameDetalleFormPresupuestoVentasLineas!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormPresupuestoVentasLineas.jButtonCancelarPresupuestoVentasLineas.addActionListener (new ButtonActionListener(this,"CancelarPresupuestoVentasLineas"));
		}
		
		
		if(this.jInternalFrameDetalleFormPresupuestoVentasLineas!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormPresupuestoVentasLineas.jButtonCancelarToolBarPresupuestoVentasLineas.addActionListener (new ButtonActionListener(this,"CancelarToolBarPresupuestoVentasLineas"));
			
			this.jInternalFrameDetalleFormPresupuestoVentasLineas.jMenuItemCancelarPresupuestoVentasLineas.addActionListener (new ButtonActionListener(this,"MenuItemCancelarPresupuestoVentasLineas"));		
		}
		
		this.jButtonMostrarOcultarTablaToolBarPresupuestoVentasLineas.addActionListener (new ButtonActionListener(this,"MostrarOcultarToolBarPresupuestoVentasLineas"));		
		
		
		this.jButtonCerrarPresupuestoVentasLineas.addActionListener (new ButtonActionListener(this,"CerrarPresupuestoVentasLineas"));
		
		
		this.jButtonCerrarToolBarPresupuestoVentasLineas.addActionListener (new ButtonActionListener(this,"CerrarToolBarPresupuestoVentasLineas"));
			
		this.jMenuItemCerrarPresupuestoVentasLineas.addActionListener (new ButtonActionListener(this,"MenuItemCerrarPresupuestoVentasLineas"));
			
		if(this.jInternalFrameDetalleFormPresupuestoVentasLineas!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormPresupuestoVentasLineas.jMenuItemDetalleCerrarPresupuestoVentasLineas.addActionListener (new ButtonActionListener(this,"MenuItemDetalleCerrarPresupuestoVentasLineas"));		
		}
		
		
		if(this.jInternalFrameDetalleFormPresupuestoVentasLineas!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormPresupuestoVentasLineas.jButtonGuardarCambiosPresupuestoVentasLineas.addActionListener (new ButtonActionListener(this,"GuardarCambiosPresupuestoVentasLineas"));
		}
		
		
		if(this.jInternalFrameDetalleFormPresupuestoVentasLineas!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormPresupuestoVentasLineas.jButtonGuardarCambiosToolBarPresupuestoVentasLineas.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarPresupuestoVentasLineas"));
		}
		
		this.jButtonCopiarToolBarPresupuestoVentasLineas.addActionListener (new ButtonActionListener(this,"CopiarToolBarPresupuestoVentasLineas"));
			
		this.jButtonVerFormToolBarPresupuestoVentasLineas.addActionListener (new ButtonActionListener(this,"VerFormToolBarPresupuestoVentasLineas"));
		
		this.jMenuItemGuardarCambiosPresupuestoVentasLineas.addActionListener (new ButtonActionListener(this,"MenuItemGuardarCambiosPresupuestoVentasLineas"));
			
		this.jMenuItemCopiarPresupuestoVentasLineas.addActionListener (new ButtonActionListener(this,"MenuItemCopiarPresupuestoVentasLineas"));		
		
		this.jMenuItemVerFormPresupuestoVentasLineas.addActionListener (new ButtonActionListener(this,"MenuItemVerFormPresupuestoVentasLineas"));		
		
		
		this.jButtonGuardarCambiosTablaPresupuestoVentasLineas.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaPresupuestoVentasLineas"));
		
		
		this.jButtonGuardarCambiosTablaToolBarPresupuestoVentasLineas.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaToolBarPresupuestoVentasLineas"));
			
		this.jMenuItemGuardarCambiosTablaPresupuestoVentasLineas.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaPresupuestoVentasLineas"));		
		
		
		
		this.jButtonRecargarInformacionPresupuestoVentasLineas.addActionListener (new ButtonActionListener(this,"RecargarInformacionPresupuestoVentasLineas"));
					
		this.jButtonRecargarInformacionToolBarPresupuestoVentasLineas.addActionListener (new ButtonActionListener(this,"RecargarInformacionToolBarPresupuestoVentasLineas"));
		
		this.jMenuItemRecargarInformacionPresupuestoVentasLineas.addActionListener (new ButtonActionListener(this,"MenuItemRecargarInformacionPresupuestoVentasLineas"));		
		
		
		
		this.jButtonAnterioresPresupuestoVentasLineas.addActionListener (new ButtonActionListener(this,"AnterioresPresupuestoVentasLineas"));
		
		
		this.jButtonAnterioresToolBarPresupuestoVentasLineas.addActionListener (new ButtonActionListener(this,"AnterioresToolBarPresupuestoVentasLineas"));
		
		this.jMenuItemAnterioresPresupuestoVentasLineas.addActionListener (new ButtonActionListener(this,"MenuItemAnterioresPresupuestoVentasLineas"));		
		
		
		this.jButtonSiguientesPresupuestoVentasLineas.addActionListener (new ButtonActionListener(this,"SiguientesPresupuestoVentasLineas"));
		
		
		this.jButtonSiguientesToolBarPresupuestoVentasLineas.addActionListener (new ButtonActionListener(this,"SiguientesToolBarPresupuestoVentasLineas"));
			
		this.jMenuItemSiguientesPresupuestoVentasLineas.addActionListener (new ButtonActionListener(this,"MenuItemSiguientesPresupuestoVentasLineas"));
			
		this.jMenuItemAbrirOrderByPresupuestoVentasLineas.addActionListener (new ButtonActionListener(this,"MenuItemAbrirOrderByPresupuestoVentasLineas"));
			
		this.jMenuItemMostrarOcultarPresupuestoVentasLineas.addActionListener (new ButtonActionListener(this,"MenuItemMostrarOcultarPresupuestoVentasLineas"));
			
		this.jMenuItemDetalleAbrirOrderByPresupuestoVentasLineas.addActionListener (new ButtonActionListener(this,"MenuItemDetalleAbrirOrderByPresupuestoVentasLineas"));
			
		this.jMenuItemDetalleMostarOcultarPresupuestoVentasLineas.addActionListener (new ButtonActionListener(this,"MenuItemDetalleMostrarOcultarPresupuestoVentasLineas"));		
		
		
		this.jButtonNuevoGuardarCambiosPresupuestoVentasLineas.addActionListener (new ButtonActionListener(this,"NuevoGuardarCambiosPresupuestoVentasLineas"));
		
		
		this.jButtonNuevoGuardarCambiosToolBarPresupuestoVentasLineas.addActionListener (new ButtonActionListener(this,"NuevoGuardarCambiosToolBarPresupuestoVentasLineas"));
			
		this.jMenuItemNuevoGuardarCambiosPresupuestoVentasLineas.addActionListener (new ButtonActionListener(this,"MenuItemNuevoGuardarCambiosPresupuestoVentasLineas"));		
		
		
		
		//SELECCIONAR TODOS
		
		this.jCheckBoxSeleccionarTodosPresupuestoVentasLineas.addItemListener(new CheckBoxItemListener(this,"SeleccionarTodosPresupuestoVentasLineas"));

		this.jCheckBoxSeleccionadosPresupuestoVentasLineas.addItemListener(new CheckBoxItemListener(this,"SeleccionadosPresupuestoVentasLineas"));
		
		if(this.jInternalFrameDetalleFormPresupuestoVentasLineas!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxTiposAccionesFormularioPresupuestoVentasLineas.addActionListener (new ButtonActionListener(this,"TiposAccionesFormularioPresupuestoVentasLineas"));
		}
		
		
		this.jComboBoxTiposRelacionesPresupuestoVentasLineas.addActionListener (new ButtonActionListener(this,"TiposRelacionesPresupuestoVentasLineas"));
			
		this.jComboBoxTiposAccionesPresupuestoVentasLineas.addActionListener (new ButtonActionListener(this,"TiposAccionesPresupuestoVentasLineas"));
					
		this.jComboBoxTiposSeleccionarPresupuestoVentasLineas.addActionListener (new ButtonActionListener(this,"TiposSeleccionarPresupuestoVentasLineas"));
			
		this.jTextFieldValorCampoGeneralPresupuestoVentasLineas.addActionListener (new ButtonActionListener(this,"ValorCampoGeneralPresupuestoVentasLineas"));		
		
		
		if(this.jInternalFrameDetalleFormPresupuestoVentasLineas!=null) { //if(this.conCargarFormDetalle) {
		
		
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jButtonidPresupuestoVentasLineasBusqueda.addActionListener(new ButtonActionListener(this,"idPresupuestoVentasLineasBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jButtonid_empresaPresupuestoVentasLineasUpdate.addActionListener(new ButtonActionListener(this,"id_empresaPresupuestoVentasLineasUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jButtonid_empresaPresupuestoVentasLineasBusqueda.addActionListener(new ButtonActionListener(this,"id_empresaPresupuestoVentasLineasBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jButtonid_sucursalPresupuestoVentasLineasUpdate.addActionListener(new ButtonActionListener(this,"id_sucursalPresupuestoVentasLineasUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jButtonid_sucursalPresupuestoVentasLineasBusqueda.addActionListener(new ButtonActionListener(this,"id_sucursalPresupuestoVentasLineasBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jButtonid_ejercicioPresupuestoVentasLineasUpdate.addActionListener(new ButtonActionListener(this,"id_ejercicioPresupuestoVentasLineasUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jButtonid_ejercicioPresupuestoVentasLineasBusqueda.addActionListener(new ButtonActionListener(this,"id_ejercicioPresupuestoVentasLineasBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jButtonid_periodoPresupuestoVentasLineasUpdate.addActionListener(new ButtonActionListener(this,"id_periodoPresupuestoVentasLineasUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jButtonid_periodoPresupuestoVentasLineasBusqueda.addActionListener(new ButtonActionListener(this,"id_periodoPresupuestoVentasLineasBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jButtonid_vendedorPresupuestoVentasLineasUpdate.addActionListener(new ButtonActionListener(this,"id_vendedorPresupuestoVentasLineasUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jButtonid_vendedorPresupuestoVentasLineasBusqueda.addActionListener(new ButtonActionListener(this,"id_vendedorPresupuestoVentasLineasBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jButtonid_paisPresupuestoVentasLineasUpdate.addActionListener(new ButtonActionListener(this,"id_paisPresupuestoVentasLineasUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jButtonid_paisPresupuestoVentasLineasBusqueda.addActionListener(new ButtonActionListener(this,"id_paisPresupuestoVentasLineasBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jButtonid_ciudadPresupuestoVentasLineasUpdate.addActionListener(new ButtonActionListener(this,"id_ciudadPresupuestoVentasLineasUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jButtonid_ciudadPresupuestoVentasLineasBusqueda.addActionListener(new ButtonActionListener(this,"id_ciudadPresupuestoVentasLineasBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jButtonid_zonaPresupuestoVentasLineasUpdate.addActionListener(new ButtonActionListener(this,"id_zonaPresupuestoVentasLineasUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jButtonid_zonaPresupuestoVentasLineasBusqueda.addActionListener(new ButtonActionListener(this,"id_zonaPresupuestoVentasLineasBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jButtonid_lineaPresupuestoVentasLineasUpdate.addActionListener(new ButtonActionListener(this,"id_lineaPresupuestoVentasLineasUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jButtonid_lineaPresupuestoVentasLineasBusqueda.addActionListener(new ButtonActionListener(this,"id_lineaPresupuestoVentasLineasBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jButtonid_linea_grupoPresupuestoVentasLineasUpdate.addActionListener(new ButtonActionListener(this,"id_linea_grupoPresupuestoVentasLineasUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jButtonid_linea_grupoPresupuestoVentasLineasBusqueda.addActionListener(new ButtonActionListener(this,"id_linea_grupoPresupuestoVentasLineasBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jButtonid_linea_categoriaPresupuestoVentasLineasUpdate.addActionListener(new ButtonActionListener(this,"id_linea_categoriaPresupuestoVentasLineasUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jButtonid_linea_categoriaPresupuestoVentasLineasBusqueda.addActionListener(new ButtonActionListener(this,"id_linea_categoriaPresupuestoVentasLineasBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jButtonid_linea_marcaPresupuestoVentasLineasUpdate.addActionListener(new ButtonActionListener(this,"id_linea_marcaPresupuestoVentasLineasUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jButtonid_linea_marcaPresupuestoVentasLineasBusqueda.addActionListener(new ButtonActionListener(this,"id_linea_marcaPresupuestoVentasLineasBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jButtonprecioPresupuestoVentasLineasBusqueda.addActionListener(new ButtonActionListener(this,"precioPresupuestoVentasLineasBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jButtoncantidadPresupuestoVentasLineasBusqueda.addActionListener(new ButtonActionListener(this,"cantidadPresupuestoVentasLineasBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jButtonvalorPresupuestoVentasLineasBusqueda.addActionListener(new ButtonActionListener(this,"valorPresupuestoVentasLineasBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jButtonporcentajePresupuestoVentasLineasBusqueda.addActionListener(new ButtonActionListener(this,"porcentajePresupuestoVentasLineasBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jButtoncantidad_totalPresupuestoVentasLineasBusqueda.addActionListener(new ButtonActionListener(this,"cantidad_totalPresupuestoVentasLineasBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jButtonvalor_totalPresupuestoVentasLineasBusqueda.addActionListener(new ButtonActionListener(this,"valor_totalPresupuestoVentasLineasBusqueda"));
		}
		
		if(!this.conCargarMinimo) {
		//BYDAN_BUSQUEDAS
		
		
			this.jButtonFK_IdCiudadPresupuestoVentasLineas.addActionListener(new ButtonActionListener(this,"FK_IdCiudadPresupuestoVentasLineas"));

			this.jButtonFK_IdLineaPresupuestoVentasLineas.addActionListener(new ButtonActionListener(this,"FK_IdLineaPresupuestoVentasLineas"));

			this.jButtonFK_IdLineaCategoriaPresupuestoVentasLineas.addActionListener(new ButtonActionListener(this,"FK_IdLineaCategoriaPresupuestoVentasLineas"));

			this.jButtonFK_IdLineaGrupoPresupuestoVentasLineas.addActionListener(new ButtonActionListener(this,"FK_IdLineaGrupoPresupuestoVentasLineas"));

			this.jButtonFK_IdLineaMarcaPresupuestoVentasLineas.addActionListener(new ButtonActionListener(this,"FK_IdLineaMarcaPresupuestoVentasLineas"));

			this.jButtonFK_IdPaisPresupuestoVentasLineas.addActionListener(new ButtonActionListener(this,"FK_IdPaisPresupuestoVentasLineas"));

			this.jButtonFK_IdVendedorPresupuestoVentasLineas.addActionListener(new ButtonActionListener(this,"FK_IdVendedorPresupuestoVentasLineas"));

			this.jButtonFK_IdZonaPresupuestoVentasLineas.addActionListener(new ButtonActionListener(this,"FK_IdZonaPresupuestoVentasLineas"));
		
		
		
			//REPORTE DINAMICO
			
			if(this.jInternalFrameReporteDinamicoPresupuestoVentasLineas!=null) {
				this.jInternalFrameReporteDinamicoPresupuestoVentasLineas.getjButtonCerrarReporteDinamico().addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoPresupuestoVentasLineas"));
				this.jInternalFrameReporteDinamicoPresupuestoVentasLineas.getjButtonGenerarReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoPresupuestoVentasLineas"));
				this.jInternalFrameReporteDinamicoPresupuestoVentasLineas.getjButtonGenerarExcelReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoPresupuestoVentasLineas"));
			}
			
			//this.jButtonCerrarReporteDinamicoPresupuestoVentasLineas.addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoPresupuestoVentasLineas"));				
			//this.jButtonGenerarReporteDinamicoPresupuestoVentasLineas.addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoPresupuestoVentasLineas"));
			//this.jButtonGenerarExcelReporteDinamicoPresupuestoVentasLineas.addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoPresupuestoVentasLineas"));
				
				
			//IMPORTACION			
			if(this.jInternalFrameImportacionPresupuestoVentasLineas!=null) {
				this.jInternalFrameImportacionPresupuestoVentasLineas.getjButtonCerrarImportacion().addActionListener (new ButtonActionListener(this,"CerrarImportacionPresupuestoVentasLineas"));
				this.jInternalFrameImportacionPresupuestoVentasLineas.getjButtonGenerarImportacion().addActionListener (new ButtonActionListener(this,"GenerarImportacionPresupuestoVentasLineas"));
				this.jInternalFrameImportacionPresupuestoVentasLineas.getjButtonAbrirImportacion().addActionListener (new ButtonActionListener(this,"AbrirImportacionPresupuestoVentasLineas"));
			}
			
			//ORDER BY
			this.jButtonAbrirOrderByPresupuestoVentasLineas.addActionListener (new ButtonActionListener(this,"AbrirOrderByPresupuestoVentasLineas"));
			
			this.jButtonAbrirOrderByToolBarPresupuestoVentasLineas.addActionListener (new ButtonActionListener(this,"AbrirOrderByToolBarPresupuestoVentasLineas"));			
			
			if(this.jInternalFrameOrderByPresupuestoVentasLineas!=null) {
				this.jInternalFrameOrderByPresupuestoVentasLineas.getjButtonCerrarOrderBy().addActionListener (new ButtonActionListener(this,"CerrarOrderByPresupuestoVentasLineas"));				
			}
			
			
		}
		
		
		
		if(!this.conCargarMinimo) {
			if(this.jInternalFrameDetalleFormPresupuestoVentasLineas!=null) { //if(this.conCargarFormDetalle) {
			;
			}
		}
		
		
		//TABBED PANE RELACIONES
		if(this.jInternalFrameDetalleFormPresupuestoVentasLineas!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormPresupuestoVentasLineas.jTabbedPaneRelacionesPresupuestoVentasLineas.addChangeListener(new TabbedPaneChangeListener(this,"RelacionesPresupuestoVentasLineas"));
		
		;
		}
		//TABBED PANE RELACIONES FIN(EXTRA TAB)		
	}
	
	/*
	public void initActions() {
		String sMapKey = "";
		InputMap inputMap =null;
		
		this.addInternalFrameListener(new javax.swing.event.InternalFrameAdapter() {
            public void internalFrameClosing(InternalFrameEvent event) {          	
            	try {
            		closingInternalFramePresupuestoVentasLineas();
				} catch (Exception e) {
					e.printStackTrace();
				}
            }
        });
		
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.addInternalFrameListener(new javax.swing.event.InternalFrameAdapter() {
	        public void internalFrameClosing(InternalFrameEvent event) {
	            JInternalFrameBase jInternalFrameDetalleFormPresupuestoVentasLineas = (JInternalFrameBase)event.getSource();
	            	
	            PresupuestoVentasLineasBeanSwingJInternalFrame jInternalFrameParent=(PresupuestoVentasLineasBeanSwingJInternalFrame)jInternalFrameDetalleFormPresupuestoVentasLineas.getjInternalFrameParent();
	                
	            try {
					jInternalFrameParent.jButtonCancelarPresupuestoVentasLineasActionPerformed(null);
					
					//jInternalFrameParent.dispose();
					//jInternalFrameParent=null;
					
				} catch (Exception e) {
					e.printStackTrace();
				}
	        }
	    });
			
		this.jTableDatosPresupuestoVentasLineas.getSelectionModel().addListSelectionListener (
	                new ListSelectionListener() {
	                    public void valueChanged(ListSelectionEvent e) {
							//BYDAN_DESHABILITADO
	                    	//try {jTableDatosPresupuestoVentasLineasListSelectionListener(e);}catch(Exception e1){e1.printStackTrace();}
	                    }
	                }
	     );
		
		this.jTableDatosPresupuestoVentasLineas.addMouseListener(new MouseAdapter() {
			   public void mouseClicked(MouseEvent evt) {
				      if (evt.getClickCount() == 2) {
				    	  jButtonIdActionPerformed(null,jTableDatosPresupuestoVentasLineas.getSelectedRow(),false,false);
				      }
				   }
		});
		
		this.jButtonNuevoPresupuestoVentasLineas.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoPresupuestoVentasLineasActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoToolBarPresupuestoVentasLineas.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoPresupuestoVentasLineasActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoPresupuestoVentasLineas.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoPresupuestoVentasLineasActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "NuevoPresupuestoVentasLineas";
		inputMap = this.jButtonNuevoPresupuestoVentasLineas.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_N , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonNuevoPresupuestoVentasLineas.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonNuevoPresupuestoVentasLineasActionPerformed(evt,false);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonNuevoRelacionesPresupuestoVentasLineas.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoPresupuestoVentasLineasActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoRelacionesToolBarPresupuestoVentasLineas.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoPresupuestoVentasLineasActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoRelacionesPresupuestoVentasLineas.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoPresupuestoVentasLineasActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "NuevoRelacionesPresupuestoVentasLineas";
		inputMap = this.jButtonNuevoRelacionesPresupuestoVentasLineas.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_R , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonNuevoRelacionesPresupuestoVentasLineas.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonNuevoPresupuestoVentasLineasActionPerformed(evt,true);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonModificarPresupuestoVentasLineas.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarPresupuestoVentasLineasActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonModificarToolBarPresupuestoVentasLineas.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarPresupuestoVentasLineasActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemModificarPresupuestoVentasLineas.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarPresupuestoVentasLineasActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "ModificarPresupuestoVentasLineas";
		inputMap = this.jButtonModificarPresupuestoVentasLineas.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_M , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonModificarPresupuestoVentasLineas.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonModificarPresupuestoVentasLineasActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonActualizarPresupuestoVentasLineas.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarPresupuestoVentasLineasActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonActualizarToolBarPresupuestoVentasLineas.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarPresupuestoVentasLineasActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemActualizarPresupuestoVentasLineas.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarPresupuestoVentasLineasActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "ActualizarPresupuestoVentasLineas";
		inputMap = this.jButtonActualizarPresupuestoVentasLineas.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_G , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonActualizarPresupuestoVentasLineas.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonActualizarPresupuestoVentasLineasActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonEliminarPresupuestoVentasLineas.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarPresupuestoVentasLineasActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonEliminarToolBarPresupuestoVentasLineas.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarPresupuestoVentasLineasActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
				
		this.jMenuItemEliminarPresupuestoVentasLineas.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarPresupuestoVentasLineasActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "EliminarPresupuestoVentasLineas";
		inputMap = this.jButtonEliminarPresupuestoVentasLineas.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_E , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonEliminarPresupuestoVentasLineas.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonEliminarPresupuestoVentasLineasActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonCancelarPresupuestoVentasLineas.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarPresupuestoVentasLineasActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonCancelarToolBarPresupuestoVentasLineas.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarPresupuestoVentasLineasActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemCancelarPresupuestoVentasLineas.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarPresupuestoVentasLineasActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "CancelarPresupuestoVentasLineas";
		inputMap = this.jButtonCancelarPresupuestoVentasLineas.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_Q , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonCancelarPresupuestoVentasLineas.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonCancelarPresupuestoVentasLineasActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonCerrarPresupuestoVentasLineas.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarPresupuestoVentasLineasActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonCerrarToolBarPresupuestoVentasLineas.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarPresupuestoVentasLineasActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemCerrarPresupuestoVentasLineas.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarPresupuestoVentasLineasActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemDetalleCerrarPresupuestoVentasLineas.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  //try {jButtonCerrarPresupuestoVentasLineasActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
					try {jButtonCancelarPresupuestoVentasLineasActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "CerrarPresupuestoVentasLineas";
		inputMap = this.jButtonCerrarPresupuestoVentasLineas.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_C , KeyEvent.ALT_MASK), sMapKey);
			
		this.jButtonCerrarPresupuestoVentasLineas.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonCerrarPresupuestoVentasLineasActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jButtonGuardarCambiosPresupuestoVentasLineas.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosPresupuestoVentasLineasActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosToolBarPresupuestoVentasLineas.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosPresupuestoVentasLineasActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemGuardarCambiosPresupuestoVentasLineas.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosPresupuestoVentasLineasActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosTablaPresupuestoVentasLineas.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosPresupuestoVentasLineasActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosTablaToolBarPresupuestoVentasLineas.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosPresupuestoVentasLineasActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemGuardarCambiosTablaPresupuestoVentasLineas.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosPresupuestoVentasLineasActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "GuardarCambiosPresupuestoVentasLineas";
		inputMap = this.jInternalFrameDetalleFormPresupuestoVentasLineas.jButtonGuardarCambiosPresupuestoVentasLineas.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_G , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jButtonGuardarCambiosPresupuestoVentasLineas.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonGuardarCambiosPresupuestoVentasLineasActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonRecargarInformacionPresupuestoVentasLineas.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionPresupuestoVentasLineasActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonRecargarInformacionToolBarPresupuestoVentasLineas.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionPresupuestoVentasLineasActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemRecargarInformacionPresupuestoVentasLineas.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionPresupuestoVentasLineasActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		
		this.jButtonAnterioresPresupuestoVentasLineas.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresPresupuestoVentasLineasActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonAnterioresToolBarPresupuestoVentasLineas.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresPresupuestoVentasLineasActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemAnterioresPresupuestoVentasLineas.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresPresupuestoVentasLineasActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonSiguientesPresupuestoVentasLineas.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesPresupuestoVentasLineasActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonSiguientesToolBarPresupuestoVentasLineas.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesPresupuestoVentasLineasActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemSiguientesPresupuestoVentasLineas.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesPresupuestoVentasLineasActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoGuardarCambiosPresupuestoVentasLineas.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosPresupuestoVentasLineasActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoGuardarCambiosToolBarPresupuestoVentasLineas.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosPresupuestoVentasLineasActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoGuardarCambiosPresupuestoVentasLineas.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosPresupuestoVentasLineasActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		
		//SELECCIONAR TODOS
		this.jCheckBoxSeleccionarTodosPresupuestoVentasLineas.addItemListener(new ItemListener() {		
			public void itemStateChanged(ItemEvent evt) {
				try {jCheckBoxSeleccionarTodosPresupuestoVentasLineasItemListener(evt);}catch(Exception e){e.printStackTrace();}
			}
		});

		this.jComboBoxTiposAccionesPresupuestoVentasLineas.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jComboBoxTiposAccionesPresupuestoVentasLineasActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		this.jComboBoxTiposSeleccionarPresupuestoVentasLineas.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jComboBoxTiposSeleccionarPresupuestoVentasLineasActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		this.jTextFieldValorCampoGeneralPresupuestoVentasLineas.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jTextFieldValorCampoGeneralPresupuestoVentasLineasActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jButtonidPresupuestoVentasLineasBusqueda.addActionListener(new ButtonActionListener(this,"idPresupuestoVentasLineasBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jButtonid_empresaPresupuestoVentasLineasUpdate.addActionListener(new ButtonActionListener(this,"id_empresaPresupuestoVentasLineasUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jButtonid_empresaPresupuestoVentasLineasBusqueda.addActionListener(new ButtonActionListener(this,"id_empresaPresupuestoVentasLineasBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jButtonid_sucursalPresupuestoVentasLineasUpdate.addActionListener(new ButtonActionListener(this,"id_sucursalPresupuestoVentasLineasUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jButtonid_sucursalPresupuestoVentasLineasBusqueda.addActionListener(new ButtonActionListener(this,"id_sucursalPresupuestoVentasLineasBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jButtonid_ejercicioPresupuestoVentasLineasUpdate.addActionListener(new ButtonActionListener(this,"id_ejercicioPresupuestoVentasLineasUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jButtonid_ejercicioPresupuestoVentasLineasBusqueda.addActionListener(new ButtonActionListener(this,"id_ejercicioPresupuestoVentasLineasBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jButtonid_periodoPresupuestoVentasLineasUpdate.addActionListener(new ButtonActionListener(this,"id_periodoPresupuestoVentasLineasUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jButtonid_periodoPresupuestoVentasLineasBusqueda.addActionListener(new ButtonActionListener(this,"id_periodoPresupuestoVentasLineasBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jButtonid_vendedorPresupuestoVentasLineasUpdate.addActionListener(new ButtonActionListener(this,"id_vendedorPresupuestoVentasLineasUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jButtonid_vendedorPresupuestoVentasLineasBusqueda.addActionListener(new ButtonActionListener(this,"id_vendedorPresupuestoVentasLineasBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jButtonid_paisPresupuestoVentasLineasUpdate.addActionListener(new ButtonActionListener(this,"id_paisPresupuestoVentasLineasUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jButtonid_paisPresupuestoVentasLineasBusqueda.addActionListener(new ButtonActionListener(this,"id_paisPresupuestoVentasLineasBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jButtonid_ciudadPresupuestoVentasLineasUpdate.addActionListener(new ButtonActionListener(this,"id_ciudadPresupuestoVentasLineasUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jButtonid_ciudadPresupuestoVentasLineasBusqueda.addActionListener(new ButtonActionListener(this,"id_ciudadPresupuestoVentasLineasBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jButtonid_zonaPresupuestoVentasLineasUpdate.addActionListener(new ButtonActionListener(this,"id_zonaPresupuestoVentasLineasUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jButtonid_zonaPresupuestoVentasLineasBusqueda.addActionListener(new ButtonActionListener(this,"id_zonaPresupuestoVentasLineasBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jButtonid_lineaPresupuestoVentasLineasUpdate.addActionListener(new ButtonActionListener(this,"id_lineaPresupuestoVentasLineasUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jButtonid_lineaPresupuestoVentasLineasBusqueda.addActionListener(new ButtonActionListener(this,"id_lineaPresupuestoVentasLineasBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jButtonid_linea_grupoPresupuestoVentasLineasUpdate.addActionListener(new ButtonActionListener(this,"id_linea_grupoPresupuestoVentasLineasUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jButtonid_linea_grupoPresupuestoVentasLineasBusqueda.addActionListener(new ButtonActionListener(this,"id_linea_grupoPresupuestoVentasLineasBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jButtonid_linea_categoriaPresupuestoVentasLineasUpdate.addActionListener(new ButtonActionListener(this,"id_linea_categoriaPresupuestoVentasLineasUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jButtonid_linea_categoriaPresupuestoVentasLineasBusqueda.addActionListener(new ButtonActionListener(this,"id_linea_categoriaPresupuestoVentasLineasBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jButtonid_linea_marcaPresupuestoVentasLineasUpdate.addActionListener(new ButtonActionListener(this,"id_linea_marcaPresupuestoVentasLineasUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jButtonid_linea_marcaPresupuestoVentasLineasBusqueda.addActionListener(new ButtonActionListener(this,"id_linea_marcaPresupuestoVentasLineasBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jButtonprecioPresupuestoVentasLineasBusqueda.addActionListener(new ButtonActionListener(this,"precioPresupuestoVentasLineasBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jButtoncantidadPresupuestoVentasLineasBusqueda.addActionListener(new ButtonActionListener(this,"cantidadPresupuestoVentasLineasBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jButtonvalorPresupuestoVentasLineasBusqueda.addActionListener(new ButtonActionListener(this,"valorPresupuestoVentasLineasBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jButtonporcentajePresupuestoVentasLineasBusqueda.addActionListener(new ButtonActionListener(this,"porcentajePresupuestoVentasLineasBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jButtoncantidad_totalPresupuestoVentasLineasBusqueda.addActionListener(new ButtonActionListener(this,"cantidad_totalPresupuestoVentasLineasBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jButtonvalor_totalPresupuestoVentasLineasBusqueda.addActionListener(new ButtonActionListener(this,"valor_totalPresupuestoVentasLineasBusqueda"));
		
		
		this.jButtonFK_IdCiudadPresupuestoVentasLineas.addActionListener(new ButtonActionListener(this,"FK_IdCiudadPresupuestoVentasLineas"));

		this.jButtonFK_IdLineaPresupuestoVentasLineas.addActionListener(new ButtonActionListener(this,"FK_IdLineaPresupuestoVentasLineas"));

		this.jButtonFK_IdLineaCategoriaPresupuestoVentasLineas.addActionListener(new ButtonActionListener(this,"FK_IdLineaCategoriaPresupuestoVentasLineas"));

		this.jButtonFK_IdLineaGrupoPresupuestoVentasLineas.addActionListener(new ButtonActionListener(this,"FK_IdLineaGrupoPresupuestoVentasLineas"));

		this.jButtonFK_IdLineaMarcaPresupuestoVentasLineas.addActionListener(new ButtonActionListener(this,"FK_IdLineaMarcaPresupuestoVentasLineas"));

		this.jButtonFK_IdPaisPresupuestoVentasLineas.addActionListener(new ButtonActionListener(this,"FK_IdPaisPresupuestoVentasLineas"));

		this.jButtonFK_IdVendedorPresupuestoVentasLineas.addActionListener(new ButtonActionListener(this,"FK_IdVendedorPresupuestoVentasLineas"));

		this.jButtonFK_IdZonaPresupuestoVentasLineas.addActionListener(new ButtonActionListener(this,"FK_IdZonaPresupuestoVentasLineas"));

		
		//REPORTE DINAMICO
		this.jButtonCerrarReporteDinamicoPresupuestoVentasLineas.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarReporteDinamicoPresupuestoVentasLineasActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarReporteDinamicoPresupuestoVentasLineas.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarReporteDinamicoPresupuestoVentasLineasActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarExcelReporteDinamicoPresupuestoVentasLineas.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarExcelReporteDinamicoPresupuestoVentasLineasActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		//IMPORTACION
		this.jButtonCerrarImportacionPresupuestoVentasLineas.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarImportacionPresupuestoVentasLineasActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarImportacionPresupuestoVentasLineas.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarImportacionPresupuestoVentasLineasActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonAbrirImportacionPresupuestoVentasLineas.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAbrirImportacionPresupuestoVentasLineasActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
	}
	*/
	
	
	public void jComboBoxTiposSeleccionarPresupuestoVentasLineasActionListener(ActionEvent evt) throws Exception {    		
		try {			
			Reporte reporte=(Reporte)this.jComboBoxTiposSeleccionarPresupuestoVentasLineas.getSelectedItem();
			
			//if(reporte.getsCodigo().equals("SELECCIONAR")) {
			//}					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PresupuestoVentasLineasConstantesFunciones.CLASSNAME);
		}
	}	
	
	
	
	public void seleccionarTodosPresupuestoVentasLineas(Boolean conSeleccionarTodos) throws Exception {    		
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {				
				for(PresupuestoVentasLineas presupuestoventaslineasAux:this.presupuestoventaslineasLogic.getPresupuestoVentasLineass()) {
					presupuestoventaslineasAux.setIsSelected(conSeleccionarTodos);
				}			
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(PresupuestoVentasLineas presupuestoventaslineasAux:presupuestoventaslineass) {
					presupuestoventaslineasAux.setIsSelected(conSeleccionarTodos);
				}
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PresupuestoVentasLineasConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionarTodosPresupuestoVentasLineasItemListener(ItemEvent evt) throws Exception {    		
		try {			
			this.inicializarActualizarBindingPresupuestoVentasLineas(false,false);
			
			//JCheckBox jCheckBox=(JCheckBox)evt.getSource();			
			//System.out.println("ok");		
			
			Boolean existe=false;
			
			if(sTipoSeleccionar.equals("COLUMNAS")) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					for(PresupuestoVentasLineas presupuestoventaslineasAux:this.presupuestoventaslineasLogic.getPresupuestoVentasLineass()) {
						presupuestoventaslineasAux.setIsSelected(this.isSeleccionarTodos);
					}			
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(PresupuestoVentasLineas presupuestoventaslineasAux:presupuestoventaslineass) {
						presupuestoventaslineasAux.setIsSelected(this.isSeleccionarTodos);
					}
				}
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					for(PresupuestoVentasLineas presupuestoventaslineasAux:this.presupuestoventaslineasLogic.getPresupuestoVentasLineass()) {
					
					}	
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(PresupuestoVentasLineas presupuestoventaslineasAux:presupuestoventaslineass) {
						
					}
				}
			}
					
			if(existe) {
				this.inicializarActualizarBindingTablaPresupuestoVentasLineas(false);
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}	
			
			//TableCellRenderer tableCellRenderer=null;			
			
			//TableCellEditor tableCellEditor=null;						
						
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			/*
			for(int i = 0; i < this.jTableDatosPresupuestoVentasLineas.getRowCount(); i++) {				
				tableCellRenderer=this.jTableDatosSistema.getCellRenderer(i, 2);
				tableCellEditor=this.jTableDatosSistema.getCellEditor(i, 2);
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellRenderer;				
				idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellEditor;
				
				if(idSeleccionarTableCell.jCheckBoxId!=null) {
					idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				}
				
				//System.out.println(idSeleccionarTableCell.valor);
				
				//this.jTableDatosPresupuestoVentasLineas.getModel().setValueAt(jCheckBox.isSelected(), i, Funciones2.getColumnIndexByName(this.jTableDatosPresupuestoVentasLineas,Constantes2.S_SELECCIONAR));
		    } 
			*/
					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PresupuestoVentasLineasConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionadosPresupuestoVentasLineasItemListener(ItemEvent evt) throws Exception {    		
		try {			
			this.inicializarActualizarBindingPresupuestoVentasLineas(false,false);
			
			//JCheckBox jCheckBox=(JCheckBox)evt.getSource();			
			//System.out.println("ok");		
			
			Boolean existe=false;
			int[] arrNumRowsSeleccionados=null;
			
			arrNumRowsSeleccionados=this.jTableDatosPresupuestoVentasLineas.getSelectedRows();
			
			PresupuestoVentasLineas presupuestoventaslineasLocal=new PresupuestoVentasLineas();
			
			//this.seleccionarTodosPresupuestoVentasLineas(false);
			
			for(Integer iNumRowSeleccionado:arrNumRowsSeleccionados) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {
					presupuestoventaslineasLocal =(PresupuestoVentasLineas) this.presupuestoventaslineasLogic.getPresupuestoVentasLineass().toArray()[this.jTableDatosPresupuestoVentasLineas.convertRowIndexToModel(iNumRowSeleccionado)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					presupuestoventaslineasLocal =(PresupuestoVentasLineas) this.presupuestoventaslineass.toArray()[this.jTableDatosPresupuestoVentasLineas.convertRowIndexToModel(iNumRowSeleccionado)];
				}
				
				presupuestoventaslineasLocal.setIsSelected(this.isSeleccionados);
			}
			
			/*
			if(sTipoSeleccionar.equals("SELECCIONAR")) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					for(PresupuestoVentasLineas presupuestoventaslineasAux:this.presupuestoventaslineasLogic.getPresupuestoVentasLineass()) {
						presupuestoventaslineasAux.setIsSelected(this.isSeleccionados);
					}			
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(PresupuestoVentasLineas presupuestoventaslineasAux:presupuestoventaslineass) {
						presupuestoventaslineasAux.setIsSelected(this.isSeleccionados);
					}
				}
			}
			*/
			
			//if(existe) {
				this.inicializarActualizarBindingTablaPresupuestoVentasLineas(false);
			/*
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}	
			*/
			
			
			//TableCellRenderer tableCellRenderer=null;			
			
			//TableCellEditor tableCellEditor=null;						
						
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			/*
			for(int i = 0; i < this.jTableDatosPresupuestoVentasLineas.getRowCount(); i++) {				
				tableCellRenderer=this.jTableDatosSistema.getCellRenderer(i, 2);
				tableCellEditor=this.jTableDatosSistema.getCellEditor(i, 2);
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellRenderer;				
				idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellEditor;
				
				if(idSeleccionarTableCell.jCheckBoxId!=null) {
					idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				}
				
				//System.out.println(idSeleccionarTableCell.valor);
				
				//this.jTableDatosPresupuestoVentasLineas.getModel().setValueAt(jCheckBox.isSelected(), i, Funciones2.getColumnIndexByName(this.jTableDatosPresupuestoVentasLineas,Constantes2.S_SELECCIONAR));
		    } 
			*/
					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PresupuestoVentasLineasConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionarActualPresupuestoVentasLineasItemListener(ItemEvent evt,Long idActual) throws Exception {    		
		try {
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PresupuestoVentasLineasConstantesFunciones.CLASSNAME);
		}
	}
	
	public void ejecutarAuxiliarPresupuestoVentasLineasParaAjaxPostBack() throws Exception {    		
		try {
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PresupuestoVentasLineasConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jTextFieldValorCampoGeneralPresupuestoVentasLineasActionListener(ActionEvent evt) throws Exception {    		
		try {
			this.inicializarActualizarBindingPresupuestoVentasLineas(false,false);
			
			//System.out.println(this.jTextFieldValorCampoGeneralPresupuestoVentasLineas.getText());		
			
			Boolean existe=false;
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				for(PresupuestoVentasLineas presupuestoventaslineasAux:this.presupuestoventaslineasLogic.getPresupuestoVentasLineass()) {
				
						if(sTipoSeleccionar.equals(PresupuestoVentasLineasConstantesFunciones.LABEL_PRECIO)) {
							existe=true;
							presupuestoventaslineasAux.setprecio(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(PresupuestoVentasLineasConstantesFunciones.LABEL_CANTIDAD)) {
							existe=true;
							presupuestoventaslineasAux.setcantidad(Integer.parseInt(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(PresupuestoVentasLineasConstantesFunciones.LABEL_VALOR)) {
							existe=true;
							presupuestoventaslineasAux.setvalor(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(PresupuestoVentasLineasConstantesFunciones.LABEL_PORCENTAJE)) {
							existe=true;
							presupuestoventaslineasAux.setporcentaje(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(PresupuestoVentasLineasConstantesFunciones.LABEL_CANTIDADTOTAL)) {
							existe=true;
							presupuestoventaslineasAux.setcantidad_total(Integer.parseInt(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(PresupuestoVentasLineasConstantesFunciones.LABEL_VALORTOTAL)) {
							existe=true;
							presupuestoventaslineasAux.setvalor_total(Double.parseDouble(this.sValorCampoGeneral));
						}
				}	
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(PresupuestoVentasLineas presupuestoventaslineasAux:presupuestoventaslineass) {
					
						if(sTipoSeleccionar.equals(PresupuestoVentasLineasConstantesFunciones.LABEL_PRECIO)) {
							existe=true;
							presupuestoventaslineasAux.setprecio(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(PresupuestoVentasLineasConstantesFunciones.LABEL_CANTIDAD)) {
							existe=true;
							presupuestoventaslineasAux.setcantidad(Integer.parseInt(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(PresupuestoVentasLineasConstantesFunciones.LABEL_VALOR)) {
							existe=true;
							presupuestoventaslineasAux.setvalor(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(PresupuestoVentasLineasConstantesFunciones.LABEL_PORCENTAJE)) {
							existe=true;
							presupuestoventaslineasAux.setporcentaje(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(PresupuestoVentasLineasConstantesFunciones.LABEL_CANTIDADTOTAL)) {
							existe=true;
							presupuestoventaslineasAux.setcantidad_total(Integer.parseInt(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(PresupuestoVentasLineasConstantesFunciones.LABEL_VALORTOTAL)) {
							existe=true;
							presupuestoventaslineasAux.setvalor_total(Double.parseDouble(this.sValorCampoGeneral));
						}
				}
			}
								
			if(existe) {
				this.inicializarActualizarBindingTablaPresupuestoVentasLineas(false);
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PresupuestoVentasLineasConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jComboBoxTiposAccionesPresupuestoVentasLineasActionListener(ActionEvent evt,Boolean esParaAccionDesdeFormulario) throws Exception {    				
		Boolean conSplash=true;
		
		try {							
		
			this.inicializarActualizarBindingPresupuestoVentasLineas(false,false);
			
			Reporte reporte=new Reporte();
			
			this.esParaAccionDesdeFormularioPresupuestoVentasLineas=esParaAccionDesdeFormulario;
			
			if(!esParaAccionDesdeFormulario) {
				
				reporte=(Reporte)this.jComboBoxTiposAccionesPresupuestoVentasLineas.getSelectedItem();
				
			} else {
				reporte=(Reporte)this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxTiposAccionesFormularioPresupuestoVentasLineas.getSelectedItem();
			}
			String sTipoAccionLocal=this.sTipoAccion;
			
			if(!esParaAccionDesdeFormulario) {
				sTipoAccionLocal=this.sTipoAccion;
			} else {
				sTipoAccionLocal=this.sTipoAccionFormulario;
			}
			
			if(sTipoAccionLocal.equals("GENERAR REPORTE")) {//reporte.getsCodigo().equals("GENERAR REPORTE")) {
				if(this.isPermisoReportePresupuestoVentasLineas) {				
					conSplash=true;//false;										
					
					//this.startProcessPresupuestoVentasLineas(conSplash);
				
					this.generarReportePresupuestoVentasLineassSeleccionados();
				} else {
					JOptionPane.showMessageDialog(this,"NO TIENE PERMISO PARA GENERAR REPORTES","REPORTE",JOptionPane.ERROR_MESSAGE);					
				}
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesPresupuestoVentasLineas.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxTiposAccionesFormularioPresupuestoVentasLineas.setSelectedIndex(0);					
				}
			} else if(sTipoAccionLocal.equals("GENERAR REPORTE DINAMICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.mostrarReporteDinamicoPresupuestoVentasLineassSeleccionados();
				//this.jComboBoxTiposAccionesPresupuestoVentasLineas.setSelectedIndex(0);					
			}  else if(sTipoAccionLocal.equals("GENERAR_REPORTE_GROUP_GENERICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.generarReporteGroupGenericoPresupuestoVentasLineassSeleccionados(false);
				//this.jComboBoxTiposAccionesPresupuestoVentasLineas.setSelectedIndex(0);					
			} else if(sTipoAccionLocal.equals("GENERAR_REPORTE_TOTALES_GROUP_GENERICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.generarReporteGroupGenericoPresupuestoVentasLineassSeleccionados(true);
				//this.jComboBoxTiposAccionesPresupuestoVentasLineas.setSelectedIndex(0);					
			} else if(sTipoAccionLocal.equals("EXPORTAR_DATOS")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//this.startProcessPresupuestoVentasLineas();
				
				this.exportarPresupuestoVentasLineassSeleccionados();
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesPresupuestoVentasLineas.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxTiposAccionesFormularioPresupuestoVentasLineas.setSelectedIndex(0);					
				}					
			} else if(sTipoAccionLocal.equals("IMPORTAR_DATOS")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				this.mostrarImportacionPresupuestoVentasLineass();
				//this.importarPresupuestoVentasLineass();
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesPresupuestoVentasLineas.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxTiposAccionesFormularioPresupuestoVentasLineas.setSelectedIndex(0);					
				}					
			} else if(sTipoAccionLocal.equals("EXPORTAR_DATOS_EXCEL")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//this.startProcessPresupuestoVentasLineas();
				//SE EXPORTA SEGUN TIPO ARCHIVO SELECCIONADO
				//this.exportarExcelPresupuestoVentasLineassSeleccionados();
				//this.jComboBoxTiposAccionesPresupuestoVentasLineas.setSelectedIndex(0);					
			}  else if(sTipoAccionLocal.equals("RECARGAR_FK")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {								
				if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE RECARGAR REFERENCIAS ?", "MANTENIMIENTO DE Presupuesto Ventas_lineas", JOptionPane.OK_CANCEL_OPTION) == 0) {
				
				//this.startProcessPresupuestoVentasLineas();
				
					if(!esParaAccionDesdeFormulario || (esParaAccionDesdeFormulario && this.isEsNuevoPresupuestoVentasLineas)) {
						this.esRecargarFks=true;
						this.cargarCombosForeignKeyPresupuestoVentasLineas(false,false,false);
						this.esRecargarFks=false;
						
						JOptionPane.showMessageDialog(this,"PROCESO EJECUTADO CORRECTAMENTE","MANTENIMIENTO DE Presupuesto Ventas_lineas",JOptionPane.INFORMATION_MESSAGE);
					} else {
						JOptionPane.showMessageDialog(this,"ESTE PROCESO SOLO FUNCIONA AL INGRESAR UN NUEVO ELEMENTO","MANTENIMIENTO",JOptionPane.ERROR_MESSAGE);	
					}
					
					
				}
				
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesPresupuestoVentasLineas.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxTiposAccionesFormularioPresupuestoVentasLineas.setSelectedIndex(0);					
				}	
			} 			
			else if(PresupuestoVentasLineasBeanSwingJInternalFrame.EsProcesoReporte(reporte.getsCodigo())){
				if(this.isPermisoReportePresupuestoVentasLineas) {				
					if(this.tieneElementosSeleccionados()) {
						this.quitarFilaTotales();
						
						conSplash=false;
						
						//this.startProcessPresupuestoVentasLineas(conSplash);
					
						//this.actualizarParametrosGeneralPresupuestoVentasLineas();
						
						this.generarReporteProcesoAccionPresupuestoVentasLineassSeleccionados(reporte.getsCodigo());
						
						if(!esParaAccionDesdeFormulario) {
							
							this.jComboBoxTiposAccionesPresupuestoVentasLineas.setSelectedIndex(0);					
							
						} else {
							this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxTiposAccionesFormularioPresupuestoVentasLineas.setSelectedIndex(0);					
						}
					} else {
						JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO TIENE PERMISO PARA GENERAR REPORTES","REPORTE",JOptionPane.ERROR_MESSAGE);					
				}
			} 
			else if(PresupuestoVentasLineasBeanSwingJInternalFrameAdditional.EsProcesoAccionNormal(reporte.getsCodigo())){
				if(this.tieneElementosSeleccionados()) {
					this.quitarFilaTotales();
					
					if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE PROCESAR "+reporte.getsDescripcion()+" EN PROCESO Presupuesto Ventas_lineasES SELECCIONADOS?", "MANTENIMIENTO DE Presupuesto Ventas_lineas", JOptionPane.OK_CANCEL_OPTION) == 0) {
						//this.startProcessPresupuestoVentasLineas();
				
						this.actualizarParametrosGeneralPresupuestoVentasLineas();
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {						
							this.presupuestoventaslineasReturnGeneral=presupuestoventaslineasLogic.procesarAccionPresupuestoVentasLineassWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,sTipoAccionLocal,this.presupuestoventaslineasLogic.getPresupuestoVentasLineass(),this.presupuestoventaslineasParameterGeneral);
						
						} else if(Constantes.ISUSAEJBREMOTE) {
						
						} else if(Constantes.ISUSAEJBHOME) {
						}
						//ARCHITECTURE
						
						this.procesarPresupuestoVentasLineasReturnGeneral();
					
					if(!esParaAccionDesdeFormulario) {
						
						this.jComboBoxTiposAccionesPresupuestoVentasLineas.setSelectedIndex(0);					
						
					} else {
						this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxTiposAccionesFormularioPresupuestoVentasLineas.setSelectedIndex(0);					
					}
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
				}				
			} 
			else {
				if(this.tieneElementosSeleccionados()) {
					this.quitarFilaTotales();
					
					this.actualizarParametrosGeneralPresupuestoVentasLineas();
					
					PresupuestoVentasLineasBeanSwingJInternalFrameAdditional.ProcesarAccion(reporte.getsCodigo(),reporte.getsDescripcion(),this);
					
					this.procesarPresupuestoVentasLineasReturnGeneral();
					
					if(!esParaAccionDesdeFormulario) {
						
						this.jComboBoxTiposAccionesPresupuestoVentasLineas.setSelectedIndex(0);					
						
					} else {
						this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxTiposAccionesFormularioPresupuestoVentasLineas.setSelectedIndex(0);					
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
				}
			}
		} catch(Exception e) {
			this.esRecargarFks=false;
			
			FuncionesSwing.manageException(this, e,logger,PresupuestoVentasLineasConstantesFunciones.CLASSNAME);
		
		}  finally {
      		//this.finishProcessPresupuestoVentasLineas(conSplash);
      	}
	}
	
	public void jComboBoxTiposRelacionesPresupuestoVentasLineasActionListener(ActionEvent evt) throws Exception {    				
		Boolean conSplash=true;
		
		try {			
			this.startProcessPresupuestoVentasLineas();
			
			if(this.jInternalFrameDetalleFormPresupuestoVentasLineas==null) { //if(!this.conCargarFormDetalle) {			
				this.inicializarFormDetalle();
			}
			
			ArrayList<PresupuestoVentasLineas> presupuestoventaslineassSeleccionados=new ArrayList<PresupuestoVentasLineas>();		
			PresupuestoVentasLineas presupuestoventaslineas=new PresupuestoVentasLineas();
			
			int rowIndex=-1;//CON ESTO SE DESHABILITA SELECCION POR INDICE
			
			this.inicializarActualizarBindingPresupuestoVentasLineas(false,false);
			
			Reporte reporte=new Reporte();
			
			
			reporte=(Reporte)this.jComboBoxTiposRelacionesPresupuestoVentasLineas.getSelectedItem();
			
			
			
			
			presupuestoventaslineassSeleccionados=this.getPresupuestoVentasLineassSeleccionados(true);
			//this.sTipoAccion;
			
			if(presupuestoventaslineassSeleccionados.size()==1) {
				for(PresupuestoVentasLineas presupuestoventaslineasAux:presupuestoventaslineassSeleccionados) {
					presupuestoventaslineas=presupuestoventaslineasAux;
				}
				
				if(this.sTipoAccion.equals("NONE")) {
				
				}
				
			} else {
				JOptionPane.showMessageDialog(this,"SELECCIONE SOLO UN REGISTRO","RELACIONES",JOptionPane.ERROR_MESSAGE);
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PresupuestoVentasLineasConstantesFunciones.CLASSNAME);
		
		}  finally {
			this.finishProcessPresupuestoVentasLineas();
			
      		//this.finishProcessPresupuestoVentasLineas(conSplash);
      	}
	}
			
	public static Boolean EsProcesoReporte(String sTipoProceso) throws Exception {
		Boolean esProcesoAccionRepoorte=false;

		if(sTipoProceso.contains("REPORTE_")) {
			 esProcesoAccionRepoorte=true;
		}

		return esProcesoAccionRepoorte;
	}
	
	public void procesarPresupuestoVentasLineasReturnGeneral() throws Exception {
		if(this.presupuestoventaslineasReturnGeneral.getConRetornoEstaProcesado()) {
			JOptionPane.showMessageDialog(this,this.presupuestoventaslineasReturnGeneral.getsMensajeProceso(),"PROCESO",JOptionPane.INFORMATION_MESSAGE);
		}
		
		if(this.presupuestoventaslineasReturnGeneral.getConMostrarMensaje()) {
			JOptionPane.showMessageDialog(this,this.presupuestoventaslineasReturnGeneral.getsMensajeProceso(),"PROCESO",FuncionesSwing.getColorSelectedBackground(this.presupuestoventaslineasReturnGeneral.getsTipoMensaje()));
		}
		
		if(this.presupuestoventaslineasReturnGeneral.getConRecargarInformacion()) {
			this.procesarBusqueda(this.sAccionBusqueda);
			
			this.inicializarActualizarBindingPresupuestoVentasLineas(false);
		}
		
		if(this.presupuestoventaslineasReturnGeneral.getConRetornoLista() || this.presupuestoventaslineasReturnGeneral.getConRetornoObjeto()) {
			if(this.presupuestoventaslineasReturnGeneral.getConRetornoLista()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.presupuestoventaslineasLogic.setPresupuestoVentasLineass(this.presupuestoventaslineasReturnGeneral.getPresupuestoVentasLineass());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
			
			if(this.presupuestoventaslineasReturnGeneral.getConRetornoObjeto()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.presupuestoventaslineasLogic.setPresupuestoVentasLineas(this.presupuestoventaslineasReturnGeneral.getPresupuestoVentasLineas());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
			
			this.inicializarActualizarBindingPresupuestoVentasLineas(false);
		}
	}
	
	public void actualizarParametrosGeneralPresupuestoVentasLineas() throws Exception {
		
		
	}
	
	public ArrayList<PresupuestoVentasLineas> getPresupuestoVentasLineassSeleccionados(Boolean conSeleccionarTodosAutomatico) throws Exception {
		ArrayList<PresupuestoVentasLineas> presupuestoventaslineassSeleccionados=new ArrayList<PresupuestoVentasLineas>();
		Boolean existe=false;
		
		if(!this.esParaAccionDesdeFormularioPresupuestoVentasLineas) {
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				
				for(PresupuestoVentasLineas presupuestoventaslineasAux:presupuestoventaslineasLogic.getPresupuestoVentasLineass()) {
					if(presupuestoventaslineasAux.getIsSelected()) {
						presupuestoventaslineassSeleccionados.add(presupuestoventaslineasAux);				
					}
				}
				
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(PresupuestoVentasLineas presupuestoventaslineasAux:this.presupuestoventaslineass) {
					if(presupuestoventaslineasAux.getIsSelected()) {
						presupuestoventaslineassSeleccionados.add(presupuestoventaslineasAux);				
					}
				}
			}
			
			if(presupuestoventaslineassSeleccionados.size()>0) {
				existe=true;
			}
			
			//SI NO ESTA NINGUNO SELECCIONADO SE SELECCIONA TODOS
			if(!existe) {
				if(conSeleccionarTodosAutomatico) {
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						presupuestoventaslineassSeleccionados.addAll(this.presupuestoventaslineasLogic.getPresupuestoVentasLineass());
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						presupuestoventaslineassSeleccionados.addAll(this.presupuestoventaslineass);				
					}
				}
			}
		} else {
			presupuestoventaslineassSeleccionados.add(this.presupuestoventaslineas);
		}
		
		return presupuestoventaslineassSeleccionados;
	}
	
	public void actualizarVariablesTipoReporte(Boolean esReporteNormal,Boolean esReporteDinamico,Boolean esReporteAccionProceso,String sPath) {
		if(esReporteNormal) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=false;
			this.sPathReporteDinamico="";
			this.esReporteAccionProceso=false;
			
		} else if(esReporteAccionProceso) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=false;
			this.sPathReporteDinamico="";
			this.esReporteAccionProceso=true;
			
		} else if(esReporteDinamico) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=true;
			this.esReporteAccionProceso=false;
			this.sPathReporteDinamico=sPath.replace(".jrxml",".jasper");			
		}
	}
	
	public void generarReportePresupuestoVentasLineassSeleccionados() throws Exception {
		Boolean existe=false;
		
		if(this.sTipoReporte.equals("NORMAL") || this.sTipoReporte.equals("FORMULARIO")) {
			existe=true;								
			this.generarReporteNormalPresupuestoVentasLineassSeleccionados();
			
		} else if(this.sTipoReporte.equals("DINAMICO")) {
			existe=true;
			this.mostrarReporteDinamicoPresupuestoVentasLineassSeleccionados();
			
		} else if(this.sTipoReporte.equals("GRUPO_GENERICO")) {
			existe=true;
			this.generarReporteGroupGenericoPresupuestoVentasLineassSeleccionados(false);
			
		} else if(this.sTipoReporte.equals("TOTALES_GRUPO_GENERICO")) {
			existe=true;
			this.generarReporteGroupGenericoPresupuestoVentasLineassSeleccionados(true);
		}
		
		if(!existe) {
			JOptionPane.showMessageDialog(this,"SELECCIONE UN TIPO DE REPORTE VALIDO","REPORTE DE Presupuesto Ventas_lineas",JOptionPane.ERROR_MESSAGE);
		}
	}
	
	public void generarReporteRelacionesPresupuestoVentasLineassSeleccionados() throws Exception {
		ArrayList<PresupuestoVentasLineas> presupuestoventaslineassSeleccionados=new ArrayList<PresupuestoVentasLineas>();		
		
		presupuestoventaslineassSeleccionados=this.getPresupuestoVentasLineassSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
					
		//this.sTipoReporteExtra="MasterRelaciones";
		
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		
		this.generarReportePresupuestoVentasLineass("Todos",presupuestoventaslineassSeleccionados);
		
	}	
	
	public void generarReporteNormalPresupuestoVentasLineassSeleccionados() throws Exception {
		ArrayList<PresupuestoVentasLineas> presupuestoventaslineassSeleccionados=new ArrayList<PresupuestoVentasLineas>();		
		
		presupuestoventaslineassSeleccionados=this.getPresupuestoVentasLineassSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
								
		if(this.sTipoReporte.equals("FORMULARIO")) {
			this.sTipoReporteExtra="Vertical";					
		}
		
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		this.generarReportePresupuestoVentasLineass("Todos",presupuestoventaslineassSeleccionados);
	}		
	
	public void generarReporteProcesoAccionPresupuestoVentasLineassSeleccionados(String sProcesoReporte) throws Exception {
		ArrayList<PresupuestoVentasLineas> presupuestoventaslineassSeleccionados=new ArrayList<PresupuestoVentasLineas>();
		
		presupuestoventaslineassSeleccionados=this.getPresupuestoVentasLineassSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(false,false,true,"");
		
		/*
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		this.sTipoReporteExtra=sProcesoReporte.toLowerCase();
		
		this.esReporteAccionProceso=true;
		this.generarReportePresupuestoVentasLineass("Todos",presupuestoventaslineassSeleccionados);
		this.esReporteAccionProceso=false;
	}
	
	
	public void mostrarReporteDinamicoPresupuestoVentasLineassSeleccionados() throws Exception {
		ArrayList<PresupuestoVentasLineas> presupuestoventaslineassSeleccionados=new ArrayList<PresupuestoVentasLineas>();		
		
		
		this.abrirInicializarFrameReporteDinamicoPresupuestoVentasLineas();
		
		
		presupuestoventaslineassSeleccionados=this.getPresupuestoVentasLineassSeleccionados(true);
		
		this.sTipoReporteExtra="";
		//this.actualizarVariablesTipoReporte(true,false,false,"");
		
		
		this.abrirFrameReporteDinamicoPresupuestoVentasLineas();
		
		
		//this.generarReportePresupuestoVentasLineass("Todos",presupuestoventaslineassSeleccionados ,presupuestoventaslineasImplementable,presupuestoventaslineasImplementableHome);
	}
	
	public void mostrarImportacionPresupuestoVentasLineass() throws Exception {
		//this.sTipoReporteExtra="";
		//this.actualizarVariablesTipoReporte(true,false,false,"");
		
		
		this.abrirInicializarFrameImportacionPresupuestoVentasLineas();
		
		this.abrirFrameImportacionPresupuestoVentasLineas();		
		
			
		//this.generarReportePresupuestoVentasLineass("Todos",presupuestoventaslineassSeleccionados ,presupuestoventaslineasImplementable,presupuestoventaslineasImplementableHome);
	}
	
	public void importarPresupuestoVentasLineass() throws Exception {		
	
	}
	
	public void exportarPresupuestoVentasLineassSeleccionados() throws Exception {
		Boolean existe=false;
		
		if(this.sTipoArchivoReporte.equals("EXCEL")) {
			existe=true;
			this.exportarExcelPresupuestoVentasLineassSeleccionados();
			
		} else if(this.sTipoArchivoReporte.equals("TEXTO")) {
			existe=true;
			this.exportarTextoPresupuestoVentasLineassSeleccionados();
		
		} else if(this.sTipoArchivoReporte.equals("XML")) {
			existe=true;
			this.exportarXmlPresupuestoVentasLineassSeleccionados();
		} 
		
		if(!existe) {
			JOptionPane.showMessageDialog(this,"SELECCIONE UN TIPO DE ARCHIVO VALIDO","EXPORTACION DE Presupuesto Ventas_lineas",JOptionPane.ERROR_MESSAGE);
		}
	}
	
	public void exportarTextoPresupuestoVentasLineassSeleccionados() throws Exception {
		ArrayList<PresupuestoVentasLineas> presupuestoventaslineassSeleccionados=new ArrayList<PresupuestoVentasLineas>();		
		
		presupuestoventaslineassSeleccionados=this.getPresupuestoVentasLineassSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"presupuestoventaslineas."+"txt";//Funciones2.getTipoExtensionArchivoExportar(this.parametroGeneralUsuario);
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		BufferedWriter bufferedWriter = null;
		FileWriter fileWriter=null;
		
		fileWriter=new FileWriter(sPath);
		
		bufferedWriter = new BufferedWriter(fileWriter);
		
		try {
			if(conCabecera) {
				sFilaCabecera=this.getFilaCabeceraExportarPresupuestoVentasLineas(sDelimiter);
				
				bufferedWriter.write(sFilaCabecera);
			}				
			
			for(PresupuestoVentasLineas presupuestoventaslineasAux:presupuestoventaslineassSeleccionados) {
				sFilaDatos=this.getFilaDatosExportarPresupuestoVentasLineas(presupuestoventaslineasAux,sDelimiter);
				
				bufferedWriter.write(sFilaDatos);
				
				//presupuestoventaslineasAux.setsDetalleGeneralEntityReporte(presupuestoventaslineasAux.toString());			
			}
			
			bufferedWriter.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.presupuestoventaslineasSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Presupuesto Ventas_lineas",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {
       		if (bufferedWriter != null) {
				bufferedWriter.close();
			}
		}
	}
	
	public String getFilaCabeceraExportarPresupuestoVentasLineas(String sDelimiter) {
		String sFilaCabecera="";
		
		
		sFilaCabecera+=PresupuestoVentasLineasConstantesFunciones.LABEL_ID;

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
			sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PresupuestoVentasLineasConstantesFunciones.LABEL_VERSIONROW;
		}

		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PresupuestoVentasLineasConstantesFunciones.LABEL_IDEMPRESA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PresupuestoVentasLineasConstantesFunciones.LABEL_IDSUCURSAL;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PresupuestoVentasLineasConstantesFunciones.LABEL_IDEJERCICIO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PresupuestoVentasLineasConstantesFunciones.LABEL_IDPERIODO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PresupuestoVentasLineasConstantesFunciones.LABEL_IDVENDEDOR;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PresupuestoVentasLineasConstantesFunciones.LABEL_IDPAIS;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PresupuestoVentasLineasConstantesFunciones.LABEL_IDCIUDAD;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PresupuestoVentasLineasConstantesFunciones.LABEL_IDZONA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PresupuestoVentasLineasConstantesFunciones.LABEL_IDLINEA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PresupuestoVentasLineasConstantesFunciones.LABEL_IDLINEAGRUPO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PresupuestoVentasLineasConstantesFunciones.LABEL_IDLINEACATEGORIA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PresupuestoVentasLineasConstantesFunciones.LABEL_IDLINEAMARCA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PresupuestoVentasLineasConstantesFunciones.LABEL_PRECIO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PresupuestoVentasLineasConstantesFunciones.LABEL_CANTIDAD;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PresupuestoVentasLineasConstantesFunciones.LABEL_VALOR;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PresupuestoVentasLineasConstantesFunciones.LABEL_PORCENTAJE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PresupuestoVentasLineasConstantesFunciones.LABEL_CANTIDADTOTAL;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PresupuestoVentasLineasConstantesFunciones.LABEL_VALORTOTAL;
		
		return sFilaCabecera;
	}
	
	public String getFilaDatosExportarPresupuestoVentasLineas(PresupuestoVentasLineas presupuestoventaslineas,String sDelimiter) {
		String sFilaDatos="";
		
		sFilaDatos+="\r\n";
		
		
		sFilaDatos+=presupuestoventaslineas.getId().toString();

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
			sFilaDatos+=sDelimiter;
		sFilaDatos+=presupuestoventaslineas.getVersionRow().toString();
		}

		sFilaDatos+=sDelimiter;
		sFilaDatos+=presupuestoventaslineas.getempresa_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=presupuestoventaslineas.getsucursal_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=presupuestoventaslineas.getejercicio_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=presupuestoventaslineas.getperiodo_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=presupuestoventaslineas.getvendedor_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=presupuestoventaslineas.getpais_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=presupuestoventaslineas.getciudad_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=presupuestoventaslineas.getzona_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=presupuestoventaslineas.getlinea_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=presupuestoventaslineas.getlineagrupo_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=presupuestoventaslineas.getlineacategoria_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=presupuestoventaslineas.getlineamarca_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=presupuestoventaslineas.getprecio().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=presupuestoventaslineas.getcantidad().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=presupuestoventaslineas.getvalor().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=presupuestoventaslineas.getporcentaje().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=presupuestoventaslineas.getcantidad_total().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=presupuestoventaslineas.getvalor_total().toString();
		
		return sFilaDatos;
	}
	
	//@SuppressWarnings("deprecation")
	public void exportarExcelPresupuestoVentasLineassSeleccionados() throws Exception {
		ArrayList<PresupuestoVentasLineas> presupuestoventaslineassSeleccionados=new ArrayList<PresupuestoVentasLineas>();		
		
		presupuestoventaslineassSeleccionados=this.getPresupuestoVentasLineassSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"presupuestoventaslineas.xls";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		FileOutputStream fileOutputStream=null;
		
		try {
			HSSFWorkbook workbook = new HSSFWorkbook();
			HSSFSheet sheet = workbook.createSheet("PresupuestoVentasLineass");
						
		    			
			Integer iRow=0;
			Integer iCell=0;
			
			HSSFRow row = sheet.createRow(iRow);
			HSSFCell cell = row.createCell(iCell);
			//cell.setCellValue("Blahblah");

			if(conCabecera) {
				this.getFilaCabeceraExportarExcelPresupuestoVentasLineas(row);				
				iRow++;
			}				
			
			for(PresupuestoVentasLineas presupuestoventaslineasAux:presupuestoventaslineassSeleccionados) {
				row = sheet.createRow(iRow);
				
				this.getFilaDatosExportarExcelPresupuestoVentasLineas(presupuestoventaslineasAux,row);
				
				iRow++;
			}
			
			
			fileOutputStream = new FileOutputStream(new File(sPath));
		    
			workbook.write(fileOutputStream);
			
			//fileOutputStream.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.presupuestoventaslineasSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Presupuesto Ventas_lineas",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			
       		if (fileOutputStream != null) {
				fileOutputStream.close();
			}			
		}
	}		
	
	public void exportarXmlPresupuestoVentasLineassSeleccionados() throws Exception {
		ArrayList<PresupuestoVentasLineas> presupuestoventaslineassSeleccionados=new ArrayList<PresupuestoVentasLineas>();		
		
		presupuestoventaslineassSeleccionados=this.getPresupuestoVentasLineassSeleccionados(true);
		
		//String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		//Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		//String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"presupuestoventaslineas.xml";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		DocumentBuilderFactory documentBuilderFactory=null;
		DocumentBuilder documentBuilder =null;
		
		try {
			documentBuilderFactory = DocumentBuilderFactory.newInstance();
			documentBuilder = documentBuilderFactory.newDocumentBuilder();
	
			Document document = documentBuilder.newDocument();
			Element elementRoot = document.createElement("presupuestoventaslineass");
			
			document.appendChild(elementRoot);
		    			
												
			Element element = null;//document.createElement("presupuestoventaslineas");
			//elementRoot.appendChild(element);
		
			for(PresupuestoVentasLineas presupuestoventaslineasAux:presupuestoventaslineassSeleccionados) {
				element = document.createElement("presupuestoventaslineas");
				elementRoot.appendChild(element);
			
				this.setFilaDatosExportarXmlPresupuestoVentasLineas(presupuestoventaslineasAux,document,element);
			}
			
			TransformerFactory transformerFactory = TransformerFactory.newInstance();
			Transformer transformer = transformerFactory.newTransformer();
			DOMSource domSource = new DOMSource(document);
			
			StreamResult streamResult = new StreamResult(new File(sPath));
	
			transformer.transform(domSource, streamResult);
						
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.presupuestoventaslineasSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Presupuesto Ventas_lineas",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			       				
		}
	}	
	
	//@SuppressWarnings("deprecation")
	public void getFilaCabeceraExportarExcelPresupuestoVentasLineas(HSSFRow row) {
		Integer iColumn=0;
		
		
		HSSFCell cell =null;
		cell = row.createCell(iColumn++);cell.setCellValue(PresupuestoVentasLineasConstantesFunciones.LABEL_ID);

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
		cell = row.createCell(iColumn++);cell.setCellValue(PresupuestoVentasLineasConstantesFunciones.LABEL_VERSIONROW);
		}

		cell = row.createCell(iColumn++);cell.setCellValue(PresupuestoVentasLineasConstantesFunciones.LABEL_IDEMPRESA);
		cell = row.createCell(iColumn++);cell.setCellValue(PresupuestoVentasLineasConstantesFunciones.LABEL_IDSUCURSAL);
		cell = row.createCell(iColumn++);cell.setCellValue(PresupuestoVentasLineasConstantesFunciones.LABEL_IDEJERCICIO);
		cell = row.createCell(iColumn++);cell.setCellValue(PresupuestoVentasLineasConstantesFunciones.LABEL_IDPERIODO);
		cell = row.createCell(iColumn++);cell.setCellValue(PresupuestoVentasLineasConstantesFunciones.LABEL_IDVENDEDOR);
		cell = row.createCell(iColumn++);cell.setCellValue(PresupuestoVentasLineasConstantesFunciones.LABEL_IDPAIS);
		cell = row.createCell(iColumn++);cell.setCellValue(PresupuestoVentasLineasConstantesFunciones.LABEL_IDCIUDAD);
		cell = row.createCell(iColumn++);cell.setCellValue(PresupuestoVentasLineasConstantesFunciones.LABEL_IDZONA);
		cell = row.createCell(iColumn++);cell.setCellValue(PresupuestoVentasLineasConstantesFunciones.LABEL_IDLINEA);
		cell = row.createCell(iColumn++);cell.setCellValue(PresupuestoVentasLineasConstantesFunciones.LABEL_IDLINEAGRUPO);
		cell = row.createCell(iColumn++);cell.setCellValue(PresupuestoVentasLineasConstantesFunciones.LABEL_IDLINEACATEGORIA);
		cell = row.createCell(iColumn++);cell.setCellValue(PresupuestoVentasLineasConstantesFunciones.LABEL_IDLINEAMARCA);
		cell = row.createCell(iColumn++);cell.setCellValue(PresupuestoVentasLineasConstantesFunciones.LABEL_PRECIO);
		cell = row.createCell(iColumn++);cell.setCellValue(PresupuestoVentasLineasConstantesFunciones.LABEL_CANTIDAD);
		cell = row.createCell(iColumn++);cell.setCellValue(PresupuestoVentasLineasConstantesFunciones.LABEL_VALOR);
		cell = row.createCell(iColumn++);cell.setCellValue(PresupuestoVentasLineasConstantesFunciones.LABEL_PORCENTAJE);
		cell = row.createCell(iColumn++);cell.setCellValue(PresupuestoVentasLineasConstantesFunciones.LABEL_CANTIDADTOTAL);
		cell = row.createCell(iColumn++);cell.setCellValue(PresupuestoVentasLineasConstantesFunciones.LABEL_VALORTOTAL);
	}
	
	//@SuppressWarnings("deprecation")
	public void getFilaDatosExportarExcelPresupuestoVentasLineas(PresupuestoVentasLineas presupuestoventaslineas,HSSFRow row) {
		Integer iColumn=0;
		
		
		HSSFCell cell =null;
		cell = row.createCell(iColumn++);cell.setCellValue(presupuestoventaslineas.getId());
		cell = row.createCell(iColumn++);cell.setCellValue(presupuestoventaslineas.getempresa_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(presupuestoventaslineas.getsucursal_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(presupuestoventaslineas.getejercicio_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(presupuestoventaslineas.getperiodo_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(presupuestoventaslineas.getvendedor_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(presupuestoventaslineas.getpais_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(presupuestoventaslineas.getciudad_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(presupuestoventaslineas.getzona_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(presupuestoventaslineas.getlinea_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(presupuestoventaslineas.getlineagrupo_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(presupuestoventaslineas.getlineacategoria_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(presupuestoventaslineas.getlineamarca_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(presupuestoventaslineas.getprecio());
		cell = row.createCell(iColumn++);cell.setCellValue(presupuestoventaslineas.getcantidad());
		cell = row.createCell(iColumn++);cell.setCellValue(presupuestoventaslineas.getvalor());
		cell = row.createCell(iColumn++);cell.setCellValue(presupuestoventaslineas.getporcentaje());
		cell = row.createCell(iColumn++);cell.setCellValue(presupuestoventaslineas.getcantidad_total());
		cell = row.createCell(iColumn++);cell.setCellValue(presupuestoventaslineas.getvalor_total());				
	}
	
	public void setFilaDatosExportarXmlPresupuestoVentasLineas(PresupuestoVentasLineas presupuestoventaslineas,Document document,Element element) {
		/*
		Element lastname = document.createElement("lastname");
		lastname.appendChild(document.createTextNode("mook kim"));
		element.appendChild(lastname);
		*/
		

		Element elementId = document.createElement(PresupuestoVentasLineasConstantesFunciones.ID);
		elementId.appendChild(document.createTextNode(presupuestoventaslineas.getId().toString().trim()));
		element.appendChild(elementId);

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){

		Element elementVersionRow = document.createElement(PresupuestoVentasLineasConstantesFunciones.VERSIONROW);
		elementVersionRow.appendChild(document.createTextNode(presupuestoventaslineas.getVersionRow().toString().trim()));
		element.appendChild(elementVersionRow);
		}


		Element elementempresa_descripcion = document.createElement(PresupuestoVentasLineasConstantesFunciones.IDEMPRESA);
		elementempresa_descripcion.appendChild(document.createTextNode(presupuestoventaslineas.getempresa_descripcion()));
		element.appendChild(elementempresa_descripcion);

		Element elementsucursal_descripcion = document.createElement(PresupuestoVentasLineasConstantesFunciones.IDSUCURSAL);
		elementsucursal_descripcion.appendChild(document.createTextNode(presupuestoventaslineas.getsucursal_descripcion()));
		element.appendChild(elementsucursal_descripcion);

		Element elementejercicio_descripcion = document.createElement(PresupuestoVentasLineasConstantesFunciones.IDEJERCICIO);
		elementejercicio_descripcion.appendChild(document.createTextNode(presupuestoventaslineas.getejercicio_descripcion()));
		element.appendChild(elementejercicio_descripcion);

		Element elementperiodo_descripcion = document.createElement(PresupuestoVentasLineasConstantesFunciones.IDPERIODO);
		elementperiodo_descripcion.appendChild(document.createTextNode(presupuestoventaslineas.getperiodo_descripcion()));
		element.appendChild(elementperiodo_descripcion);

		Element elementvendedor_descripcion = document.createElement(PresupuestoVentasLineasConstantesFunciones.IDVENDEDOR);
		elementvendedor_descripcion.appendChild(document.createTextNode(presupuestoventaslineas.getvendedor_descripcion()));
		element.appendChild(elementvendedor_descripcion);

		Element elementpais_descripcion = document.createElement(PresupuestoVentasLineasConstantesFunciones.IDPAIS);
		elementpais_descripcion.appendChild(document.createTextNode(presupuestoventaslineas.getpais_descripcion()));
		element.appendChild(elementpais_descripcion);

		Element elementciudad_descripcion = document.createElement(PresupuestoVentasLineasConstantesFunciones.IDCIUDAD);
		elementciudad_descripcion.appendChild(document.createTextNode(presupuestoventaslineas.getciudad_descripcion()));
		element.appendChild(elementciudad_descripcion);

		Element elementzona_descripcion = document.createElement(PresupuestoVentasLineasConstantesFunciones.IDZONA);
		elementzona_descripcion.appendChild(document.createTextNode(presupuestoventaslineas.getzona_descripcion()));
		element.appendChild(elementzona_descripcion);

		Element elementlinea_descripcion = document.createElement(PresupuestoVentasLineasConstantesFunciones.IDLINEA);
		elementlinea_descripcion.appendChild(document.createTextNode(presupuestoventaslineas.getlinea_descripcion()));
		element.appendChild(elementlinea_descripcion);

		Element elementlineagrupo_descripcion = document.createElement(PresupuestoVentasLineasConstantesFunciones.IDLINEAGRUPO);
		elementlineagrupo_descripcion.appendChild(document.createTextNode(presupuestoventaslineas.getlineagrupo_descripcion()));
		element.appendChild(elementlineagrupo_descripcion);

		Element elementlineacategoria_descripcion = document.createElement(PresupuestoVentasLineasConstantesFunciones.IDLINEACATEGORIA);
		elementlineacategoria_descripcion.appendChild(document.createTextNode(presupuestoventaslineas.getlineacategoria_descripcion()));
		element.appendChild(elementlineacategoria_descripcion);

		Element elementlineamarca_descripcion = document.createElement(PresupuestoVentasLineasConstantesFunciones.IDLINEAMARCA);
		elementlineamarca_descripcion.appendChild(document.createTextNode(presupuestoventaslineas.getlineamarca_descripcion()));
		element.appendChild(elementlineamarca_descripcion);

		Element elementprecio = document.createElement(PresupuestoVentasLineasConstantesFunciones.PRECIO);
		elementprecio.appendChild(document.createTextNode(presupuestoventaslineas.getprecio().toString().trim()));
		element.appendChild(elementprecio);

		Element elementcantidad = document.createElement(PresupuestoVentasLineasConstantesFunciones.CANTIDAD);
		elementcantidad.appendChild(document.createTextNode(presupuestoventaslineas.getcantidad().toString().trim()));
		element.appendChild(elementcantidad);

		Element elementvalor = document.createElement(PresupuestoVentasLineasConstantesFunciones.VALOR);
		elementvalor.appendChild(document.createTextNode(presupuestoventaslineas.getvalor().toString().trim()));
		element.appendChild(elementvalor);

		Element elementporcentaje = document.createElement(PresupuestoVentasLineasConstantesFunciones.PORCENTAJE);
		elementporcentaje.appendChild(document.createTextNode(presupuestoventaslineas.getporcentaje().toString().trim()));
		element.appendChild(elementporcentaje);

		Element elementcantidad_total = document.createElement(PresupuestoVentasLineasConstantesFunciones.CANTIDADTOTAL);
		elementcantidad_total.appendChild(document.createTextNode(presupuestoventaslineas.getcantidad_total().toString().trim()));
		element.appendChild(elementcantidad_total);

		Element elementvalor_total = document.createElement(PresupuestoVentasLineasConstantesFunciones.VALORTOTAL);
		elementvalor_total.appendChild(document.createTextNode(presupuestoventaslineas.getvalor_total().toString().trim()));
		element.appendChild(elementvalor_total);
	}
	
	public void generarReporteGroupGenericoPresupuestoVentasLineassSeleccionados(Boolean soloTotales) throws Exception {
		ArrayList<PresupuestoVentasLineas> presupuestoventaslineassSeleccionados=new ArrayList<PresupuestoVentasLineas>();
		
		presupuestoventaslineassSeleccionados=this.getPresupuestoVentasLineassSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
		
		/*
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		if(!soloTotales) {
			this.sTipoReporteExtra=Constantes2.S_REPORTE_EXTRA_GROUP_GENERICO;
		} else {
			this.sTipoReporteExtra=Constantes2.S_REPORTE_EXTRA_GROUP_TOTALES_GENERICO;
		}
		
		this.setColumnaDescripcionReporteGroupGenericoPresupuestoVentasLineas(presupuestoventaslineassSeleccionados);
		
		this.generarReportePresupuestoVentasLineass("Todos",presupuestoventaslineassSeleccionados);
	}
	
	public void setColumnaDescripcionReporteGroupGenericoPresupuestoVentasLineas(ArrayList<PresupuestoVentasLineas> presupuestoventaslineassSeleccionados) throws Exception {    		
		try {
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			
			Boolean existe=false;
			
			for(PresupuestoVentasLineas presupuestoventaslineasAux:presupuestoventaslineassSeleccionados) {
				presupuestoventaslineasAux.setsDetalleGeneralEntityReporte(presupuestoventaslineasAux.toString());
			
				if(sTipoSeleccionar.equals(PresupuestoVentasLineasConstantesFunciones.LABEL_IDEMPRESA)) {
					existe=true;
					presupuestoventaslineasAux.setsDescripcionGeneralEntityReporte1(presupuestoventaslineasAux.getempresa_descripcion());
				}
				 else if(sTipoSeleccionar.equals(PresupuestoVentasLineasConstantesFunciones.LABEL_IDSUCURSAL)) {
					existe=true;
					presupuestoventaslineasAux.setsDescripcionGeneralEntityReporte1(presupuestoventaslineasAux.getsucursal_descripcion());
				}
				 else if(sTipoSeleccionar.equals(PresupuestoVentasLineasConstantesFunciones.LABEL_IDEJERCICIO)) {
					existe=true;
					presupuestoventaslineasAux.setsDescripcionGeneralEntityReporte1(presupuestoventaslineasAux.getejercicio_descripcion());
				}
				 else if(sTipoSeleccionar.equals(PresupuestoVentasLineasConstantesFunciones.LABEL_IDPERIODO)) {
					existe=true;
					presupuestoventaslineasAux.setsDescripcionGeneralEntityReporte1(presupuestoventaslineasAux.getperiodo_descripcion());
				}
				 else if(sTipoSeleccionar.equals(PresupuestoVentasLineasConstantesFunciones.LABEL_IDVENDEDOR)) {
					existe=true;
					presupuestoventaslineasAux.setsDescripcionGeneralEntityReporte1(presupuestoventaslineasAux.getvendedor_descripcion());
				}
				 else if(sTipoSeleccionar.equals(PresupuestoVentasLineasConstantesFunciones.LABEL_IDPAIS)) {
					existe=true;
					presupuestoventaslineasAux.setsDescripcionGeneralEntityReporte1(presupuestoventaslineasAux.getpais_descripcion());
				}
				 else if(sTipoSeleccionar.equals(PresupuestoVentasLineasConstantesFunciones.LABEL_IDCIUDAD)) {
					existe=true;
					presupuestoventaslineasAux.setsDescripcionGeneralEntityReporte1(presupuestoventaslineasAux.getciudad_descripcion());
				}
				 else if(sTipoSeleccionar.equals(PresupuestoVentasLineasConstantesFunciones.LABEL_IDZONA)) {
					existe=true;
					presupuestoventaslineasAux.setsDescripcionGeneralEntityReporte1(presupuestoventaslineasAux.getzona_descripcion());
				}
				 else if(sTipoSeleccionar.equals(PresupuestoVentasLineasConstantesFunciones.LABEL_IDLINEA)) {
					existe=true;
					presupuestoventaslineasAux.setsDescripcionGeneralEntityReporte1(presupuestoventaslineasAux.getlinea_descripcion());
				}
				 else if(sTipoSeleccionar.equals(PresupuestoVentasLineasConstantesFunciones.LABEL_IDLINEAGRUPO)) {
					existe=true;
					presupuestoventaslineasAux.setsDescripcionGeneralEntityReporte1(presupuestoventaslineasAux.getlineagrupo_descripcion());
				}
				 else if(sTipoSeleccionar.equals(PresupuestoVentasLineasConstantesFunciones.LABEL_IDLINEACATEGORIA)) {
					existe=true;
					presupuestoventaslineasAux.setsDescripcionGeneralEntityReporte1(presupuestoventaslineasAux.getlineacategoria_descripcion());
				}
				 else if(sTipoSeleccionar.equals(PresupuestoVentasLineasConstantesFunciones.LABEL_IDLINEAMARCA)) {
					existe=true;
					presupuestoventaslineasAux.setsDescripcionGeneralEntityReporte1(presupuestoventaslineasAux.getlineamarca_descripcion());
				}
				 else if(sTipoSeleccionar.equals(PresupuestoVentasLineasConstantesFunciones.LABEL_CANTIDAD)) {
					existe=true;
					presupuestoventaslineasAux.setsDescripcionGeneralEntityReporte1(presupuestoventaslineasAux.getcantidad().toString());
				}
				 else if(sTipoSeleccionar.equals(PresupuestoVentasLineasConstantesFunciones.LABEL_CANTIDADTOTAL)) {
					existe=true;
					presupuestoventaslineasAux.setsDescripcionGeneralEntityReporte1(presupuestoventaslineasAux.getcantidad_total().toString());
				}
			}	
											
			if(!existe) {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}										
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PresupuestoVentasLineasConstantesFunciones.CLASSNAME);
		}
	}
	
	
	public void actualizarEstadoCeldasBotonesPresupuestoVentasLineas(String sAccion,Boolean isGuardarCambiosEnLote,Boolean isEsMantenimientoRelacionado) throws Exception {
		if(sAccion=="n") {
			if(!this.esParaBusquedaForeignKey) {
				this.isVisibilidadCeldaNuevoPresupuestoVentasLineas=true;
				this.isVisibilidadCeldaNuevoRelacionesPresupuestoVentasLineas=true;
				this.isVisibilidadCeldaGuardarCambiosPresupuestoVentasLineas=true;
			}
			
			this.isVisibilidadCeldaModificarPresupuestoVentasLineas=false;
			this.isVisibilidadCeldaActualizarPresupuestoVentasLineas=false;
			this.isVisibilidadCeldaEliminarPresupuestoVentasLineas=false;
			this.isVisibilidadCeldaCancelarPresupuestoVentasLineas=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarPresupuestoVentasLineas=true;
				} else {
					this.isVisibilidadCeldaGuardarPresupuestoVentasLineas=false;
				}
			}
		} else if(sAccion=="a") {
			this.isVisibilidadCeldaNuevoPresupuestoVentasLineas=false;
			this.isVisibilidadCeldaNuevoRelacionesPresupuestoVentasLineas=false;
			this.isVisibilidadCeldaGuardarCambiosPresupuestoVentasLineas=false;
			this.isVisibilidadCeldaModificarPresupuestoVentasLineas=false;
			this.isVisibilidadCeldaActualizarPresupuestoVentasLineas=true;
			this.isVisibilidadCeldaEliminarPresupuestoVentasLineas=false;
			this.isVisibilidadCeldaCancelarPresupuestoVentasLineas=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarPresupuestoVentasLineas=true;
				} else {
					this.isVisibilidadCeldaGuardarPresupuestoVentasLineas=false;
				}
			}
		} else if(sAccion=="ae") {
			this.isVisibilidadCeldaNuevoPresupuestoVentasLineas=false;
			this.isVisibilidadCeldaNuevoRelacionesPresupuestoVentasLineas=false;
			this.isVisibilidadCeldaGuardarCambiosPresupuestoVentasLineas=false;
			this.isVisibilidadCeldaModificarPresupuestoVentasLineas=false;
			this.isVisibilidadCeldaActualizarPresupuestoVentasLineas=true;
			this.isVisibilidadCeldaEliminarPresupuestoVentasLineas=true;
			this.isVisibilidadCeldaCancelarPresupuestoVentasLineas=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarPresupuestoVentasLineas=true;
				} else {
					this.isVisibilidadCeldaGuardarPresupuestoVentasLineas=false;
				}
			}
		}
		//Para Mantenimientos de tablas relacionados con mas de columnas minimas
		else if(sAccion=="ae2") {
			this.isVisibilidadCeldaNuevoPresupuestoVentasLineas=false;
			this.isVisibilidadCeldaNuevoRelacionesPresupuestoVentasLineas=false;
			this.isVisibilidadCeldaGuardarCambiosPresupuestoVentasLineas=false;
			this.isVisibilidadCeldaModificarPresupuestoVentasLineas=false;
			this.isVisibilidadCeldaActualizarPresupuestoVentasLineas=true;
			this.isVisibilidadCeldaEliminarPresupuestoVentasLineas=false;
			this.isVisibilidadCeldaCancelarPresupuestoVentasLineas=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarPresupuestoVentasLineas=false;
				} else {
					this.isVisibilidadCeldaGuardarPresupuestoVentasLineas=false;
				}
			}
		} else if(sAccion=="c") {
			this.isVisibilidadCeldaNuevoPresupuestoVentasLineas=true;
			this.isVisibilidadCeldaNuevoRelacionesPresupuestoVentasLineas=true;
			this.isVisibilidadCeldaGuardarCambiosPresupuestoVentasLineas=true;
			this.isVisibilidadCeldaModificarPresupuestoVentasLineas=false;
			this.isVisibilidadCeldaActualizarPresupuestoVentasLineas=false;
			this.isVisibilidadCeldaEliminarPresupuestoVentasLineas=false;
			this.isVisibilidadCeldaCancelarPresupuestoVentasLineas=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarPresupuestoVentasLineas=true;
				} else {
					this.isVisibilidadCeldaGuardarPresupuestoVentasLineas=false;
				}
			}
		} else if(sAccion=="t") {
			this.isVisibilidadCeldaNuevoPresupuestoVentasLineas=false;
			this.isVisibilidadCeldaNuevoRelacionesPresupuestoVentasLineas=false;
			this.isVisibilidadCeldaGuardarCambiosPresupuestoVentasLineas=false;
			this.isVisibilidadCeldaActualizarPresupuestoVentasLineas=false;
			this.isVisibilidadCeldaEliminarPresupuestoVentasLineas=false;
			this.isVisibilidadCeldaCancelarPresupuestoVentasLineas=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarPresupuestoVentasLineas=false;
				} else {
					this.isVisibilidadCeldaGuardarPresupuestoVentasLineas=false;
				}
			}
		}  else if(sAccion=="s"||sAccion=="s2") {
			this.isVisibilidadCeldaNuevoPresupuestoVentasLineas=false;
			this.isVisibilidadCeldaNuevoRelacionesPresupuestoVentasLineas=false;
			this.isVisibilidadCeldaGuardarCambiosPresupuestoVentasLineas=false;
			this.isVisibilidadCeldaModificarPresupuestoVentasLineas=true;
			this.isVisibilidadCeldaActualizarPresupuestoVentasLineas=false;
			this.isVisibilidadCeldaEliminarPresupuestoVentasLineas=false;
			this.isVisibilidadCeldaCancelarPresupuestoVentasLineas=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarPresupuestoVentasLineas=false;
				} else {
					this.isVisibilidadCeldaGuardarPresupuestoVentasLineas=false;
				}
			}
		}
		
		//ACTUALIZA VISIBILIDAD PANELES
		if(PresupuestoVentasLineasJInternalFrame.CON_DATOS_FRAME && !this.esParaBusquedaForeignKey) {
			//SIEMPRE VISIBLE
			this.isVisibilidadCeldaNuevoPresupuestoVentasLineas=true;
			this.isVisibilidadCeldaNuevoRelacionesPresupuestoVentasLineas=true;
			this.isVisibilidadCeldaGuardarCambiosPresupuestoVentasLineas=true;
		} else {
			this.actualizarEstadoPanelsPresupuestoVentasLineas(sAccion);						
		}
		
		if(this.esParaBusquedaForeignKey) {
			this.isVisibilidadCeldaCopiarPresupuestoVentasLineas=false;
			//this.isVisibilidadCeldaVerFormPresupuestoVentasLineas=false;
			this.isVisibilidadCeldaDuplicarPresupuestoVentasLineas=false;
		}
		
		//SI ES MANTENIMIENTO RELACIONES
		if(!presupuestoventaslineasSessionBean.getConGuardarRelaciones()) {
			this.isVisibilidadCeldaNuevoRelacionesPresupuestoVentasLineas=false;
		} else {
			this.isVisibilidadCeldaNuevoPresupuestoVentasLineas=false;
			this.isVisibilidadCeldaGuardarCambiosPresupuestoVentasLineas=false;
		}
		
		//SI ES MANTENIMIENTO RELACIONADO
		if(presupuestoventaslineasSessionBean.getEsGuardarRelacionado()) {
			if(!presupuestoventaslineasSessionBean.getConGuardarRelaciones()) {	
				this.isVisibilidadCeldaNuevoRelacionesPresupuestoVentasLineas=false;												
			}
			
			this.jButtonCerrarPresupuestoVentasLineas.setVisible(false);
		}
		
		//SI NO TIENE MAXIMO DE RELACIONES PERMITIDAS
		if(!this.conMaximoRelaciones) {
			this.isVisibilidadCeldaNuevoRelacionesPresupuestoVentasLineas=false;
		}
		
		if(!this.permiteMantenimiento(this.presupuestoventaslineas)) {
			this.isVisibilidadCeldaActualizarPresupuestoVentasLineas=false;
			this.isVisibilidadCeldaEliminarPresupuestoVentasLineas=false;
		}
		
		
		
	}
	
	public void actualizarEstadoCeldasBotonesConGuardarRelacionesPresupuestoVentasLineas() {
	}
	
	public void actualizarEstadoPanelsPresupuestoVentasLineas(String sAccion) {
		if(sAccion=="n") {
			if(this.jScrollPanelDatosEdicionPresupuestoVentasLineas!=null) {
				this.jScrollPanelDatosEdicionPresupuestoVentasLineas.setVisible(false);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasPresupuestoVentasLineas!=null) {
				this.jTabbedPaneBusquedasPresupuestoVentasLineas.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosPresupuestoVentasLineas!=null) {
				this.jScrollPanelDatosPresupuestoVentasLineas.setVisible(true);
			}
			
			if(this.jPanelPaginacionPresupuestoVentasLineas!=null) {
				this.jPanelPaginacionPresupuestoVentasLineas.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesPresupuestoVentasLineas!=null) {
				this.jPanelParametrosReportesPresupuestoVentasLineas.setVisible(true);		    
			}
			
		} else if(sAccion=="a") {				
			if(this.jScrollPanelDatosEdicionPresupuestoVentasLineas!=null) {
				this.jScrollPanelDatosEdicionPresupuestoVentasLineas.setVisible(true);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasPresupuestoVentasLineas!=null) {
				this.jTabbedPaneBusquedasPresupuestoVentasLineas.setVisible(false);			
			}
			
			
			
			if(this.jScrollPanelDatosPresupuestoVentasLineas!=null) {
				this.jScrollPanelDatosPresupuestoVentasLineas.setVisible(false);
			}
			
			if(this.jPanelPaginacionPresupuestoVentasLineas!=null) {
				this.jPanelPaginacionPresupuestoVentasLineas.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesPresupuestoVentasLineas!=null) {
				this.jPanelParametrosReportesPresupuestoVentasLineas.setVisible(false);
			}
						
		} else if(sAccion=="ae") {		
			if(this.jScrollPanelDatosEdicionPresupuestoVentasLineas!=null) {
				this.jScrollPanelDatosEdicionPresupuestoVentasLineas.setVisible(true);		
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasPresupuestoVentasLineas!=null) {
				this.jTabbedPaneBusquedasPresupuestoVentasLineas.setVisible(false);			
			}
			
			
			if(this.jScrollPanelDatosPresupuestoVentasLineas!=null) {
				this.jScrollPanelDatosPresupuestoVentasLineas.setVisible(false);
			}
			
			if(this.jPanelPaginacionPresupuestoVentasLineas!=null) {
				this.jPanelPaginacionPresupuestoVentasLineas.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesPresupuestoVentasLineas!=null) {
				this.jPanelParametrosReportesPresupuestoVentasLineas.setVisible(false);
			}
						
		}
		//Para Mantenimientos de tablas relacionados con mas de columnas minimas
		else if(sAccion=="ae2") {	
			if(this.jScrollPanelDatosEdicionPresupuestoVentasLineas!=null) {
				this.jScrollPanelDatosEdicionPresupuestoVentasLineas.setVisible(true);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasPresupuestoVentasLineas!=null) {
				this.jTabbedPaneBusquedasPresupuestoVentasLineas.setVisible(false);			
			}
			
			
			if(this.jScrollPanelDatosPresupuestoVentasLineas!=null) {
				this.jScrollPanelDatosPresupuestoVentasLineas.setVisible(false);
			}
			
			if(this.jPanelPaginacionPresupuestoVentasLineas!=null) {
				this.jPanelPaginacionPresupuestoVentasLineas.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesPresupuestoVentasLineas!=null) {
				this.jPanelParametrosReportesPresupuestoVentasLineas.setVisible(false);
			}
						
		} else if(sAccion=="c") {	
			if(this.jScrollPanelDatosEdicionPresupuestoVentasLineas!=null) {
				this.jScrollPanelDatosEdicionPresupuestoVentasLineas.setVisible(false);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasPresupuestoVentasLineas!=null) {
				this.jTabbedPaneBusquedasPresupuestoVentasLineas.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosPresupuestoVentasLineas!=null) {
				this.jScrollPanelDatosPresupuestoVentasLineas.setVisible(true);
			}
			
			if(this.jPanelPaginacionPresupuestoVentasLineas!=null) {
				this.jPanelPaginacionPresupuestoVentasLineas.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesPresupuestoVentasLineas!=null) {
				this.jPanelParametrosReportesPresupuestoVentasLineas.setVisible(true);
			}
						
		} else if(sAccion=="t") {
			
			if(this.jScrollPanelDatosEdicionPresupuestoVentasLineas!=null) {
				this.jScrollPanelDatosEdicionPresupuestoVentasLineas.setVisible(false);
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasPresupuestoVentasLineas!=null) {
				this.jTabbedPaneBusquedasPresupuestoVentasLineas.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosPresupuestoVentasLineas!=null) {
				this.jScrollPanelDatosPresupuestoVentasLineas.setVisible(true);
			}
			
			if(this.jPanelPaginacionPresupuestoVentasLineas!=null) {
				this.jPanelPaginacionPresupuestoVentasLineas.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesPresupuestoVentasLineas!=null) {
				this.jPanelParametrosReportesPresupuestoVentasLineas.setVisible(true);
			}
						
		}  else if(sAccion=="s"||sAccion=="s2") {
			if(this.jScrollPanelDatosEdicionPresupuestoVentasLineas!=null) {
				this.jScrollPanelDatosEdicionPresupuestoVentasLineas.setVisible(false);
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasPresupuestoVentasLineas!=null) {
				this.jTabbedPaneBusquedasPresupuestoVentasLineas.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosPresupuestoVentasLineas!=null) {
				this.jScrollPanelDatosPresupuestoVentasLineas.setVisible(true);
			}
			
			if(this.jPanelPaginacionPresupuestoVentasLineas!=null) {
				this.jPanelPaginacionPresupuestoVentasLineas.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesPresupuestoVentasLineas!=null) {
				this.jPanelParametrosReportesPresupuestoVentasLineas.setVisible(true);
			}
			
		} 
		
		if(sAccion.equals("relacionado") || this.presupuestoventaslineasSessionBean.getEsGuardarRelacionado()) {
			if(!this.conCargarMinimo) {
				//BYDAN_BUSQUEDAS
				
				if(this.jTabbedPaneBusquedasPresupuestoVentasLineas!=null) {
					this.jTabbedPaneBusquedasPresupuestoVentasLineas.setVisible(false);				
				}
				
			}
			
			if(this.jPanelParametrosReportesPresupuestoVentasLineas!=null) {
				this.jPanelParametrosReportesPresupuestoVentasLineas.setVisible(false);
			}
		
		} else if(sAccion.equals("no_relacionado") && !this.presupuestoventaslineasSessionBean.getEsGuardarRelacionado()) {
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasPresupuestoVentasLineas!=null) {
				this.jTabbedPaneBusquedasPresupuestoVentasLineas.setVisible(true);			
			}
			
			if(this.jPanelParametrosReportesPresupuestoVentasLineas!=null) {
				this.jPanelParametrosReportesPresupuestoVentasLineas.setVisible(true);
			}
		}
	}	
	
	

	public void setVisibilidadBusquedasParaEmpresa(Boolean isParaEmpresa){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaEmpresaNegation=!isParaEmpresa;

			this.isVisibilidadFK_IdCiudad=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdCiudad) {this.jTabbedPaneBusquedasPresupuestoVentasLineas.remove(jPanelFK_IdCiudadPresupuestoVentasLineas);}

			this.isVisibilidadFK_IdLinea=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdLinea) {this.jTabbedPaneBusquedasPresupuestoVentasLineas.remove(jPanelFK_IdLineaPresupuestoVentasLineas);}

			this.isVisibilidadFK_IdLineaCategoria=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdLineaCategoria) {this.jTabbedPaneBusquedasPresupuestoVentasLineas.remove(jPanelFK_IdLineaCategoriaPresupuestoVentasLineas);}

			this.isVisibilidadFK_IdLineaGrupo=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdLineaGrupo) {this.jTabbedPaneBusquedasPresupuestoVentasLineas.remove(jPanelFK_IdLineaGrupoPresupuestoVentasLineas);}

			this.isVisibilidadFK_IdLineaMarca=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdLineaMarca) {this.jTabbedPaneBusquedasPresupuestoVentasLineas.remove(jPanelFK_IdLineaMarcaPresupuestoVentasLineas);}

			this.isVisibilidadFK_IdPais=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdPais) {this.jTabbedPaneBusquedasPresupuestoVentasLineas.remove(jPanelFK_IdPaisPresupuestoVentasLineas);}

			this.isVisibilidadFK_IdVendedor=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasPresupuestoVentasLineas.remove(jPanelFK_IdVendedorPresupuestoVentasLineas);}

			this.isVisibilidadFK_IdZona=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdZona) {this.jTabbedPaneBusquedasPresupuestoVentasLineas.remove(jPanelFK_IdZonaPresupuestoVentasLineas);}
		}
		
	}

	public void setVisibilidadBusquedasParaSucursal(Boolean isParaSucursal){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaSucursalNegation=!isParaSucursal;

			this.isVisibilidadFK_IdCiudad=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdCiudad) {this.jTabbedPaneBusquedasPresupuestoVentasLineas.remove(jPanelFK_IdCiudadPresupuestoVentasLineas);}

			this.isVisibilidadFK_IdLinea=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdLinea) {this.jTabbedPaneBusquedasPresupuestoVentasLineas.remove(jPanelFK_IdLineaPresupuestoVentasLineas);}

			this.isVisibilidadFK_IdLineaCategoria=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdLineaCategoria) {this.jTabbedPaneBusquedasPresupuestoVentasLineas.remove(jPanelFK_IdLineaCategoriaPresupuestoVentasLineas);}

			this.isVisibilidadFK_IdLineaGrupo=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdLineaGrupo) {this.jTabbedPaneBusquedasPresupuestoVentasLineas.remove(jPanelFK_IdLineaGrupoPresupuestoVentasLineas);}

			this.isVisibilidadFK_IdLineaMarca=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdLineaMarca) {this.jTabbedPaneBusquedasPresupuestoVentasLineas.remove(jPanelFK_IdLineaMarcaPresupuestoVentasLineas);}

			this.isVisibilidadFK_IdPais=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdPais) {this.jTabbedPaneBusquedasPresupuestoVentasLineas.remove(jPanelFK_IdPaisPresupuestoVentasLineas);}

			this.isVisibilidadFK_IdVendedor=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasPresupuestoVentasLineas.remove(jPanelFK_IdVendedorPresupuestoVentasLineas);}

			this.isVisibilidadFK_IdZona=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdZona) {this.jTabbedPaneBusquedasPresupuestoVentasLineas.remove(jPanelFK_IdZonaPresupuestoVentasLineas);}
		}
		
	}

	public void setVisibilidadBusquedasParaEjercicio(Boolean isParaEjercicio){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaEjercicioNegation=!isParaEjercicio;

			this.isVisibilidadFK_IdCiudad=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdCiudad) {this.jTabbedPaneBusquedasPresupuestoVentasLineas.remove(jPanelFK_IdCiudadPresupuestoVentasLineas);}

			this.isVisibilidadFK_IdLinea=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdLinea) {this.jTabbedPaneBusquedasPresupuestoVentasLineas.remove(jPanelFK_IdLineaPresupuestoVentasLineas);}

			this.isVisibilidadFK_IdLineaCategoria=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdLineaCategoria) {this.jTabbedPaneBusquedasPresupuestoVentasLineas.remove(jPanelFK_IdLineaCategoriaPresupuestoVentasLineas);}

			this.isVisibilidadFK_IdLineaGrupo=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdLineaGrupo) {this.jTabbedPaneBusquedasPresupuestoVentasLineas.remove(jPanelFK_IdLineaGrupoPresupuestoVentasLineas);}

			this.isVisibilidadFK_IdLineaMarca=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdLineaMarca) {this.jTabbedPaneBusquedasPresupuestoVentasLineas.remove(jPanelFK_IdLineaMarcaPresupuestoVentasLineas);}

			this.isVisibilidadFK_IdPais=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdPais) {this.jTabbedPaneBusquedasPresupuestoVentasLineas.remove(jPanelFK_IdPaisPresupuestoVentasLineas);}

			this.isVisibilidadFK_IdVendedor=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasPresupuestoVentasLineas.remove(jPanelFK_IdVendedorPresupuestoVentasLineas);}

			this.isVisibilidadFK_IdZona=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdZona) {this.jTabbedPaneBusquedasPresupuestoVentasLineas.remove(jPanelFK_IdZonaPresupuestoVentasLineas);}
		}
		
	}

	public void setVisibilidadBusquedasParaPeriodo(Boolean isParaPeriodo){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaPeriodoNegation=!isParaPeriodo;

			this.isVisibilidadFK_IdCiudad=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdCiudad) {this.jTabbedPaneBusquedasPresupuestoVentasLineas.remove(jPanelFK_IdCiudadPresupuestoVentasLineas);}

			this.isVisibilidadFK_IdLinea=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdLinea) {this.jTabbedPaneBusquedasPresupuestoVentasLineas.remove(jPanelFK_IdLineaPresupuestoVentasLineas);}

			this.isVisibilidadFK_IdLineaCategoria=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdLineaCategoria) {this.jTabbedPaneBusquedasPresupuestoVentasLineas.remove(jPanelFK_IdLineaCategoriaPresupuestoVentasLineas);}

			this.isVisibilidadFK_IdLineaGrupo=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdLineaGrupo) {this.jTabbedPaneBusquedasPresupuestoVentasLineas.remove(jPanelFK_IdLineaGrupoPresupuestoVentasLineas);}

			this.isVisibilidadFK_IdLineaMarca=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdLineaMarca) {this.jTabbedPaneBusquedasPresupuestoVentasLineas.remove(jPanelFK_IdLineaMarcaPresupuestoVentasLineas);}

			this.isVisibilidadFK_IdPais=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdPais) {this.jTabbedPaneBusquedasPresupuestoVentasLineas.remove(jPanelFK_IdPaisPresupuestoVentasLineas);}

			this.isVisibilidadFK_IdVendedor=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasPresupuestoVentasLineas.remove(jPanelFK_IdVendedorPresupuestoVentasLineas);}

			this.isVisibilidadFK_IdZona=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdZona) {this.jTabbedPaneBusquedasPresupuestoVentasLineas.remove(jPanelFK_IdZonaPresupuestoVentasLineas);}
		}
		
	}

	public void setVisibilidadBusquedasParaVendedor(Boolean isParaVendedor){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaVendedorNegation=!isParaVendedor;

			this.isVisibilidadFK_IdCiudad=isParaVendedorNegation;
			if(!this.isVisibilidadFK_IdCiudad) {this.jTabbedPaneBusquedasPresupuestoVentasLineas.remove(jPanelFK_IdCiudadPresupuestoVentasLineas);}

			this.isVisibilidadFK_IdLinea=isParaVendedorNegation;
			if(!this.isVisibilidadFK_IdLinea) {this.jTabbedPaneBusquedasPresupuestoVentasLineas.remove(jPanelFK_IdLineaPresupuestoVentasLineas);}

			this.isVisibilidadFK_IdLineaCategoria=isParaVendedorNegation;
			if(!this.isVisibilidadFK_IdLineaCategoria) {this.jTabbedPaneBusquedasPresupuestoVentasLineas.remove(jPanelFK_IdLineaCategoriaPresupuestoVentasLineas);}

			this.isVisibilidadFK_IdLineaGrupo=isParaVendedorNegation;
			if(!this.isVisibilidadFK_IdLineaGrupo) {this.jTabbedPaneBusquedasPresupuestoVentasLineas.remove(jPanelFK_IdLineaGrupoPresupuestoVentasLineas);}

			this.isVisibilidadFK_IdLineaMarca=isParaVendedorNegation;
			if(!this.isVisibilidadFK_IdLineaMarca) {this.jTabbedPaneBusquedasPresupuestoVentasLineas.remove(jPanelFK_IdLineaMarcaPresupuestoVentasLineas);}

			this.isVisibilidadFK_IdPais=isParaVendedorNegation;
			if(!this.isVisibilidadFK_IdPais) {this.jTabbedPaneBusquedasPresupuestoVentasLineas.remove(jPanelFK_IdPaisPresupuestoVentasLineas);}

			this.isVisibilidadFK_IdVendedor=isParaVendedor;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasPresupuestoVentasLineas.remove(jPanelFK_IdVendedorPresupuestoVentasLineas);}

			this.isVisibilidadFK_IdZona=isParaVendedorNegation;
			if(!this.isVisibilidadFK_IdZona) {this.jTabbedPaneBusquedasPresupuestoVentasLineas.remove(jPanelFK_IdZonaPresupuestoVentasLineas);}
		}
		
	}

	public void setVisibilidadBusquedasParaPais(Boolean isParaPais){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaPaisNegation=!isParaPais;

			this.isVisibilidadFK_IdCiudad=isParaPaisNegation;
			if(!this.isVisibilidadFK_IdCiudad) {this.jTabbedPaneBusquedasPresupuestoVentasLineas.remove(jPanelFK_IdCiudadPresupuestoVentasLineas);}

			this.isVisibilidadFK_IdLinea=isParaPaisNegation;
			if(!this.isVisibilidadFK_IdLinea) {this.jTabbedPaneBusquedasPresupuestoVentasLineas.remove(jPanelFK_IdLineaPresupuestoVentasLineas);}

			this.isVisibilidadFK_IdLineaCategoria=isParaPaisNegation;
			if(!this.isVisibilidadFK_IdLineaCategoria) {this.jTabbedPaneBusquedasPresupuestoVentasLineas.remove(jPanelFK_IdLineaCategoriaPresupuestoVentasLineas);}

			this.isVisibilidadFK_IdLineaGrupo=isParaPaisNegation;
			if(!this.isVisibilidadFK_IdLineaGrupo) {this.jTabbedPaneBusquedasPresupuestoVentasLineas.remove(jPanelFK_IdLineaGrupoPresupuestoVentasLineas);}

			this.isVisibilidadFK_IdLineaMarca=isParaPaisNegation;
			if(!this.isVisibilidadFK_IdLineaMarca) {this.jTabbedPaneBusquedasPresupuestoVentasLineas.remove(jPanelFK_IdLineaMarcaPresupuestoVentasLineas);}

			this.isVisibilidadFK_IdPais=isParaPais;
			if(!this.isVisibilidadFK_IdPais) {this.jTabbedPaneBusquedasPresupuestoVentasLineas.remove(jPanelFK_IdPaisPresupuestoVentasLineas);}

			this.isVisibilidadFK_IdVendedor=isParaPaisNegation;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasPresupuestoVentasLineas.remove(jPanelFK_IdVendedorPresupuestoVentasLineas);}

			this.isVisibilidadFK_IdZona=isParaPaisNegation;
			if(!this.isVisibilidadFK_IdZona) {this.jTabbedPaneBusquedasPresupuestoVentasLineas.remove(jPanelFK_IdZonaPresupuestoVentasLineas);}
		}
		
	}

	public void setVisibilidadBusquedasParaCiudad(Boolean isParaCiudad){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaCiudadNegation=!isParaCiudad;

			this.isVisibilidadFK_IdCiudad=isParaCiudad;
			if(!this.isVisibilidadFK_IdCiudad) {this.jTabbedPaneBusquedasPresupuestoVentasLineas.remove(jPanelFK_IdCiudadPresupuestoVentasLineas);}

			this.isVisibilidadFK_IdLinea=isParaCiudadNegation;
			if(!this.isVisibilidadFK_IdLinea) {this.jTabbedPaneBusquedasPresupuestoVentasLineas.remove(jPanelFK_IdLineaPresupuestoVentasLineas);}

			this.isVisibilidadFK_IdLineaCategoria=isParaCiudadNegation;
			if(!this.isVisibilidadFK_IdLineaCategoria) {this.jTabbedPaneBusquedasPresupuestoVentasLineas.remove(jPanelFK_IdLineaCategoriaPresupuestoVentasLineas);}

			this.isVisibilidadFK_IdLineaGrupo=isParaCiudadNegation;
			if(!this.isVisibilidadFK_IdLineaGrupo) {this.jTabbedPaneBusquedasPresupuestoVentasLineas.remove(jPanelFK_IdLineaGrupoPresupuestoVentasLineas);}

			this.isVisibilidadFK_IdLineaMarca=isParaCiudadNegation;
			if(!this.isVisibilidadFK_IdLineaMarca) {this.jTabbedPaneBusquedasPresupuestoVentasLineas.remove(jPanelFK_IdLineaMarcaPresupuestoVentasLineas);}

			this.isVisibilidadFK_IdPais=isParaCiudadNegation;
			if(!this.isVisibilidadFK_IdPais) {this.jTabbedPaneBusquedasPresupuestoVentasLineas.remove(jPanelFK_IdPaisPresupuestoVentasLineas);}

			this.isVisibilidadFK_IdVendedor=isParaCiudadNegation;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasPresupuestoVentasLineas.remove(jPanelFK_IdVendedorPresupuestoVentasLineas);}

			this.isVisibilidadFK_IdZona=isParaCiudadNegation;
			if(!this.isVisibilidadFK_IdZona) {this.jTabbedPaneBusquedasPresupuestoVentasLineas.remove(jPanelFK_IdZonaPresupuestoVentasLineas);}
		}
		
	}

	public void setVisibilidadBusquedasParaZona(Boolean isParaZona){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaZonaNegation=!isParaZona;

			this.isVisibilidadFK_IdCiudad=isParaZonaNegation;
			if(!this.isVisibilidadFK_IdCiudad) {this.jTabbedPaneBusquedasPresupuestoVentasLineas.remove(jPanelFK_IdCiudadPresupuestoVentasLineas);}

			this.isVisibilidadFK_IdLinea=isParaZonaNegation;
			if(!this.isVisibilidadFK_IdLinea) {this.jTabbedPaneBusquedasPresupuestoVentasLineas.remove(jPanelFK_IdLineaPresupuestoVentasLineas);}

			this.isVisibilidadFK_IdLineaCategoria=isParaZonaNegation;
			if(!this.isVisibilidadFK_IdLineaCategoria) {this.jTabbedPaneBusquedasPresupuestoVentasLineas.remove(jPanelFK_IdLineaCategoriaPresupuestoVentasLineas);}

			this.isVisibilidadFK_IdLineaGrupo=isParaZonaNegation;
			if(!this.isVisibilidadFK_IdLineaGrupo) {this.jTabbedPaneBusquedasPresupuestoVentasLineas.remove(jPanelFK_IdLineaGrupoPresupuestoVentasLineas);}

			this.isVisibilidadFK_IdLineaMarca=isParaZonaNegation;
			if(!this.isVisibilidadFK_IdLineaMarca) {this.jTabbedPaneBusquedasPresupuestoVentasLineas.remove(jPanelFK_IdLineaMarcaPresupuestoVentasLineas);}

			this.isVisibilidadFK_IdPais=isParaZonaNegation;
			if(!this.isVisibilidadFK_IdPais) {this.jTabbedPaneBusquedasPresupuestoVentasLineas.remove(jPanelFK_IdPaisPresupuestoVentasLineas);}

			this.isVisibilidadFK_IdVendedor=isParaZonaNegation;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasPresupuestoVentasLineas.remove(jPanelFK_IdVendedorPresupuestoVentasLineas);}

			this.isVisibilidadFK_IdZona=isParaZona;
			if(!this.isVisibilidadFK_IdZona) {this.jTabbedPaneBusquedasPresupuestoVentasLineas.remove(jPanelFK_IdZonaPresupuestoVentasLineas);}
		}
		
	}

	public void setVisibilidadBusquedasParaLinea(Boolean isParaLinea){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaLineaNegation=!isParaLinea;

			this.isVisibilidadFK_IdCiudad=isParaLineaNegation;
			if(!this.isVisibilidadFK_IdCiudad) {this.jTabbedPaneBusquedasPresupuestoVentasLineas.remove(jPanelFK_IdCiudadPresupuestoVentasLineas);}

			this.isVisibilidadFK_IdLinea=isParaLinea;
			if(!this.isVisibilidadFK_IdLinea) {this.jTabbedPaneBusquedasPresupuestoVentasLineas.remove(jPanelFK_IdLineaPresupuestoVentasLineas);}

			this.isVisibilidadFK_IdLineaCategoria=isParaLineaNegation;
			if(!this.isVisibilidadFK_IdLineaCategoria) {this.jTabbedPaneBusquedasPresupuestoVentasLineas.remove(jPanelFK_IdLineaCategoriaPresupuestoVentasLineas);}

			this.isVisibilidadFK_IdLineaGrupo=isParaLineaNegation;
			if(!this.isVisibilidadFK_IdLineaGrupo) {this.jTabbedPaneBusquedasPresupuestoVentasLineas.remove(jPanelFK_IdLineaGrupoPresupuestoVentasLineas);}

			this.isVisibilidadFK_IdLineaMarca=isParaLineaNegation;
			if(!this.isVisibilidadFK_IdLineaMarca) {this.jTabbedPaneBusquedasPresupuestoVentasLineas.remove(jPanelFK_IdLineaMarcaPresupuestoVentasLineas);}

			this.isVisibilidadFK_IdPais=isParaLineaNegation;
			if(!this.isVisibilidadFK_IdPais) {this.jTabbedPaneBusquedasPresupuestoVentasLineas.remove(jPanelFK_IdPaisPresupuestoVentasLineas);}

			this.isVisibilidadFK_IdVendedor=isParaLineaNegation;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasPresupuestoVentasLineas.remove(jPanelFK_IdVendedorPresupuestoVentasLineas);}

			this.isVisibilidadFK_IdZona=isParaLineaNegation;
			if(!this.isVisibilidadFK_IdZona) {this.jTabbedPaneBusquedasPresupuestoVentasLineas.remove(jPanelFK_IdZonaPresupuestoVentasLineas);}
		}
		
	}

	public void setVisibilidadBusquedasParaLineaGrupo(Boolean isParaLineaGrupo){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaLineaGrupoNegation=!isParaLineaGrupo;

			this.isVisibilidadFK_IdCiudad=isParaLineaGrupoNegation;
			if(!this.isVisibilidadFK_IdCiudad) {this.jTabbedPaneBusquedasPresupuestoVentasLineas.remove(jPanelFK_IdCiudadPresupuestoVentasLineas);}

			this.isVisibilidadFK_IdLinea=isParaLineaGrupoNegation;
			if(!this.isVisibilidadFK_IdLinea) {this.jTabbedPaneBusquedasPresupuestoVentasLineas.remove(jPanelFK_IdLineaPresupuestoVentasLineas);}

			this.isVisibilidadFK_IdLineaCategoria=isParaLineaGrupoNegation;
			if(!this.isVisibilidadFK_IdLineaCategoria) {this.jTabbedPaneBusquedasPresupuestoVentasLineas.remove(jPanelFK_IdLineaCategoriaPresupuestoVentasLineas);}

			this.isVisibilidadFK_IdLineaGrupo=isParaLineaGrupo;
			if(!this.isVisibilidadFK_IdLineaGrupo) {this.jTabbedPaneBusquedasPresupuestoVentasLineas.remove(jPanelFK_IdLineaGrupoPresupuestoVentasLineas);}

			this.isVisibilidadFK_IdLineaMarca=isParaLineaGrupoNegation;
			if(!this.isVisibilidadFK_IdLineaMarca) {this.jTabbedPaneBusquedasPresupuestoVentasLineas.remove(jPanelFK_IdLineaMarcaPresupuestoVentasLineas);}

			this.isVisibilidadFK_IdPais=isParaLineaGrupoNegation;
			if(!this.isVisibilidadFK_IdPais) {this.jTabbedPaneBusquedasPresupuestoVentasLineas.remove(jPanelFK_IdPaisPresupuestoVentasLineas);}

			this.isVisibilidadFK_IdVendedor=isParaLineaGrupoNegation;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasPresupuestoVentasLineas.remove(jPanelFK_IdVendedorPresupuestoVentasLineas);}

			this.isVisibilidadFK_IdZona=isParaLineaGrupoNegation;
			if(!this.isVisibilidadFK_IdZona) {this.jTabbedPaneBusquedasPresupuestoVentasLineas.remove(jPanelFK_IdZonaPresupuestoVentasLineas);}
		}
		
	}

	public void setVisibilidadBusquedasParaLineaCategoria(Boolean isParaLineaCategoria){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaLineaCategoriaNegation=!isParaLineaCategoria;

			this.isVisibilidadFK_IdCiudad=isParaLineaCategoriaNegation;
			if(!this.isVisibilidadFK_IdCiudad) {this.jTabbedPaneBusquedasPresupuestoVentasLineas.remove(jPanelFK_IdCiudadPresupuestoVentasLineas);}

			this.isVisibilidadFK_IdLinea=isParaLineaCategoriaNegation;
			if(!this.isVisibilidadFK_IdLinea) {this.jTabbedPaneBusquedasPresupuestoVentasLineas.remove(jPanelFK_IdLineaPresupuestoVentasLineas);}

			this.isVisibilidadFK_IdLineaCategoria=isParaLineaCategoria;
			if(!this.isVisibilidadFK_IdLineaCategoria) {this.jTabbedPaneBusquedasPresupuestoVentasLineas.remove(jPanelFK_IdLineaCategoriaPresupuestoVentasLineas);}

			this.isVisibilidadFK_IdLineaGrupo=isParaLineaCategoriaNegation;
			if(!this.isVisibilidadFK_IdLineaGrupo) {this.jTabbedPaneBusquedasPresupuestoVentasLineas.remove(jPanelFK_IdLineaGrupoPresupuestoVentasLineas);}

			this.isVisibilidadFK_IdLineaMarca=isParaLineaCategoriaNegation;
			if(!this.isVisibilidadFK_IdLineaMarca) {this.jTabbedPaneBusquedasPresupuestoVentasLineas.remove(jPanelFK_IdLineaMarcaPresupuestoVentasLineas);}

			this.isVisibilidadFK_IdPais=isParaLineaCategoriaNegation;
			if(!this.isVisibilidadFK_IdPais) {this.jTabbedPaneBusquedasPresupuestoVentasLineas.remove(jPanelFK_IdPaisPresupuestoVentasLineas);}

			this.isVisibilidadFK_IdVendedor=isParaLineaCategoriaNegation;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasPresupuestoVentasLineas.remove(jPanelFK_IdVendedorPresupuestoVentasLineas);}

			this.isVisibilidadFK_IdZona=isParaLineaCategoriaNegation;
			if(!this.isVisibilidadFK_IdZona) {this.jTabbedPaneBusquedasPresupuestoVentasLineas.remove(jPanelFK_IdZonaPresupuestoVentasLineas);}
		}
		
	}

	public void setVisibilidadBusquedasParaLineaMarca(Boolean isParaLineaMarca){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaLineaMarcaNegation=!isParaLineaMarca;

			this.isVisibilidadFK_IdCiudad=isParaLineaMarcaNegation;
			if(!this.isVisibilidadFK_IdCiudad) {this.jTabbedPaneBusquedasPresupuestoVentasLineas.remove(jPanelFK_IdCiudadPresupuestoVentasLineas);}

			this.isVisibilidadFK_IdLinea=isParaLineaMarcaNegation;
			if(!this.isVisibilidadFK_IdLinea) {this.jTabbedPaneBusquedasPresupuestoVentasLineas.remove(jPanelFK_IdLineaPresupuestoVentasLineas);}

			this.isVisibilidadFK_IdLineaCategoria=isParaLineaMarcaNegation;
			if(!this.isVisibilidadFK_IdLineaCategoria) {this.jTabbedPaneBusquedasPresupuestoVentasLineas.remove(jPanelFK_IdLineaCategoriaPresupuestoVentasLineas);}

			this.isVisibilidadFK_IdLineaGrupo=isParaLineaMarcaNegation;
			if(!this.isVisibilidadFK_IdLineaGrupo) {this.jTabbedPaneBusquedasPresupuestoVentasLineas.remove(jPanelFK_IdLineaGrupoPresupuestoVentasLineas);}

			this.isVisibilidadFK_IdLineaMarca=isParaLineaMarca;
			if(!this.isVisibilidadFK_IdLineaMarca) {this.jTabbedPaneBusquedasPresupuestoVentasLineas.remove(jPanelFK_IdLineaMarcaPresupuestoVentasLineas);}

			this.isVisibilidadFK_IdPais=isParaLineaMarcaNegation;
			if(!this.isVisibilidadFK_IdPais) {this.jTabbedPaneBusquedasPresupuestoVentasLineas.remove(jPanelFK_IdPaisPresupuestoVentasLineas);}

			this.isVisibilidadFK_IdVendedor=isParaLineaMarcaNegation;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasPresupuestoVentasLineas.remove(jPanelFK_IdVendedorPresupuestoVentasLineas);}

			this.isVisibilidadFK_IdZona=isParaLineaMarcaNegation;
			if(!this.isVisibilidadFK_IdZona) {this.jTabbedPaneBusquedasPresupuestoVentasLineas.remove(jPanelFK_IdZonaPresupuestoVentasLineas);}
		}
		
	}
	
	
	
	
	
	
	public void guardarDatosBusquedaSession() throws Exception {
		
		//PresupuestoVentasLineasSessionBean presupuestoventaslineasSessionBean=new PresupuestoVentasLineasSessionBean();
		
		if(this.presupuestoventaslineasSessionBean==null) {
			this.presupuestoventaslineasSessionBean=new PresupuestoVentasLineasSessionBean();
		}
		
		this.presupuestoventaslineasSessionBean.setsUltimaBusquedaPresupuestoVentasLineas(this.getsAccionBusqueda());
		this.presupuestoventaslineasSessionBean.setiNumeroPaginacion(this.getiNumeroPaginacion());
		this.presupuestoventaslineasSessionBean.setiNumeroPaginacionPagina(this.getiNumeroPaginacionPagina());
		
		if(this.getsAccionBusqueda().equals("Todos")) {
			;
		}
		

		else if(this.getsAccionBusqueda().equals("FK_IdCiudad")) {
			presupuestoventaslineasSessionBean.setid_ciudad(this.getid_ciudadFK_IdCiudad());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdEjercicio")) {
			presupuestoventaslineasSessionBean.setid_ejercicio(this.getid_ejercicioFK_IdEjercicio());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdEmpresa")) {
			presupuestoventaslineasSessionBean.setid_empresa(this.getid_empresaFK_IdEmpresa());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdLinea")) {
			presupuestoventaslineasSessionBean.setid_linea(this.getid_lineaFK_IdLinea());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdLineaCategoria")) {
			presupuestoventaslineasSessionBean.setid_linea_categoria(this.getid_linea_categoriaFK_IdLineaCategoria());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdLineaGrupo")) {
			presupuestoventaslineasSessionBean.setid_linea_grupo(this.getid_linea_grupoFK_IdLineaGrupo());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdLineaMarca")) {
			presupuestoventaslineasSessionBean.setid_linea_marca(this.getid_linea_marcaFK_IdLineaMarca());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdPais")) {
			presupuestoventaslineasSessionBean.setid_pais(this.getid_paisFK_IdPais());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdPeriodo")) {
			presupuestoventaslineasSessionBean.setid_periodo(this.getid_periodoFK_IdPeriodo());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdSucursal")) {
			presupuestoventaslineasSessionBean.setid_sucursal(this.getid_sucursalFK_IdSucursal());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdVendedor")) {
			presupuestoventaslineasSessionBean.setid_vendedor(this.getid_vendedorFK_IdVendedor());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdZona")) {
			presupuestoventaslineasSessionBean.setid_zona(this.getid_zonaFK_IdZona());	
		}
		
	}
	
	public void traerDatosBusquedaDesdeSession() throws Exception {
		//PresupuestoVentasLineasSessionBean presupuestoventaslineasSessionBean=new PresupuestoVentasLineasSessionBean();
		
		if(this.presupuestoventaslineasSessionBean==null) {
			this.presupuestoventaslineasSessionBean=new PresupuestoVentasLineasSessionBean();
		}
		
		if(this.presupuestoventaslineasSessionBean.getsUltimaBusquedaPresupuestoVentasLineas()!=null&&!this.presupuestoventaslineasSessionBean.getsUltimaBusquedaPresupuestoVentasLineas().equals("")) {
			this.setsAccionBusqueda(presupuestoventaslineasSessionBean.getsUltimaBusquedaPresupuestoVentasLineas());
			this.setiNumeroPaginacion(presupuestoventaslineasSessionBean.getiNumeroPaginacion());
			this.setiNumeroPaginacionPagina(presupuestoventaslineasSessionBean.getiNumeroPaginacionPagina());		
				
			if(this.getsAccionBusqueda().equals("Todos")) {
				;
			}
			

			 else if(this.getsAccionBusqueda().equals("FK_IdCiudad")) {
				this.setid_ciudadFK_IdCiudad(presupuestoventaslineasSessionBean.getid_ciudad());
				presupuestoventaslineasSessionBean.setid_ciudad(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdEjercicio")) {
				this.setid_ejercicioFK_IdEjercicio(presupuestoventaslineasSessionBean.getid_ejercicio());
				presupuestoventaslineasSessionBean.setid_ejercicio(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdEmpresa")) {
				this.setid_empresaFK_IdEmpresa(presupuestoventaslineasSessionBean.getid_empresa());
				presupuestoventaslineasSessionBean.setid_empresa(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdLinea")) {
				this.setid_lineaFK_IdLinea(presupuestoventaslineasSessionBean.getid_linea());
				presupuestoventaslineasSessionBean.setid_linea(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdLineaCategoria")) {
				this.setid_linea_categoriaFK_IdLineaCategoria(presupuestoventaslineasSessionBean.getid_linea_categoria());
				presupuestoventaslineasSessionBean.setid_linea_categoria(null);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdLineaGrupo")) {
				this.setid_linea_grupoFK_IdLineaGrupo(presupuestoventaslineasSessionBean.getid_linea_grupo());
				presupuestoventaslineasSessionBean.setid_linea_grupo(null);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdLineaMarca")) {
				this.setid_linea_marcaFK_IdLineaMarca(presupuestoventaslineasSessionBean.getid_linea_marca());
				presupuestoventaslineasSessionBean.setid_linea_marca(null);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdPais")) {
				this.setid_paisFK_IdPais(presupuestoventaslineasSessionBean.getid_pais());
				presupuestoventaslineasSessionBean.setid_pais(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdPeriodo")) {
				this.setid_periodoFK_IdPeriodo(presupuestoventaslineasSessionBean.getid_periodo());
				presupuestoventaslineasSessionBean.setid_periodo(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdSucursal")) {
				this.setid_sucursalFK_IdSucursal(presupuestoventaslineasSessionBean.getid_sucursal());
				presupuestoventaslineasSessionBean.setid_sucursal(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdVendedor")) {
				this.setid_vendedorFK_IdVendedor(presupuestoventaslineasSessionBean.getid_vendedor());
				presupuestoventaslineasSessionBean.setid_vendedor(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdZona")) {
				this.setid_zonaFK_IdZona(presupuestoventaslineasSessionBean.getid_zona());
				presupuestoventaslineasSessionBean.setid_zona(null);
			}
		}
		
		this.presupuestoventaslineasSessionBean.setsUltimaBusquedaPresupuestoVentasLineas("");
		this.presupuestoventaslineasSessionBean.setiNumeroPaginacion(PresupuestoVentasLineasConstantesFunciones.INUMEROPAGINACION);
		this.presupuestoventaslineasSessionBean.setiNumeroPaginacionPagina(0);
		
	}
	
	public void procesoActualizarFilaTotales(Boolean esCampoValor,String sTipo) {
		try {
			this.actualizarFilaTotales();
				
			this.traerValoresTablaTotales();
			
			this.inicializarActualizarBindingTablaPresupuestoVentasLineas(false);
			
			
			
			
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	
	
	public void updateBusquedasFormularioPresupuestoVentasLineas() {
		this.updateBorderResaltarBusquedasFormularioPresupuestoVentasLineas();
		this.updateVisibilidadBusquedasFormularioPresupuestoVentasLineas();
		this.updateHabilitarBusquedasFormularioPresupuestoVentasLineas();
	}
	
	public void updateBorderResaltarBusquedasFormularioPresupuestoVentasLineas() {					
	//BYDAN_BUSQUEDAS
		
	int index=0;
		
	if(this.jTabbedPaneBusquedasPresupuestoVentasLineas.getComponents().length>0) {
	

		if(this.presupuestoventaslineasConstantesFunciones.resaltarFK_IdCiudadPresupuestoVentasLineas!=null) {
			index= this.jTabbedPaneBusquedasPresupuestoVentasLineas.indexOfComponent(this.jPanelFK_IdCiudadPresupuestoVentasLineas);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasPresupuestoVentasLineas.getComponent(index);
				jPanel.setBorder(this.presupuestoventaslineasConstantesFunciones.resaltarFK_IdCiudadPresupuestoVentasLineas);
			}
		}

		if(this.presupuestoventaslineasConstantesFunciones.resaltarFK_IdLineaPresupuestoVentasLineas!=null) {
			index= this.jTabbedPaneBusquedasPresupuestoVentasLineas.indexOfComponent(this.jPanelFK_IdLineaPresupuestoVentasLineas);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasPresupuestoVentasLineas.getComponent(index);
				jPanel.setBorder(this.presupuestoventaslineasConstantesFunciones.resaltarFK_IdLineaPresupuestoVentasLineas);
			}
		}

		if(this.presupuestoventaslineasConstantesFunciones.resaltarFK_IdLineaCategoriaPresupuestoVentasLineas!=null) {
			index= this.jTabbedPaneBusquedasPresupuestoVentasLineas.indexOfComponent(this.jPanelFK_IdLineaCategoriaPresupuestoVentasLineas);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasPresupuestoVentasLineas.getComponent(index);
				jPanel.setBorder(this.presupuestoventaslineasConstantesFunciones.resaltarFK_IdLineaCategoriaPresupuestoVentasLineas);
			}
		}

		if(this.presupuestoventaslineasConstantesFunciones.resaltarFK_IdLineaGrupoPresupuestoVentasLineas!=null) {
			index= this.jTabbedPaneBusquedasPresupuestoVentasLineas.indexOfComponent(this.jPanelFK_IdLineaGrupoPresupuestoVentasLineas);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasPresupuestoVentasLineas.getComponent(index);
				jPanel.setBorder(this.presupuestoventaslineasConstantesFunciones.resaltarFK_IdLineaGrupoPresupuestoVentasLineas);
			}
		}

		if(this.presupuestoventaslineasConstantesFunciones.resaltarFK_IdLineaMarcaPresupuestoVentasLineas!=null) {
			index= this.jTabbedPaneBusquedasPresupuestoVentasLineas.indexOfComponent(this.jPanelFK_IdLineaMarcaPresupuestoVentasLineas);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasPresupuestoVentasLineas.getComponent(index);
				jPanel.setBorder(this.presupuestoventaslineasConstantesFunciones.resaltarFK_IdLineaMarcaPresupuestoVentasLineas);
			}
		}

		if(this.presupuestoventaslineasConstantesFunciones.resaltarFK_IdPaisPresupuestoVentasLineas!=null) {
			index= this.jTabbedPaneBusquedasPresupuestoVentasLineas.indexOfComponent(this.jPanelFK_IdPaisPresupuestoVentasLineas);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasPresupuestoVentasLineas.getComponent(index);
				jPanel.setBorder(this.presupuestoventaslineasConstantesFunciones.resaltarFK_IdPaisPresupuestoVentasLineas);
			}
		}

		if(this.presupuestoventaslineasConstantesFunciones.resaltarFK_IdVendedorPresupuestoVentasLineas!=null) {
			index= this.jTabbedPaneBusquedasPresupuestoVentasLineas.indexOfComponent(this.jPanelFK_IdVendedorPresupuestoVentasLineas);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasPresupuestoVentasLineas.getComponent(index);
				jPanel.setBorder(this.presupuestoventaslineasConstantesFunciones.resaltarFK_IdVendedorPresupuestoVentasLineas);
			}
		}

		if(this.presupuestoventaslineasConstantesFunciones.resaltarFK_IdZonaPresupuestoVentasLineas!=null) {
			index= this.jTabbedPaneBusquedasPresupuestoVentasLineas.indexOfComponent(this.jPanelFK_IdZonaPresupuestoVentasLineas);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasPresupuestoVentasLineas.getComponent(index);
				jPanel.setBorder(this.presupuestoventaslineasConstantesFunciones.resaltarFK_IdZonaPresupuestoVentasLineas);
			}
		}
	}	
	
	}
	
	public void updateVisibilidadBusquedasFormularioPresupuestoVentasLineas() {
	//BYDAN_BUSQUEDAS
	
	int index=0;
	JPanel jPanel=null;
		
	if(this.jTabbedPaneBusquedasPresupuestoVentasLineas.getComponents().length>0) {
	

			index= this.jTabbedPaneBusquedasPresupuestoVentasLineas.indexOfComponent(this.jPanelFK_IdCiudadPresupuestoVentasLineas);
			jPanel=(JPanel)this.jTabbedPaneBusquedasPresupuestoVentasLineas.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.presupuestoventaslineasConstantesFunciones.mostrarFK_IdCiudadPresupuestoVentasLineas);
			if(!this.presupuestoventaslineasConstantesFunciones.mostrarFK_IdCiudadPresupuestoVentasLineas && index>-1) {
				this.jTabbedPaneBusquedasPresupuestoVentasLineas.remove(index);
			}

			index= this.jTabbedPaneBusquedasPresupuestoVentasLineas.indexOfComponent(this.jPanelFK_IdLineaPresupuestoVentasLineas);
			jPanel=(JPanel)this.jTabbedPaneBusquedasPresupuestoVentasLineas.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.presupuestoventaslineasConstantesFunciones.mostrarFK_IdLineaPresupuestoVentasLineas);
			if(!this.presupuestoventaslineasConstantesFunciones.mostrarFK_IdLineaPresupuestoVentasLineas && index>-1) {
				this.jTabbedPaneBusquedasPresupuestoVentasLineas.remove(index);
			}

			index= this.jTabbedPaneBusquedasPresupuestoVentasLineas.indexOfComponent(this.jPanelFK_IdLineaCategoriaPresupuestoVentasLineas);
			jPanel=(JPanel)this.jTabbedPaneBusquedasPresupuestoVentasLineas.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.presupuestoventaslineasConstantesFunciones.mostrarFK_IdLineaCategoriaPresupuestoVentasLineas);
			if(!this.presupuestoventaslineasConstantesFunciones.mostrarFK_IdLineaCategoriaPresupuestoVentasLineas && index>-1) {
				this.jTabbedPaneBusquedasPresupuestoVentasLineas.remove(index);
			}

			index= this.jTabbedPaneBusquedasPresupuestoVentasLineas.indexOfComponent(this.jPanelFK_IdLineaGrupoPresupuestoVentasLineas);
			jPanel=(JPanel)this.jTabbedPaneBusquedasPresupuestoVentasLineas.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.presupuestoventaslineasConstantesFunciones.mostrarFK_IdLineaGrupoPresupuestoVentasLineas);
			if(!this.presupuestoventaslineasConstantesFunciones.mostrarFK_IdLineaGrupoPresupuestoVentasLineas && index>-1) {
				this.jTabbedPaneBusquedasPresupuestoVentasLineas.remove(index);
			}

			index= this.jTabbedPaneBusquedasPresupuestoVentasLineas.indexOfComponent(this.jPanelFK_IdLineaMarcaPresupuestoVentasLineas);
			jPanel=(JPanel)this.jTabbedPaneBusquedasPresupuestoVentasLineas.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.presupuestoventaslineasConstantesFunciones.mostrarFK_IdLineaMarcaPresupuestoVentasLineas);
			if(!this.presupuestoventaslineasConstantesFunciones.mostrarFK_IdLineaMarcaPresupuestoVentasLineas && index>-1) {
				this.jTabbedPaneBusquedasPresupuestoVentasLineas.remove(index);
			}

			index= this.jTabbedPaneBusquedasPresupuestoVentasLineas.indexOfComponent(this.jPanelFK_IdPaisPresupuestoVentasLineas);
			jPanel=(JPanel)this.jTabbedPaneBusquedasPresupuestoVentasLineas.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.presupuestoventaslineasConstantesFunciones.mostrarFK_IdPaisPresupuestoVentasLineas);
			if(!this.presupuestoventaslineasConstantesFunciones.mostrarFK_IdPaisPresupuestoVentasLineas && index>-1) {
				this.jTabbedPaneBusquedasPresupuestoVentasLineas.remove(index);
			}

			index= this.jTabbedPaneBusquedasPresupuestoVentasLineas.indexOfComponent(this.jPanelFK_IdVendedorPresupuestoVentasLineas);
			jPanel=(JPanel)this.jTabbedPaneBusquedasPresupuestoVentasLineas.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.presupuestoventaslineasConstantesFunciones.mostrarFK_IdVendedorPresupuestoVentasLineas);
			if(!this.presupuestoventaslineasConstantesFunciones.mostrarFK_IdVendedorPresupuestoVentasLineas && index>-1) {
				this.jTabbedPaneBusquedasPresupuestoVentasLineas.remove(index);
			}

			index= this.jTabbedPaneBusquedasPresupuestoVentasLineas.indexOfComponent(this.jPanelFK_IdZonaPresupuestoVentasLineas);
			jPanel=(JPanel)this.jTabbedPaneBusquedasPresupuestoVentasLineas.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.presupuestoventaslineasConstantesFunciones.mostrarFK_IdZonaPresupuestoVentasLineas);
			if(!this.presupuestoventaslineasConstantesFunciones.mostrarFK_IdZonaPresupuestoVentasLineas && index>-1) {
				this.jTabbedPaneBusquedasPresupuestoVentasLineas.remove(index);
			}
	}	
	
	}
	
	public void updateHabilitarBusquedasFormularioPresupuestoVentasLineas() {
	
	//BYDAN_BUSQUEDAS		
		int index=0;
		JPanel jPanel=null;
			
		if(this.jTabbedPaneBusquedasPresupuestoVentasLineas.getComponents().length>0) {
	

			index= this.jTabbedPaneBusquedasPresupuestoVentasLineas.indexOfComponent(this.jPanelFK_IdCiudadPresupuestoVentasLineas);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasPresupuestoVentasLineas.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.presupuestoventaslineasConstantesFunciones.activarFK_IdCiudadPresupuestoVentasLineas);
				this.jTabbedPaneBusquedasPresupuestoVentasLineas.setEnabledAt(index,this.presupuestoventaslineasConstantesFunciones.activarFK_IdCiudadPresupuestoVentasLineas);
			}

			index= this.jTabbedPaneBusquedasPresupuestoVentasLineas.indexOfComponent(this.jPanelFK_IdLineaPresupuestoVentasLineas);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasPresupuestoVentasLineas.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.presupuestoventaslineasConstantesFunciones.activarFK_IdLineaPresupuestoVentasLineas);
				this.jTabbedPaneBusquedasPresupuestoVentasLineas.setEnabledAt(index,this.presupuestoventaslineasConstantesFunciones.activarFK_IdLineaPresupuestoVentasLineas);
			}

			index= this.jTabbedPaneBusquedasPresupuestoVentasLineas.indexOfComponent(this.jPanelFK_IdLineaCategoriaPresupuestoVentasLineas);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasPresupuestoVentasLineas.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.presupuestoventaslineasConstantesFunciones.activarFK_IdLineaCategoriaPresupuestoVentasLineas);
				this.jTabbedPaneBusquedasPresupuestoVentasLineas.setEnabledAt(index,this.presupuestoventaslineasConstantesFunciones.activarFK_IdLineaCategoriaPresupuestoVentasLineas);
			}

			index= this.jTabbedPaneBusquedasPresupuestoVentasLineas.indexOfComponent(this.jPanelFK_IdLineaGrupoPresupuestoVentasLineas);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasPresupuestoVentasLineas.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.presupuestoventaslineasConstantesFunciones.activarFK_IdLineaGrupoPresupuestoVentasLineas);
				this.jTabbedPaneBusquedasPresupuestoVentasLineas.setEnabledAt(index,this.presupuestoventaslineasConstantesFunciones.activarFK_IdLineaGrupoPresupuestoVentasLineas);
			}

			index= this.jTabbedPaneBusquedasPresupuestoVentasLineas.indexOfComponent(this.jPanelFK_IdLineaMarcaPresupuestoVentasLineas);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasPresupuestoVentasLineas.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.presupuestoventaslineasConstantesFunciones.activarFK_IdLineaMarcaPresupuestoVentasLineas);
				this.jTabbedPaneBusquedasPresupuestoVentasLineas.setEnabledAt(index,this.presupuestoventaslineasConstantesFunciones.activarFK_IdLineaMarcaPresupuestoVentasLineas);
			}

			index= this.jTabbedPaneBusquedasPresupuestoVentasLineas.indexOfComponent(this.jPanelFK_IdPaisPresupuestoVentasLineas);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasPresupuestoVentasLineas.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.presupuestoventaslineasConstantesFunciones.activarFK_IdPaisPresupuestoVentasLineas);
				this.jTabbedPaneBusquedasPresupuestoVentasLineas.setEnabledAt(index,this.presupuestoventaslineasConstantesFunciones.activarFK_IdPaisPresupuestoVentasLineas);
			}

			index= this.jTabbedPaneBusquedasPresupuestoVentasLineas.indexOfComponent(this.jPanelFK_IdVendedorPresupuestoVentasLineas);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasPresupuestoVentasLineas.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.presupuestoventaslineasConstantesFunciones.activarFK_IdVendedorPresupuestoVentasLineas);
				this.jTabbedPaneBusquedasPresupuestoVentasLineas.setEnabledAt(index,this.presupuestoventaslineasConstantesFunciones.activarFK_IdVendedorPresupuestoVentasLineas);
			}

			index= this.jTabbedPaneBusquedasPresupuestoVentasLineas.indexOfComponent(this.jPanelFK_IdZonaPresupuestoVentasLineas);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasPresupuestoVentasLineas.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.presupuestoventaslineasConstantesFunciones.activarFK_IdZonaPresupuestoVentasLineas);
				this.jTabbedPaneBusquedasPresupuestoVentasLineas.setEnabledAt(index,this.presupuestoventaslineasConstantesFunciones.activarFK_IdZonaPresupuestoVentasLineas);
			}
		}	
	
	}
	
	
	public void resaltarPanelBusquedaPresupuestoVentasLineas(String sTipoBusqueda) {
		Boolean existe=false;
		//BYDAN_BUSQUEDAS
		
		int index=0;
		Border resaltar = Funciones2.getBorderResaltar(this.parametroGeneralUsuario,"TAB");

		if(sTipoBusqueda.equals("FK_IdCiudad")) {
			index= this.jTabbedPaneBusquedasPresupuestoVentasLineas.indexOfComponent(this.jPanelFK_IdCiudadPresupuestoVentasLineas);

			this.jTabbedPaneBusquedasPresupuestoVentasLineas.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasPresupuestoVentasLineas.getComponent(index);

			this.presupuestoventaslineasConstantesFunciones.setResaltarFK_IdCiudadPresupuestoVentasLineas(resaltar);

			jPanel.setBorder(this.presupuestoventaslineasConstantesFunciones.resaltarFK_IdCiudadPresupuestoVentasLineas);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdLinea")) {
			index= this.jTabbedPaneBusquedasPresupuestoVentasLineas.indexOfComponent(this.jPanelFK_IdLineaPresupuestoVentasLineas);

			this.jTabbedPaneBusquedasPresupuestoVentasLineas.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasPresupuestoVentasLineas.getComponent(index);

			this.presupuestoventaslineasConstantesFunciones.setResaltarFK_IdLineaPresupuestoVentasLineas(resaltar);

			jPanel.setBorder(this.presupuestoventaslineasConstantesFunciones.resaltarFK_IdLineaPresupuestoVentasLineas);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdLineaCategoria")) {
			index= this.jTabbedPaneBusquedasPresupuestoVentasLineas.indexOfComponent(this.jPanelFK_IdLineaCategoriaPresupuestoVentasLineas);

			this.jTabbedPaneBusquedasPresupuestoVentasLineas.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasPresupuestoVentasLineas.getComponent(index);

			this.presupuestoventaslineasConstantesFunciones.setResaltarFK_IdLineaCategoriaPresupuestoVentasLineas(resaltar);

			jPanel.setBorder(this.presupuestoventaslineasConstantesFunciones.resaltarFK_IdLineaCategoriaPresupuestoVentasLineas);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdLineaGrupo")) {
			index= this.jTabbedPaneBusquedasPresupuestoVentasLineas.indexOfComponent(this.jPanelFK_IdLineaGrupoPresupuestoVentasLineas);

			this.jTabbedPaneBusquedasPresupuestoVentasLineas.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasPresupuestoVentasLineas.getComponent(index);

			this.presupuestoventaslineasConstantesFunciones.setResaltarFK_IdLineaGrupoPresupuestoVentasLineas(resaltar);

			jPanel.setBorder(this.presupuestoventaslineasConstantesFunciones.resaltarFK_IdLineaGrupoPresupuestoVentasLineas);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdLineaMarca")) {
			index= this.jTabbedPaneBusquedasPresupuestoVentasLineas.indexOfComponent(this.jPanelFK_IdLineaMarcaPresupuestoVentasLineas);

			this.jTabbedPaneBusquedasPresupuestoVentasLineas.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasPresupuestoVentasLineas.getComponent(index);

			this.presupuestoventaslineasConstantesFunciones.setResaltarFK_IdLineaMarcaPresupuestoVentasLineas(resaltar);

			jPanel.setBorder(this.presupuestoventaslineasConstantesFunciones.resaltarFK_IdLineaMarcaPresupuestoVentasLineas);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdPais")) {
			index= this.jTabbedPaneBusquedasPresupuestoVentasLineas.indexOfComponent(this.jPanelFK_IdPaisPresupuestoVentasLineas);

			this.jTabbedPaneBusquedasPresupuestoVentasLineas.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasPresupuestoVentasLineas.getComponent(index);

			this.presupuestoventaslineasConstantesFunciones.setResaltarFK_IdPaisPresupuestoVentasLineas(resaltar);

			jPanel.setBorder(this.presupuestoventaslineasConstantesFunciones.resaltarFK_IdPaisPresupuestoVentasLineas);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdVendedor")) {
			index= this.jTabbedPaneBusquedasPresupuestoVentasLineas.indexOfComponent(this.jPanelFK_IdVendedorPresupuestoVentasLineas);

			this.jTabbedPaneBusquedasPresupuestoVentasLineas.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasPresupuestoVentasLineas.getComponent(index);

			this.presupuestoventaslineasConstantesFunciones.setResaltarFK_IdVendedorPresupuestoVentasLineas(resaltar);

			jPanel.setBorder(this.presupuestoventaslineasConstantesFunciones.resaltarFK_IdVendedorPresupuestoVentasLineas);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdZona")) {
			index= this.jTabbedPaneBusquedasPresupuestoVentasLineas.indexOfComponent(this.jPanelFK_IdZonaPresupuestoVentasLineas);

			this.jTabbedPaneBusquedasPresupuestoVentasLineas.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasPresupuestoVentasLineas.getComponent(index);

			this.presupuestoventaslineasConstantesFunciones.setResaltarFK_IdZonaPresupuestoVentasLineas(resaltar);

			jPanel.setBorder(this.presupuestoventaslineasConstantesFunciones.resaltarFK_IdZonaPresupuestoVentasLineas);
			existe=true;
		}
		

		if(existe) {
			
			this.jTtoolBarPresupuestoVentasLineas.setBorder(resaltar);
			
		}
	}	
	
	//NO FUNCIONA
	public void windowClosed(WindowEvent e) {	
	}
		
	public void windowClosing(WindowEvent e) {	    	    
	}

	public void windowOpened(WindowEvent e) {	    
	}

	public void windowIconified(WindowEvent e) {	    
	}

	public void windowDeiconified(WindowEvent e) {	    
	}

	public void windowActivated(WindowEvent e) {	    
	}

	public void windowDeactivated(WindowEvent e) {	    
	}

	public void windowGainedFocus(WindowEvent e) {	    
	}

	public void windowLostFocus(WindowEvent e) {	    
	}
	
	public void updateControlesFormularioPresupuestoVentasLineas() throws Exception {

		if(this.jInternalFrameDetalleFormPresupuestoVentasLineas==null) { //if(!this.conCargarFormDetalle) {			
			this.inicializarFormDetalle();
		}
		
		this.updateBorderResaltarControlesFormularioPresupuestoVentasLineas();
		this.updateVisibilidadResaltarControlesFormularioPresupuestoVentasLineas();
		this.updateHabilitarResaltarControlesFormularioPresupuestoVentasLineas();
		
	}
	
	public void updateBorderResaltarControlesFormularioPresupuestoVentasLineas() throws Exception {
		if(this.jInternalFrameDetalleFormPresupuestoVentasLineas==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
	
		if(this.presupuestoventaslineasConstantesFunciones.resaltaridPresupuestoVentasLineas!=null && this.jInternalFrameDetalleFormPresupuestoVentasLineas!=null) {this.jInternalFrameDetalleFormPresupuestoVentasLineas.jLabelidPresupuestoVentasLineas.setBorder(this.presupuestoventaslineasConstantesFunciones.resaltaridPresupuestoVentasLineas);}
		if(this.presupuestoventaslineasConstantesFunciones.resaltarid_empresaPresupuestoVentasLineas!=null && this.jInternalFrameDetalleFormPresupuestoVentasLineas!=null) {this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_empresaPresupuestoVentasLineas.setBorder(this.presupuestoventaslineasConstantesFunciones.resaltarid_empresaPresupuestoVentasLineas);}
		if(this.presupuestoventaslineasConstantesFunciones.resaltarid_sucursalPresupuestoVentasLineas!=null && this.jInternalFrameDetalleFormPresupuestoVentasLineas!=null) {this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_sucursalPresupuestoVentasLineas.setBorder(this.presupuestoventaslineasConstantesFunciones.resaltarid_sucursalPresupuestoVentasLineas);}
		if(this.presupuestoventaslineasConstantesFunciones.resaltarid_ejercicioPresupuestoVentasLineas!=null && this.jInternalFrameDetalleFormPresupuestoVentasLineas!=null) {this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_ejercicioPresupuestoVentasLineas.setBorder(this.presupuestoventaslineasConstantesFunciones.resaltarid_ejercicioPresupuestoVentasLineas);}
		if(this.presupuestoventaslineasConstantesFunciones.resaltarid_periodoPresupuestoVentasLineas!=null && this.jInternalFrameDetalleFormPresupuestoVentasLineas!=null) {this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_periodoPresupuestoVentasLineas.setBorder(this.presupuestoventaslineasConstantesFunciones.resaltarid_periodoPresupuestoVentasLineas);}
		if(this.presupuestoventaslineasConstantesFunciones.resaltarid_vendedorPresupuestoVentasLineas!=null && this.jInternalFrameDetalleFormPresupuestoVentasLineas!=null) {this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_vendedorPresupuestoVentasLineas.setBorder(this.presupuestoventaslineasConstantesFunciones.resaltarid_vendedorPresupuestoVentasLineas);}
		if(this.presupuestoventaslineasConstantesFunciones.resaltarid_paisPresupuestoVentasLineas!=null && this.jInternalFrameDetalleFormPresupuestoVentasLineas!=null) {this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_paisPresupuestoVentasLineas.setBorder(this.presupuestoventaslineasConstantesFunciones.resaltarid_paisPresupuestoVentasLineas);}
		if(this.presupuestoventaslineasConstantesFunciones.resaltarid_ciudadPresupuestoVentasLineas!=null && this.jInternalFrameDetalleFormPresupuestoVentasLineas!=null) {this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_ciudadPresupuestoVentasLineas.setBorder(this.presupuestoventaslineasConstantesFunciones.resaltarid_ciudadPresupuestoVentasLineas);}
		if(this.presupuestoventaslineasConstantesFunciones.resaltarid_zonaPresupuestoVentasLineas!=null && this.jInternalFrameDetalleFormPresupuestoVentasLineas!=null) {this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_zonaPresupuestoVentasLineas.setBorder(this.presupuestoventaslineasConstantesFunciones.resaltarid_zonaPresupuestoVentasLineas);}
		if(this.presupuestoventaslineasConstantesFunciones.resaltarid_lineaPresupuestoVentasLineas!=null && this.jInternalFrameDetalleFormPresupuestoVentasLineas!=null) {this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_lineaPresupuestoVentasLineas.setBorder(this.presupuestoventaslineasConstantesFunciones.resaltarid_lineaPresupuestoVentasLineas);}
		if(this.presupuestoventaslineasConstantesFunciones.resaltarid_linea_grupoPresupuestoVentasLineas!=null && this.jInternalFrameDetalleFormPresupuestoVentasLineas!=null) {this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_linea_grupoPresupuestoVentasLineas.setBorder(this.presupuestoventaslineasConstantesFunciones.resaltarid_linea_grupoPresupuestoVentasLineas);}
		if(this.presupuestoventaslineasConstantesFunciones.resaltarid_linea_categoriaPresupuestoVentasLineas!=null && this.jInternalFrameDetalleFormPresupuestoVentasLineas!=null) {this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_linea_categoriaPresupuestoVentasLineas.setBorder(this.presupuestoventaslineasConstantesFunciones.resaltarid_linea_categoriaPresupuestoVentasLineas);}
		if(this.presupuestoventaslineasConstantesFunciones.resaltarid_linea_marcaPresupuestoVentasLineas!=null && this.jInternalFrameDetalleFormPresupuestoVentasLineas!=null) {this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_linea_marcaPresupuestoVentasLineas.setBorder(this.presupuestoventaslineasConstantesFunciones.resaltarid_linea_marcaPresupuestoVentasLineas);}
		if(this.presupuestoventaslineasConstantesFunciones.resaltarprecioPresupuestoVentasLineas!=null && this.jInternalFrameDetalleFormPresupuestoVentasLineas!=null) {this.jInternalFrameDetalleFormPresupuestoVentasLineas.jTextFieldprecioPresupuestoVentasLineas.setBorder(this.presupuestoventaslineasConstantesFunciones.resaltarprecioPresupuestoVentasLineas);}
		if(this.presupuestoventaslineasConstantesFunciones.resaltarcantidadPresupuestoVentasLineas!=null && this.jInternalFrameDetalleFormPresupuestoVentasLineas!=null) {this.jInternalFrameDetalleFormPresupuestoVentasLineas.jTextFieldcantidadPresupuestoVentasLineas.setBorder(this.presupuestoventaslineasConstantesFunciones.resaltarcantidadPresupuestoVentasLineas);}
		if(this.presupuestoventaslineasConstantesFunciones.resaltarvalorPresupuestoVentasLineas!=null && this.jInternalFrameDetalleFormPresupuestoVentasLineas!=null) {this.jInternalFrameDetalleFormPresupuestoVentasLineas.jTextFieldvalorPresupuestoVentasLineas.setBorder(this.presupuestoventaslineasConstantesFunciones.resaltarvalorPresupuestoVentasLineas);}
		if(this.presupuestoventaslineasConstantesFunciones.resaltarporcentajePresupuestoVentasLineas!=null && this.jInternalFrameDetalleFormPresupuestoVentasLineas!=null) {this.jInternalFrameDetalleFormPresupuestoVentasLineas.jTextFieldporcentajePresupuestoVentasLineas.setBorder(this.presupuestoventaslineasConstantesFunciones.resaltarporcentajePresupuestoVentasLineas);}
		if(this.presupuestoventaslineasConstantesFunciones.resaltarcantidad_totalPresupuestoVentasLineas!=null && this.jInternalFrameDetalleFormPresupuestoVentasLineas!=null) {this.jInternalFrameDetalleFormPresupuestoVentasLineas.jTextFieldcantidad_totalPresupuestoVentasLineas.setBorder(this.presupuestoventaslineasConstantesFunciones.resaltarcantidad_totalPresupuestoVentasLineas);}
		if(this.presupuestoventaslineasConstantesFunciones.resaltarvalor_totalPresupuestoVentasLineas!=null && this.jInternalFrameDetalleFormPresupuestoVentasLineas!=null) {this.jInternalFrameDetalleFormPresupuestoVentasLineas.jTextFieldvalor_totalPresupuestoVentasLineas.setBorder(this.presupuestoventaslineasConstantesFunciones.resaltarvalor_totalPresupuestoVentasLineas);}
	}
	
	public void updateVisibilidadResaltarControlesFormularioPresupuestoVentasLineas() throws Exception {		
		if(this.jInternalFrameDetalleFormPresupuestoVentasLineas==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
		if(this.jInternalFrameDetalleFormPresupuestoVentasLineas!=null) {
	
		//this.jInternalFrameDetalleFormPresupuestoVentasLineas.jLabelidPresupuestoVentasLineas.setVisible(this.presupuestoventaslineasConstantesFunciones.mostraridPresupuestoVentasLineas);
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jPanelidPresupuestoVentasLineas.setVisible(this.presupuestoventaslineasConstantesFunciones.mostraridPresupuestoVentasLineas);
		//this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_empresaPresupuestoVentasLineas.setVisible(this.presupuestoventaslineasConstantesFunciones.mostrarid_empresaPresupuestoVentasLineas);
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jPanelid_empresaPresupuestoVentasLineas.setVisible(this.presupuestoventaslineasConstantesFunciones.mostrarid_empresaPresupuestoVentasLineas);
		//this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_sucursalPresupuestoVentasLineas.setVisible(this.presupuestoventaslineasConstantesFunciones.mostrarid_sucursalPresupuestoVentasLineas);
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jPanelid_sucursalPresupuestoVentasLineas.setVisible(this.presupuestoventaslineasConstantesFunciones.mostrarid_sucursalPresupuestoVentasLineas);
		//this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_ejercicioPresupuestoVentasLineas.setVisible(this.presupuestoventaslineasConstantesFunciones.mostrarid_ejercicioPresupuestoVentasLineas);
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jPanelid_ejercicioPresupuestoVentasLineas.setVisible(this.presupuestoventaslineasConstantesFunciones.mostrarid_ejercicioPresupuestoVentasLineas);
		//this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_periodoPresupuestoVentasLineas.setVisible(this.presupuestoventaslineasConstantesFunciones.mostrarid_periodoPresupuestoVentasLineas);
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jPanelid_periodoPresupuestoVentasLineas.setVisible(this.presupuestoventaslineasConstantesFunciones.mostrarid_periodoPresupuestoVentasLineas);
		//this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_vendedorPresupuestoVentasLineas.setVisible(this.presupuestoventaslineasConstantesFunciones.mostrarid_vendedorPresupuestoVentasLineas);
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jPanelid_vendedorPresupuestoVentasLineas.setVisible(this.presupuestoventaslineasConstantesFunciones.mostrarid_vendedorPresupuestoVentasLineas);
		//this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_paisPresupuestoVentasLineas.setVisible(this.presupuestoventaslineasConstantesFunciones.mostrarid_paisPresupuestoVentasLineas);
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jPanelid_paisPresupuestoVentasLineas.setVisible(this.presupuestoventaslineasConstantesFunciones.mostrarid_paisPresupuestoVentasLineas);
		//this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_ciudadPresupuestoVentasLineas.setVisible(this.presupuestoventaslineasConstantesFunciones.mostrarid_ciudadPresupuestoVentasLineas);
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jPanelid_ciudadPresupuestoVentasLineas.setVisible(this.presupuestoventaslineasConstantesFunciones.mostrarid_ciudadPresupuestoVentasLineas);
		//this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_zonaPresupuestoVentasLineas.setVisible(this.presupuestoventaslineasConstantesFunciones.mostrarid_zonaPresupuestoVentasLineas);
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jPanelid_zonaPresupuestoVentasLineas.setVisible(this.presupuestoventaslineasConstantesFunciones.mostrarid_zonaPresupuestoVentasLineas);
		//this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_lineaPresupuestoVentasLineas.setVisible(this.presupuestoventaslineasConstantesFunciones.mostrarid_lineaPresupuestoVentasLineas);
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jPanelid_lineaPresupuestoVentasLineas.setVisible(this.presupuestoventaslineasConstantesFunciones.mostrarid_lineaPresupuestoVentasLineas);
		//this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_linea_grupoPresupuestoVentasLineas.setVisible(this.presupuestoventaslineasConstantesFunciones.mostrarid_linea_grupoPresupuestoVentasLineas);
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jPanelid_linea_grupoPresupuestoVentasLineas.setVisible(this.presupuestoventaslineasConstantesFunciones.mostrarid_linea_grupoPresupuestoVentasLineas);
		//this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_linea_categoriaPresupuestoVentasLineas.setVisible(this.presupuestoventaslineasConstantesFunciones.mostrarid_linea_categoriaPresupuestoVentasLineas);
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jPanelid_linea_categoriaPresupuestoVentasLineas.setVisible(this.presupuestoventaslineasConstantesFunciones.mostrarid_linea_categoriaPresupuestoVentasLineas);
		//this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_linea_marcaPresupuestoVentasLineas.setVisible(this.presupuestoventaslineasConstantesFunciones.mostrarid_linea_marcaPresupuestoVentasLineas);
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jPanelid_linea_marcaPresupuestoVentasLineas.setVisible(this.presupuestoventaslineasConstantesFunciones.mostrarid_linea_marcaPresupuestoVentasLineas);
		//this.jInternalFrameDetalleFormPresupuestoVentasLineas.jTextFieldprecioPresupuestoVentasLineas.setVisible(this.presupuestoventaslineasConstantesFunciones.mostrarprecioPresupuestoVentasLineas);
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jPanelprecioPresupuestoVentasLineas.setVisible(this.presupuestoventaslineasConstantesFunciones.mostrarprecioPresupuestoVentasLineas);
		//this.jInternalFrameDetalleFormPresupuestoVentasLineas.jTextFieldcantidadPresupuestoVentasLineas.setVisible(this.presupuestoventaslineasConstantesFunciones.mostrarcantidadPresupuestoVentasLineas);
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jPanelcantidadPresupuestoVentasLineas.setVisible(this.presupuestoventaslineasConstantesFunciones.mostrarcantidadPresupuestoVentasLineas);
		//this.jInternalFrameDetalleFormPresupuestoVentasLineas.jTextFieldvalorPresupuestoVentasLineas.setVisible(this.presupuestoventaslineasConstantesFunciones.mostrarvalorPresupuestoVentasLineas);
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jPanelvalorPresupuestoVentasLineas.setVisible(this.presupuestoventaslineasConstantesFunciones.mostrarvalorPresupuestoVentasLineas);
		//this.jInternalFrameDetalleFormPresupuestoVentasLineas.jTextFieldporcentajePresupuestoVentasLineas.setVisible(this.presupuestoventaslineasConstantesFunciones.mostrarporcentajePresupuestoVentasLineas);
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jPanelporcentajePresupuestoVentasLineas.setVisible(this.presupuestoventaslineasConstantesFunciones.mostrarporcentajePresupuestoVentasLineas);
		//this.jInternalFrameDetalleFormPresupuestoVentasLineas.jTextFieldcantidad_totalPresupuestoVentasLineas.setVisible(this.presupuestoventaslineasConstantesFunciones.mostrarcantidad_totalPresupuestoVentasLineas);
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jPanelcantidad_totalPresupuestoVentasLineas.setVisible(this.presupuestoventaslineasConstantesFunciones.mostrarcantidad_totalPresupuestoVentasLineas);
		//this.jInternalFrameDetalleFormPresupuestoVentasLineas.jTextFieldvalor_totalPresupuestoVentasLineas.setVisible(this.presupuestoventaslineasConstantesFunciones.mostrarvalor_totalPresupuestoVentasLineas);
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jPanelvalor_totalPresupuestoVentasLineas.setVisible(this.presupuestoventaslineasConstantesFunciones.mostrarvalor_totalPresupuestoVentasLineas);
		}
	}
	
	public void updateHabilitarResaltarControlesFormularioPresupuestoVentasLineas() throws Exception {
		if(this.jInternalFrameDetalleFormPresupuestoVentasLineas==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
		if(this.jInternalFrameDetalleFormPresupuestoVentasLineas!=null) {
	
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jLabelidPresupuestoVentasLineas.setEnabled(this.presupuestoventaslineasConstantesFunciones.activaridPresupuestoVentasLineas);
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_empresaPresupuestoVentasLineas.setEnabled(this.presupuestoventaslineasConstantesFunciones.activarid_empresaPresupuestoVentasLineas);
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_sucursalPresupuestoVentasLineas.setEnabled(this.presupuestoventaslineasConstantesFunciones.activarid_sucursalPresupuestoVentasLineas);
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_ejercicioPresupuestoVentasLineas.setEnabled(this.presupuestoventaslineasConstantesFunciones.activarid_ejercicioPresupuestoVentasLineas);
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_periodoPresupuestoVentasLineas.setEnabled(this.presupuestoventaslineasConstantesFunciones.activarid_periodoPresupuestoVentasLineas);
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_vendedorPresupuestoVentasLineas.setEnabled(this.presupuestoventaslineasConstantesFunciones.activarid_vendedorPresupuestoVentasLineas);
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_paisPresupuestoVentasLineas.setEnabled(this.presupuestoventaslineasConstantesFunciones.activarid_paisPresupuestoVentasLineas);
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_ciudadPresupuestoVentasLineas.setEnabled(this.presupuestoventaslineasConstantesFunciones.activarid_ciudadPresupuestoVentasLineas);
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_zonaPresupuestoVentasLineas.setEnabled(this.presupuestoventaslineasConstantesFunciones.activarid_zonaPresupuestoVentasLineas);
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_lineaPresupuestoVentasLineas.setEnabled(this.presupuestoventaslineasConstantesFunciones.activarid_lineaPresupuestoVentasLineas);
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_linea_grupoPresupuestoVentasLineas.setEnabled(this.presupuestoventaslineasConstantesFunciones.activarid_linea_grupoPresupuestoVentasLineas);
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_linea_categoriaPresupuestoVentasLineas.setEnabled(this.presupuestoventaslineasConstantesFunciones.activarid_linea_categoriaPresupuestoVentasLineas);
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jComboBoxid_linea_marcaPresupuestoVentasLineas.setEnabled(this.presupuestoventaslineasConstantesFunciones.activarid_linea_marcaPresupuestoVentasLineas);
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jTextFieldprecioPresupuestoVentasLineas.setEnabled(this.presupuestoventaslineasConstantesFunciones.activarprecioPresupuestoVentasLineas);
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jTextFieldcantidadPresupuestoVentasLineas.setEnabled(this.presupuestoventaslineasConstantesFunciones.activarcantidadPresupuestoVentasLineas);
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jTextFieldvalorPresupuestoVentasLineas.setEnabled(this.presupuestoventaslineasConstantesFunciones.activarvalorPresupuestoVentasLineas);
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jTextFieldporcentajePresupuestoVentasLineas.setEnabled(this.presupuestoventaslineasConstantesFunciones.activarporcentajePresupuestoVentasLineas);
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jTextFieldcantidad_totalPresupuestoVentasLineas.setEnabled(this.presupuestoventaslineasConstantesFunciones.activarcantidad_totalPresupuestoVentasLineas);
		this.jInternalFrameDetalleFormPresupuestoVentasLineas.jTextFieldvalor_totalPresupuestoVentasLineas.setEnabled(this.presupuestoventaslineasConstantesFunciones.activarvalor_totalPresupuestoVentasLineas);
		}
	}
	
		
}