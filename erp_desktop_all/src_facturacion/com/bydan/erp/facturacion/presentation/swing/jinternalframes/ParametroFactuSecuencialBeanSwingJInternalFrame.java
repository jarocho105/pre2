/*
*AVISO LEGAL
Â© Copyright
*Este programa esta protegido por la ley de derechos de autor.
*La reproduccion o distribucion ilicita de este programa o de cualquiera de
*sus partes esta penado por la ley con severas sanciones civiles y penales,
*y seran objeto de todas las sanciones legales que correspondan.

*Su contenido no puede copiarse para fines comerciales o de otras,
*ni puede mostrarse, incluso en una version modificada, en otros sitios Web.
Solo esta permitido colocar hipervinculos al sitio web.
*/
package com.bydan.erp.facturacion.presentation.swing.jinternalframes;




import com.bydan.erp.seguridad.business.entity.Usuario;
import com.bydan.erp.seguridad.business.entity.ResumenUsuario;
import com.bydan.erp.seguridad.business.entity.Opcion;
import com.bydan.erp.seguridad.business.entity.PerfilOpcion;
import com.bydan.erp.seguridad.business.entity.PerfilCampo;
import com.bydan.erp.seguridad.business.entity.PerfilAccion;
import com.bydan.erp.seguridad.business.entity.ParametroGeneralSg;
import com.bydan.erp.seguridad.business.entity.ParametroGeneralUsuario;
import com.bydan.erp.seguridad.business.entity.Modulo;
import com.bydan.erp.seguridad.business.entity.Accion;

import com.bydan.erp.seguridad.util.SistemaParameterReturnGeneralAdditional;
import com.bydan.erp.seguridad.util.SistemaParameterReturnGeneral;


//import com.bydan.erp.seguridad.business.entity.PerfilAccion;


import com.bydan.erp.seguridad.util.SistemaConstantesFunciones;
import com.bydan.erp.seguridad.util.SistemaConstantesFuncionesAdditional;
import com.bydan.erp.seguridad.business.logic.SistemaLogicAdditional;

import com.bydan.erp.facturacion.util.ParametroFactuSecuencialConstantesFunciones;
import com.bydan.erp.facturacion.util.ParametroFactuSecuencialParameterReturnGeneral;
//import com.bydan.erp.facturacion.util.ParametroFactuSecuencialParameterGeneral;
//import com.bydan.erp.facturacion.presentation.report.source.ParametroFactuSecuencialBean;
import com.bydan.framework.erp.business.dataaccess.ConstantesSql;
import com.bydan.framework.erp.business.entity.Classe;
import com.bydan.framework.erp.business.entity.DatoGeneral;
import com.bydan.framework.erp.business.entity.GeneralEntityParameterGeneral;
import com.bydan.framework.erp.business.entity.OrderBy;
import com.bydan.framework.erp.business.entity.DatoGeneralMinimo;
import com.bydan.framework.erp.business.entity.GeneralEntity;
import com.bydan.framework.erp.business.entity.Mensajes;
import com.bydan.framework.erp.business.entity.GeneralEntityParameterReturnGeneral;
//import com.bydan.framework.erp.business.entity.MaintenanceType;
import com.bydan.framework.erp.util.MaintenanceType;
import com.bydan.framework.erp.util.FuncionesReporte;
import com.bydan.framework.erp.business.logic.DatosCliente;
import com.bydan.framework.erp.business.logic.Pagination;

import com.bydan.erp.facturacion.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.framework.erp.presentation.desktop.swing.TablaGeneralTotalModel;
import com.bydan.framework.erp.presentation.desktop.swing.TablaGeneralOrderByModel;
import com.bydan.framework.erp.presentation.desktop.swing.DateConverter;
import com.bydan.framework.erp.presentation.desktop.swing.DateConverterFromDate;
import com.bydan.framework.erp.presentation.desktop.swing.DateRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.DateEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.BooleanRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.BooleanEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.TextFieldRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.RunnableProceso;
import com.bydan.framework.erp.presentation.desktop.swing.*;
//import com.bydan.framework.erp.presentation.desktop.swing.TextFieldEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.HeaderRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.JInternalFrameBase;
import com.bydan.framework.erp.presentation.desktop.swing.FuncionesSwing;
import com.bydan.framework.erp.presentation.desktop.swing.MainJFrame;
import com.bydan.framework.erp.resources.imagenes.AuxiliarImagenes;
import com.bydan.erp.facturacion.resources.reportes.AuxiliarReportes;


import com.bydan.erp.facturacion.util.*;
import com.bydan.erp.facturacion.business.logic.*;

import com.bydan.erp.seguridad.business.logic.*;
import com.bydan.erp.inventario.business.logic.*;
import com.bydan.erp.contabilidad.business.logic.*;
import com.bydan.erp.tesoreria.business.logic.*;

//EJB

//PARAMETROS


//EJB PARAMETROS

import com.bydan.framework.erp.business.logic.*;
import com.bydan.framework.erp.util.*;

import com.bydan.erp.facturacion.business.entity.*;
//import com.bydan.framework.erp.business.entity.ConexionBeanFace;
//import com.bydan.framework.erp.business.entity.Mensajes;


import com.bydan.erp.seguridad.presentation.swing.jinternalframes.*;
import com.bydan.erp.inventario.presentation.swing.jinternalframes.*;
import com.bydan.erp.contabilidad.presentation.swing.jinternalframes.*;
import com.bydan.erp.tesoreria.presentation.swing.jinternalframes.*;

import com.bydan.erp.seguridad.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.inventario.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.contabilidad.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.tesoreria.presentation.swing.jinternalframes.auxiliar.*;






import javax.imageio.ImageIO;
import java.net.NetworkInterface;
import java.net.InterfaceAddress;
import java.net.InetAddress;
import javax.naming.InitialContext;
import java.lang.Long;
import java.util.Date;
import java.util.Enumeration;
import java.util.Iterator;
import java.util.Set;
import java.util.HashSet;
import java.util.List;
import java.util.ArrayList;
import java.io.Serializable;
import java.util.Hashtable;
import java.util.Collections;
import java.io.File;
import java.io.FileInputStream;
import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.io.BufferedReader;
import java.io.FileReader;
import java.util.HashMap;
import java.util.Map;
import java.io.PrintWriter;
import java.sql.SQLException;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.transform.stream.StreamSource;

import org.xml.sax.EntityResolver;
import org.xml.sax.InputSource;
import org.xml.sax.SAXException;

import org.w3c.dom.Document;
import org.w3c.dom.Document;
import org.w3c.dom.NodeList;
import org.w3c.dom.Node;
import org.w3c.dom.Element;

import org.apache.poi.hssf.usermodel.HSSFCell;
import org.apache.poi.hssf.usermodel.HSSFRow;
import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellStyle;
import org.apache.poi.ss.usermodel.IndexedColors;
import org.apache.poi.ss.util.CellRangeAddress;

import javax.xml.transform.Transformer;
import javax.xml.transform.TransformerFactory;
import javax.xml.transform.dom.DOMSource;
import javax.xml.transform.stream.StreamResult;


import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JRRuntimeException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.engine.export.JRHtmlExporter;
import net.sf.jasperreports.j2ee.servlets.BaseHttpServlet;
import net.sf.jasperreports.engine.JRExporterParameter;
import net.sf.jasperreports.engine.data.JRBeanArrayDataSource;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import net.sf.jasperreports.view.JasperViewer;

import org.apache.log4j.Logger;

import com.bydan.framework.erp.business.entity.Reporte;


//VALIDACION
import org.hibernate.validator.ClassValidator;
import org.hibernate.validator.InvalidValue;

import net.sf.jasperreports.engine.JREmptyDataSource;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperExportManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperPrintManager;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.JasperRunManager;
import net.sf.jasperreports.engine.export.JExcelApiExporter;
import net.sf.jasperreports.engine.export.JRCsvExporter;
import net.sf.jasperreports.engine.export.JRRtfExporter;
import net.sf.jasperreports.engine.export.JRXlsExporter;
import net.sf.jasperreports.engine.export.JRXlsExporterParameter;
import net.sf.jasperreports.engine.util.JRSaver;
import net.sf.jasperreports.engine.xml.JRXmlWriter;


import com.bydan.erp.facturacion.presentation.web.jsf.sessionbean.*;

import java.util.EventObject;
import javax.swing.*;
import javax.swing.border.Border;
import javax.swing.border.TitledBorder;
import javax.swing.border.EmptyBorder;
import javax.swing.event.*;
import javax.swing.table.AbstractTableModel;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.TableColumn;
import javax.swing.table.TableCellEditor;
import javax.swing.table.TableCellRenderer;
import java.awt.*;
import java.awt.event.*;

import org.jdesktop.beansbinding.Binding.SyncFailure;
import org.jdesktop.beansbinding.BindingListener;
import org.jdesktop.beansbinding.Bindings;
import org.jdesktop.beansbinding.BeanProperty;
import org.jdesktop.beansbinding.ELProperty;
import org.jdesktop.beansbinding.AutoBinding.UpdateStrategy;
import org.jdesktop.beansbinding.PropertyStateEvent;
import org.jdesktop.swingbinding.JComboBoxBinding;
import org.jdesktop.swingbinding.SwingBindings;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeEvent;

import com.toedter.calendar.JDateChooser;


import com.bydan.erp.seguridad.business.entity.*;
import com.bydan.erp.inventario.business.entity.*;
import com.bydan.erp.contabilidad.business.entity.*;
import com.bydan.erp.tesoreria.business.entity.*;
import com.bydan.erp.seguridad.util.*;
import com.bydan.erp.inventario.util.*;
import com.bydan.erp.contabilidad.util.*;
import com.bydan.erp.tesoreria.util.*;
import com.bydan.erp.seguridad.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.inventario.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.contabilidad.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.tesoreria.presentation.web.jsf.sessionbean.*;


@SuppressWarnings("unused")
public class ParametroFactuSecuencialBeanSwingJInternalFrame extends ParametroFactuSecuencialJInternalFrame implements WindowListener,WindowFocusListener
{				
	
	public static final long serialVersionUID = 1L;
	
	public static Logger logger = Logger.getLogger(ParametroFactuSecuencialBeanSwingJInternalFrame.class);  
	
	public static ClassValidator<ParametroFactuSecuencial> parametrofactusecuencialValidator = new ClassValidator<ParametroFactuSecuencial>(ParametroFactuSecuencial.class);
	
	public InvalidValue[] invalidValues=null;
		

	//Ejb Foreign Keys
	
	public ParametroFactuSecuencial parametrofactusecuencial;	
	public ParametroFactuSecuencial parametrofactusecuencialAux;
	public ParametroFactuSecuencial parametrofactusecuencialAnterior;//USADO PARA MANEJAR FOCUS GAINED,LOST
	public ParametroFactuSecuencial parametrofactusecuencialTotales;
	public Long idParametroFactuSecuencialActual;
	public Long iIdNuevoParametroFactuSecuencial=0L;
	public int rowIndexActual=0;
	
	
	
	
	public String sFinalQueryComboEmpresa="";

	public List<Empresa> empresasForeignKey;

	public List<Empresa> getempresasForeignKey() {
		return empresasForeignKey;
	}

	public void setempresasForeignKey(List<Empresa> empresasForeignKey) {
		this.empresasForeignKey = empresasForeignKey;
	}

	//OBJETO FK ACTUAL
	public Empresa empresaForeignKey;

	public Empresa getempresaForeignKey() {
		return empresaForeignKey;
	}

	public void setempresaForeignKey(Empresa empresaForeignKey) {
		this.empresaForeignKey = empresaForeignKey;
	}

	public String sFinalQueryComboSucursal="";

	public List<Sucursal> sucursalsForeignKey;

	public List<Sucursal> getsucursalsForeignKey() {
		return sucursalsForeignKey;
	}

	public void setsucursalsForeignKey(List<Sucursal> sucursalsForeignKey) {
		this.sucursalsForeignKey = sucursalsForeignKey;
	}

	//OBJETO FK ACTUAL
	public Sucursal sucursalForeignKey;

	public Sucursal getsucursalForeignKey() {
		return sucursalForeignKey;
	}

	public void setsucursalForeignKey(Sucursal sucursalForeignKey) {
		this.sucursalForeignKey = sucursalForeignKey;
	}

	public String sFinalQueryComboTipoDocumentoGeneral="";

	public List<TipoDocumentoGeneral> tipodocumentogeneralsForeignKey;

	public List<TipoDocumentoGeneral> gettipodocumentogeneralsForeignKey() {
		return tipodocumentogeneralsForeignKey;
	}

	public void settipodocumentogeneralsForeignKey(List<TipoDocumentoGeneral> tipodocumentogeneralsForeignKey) {
		this.tipodocumentogeneralsForeignKey = tipodocumentogeneralsForeignKey;
	}

	//OBJETO FK ACTUAL
	public TipoDocumentoGeneral tipodocumentogeneralForeignKey;

	public TipoDocumentoGeneral gettipodocumentogeneralForeignKey() {
		return tipodocumentogeneralForeignKey;
	}

	public void settipodocumentogeneralForeignKey(TipoDocumentoGeneral tipodocumentogeneralForeignKey) {
		this.tipodocumentogeneralForeignKey = tipodocumentogeneralForeignKey;
	}

	public String sFinalQueryComboBodega="";

	public List<Bodega> bodegasForeignKey;

	public List<Bodega> getbodegasForeignKey() {
		return bodegasForeignKey;
	}

	public void setbodegasForeignKey(List<Bodega> bodegasForeignKey) {
		this.bodegasForeignKey = bodegasForeignKey;
	}

	//OBJETO FK ACTUAL
	public Bodega bodegaForeignKey;

	public Bodega getbodegaForeignKey() {
		return bodegaForeignKey;
	}

	public void setbodegaForeignKey(Bodega bodegaForeignKey) {
		this.bodegaForeignKey = bodegaForeignKey;
	}

	public String sFinalQueryComboTipoParamFactuPlazo="";

	public List<TipoParamFactuPlazo> tipoparamfactuplazosForeignKey;

	public List<TipoParamFactuPlazo> gettipoparamfactuplazosForeignKey() {
		return tipoparamfactuplazosForeignKey;
	}

	public void settipoparamfactuplazosForeignKey(List<TipoParamFactuPlazo> tipoparamfactuplazosForeignKey) {
		this.tipoparamfactuplazosForeignKey = tipoparamfactuplazosForeignKey;
	}

	//OBJETO FK ACTUAL
	public TipoParamFactuPlazo tipoparamfactuplazoForeignKey;

	public TipoParamFactuPlazo gettipoparamfactuplazoForeignKey() {
		return tipoparamfactuplazoForeignKey;
	}

	public void settipoparamfactuplazoForeignKey(TipoParamFactuPlazo tipoparamfactuplazoForeignKey) {
		this.tipoparamfactuplazoForeignKey = tipoparamfactuplazoForeignKey;
	}

	public String sFinalQueryComboFormato="";

	public List<Formato> formatosForeignKey;

	public List<Formato> getformatosForeignKey() {
		return formatosForeignKey;
	}

	public void setformatosForeignKey(List<Formato> formatosForeignKey) {
		this.formatosForeignKey = formatosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Formato formatoForeignKey;

	public Formato getformatoForeignKey() {
		return formatoForeignKey;
	}

	public void setformatoForeignKey(Formato formatoForeignKey) {
		this.formatoForeignKey = formatoForeignKey;
	}

	public String sFinalQueryComboBodegaTransferencia="";

	public List<Bodega> bodegatransferenciasForeignKey;

	public List<Bodega> getbodegatransferenciasForeignKey() {
		return bodegatransferenciasForeignKey;
	}

	public void setbodegatransferenciasForeignKey(List<Bodega> bodegatransferenciasForeignKey) {
		this.bodegatransferenciasForeignKey = bodegatransferenciasForeignKey;
	}

	//OBJETO FK ACTUAL
	public Bodega bodegatransferenciaForeignKey;

	public Bodega getbodegatransferenciaForeignKey() {
		return bodegatransferenciaForeignKey;
	}

	public void setbodegatransferenciaForeignKey(Bodega bodegatransferenciaForeignKey) {
		this.bodegatransferenciaForeignKey = bodegatransferenciaForeignKey;
	}

	public String sFinalQueryComboTransaccionTransferencia="";

	public List<Transaccion> transacciontransferenciasForeignKey;

	public List<Transaccion> gettransacciontransferenciasForeignKey() {
		return transacciontransferenciasForeignKey;
	}

	public void settransacciontransferenciasForeignKey(List<Transaccion> transacciontransferenciasForeignKey) {
		this.transacciontransferenciasForeignKey = transacciontransferenciasForeignKey;
	}

	//OBJETO FK ACTUAL
	public Transaccion transacciontransferenciaForeignKey;

	public Transaccion gettransacciontransferenciaForeignKey() {
		return transacciontransferenciaForeignKey;
	}

	public void settransacciontransferenciaForeignKey(Transaccion transacciontransferenciaForeignKey) {
		this.transacciontransferenciaForeignKey = transacciontransferenciaForeignKey;
	}

		
	
	
	
	
	
	
	
	//FALTA:PARA BUSQUEDAS POR CAMPO EN FORMULARIO
	public String sFinalQueryGeneral="";
	public Boolean isEntroOnLoad=false;
	public Boolean isErrorGuardar=false;
	
	public Boolean isGuardarCambiosEnLote=false;
	public Boolean isCargarCombosDependencia=false;
	public Boolean isSeleccionarTodos=false;
	public Boolean isSeleccionados=false;
	public Boolean conGraficoReporte=false;
	
	public Boolean isPostAccionNuevo=false;
	public Boolean isPostAccionSinCerrar=false;
	public Boolean isPostAccionSinMensaje=false;
	
	
	public Boolean esControlTabla=false;
	
	public Boolean isPermisoTodoParametroFactuSecuencial;
	public Boolean isPermisoNuevoParametroFactuSecuencial;
	public Boolean isPermisoActualizarParametroFactuSecuencial;
	public Boolean isPermisoActualizarOriginalParametroFactuSecuencial;
	public Boolean isPermisoEliminarParametroFactuSecuencial;
	public Boolean isPermisoGuardarCambiosParametroFactuSecuencial;
	public Boolean isPermisoConsultaParametroFactuSecuencial;
	public Boolean isPermisoBusquedaParametroFactuSecuencial;
	public Boolean isPermisoReporteParametroFactuSecuencial;
	public Boolean isPermisoPaginacionMedioParametroFactuSecuencial;
	public Boolean isPermisoPaginacionAltoParametroFactuSecuencial;
	public Boolean isPermisoPaginacionTodoParametroFactuSecuencial;
	public Boolean isPermisoCopiarParametroFactuSecuencial;
	public Boolean isPermisoVerFormParametroFactuSecuencial;
	public Boolean isPermisoDuplicarParametroFactuSecuencial;
	public Boolean isPermisoOrdenParametroFactuSecuencial;
	
	
	public ArrayList<DatoGeneral> arrDatoGeneral;
	public ArrayList<String> arrDatoGeneralNo;
	ArrayList<Classe> classesActual=new ArrayList<Classe>();
	
	public List<Accion> accions;	
	public List<Accion> accionsFormulario;
	
	
	public ArrayList<DatoGeneralMinimo> arrDatoGeneralMinimos;
	
	public ArrayList<Reporte> tiposArchivosReportes;
	public ArrayList<Reporte> tiposArchivosReportesDinamico;
	public ArrayList<Reporte> tiposReportes;
	public ArrayList<Reporte> tiposReportesDinamico;
	public ArrayList<Reporte> tiposGraficosReportes;
	public ArrayList<Reporte> tiposPaginacion;
	public ArrayList<Reporte> tiposRelaciones;
	public ArrayList<Reporte> tiposAcciones;
	public ArrayList<Reporte> tiposAccionesFormulario;
	public ArrayList<Reporte> tiposSeleccionar;
	
	public ArrayList<Reporte> tiposColumnasSelect;
	public ArrayList<Reporte> tiposRelacionesSelect;
	
	
	public Integer iNumeroPaginacion;
	public Integer iNumeroPaginacionPagina;
	public Pagination pagination;
	public DatosCliente datosCliente;
	public DatosDeep datosDeep;
	public String sTipoArchivoReporte="";
	public String sTipoArchivoReporteDinamico="";
	public String sTipoReporte="";
	public String sTipoReporteDinamico="";
	public String sTipoGraficoReporte="";
	public String sTipoPaginacion="";
	public String sTipoRelacion="";
	public String sTipoAccion="";
	public String sTipoAccionFormulario="";
	public String sTipoSeleccionar="";	
	public String sDetalleReporte="";
	public Boolean isMostrarNumeroPaginacion;
	public String sTipoReporteExtra="";
	public String sValorCampoGeneral="";
	public Boolean esReporteDinamico=false;
	public Boolean esReporteAccionProceso=false;
	public Boolean esRecargarFks=false;
	public String sPathReporteDinamico="";
	
	public ParametroFactuSecuencialParameterReturnGeneral parametrofactusecuencialReturnGeneral;
	public ParametroFactuSecuencialParameterReturnGeneral parametrofactusecuencialParameterGeneral;
	
	 	
	public JasperPrint jasperPrint = null;
	
	public Long lIdUsuarioSesion=0L;				
	
	public Boolean isEsNuevoParametroFactuSecuencial=false;
	public Boolean esParaAccionDesdeFormularioParametroFactuSecuencial=false;
	public Boolean isEsMantenimientoRelacionesRelacionadoUnico=false;
	public Boolean isEsMantenimientoRelaciones=false;
	public Boolean isEsMantenimientoRelacionado=false;	
	public Boolean isContieneImagenes=false;
		
	//public Boolean conTotales=false; //Viene heredado de JInternalFrameBase
	//public Boolean esParaBusquedaForeignKey=false;
	
	
	protected ParametroFactuSecuencialSessionBeanAdditional parametrofactusecuencialSessionBeanAdditional=null;
	
	public ParametroFactuSecuencialSessionBeanAdditional getParametroFactuSecuencialSessionBeanAdditional() {
		return this.parametrofactusecuencialSessionBeanAdditional;
	}
	
	public void setParametroFactuSecuencialSessionBeanAdditional(ParametroFactuSecuencialSessionBeanAdditional parametrofactusecuencialSessionBeanAdditional) {
		try {
			this.parametrofactusecuencialSessionBeanAdditional=parametrofactusecuencialSessionBeanAdditional;
		} catch(Exception e) {
			;
		}
	}
	
	
	
	
	protected ParametroFactuSecuencialBeanSwingJInternalFrameAdditional parametrofactusecuencialBeanSwingJInternalFrameAdditional=null;
	//public class ParametroFactuSecuencialBeanSwingJInternalFrame
	
	public ParametroFactuSecuencialBeanSwingJInternalFrameAdditional getParametroFactuSecuencialBeanSwingJInternalFrameAdditional() {
		return this.parametrofactusecuencialBeanSwingJInternalFrameAdditional;
	}
	
	public void setParametroFactuSecuencialBeanSwingJInternalFrameAdditional(ParametroFactuSecuencialBeanSwingJInternalFrameAdditional parametrofactusecuencialBeanSwingJInternalFrameAdditional) {
		try {
			this.parametrofactusecuencialBeanSwingJInternalFrameAdditional=parametrofactusecuencialBeanSwingJInternalFrameAdditional;
		} catch(Exception e) {
			;
		}
	}
	
	
	
	
	//ESTA EN PADRE
	
	//public ParametroFactuSecuencialLogic parametrofactusecuencialLogic;
	public SistemaLogicAdditional sistemaLogicAdditional;
	
	
	public ParametroFactuSecuencial parametrofactusecuencialBean;
	public ParametroFactuSecuencialConstantesFunciones parametrofactusecuencialConstantesFunciones;
	//public ParametroFactuSecuencialParameterReturnGeneral parametrofactusecuencialReturnGeneral;
	
	//FK
	
	public EmpresaLogic empresaLogic;
	public SucursalLogic sucursalLogic;
	public TipoDocumentoGeneralLogic tipodocumentogeneralLogic;
	public BodegaLogic bodegaLogic;
	public TipoParamFactuPlazoLogic tipoparamfactuplazoLogic;
	public FormatoLogic formatoLogic;
	public BodegaLogic bodegatransferenciaLogic;
	public TransaccionLogic transacciontransferenciaLogic;
	
	//PARAMETROS
	
	
	//public List<ParametroFactuSecuencial> parametrofactusecuencials;	
	//public List<ParametroFactuSecuencial> parametrofactusecuencialsEliminados;
	//public List<ParametroFactuSecuencial> parametrofactusecuencialsAux;
	
	public String sAccionMantenimiento="";
	public String sAccionBusqueda="";
	public String sAccionAdicional="";
	public String sUltimaBusqueda="";
	
	public Mensaje mensaje;
	
	
	public String sVisibilidadTablaBusquedas="";					
	public String sVisibilidadTablaElementos="";	
	public String sVisibilidadTablaAcciones="";			
	
	public Boolean isVisibilidadCeldaNuevoParametroFactuSecuencial=false;
	public Boolean isVisibilidadCeldaDuplicarParametroFactuSecuencial=true;
	public Boolean isVisibilidadCeldaCopiarParametroFactuSecuencial=true;
	public Boolean isVisibilidadCeldaVerFormParametroFactuSecuencial=true;
	public Boolean isVisibilidadCeldaOrdenParametroFactuSecuencial=true;
	public Boolean isVisibilidadCeldaNuevoRelacionesParametroFactuSecuencial=false;
	public Boolean isVisibilidadCeldaModificarParametroFactuSecuencial=false;
	public Boolean isVisibilidadCeldaActualizarParametroFactuSecuencial=false;
	public Boolean isVisibilidadCeldaEliminarParametroFactuSecuencial=false;
	public Boolean isVisibilidadCeldaCancelarParametroFactuSecuencial=false;
	public Boolean isVisibilidadCeldaGuardarParametroFactuSecuencial=false;	
	public Boolean isVisibilidadCeldaGuardarCambiosParametroFactuSecuencial=false;	
	
	
	public Boolean isVisibilidadFK_IdBodega=false;
	public Boolean isVisibilidadFK_IdBodegaTransferencia=false;
	public Boolean isVisibilidadFK_IdEmpresa=false;
	public Boolean isVisibilidadFK_IdFormato=false;
	public Boolean isVisibilidadFK_IdSucursal=false;
	public Boolean isVisibilidadFK_IdTipoDocumentoGeneral=false;
	public Boolean isVisibilidadFK_IdTipoParamFactuPlazo=false;
	public Boolean isVisibilidadFK_IdTransaccionTransferencia=false;
	
	public Long getiIdNuevoParametroFactuSecuencial() {
		return this.iIdNuevoParametroFactuSecuencial;
	}

	public void setiIdNuevoParametroFactuSecuencial(Long iIdNuevoParametroFactuSecuencial) {
		this.iIdNuevoParametroFactuSecuencial = iIdNuevoParametroFactuSecuencial;
	}
	
	public Long getidParametroFactuSecuencialActual() {
		return this.idParametroFactuSecuencialActual;
	}

	public void setidParametroFactuSecuencialActual(Long idParametroFactuSecuencialActual) {
		this.idParametroFactuSecuencialActual = idParametroFactuSecuencialActual;
	}
	
	public int getrowIndexActual() {
		return this.rowIndexActual;
	}

	public void setrowIndexActual(int rowIndexActual) {
		this.rowIndexActual=rowIndexActual;
	}
	
	
	public ParametroFactuSecuencial getparametrofactusecuencial() {
		return this.parametrofactusecuencial;
	}

	public void setparametrofactusecuencial(ParametroFactuSecuencial parametrofactusecuencial) {
		this.parametrofactusecuencial = parametrofactusecuencial;
	}
	
	public ParametroFactuSecuencial getparametrofactusecuencialAux() {
		return this.parametrofactusecuencialAux;
	}

	public void setparametrofactusecuencialAux(ParametroFactuSecuencial parametrofactusecuencialAux) {
		this.parametrofactusecuencialAux = parametrofactusecuencialAux;
	}				
	
	public ParametroFactuSecuencial getparametrofactusecuencialAnterior() {
		return this.parametrofactusecuencialAnterior;
	}

	public void setparametrofactusecuencialAnterior(ParametroFactuSecuencial parametrofactusecuencialAnterior) {
		this.parametrofactusecuencialAnterior = parametrofactusecuencialAnterior;
	}	
	
	public ParametroFactuSecuencial getparametrofactusecuencialTotales() {
		return this.parametrofactusecuencialTotales;
	}

	public void setparametrofactusecuencialTotales(ParametroFactuSecuencial parametrofactusecuencialTotales) {
		this.parametrofactusecuencialTotales = parametrofactusecuencialTotales;
	}	
	
	public ParametroFactuSecuencial getparametrofactusecuencialBean() {
		return this.parametrofactusecuencialBean;
	}

	public void setparametrofactusecuencialBean(ParametroFactuSecuencial parametrofactusecuencialBean) {
		this.parametrofactusecuencialBean = parametrofactusecuencialBean;
	}	
	
	public ParametroFactuSecuencialParameterReturnGeneral getparametrofactusecuencialReturnGeneral() {
		return this.parametrofactusecuencialReturnGeneral;
	}

	public void setparametrofactusecuencialReturnGeneral(ParametroFactuSecuencialParameterReturnGeneral parametrofactusecuencialReturnGeneral) {
		this.parametrofactusecuencialReturnGeneral = parametrofactusecuencialReturnGeneral;
	}	
	
	
	public Long id_bodegaFK_IdBodega=-1L;

	public Long getid_bodegaFK_IdBodega() {
		return this.id_bodegaFK_IdBodega;
	}

	public void setid_bodegaFK_IdBodega(Long id_bodegaFK_IdBodega) {
		this.id_bodegaFK_IdBodega = id_bodegaFK_IdBodega;
	}

	public Long id_bodega_transferenciaFK_IdBodegaTransferencia=-1L;

	public Long getid_bodega_transferenciaFK_IdBodegaTransferencia() {
		return this.id_bodega_transferenciaFK_IdBodegaTransferencia;
	}

	public void setid_bodega_transferenciaFK_IdBodegaTransferencia(Long id_bodega_transferenciaFK_IdBodegaTransferencia) {
		this.id_bodega_transferenciaFK_IdBodegaTransferencia = id_bodega_transferenciaFK_IdBodegaTransferencia;
	}

	public Long id_empresaFK_IdEmpresa=-1L;

	public Long getid_empresaFK_IdEmpresa() {
		return this.id_empresaFK_IdEmpresa;
	}

	public void setid_empresaFK_IdEmpresa(Long id_empresaFK_IdEmpresa) {
		this.id_empresaFK_IdEmpresa = id_empresaFK_IdEmpresa;
	}

	public Long id_formatoFK_IdFormato=-1L;

	public Long getid_formatoFK_IdFormato() {
		return this.id_formatoFK_IdFormato;
	}

	public void setid_formatoFK_IdFormato(Long id_formatoFK_IdFormato) {
		this.id_formatoFK_IdFormato = id_formatoFK_IdFormato;
	}

	public Long id_sucursalFK_IdSucursal=-1L;

	public Long getid_sucursalFK_IdSucursal() {
		return this.id_sucursalFK_IdSucursal;
	}

	public void setid_sucursalFK_IdSucursal(Long id_sucursalFK_IdSucursal) {
		this.id_sucursalFK_IdSucursal = id_sucursalFK_IdSucursal;
	}

	public Long id_tipo_documento_generalFK_IdTipoDocumentoGeneral=-1L;

	public Long getid_tipo_documento_generalFK_IdTipoDocumentoGeneral() {
		return this.id_tipo_documento_generalFK_IdTipoDocumentoGeneral;
	}

	public void setid_tipo_documento_generalFK_IdTipoDocumentoGeneral(Long id_tipo_documento_generalFK_IdTipoDocumentoGeneral) {
		this.id_tipo_documento_generalFK_IdTipoDocumentoGeneral = id_tipo_documento_generalFK_IdTipoDocumentoGeneral;
	}

	public Long id_tipo_param_factu_plazoFK_IdTipoParamFactuPlazo=-1L;

	public Long getid_tipo_param_factu_plazoFK_IdTipoParamFactuPlazo() {
		return this.id_tipo_param_factu_plazoFK_IdTipoParamFactuPlazo;
	}

	public void setid_tipo_param_factu_plazoFK_IdTipoParamFactuPlazo(Long id_tipo_param_factu_plazoFK_IdTipoParamFactuPlazo) {
		this.id_tipo_param_factu_plazoFK_IdTipoParamFactuPlazo = id_tipo_param_factu_plazoFK_IdTipoParamFactuPlazo;
	}

	public Long id_transaccion_transferenciaFK_IdTransaccionTransferencia=-1L;

	public Long getid_transaccion_transferenciaFK_IdTransaccionTransferencia() {
		return this.id_transaccion_transferenciaFK_IdTransaccionTransferencia;
	}

	public void setid_transaccion_transferenciaFK_IdTransaccionTransferencia(Long id_transaccion_transferenciaFK_IdTransaccionTransferencia) {
		this.id_transaccion_transferenciaFK_IdTransaccionTransferencia = id_transaccion_transferenciaFK_IdTransaccionTransferencia;
	}

		
	
	//ELEMENTOS TABLAS PARAMETOS
	
	
	
	
	
	
	//ELEMENTOS TABLAS PARAMETOS_FIN
	
	
	public ParametroFactuSecuencialLogic getParametroFactuSecuencialLogic()	{		
		return parametrofactusecuencialLogic;
	}

	public void setParametroFactuSecuencialLogic(ParametroFactuSecuencialLogic parametrofactusecuencialLogic) {
		this.parametrofactusecuencialLogic = parametrofactusecuencialLogic;
	}
	
	
	public void setsFinalQueryGeneral(String sFinalQueryGeneral) {
		this.sFinalQueryGeneral=sFinalQueryGeneral;
	}
	
	public String getsFinalQueryGeneral() {
		return this.sFinalQueryGeneral;
	}
		
	public Boolean getIsGuardarCambiosEnLote() {
		return isGuardarCambiosEnLote;
	}

	public void setIsGuardarCambiosEnLote(Boolean isGuardarCambiosEnLote) {
		this.isGuardarCambiosEnLote = isGuardarCambiosEnLote;
	}
	
	public Boolean getIsCargarCombosDependencia() {
		return isCargarCombosDependencia;
	}

	public void setIsCargarCombosDependencia(Boolean isCargarCombosDependencia) {
		this.isCargarCombosDependencia = isCargarCombosDependencia;
	}
	
	public Boolean getIsEsNuevoParametroFactuSecuencial() {
		return isEsNuevoParametroFactuSecuencial;
	}

	public void setIsEsNuevoParametroFactuSecuencial(Boolean isEsNuevoParametroFactuSecuencial) {
		this.isEsNuevoParametroFactuSecuencial = isEsNuevoParametroFactuSecuencial;
	}

	public Boolean getEsParaAccionDesdeFormularioParametroFactuSecuencial() {
		return esParaAccionDesdeFormularioParametroFactuSecuencial;
	}
	
	public void setEsParaAccionDesdeFormularioParametroFactuSecuencial(Boolean esParaAccionDesdeFormularioParametroFactuSecuencial) {
		this.esParaAccionDesdeFormularioParametroFactuSecuencial = esParaAccionDesdeFormularioParametroFactuSecuencial;
	}
	
	public Boolean getIsEsMantenimientoRelacionesRelacionadoUnico() {
		return isEsMantenimientoRelacionesRelacionadoUnico;
	}

	public void setIsEsMantenimientoRelacionesRelacionadoUnico(Boolean isEsMantenimientoRelacionesRelacionadoUnico) {
		this.isEsMantenimientoRelacionesRelacionadoUnico = isEsMantenimientoRelacionesRelacionadoUnico;
	}

	public Boolean getIsEsMantenimientoRelaciones() {
		return isEsMantenimientoRelaciones;
	}

	public void setIsEsMantenimientoRelaciones(Boolean isEsMantenimientoRelaciones) {
		this.isEsMantenimientoRelaciones = isEsMantenimientoRelaciones;
	}

	public Boolean getIsEsMantenimientoRelacionado() {
		return isEsMantenimientoRelacionado;
	}

	public void setIsEsMantenimientoRelacionado(Boolean isEsMantenimientoRelacionado) {
		this.isEsMantenimientoRelacionado = isEsMantenimientoRelacionado;
	}

	public Boolean getesParaBusquedaForeignKey() {
		return esParaBusquedaForeignKey;
	}

	public void setesParaBusquedaForeignKey(Boolean esParaBusquedaForeignKey) {
		this.esParaBusquedaForeignKey = esParaBusquedaForeignKey;
	}

	public Boolean getIsContieneImagenes() {
		return isContieneImagenes;
	}

	public void setIsContieneImagenes(Boolean isContieneImagenes) {
		this.isContieneImagenes = isContieneImagenes;
	}		
	
	
	public void cargarCombosEmpresasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.empresasForeignKey=new ArrayList<Empresa>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			EmpresaLogic empresaLogic=new EmpresaLogic();

			//empresaLogic.getEmpresaDataAccess().setIsForForeingKeyData(true);

			if(this.parametrofactusecuencialSessionBean==null) {
				this.parametrofactusecuencialSessionBean=new ParametroFactuSecuencialSessionBean();
			}

			if(!this.parametrofactusecuencialSessionBean.getisBusquedaDesdeForeignKeySesionEmpresa()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//empresaLogic.getEmpresaDataAccess().setIsForForeingKeyData(true);

					empresaLogic.getTodosEmpresasWithConnection(sFinalQuery,new Pagination());

					this.empresasForeignKey=empresaLogic.getEmpresas();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaEmpresa(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					empresaLogic.getEntityWithConnection(parametrofactusecuencialSessionBean.getlidEmpresaActual());
					this.empresasForeignKey.add(empresaLogic.getEmpresa());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosSucursalsForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.sucursalsForeignKey=new ArrayList<Sucursal>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			SucursalLogic sucursalLogic=new SucursalLogic();

			//sucursalLogic.getSucursalDataAccess().setIsForForeingKeyData(true);

			if(this.parametrofactusecuencialSessionBean==null) {
				this.parametrofactusecuencialSessionBean=new ParametroFactuSecuencialSessionBean();
			}

			if(!this.parametrofactusecuencialSessionBean.getisBusquedaDesdeForeignKeySesionSucursal()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//sucursalLogic.getSucursalDataAccess().setIsForForeingKeyData(true);

					sucursalLogic.getTodosSucursalsWithConnection(sFinalQuery,new Pagination());

					this.sucursalsForeignKey=sucursalLogic.getSucursals();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaSucursal(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					sucursalLogic.getEntityWithConnection(parametrofactusecuencialSessionBean.getlidSucursalActual());
					this.sucursalsForeignKey.add(sucursalLogic.getSucursal());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTipoDocumentoGeneralsForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.tipodocumentogeneralsForeignKey=new ArrayList<TipoDocumentoGeneral>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			TipoDocumentoGeneralLogic tipodocumentogeneralLogic=new TipoDocumentoGeneralLogic();

			//tipodocumentogeneralLogic.getTipoDocumentoGeneralDataAccess().setIsForForeingKeyData(true);

			if(this.parametrofactusecuencialSessionBean==null) {
				this.parametrofactusecuencialSessionBean=new ParametroFactuSecuencialSessionBean();
			}

			if(!this.parametrofactusecuencialSessionBean.getisBusquedaDesdeForeignKeySesionTipoDocumentoGeneral()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//tipodocumentogeneralLogic.getTipoDocumentoGeneralDataAccess().setIsForForeingKeyData(true);

					tipodocumentogeneralLogic.getTodosTipoDocumentoGeneralsWithConnection(sFinalQuery,new Pagination());

					this.tipodocumentogeneralsForeignKey=tipodocumentogeneralLogic.getTipoDocumentoGenerals();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTipoDocumentoGeneral(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipodocumentogeneralLogic.getEntityWithConnection(parametrofactusecuencialSessionBean.getlidTipoDocumentoGeneralActual());
					this.tipodocumentogeneralsForeignKey.add(tipodocumentogeneralLogic.getTipoDocumentoGeneral());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosBodegasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.bodegasForeignKey=new ArrayList<Bodega>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			BodegaLogic bodegaLogic=new BodegaLogic();

			//bodegaLogic.getBodegaDataAccess().setIsForForeingKeyData(true);

			if(this.parametrofactusecuencialSessionBean==null) {
				this.parametrofactusecuencialSessionBean=new ParametroFactuSecuencialSessionBean();
			}

			if(!this.parametrofactusecuencialSessionBean.getisBusquedaDesdeForeignKeySesionBodega()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//bodegaLogic.getBodegaDataAccess().setIsForForeingKeyData(true);

					bodegaLogic.getTodosBodegasWithConnection(sFinalQuery,new Pagination());

					this.bodegasForeignKey=bodegaLogic.getBodegas();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaBodega(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					bodegaLogic.getEntityWithConnection(parametrofactusecuencialSessionBean.getlidBodegaActual());
					this.bodegasForeignKey.add(bodegaLogic.getBodega());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTipoParamFactuPlazosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.tipoparamfactuplazosForeignKey=new ArrayList<TipoParamFactuPlazo>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			TipoParamFactuPlazoLogic tipoparamfactuplazoLogic=new TipoParamFactuPlazoLogic();

			//tipoparamfactuplazoLogic.getTipoParamFactuPlazoDataAccess().setIsForForeingKeyData(true);

			if(this.parametrofactusecuencialSessionBean==null) {
				this.parametrofactusecuencialSessionBean=new ParametroFactuSecuencialSessionBean();
			}

			if(!this.parametrofactusecuencialSessionBean.getisBusquedaDesdeForeignKeySesionTipoParamFactuPlazo()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//tipoparamfactuplazoLogic.getTipoParamFactuPlazoDataAccess().setIsForForeingKeyData(true);

					tipoparamfactuplazoLogic.getTodosTipoParamFactuPlazosWithConnection(sFinalQuery,new Pagination());

					this.tipoparamfactuplazosForeignKey=tipoparamfactuplazoLogic.getTipoParamFactuPlazos();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTipoParamFactuPlazo(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipoparamfactuplazoLogic.getEntityWithConnection(parametrofactusecuencialSessionBean.getlidTipoParamFactuPlazoActual());
					this.tipoparamfactuplazosForeignKey.add(tipoparamfactuplazoLogic.getTipoParamFactuPlazo());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosFormatosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.formatosForeignKey=new ArrayList<Formato>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			FormatoLogic formatoLogic=new FormatoLogic();

			//formatoLogic.getFormatoDataAccess().setIsForForeingKeyData(true);

			if(this.parametrofactusecuencialSessionBean==null) {
				this.parametrofactusecuencialSessionBean=new ParametroFactuSecuencialSessionBean();
			}

			if(!this.parametrofactusecuencialSessionBean.getisBusquedaDesdeForeignKeySesionFormato()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//formatoLogic.getFormatoDataAccess().setIsForForeingKeyData(true);

					formatoLogic.getTodosFormatosWithConnection(sFinalQuery,new Pagination());

					this.formatosForeignKey=formatoLogic.getFormatos();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaFormato(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					formatoLogic.getEntityWithConnection(parametrofactusecuencialSessionBean.getlidFormatoActual());
					this.formatosForeignKey.add(formatoLogic.getFormato());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosBodegaTransferenciasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.bodegatransferenciasForeignKey=new ArrayList<Bodega>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			BodegaLogic bodegaLogic=new BodegaLogic();

			//bodegaLogic.getBodegaDataAccess().setIsForForeingKeyData(true);

			if(this.parametrofactusecuencialSessionBean==null) {
				this.parametrofactusecuencialSessionBean=new ParametroFactuSecuencialSessionBean();
			}

			if(!this.parametrofactusecuencialSessionBean.getisBusquedaDesdeForeignKeySesionBodegaTransferencia()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//bodegatransferenciaLogic.getBodegaDataAccess().setIsForForeingKeyData(true);

					bodegaLogic.getTodosBodegasWithConnection(sFinalQuery,new Pagination());

					this.bodegatransferenciasForeignKey=bodegaLogic.getBodegas();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaBodegaTransferencia(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					bodegaLogic.getEntityWithConnection(parametrofactusecuencialSessionBean.getlidBodegaTransferenciaActual());
					this.bodegatransferenciasForeignKey.add(bodegaLogic.getBodega());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTransaccionTransferenciasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.transacciontransferenciasForeignKey=new ArrayList<Transaccion>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			TransaccionLogic transaccionLogic=new TransaccionLogic();

			//transaccionLogic.getTransaccionDataAccess().setIsForForeingKeyData(true);

			if(this.parametrofactusecuencialSessionBean==null) {
				this.parametrofactusecuencialSessionBean=new ParametroFactuSecuencialSessionBean();
			}

			if(!this.parametrofactusecuencialSessionBean.getisBusquedaDesdeForeignKeySesionTransaccionTransferencia()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//transacciontransferenciaLogic.getTransaccionDataAccess().setIsForForeingKeyData(true);

					transaccionLogic.getTodosTransaccionsWithConnection(sFinalQuery,new Pagination());

					this.transacciontransferenciasForeignKey=transaccionLogic.getTransaccions();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTransaccionTransferencia(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					transaccionLogic.getEntityWithConnection(parametrofactusecuencialSessionBean.getlidTransaccionTransferenciaActual());
					this.transacciontransferenciasForeignKey.add(transaccionLogic.getTransaccion());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	
	
	public void setActualEmpresaForeignKey(Long idEmpresaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Empresa  empresaTemp=null;

			for(Empresa empresaAux:empresasForeignKey) {
				if(empresaAux.getId()!=null && empresaAux.getId().equals(idEmpresaSeleccionado)) {
					empresaTemp=empresaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(empresaTemp!=null) {

					if(this.parametrofactusecuencial!=null) {
						this.parametrofactusecuencial.setEmpresa(empresaTemp);
					}

					if(this.jInternalFrameDetalleFormParametroFactuSecuencial!=null) {
						this.jInternalFrameDetalleFormParametroFactuSecuencial.jComboBoxid_empresaParametroFactuSecuencial.setSelectedItem(empresaTemp);
					}
				} else {
					//jComboBoxid_empresaParametroFactuSecuencial.setSelectedItem(empresaTemp);
					if(this.jInternalFrameDetalleFormParametroFactuSecuencial!=null) {
						if(this.jInternalFrameDetalleFormParametroFactuSecuencial.jComboBoxid_empresaParametroFactuSecuencial.getItemCount()>0) {
							this.jInternalFrameDetalleFormParametroFactuSecuencial.jComboBoxid_empresaParametroFactuSecuencial.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualEmpresaForeignKeyDescripcion(Long idEmpresaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Empresa  empresaTemp=null;

			for(Empresa empresaAux:empresasForeignKey) {
				if(empresaAux.getId()!=null && empresaAux.getId().equals(idEmpresaSeleccionado)) {
					empresaTemp=empresaAux;
					break;
				}
			}


			sDescripcion=EmpresaConstantesFunciones.getEmpresaDescripcion(empresaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualEmpresaForeignKeyGenerico(Long idEmpresaSeleccionado,JComboBox jComboBoxid_empresaParametroFactuSecuencialGenerico)throws Exception
	{
		try
		{
			Empresa  empresaTemp=null;

			for(Empresa empresaAux:empresasForeignKey) {
				if(empresaAux.getId()!=null && empresaAux.getId().equals(idEmpresaSeleccionado)) {
					empresaTemp=empresaAux;
					break;
				}
			}

			if(empresaTemp!=null) {
				jComboBoxid_empresaParametroFactuSecuencialGenerico.setSelectedItem(empresaTemp);
			} else {
				if(jComboBoxid_empresaParametroFactuSecuencialGenerico!=null && jComboBoxid_empresaParametroFactuSecuencialGenerico.getItemCount()>0) {
					jComboBoxid_empresaParametroFactuSecuencialGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualSucursalForeignKey(Long idSucursalSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Sucursal  sucursalTemp=null;

			for(Sucursal sucursalAux:sucursalsForeignKey) {
				if(sucursalAux.getId()!=null && sucursalAux.getId().equals(idSucursalSeleccionado)) {
					sucursalTemp=sucursalAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(sucursalTemp!=null) {

					if(this.parametrofactusecuencial!=null) {
						this.parametrofactusecuencial.setSucursal(sucursalTemp);
					}

					if(this.jInternalFrameDetalleFormParametroFactuSecuencial!=null) {
						this.jInternalFrameDetalleFormParametroFactuSecuencial.jComboBoxid_sucursalParametroFactuSecuencial.setSelectedItem(sucursalTemp);
					}
				} else {
					//jComboBoxid_sucursalParametroFactuSecuencial.setSelectedItem(sucursalTemp);
					if(this.jInternalFrameDetalleFormParametroFactuSecuencial!=null) {
						if(this.jInternalFrameDetalleFormParametroFactuSecuencial.jComboBoxid_sucursalParametroFactuSecuencial.getItemCount()>0) {
							this.jInternalFrameDetalleFormParametroFactuSecuencial.jComboBoxid_sucursalParametroFactuSecuencial.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualSucursalForeignKeyDescripcion(Long idSucursalSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Sucursal  sucursalTemp=null;

			for(Sucursal sucursalAux:sucursalsForeignKey) {
				if(sucursalAux.getId()!=null && sucursalAux.getId().equals(idSucursalSeleccionado)) {
					sucursalTemp=sucursalAux;
					break;
				}
			}


			sDescripcion=SucursalConstantesFunciones.getSucursalDescripcion(sucursalTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualSucursalForeignKeyGenerico(Long idSucursalSeleccionado,JComboBox jComboBoxid_sucursalParametroFactuSecuencialGenerico)throws Exception
	{
		try
		{
			Sucursal  sucursalTemp=null;

			for(Sucursal sucursalAux:sucursalsForeignKey) {
				if(sucursalAux.getId()!=null && sucursalAux.getId().equals(idSucursalSeleccionado)) {
					sucursalTemp=sucursalAux;
					break;
				}
			}

			if(sucursalTemp!=null) {
				jComboBoxid_sucursalParametroFactuSecuencialGenerico.setSelectedItem(sucursalTemp);
			} else {
				if(jComboBoxid_sucursalParametroFactuSecuencialGenerico!=null && jComboBoxid_sucursalParametroFactuSecuencialGenerico.getItemCount()>0) {
					jComboBoxid_sucursalParametroFactuSecuencialGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTipoDocumentoGeneralForeignKey(Long idTipoDocumentoGeneralSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			TipoDocumentoGeneral  tipodocumentogeneralTemp=null;

			for(TipoDocumentoGeneral tipodocumentogeneralAux:tipodocumentogeneralsForeignKey) {
				if(tipodocumentogeneralAux.getId()!=null && tipodocumentogeneralAux.getId().equals(idTipoDocumentoGeneralSeleccionado)) {
					tipodocumentogeneralTemp=tipodocumentogeneralAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(tipodocumentogeneralTemp!=null) {

					if(this.parametrofactusecuencial!=null) {
						this.parametrofactusecuencial.setTipoDocumentoGeneral(tipodocumentogeneralTemp);
					}

					if(this.jInternalFrameDetalleFormParametroFactuSecuencial!=null) {
						this.jInternalFrameDetalleFormParametroFactuSecuencial.jComboBoxid_tipo_documento_generalParametroFactuSecuencial.setSelectedItem(tipodocumentogeneralTemp);
					}
				} else {
					//jComboBoxid_tipo_documento_generalParametroFactuSecuencial.setSelectedItem(tipodocumentogeneralTemp);
					if(this.jInternalFrameDetalleFormParametroFactuSecuencial!=null) {
						if(this.jInternalFrameDetalleFormParametroFactuSecuencial.jComboBoxid_tipo_documento_generalParametroFactuSecuencial.getItemCount()>0) {
							this.jInternalFrameDetalleFormParametroFactuSecuencial.jComboBoxid_tipo_documento_generalParametroFactuSecuencial.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdTipoDocumentoGeneral") || sFormularioTipoBusqueda.equals("Todos")){
					if(tipodocumentogeneralTemp!=null && jComboBoxid_tipo_documento_generalFK_IdTipoDocumentoGeneralParametroFactuSecuencial!=null) {
						jComboBoxid_tipo_documento_generalFK_IdTipoDocumentoGeneralParametroFactuSecuencial.setSelectedItem(tipodocumentogeneralTemp);
					} else {
						if(jComboBoxid_tipo_documento_generalFK_IdTipoDocumentoGeneralParametroFactuSecuencial!=null) {
							//jComboBoxid_tipo_documento_generalFK_IdTipoDocumentoGeneralParametroFactuSecuencial.setSelectedItem(tipodocumentogeneralTemp);
							if(jComboBoxid_tipo_documento_generalFK_IdTipoDocumentoGeneralParametroFactuSecuencial.getItemCount()>0) {
								jComboBoxid_tipo_documento_generalFK_IdTipoDocumentoGeneralParametroFactuSecuencial.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTipoDocumentoGeneralForeignKeyDescripcion(Long idTipoDocumentoGeneralSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			TipoDocumentoGeneral  tipodocumentogeneralTemp=null;

			for(TipoDocumentoGeneral tipodocumentogeneralAux:tipodocumentogeneralsForeignKey) {
				if(tipodocumentogeneralAux.getId()!=null && tipodocumentogeneralAux.getId().equals(idTipoDocumentoGeneralSeleccionado)) {
					tipodocumentogeneralTemp=tipodocumentogeneralAux;
					break;
				}
			}


			sDescripcion=TipoDocumentoGeneralConstantesFunciones.getTipoDocumentoGeneralDescripcion(tipodocumentogeneralTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTipoDocumentoGeneralForeignKeyGenerico(Long idTipoDocumentoGeneralSeleccionado,JComboBox jComboBoxid_tipo_documento_generalParametroFactuSecuencialGenerico)throws Exception
	{
		try
		{
			TipoDocumentoGeneral  tipodocumentogeneralTemp=null;

			for(TipoDocumentoGeneral tipodocumentogeneralAux:tipodocumentogeneralsForeignKey) {
				if(tipodocumentogeneralAux.getId()!=null && tipodocumentogeneralAux.getId().equals(idTipoDocumentoGeneralSeleccionado)) {
					tipodocumentogeneralTemp=tipodocumentogeneralAux;
					break;
				}
			}

			if(tipodocumentogeneralTemp!=null) {
				jComboBoxid_tipo_documento_generalParametroFactuSecuencialGenerico.setSelectedItem(tipodocumentogeneralTemp);
			} else {
				if(jComboBoxid_tipo_documento_generalParametroFactuSecuencialGenerico!=null && jComboBoxid_tipo_documento_generalParametroFactuSecuencialGenerico.getItemCount()>0) {
					jComboBoxid_tipo_documento_generalParametroFactuSecuencialGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualBodegaForeignKey(Long idBodegaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Bodega  bodegaTemp=null;

			for(Bodega bodegaAux:bodegasForeignKey) {
				if(bodegaAux.getId()!=null && bodegaAux.getId().equals(idBodegaSeleccionado)) {
					bodegaTemp=bodegaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(bodegaTemp!=null) {

					if(this.parametrofactusecuencial!=null) {
						this.parametrofactusecuencial.setBodega(bodegaTemp);
					}

					if(this.jInternalFrameDetalleFormParametroFactuSecuencial!=null) {
						this.jInternalFrameDetalleFormParametroFactuSecuencial.jComboBoxid_bodegaParametroFactuSecuencial.setSelectedItem(bodegaTemp);
					}
				} else {
					//jComboBoxid_bodegaParametroFactuSecuencial.setSelectedItem(bodegaTemp);
					if(this.jInternalFrameDetalleFormParametroFactuSecuencial!=null) {
						if(this.jInternalFrameDetalleFormParametroFactuSecuencial.jComboBoxid_bodegaParametroFactuSecuencial.getItemCount()>0) {
							this.jInternalFrameDetalleFormParametroFactuSecuencial.jComboBoxid_bodegaParametroFactuSecuencial.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdBodega") || sFormularioTipoBusqueda.equals("Todos")){
					if(bodegaTemp!=null && jComboBoxid_bodegaFK_IdBodegaParametroFactuSecuencial!=null) {
						jComboBoxid_bodegaFK_IdBodegaParametroFactuSecuencial.setSelectedItem(bodegaTemp);
					} else {
						if(jComboBoxid_bodegaFK_IdBodegaParametroFactuSecuencial!=null) {
							//jComboBoxid_bodegaFK_IdBodegaParametroFactuSecuencial.setSelectedItem(bodegaTemp);
							if(jComboBoxid_bodegaFK_IdBodegaParametroFactuSecuencial.getItemCount()>0) {
								jComboBoxid_bodegaFK_IdBodegaParametroFactuSecuencial.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualBodegaForeignKeyDescripcion(Long idBodegaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Bodega  bodegaTemp=null;

			for(Bodega bodegaAux:bodegasForeignKey) {
				if(bodegaAux.getId()!=null && bodegaAux.getId().equals(idBodegaSeleccionado)) {
					bodegaTemp=bodegaAux;
					break;
				}
			}


			sDescripcion=BodegaConstantesFunciones.getBodegaDescripcion(bodegaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualBodegaForeignKeyGenerico(Long idBodegaSeleccionado,JComboBox jComboBoxid_bodegaParametroFactuSecuencialGenerico)throws Exception
	{
		try
		{
			Bodega  bodegaTemp=null;

			for(Bodega bodegaAux:bodegasForeignKey) {
				if(bodegaAux.getId()!=null && bodegaAux.getId().equals(idBodegaSeleccionado)) {
					bodegaTemp=bodegaAux;
					break;
				}
			}

			if(bodegaTemp!=null) {
				jComboBoxid_bodegaParametroFactuSecuencialGenerico.setSelectedItem(bodegaTemp);
			} else {
				if(jComboBoxid_bodegaParametroFactuSecuencialGenerico!=null && jComboBoxid_bodegaParametroFactuSecuencialGenerico.getItemCount()>0) {
					jComboBoxid_bodegaParametroFactuSecuencialGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTipoParamFactuPlazoForeignKey(Long idTipoParamFactuPlazoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			TipoParamFactuPlazo  tipoparamfactuplazoTemp=null;

			for(TipoParamFactuPlazo tipoparamfactuplazoAux:tipoparamfactuplazosForeignKey) {
				if(tipoparamfactuplazoAux.getId()!=null && tipoparamfactuplazoAux.getId().equals(idTipoParamFactuPlazoSeleccionado)) {
					tipoparamfactuplazoTemp=tipoparamfactuplazoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(tipoparamfactuplazoTemp!=null) {

					if(this.parametrofactusecuencial!=null) {
						this.parametrofactusecuencial.setTipoParamFactuPlazo(tipoparamfactuplazoTemp);
					}

					if(this.jInternalFrameDetalleFormParametroFactuSecuencial!=null) {
						this.jInternalFrameDetalleFormParametroFactuSecuencial.jComboBoxid_tipo_param_factu_plazoParametroFactuSecuencial.setSelectedItem(tipoparamfactuplazoTemp);
					}
				} else {
					//jComboBoxid_tipo_param_factu_plazoParametroFactuSecuencial.setSelectedItem(tipoparamfactuplazoTemp);
					if(this.jInternalFrameDetalleFormParametroFactuSecuencial!=null) {
						if(this.jInternalFrameDetalleFormParametroFactuSecuencial.jComboBoxid_tipo_param_factu_plazoParametroFactuSecuencial.getItemCount()>0) {
							this.jInternalFrameDetalleFormParametroFactuSecuencial.jComboBoxid_tipo_param_factu_plazoParametroFactuSecuencial.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdTipoParamFactuPlazo") || sFormularioTipoBusqueda.equals("Todos")){
					if(tipoparamfactuplazoTemp!=null && jComboBoxid_tipo_param_factu_plazoFK_IdTipoParamFactuPlazoParametroFactuSecuencial!=null) {
						jComboBoxid_tipo_param_factu_plazoFK_IdTipoParamFactuPlazoParametroFactuSecuencial.setSelectedItem(tipoparamfactuplazoTemp);
					} else {
						if(jComboBoxid_tipo_param_factu_plazoFK_IdTipoParamFactuPlazoParametroFactuSecuencial!=null) {
							//jComboBoxid_tipo_param_factu_plazoFK_IdTipoParamFactuPlazoParametroFactuSecuencial.setSelectedItem(tipoparamfactuplazoTemp);
							if(jComboBoxid_tipo_param_factu_plazoFK_IdTipoParamFactuPlazoParametroFactuSecuencial.getItemCount()>0) {
								jComboBoxid_tipo_param_factu_plazoFK_IdTipoParamFactuPlazoParametroFactuSecuencial.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTipoParamFactuPlazoForeignKeyDescripcion(Long idTipoParamFactuPlazoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			TipoParamFactuPlazo  tipoparamfactuplazoTemp=null;

			for(TipoParamFactuPlazo tipoparamfactuplazoAux:tipoparamfactuplazosForeignKey) {
				if(tipoparamfactuplazoAux.getId()!=null && tipoparamfactuplazoAux.getId().equals(idTipoParamFactuPlazoSeleccionado)) {
					tipoparamfactuplazoTemp=tipoparamfactuplazoAux;
					break;
				}
			}


			sDescripcion=TipoParamFactuPlazoConstantesFunciones.getTipoParamFactuPlazoDescripcion(tipoparamfactuplazoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTipoParamFactuPlazoForeignKeyGenerico(Long idTipoParamFactuPlazoSeleccionado,JComboBox jComboBoxid_tipo_param_factu_plazoParametroFactuSecuencialGenerico)throws Exception
	{
		try
		{
			TipoParamFactuPlazo  tipoparamfactuplazoTemp=null;

			for(TipoParamFactuPlazo tipoparamfactuplazoAux:tipoparamfactuplazosForeignKey) {
				if(tipoparamfactuplazoAux.getId()!=null && tipoparamfactuplazoAux.getId().equals(idTipoParamFactuPlazoSeleccionado)) {
					tipoparamfactuplazoTemp=tipoparamfactuplazoAux;
					break;
				}
			}

			if(tipoparamfactuplazoTemp!=null) {
				jComboBoxid_tipo_param_factu_plazoParametroFactuSecuencialGenerico.setSelectedItem(tipoparamfactuplazoTemp);
			} else {
				if(jComboBoxid_tipo_param_factu_plazoParametroFactuSecuencialGenerico!=null && jComboBoxid_tipo_param_factu_plazoParametroFactuSecuencialGenerico.getItemCount()>0) {
					jComboBoxid_tipo_param_factu_plazoParametroFactuSecuencialGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualFormatoForeignKey(Long idFormatoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Formato  formatoTemp=null;

			for(Formato formatoAux:formatosForeignKey) {
				if(formatoAux.getId()!=null && formatoAux.getId().equals(idFormatoSeleccionado)) {
					formatoTemp=formatoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(formatoTemp!=null) {

					if(this.parametrofactusecuencial!=null) {
						this.parametrofactusecuencial.setFormato(formatoTemp);
					}

					if(this.jInternalFrameDetalleFormParametroFactuSecuencial!=null) {
						this.jInternalFrameDetalleFormParametroFactuSecuencial.jComboBoxid_formatoParametroFactuSecuencial.setSelectedItem(formatoTemp);
					}
				} else {
					//jComboBoxid_formatoParametroFactuSecuencial.setSelectedItem(formatoTemp);
					if(this.jInternalFrameDetalleFormParametroFactuSecuencial!=null) {
						if(this.jInternalFrameDetalleFormParametroFactuSecuencial.jComboBoxid_formatoParametroFactuSecuencial.getItemCount()>0) {
							this.jInternalFrameDetalleFormParametroFactuSecuencial.jComboBoxid_formatoParametroFactuSecuencial.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdFormato") || sFormularioTipoBusqueda.equals("Todos")){
					if(formatoTemp!=null && jComboBoxid_formatoFK_IdFormatoParametroFactuSecuencial!=null) {
						jComboBoxid_formatoFK_IdFormatoParametroFactuSecuencial.setSelectedItem(formatoTemp);
					} else {
						if(jComboBoxid_formatoFK_IdFormatoParametroFactuSecuencial!=null) {
							//jComboBoxid_formatoFK_IdFormatoParametroFactuSecuencial.setSelectedItem(formatoTemp);
							if(jComboBoxid_formatoFK_IdFormatoParametroFactuSecuencial.getItemCount()>0) {
								jComboBoxid_formatoFK_IdFormatoParametroFactuSecuencial.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualFormatoForeignKeyDescripcion(Long idFormatoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Formato  formatoTemp=null;

			for(Formato formatoAux:formatosForeignKey) {
				if(formatoAux.getId()!=null && formatoAux.getId().equals(idFormatoSeleccionado)) {
					formatoTemp=formatoAux;
					break;
				}
			}


			sDescripcion=FormatoConstantesFunciones.getFormatoDescripcion(formatoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualFormatoForeignKeyGenerico(Long idFormatoSeleccionado,JComboBox jComboBoxid_formatoParametroFactuSecuencialGenerico)throws Exception
	{
		try
		{
			Formato  formatoTemp=null;

			for(Formato formatoAux:formatosForeignKey) {
				if(formatoAux.getId()!=null && formatoAux.getId().equals(idFormatoSeleccionado)) {
					formatoTemp=formatoAux;
					break;
				}
			}

			if(formatoTemp!=null) {
				jComboBoxid_formatoParametroFactuSecuencialGenerico.setSelectedItem(formatoTemp);
			} else {
				if(jComboBoxid_formatoParametroFactuSecuencialGenerico!=null && jComboBoxid_formatoParametroFactuSecuencialGenerico.getItemCount()>0) {
					jComboBoxid_formatoParametroFactuSecuencialGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualBodegaTransferenciaForeignKey(Long idBodegaTransferenciaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Bodega  bodegatransferenciaTemp=null;

			for(Bodega bodegatransferenciaAux:bodegatransferenciasForeignKey) {
				if(bodegatransferenciaAux.getId()!=null && bodegatransferenciaAux.getId().equals(idBodegaTransferenciaSeleccionado)) {
					bodegatransferenciaTemp=bodegatransferenciaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(bodegatransferenciaTemp!=null) {

					if(this.parametrofactusecuencial!=null) {
						this.parametrofactusecuencial.setBodegaTransferencia(bodegatransferenciaTemp);
					}

					if(this.jInternalFrameDetalleFormParametroFactuSecuencial!=null) {
						this.jInternalFrameDetalleFormParametroFactuSecuencial.jComboBoxid_bodega_transferenciaParametroFactuSecuencial.setSelectedItem(bodegatransferenciaTemp);
					}
				} else {
					//jComboBoxid_bodega_transferenciaParametroFactuSecuencial.setSelectedItem(bodegatransferenciaTemp);
					if(this.jInternalFrameDetalleFormParametroFactuSecuencial!=null) {
						if(this.jInternalFrameDetalleFormParametroFactuSecuencial.jComboBoxid_bodega_transferenciaParametroFactuSecuencial.getItemCount()>0) {
							this.jInternalFrameDetalleFormParametroFactuSecuencial.jComboBoxid_bodega_transferenciaParametroFactuSecuencial.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdBodegaTransferencia") || sFormularioTipoBusqueda.equals("Todos")){
					if(bodegatransferenciaTemp!=null && jComboBoxid_bodega_transferenciaFK_IdBodegaTransferenciaParametroFactuSecuencial!=null) {
						jComboBoxid_bodega_transferenciaFK_IdBodegaTransferenciaParametroFactuSecuencial.setSelectedItem(bodegatransferenciaTemp);
					} else {
						if(jComboBoxid_bodega_transferenciaFK_IdBodegaTransferenciaParametroFactuSecuencial!=null) {
							//jComboBoxid_bodega_transferenciaFK_IdBodegaTransferenciaParametroFactuSecuencial.setSelectedItem(bodegatransferenciaTemp);
							if(jComboBoxid_bodega_transferenciaFK_IdBodegaTransferenciaParametroFactuSecuencial.getItemCount()>0) {
								jComboBoxid_bodega_transferenciaFK_IdBodegaTransferenciaParametroFactuSecuencial.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualBodegaTransferenciaForeignKeyDescripcion(Long idBodegaTransferenciaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Bodega  bodegatransferenciaTemp=null;

			for(Bodega bodegatransferenciaAux:bodegatransferenciasForeignKey) {
				if(bodegatransferenciaAux.getId()!=null && bodegatransferenciaAux.getId().equals(idBodegaTransferenciaSeleccionado)) {
					bodegatransferenciaTemp=bodegatransferenciaAux;
					break;
				}
			}


			sDescripcion=BodegaConstantesFunciones.getBodegaDescripcion(bodegatransferenciaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualBodegaTransferenciaForeignKeyGenerico(Long idBodegaTransferenciaSeleccionado,JComboBox jComboBoxid_bodega_transferenciaParametroFactuSecuencialGenerico)throws Exception
	{
		try
		{
			Bodega  bodegatransferenciaTemp=null;

			for(Bodega bodegatransferenciaAux:bodegatransferenciasForeignKey) {
				if(bodegatransferenciaAux.getId()!=null && bodegatransferenciaAux.getId().equals(idBodegaTransferenciaSeleccionado)) {
					bodegatransferenciaTemp=bodegatransferenciaAux;
					break;
				}
			}

			if(bodegatransferenciaTemp!=null) {
				jComboBoxid_bodega_transferenciaParametroFactuSecuencialGenerico.setSelectedItem(bodegatransferenciaTemp);
			} else {
				if(jComboBoxid_bodega_transferenciaParametroFactuSecuencialGenerico!=null && jComboBoxid_bodega_transferenciaParametroFactuSecuencialGenerico.getItemCount()>0) {
					jComboBoxid_bodega_transferenciaParametroFactuSecuencialGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTransaccionTransferenciaForeignKey(Long idTransaccionTransferenciaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Transaccion  transacciontransferenciaTemp=null;

			for(Transaccion transacciontransferenciaAux:transacciontransferenciasForeignKey) {
				if(transacciontransferenciaAux.getId()!=null && transacciontransferenciaAux.getId().equals(idTransaccionTransferenciaSeleccionado)) {
					transacciontransferenciaTemp=transacciontransferenciaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(transacciontransferenciaTemp!=null) {

					if(this.parametrofactusecuencial!=null) {
						this.parametrofactusecuencial.setTransaccionTransferencia(transacciontransferenciaTemp);
					}

					if(this.jInternalFrameDetalleFormParametroFactuSecuencial!=null) {
						this.jInternalFrameDetalleFormParametroFactuSecuencial.jComboBoxid_transaccion_transferenciaParametroFactuSecuencial.setSelectedItem(transacciontransferenciaTemp);
					}
				} else {
					//jComboBoxid_transaccion_transferenciaParametroFactuSecuencial.setSelectedItem(transacciontransferenciaTemp);
					if(this.jInternalFrameDetalleFormParametroFactuSecuencial!=null) {
						if(this.jInternalFrameDetalleFormParametroFactuSecuencial.jComboBoxid_transaccion_transferenciaParametroFactuSecuencial.getItemCount()>0) {
							this.jInternalFrameDetalleFormParametroFactuSecuencial.jComboBoxid_transaccion_transferenciaParametroFactuSecuencial.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdTransaccionTransferencia") || sFormularioTipoBusqueda.equals("Todos")){
					if(transacciontransferenciaTemp!=null && jComboBoxid_transaccion_transferenciaFK_IdTransaccionTransferenciaParametroFactuSecuencial!=null) {
						jComboBoxid_transaccion_transferenciaFK_IdTransaccionTransferenciaParametroFactuSecuencial.setSelectedItem(transacciontransferenciaTemp);
					} else {
						if(jComboBoxid_transaccion_transferenciaFK_IdTransaccionTransferenciaParametroFactuSecuencial!=null) {
							//jComboBoxid_transaccion_transferenciaFK_IdTransaccionTransferenciaParametroFactuSecuencial.setSelectedItem(transacciontransferenciaTemp);
							if(jComboBoxid_transaccion_transferenciaFK_IdTransaccionTransferenciaParametroFactuSecuencial.getItemCount()>0) {
								jComboBoxid_transaccion_transferenciaFK_IdTransaccionTransferenciaParametroFactuSecuencial.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTransaccionTransferenciaForeignKeyDescripcion(Long idTransaccionTransferenciaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Transaccion  transacciontransferenciaTemp=null;

			for(Transaccion transacciontransferenciaAux:transacciontransferenciasForeignKey) {
				if(transacciontransferenciaAux.getId()!=null && transacciontransferenciaAux.getId().equals(idTransaccionTransferenciaSeleccionado)) {
					transacciontransferenciaTemp=transacciontransferenciaAux;
					break;
				}
			}


			sDescripcion=TransaccionConstantesFunciones.getTransaccionDescripcion(transacciontransferenciaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTransaccionTransferenciaForeignKeyGenerico(Long idTransaccionTransferenciaSeleccionado,JComboBox jComboBoxid_transaccion_transferenciaParametroFactuSecuencialGenerico)throws Exception
	{
		try
		{
			Transaccion  transacciontransferenciaTemp=null;

			for(Transaccion transacciontransferenciaAux:transacciontransferenciasForeignKey) {
				if(transacciontransferenciaAux.getId()!=null && transacciontransferenciaAux.getId().equals(idTransaccionTransferenciaSeleccionado)) {
					transacciontransferenciaTemp=transacciontransferenciaAux;
					break;
				}
			}

			if(transacciontransferenciaTemp!=null) {
				jComboBoxid_transaccion_transferenciaParametroFactuSecuencialGenerico.setSelectedItem(transacciontransferenciaTemp);
			} else {
				if(jComboBoxid_transaccion_transferenciaParametroFactuSecuencialGenerico!=null && jComboBoxid_transaccion_transferenciaParametroFactuSecuencialGenerico.getItemCount()>0) {
					jComboBoxid_transaccion_transferenciaParametroFactuSecuencialGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	
	
	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarEmpresaForeignKey(ParametroFactuSecuencial parametrofactusecuencial,JComboBox jComboBoxid_empresaParametroFactuSecuencialGenerico)throws Exception
	{
		try
		{
			Empresa  empresaAux=new Empresa();

			if(jComboBoxid_empresaParametroFactuSecuencialGenerico==null) {
				empresaAux=(Empresa)this.jInternalFrameDetalleFormParametroFactuSecuencial.jComboBoxid_empresaParametroFactuSecuencial.getSelectedItem();
			} else {
				empresaAux=(Empresa)jComboBoxid_empresaParametroFactuSecuencialGenerico.getSelectedItem();
			}

			if(empresaAux!=null && empresaAux.getId()!=null) {
				parametrofactusecuencial.setid_empresa(empresaAux.getId());
				parametrofactusecuencial.setempresa_descripcion(ParametroFactuSecuencialConstantesFunciones.getEmpresaDescripcion(empresaAux));
				parametrofactusecuencial.setEmpresa(empresaAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarSucursalForeignKey(ParametroFactuSecuencial parametrofactusecuencial,JComboBox jComboBoxid_sucursalParametroFactuSecuencialGenerico)throws Exception
	{
		try
		{
			Sucursal  sucursalAux=new Sucursal();

			if(jComboBoxid_sucursalParametroFactuSecuencialGenerico==null) {
				sucursalAux=(Sucursal)this.jInternalFrameDetalleFormParametroFactuSecuencial.jComboBoxid_sucursalParametroFactuSecuencial.getSelectedItem();
			} else {
				sucursalAux=(Sucursal)jComboBoxid_sucursalParametroFactuSecuencialGenerico.getSelectedItem();
			}

			if(sucursalAux!=null && sucursalAux.getId()!=null) {
				parametrofactusecuencial.setid_sucursal(sucursalAux.getId());
				parametrofactusecuencial.setsucursal_descripcion(ParametroFactuSecuencialConstantesFunciones.getSucursalDescripcion(sucursalAux));
				parametrofactusecuencial.setSucursal(sucursalAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTipoDocumentoGeneralForeignKey(ParametroFactuSecuencial parametrofactusecuencial,JComboBox jComboBoxid_tipo_documento_generalParametroFactuSecuencialGenerico)throws Exception
	{
		try
		{
			TipoDocumentoGeneral  tipodocumentogeneralAux=new TipoDocumentoGeneral();

			if(jComboBoxid_tipo_documento_generalParametroFactuSecuencialGenerico==null) {
				tipodocumentogeneralAux=(TipoDocumentoGeneral)this.jInternalFrameDetalleFormParametroFactuSecuencial.jComboBoxid_tipo_documento_generalParametroFactuSecuencial.getSelectedItem();
			} else {
				tipodocumentogeneralAux=(TipoDocumentoGeneral)jComboBoxid_tipo_documento_generalParametroFactuSecuencialGenerico.getSelectedItem();
			}

			if(tipodocumentogeneralAux!=null && tipodocumentogeneralAux.getId()!=null) {
				parametrofactusecuencial.setid_tipo_documento_general(tipodocumentogeneralAux.getId());
				parametrofactusecuencial.settipodocumentogeneral_descripcion(ParametroFactuSecuencialConstantesFunciones.getTipoDocumentoGeneralDescripcion(tipodocumentogeneralAux));
				parametrofactusecuencial.setTipoDocumentoGeneral(tipodocumentogeneralAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarBodegaForeignKey(ParametroFactuSecuencial parametrofactusecuencial,JComboBox jComboBoxid_bodegaParametroFactuSecuencialGenerico)throws Exception
	{
		try
		{
			Bodega  bodegaAux=new Bodega();

			if(jComboBoxid_bodegaParametroFactuSecuencialGenerico==null) {
				bodegaAux=(Bodega)this.jInternalFrameDetalleFormParametroFactuSecuencial.jComboBoxid_bodegaParametroFactuSecuencial.getSelectedItem();
			} else {
				bodegaAux=(Bodega)jComboBoxid_bodegaParametroFactuSecuencialGenerico.getSelectedItem();
			}

			if(bodegaAux!=null && bodegaAux.getId()!=null) {
				parametrofactusecuencial.setid_bodega(bodegaAux.getId());
				parametrofactusecuencial.setbodega_descripcion(ParametroFactuSecuencialConstantesFunciones.getBodegaDescripcion(bodegaAux));
				parametrofactusecuencial.setBodega(bodegaAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTipoParamFactuPlazoForeignKey(ParametroFactuSecuencial parametrofactusecuencial,JComboBox jComboBoxid_tipo_param_factu_plazoParametroFactuSecuencialGenerico)throws Exception
	{
		try
		{
			TipoParamFactuPlazo  tipoparamfactuplazoAux=new TipoParamFactuPlazo();

			if(jComboBoxid_tipo_param_factu_plazoParametroFactuSecuencialGenerico==null) {
				tipoparamfactuplazoAux=(TipoParamFactuPlazo)this.jInternalFrameDetalleFormParametroFactuSecuencial.jComboBoxid_tipo_param_factu_plazoParametroFactuSecuencial.getSelectedItem();
			} else {
				tipoparamfactuplazoAux=(TipoParamFactuPlazo)jComboBoxid_tipo_param_factu_plazoParametroFactuSecuencialGenerico.getSelectedItem();
			}

			if(tipoparamfactuplazoAux!=null && tipoparamfactuplazoAux.getId()!=null) {
				parametrofactusecuencial.setid_tipo_param_factu_plazo(tipoparamfactuplazoAux.getId());
				parametrofactusecuencial.settipoparamfactuplazo_descripcion(ParametroFactuSecuencialConstantesFunciones.getTipoParamFactuPlazoDescripcion(tipoparamfactuplazoAux));
				parametrofactusecuencial.setTipoParamFactuPlazo(tipoparamfactuplazoAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarFormatoForeignKey(ParametroFactuSecuencial parametrofactusecuencial,JComboBox jComboBoxid_formatoParametroFactuSecuencialGenerico)throws Exception
	{
		try
		{
			Formato  formatoAux=new Formato();

			if(jComboBoxid_formatoParametroFactuSecuencialGenerico==null) {
				formatoAux=(Formato)this.jInternalFrameDetalleFormParametroFactuSecuencial.jComboBoxid_formatoParametroFactuSecuencial.getSelectedItem();
			} else {
				formatoAux=(Formato)jComboBoxid_formatoParametroFactuSecuencialGenerico.getSelectedItem();
			}

			if(formatoAux!=null && formatoAux.getId()!=null) {
				parametrofactusecuencial.setid_formato(formatoAux.getId());
				parametrofactusecuencial.setformato_descripcion(ParametroFactuSecuencialConstantesFunciones.getFormatoDescripcion(formatoAux));
				parametrofactusecuencial.setFormato(formatoAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarBodegaTransferenciaForeignKey(ParametroFactuSecuencial parametrofactusecuencial,JComboBox jComboBoxid_bodega_transferenciaParametroFactuSecuencialGenerico)throws Exception
	{
		try
		{
			Bodega  bodegaAux=new Bodega();

			if(jComboBoxid_bodega_transferenciaParametroFactuSecuencialGenerico==null) {
				bodegaAux=(Bodega)this.jInternalFrameDetalleFormParametroFactuSecuencial.jComboBoxid_bodega_transferenciaParametroFactuSecuencial.getSelectedItem();
			} else {
				bodegaAux=(Bodega)jComboBoxid_bodega_transferenciaParametroFactuSecuencialGenerico.getSelectedItem();
			}

			if(bodegaAux!=null && bodegaAux.getId()!=null) {
				parametrofactusecuencial.setid_bodega_transferencia(bodegaAux.getId());
				parametrofactusecuencial.setbodegatransferencia_descripcion(ParametroFactuSecuencialConstantesFunciones.getBodegaTransferenciaDescripcion(bodegaAux));
				parametrofactusecuencial.setBodegaTransferencia(bodegaAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTransaccionTransferenciaForeignKey(ParametroFactuSecuencial parametrofactusecuencial,JComboBox jComboBoxid_transaccion_transferenciaParametroFactuSecuencialGenerico)throws Exception
	{
		try
		{
			Transaccion  transaccionAux=new Transaccion();

			if(jComboBoxid_transaccion_transferenciaParametroFactuSecuencialGenerico==null) {
				transaccionAux=(Transaccion)this.jInternalFrameDetalleFormParametroFactuSecuencial.jComboBoxid_transaccion_transferenciaParametroFactuSecuencial.getSelectedItem();
			} else {
				transaccionAux=(Transaccion)jComboBoxid_transaccion_transferenciaParametroFactuSecuencialGenerico.getSelectedItem();
			}

			if(transaccionAux!=null && transaccionAux.getId()!=null) {
				parametrofactusecuencial.setid_transaccion_transferencia(transaccionAux.getId());
				parametrofactusecuencial.settransacciontransferencia_descripcion(ParametroFactuSecuencialConstantesFunciones.getTransaccionTransferenciaDescripcion(transaccionAux));
				parametrofactusecuencial.setTransaccionTransferencia(transaccionAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	
	


		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameEmpresasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingEmpresa=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ParametroFactuSecuencialJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormParametroFactuSecuencial!=null) { 
							this.jInternalFrameDetalleFormParametroFactuSecuencial.jComboBoxid_empresaParametroFactuSecuencial.removeAllItems();

							for(Empresa empresa:this.empresasForeignKey) {
								this.jInternalFrameDetalleFormParametroFactuSecuencial.jComboBoxid_empresaParametroFactuSecuencial.addItem(empresa);
							}
						}
					}

					if(this.jInternalFrameDetalleFormParametroFactuSecuencial!=null) { 
					}

					if(!ParametroFactuSecuencialJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameSucursalsForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingSucursal=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ParametroFactuSecuencialJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormParametroFactuSecuencial!=null) { 
							this.jInternalFrameDetalleFormParametroFactuSecuencial.jComboBoxid_sucursalParametroFactuSecuencial.removeAllItems();

							for(Sucursal sucursal:this.sucursalsForeignKey) {
								this.jInternalFrameDetalleFormParametroFactuSecuencial.jComboBoxid_sucursalParametroFactuSecuencial.addItem(sucursal);
							}
						}
					}

					if(this.jInternalFrameDetalleFormParametroFactuSecuencial!=null) { 
					}

					if(!ParametroFactuSecuencialJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTipoDocumentoGeneralsForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTipoDocumentoGeneral=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ParametroFactuSecuencialJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormParametroFactuSecuencial!=null) { 
							this.jInternalFrameDetalleFormParametroFactuSecuencial.jComboBoxid_tipo_documento_generalParametroFactuSecuencial.removeAllItems();

							for(TipoDocumentoGeneral tipodocumentogeneral:this.tipodocumentogeneralsForeignKey) {
								this.jInternalFrameDetalleFormParametroFactuSecuencial.jComboBoxid_tipo_documento_generalParametroFactuSecuencial.addItem(tipodocumentogeneral);
							}
						}
					}

					if(this.jInternalFrameDetalleFormParametroFactuSecuencial!=null) { 
					}

					if(!ParametroFactuSecuencialJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdTipoDocumentoGeneral") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ParametroFactuSecuencialJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_tipo_documento_generalFK_IdTipoDocumentoGeneralParametroFactuSecuencial.removeAllItems();

							for(TipoDocumentoGeneral tipodocumentogeneral:this.tipodocumentogeneralsForeignKey) {
								this.jComboBoxid_tipo_documento_generalFK_IdTipoDocumentoGeneralParametroFactuSecuencial.addItem(tipodocumentogeneral);
							}
						}

						if(!ParametroFactuSecuencialJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameBodegasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingBodega=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ParametroFactuSecuencialJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormParametroFactuSecuencial!=null) { 
							this.jInternalFrameDetalleFormParametroFactuSecuencial.jComboBoxid_bodegaParametroFactuSecuencial.removeAllItems();

							for(Bodega bodega:this.bodegasForeignKey) {
								this.jInternalFrameDetalleFormParametroFactuSecuencial.jComboBoxid_bodegaParametroFactuSecuencial.addItem(bodega);
							}
						}
					}

					if(this.jInternalFrameDetalleFormParametroFactuSecuencial!=null) { 
					}

					if(!ParametroFactuSecuencialJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdBodega") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ParametroFactuSecuencialJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_bodegaFK_IdBodegaParametroFactuSecuencial.removeAllItems();

							for(Bodega bodega:this.bodegasForeignKey) {
								this.jComboBoxid_bodegaFK_IdBodegaParametroFactuSecuencial.addItem(bodega);
							}
						}

						if(!ParametroFactuSecuencialJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTipoParamFactuPlazosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTipoParamFactuPlazo=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ParametroFactuSecuencialJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormParametroFactuSecuencial!=null) { 
							this.jInternalFrameDetalleFormParametroFactuSecuencial.jComboBoxid_tipo_param_factu_plazoParametroFactuSecuencial.removeAllItems();

							for(TipoParamFactuPlazo tipoparamfactuplazo:this.tipoparamfactuplazosForeignKey) {
								this.jInternalFrameDetalleFormParametroFactuSecuencial.jComboBoxid_tipo_param_factu_plazoParametroFactuSecuencial.addItem(tipoparamfactuplazo);
							}
						}
					}

					if(this.jInternalFrameDetalleFormParametroFactuSecuencial!=null) { 
					}

					if(!ParametroFactuSecuencialJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdTipoParamFactuPlazo") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ParametroFactuSecuencialJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_tipo_param_factu_plazoFK_IdTipoParamFactuPlazoParametroFactuSecuencial.removeAllItems();

							for(TipoParamFactuPlazo tipoparamfactuplazo:this.tipoparamfactuplazosForeignKey) {
								this.jComboBoxid_tipo_param_factu_plazoFK_IdTipoParamFactuPlazoParametroFactuSecuencial.addItem(tipoparamfactuplazo);
							}
						}

						if(!ParametroFactuSecuencialJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameFormatosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingFormato=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ParametroFactuSecuencialJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormParametroFactuSecuencial!=null) { 
							this.jInternalFrameDetalleFormParametroFactuSecuencial.jComboBoxid_formatoParametroFactuSecuencial.removeAllItems();

							for(Formato formato:this.formatosForeignKey) {
								this.jInternalFrameDetalleFormParametroFactuSecuencial.jComboBoxid_formatoParametroFactuSecuencial.addItem(formato);
							}
						}
					}

					if(this.jInternalFrameDetalleFormParametroFactuSecuencial!=null) { 
					}

					if(!ParametroFactuSecuencialJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdFormato") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ParametroFactuSecuencialJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_formatoFK_IdFormatoParametroFactuSecuencial.removeAllItems();

							for(Formato formato:this.formatosForeignKey) {
								this.jComboBoxid_formatoFK_IdFormatoParametroFactuSecuencial.addItem(formato);
							}
						}

						if(!ParametroFactuSecuencialJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameBodegaTransferenciasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingBodega=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ParametroFactuSecuencialJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormParametroFactuSecuencial!=null) { 
							this.jInternalFrameDetalleFormParametroFactuSecuencial.jComboBoxid_bodega_transferenciaParametroFactuSecuencial.removeAllItems();

							for(Bodega bodegatransferencia:this.bodegatransferenciasForeignKey) {
								this.jInternalFrameDetalleFormParametroFactuSecuencial.jComboBoxid_bodega_transferenciaParametroFactuSecuencial.addItem(bodegatransferencia);
							}
						}
					}

					if(this.jInternalFrameDetalleFormParametroFactuSecuencial!=null) { 
					}

					if(!ParametroFactuSecuencialJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdBodegaTransferencia") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ParametroFactuSecuencialJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_bodega_transferenciaFK_IdBodegaTransferenciaParametroFactuSecuencial.removeAllItems();

							for(Bodega bodegatransferencia:this.bodegatransferenciasForeignKey) {
								this.jComboBoxid_bodega_transferenciaFK_IdBodegaTransferenciaParametroFactuSecuencial.addItem(bodegatransferencia);
							}
						}

						if(!ParametroFactuSecuencialJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTransaccionTransferenciasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTransaccion=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ParametroFactuSecuencialJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormParametroFactuSecuencial!=null) { 
							this.jInternalFrameDetalleFormParametroFactuSecuencial.jComboBoxid_transaccion_transferenciaParametroFactuSecuencial.removeAllItems();

							for(Transaccion transacciontransferencia:this.transacciontransferenciasForeignKey) {
								this.jInternalFrameDetalleFormParametroFactuSecuencial.jComboBoxid_transaccion_transferenciaParametroFactuSecuencial.addItem(transacciontransferencia);
							}
						}
					}

					if(this.jInternalFrameDetalleFormParametroFactuSecuencial!=null) { 
					}

					if(!ParametroFactuSecuencialJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdTransaccionTransferencia") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ParametroFactuSecuencialJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_transaccion_transferenciaFK_IdTransaccionTransferenciaParametroFactuSecuencial.removeAllItems();

							for(Transaccion transacciontransferencia:this.transacciontransferenciasForeignKey) {
								this.jComboBoxid_transaccion_transferenciaFK_IdTransaccionTransferenciaParametroFactuSecuencial.addItem(transacciontransferencia);
							}
						}

						if(!ParametroFactuSecuencialJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

	


		public void setSelectedItemCombosFrameEmpresaForeignKey(Empresa empresa,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormParametroFactuSecuencial!=null) {
							this.jInternalFrameDetalleFormParametroFactuSecuencial.jComboBoxid_empresaParametroFactuSecuencial.setSelectedItem(empresa);
						}
					} else {
						if(this.jInternalFrameDetalleFormParametroFactuSecuencial!=null) {
							this.jInternalFrameDetalleFormParametroFactuSecuencial.jComboBoxid_empresaParametroFactuSecuencial.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameSucursalForeignKey(Sucursal sucursal,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormParametroFactuSecuencial!=null) {
							this.jInternalFrameDetalleFormParametroFactuSecuencial.jComboBoxid_sucursalParametroFactuSecuencial.setSelectedItem(sucursal);
						}
					} else {
						if(this.jInternalFrameDetalleFormParametroFactuSecuencial!=null) {
							this.jInternalFrameDetalleFormParametroFactuSecuencial.jComboBoxid_sucursalParametroFactuSecuencial.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTipoDocumentoGeneralForeignKey(TipoDocumentoGeneral tipodocumentogeneral,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormParametroFactuSecuencial!=null) {
							this.jInternalFrameDetalleFormParametroFactuSecuencial.jComboBoxid_tipo_documento_generalParametroFactuSecuencial.setSelectedItem(tipodocumentogeneral);
						}
					} else {
						if(this.jInternalFrameDetalleFormParametroFactuSecuencial!=null) {
							this.jInternalFrameDetalleFormParametroFactuSecuencial.jComboBoxid_tipo_documento_generalParametroFactuSecuencial.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_tipo_documento_generalFK_IdTipoDocumentoGeneralParametroFactuSecuencial.setSelectedItem(tipodocumentogeneral);
						} else {
							this.jComboBoxid_tipo_documento_generalFK_IdTipoDocumentoGeneralParametroFactuSecuencial.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameBodegaForeignKey(Bodega bodega,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormParametroFactuSecuencial!=null) {
							this.jInternalFrameDetalleFormParametroFactuSecuencial.jComboBoxid_bodegaParametroFactuSecuencial.setSelectedItem(bodega);
						}
					} else {
						if(this.jInternalFrameDetalleFormParametroFactuSecuencial!=null) {
							this.jInternalFrameDetalleFormParametroFactuSecuencial.jComboBoxid_bodegaParametroFactuSecuencial.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_bodegaFK_IdBodegaParametroFactuSecuencial.setSelectedItem(bodega);
						} else {
							this.jComboBoxid_bodegaFK_IdBodegaParametroFactuSecuencial.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTipoParamFactuPlazoForeignKey(TipoParamFactuPlazo tipoparamfactuplazo,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormParametroFactuSecuencial!=null) {
							this.jInternalFrameDetalleFormParametroFactuSecuencial.jComboBoxid_tipo_param_factu_plazoParametroFactuSecuencial.setSelectedItem(tipoparamfactuplazo);
						}
					} else {
						if(this.jInternalFrameDetalleFormParametroFactuSecuencial!=null) {
							this.jInternalFrameDetalleFormParametroFactuSecuencial.jComboBoxid_tipo_param_factu_plazoParametroFactuSecuencial.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_tipo_param_factu_plazoFK_IdTipoParamFactuPlazoParametroFactuSecuencial.setSelectedItem(tipoparamfactuplazo);
						} else {
							this.jComboBoxid_tipo_param_factu_plazoFK_IdTipoParamFactuPlazoParametroFactuSecuencial.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameFormatoForeignKey(Formato formato,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormParametroFactuSecuencial!=null) {
							this.jInternalFrameDetalleFormParametroFactuSecuencial.jComboBoxid_formatoParametroFactuSecuencial.setSelectedItem(formato);
						}
					} else {
						if(this.jInternalFrameDetalleFormParametroFactuSecuencial!=null) {
							this.jInternalFrameDetalleFormParametroFactuSecuencial.jComboBoxid_formatoParametroFactuSecuencial.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_formatoFK_IdFormatoParametroFactuSecuencial.setSelectedItem(formato);
						} else {
							this.jComboBoxid_formatoFK_IdFormatoParametroFactuSecuencial.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameBodegaTransferenciaForeignKey(Bodega bodegatransferencia,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormParametroFactuSecuencial!=null) {
							this.jInternalFrameDetalleFormParametroFactuSecuencial.jComboBoxid_bodega_transferenciaParametroFactuSecuencial.setSelectedItem(bodegatransferencia);
						}
					} else {
						if(this.jInternalFrameDetalleFormParametroFactuSecuencial!=null) {
							this.jInternalFrameDetalleFormParametroFactuSecuencial.jComboBoxid_bodega_transferenciaParametroFactuSecuencial.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_bodega_transferenciaFK_IdBodegaTransferenciaParametroFactuSecuencial.setSelectedItem(bodegatransferencia);
						} else {
							this.jComboBoxid_bodega_transferenciaFK_IdBodegaTransferenciaParametroFactuSecuencial.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTransaccionTransferenciaForeignKey(Transaccion transacciontransferencia,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormParametroFactuSecuencial!=null) {
							this.jInternalFrameDetalleFormParametroFactuSecuencial.jComboBoxid_transaccion_transferenciaParametroFactuSecuencial.setSelectedItem(transacciontransferencia);
						}
					} else {
						if(this.jInternalFrameDetalleFormParametroFactuSecuencial!=null) {
							this.jInternalFrameDetalleFormParametroFactuSecuencial.jComboBoxid_transaccion_transferenciaParametroFactuSecuencial.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_transaccion_transferenciaFK_IdTransaccionTransferenciaParametroFactuSecuencial.setSelectedItem(transacciontransferencia);
						} else {
							this.jComboBoxid_transaccion_transferenciaFK_IdTransaccionTransferenciaParametroFactuSecuencial.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

	


	
	public void refrescarForeignKeysDescripcionesParametroFactuSecuencial() throws Exception {
		//SI FUNCIONA DEEPLOAD ESTO VA AL ULTIMO
		if(Constantes.ISUSAEJBLOGICLAYER) {
			ParametroFactuSecuencialConstantesFunciones.refrescarForeignKeysDescripcionesParametroFactuSecuencial(this.parametrofactusecuencialLogic.getParametroFactuSecuencials());
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			ParametroFactuSecuencialConstantesFunciones.refrescarForeignKeysDescripcionesParametroFactuSecuencial(this.parametrofactusecuencials);
		}
		
		/*
		ArrayList<Classe> classes=new ArrayList<Classe>();
		
		classes.add(new Classe(Empresa.class));
		classes.add(new Classe(Sucursal.class));
		classes.add(new Classe(TipoDocumentoGeneral.class));
		classes.add(new Classe(Bodega.class));
		classes.add(new Classe(TipoParamFactuPlazo.class));
		classes.add(new Classe(Formato.class));
		classes.add(new Classe(Transaccion.class));
			
		if(Constantes.ISUSAEJBLOGICLAYER) {
			//USA LOS OBJETOS DE LOGIC DIRECTAMENTE
			//parametrofactusecuencialLogic.setParametroFactuSecuencials(this.parametrofactusecuencials);
			parametrofactusecuencialLogic.deepLoadsWithConnection(false, DeepLoadType.INCLUDE, classes,"");
	
		} else if(Constantes.ISUSAEJBREMOTE) {
		} else if(Constantes.ISUSAEJBHOME) {
		}
		*/				
	}	
	
	
	
	public Integer getiNumeroPaginacion() {
		return iNumeroPaginacion;
	}

	public void setiNumeroPaginacion(Integer iNumeroPaginacion) {
		this.iNumeroPaginacion= iNumeroPaginacion;
	}
	
	public Integer getiNumeroPaginacionPagina() {
		return iNumeroPaginacionPagina;
	}

	public void setiNumeroPaginacionPagina(Integer iNumeroPaginacionPagina) {
		this.iNumeroPaginacionPagina= iNumeroPaginacionPagina;
	}
	
	
	public Boolean getIsSeleccionarTodos() {
		return this.isSeleccionarTodos;
	}

	public void setIsSeleccionarTodos(Boolean isSeleccionarTodos) {
		this.isSeleccionarTodos= isSeleccionarTodos;
	}
	
	public Boolean getEsControlTabla() {
		return this.esControlTabla;
	}

	public void setEsControlTabla(Boolean esControlTabla) {
		this.esControlTabla= esControlTabla;
	}
	
	public Boolean getIsSeleccionados() {
		return this.isSeleccionados;
	}

	public void setIsSeleccionados(Boolean isSeleccionados) {
		this.isSeleccionados= isSeleccionados;
	}
	
	public Boolean getIsPostAccionNuevo() {
		return this.isPostAccionNuevo;
	}

	public void setIsPostAccionNuevo(Boolean isPostAccionNuevo) {
		this.isPostAccionNuevo= isPostAccionNuevo;
	}
	
	public Boolean getIsPostAccionSinCerrar() {
		return this.isPostAccionSinCerrar;
	}

	public void setIsPostAccionSinCerrar(Boolean isPostAccionSinCerrar) {
		this.isPostAccionSinCerrar= isPostAccionSinCerrar;
	}
	
	public Boolean getIsPostAccionSinMensaje() {
		return this.isPostAccionSinMensaje;
	}

	public void setIsPostAccionSinMensaje(Boolean isPostAccionSinMensaje) {
		this.isPostAccionSinMensaje= isPostAccionSinMensaje;
	}
	
	public Boolean getConGraficoReporte() {
		return this.conGraficoReporte;
	}

	public void setConGraficoReporte(Boolean conGraficoReporte) {
		this.conGraficoReporte= conGraficoReporte;
	}
	
	
	public ArrayList<Reporte> gettiposArchivosReportes() {
		return this.tiposArchivosReportes;
	}
	
	public void settiposArchivosReportes(ArrayList<Reporte> tiposArchivosReportes) {
		this.tiposArchivosReportes = tiposArchivosReportes;
	}
	
	//TIPOS ARCHIVOS DINAMICOS
	public ArrayList<Reporte> gettiposArchivosReportesDinamico() {
		return this.tiposArchivosReportesDinamico;
	}
	
	public void settiposArchivosReportesDinamico(ArrayList<Reporte> tiposArchivosReportesDinamico) {
		this.tiposArchivosReportesDinamico = tiposArchivosReportesDinamico;
	}
	
	//TIPOS REPORTES
	public ArrayList<Reporte> gettiposReportes() {
		return this.tiposReportes;
	}
	
	public void settiposReportes(ArrayList<Reporte> tiposReportes) {
		this.tiposReportes = tiposReportes;
	}
	
	//TIPOS REPORTES
	public ArrayList<Reporte> gettiposReportesDinamico() {
		return this.tiposReportesDinamico;
	}
	
	public void settiposReportesDinamico(ArrayList<Reporte> tiposReportesDinamico) {
		this.tiposReportesDinamico = tiposReportesDinamico;
	}
	
	//TIPOS GRAFICOS REPORTES
	public ArrayList<Reporte> gettiposGraficosReportes() {
		return this.tiposGraficosReportes;
	}
	
	public void settiposGraficosReportes(ArrayList<Reporte> tiposGraficosReportes) {
		this.tiposGraficosReportes = tiposGraficosReportes;
	}
	
	public ArrayList<Reporte> gettiposPaginacion() {
		return this.tiposPaginacion;
	}
	
	public void settiposPaginacion(ArrayList<Reporte> tiposPaginacion) {
		this.tiposPaginacion = tiposPaginacion;
	}
	
	public ArrayList<Reporte> gettiposRelaciones() {
		return this.tiposRelaciones;
	}
	
	public void settiposRelaciones(ArrayList<Reporte> tiposRelaciones) {
		this.tiposRelaciones= tiposRelaciones;
	}
	
	public ArrayList<Reporte> gettiposAcciones() {
		return this.tiposAcciones;
	}
	
	public void settiposAcciones(ArrayList<Reporte> tiposAcciones) {
		this.tiposAcciones = tiposAcciones;
	}
	
	public ArrayList<Reporte> gettiposAccionesFormulario() {
		return this.tiposAccionesFormulario;
	}
	
	public void settiposAccionesFormulario(ArrayList<Reporte> tiposAccionesFormulario) {
		this.tiposAccionesFormulario = tiposAccionesFormulario;
	}
	
	public ArrayList<Reporte> gettiposSeleccionar() {
		return this.tiposSeleccionar;
	}
	
	public void settiposSeleccionar(ArrayList<Reporte> tiposSeleccionar) {
		this.tiposSeleccionar = tiposSeleccionar;
	}
	
	public ArrayList<Reporte> gettiposColumnasSelect() {
		return this.tiposColumnasSelect;
	}
	
	public void settiposColumnasSelect(ArrayList<Reporte> tiposColumnasSelect) {
		this.tiposColumnasSelect = tiposColumnasSelect;
	}
		
	public ArrayList<Reporte> gettiposRelacionesSelect() {
		return this.tiposRelacionesSelect;
	}
	
	public void settiposRelacionesSelect(ArrayList<Reporte> tiposRelacionesSelect) {
		this.tiposRelacionesSelect = tiposRelacionesSelect;
	}
	
	public Long getIIdUsuarioSesion() {
		return lIdUsuarioSesion;
	}

	public void setIIdUsuarioSesion(Long lIdUsuarioSesion) {
		this.lIdUsuarioSesion = lIdUsuarioSesion;
	}
	
	
	public List<Accion> getAccions() {
		return this.accions;
	}

	public void setAccions(List<Accion> accions) {
		this.accions = accions;
	}
	
	public List<Accion> getAccionsFormulario() {
		return this.accionsFormulario;
	}

	public void setAccionsFormulario(List<Accion> accionsFormulario) {
		this.accionsFormulario = accionsFormulario;
	}
	
	public String getsAccionMantenimiento() {
		return sAccionMantenimiento;
	}

	public void setsAccionMantenimiento(String sAccionMantenimiento) {
		this.sAccionMantenimiento = sAccionMantenimiento;
	}

	public String getsAccionBusqueda() {
		return sAccionBusqueda;
	}

	public void setsAccionBusqueda(String sAccionBusqueda) {
		this.sAccionBusqueda = sAccionBusqueda;
	}

	public String getsAccionAdicional() {
		return sAccionAdicional;
	}

	public void setsAccionAdicional(String sAccionAdicional) {
		this.sAccionAdicional = sAccionAdicional;
	}

	public String getsUltimaBusqueda() {
		return sUltimaBusqueda;
	}

	public void setsUltimaBusqueda(String sUltimaBusqueda) {
		this.sUltimaBusqueda = sUltimaBusqueda;
	}
	
	public String getsTipoArchivoReporte() {
		return sTipoArchivoReporte;
	}

	public void setsTipoArchivoReporte(String sTipoArchivoReporte) {
		this.sTipoArchivoReporte = sTipoArchivoReporte;
	}
	
	public String getsTipoArchivoReporteDinamico() {
		return sTipoArchivoReporteDinamico;
	}

	public void setsTipoArchivoReporteDinamico(String sTipoArchivoReporteDinamico) {
		this.sTipoArchivoReporteDinamico = sTipoArchivoReporteDinamico;
	}
	
	public String getsTipoReporte() {
		return sTipoReporte;
	}

	public void setsTipoReporte(String sTipoReporte) {
		this.sTipoReporte = sTipoReporte;
	}
	
	public String getsTipoReporteDinamico() {
		return sTipoReporteDinamico;
	}

	public void setsTipoReporteDinamico(String sTipoReporteDinamico) {
		this.sTipoReporteDinamico = sTipoReporteDinamico;
	}
	
	public String getsTipoGraficoReporte() {
		return sTipoGraficoReporte;
	}

	public void setsTipoGraficoReporte(String sTipoGraficoReporte) {
		this.sTipoGraficoReporte = sTipoGraficoReporte;
	}
	
	public String getsTipoPaginacion() {
		return sTipoPaginacion;
	}

	public void setsTipoPaginacion(String sTipoPaginacion) {
		this.sTipoPaginacion = sTipoPaginacion;
	}
	
	public String getsTipoRelacion() {
		return sTipoRelacion;
	}

	public void setsTipoRelacion(String sTipoRelacion) {
		this.sTipoRelacion = sTipoRelacion;
	}
	
	public String getsTipoAccion() {
		return sTipoAccion;
	}

	public void setsTipoAccion(String sTipoAccion) {
		this.sTipoAccion = sTipoAccion;
	}
	
	public String getsTipoAccionFormulario() {
		return sTipoAccionFormulario;
	}

	public void setsTipoAccionFormulario(String sTipoAccionFormulario) {
		this.sTipoAccionFormulario = sTipoAccionFormulario;
	}
	
	public String getsTipoSeleccionar() {
		return sTipoSeleccionar;
	}

	public void setsTipoSeleccionar(String sTipoSeleccionar) {
		this.sTipoSeleccionar = sTipoSeleccionar;
	}
	
	public String getsValorCampoGeneral() {
		return sValorCampoGeneral;
	}

	public void setsValorCampoGeneral(String sValorCampoGeneral) {
		this.sValorCampoGeneral = sValorCampoGeneral;
	}			

	public String getsDetalleReporte() {
		return sDetalleReporte;
	}

	public void setsDetalleReporte(String sDetalleReporte) {
		this.sDetalleReporte = sDetalleReporte;
	}
	
	
	public String getsTipoReporteExtra() {
		return sTipoReporteExtra;
	}

	public void setsTipoReporteExtra(String sTipoReporteExtra) {
		this.sTipoReporteExtra = sTipoReporteExtra;
	}
	
	public Boolean getesReporteDinamico() {
		return esReporteDinamico;
	}	
	
	public void setesReporteDinamico(Boolean esReporteDinamico) {
		this.esReporteDinamico = esReporteDinamico;
	}
	
	public Boolean getesRecargarFks() {
		return esRecargarFks;
	}	
	
	public void setesRecargarFks(Boolean esRecargarFks) {
		this.esRecargarFks = esRecargarFks;
	}
	
	public Boolean getesReporteAccionProceso() {
		return esReporteAccionProceso;
	}	
	
	public void setesReporteAccionProceso(Boolean esReporteAccionProceso) {
		this.esReporteAccionProceso= esReporteAccionProceso;
	}
		
	public ParametroFactuSecuencialParameterReturnGeneral getParametroFactuSecuencialParameterGeneral() {
		return this.parametrofactusecuencialParameterGeneral;
	}
	
	public void setParametroFactuSecuencialParameterGeneral(ParametroFactuSecuencialParameterReturnGeneral parametrofactusecuencialParameterGeneral) {
		this.parametrofactusecuencialParameterGeneral = parametrofactusecuencialParameterGeneral;
	}
	
	public String getsPathReporteDinamico() {
		return sPathReporteDinamico;
	}

	public void setsPathReporteDinamico(String sPathReporteDinamico) {
		this.sPathReporteDinamico = sPathReporteDinamico;
	}
		
	public Boolean getisMostrarNumeroPaginacion() {
		return isMostrarNumeroPaginacion;
	}

	public void setisMostrarNumeroPaginacion(Boolean isMostrarNumeroPaginacion) {
		this.isMostrarNumeroPaginacion = isMostrarNumeroPaginacion;
	}
	
	public Mensaje getMensaje() {
		return mensaje;
	}

	public void setMensaje(Mensaje mensaje) {
		this.mensaje = mensaje;
	}
	
	public Boolean getIsPermisoTodoParametroFactuSecuencial() {
		return isPermisoTodoParametroFactuSecuencial;
	}

	public void setIsPermisoTodoParametroFactuSecuencial(Boolean isPermisoTodoParametroFactuSecuencial) {
		this.isPermisoTodoParametroFactuSecuencial = isPermisoTodoParametroFactuSecuencial;
	}

	public Boolean getIsPermisoNuevoParametroFactuSecuencial() {
		return isPermisoNuevoParametroFactuSecuencial;
	}

	public void setIsPermisoNuevoParametroFactuSecuencial(Boolean isPermisoNuevoParametroFactuSecuencial) {
		this.isPermisoNuevoParametroFactuSecuencial = isPermisoNuevoParametroFactuSecuencial;
	}

	public Boolean getIsPermisoActualizarParametroFactuSecuencial() {
		return isPermisoActualizarParametroFactuSecuencial;
	}

	public void setIsPermisoActualizarParametroFactuSecuencial(Boolean isPermisoActualizarParametroFactuSecuencial) {
		this.isPermisoActualizarParametroFactuSecuencial = isPermisoActualizarParametroFactuSecuencial;
	}

	public Boolean getIsPermisoEliminarParametroFactuSecuencial() {
		return isPermisoEliminarParametroFactuSecuencial;
	}

	public void setIsPermisoEliminarParametroFactuSecuencial(Boolean isPermisoEliminarParametroFactuSecuencial) {
		this.isPermisoEliminarParametroFactuSecuencial = isPermisoEliminarParametroFactuSecuencial;
	}

	public Boolean getIsPermisoGuardarCambiosParametroFactuSecuencial() {
		return isPermisoGuardarCambiosParametroFactuSecuencial;
	}

	public void setIsPermisoGuardarCambiosParametroFactuSecuencial(Boolean isPermisoGuardarCambiosParametroFactuSecuencial) {
		this.isPermisoGuardarCambiosParametroFactuSecuencial = isPermisoGuardarCambiosParametroFactuSecuencial;
	}
	
	public Boolean getIsPermisoConsultaParametroFactuSecuencial() {
		return isPermisoConsultaParametroFactuSecuencial;
	}

	public void setIsPermisoConsultaParametroFactuSecuencial(Boolean isPermisoConsultaParametroFactuSecuencial) {
		this.isPermisoConsultaParametroFactuSecuencial = isPermisoConsultaParametroFactuSecuencial;
	}

	public Boolean getIsPermisoBusquedaParametroFactuSecuencial() {
		return isPermisoBusquedaParametroFactuSecuencial;
	}

	public void setIsPermisoBusquedaParametroFactuSecuencial(Boolean isPermisoBusquedaParametroFactuSecuencial) {
		this.isPermisoBusquedaParametroFactuSecuencial = isPermisoBusquedaParametroFactuSecuencial;
	}

	public Boolean getIsPermisoReporteParametroFactuSecuencial() {
		return isPermisoReporteParametroFactuSecuencial;
	}

	public void setIsPermisoReporteParametroFactuSecuencial(Boolean isPermisoReporteParametroFactuSecuencial) {
		this.isPermisoReporteParametroFactuSecuencial = isPermisoReporteParametroFactuSecuencial;
	}
	
	public Boolean getIsPermisoPaginacionMedioParametroFactuSecuencial() {
		return isPermisoPaginacionMedioParametroFactuSecuencial;
	}

	public void setIsPermisoPaginacionMedioParametroFactuSecuencial(Boolean isPermisoPaginacionMedioParametroFactuSecuencial) {
		this.isPermisoPaginacionMedioParametroFactuSecuencial = isPermisoPaginacionMedioParametroFactuSecuencial;
	}
	
	public Boolean getIsPermisoPaginacionTodoParametroFactuSecuencial() {
		return isPermisoPaginacionTodoParametroFactuSecuencial;
	}

	public void setIsPermisoPaginacionTodoParametroFactuSecuencial(Boolean isPermisoPaginacionTodoParametroFactuSecuencial) {
		this.isPermisoPaginacionTodoParametroFactuSecuencial = isPermisoPaginacionTodoParametroFactuSecuencial;
	}
	
	public Boolean getIsPermisoPaginacionAltoParametroFactuSecuencial() {
		return isPermisoPaginacionAltoParametroFactuSecuencial;
	}

	public void setIsPermisoPaginacionAltoParametroFactuSecuencial(Boolean isPermisoPaginacionAltoParametroFactuSecuencial) {
		this.isPermisoPaginacionAltoParametroFactuSecuencial = isPermisoPaginacionAltoParametroFactuSecuencial;
	}
	
	public Boolean getIsPermisoCopiarParametroFactuSecuencial() {
		return isPermisoCopiarParametroFactuSecuencial;
	}

	public void setIsPermisoCopiarParametroFactuSecuencial(Boolean isPermisoCopiarParametroFactuSecuencial) {
		this.isPermisoCopiarParametroFactuSecuencial = isPermisoCopiarParametroFactuSecuencial;
	}
	
	public Boolean getIsPermisoVerFormParametroFactuSecuencial() {
		return isPermisoVerFormParametroFactuSecuencial;
	}

	public void setIsPermisoVerFormParametroFactuSecuencial(Boolean isPermisoVerFormParametroFactuSecuencial) {
		this.isPermisoVerFormParametroFactuSecuencial = isPermisoVerFormParametroFactuSecuencial;
	}
	
	public Boolean getIsPermisoDuplicarParametroFactuSecuencial() {
		return isPermisoDuplicarParametroFactuSecuencial;
	}

	public void setIsPermisoDuplicarParametroFactuSecuencial(Boolean isPermisoDuplicarParametroFactuSecuencial) {
		this.isPermisoDuplicarParametroFactuSecuencial = isPermisoDuplicarParametroFactuSecuencial;
	}
	
	public Boolean getIsPermisoOrdenParametroFactuSecuencial() {
		return isPermisoOrdenParametroFactuSecuencial;
	}

	public void setIsPermisoOrdenParametroFactuSecuencial(Boolean isPermisoOrdenParametroFactuSecuencial) {
		this.isPermisoOrdenParametroFactuSecuencial = isPermisoOrdenParametroFactuSecuencial;
	}
	
	public String getsVisibilidadTablaBusquedas() {
		return sVisibilidadTablaBusquedas;
	}

	public void setsVisibilidadTablaBusquedas(String sVisibilidadTablaBusquedas) {
		this.sVisibilidadTablaBusquedas = sVisibilidadTablaBusquedas;
	}
	
	public String getsVisibilidadTablaElementos() {
		return sVisibilidadTablaElementos;
	}

	public void setsVisibilidadTablaElementos(String sVisibilidadTablaElementos) {
		this.sVisibilidadTablaElementos = sVisibilidadTablaElementos;
	}

	public String getsVisibilidadTablaAcciones() {
		return sVisibilidadTablaAcciones;
	}

	public void setsVisibilidadTablaAcciones(String sVisibilidadTablaAcciones) {
		this.sVisibilidadTablaAcciones = sVisibilidadTablaAcciones;
	}
	
	public Boolean getIsVisibilidadCeldaNuevoParametroFactuSecuencial() {
		return isVisibilidadCeldaNuevoParametroFactuSecuencial;
	}

	public void setIsVisibilidadCeldaNuevoParametroFactuSecuencial(Boolean isVisibilidadCeldaNuevoParametroFactuSecuencial) {
		this.isVisibilidadCeldaNuevoParametroFactuSecuencial = isVisibilidadCeldaNuevoParametroFactuSecuencial;
	}
	
	public Boolean getIsVisibilidadCeldaDuplicarParametroFactuSecuencial() {
		return isVisibilidadCeldaDuplicarParametroFactuSecuencial;
	}

	public void setIsVisibilidadCeldaDuplicarParametroFactuSecuencial(Boolean isVisibilidadCeldaDuplicarParametroFactuSecuencial) {
		this.isVisibilidadCeldaDuplicarParametroFactuSecuencial = isVisibilidadCeldaDuplicarParametroFactuSecuencial;
	}
	
	public Boolean getIsVisibilidadCeldaCopiarParametroFactuSecuencial() {
		return isVisibilidadCeldaCopiarParametroFactuSecuencial;
	}

	public void setIsVisibilidadCeldaCopiarParametroFactuSecuencial(Boolean isVisibilidadCeldaCopiarParametroFactuSecuencial) {
		this.isVisibilidadCeldaCopiarParametroFactuSecuencial = isVisibilidadCeldaCopiarParametroFactuSecuencial;
	}
	
	public Boolean getIsVisibilidadCeldaVerFormParametroFactuSecuencial() {
		return isVisibilidadCeldaVerFormParametroFactuSecuencial;
	}

	public void setIsVisibilidadCeldaVerFormParametroFactuSecuencial(Boolean isVisibilidadCeldaVerFormParametroFactuSecuencial) {
		this.isVisibilidadCeldaVerFormParametroFactuSecuencial = isVisibilidadCeldaVerFormParametroFactuSecuencial;
	}
	
	public Boolean getIsVisibilidadCeldaOrdenParametroFactuSecuencial() {
		return isVisibilidadCeldaOrdenParametroFactuSecuencial;
	}

	public void setIsVisibilidadCeldaOrdenParametroFactuSecuencial(Boolean isVisibilidadCeldaOrdenParametroFactuSecuencial) {
		this.isVisibilidadCeldaOrdenParametroFactuSecuencial = isVisibilidadCeldaOrdenParametroFactuSecuencial;
	}
	
	public Boolean getIsVisibilidadCeldaNuevoRelacionesParametroFactuSecuencial() {
		return isVisibilidadCeldaNuevoRelacionesParametroFactuSecuencial;
	}

	public void setIsVisibilidadCeldaNuevoRelacionesParametroFactuSecuencial(Boolean isVisibilidadCeldaNuevoRelacionesParametroFactuSecuencial) {
		this.isVisibilidadCeldaNuevoRelacionesParametroFactuSecuencial = isVisibilidadCeldaNuevoRelacionesParametroFactuSecuencial;
	}
	
	public Boolean getIsVisibilidadCeldaModificarParametroFactuSecuencial() {
		return isVisibilidadCeldaModificarParametroFactuSecuencial;
	}

	public void setIsVisibilidadCeldaModificarParametroFactuSecuencial(Boolean isVisibilidadCeldaModificarParametroFactuSecuencial) {
		this.isVisibilidadCeldaModificarParametroFactuSecuencial = isVisibilidadCeldaModificarParametroFactuSecuencial;
	}
	
	public Boolean getIsVisibilidadCeldaActualizarParametroFactuSecuencial() {
		return isVisibilidadCeldaActualizarParametroFactuSecuencial;
	}

	public void setIsVisibilidadCeldaActualizarParametroFactuSecuencial(Boolean isVisibilidadCeldaActualizarParametroFactuSecuencial) {
		this.isVisibilidadCeldaActualizarParametroFactuSecuencial = isVisibilidadCeldaActualizarParametroFactuSecuencial;
	}

	public Boolean getIsVisibilidadCeldaEliminarParametroFactuSecuencial() {
		return isVisibilidadCeldaEliminarParametroFactuSecuencial;
	}

	public void setIsVisibilidadCeldaEliminarParametroFactuSecuencial(Boolean isVisibilidadCeldaEliminarParametroFactuSecuencial) {
		this.isVisibilidadCeldaEliminarParametroFactuSecuencial = isVisibilidadCeldaEliminarParametroFactuSecuencial;
	}

	public Boolean getIsVisibilidadCeldaCancelarParametroFactuSecuencial() {
		return isVisibilidadCeldaCancelarParametroFactuSecuencial;
	}

	public void setIsVisibilidadCeldaCancelarParametroFactuSecuencial(Boolean isVisibilidadCeldaCancelarParametroFactuSecuencial) {
		this.isVisibilidadCeldaCancelarParametroFactuSecuencial = isVisibilidadCeldaCancelarParametroFactuSecuencial;
	}

	public Boolean getIsVisibilidadCeldaGuardarParametroFactuSecuencial() {
		return isVisibilidadCeldaGuardarParametroFactuSecuencial;
	}

	public void setIsVisibilidadCeldaGuardarParametroFactuSecuencial(Boolean isVisibilidadCeldaGuardarParametroFactuSecuencial) {
		this.isVisibilidadCeldaGuardarParametroFactuSecuencial = isVisibilidadCeldaGuardarParametroFactuSecuencial;
	}
	
	public Boolean getIsVisibilidadCeldaGuardarCambiosParametroFactuSecuencial() {
		return isVisibilidadCeldaGuardarCambiosParametroFactuSecuencial;
	}

	public void setIsVisibilidadCeldaGuardarCambiosParametroFactuSecuencial(Boolean isVisibilidadCeldaGuardarCambiosParametroFactuSecuencial) {
		this.isVisibilidadCeldaGuardarCambiosParametroFactuSecuencial = isVisibilidadCeldaGuardarCambiosParametroFactuSecuencial;
	}
		
	public ParametroFactuSecuencialSessionBean getparametrofactusecuencialSessionBean() {
		return this.parametrofactusecuencialSessionBean;
	}
	
	public void setparametrofactusecuencialSessionBean(ParametroFactuSecuencialSessionBean parametrofactusecuencialSessionBean) {
		this.parametrofactusecuencialSessionBean=parametrofactusecuencialSessionBean;
	}
	
	
	public Boolean getisVisibilidadFK_IdBodega() {
		return this.isVisibilidadFK_IdBodega;
	}

	public void setisVisibilidadFK_IdBodega(Boolean isVisibilidadFK_IdBodega) {
		this.isVisibilidadFK_IdBodega=isVisibilidadFK_IdBodega;
	}

	public Boolean getisVisibilidadFK_IdBodegaTransferencia() {
		return this.isVisibilidadFK_IdBodegaTransferencia;
	}

	public void setisVisibilidadFK_IdBodegaTransferencia(Boolean isVisibilidadFK_IdBodegaTransferencia) {
		this.isVisibilidadFK_IdBodegaTransferencia=isVisibilidadFK_IdBodegaTransferencia;
	}

	public Boolean getisVisibilidadFK_IdEmpresa() {
		return this.isVisibilidadFK_IdEmpresa;
	}

	public void setisVisibilidadFK_IdEmpresa(Boolean isVisibilidadFK_IdEmpresa) {
		this.isVisibilidadFK_IdEmpresa=isVisibilidadFK_IdEmpresa;
	}

	public Boolean getisVisibilidadFK_IdFormato() {
		return this.isVisibilidadFK_IdFormato;
	}

	public void setisVisibilidadFK_IdFormato(Boolean isVisibilidadFK_IdFormato) {
		this.isVisibilidadFK_IdFormato=isVisibilidadFK_IdFormato;
	}

	public Boolean getisVisibilidadFK_IdSucursal() {
		return this.isVisibilidadFK_IdSucursal;
	}

	public void setisVisibilidadFK_IdSucursal(Boolean isVisibilidadFK_IdSucursal) {
		this.isVisibilidadFK_IdSucursal=isVisibilidadFK_IdSucursal;
	}

	public Boolean getisVisibilidadFK_IdTipoDocumentoGeneral() {
		return this.isVisibilidadFK_IdTipoDocumentoGeneral;
	}

	public void setisVisibilidadFK_IdTipoDocumentoGeneral(Boolean isVisibilidadFK_IdTipoDocumentoGeneral) {
		this.isVisibilidadFK_IdTipoDocumentoGeneral=isVisibilidadFK_IdTipoDocumentoGeneral;
	}

	public Boolean getisVisibilidadFK_IdTipoParamFactuPlazo() {
		return this.isVisibilidadFK_IdTipoParamFactuPlazo;
	}

	public void setisVisibilidadFK_IdTipoParamFactuPlazo(Boolean isVisibilidadFK_IdTipoParamFactuPlazo) {
		this.isVisibilidadFK_IdTipoParamFactuPlazo=isVisibilidadFK_IdTipoParamFactuPlazo;
	}

	public Boolean getisVisibilidadFK_IdTransaccionTransferencia() {
		return this.isVisibilidadFK_IdTransaccionTransferencia;
	}

	public void setisVisibilidadFK_IdTransaccionTransferencia(Boolean isVisibilidadFK_IdTransaccionTransferencia) {
		this.isVisibilidadFK_IdTransaccionTransferencia=isVisibilidadFK_IdTransaccionTransferencia;
	}

	
	
	public void setVariablesFormularioToObjetoActualForeignKeysParametroFactuSecuencial(ParametroFactuSecuencial parametrofactusecuencial)throws Exception {
		try {
			
				this.setActualParaGuardarEmpresaForeignKey(parametrofactusecuencial,null);
				this.setActualParaGuardarSucursalForeignKey(parametrofactusecuencial,null);
				this.setActualParaGuardarTipoDocumentoGeneralForeignKey(parametrofactusecuencial,null);
				this.setActualParaGuardarBodegaForeignKey(parametrofactusecuencial,null);
				this.setActualParaGuardarTipoParamFactuPlazoForeignKey(parametrofactusecuencial,null);
				this.setActualParaGuardarFormatoForeignKey(parametrofactusecuencial,null);
				this.setActualParaGuardarBodegaTransferenciaForeignKey(parametrofactusecuencial,null);
				this.setActualParaGuardarTransaccionTransferenciaForeignKey(parametrofactusecuencial,null);
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void cargarLicenciaCliente(DatosCliente datosCliente) throws Exception {
		Boolean existe=false;
			
		try {
				InputStream reportFile=null;
				
				String sPath=this.parametroGeneralUsuario.getpath_exportar()+"erp_bydan/license/license.xml";
				
				reportFile = new FileInputStream(sPath);
				
				Document documentBuilder=null;
				
				if(this.constantes2.DOCUMENT_BUILDER==null) {
					documentBuilder=Funciones2.parseXml(reportFile);
				} else {
					documentBuilder=this.constantes2.DOCUMENT_BUILDER;
				}
				
				//GlobalSeguridad.readXml(documentBuilder);
				
				String sNamePCServerLicencia="";
				String sClaveSistemaLicencia="";
				Date dFechaServerLicencia=null;
				
				//CARGAR ELEMENTOS DE LICENCIA
				NodeList nodeList = documentBuilder.getElementsByTagName("Licencia");
				
				for (int iIndice = 0; iIndice < nodeList.getLength(); iIndice++) {
					Node node = nodeList.item(iIndice);
				
					if (node.getNodeType() == Node.ELEMENT_NODE) {
						Element element = (Element) node;
						 
						sNamePCServerLicencia=element.getElementsByTagName("NombrePc").item(0).getTextContent();
						sClaveSistemaLicencia=element.getElementsByTagName("ClaveSistema").item(0).getTextContent();
						
						existe=true;
						break;
					}
				}														
			
				
			if(existe) {
				datosCliente.setsClaveSistema(sClaveSistemaLicencia);
				
				if(!datosCliente.getsNamePCServer().equals(sNamePCServerLicencia)
					&& !datosCliente.getsNamePCServer().equals("")) {
					
					datosCliente.setsNamePCServer(sNamePCServerLicencia);
				}
			} else {
				throw new Exception("NO EXISTE LICENCIA O NO ESTA BIEN FORMADO");
			}
		} catch(Exception e) {
			throw new Exception("NO EXISTE LICENCIA O NO ESTA BIEN FORMADO");
		}						
	}
	
	public void cargarDatosCliente() throws Exception {
		String sPrimerMacAddress="";		
		String sHostName="";		 
		String sHostIp="";		  
		String sHostUser="";
		
		
		sPrimerMacAddress=FuncionesNetwork.getPrimerMacAddress();		
		sHostName=FuncionesNetwork.getHostName();		 
		sHostIp=FuncionesNetwork.getHostIp();		  
		sHostUser=FuncionesNetwork.getHostUser();
		
		
		this.datosCliente=new DatosCliente();
		if(lIdUsuarioSesion!=null){datosCliente.setIdUsuario(this.lIdUsuarioSesion);}
		
		//SERVIDOR WEB Y TALVEZ SERVIDOR SWING WINDOWS
		this.datosCliente.setsUsuarioPCServer(sHostUser);
		this.datosCliente.setsNamePCServer(sHostName);
		this.datosCliente.setsIPPCServer(sHostIp);
		this.datosCliente.setsMacAddressPCServer(sPrimerMacAddress);
			
			//CLIENTE SWING WINDOWS
			this.datosCliente.setIsClienteWeb(false);
			
			this.datosCliente.setsUsuarioPC(sHostUser);
			this.datosCliente.setsNamePC(sHostName);
			this.datosCliente.setsIPPC(sHostIp);
			this.datosCliente.setsMacAddressPC(sPrimerMacAddress);	
			
			
			//this.cargarLicenciaCliente(this.datosCliente);
			
	}
	
	public void bugActualizarReferenciaActual(ParametroFactuSecuencial parametrofactusecuencial,ParametroFactuSecuencial parametrofactusecuencialAux) throws Exception {
		//ARCHITECTURE		
		//EL ID NEGATIVO GUARDADO EN ORIGINAL SIRVE PARA VERIFICAR Y ACTUALIZAR EL REGISTRO NUEVO (ID,VERSIONROW)
		this.setCamposBaseDesdeOriginalParametroFactuSecuencial(parametrofactusecuencial);
					
		//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
		parametrofactusecuencialAux.setId(parametrofactusecuencial.getId());
		parametrofactusecuencialAux.setVersionRow(parametrofactusecuencial.getVersionRow());					
	}
	
	public void ejecutarMantenimiento(MaintenanceType maintenanceType)throws Exception {	
		try	{								
			
			//this.startProcessParametroFactuSecuencial();
		
			int intSelectedRow = this.jTableDatosParametroFactuSecuencial.getSelectedRow();	       
			
			//PUEDE SER -1 CUANDO SE ELIMINA EN GUARDAR CAMBIOS
			if(intSelectedRow>=0 && maintenanceType!=MaintenanceType.GUARDARCAMBIOS) {
				//SE PIEDE INDICE SELECTED CON FILA TOTALES, ASEGURARSE QUE OBJETO ACTUAL ESTE EN FORMULARIO
					
				//ARCHITECTURE
				
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactusecuencial =(ParametroFactuSecuencial) this.parametrofactusecuencialLogic.getParametroFactuSecuencials().toArray()[this.jTableDatosParametroFactuSecuencial.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
					this.parametrofactusecuencial =(ParametroFactuSecuencial) this.parametrofactusecuencials.toArray()[this.jTableDatosParametroFactuSecuencial.convertRowIndexToModel(intSelectedRow)];
				}
				
				//ARCHITECTURE
				
				if(ParametroFactuSecuencialJInternalFrame.ISBINDING_MANUAL_TABLA) {
					//this.setVariablesFormularioToObjetoActualParametroFactuSecuencial(this.parametrofactusecuencial,true);
				}
				
				this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuSecuencial(this.parametrofactusecuencial);
			}
			
			//LUEGO DE TRAER DATOS CORRESPONDIENTES QUE COINCIDA LISTA TABLA QUITO FILA TOTALES
			if(this.conTotales) {
				//MEJOR LO DEJO, SI EXISTE EXCEPCION SE PIEDE FILA TOTALES Y ORDEN INDICE FILA ACTUAL
				//this.quitarFilaTotales();
			}
			
			this.cargarDatosCliente();
			
			this.datosDeep=new DatosDeep();
			
			//SE CAMBIA ESTADOS CON ERROR, ENTONCES SE EJECUTA ANTES
			//this.invalidValues = parametrofactusecuencialValidator.getInvalidValues(this.parametrofactusecuencial);
			
			//if(this.invalidValues==null || this.invalidValues.length<=0) {
			
			parametrofactusecuencialLogic.setDatosCliente(datosCliente);
			parametrofactusecuencialLogic.setIsConDeep(false);
			
			if(maintenanceType==MaintenanceType.NUEVO) {
				parametrofactusecuencialAux=new  ParametroFactuSecuencial();
				
				parametrofactusecuencialAux.setIsNew(true);
				parametrofactusecuencialAux.setIsChanged(true);
				
				parametrofactusecuencialAux.setParametroFactuSecuencialOriginal(this.parametrofactusecuencial);
				
				parametrofactusecuencialAux.setId(this.parametrofactusecuencial.getId());	
				parametrofactusecuencialAux.setVersionRow(this.parametrofactusecuencial.getVersionRow());	
				parametrofactusecuencialAux.setid_empresa(this.parametrofactusecuencial.getid_empresa());	
				parametrofactusecuencialAux.setid_sucursal(this.parametrofactusecuencial.getid_sucursal());	
				parametrofactusecuencialAux.setid_tipo_documento_general(this.parametrofactusecuencial.getid_tipo_documento_general());	
				parametrofactusecuencialAux.setsecuencial(this.parametrofactusecuencial.getsecuencial());	
				parametrofactusecuencialAux.setnumero_digitos(this.parametrofactusecuencial.getnumero_digitos());	
				parametrofactusecuencialAux.setnumero_items(this.parametrofactusecuencial.getnumero_items());	
				parametrofactusecuencialAux.setnumero_descuento(this.parametrofactusecuencial.getnumero_descuento());	
				parametrofactusecuencialAux.setnumero_adiicionales(this.parametrofactusecuencial.getnumero_adiicionales());	
				parametrofactusecuencialAux.setnumero_digito_inicio(this.parametrofactusecuencial.getnumero_digito_inicio());	
				parametrofactusecuencialAux.setnumero_digito_fin(this.parametrofactusecuencial.getnumero_digito_fin());	
				parametrofactusecuencialAux.setnumero_dias_plazo(this.parametrofactusecuencial.getnumero_dias_plazo());	
				parametrofactusecuencialAux.setcon_detalle(this.parametrofactusecuencial.getcon_detalle());	
				parametrofactusecuencialAux.setcon_lector(this.parametrofactusecuencial.getcon_lector());	
				parametrofactusecuencialAux.setid_bodega(this.parametrofactusecuencial.getid_bodega());	
				parametrofactusecuencialAux.setid_tipo_param_factu_plazo(this.parametrofactusecuencial.getid_tipo_param_factu_plazo());	
				parametrofactusecuencialAux.setid_formato(this.parametrofactusecuencial.getid_formato());	
				parametrofactusecuencialAux.setcon_transferencia(this.parametrofactusecuencial.getcon_transferencia());	
				parametrofactusecuencialAux.setid_bodega_transferencia(this.parametrofactusecuencial.getid_bodega_transferencia());	
				parametrofactusecuencialAux.setid_transaccion_transferencia(this.parametrofactusecuencial.getid_transaccion_transferencia());	
								
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//NO ENTENDIBLE PORQUE PONER
					//if(this.parametrofactusecuencialSessionBean.getEstaModoGuardarRelaciones() 
					//	|| this.parametrofactusecuencialSessionBean.getEsGuardarRelacionado())	{
						actualizarLista(parametrofactusecuencialAux,parametrofactusecuencialLogic.getParametroFactuSecuencials());
					//}
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(parametrofactusecuencialAux,parametrofactusecuencials);
				}
				//ARCHITECTURE
				
				if(!isGuardarCambiosEnLote  && !this.parametrofactusecuencialSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.parametrofactusecuencialSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrofactusecuencialLogic.saveParametroFactuSecuencials();//WithConnection
						//parametrofactusecuencialLogic.getSetVersionRowParametroFactuSecuencials();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE		
					
					//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
					this.bugActualizarReferenciaActual(this.parametrofactusecuencial,parametrofactusecuencialAux);
					
					this.refrescarForeignKeysDescripcionesParametroFactuSecuencial();
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					if(this.parametrofactusecuencialSessionBean.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
						}
						//ARCHITECTURE	
						
						if(!this.parametrofactusecuencialSessionBean.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE
												
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								parametrofactusecuencialLogic.saveParametroFactuSecuencialRelaciones(parametrofactusecuencialAux);//WithConnection
								//parametrofactusecuencialLogic.getSetVersionRowParametroFactuSecuencials();//WithConnection
							} else if(Constantes.ISUSAEJBREMOTE) {
							} else if(Constantes.ISUSAEJBHOME) {
							}
							//ARCHITECTURE
							
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							this.bugActualizarReferenciaActual(this.parametrofactusecuencial,parametrofactusecuencialAux);
					
					
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE	
						} else {
							
							
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								if(this.parametrofactusecuencialSessionBean.getEstaModoGuardarRelaciones() 
									|| this.parametrofactusecuencialSessionBean.getEsGuardarRelacionado())	{
									actualizarLista(parametrofactusecuencialAux,parametrofactusecuencialLogic.getParametroFactuSecuencials());
								}
							} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
								actualizarLista(parametrofactusecuencialAux,parametrofactusecuencials);
							}
							//ARCHITECTURE
							
							//AQUI EL ID NEGATIVO ES EL ID BUSCADO, YA QUE NO SE GENERA OTRO EN LA DB POR INGRESAR UNO NUEVO
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							//this.bugActualizarReferenciaActual(this.parametrofactusecuencial,parametrofactusecuencialAux);												
						}
					}
				}
			} else if(maintenanceType==MaintenanceType.ACTUALIZAR) {
				parametrofactusecuencialAux=new  ParametroFactuSecuencial();
				
				//PUEDE QUE SE ACTUALIZE ALGUN REGISTRO NUEVO
				if(!this.parametrofactusecuencialSessionBean.getEsGuardarRelacionado() 
					|| (this.parametrofactusecuencialSessionBean.getEsGuardarRelacionado() && this.parametrofactusecuencial.getId()>=0)) {
						
					parametrofactusecuencialAux.setIsNew(false);
				}
				
				parametrofactusecuencialAux.setIsDeleted(false);
			
				parametrofactusecuencialAux.setId(this.parametrofactusecuencial.getId());	
				parametrofactusecuencialAux.setVersionRow(this.parametrofactusecuencial.getVersionRow());	
				parametrofactusecuencialAux.setid_empresa(this.parametrofactusecuencial.getid_empresa());	
				parametrofactusecuencialAux.setid_sucursal(this.parametrofactusecuencial.getid_sucursal());	
				parametrofactusecuencialAux.setid_tipo_documento_general(this.parametrofactusecuencial.getid_tipo_documento_general());	
				parametrofactusecuencialAux.setsecuencial(this.parametrofactusecuencial.getsecuencial());	
				parametrofactusecuencialAux.setnumero_digitos(this.parametrofactusecuencial.getnumero_digitos());	
				parametrofactusecuencialAux.setnumero_items(this.parametrofactusecuencial.getnumero_items());	
				parametrofactusecuencialAux.setnumero_descuento(this.parametrofactusecuencial.getnumero_descuento());	
				parametrofactusecuencialAux.setnumero_adiicionales(this.parametrofactusecuencial.getnumero_adiicionales());	
				parametrofactusecuencialAux.setnumero_digito_inicio(this.parametrofactusecuencial.getnumero_digito_inicio());	
				parametrofactusecuencialAux.setnumero_digito_fin(this.parametrofactusecuencial.getnumero_digito_fin());	
				parametrofactusecuencialAux.setnumero_dias_plazo(this.parametrofactusecuencial.getnumero_dias_plazo());	
				parametrofactusecuencialAux.setcon_detalle(this.parametrofactusecuencial.getcon_detalle());	
				parametrofactusecuencialAux.setcon_lector(this.parametrofactusecuencial.getcon_lector());	
				parametrofactusecuencialAux.setid_bodega(this.parametrofactusecuencial.getid_bodega());	
				parametrofactusecuencialAux.setid_tipo_param_factu_plazo(this.parametrofactusecuencial.getid_tipo_param_factu_plazo());	
				parametrofactusecuencialAux.setid_formato(this.parametrofactusecuencial.getid_formato());	
				parametrofactusecuencialAux.setcon_transferencia(this.parametrofactusecuencial.getcon_transferencia());	
				parametrofactusecuencialAux.setid_bodega_transferencia(this.parametrofactusecuencial.getid_bodega_transferencia());	
				parametrofactusecuencialAux.setid_transaccion_transferencia(this.parametrofactusecuencial.getid_transaccion_transferencia());	
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					actualizarLista(parametrofactusecuencialAux,parametrofactusecuencialLogic.getParametroFactuSecuencials());
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(parametrofactusecuencialAux,parametrofactusecuencials);
				}
				//ARCHITECTURE
				
				if(!isGuardarCambiosEnLote && !this.parametrofactusecuencialSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.parametrofactusecuencialSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrofactusecuencialLogic.saveParametroFactuSecuencials();//WithConnection
						//parametrofactusecuencialLogic.getSetVersionRowParametroFactuSecuencials();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}	
					//ARCHITECTURE
					
					//TALVEZ ESTA DEMAS POR SER UPDATE
					//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
					this.bugActualizarReferenciaActual(this.parametrofactusecuencial,parametrofactusecuencialAux);
					
					this.refrescarForeignKeysDescripcionesParametroFactuSecuencial();
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					if(this.parametrofactusecuencialSessionBean.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
						}
						//ARCHITECTURE
						
						if(!this.parametrofactusecuencialSessionBean.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								parametrofactusecuencialLogic.saveParametroFactuSecuencialRelaciones(parametrofactusecuencialAux);//WithConnection
								//parametrofactusecuencialLogic.getSetVersionRowParametroFactuSecuencials();//WithConnection
							} else if(Constantes.ISUSAEJBREMOTE) {
							} else if(Constantes.ISUSAEJBHOME) {
							}
							//ARCHITECTURE
							
							//TALVEZ ESTA DEMAS POR SER UPDATE
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							this.bugActualizarReferenciaActual(this.parametrofactusecuencial,parametrofactusecuencialAux);
					
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE
						} else {
							
							
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								if(this.parametrofactusecuencialSessionBean.getEstaModoGuardarRelaciones() 
									|| this.parametrofactusecuencialSessionBean.getEsGuardarRelacionado())	{
									actualizarLista(parametrofactusecuencialAux,parametrofactusecuencialLogic.getParametroFactuSecuencials());
								}
							} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
								actualizarLista(parametrofactusecuencialAux,parametrofactusecuencials);
							}
							//ARCHITECTURE
							
							//AQUI EL ID NEGATIVO ES EL ID BUSCADO, YA QUE NO SE GENERA OTRO EN LA DB POR INGRESAR UNO NUEVO							
							//TALVEZ ESTA DEMAS POR SER UPDATE
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							//this.bugActualizarReferenciaActual(this.parametrofactusecuencial,parametrofactusecuencialAux);
					
						}
					}
				}				
			} else if(maintenanceType==MaintenanceType.ELIMINAR) {
				parametrofactusecuencialAux=new  ParametroFactuSecuencial();
				
				parametrofactusecuencialAux.setIsNew(false);
				parametrofactusecuencialAux.setIsChanged(false);
				
				parametrofactusecuencialAux.setIsDeleted(true);
				
				parametrofactusecuencialAux.setId(this.parametrofactusecuencial.getId());	
				parametrofactusecuencialAux.setVersionRow(this.parametrofactusecuencial.getVersionRow());	
				parametrofactusecuencialAux.setid_empresa(this.parametrofactusecuencial.getid_empresa());	
				parametrofactusecuencialAux.setid_sucursal(this.parametrofactusecuencial.getid_sucursal());	
				parametrofactusecuencialAux.setid_tipo_documento_general(this.parametrofactusecuencial.getid_tipo_documento_general());	
				parametrofactusecuencialAux.setsecuencial(this.parametrofactusecuencial.getsecuencial());	
				parametrofactusecuencialAux.setnumero_digitos(this.parametrofactusecuencial.getnumero_digitos());	
				parametrofactusecuencialAux.setnumero_items(this.parametrofactusecuencial.getnumero_items());	
				parametrofactusecuencialAux.setnumero_descuento(this.parametrofactusecuencial.getnumero_descuento());	
				parametrofactusecuencialAux.setnumero_adiicionales(this.parametrofactusecuencial.getnumero_adiicionales());	
				parametrofactusecuencialAux.setnumero_digito_inicio(this.parametrofactusecuencial.getnumero_digito_inicio());	
				parametrofactusecuencialAux.setnumero_digito_fin(this.parametrofactusecuencial.getnumero_digito_fin());	
				parametrofactusecuencialAux.setnumero_dias_plazo(this.parametrofactusecuencial.getnumero_dias_plazo());	
				parametrofactusecuencialAux.setcon_detalle(this.parametrofactusecuencial.getcon_detalle());	
				parametrofactusecuencialAux.setcon_lector(this.parametrofactusecuencial.getcon_lector());	
				parametrofactusecuencialAux.setid_bodega(this.parametrofactusecuencial.getid_bodega());	
				parametrofactusecuencialAux.setid_tipo_param_factu_plazo(this.parametrofactusecuencial.getid_tipo_param_factu_plazo());	
				parametrofactusecuencialAux.setid_formato(this.parametrofactusecuencial.getid_formato());	
				parametrofactusecuencialAux.setcon_transferencia(this.parametrofactusecuencial.getcon_transferencia());	
				parametrofactusecuencialAux.setid_bodega_transferencia(this.parametrofactusecuencial.getid_bodega_transferencia());	
				parametrofactusecuencialAux.setid_transaccion_transferencia(this.parametrofactusecuencial.getid_transaccion_transferencia());	
				
				if(this.parametrofactusecuencialSessionBean.getEsGuardarRelacionado()) {
					//ELEMENTO ACTUAL NO SE HA INGRESADO AL SISTEMA, NO SE PUEDE ELIMINAR ALGO QUE NO EXISTE
					if(this.parametrofactusecuencialAux.getId()>=0) {	
						this.parametrofactusecuencialsEliminados.add(parametrofactusecuencialAux);											
					}
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					actualizarLista(parametrofactusecuencialAux,parametrofactusecuencialLogic.getParametroFactuSecuencials());
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(parametrofactusecuencialAux,parametrofactusecuencials);
				}
				//ARCHITECTURE
				
				
				if(!isGuardarCambiosEnLote && !this.parametrofactusecuencialSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.parametrofactusecuencialSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrofactusecuencialLogic.saveParametroFactuSecuencials();//WithConnection
						//parametrofactusecuencialLogic.getSetVersionRowParametroFactuSecuencials();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}	
					//ARCHITECTURE
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					if(this.parametrofactusecuencialSessionBean.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
						}
						//ARCHITECTURE
						
						
						if(!this.parametrofactusecuencialSessionBean.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								parametrofactusecuencialLogic.saveParametroFactuSecuencialRelaciones(parametrofactusecuencialAux);//WithConnection
								//parametrofactusecuencialLogic.getSetVersionRowParametroFactuSecuencials();//WithConnection
							} else if(Constantes.ISUSAEJBREMOTE) {
							} else if(Constantes.ISUSAEJBHOME) {
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE
						}
					}  else {
							
						
								
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							if(this.parametrofactusecuencialSessionBean.getEstaModoGuardarRelaciones() 
								|| this.parametrofactusecuencialSessionBean.getEsGuardarRelacionado())	{
								actualizarLista(parametrofactusecuencialAux,parametrofactusecuencialLogic.getParametroFactuSecuencials());
							}
						} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
							actualizarLista(parametrofactusecuencialAux,parametrofactusecuencials);
						}
						//ARCHITECTURE
					}
				}				
			} else if(maintenanceType==MaintenanceType.GUARDARCAMBIOS) {		
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactusecuencialLogic.getParametroFactuSecuencials().addAll(this.parametrofactusecuencialsEliminados);
					
					parametrofactusecuencialLogic.saveParametroFactuSecuencials();//WithConnection
					//parametrofactusecuencialLogic.getSetVersionRowParametroFactuSecuencials();//WithConnection
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}	
				//ARCHITECTURE
				this.refrescarForeignKeysDescripcionesParametroFactuSecuencial();
				
				this.parametrofactusecuencialsEliminados= new ArrayList<ParametroFactuSecuencial>();		
			}
			
			if(this.parametrofactusecuencialSessionBean.getEsGuardarRelacionado()) {
				 this.crearFilaTotales();
			}
			
			
									
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.parametrofactusecuencialSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				if(!this.isPostAccionSinMensaje) {
					JOptionPane.showMessageDialog(this,"Parametro Secuencial  GUARDADO CORRECTAMENTE","MANTENIMIENTO DE Parametro Secuencial ",JOptionPane.INFORMATION_MESSAGE);
					if(maintenanceType==MaintenanceType.NUEVO || maintenanceType==MaintenanceType.ACTUALIZAR) {
						//CUANDO ES NUEVO SE PIERDE REFERENCIA NO SE PORQUE
						this.parametrofactusecuencial=parametrofactusecuencialAux;
					}
				}
			}
			
			this.isErrorGuardar=false;
			
			this.inicializarInvalidValues();
		/*
		} else {
			this.mostrarInvalidValues();	
		}
		*/
			
		} catch(Exception e) {
			this.isErrorGuardar=true;
			
			this.crearFilaTotales();
			
			throw e;
		} finally {
      		//this.finishProcessParametroFactuSecuencial();
      	}
		
	}	
	
	public void actualizarRelaciones(ParametroFactuSecuencial parametrofactusecuencialLocal) throws Exception {
		
		if(this.parametrofactusecuencialSessionBean.getConGuardarRelaciones()) {			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
			
			
			} else {
				
			}
		}
	}
	
	public void actualizarRelacionFkPadreActual(ParametroFactuSecuencial parametrofactusecuencialLocal) throws Exception {	
		if(this.parametrofactusecuencialSessionBean.getEsGuardarRelacionado()) {			
			
		
			if(this.jInternalFrameParent.getClass().equals(EmpresaDetalleFormJInternalFrame.class)) {
				EmpresaBeanSwingJInternalFrame empresaBeanSwingJInternalFrameLocal=(EmpresaBeanSwingJInternalFrame) ((EmpresaDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				empresaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoEmpresa(empresaBeanSwingJInternalFrameLocal.getempresa(),true);
				empresaBeanSwingJInternalFrameLocal.actualizarLista(empresaBeanSwingJInternalFrameLocal.empresa,this.empresasForeignKey);

				empresaBeanSwingJInternalFrameLocal.actualizarRelaciones(empresaBeanSwingJInternalFrameLocal.empresa);

				parametrofactusecuencialLocal.setEmpresa(empresaBeanSwingJInternalFrameLocal.empresa);

				this.addItemDefectoCombosForeignKeyEmpresa();
				this.cargarCombosFrameEmpresasForeignKey("Formulario");
				this.setActualEmpresaForeignKey(empresaBeanSwingJInternalFrameLocal.empresa.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(SucursalDetalleFormJInternalFrame.class)) {
				SucursalBeanSwingJInternalFrame sucursalBeanSwingJInternalFrameLocal=(SucursalBeanSwingJInternalFrame) ((SucursalDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				sucursalBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoSucursal(sucursalBeanSwingJInternalFrameLocal.getsucursal(),true);
				sucursalBeanSwingJInternalFrameLocal.actualizarLista(sucursalBeanSwingJInternalFrameLocal.sucursal,this.sucursalsForeignKey);

				sucursalBeanSwingJInternalFrameLocal.actualizarRelaciones(sucursalBeanSwingJInternalFrameLocal.sucursal);

				parametrofactusecuencialLocal.setSucursal(sucursalBeanSwingJInternalFrameLocal.sucursal);

				this.addItemDefectoCombosForeignKeySucursal();
				this.cargarCombosFrameSucursalsForeignKey("Formulario");
				this.setActualSucursalForeignKey(sucursalBeanSwingJInternalFrameLocal.sucursal.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TipoDocumentoGeneralDetalleFormJInternalFrame.class)) {
				TipoDocumentoGeneralBeanSwingJInternalFrame tipodocumentogeneralBeanSwingJInternalFrameLocal=(TipoDocumentoGeneralBeanSwingJInternalFrame) ((TipoDocumentoGeneralDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				tipodocumentogeneralBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTipoDocumentoGeneral(tipodocumentogeneralBeanSwingJInternalFrameLocal.gettipodocumentogeneral(),true);
				tipodocumentogeneralBeanSwingJInternalFrameLocal.actualizarLista(tipodocumentogeneralBeanSwingJInternalFrameLocal.tipodocumentogeneral,this.tipodocumentogeneralsForeignKey);

				tipodocumentogeneralBeanSwingJInternalFrameLocal.actualizarRelaciones(tipodocumentogeneralBeanSwingJInternalFrameLocal.tipodocumentogeneral);

				parametrofactusecuencialLocal.setTipoDocumentoGeneral(tipodocumentogeneralBeanSwingJInternalFrameLocal.tipodocumentogeneral);

				this.addItemDefectoCombosForeignKeyTipoDocumentoGeneral();
				this.cargarCombosFrameTipoDocumentoGeneralsForeignKey("Formulario");
				this.setActualTipoDocumentoGeneralForeignKey(tipodocumentogeneralBeanSwingJInternalFrameLocal.tipodocumentogeneral.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(BodegaDetalleFormJInternalFrame.class)) {
				BodegaBeanSwingJInternalFrame bodegaBeanSwingJInternalFrameLocal=(BodegaBeanSwingJInternalFrame) ((BodegaDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				bodegaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoBodega(bodegaBeanSwingJInternalFrameLocal.getbodega(),true);
				bodegaBeanSwingJInternalFrameLocal.actualizarLista(bodegaBeanSwingJInternalFrameLocal.bodega,this.bodegasForeignKey);

				bodegaBeanSwingJInternalFrameLocal.actualizarRelaciones(bodegaBeanSwingJInternalFrameLocal.bodega);

				parametrofactusecuencialLocal.setBodega(bodegaBeanSwingJInternalFrameLocal.bodega);

				this.addItemDefectoCombosForeignKeyBodega();
				this.cargarCombosFrameBodegasForeignKey("Formulario");
				this.setActualBodegaForeignKey(bodegaBeanSwingJInternalFrameLocal.bodega.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TipoParamFactuPlazoDetalleFormJInternalFrame.class)) {
				TipoParamFactuPlazoBeanSwingJInternalFrame tipoparamfactuplazoBeanSwingJInternalFrameLocal=(TipoParamFactuPlazoBeanSwingJInternalFrame) ((TipoParamFactuPlazoDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				tipoparamfactuplazoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTipoParamFactuPlazo(tipoparamfactuplazoBeanSwingJInternalFrameLocal.gettipoparamfactuplazo(),true);
				tipoparamfactuplazoBeanSwingJInternalFrameLocal.actualizarLista(tipoparamfactuplazoBeanSwingJInternalFrameLocal.tipoparamfactuplazo,this.tipoparamfactuplazosForeignKey);

				tipoparamfactuplazoBeanSwingJInternalFrameLocal.actualizarRelaciones(tipoparamfactuplazoBeanSwingJInternalFrameLocal.tipoparamfactuplazo);

				parametrofactusecuencialLocal.setTipoParamFactuPlazo(tipoparamfactuplazoBeanSwingJInternalFrameLocal.tipoparamfactuplazo);

				this.addItemDefectoCombosForeignKeyTipoParamFactuPlazo();
				this.cargarCombosFrameTipoParamFactuPlazosForeignKey("Formulario");
				this.setActualTipoParamFactuPlazoForeignKey(tipoparamfactuplazoBeanSwingJInternalFrameLocal.tipoparamfactuplazo.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(FormatoDetalleFormJInternalFrame.class)) {
				FormatoBeanSwingJInternalFrame formatoBeanSwingJInternalFrameLocal=(FormatoBeanSwingJInternalFrame) ((FormatoDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				formatoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoFormato(formatoBeanSwingJInternalFrameLocal.getformato(),true);
				formatoBeanSwingJInternalFrameLocal.actualizarLista(formatoBeanSwingJInternalFrameLocal.formato,this.formatosForeignKey);

				formatoBeanSwingJInternalFrameLocal.actualizarRelaciones(formatoBeanSwingJInternalFrameLocal.formato);

				parametrofactusecuencialLocal.setFormato(formatoBeanSwingJInternalFrameLocal.formato);

				this.addItemDefectoCombosForeignKeyFormato();
				this.cargarCombosFrameFormatosForeignKey("Formulario");
				this.setActualFormatoForeignKey(formatoBeanSwingJInternalFrameLocal.formato.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(BodegaDetalleFormJInternalFrame.class)) {
				BodegaBeanSwingJInternalFrame bodegatransferenciaBeanSwingJInternalFrameLocal=(BodegaBeanSwingJInternalFrame) ((BodegaDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				bodegatransferenciaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoBodega(bodegatransferenciaBeanSwingJInternalFrameLocal.getbodega(),true);
				bodegatransferenciaBeanSwingJInternalFrameLocal.actualizarLista(bodegatransferenciaBeanSwingJInternalFrameLocal.bodega,this.bodegatransferenciasForeignKey);

				bodegatransferenciaBeanSwingJInternalFrameLocal.actualizarRelaciones(bodegatransferenciaBeanSwingJInternalFrameLocal.bodega);

				parametrofactusecuencialLocal.setBodegaTransferencia(bodegatransferenciaBeanSwingJInternalFrameLocal.bodega);

				this.addItemDefectoCombosForeignKeyBodegaTransferencia();
				this.cargarCombosFrameBodegaTransferenciasForeignKey("Formulario");
				this.setActualBodegaTransferenciaForeignKey(bodegatransferenciaBeanSwingJInternalFrameLocal.bodega.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TransaccionDetalleFormJInternalFrame.class)) {
				TransaccionBeanSwingJInternalFrame transacciontransferenciaBeanSwingJInternalFrameLocal=(TransaccionBeanSwingJInternalFrame) ((TransaccionDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				transacciontransferenciaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTransaccion(transacciontransferenciaBeanSwingJInternalFrameLocal.gettransaccion(),true);
				transacciontransferenciaBeanSwingJInternalFrameLocal.actualizarLista(transacciontransferenciaBeanSwingJInternalFrameLocal.transaccion,this.transacciontransferenciasForeignKey);

				transacciontransferenciaBeanSwingJInternalFrameLocal.actualizarRelaciones(transacciontransferenciaBeanSwingJInternalFrameLocal.transaccion);

				parametrofactusecuencialLocal.setTransaccionTransferencia(transacciontransferenciaBeanSwingJInternalFrameLocal.transaccion);

				this.addItemDefectoCombosForeignKeyTransaccionTransferencia();
				this.cargarCombosFrameTransaccionTransferenciasForeignKey("Formulario");
				this.setActualTransaccionTransferenciaForeignKey(transacciontransferenciaBeanSwingJInternalFrameLocal.transaccion.getId(),false,"Formulario");
			}
		
		}
	}
	
	public Boolean validarParametroFactuSecuencialActual() throws Exception {
		Boolean estaValidado=false;
		this.inicializarInvalidValues();
		
		/*
		int intSelectedRow = this.jTableDatosParametroFactuSecuencial.getSelectedRow();
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.parametrofactusecuencial =(ParametroFactuSecuencial) this.parametrofactusecuencialLogic.getParametroFactuSecuencials().toArray()[this.jTableDatosParametroFactuSecuencial.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
			this.parametrofactusecuencial =(ParametroFactuSecuencial) this.parametrofactusecuencials.toArray()[this.jTableDatosParametroFactuSecuencial.convertRowIndexToModel(intSelectedRow)];
		}
		//ARCHITECTURE
		*/
		
		this.invalidValues = parametrofactusecuencialValidator.getInvalidValues(this.parametrofactusecuencial);
					
		if(this.invalidValues==null || this.invalidValues.length<=0) {
			estaValidado=true;
		} else {
			this.mostrarInvalidValues();	
		}
		
		return estaValidado;
	}
	
	public void actualizarLista(ParametroFactuSecuencial parametrofactusecuencial,List<ParametroFactuSecuencial> parametrofactusecuencials) throws Exception {
		try	{		
			ParametroFactuSecuencialConstantesFunciones.actualizarLista(parametrofactusecuencial,parametrofactusecuencials,this.parametrofactusecuencialSessionBean.getEsGuardarRelacionado());		
		} catch(Exception e) {
			throw e;
		}
	}		
	
	public void actualizarSelectedLista(ParametroFactuSecuencial parametrofactusecuencial,List<ParametroFactuSecuencial> parametrofactusecuencials) throws Exception {
		try	{			
			ParametroFactuSecuencialConstantesFunciones.actualizarSelectedLista(parametrofactusecuencial,parametrofactusecuencials);
		} catch(Exception e) {
			throw e;
		}
	}	
	
	public Boolean tieneElementosSeleccionados() throws Exception {
		Boolean tiene=false;
		
		List<ParametroFactuSecuencial> parametrofactusecuencialsLocal=null;
		
		try	{			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				parametrofactusecuencialsLocal=this.parametrofactusecuencialLogic.getParametroFactuSecuencials();
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
				parametrofactusecuencialsLocal=this.parametrofactusecuencials;
			}
			//ARCHITECTURE
		
			for(ParametroFactuSecuencial parametrofactusecuencialLocal:parametrofactusecuencialsLocal) {
				if(this.permiteMantenimiento(parametrofactusecuencialLocal) && parametrofactusecuencialLocal.getIsSelected()) {
					tiene=true;
					break;
				}
			}
		} catch(Exception e) {
			throw e;
		}
		
		return tiene;
	}			
	
	public void mostrarInvalidValues() throws Exception {
		String sMensaje="";
				
		for (InvalidValue invalidValue : this.invalidValues) {
			sMensaje+="\r\n"+ParametroFactuSecuencialConstantesFunciones.getParametroFactuSecuencialLabelDesdeNombre(invalidValue.getPropertyName())+"->"+invalidValue.getMessage();
			
			//MOSTRAR CAMPOS INVALIDOS
			if(invalidValue.getPropertyName().equals(ParametroFactuSecuencialConstantesFunciones.IDEMPRESA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroFactuSecuencial.jLabelid_empresaParametroFactuSecuencial,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroFactuSecuencialConstantesFunciones.IDSUCURSAL)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroFactuSecuencial.jLabelid_sucursalParametroFactuSecuencial,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroFactuSecuencialConstantesFunciones.IDTIPODOCUMENTOGENERAL)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroFactuSecuencial.jLabelid_tipo_documento_generalParametroFactuSecuencial,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroFactuSecuencialConstantesFunciones.SECUENCIAL)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroFactuSecuencial.jLabelsecuencialParametroFactuSecuencial,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroFactuSecuencialConstantesFunciones.NUMERODIGITOS)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroFactuSecuencial.jLabelnumero_digitosParametroFactuSecuencial,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroFactuSecuencialConstantesFunciones.NUMEROITEMS)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroFactuSecuencial.jLabelnumero_itemsParametroFactuSecuencial,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroFactuSecuencialConstantesFunciones.NUMERODESCUENTO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroFactuSecuencial.jLabelnumero_descuentoParametroFactuSecuencial,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroFactuSecuencialConstantesFunciones.NUMEROADIICIONALES)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroFactuSecuencial.jLabelnumero_adiicionalesParametroFactuSecuencial,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroFactuSecuencialConstantesFunciones.NUMERODIGITOINICIO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroFactuSecuencial.jLabelnumero_digito_inicioParametroFactuSecuencial,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroFactuSecuencialConstantesFunciones.NUMERODIGITOFIN)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroFactuSecuencial.jLabelnumero_digito_finParametroFactuSecuencial,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroFactuSecuencialConstantesFunciones.NUMERODIASPLAZO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroFactuSecuencial.jLabelnumero_dias_plazoParametroFactuSecuencial,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroFactuSecuencialConstantesFunciones.CONDETALLE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroFactuSecuencial.jLabelcon_detalleParametroFactuSecuencial,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroFactuSecuencialConstantesFunciones.CONLECTOR)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroFactuSecuencial.jLabelcon_lectorParametroFactuSecuencial,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroFactuSecuencialConstantesFunciones.IDBODEGA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroFactuSecuencial.jLabelid_bodegaParametroFactuSecuencial,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroFactuSecuencialConstantesFunciones.IDTIPOPARAMFACTUPLAZO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroFactuSecuencial.jLabelid_tipo_param_factu_plazoParametroFactuSecuencial,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroFactuSecuencialConstantesFunciones.IDFORMATO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroFactuSecuencial.jLabelid_formatoParametroFactuSecuencial,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroFactuSecuencialConstantesFunciones.CONTRANSFERENCIA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroFactuSecuencial.jLabelcon_transferenciaParametroFactuSecuencial,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroFactuSecuencialConstantesFunciones.IDBODEGATRANSFERENCIA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroFactuSecuencial.jLabelid_bodega_transferenciaParametroFactuSecuencial,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroFactuSecuencialConstantesFunciones.IDTRANSACCIONTRANSFERENCIA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroFactuSecuencial.jLabelid_transaccion_transferenciaParametroFactuSecuencial,invalidValue.getMessage());}
        }
		
		
		if(!sMensaje.equals("")) {
			//JOptionPane.showMessageDialog(this,sMensaje,"VALIDACION ",JOptionPane.ERROR_MESSAGE);
			throw new Exception(sMensaje);			
		}
		
		/*
		System.out.println(invalidValue);
        System.out.println("message=" + invalidValue.getMessage());
        System.out.println("propertyName=" + invalidValue.getPropertyName());
        System.out.println("propertyPath=" + invalidValue.getPropertyPath());
        System.out.println("value=" + invalidValue.getValue());
        */
	}		
	
	public void inicializarInvalidValues() throws Exception {
		String sMensaje="";	
		
		if(this.jInternalFrameDetalleFormParametroFactuSecuencial!=null) {
		
		//MOSTRAR CAMPOS INVALIDOS
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroFactuSecuencial.jLabelid_empresaParametroFactuSecuencial,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroFactuSecuencial.jLabelid_sucursalParametroFactuSecuencial,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroFactuSecuencial.jLabelid_tipo_documento_generalParametroFactuSecuencial,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroFactuSecuencial.jLabelsecuencialParametroFactuSecuencial,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroFactuSecuencial.jLabelnumero_digitosParametroFactuSecuencial,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroFactuSecuencial.jLabelnumero_itemsParametroFactuSecuencial,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroFactuSecuencial.jLabelnumero_descuentoParametroFactuSecuencial,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroFactuSecuencial.jLabelnumero_adiicionalesParametroFactuSecuencial,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroFactuSecuencial.jLabelnumero_digito_inicioParametroFactuSecuencial,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroFactuSecuencial.jLabelnumero_digito_finParametroFactuSecuencial,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroFactuSecuencial.jLabelnumero_dias_plazoParametroFactuSecuencial,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroFactuSecuencial.jLabelcon_detalleParametroFactuSecuencial,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroFactuSecuencial.jLabelcon_lectorParametroFactuSecuencial,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroFactuSecuencial.jLabelid_bodegaParametroFactuSecuencial,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroFactuSecuencial.jLabelid_tipo_param_factu_plazoParametroFactuSecuencial,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroFactuSecuencial.jLabelid_formatoParametroFactuSecuencial,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroFactuSecuencial.jLabelcon_transferenciaParametroFactuSecuencial,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroFactuSecuencial.jLabelid_bodega_transferenciaParametroFactuSecuencial,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroFactuSecuencial.jLabelid_transaccion_transferenciaParametroFactuSecuencial,"");
		
		}
	}
	
	
	
	public void actualizarObjetoPadreFk(String sTipo)  throws Exception {
		if(sTipo.equals("XXXAuxiliar")) {
		
		}
		
	}
	
	public void nuevoPreparar() throws Exception {
		this.nuevoPreparar(false);
	}
	
	public void nuevoPreparar(Boolean esNuevoGuardarCambios) throws Exception {
		this.iIdNuevoParametroFactuSecuencial--;	
		
		
		this.parametrofactusecuencialAux=new ParametroFactuSecuencial();
		
		this.parametrofactusecuencialAux.setId(this.iIdNuevoParametroFactuSecuencial);
		this.parametrofactusecuencialAux.setIsChanged(true);
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.parametrofactusecuencialLogic.getParametroFactuSecuencials().add(this.parametrofactusecuencialAux);
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			this.parametrofactusecuencials.add(this.parametrofactusecuencialAux);
		}
		//ARCHITECTURE
		
		this.parametrofactusecuencial=this.parametrofactusecuencialAux;
		
		if(ParametroFactuSecuencialJInternalFrame.ISBINDING_MANUAL_TABLA) {
			this.setVariablesObjetoActualToFormularioParametroFactuSecuencial(this.parametrofactusecuencial);
			this.setVariablesObjetoActualToFormularioForeignKeyParametroFactuSecuencial(this.parametrofactusecuencial);
		}
				
		//this.setDefaultControlesParametroFactuSecuencial();
		
		this.inicializarInvalidValues();
				
		//SELECCIONA ITEM DEFECTO-->SET O SELECTED INDEX
		this.setItemDefectoCombosForeignKeyParametroFactuSecuencial();
		
		
		//INICIALIZA VARIABLES COMBOS GLOBALES A FORMULARIO(ParametroGeneralUsuario)
		this.setVariablesGlobalesCombosForeignKeyParametroFactuSecuencial();
		
		//INICIALIZA VARIABLES COMBOS GLOBALES AUXILIARES A FORMULARIO(Anio,Mes)
		//this.setVariablesGlobalesAuxiliaresCombosForeignKeyParametroFactuSecuencial();
		
		//SI TIENE FOREIGN KEY CON CAMPO esDefecto=true, SE ACTUALIZA A OBJETO ACTUAL
		this.setVariablesForeignKeyObjetoBeanDefectoActualToObjetoActualParametroFactuSecuencial(this.parametrofactusecuencialBean,this.parametrofactusecuencial,false,false);
		
		//ACTUALIZA VALORES PARA EL OBJETO ACTUAL ANTES DE ENVIARLO A ACTUALIZAR
		this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuSecuencial(this.parametrofactusecuencial);
				
		ArrayList<Classe> classes=new ArrayList<Classe>();
		
		if(this.jInternalFrameParent!=null) {
			this.jInternalFrameParent.actualizarObjetoPadreFk(ParametroFactuSecuencialConstantesFunciones.CLASSNAME);
		}	
		
		
		if(this.parametrofactusecuencialSessionBean.getConGuardarRelaciones()) {
			classes=ParametroFactuSecuencialConstantesFunciones.getClassesRelationshipsOfParametroFactuSecuencial(new ArrayList<Classe>(),DeepLoadType.NONE);
		}
		
		this.classesActual=new ArrayList<Classe>();
		this.classesActual.addAll(classes);
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {						
			this.parametrofactusecuencialReturnGeneral=parametrofactusecuencialLogic.procesarEventosParametroFactuSecuencialsWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,EventoGlobalTipo.FORM_RECARGAR,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.parametrofactusecuencialLogic.getParametroFactuSecuencials(),this.parametrofactusecuencial,this.parametrofactusecuencialParameterGeneral,this.isEsNuevoParametroFactuSecuencial,classes);//this.parametrofactusecuencialLogic.getParametroFactuSecuencial()
						
		} else if(Constantes.ISUSAEJBREMOTE) {
						
		} else if(Constantes.ISUSAEJBHOME) {
		}
		//ARCHITECTURE
		
		//ACTUALIZA VARIABLES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
		//this.setVariablesObjetoReturnGeneralToBeanParametroFactuSecuencial(this.parametrofactusecuencialReturnGeneral,this.parametrofactusecuencialBean,false);
		
		if(this.parametrofactusecuencialReturnGeneral.getConRecargarPropiedades()) {
			//INICIALIZA VARIABLES COMBOS NORMALES (FK)
			this.setVariablesObjetoActualToFormularioForeignKeyParametroFactuSecuencial(this.parametrofactusecuencialReturnGeneral.getParametroFactuSecuencial());
			
			//INICIALIZA VARIABLES NORMALES A FORMULARIO(SIN FK)
			this.setVariablesObjetoActualToFormularioParametroFactuSecuencial(this.parametrofactusecuencialReturnGeneral.getParametroFactuSecuencial());
		}
		
		if(this.parametrofactusecuencialReturnGeneral.getConRecargarRelaciones()) {
			//INICIALIZA VARIABLES RELACIONES A FORMULARIO
			this.setVariablesRelacionesObjetoActualToFormularioParametroFactuSecuencial(this.parametrofactusecuencialReturnGeneral.getParametroFactuSecuencial(),classes);//this.parametrofactusecuencialBean);	
		}
			
		//ACTUALIZA VARIABLES FORMULARIO A OBJETO ACTUAL (PARA NUEVO TABLA O GUARDAR CAMBIOS
		if(esNuevoGuardarCambios) {
			this.setVariablesFormularioToObjetoActualParametroFactuSecuencial(this.parametrofactusecuencial,false);
		}
		
		//INICIALIZA VARIABLES COMBOS DEFAULT DEL PROYECTO(|DEFAULT para FK)
		//this.setVariablesDefaultCombosForeignKeyParametroFactuSecuencial();
		
		//INICIALIZA VARIABLES COMBOS PARAMETRO DEL PROYECTO(|VALORPARAM Era para ParametroModulo, ahora en logic)
		//this.setVariablesParametroCombosForeignKeyParametroFactuSecuencial();						
		
		if(!esNuevoGuardarCambios) {
			//INICIALIZA VARIABLES POR OPCION MENU
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			ParametroFactuSecuencialBeanSwingJInternalFrameAdditional.RecargarFormParametroFactuSecuencial(this,"NUEVO_PREPARAR","",this.arrDatoGeneral);
		
			//NO FUNCIONA BINDINGS			
			this.inicializarActualizarBindingParametroFactuSecuencial(false);
						
			if(parametrofactusecuencialSessionBean.getConGuardarRelaciones()) {
				//DEBERIA YA ESTAR CARGADO LOS COMBOS Y SI SE NECESITA ALGO MAS SE DEBE CREAR FUNCION LIMITADA
				//SI DEBE TRAER Y RESETEAR TABLA
								
			}
				
			//SI ES MANUAL
			if(ParametroFactuSecuencialJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualParametroFactuSecuencial();
			}
			
			this.actualizarVisualTableDatosParametroFactuSecuencial();
			
			this.jTableDatosParametroFactuSecuencial.setRowSelectionInterval(this.getIndiceNuevoParametroFactuSecuencial(), this.getIndiceNuevoParametroFactuSecuencial());
			
			this.seleccionarFilaTablaParametroFactuSecuencialActual();
						
			this.actualizarEstadoCeldasBotonesParametroFactuSecuencial("a", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
		
		}		
	}
	
	public void habilitarDeshabilitarControlesParametroFactuSecuencial(Boolean isHabilitar) throws Exception {
		
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jTextFieldsecuencialParametroFactuSecuencial.setEnabled(isHabilitar && this.parametrofactusecuencialConstantesFunciones.activarsecuencialParametroFactuSecuencial);
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jTextFieldnumero_digitosParametroFactuSecuencial.setEnabled(isHabilitar && this.parametrofactusecuencialConstantesFunciones.activarnumero_digitosParametroFactuSecuencial);
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jTextFieldnumero_itemsParametroFactuSecuencial.setEnabled(isHabilitar && this.parametrofactusecuencialConstantesFunciones.activarnumero_itemsParametroFactuSecuencial);
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jTextFieldnumero_descuentoParametroFactuSecuencial.setEnabled(isHabilitar && this.parametrofactusecuencialConstantesFunciones.activarnumero_descuentoParametroFactuSecuencial);
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jTextFieldnumero_adiicionalesParametroFactuSecuencial.setEnabled(isHabilitar && this.parametrofactusecuencialConstantesFunciones.activarnumero_adiicionalesParametroFactuSecuencial);
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jTextFieldnumero_digito_inicioParametroFactuSecuencial.setEnabled(isHabilitar && this.parametrofactusecuencialConstantesFunciones.activarnumero_digito_inicioParametroFactuSecuencial);
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jTextFieldnumero_digito_finParametroFactuSecuencial.setEnabled(isHabilitar && this.parametrofactusecuencialConstantesFunciones.activarnumero_digito_finParametroFactuSecuencial);
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jTextFieldnumero_dias_plazoParametroFactuSecuencial.setEnabled(isHabilitar && this.parametrofactusecuencialConstantesFunciones.activarnumero_dias_plazoParametroFactuSecuencial);
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jCheckBoxcon_detalleParametroFactuSecuencial.setEnabled(isHabilitar && this.parametrofactusecuencialConstantesFunciones.activarcon_detalleParametroFactuSecuencial);
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jCheckBoxcon_lectorParametroFactuSecuencial.setEnabled(isHabilitar && this.parametrofactusecuencialConstantesFunciones.activarcon_lectorParametroFactuSecuencial);
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jCheckBoxcon_transferenciaParametroFactuSecuencial.setEnabled(isHabilitar && this.parametrofactusecuencialConstantesFunciones.activarcon_transferenciaParametroFactuSecuencial);	
		//
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jComboBoxid_empresaParametroFactuSecuencial.setEnabled(isHabilitar && this.parametrofactusecuencialConstantesFunciones.activarid_empresaParametroFactuSecuencial);//
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jComboBoxid_sucursalParametroFactuSecuencial.setEnabled(isHabilitar && this.parametrofactusecuencialConstantesFunciones.activarid_sucursalParametroFactuSecuencial);
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jComboBoxid_tipo_documento_generalParametroFactuSecuencial.setEnabled(isHabilitar && this.parametrofactusecuencialConstantesFunciones.activarid_tipo_documento_generalParametroFactuSecuencial);
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jComboBoxid_bodegaParametroFactuSecuencial.setEnabled(isHabilitar && this.parametrofactusecuencialConstantesFunciones.activarid_bodegaParametroFactuSecuencial);
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jComboBoxid_tipo_param_factu_plazoParametroFactuSecuencial.setEnabled(isHabilitar && this.parametrofactusecuencialConstantesFunciones.activarid_tipo_param_factu_plazoParametroFactuSecuencial);
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jComboBoxid_formatoParametroFactuSecuencial.setEnabled(isHabilitar && this.parametrofactusecuencialConstantesFunciones.activarid_formatoParametroFactuSecuencial);
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jComboBoxid_bodega_transferenciaParametroFactuSecuencial.setEnabled(isHabilitar && this.parametrofactusecuencialConstantesFunciones.activarid_bodega_transferenciaParametroFactuSecuencial);
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jComboBoxid_transaccion_transferenciaParametroFactuSecuencial.setEnabled(isHabilitar && this.parametrofactusecuencialConstantesFunciones.activarid_transaccion_transferenciaParametroFactuSecuencial);
	};
	
	public void setDefaultControlesParametroFactuSecuencial() throws Exception {
			
	};
	
	
	public void habilitarDeshabilitarTipoMantenimientoParametroFactuSecuencial(Boolean esRelaciones) throws Exception {
		if(esRelaciones) {
			//this.parametrofactusecuencialSessionBean.setConGuardarRelaciones(true);			
			this.parametrofactusecuencialSessionBean.setEstaModoGuardarRelaciones(true);				
			this.jInternalFrameDetalleFormParametroFactuSecuencial.jTabbedPaneRelacionesParametroFactuSecuencial.setVisible(true);
			
					
		} else {
			//this.parametrofactusecuencialSessionBean.setConGuardarRelaciones(false);			
			this.parametrofactusecuencialSessionBean.setEstaModoGuardarRelaciones(false);						
			this.jInternalFrameDetalleFormParametroFactuSecuencial.jTabbedPaneRelacionesParametroFactuSecuencial.setVisible(false);
			
			
		}
	};
	
	public int getIndiceNuevoParametroFactuSecuencial() throws Exception {
		int iIndice=0;
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(ParametroFactuSecuencial parametrofactusecuencialAux:this.parametrofactusecuencialLogic.getParametroFactuSecuencials()) {
				if(parametrofactusecuencialAux.getId().equals(this.iIdNuevoParametroFactuSecuencial)) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(ParametroFactuSecuencial parametrofactusecuencialAux:this.parametrofactusecuencials) {
				if(parametrofactusecuencialAux.getId().equals(this.iIdNuevoParametroFactuSecuencial)) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
			iIndice=iIndice-1;
		}
		
		return iIndice;
	}
	
	public int getIndiceActualParametroFactuSecuencial(ParametroFactuSecuencial parametrofactusecuencial,Integer iIndiceActual) throws Exception {
		Integer iIndice=0;
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(ParametroFactuSecuencial parametrofactusecuencialAux:this.parametrofactusecuencialLogic.getParametroFactuSecuencials()) {
				if(parametrofactusecuencialAux.getId().equals(parametrofactusecuencial.getId())) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(ParametroFactuSecuencial parametrofactusecuencialAux:this.parametrofactusecuencials) {
				if(parametrofactusecuencialAux.getId().equals(parametrofactusecuencial.getId())) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
			iIndice=iIndiceActual;
		}
		
		return iIndice;
	}
	
	public void setCamposBaseDesdeOriginalParametroFactuSecuencial(ParametroFactuSecuencial parametrofactusecuencialOriginal) throws Exception {
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(ParametroFactuSecuencial parametrofactusecuencialAux:this.parametrofactusecuencialLogic.getParametroFactuSecuencials()) {
				if(parametrofactusecuencialAux.getParametroFactuSecuencialOriginal().getId().equals(parametrofactusecuencialOriginal.getId())) {
					existe=true;
					parametrofactusecuencialOriginal.setId(parametrofactusecuencialAux.getId());
					parametrofactusecuencialOriginal.setVersionRow(parametrofactusecuencialAux.getVersionRow());
					break;
				}
				
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(ParametroFactuSecuencial parametrofactusecuencialAux:this.parametrofactusecuencials) {
				if(parametrofactusecuencialAux.getParametroFactuSecuencialOriginal().getId().equals(parametrofactusecuencialOriginal.getId())) {
					existe=true;
					parametrofactusecuencialOriginal.setId(parametrofactusecuencialAux.getId());
					parametrofactusecuencialOriginal.setVersionRow(parametrofactusecuencialAux.getVersionRow());
					break;
				}				
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
		}
	}
	
	public void cancelarNuevosParametroFactuSecuencial(Boolean esParaCancelar) throws Exception {
		parametrofactusecuencialsAux=new ArrayList<ParametroFactuSecuencial>();
		parametrofactusecuencialAux=new ParametroFactuSecuencial();
		
		if(!this.parametrofactusecuencialSessionBean.getEsGuardarRelacionado()) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				for(ParametroFactuSecuencial parametrofactusecuencialAux:this.parametrofactusecuencialLogic.getParametroFactuSecuencials()) {
					if(parametrofactusecuencialAux.getId()<0) {
						parametrofactusecuencialsAux.add(parametrofactusecuencialAux);
					}		
				}
				this.iIdNuevoParametroFactuSecuencial=0L;
				this.parametrofactusecuencialLogic.getParametroFactuSecuencials().removeAll(parametrofactusecuencialsAux);
					
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(ParametroFactuSecuencial parametrofactusecuencialAux:this.parametrofactusecuencials) {
					if(parametrofactusecuencialAux.getId()<0) {
						parametrofactusecuencialsAux.add(parametrofactusecuencialAux);
					}		
				}
				this.iIdNuevoParametroFactuSecuencial=0L;
				this.parametrofactusecuencials.removeAll(parametrofactusecuencialsAux);
			}	
		} else {			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				if(esParaCancelar && this.isEsNuevoParametroFactuSecuencial 
					&& this.parametrofactusecuencialLogic.getParametroFactuSecuencials().size()>0
					) {
					parametrofactusecuencialAux=this.parametrofactusecuencialLogic.getParametroFactuSecuencials().get(this.parametrofactusecuencialLogic.getParametroFactuSecuencials().size() - 1);
				
					if(parametrofactusecuencialAux.getId()<0) {
						this.parametrofactusecuencialLogic.getParametroFactuSecuencials().remove(parametrofactusecuencialAux);
					}
				}
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				if(esParaCancelar && this.isEsNuevoParametroFactuSecuencial && this.parametrofactusecuencials.size()>0) {
					parametrofactusecuencialAux=this.parametrofactusecuencials.get(this.parametrofactusecuencials.size() - 1);
				
					if(parametrofactusecuencialAux.getId()<0) {
						this.parametrofactusecuencials.remove(parametrofactusecuencialAux);
					}
				}
			}	
		}
	}
	
	public void cancelarNuevoParametroFactuSecuencial(Boolean esParaCancelar) throws Exception {
		if(Constantes.ISUSAEJBLOGICLAYER) {
			if(parametrofactusecuencial.getId()<0) {
				this.parametrofactusecuencialLogic.getParametroFactuSecuencials().remove(this.parametrofactusecuencial);
			}					
		} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
			if(parametrofactusecuencial.getId()<0) {
				this.parametrofactusecuencials.remove(this.parametrofactusecuencial);
			}
		}			
	}
	
	public void setEstadosInicialesParametroFactuSecuencial(List<ParametroFactuSecuencial> parametrofactusecuencialsAux) throws Exception {
		ParametroFactuSecuencialConstantesFunciones.setEstadosInicialesParametroFactuSecuencial(parametrofactusecuencialsAux);
	}
	
	public void setEstadosInicialesParametroFactuSecuencial(ParametroFactuSecuencial parametrofactusecuencialAux) throws Exception {
		ParametroFactuSecuencialConstantesFunciones.setEstadosInicialesParametroFactuSecuencial(parametrofactusecuencialAux);		
	}
	
	public void nuevo() throws Exception {
		try	{
			//ESTA VALIDADO EN FUNCION ACTUALIZAR
			//if(this.validarParametroFactuSecuencialActual()) {
				this.ejecutarMantenimiento(MaintenanceType.NUEVO);
				
				this.actualizarEstadoCeldasBotonesParametroFactuSecuencial("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
				
			//}
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,ParametroFactuSecuencialConstantesFunciones.CLASSNAME);
		}
	}
	
	public void actualizar() throws Exception {
		try	{
			if(this.validarParametroFactuSecuencialActual()) {
				if(!this.isEsNuevoParametroFactuSecuencial) {
					this.ejecutarMantenimiento(MaintenanceType.ACTUALIZAR);
					
					this.actualizarEstadoCeldasBotonesParametroFactuSecuencial("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
					
				} else {					
					this.nuevo();
					this.isEsNuevoParametroFactuSecuencial=false;
				}
				
				//SE CANCELA AL FINAL DEL PROCESO JBUTTONACTUALIZAR
				//this.cancelar(false);
			}		
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,ParametroFactuSecuencialConstantesFunciones.CLASSNAME);
		}
	}
	
	public void eliminar() throws Exception {
		try	{	
			if(this.validarParametroFactuSecuencialActual()) {
				if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE ELIMINAR EL/LA Parametro Secuencial  ?", "MANTENIMIENTO DE Parametro Secuencial ", JOptionPane.OK_CANCEL_OPTION) == 0) {
					this.ejecutarMantenimiento(MaintenanceType.ELIMINAR);			
					this.actualizarEstadoCeldasBotonesParametroFactuSecuencial("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
				}
			
			}
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,ParametroFactuSecuencialConstantesFunciones.CLASSNAME);
		}
	}
	
	public void guardarCambios() throws Exception {
		try	{
			this.ejecutarMantenimiento(MaintenanceType.GUARDARCAMBIOS);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroFactuSecuencialConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarAsignar(ParametroFactuSecuencial parametrofactusecuencial) throws Exception {
		ParametroFactuSecuencialConstantesFunciones.seleccionarAsignar(this.parametrofactusecuencial,parametrofactusecuencial);
	}
	
	public void seleccionar() throws Exception {
		try	{
			//ACTUALIZO EL PERMISO ACTUALIZAR CON EL PERMISO ACTUALIZAR ORIGINAL ESTE PERMISO SE UTILIZA PARA EL NUEVO TAMBIEN
			this.isPermisoActualizarParametroFactuSecuencial=this.isPermisoActualizarOriginalParametroFactuSecuencial;
			
			
			this.seleccionarAsignar(parametrofactusecuencial);
			
			
			
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			ParametroFactuSecuencialConstantesFunciones.quitarEspaciosParametroFactuSecuencial(this.parametrofactusecuencial,this.arrDatoGeneral);
			
			
			this.actualizarEstadoCeldasBotonesParametroFactuSecuencial("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroFactuSecuencialConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarBusqueda(Long id) throws Exception {
		try	{
			this.parametrofactusecuencialSessionBean.setsFuncionBusquedaRapida(this.parametrofactusecuencialSessionBean.getsFuncionBusquedaRapida().replace("TO_REPLACE", id.toString()));
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroFactuSecuencialConstantesFunciones.CLASSNAME);
		}
	}
	
	
	
	public void cancelar() throws Exception {
		this.cancelar(true);
	}
	
	public void cancelar(Boolean esParaCancelar) throws Exception {
		try {
														
			
			//SE UTILIZA COLUMNA ELIMINAR EN TABLA
			if(this.isEsNuevoParametroFactuSecuencial) {
				//NO CANCELA TODOS NUEVOS POR FUNCIONALIDAD GUARDAR CAMBIOS
				//this.cancelarNuevosParametroFactuSecuencial(esParaCancelar);				
				this.cancelarNuevoParametroFactuSecuencial(esParaCancelar);								
			}
			
			this.parametrofactusecuencial=new ParametroFactuSecuencial();
			
			this.inicializarParametroFactuSecuencial();
			
			this.actualizarEstadoCeldasBotonesParametroFactuSecuencial("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroFactuSecuencialConstantesFunciones.CLASSNAME);
		}
	}
	
	public void inicializarParametroFactuSecuencial() throws Exception {
		try {
			ParametroFactuSecuencialConstantesFunciones.inicializarParametroFactuSecuencial(this.parametrofactusecuencial);
			
			} catch(Exception e) {
			throw e;
		}
	}
	
	public void anteriores()throws Exception {
		try	{
			//this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina-this.iNumeroPaginacion;
			
			if(this.iNumeroPaginacionPagina-this.iNumeroPaginacion<this.iNumeroPaginacion) {
				this.iNumeroPaginacionPagina=0;		
			} else {
				this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina-this.iNumeroPaginacion;
			}
			
			this.procesarBusqueda(this.sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroFactuSecuencialConstantesFunciones.CLASSNAME);
		}
	}
	
	public void siguientes()throws Exception {
		try	{			
			if(this.parametrofactusecuencialLogic.getParametroFactuSecuencials().size()>0) {
					
				this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina+this.iNumeroPaginacion;
			}
				
			this.procesarBusqueda(this.sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroFactuSecuencialConstantesFunciones.CLASSNAME);
		}
	}		
	
	public void generarReporteParametroFactuSecuencials(String sAccionBusqueda,List<ParametroFactuSecuencial> parametrofactusecuencialsParaReportes) throws Exception {
		//HttpSession httpSession = httpServletRequest.getSession();
		Long iIdUsuarioSesion=0L;	
		
		
		if(usuarioActual==null) {
			this.usuarioActual=new Usuario();
		}
		
		iIdUsuarioSesion=usuarioActual.getId();
		
		String sPathReportes="";
		
		InputStream reportFile=null;
		InputStream imageFile=null;
			
		imageFile=AuxiliarImagenes.class.getResourceAsStream("LogoReporte.jpg");			
				
		
		String sPathReporteFinal="";
		
		if(!esReporteAccionProceso) {
			if(!this.sTipoReporte.equals("RELACIONES")) {//!isEsReporteRelaciones
				if(!this.esReporteDinamico) {
					sPathReporteFinal="ParametroFactuSecuencial"+this.sTipoReporteExtra+"Design.jasper";
					reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);	
				} else {
					sPathReporteFinal=this.sPathReporteDinamico;
					reportFile = new FileInputStream(sPathReporteFinal);
				}
			} else {
				sPathReporteFinal="ParametroFactuSecuencialMasterRelaciones"+this.sTipoReporteExtra+"Design.jasper";
				reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);
				//sPathReportes=reportFile.getPath().replace("ParametroFactuSecuencialMasterRelacionesDesign.jasper", "");
			}
		} else {
				sPathReporteFinal="ParametroFactuSecuencial"+this.sTipoReporteExtra+"Design.jasper";
				reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);	
		}
		
		if(reportFile==null) {
			throw new JRRuntimeException(sPathReporteFinal+" no existe");
		}
		
		String sUsuario="";
		
		if(usuarioActual!=null) {
			sUsuario=usuarioActual.getuser_name();
		}
		
		Map<String, Object> parameters = new HashMap<String, Object>();
		parameters.put("usuario", sUsuario);
		
		parameters.put("titulo", Funciones.GetTituloSistemaReporte(this.parametroGeneralSg,this.moduloActual,this.usuarioActual));
		parameters.put("subtitulo", "Reporte De  Parametro Secuencial s");		
		parameters.put("busquedapor", ParametroFactuSecuencialConstantesFunciones.getNombreIndice(sAccionBusqueda)+sDetalleReporte);
		
		
		if(this.sTipoReporte.equals("RELACIONES")) {//isEsReporteRelaciones
			parameters.put("SUBREPORT_DIR", sPathReportes);
		}
		
		parameters.put("con_grafico", this.conGraficoReporte);
		
		JasperReport jasperReport = (JasperReport)JRLoader.loadObject(reportFile);
				
		this.cargarDatosCliente();
		
		ArrayList<Classe> classes=new ArrayList<Classe>();		
		
		if(this.sTipoReporte.equals("RELACIONES")) {//isEsReporteRelaciones
			
			
		} else {
			//FK DEBERIA TRAERSE DE ANTEMANO
			
		}
								
		
		//CLASSES PARA REPORTES OBJETOS RELACIONADOS
		if(!this.sTipoReporte.equals("RELACIONES")) {//!isEsReporteRelaciones
			classes=new ArrayList<Classe>();
		}
		
		JRBeanArrayDataSource jrbeanArrayDataSourceParametroFactuSecuencial=null;
		
		if(this.sTipoReporteExtra!=null && !this.sTipoReporteExtra.equals("")) {
			ParametroFactuSecuencialConstantesFunciones.S_TIPOREPORTE_EXTRA=this.sTipoReporteExtra;
		} else {
			ParametroFactuSecuencialConstantesFunciones.S_TIPOREPORTE_EXTRA="";
		}
		
		jrbeanArrayDataSourceParametroFactuSecuencial=new JRBeanArrayDataSource(ParametroFactuSecuencialJInternalFrame.TraerParametroFactuSecuencialBeans(parametrofactusecuencialsParaReportes,classes).toArray());
		
		jasperPrint = JasperFillManager.fillReport(jasperReport,parameters,jrbeanArrayDataSourceParametroFactuSecuencial);
				
		
		String sPathDest=Constantes.SUNIDAD_ARCHIVOS+":/"+Constantes.SCONTEXTSERVER+"/"+ParametroFactuSecuencialConstantesFunciones.SCHEMA+"/reportes";
		
		File filePathDest = new File(sPathDest);
		
		if(!filePathDest.exists()) {
			filePathDest.mkdirs();				
		}
				
		String sDestFileName=sPathDest+"/"+ParametroFactuSecuencialConstantesFunciones.CLASSNAME;
				
		if(this.sTipoArchivoReporte=="VISUALIZAR") {
			JasperViewer jasperViewer = new JasperViewer(jasperPrint,false) ;
			jasperViewer.setVisible(true) ; 

		} else if(this.sTipoArchivoReporte=="HTML"||this.sTipoArchivoReporte=="PDF"||this.sTipoArchivoReporte=="XML") {	
			//JasperFillManager.fillReportToFile(reportFile.getAbsolutePath(),parameters, new JRBeanArrayDataSource(ParametroFactuSecuencialBean.TraerParametroFactuSecuencialBeans(parametrofactusecuencialsParaReportes).toArray()));
							
			if(this.sTipoArchivoReporte=="HTML") {
				sDestFileName+=".html";
				JasperExportManager.exportReportToHtmlFile(jasperPrint,sDestFileName);
					
			} else if(this.sTipoArchivoReporte=="PDF") {
				sDestFileName+=".pdf";
				JasperExportManager.exportReportToPdfFile(jasperPrint,sDestFileName);
			} else {
				sDestFileName+=".xml";
				JasperExportManager.exportReportToXmlFile(jasperPrint,sDestFileName, false);
			}	
			
		} else if(this.sTipoArchivoReporte=="WORD"||this.sTipoArchivoReporte=="EXCEL") {
				
			if(this.sTipoArchivoReporte=="WORD") {
				sDestFileName+=".rtf";
					
				JRRtfExporter exporter = new JRRtfExporter();
		
				exporter.setParameter(JRExporterParameter.JASPER_PRINT, jasperPrint);
				exporter.setParameter(JRExporterParameter.OUTPUT_FILE_NAME, sDestFileName);
		
				exporter.exportReport();
				
			} else	{
				sDestFileName+=".xls";
					
				JRXlsExporter exporterXls = new JRXlsExporter();
		
				exporterXls.setParameter(JRExporterParameter.JASPER_PRINT, jasperPrint);
				exporterXls.setParameter(JRExporterParameter.OUTPUT_FILE_NAME, sDestFileName);
				exporterXls.setParameter(JRXlsExporterParameter.IS_ONE_PAGE_PER_SHEET, Boolean.TRUE);
		
				exporterXls.exportReport();
			}
			
		} else if(this.sTipoArchivoReporte=="EXCEL2"||this.sTipoArchivoReporte=="EXCEL2_2") {
			//sDestFileName+=".xlsx";
			
			if(this.sTipoReporte.equals("NORMAL")) {
				this.generarExcelReporteParametroFactuSecuencials(sAccionBusqueda,sTipoArchivoReporte,parametrofactusecuencialsParaReportes);
			
			} else if(this.sTipoReporte.equals("FORMULARIO")){
				this.generarExcelReporteVerticalParametroFactuSecuencials(sAccionBusqueda,sTipoArchivoReporte,parametrofactusecuencialsParaReportes,false);
			
			} else if(this.sTipoReporte.equals("DINAMICO")){
				
				if(this.sTipoReporteDinamico.equals("NORMAL")) {
					
					this.jButtonGenerarExcelReporteDinamicoParametroFactuSecuencialActionPerformed(null);
					//this.generarExcelReporteParametroFactuSecuencials(sAccionBusqueda,sTipoArchivoReporte,parametrofactusecuencialsParaReportes);
					
				
				} else if(this.sTipoReporteDinamico.equals("FORMULARIO")){
					this.generarExcelReporteVerticalParametroFactuSecuencials(sAccionBusqueda,sTipoArchivoReporte,parametrofactusecuencialsParaReportes,true);
				
				} else if(this.sTipoReporteDinamico.equals("RELACIONES")){
					this.generarExcelReporteRelacionesParametroFactuSecuencials(sAccionBusqueda,sTipoArchivoReporte,parametrofactusecuencialsParaReportes,true);
				}
				
			} else if(this.sTipoReporte.equals("RELACIONES")){
				this.generarExcelReporteRelacionesParametroFactuSecuencials(sAccionBusqueda,sTipoArchivoReporte,parametrofactusecuencialsParaReportes,false);
			}
		}
		
		if(this.sTipoArchivoReporte=="HTML"||this.sTipoArchivoReporte=="PDF"||this.sTipoArchivoReporte=="XML"||this.sTipoArchivoReporte=="WORD"||this.sTipoArchivoReporte=="EXCEL") {				
			JOptionPane.showMessageDialog(this,"REPORTE "+sDestFileName+" GENERADO SATISFACTORIAMENTE","REPORTES ",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReporteParametroFactuSecuencials(String sAccionBusqueda,String sTipoArchivoReporte,List<ParametroFactuSecuencial> parametrofactusecuencialsParaReportes) throws Exception {
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"parametrofactusecuencial";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("ParametroFactuSecuencials");
         
        int iRow = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		this.generarExcelReporteHeaderParametroFactuSecuencial("NORMAL",row,workbook);
		
		CellStyle cellStyleData = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataAux=null;
		
		int i=0;
		
      	for(ParametroFactuSecuencial parametrofactusecuencial : parametrofactusecuencialsParaReportes) {            
			row = sheet.createRow(iRow++);
			iCell = 0;
			
			cellStyleDataAux=null;
			
			if(i%2==0) {
				cellStyleDataAux=cellStyleData;
			}
			
			ParametroFactuSecuencialConstantesFunciones.generarExcelReporteDataParametroFactuSecuencial("NORMAL",row,workbook,parametrofactusecuencial,cellStyleDataAux);
		
			
			/*
            Cell cell0 = row.createCell(0);
            cell0.setCellValue(country.getName());
            Cell cell1 = row.createCell(1);
            cell1.setCellValue(country.getShortCode());
			*/
			
			i++;
        }
        
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.parametrofactusecuencialSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Parametro Secuencial ",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReporteHeaderParametroFactuSecuencial(String sTipo,Row row,Workbook workbook) {
		
		ParametroFactuSecuencialConstantesFunciones.generarExcelReporteHeaderParametroFactuSecuencial(sTipo,row,workbook);
		
		/*
		Cell cell=null;
		int iCell=0;
		
		CellStyle cellStyle = workbook.createCellStyle();
		cellStyle.setFillBackgroundColor(IndexedColors.GREEN.getIndex());
		cellStyle.setFillPattern(CellStyle.ALIGN_FILL);
		*/
		
	}
	
	public void generarExcelReporteVerticalParametroFactuSecuencials(String sAccionBusqueda,String sTipoArchivoReporte,List<ParametroFactuSecuencial> parametrofactusecuencialsParaReportes,Boolean paraDinamico) throws Exception {
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"parametrofactusecuencial_vertical";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("ParametroFactuSecuencials");
         
        int iRow = 0;
		int iRowLast = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		CellStyle cellStyle = Funciones2.getStyleTitulo(workbook,"ZEBRA");;
		
		CellStyle cellStyleTitulo = Funciones2.getStyleTitulo(workbook,"PRINCIPAL_VERTICAL");
		
		
		for(ParametroFactuSecuencial parametrofactusecuencial : parametrofactusecuencialsParaReportes) {
			row = sheet.createRow(iRow++);
			iRowLast=iRow - 1;
			
			cell = row.createCell(0);
			cell.setCellValue(ParametroFactuSecuencialConstantesFunciones.getParametroFactuSecuencialDescripcion(parametrofactusecuencial));
			cell.setCellStyle(cellStyleTitulo);
			
			sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,0,2));			
	
			


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroFactuSecuencialConstantesFunciones.LABEL_IDEMPRESA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroFactuSecuencialConstantesFunciones.LABEL_IDEMPRESA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(parametrofactusecuencial.getempresa_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroFactuSecuencialConstantesFunciones.LABEL_IDSUCURSAL))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroFactuSecuencialConstantesFunciones.LABEL_IDSUCURSAL);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(parametrofactusecuencial.getsucursal_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroFactuSecuencialConstantesFunciones.LABEL_IDTIPODOCUMENTOGENERAL))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroFactuSecuencialConstantesFunciones.LABEL_IDTIPODOCUMENTOGENERAL);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(parametrofactusecuencial.gettipodocumentogeneral_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroFactuSecuencialConstantesFunciones.LABEL_SECUENCIAL))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroFactuSecuencialConstantesFunciones.LABEL_SECUENCIAL);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(parametrofactusecuencial.getsecuencial());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroFactuSecuencialConstantesFunciones.LABEL_NUMERODIGITOS))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroFactuSecuencialConstantesFunciones.LABEL_NUMERODIGITOS);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(parametrofactusecuencial.getnumero_digitos());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroFactuSecuencialConstantesFunciones.LABEL_NUMEROITEMS))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroFactuSecuencialConstantesFunciones.LABEL_NUMEROITEMS);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(parametrofactusecuencial.getnumero_items());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroFactuSecuencialConstantesFunciones.LABEL_NUMERODESCUENTO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroFactuSecuencialConstantesFunciones.LABEL_NUMERODESCUENTO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(parametrofactusecuencial.getnumero_descuento());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroFactuSecuencialConstantesFunciones.LABEL_NUMEROADIICIONALES))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroFactuSecuencialConstantesFunciones.LABEL_NUMEROADIICIONALES);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(parametrofactusecuencial.getnumero_adiicionales());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroFactuSecuencialConstantesFunciones.LABEL_NUMERODIGITOINICIO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroFactuSecuencialConstantesFunciones.LABEL_NUMERODIGITOINICIO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(parametrofactusecuencial.getnumero_digito_inicio());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroFactuSecuencialConstantesFunciones.LABEL_NUMERODIGITOFIN))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroFactuSecuencialConstantesFunciones.LABEL_NUMERODIGITOFIN);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(parametrofactusecuencial.getnumero_digito_fin());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroFactuSecuencialConstantesFunciones.LABEL_NUMERODIASPLAZO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroFactuSecuencialConstantesFunciones.LABEL_NUMERODIASPLAZO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(parametrofactusecuencial.getnumero_dias_plazo());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroFactuSecuencialConstantesFunciones.LABEL_CONDETALLE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroFactuSecuencialConstantesFunciones.LABEL_CONDETALLE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(Funciones2.getDescripcionBoolean(parametrofactusecuencial.getcon_detalle()));


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroFactuSecuencialConstantesFunciones.LABEL_CONLECTOR))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroFactuSecuencialConstantesFunciones.LABEL_CONLECTOR);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(Funciones2.getDescripcionBoolean(parametrofactusecuencial.getcon_lector()));


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroFactuSecuencialConstantesFunciones.LABEL_IDBODEGA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroFactuSecuencialConstantesFunciones.LABEL_IDBODEGA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(parametrofactusecuencial.getbodega_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroFactuSecuencialConstantesFunciones.LABEL_IDTIPOPARAMFACTUPLAZO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroFactuSecuencialConstantesFunciones.LABEL_IDTIPOPARAMFACTUPLAZO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(parametrofactusecuencial.gettipoparamfactuplazo_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroFactuSecuencialConstantesFunciones.LABEL_IDFORMATO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroFactuSecuencialConstantesFunciones.LABEL_IDFORMATO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(parametrofactusecuencial.getformato_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroFactuSecuencialConstantesFunciones.LABEL_CONTRANSFERENCIA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroFactuSecuencialConstantesFunciones.LABEL_CONTRANSFERENCIA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(Funciones2.getDescripcionBoolean(parametrofactusecuencial.getcon_transferencia()));


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroFactuSecuencialConstantesFunciones.LABEL_IDBODEGATRANSFERENCIA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroFactuSecuencialConstantesFunciones.LABEL_IDBODEGATRANSFERENCIA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(parametrofactusecuencial.getbodegatransferencia_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroFactuSecuencialConstantesFunciones.LABEL_IDTRANSACCIONTRANSFERENCIA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroFactuSecuencialConstantesFunciones.LABEL_IDTRANSACCIONTRANSFERENCIA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(parametrofactusecuencial.gettransacciontransferencia_descripcion());


			}						
        }
        
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.parametrofactusecuencialSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Parametro Secuencial ",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReporteRelacionesParametroFactuSecuencials(String sAccionBusqueda,String sTipoArchivoReporte,List<ParametroFactuSecuencial> parametrofactusecuencialsParaReportes,Boolean paraDinamico) throws Exception {
		
		ArrayList<Classe> classes=new ArrayList<Classe>();
		List<ParametroFactuSecuencial> parametrofactusecuencialsRespaldo=null;
		
		classes=ParametroFactuSecuencialConstantesFunciones.getClassesRelationshipsOfParametroFactuSecuencial(new ArrayList<Classe>(),DeepLoadType.NONE,false);
					
		this.datosDeep=new DatosDeep();
		
		this.datosDeep.setIsDeep(false);
		this.datosDeep.setDeepLoadType(DeepLoadType.INCLUDE);
		this.datosDeep.setClases(classes);
			
		this.datosCliente.setDatosDeepParametros(false, DeepLoadType.INCLUDE, classes, "");
		this.datosCliente.setIsConDeep(true);	
		this.datosCliente.setIsConExportar(false);
		
						
		this.parametrofactusecuencialLogic.setDatosCliente(this.datosCliente);
		this.parametrofactusecuencialLogic.setDatosDeep(this.datosDeep);
		this.parametrofactusecuencialLogic.setIsConDeep(true);
		
		parametrofactusecuencialsRespaldo=this.parametrofactusecuencialLogic.getParametroFactuSecuencials();
		
		this.parametrofactusecuencialLogic.setParametroFactuSecuencials(parametrofactusecuencialsParaReportes);	
		this.parametrofactusecuencialLogic.deepLoadsWithConnection(false, DeepLoadType.INCLUDE, classes,"");
		
		parametrofactusecuencialsParaReportes=this.parametrofactusecuencialLogic.getParametroFactuSecuencials();
		this.parametrofactusecuencialLogic.setParametroFactuSecuencials(parametrofactusecuencialsRespaldo);
		
		
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"parametrofactusecuencial_relacion";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("ParametroFactuSecuencials");
         
        int iRow = 0;
		int iRowLast = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		this.generarExcelReporteHeaderParametroFactuSecuencial("NORMAL",row,workbook);
		
		int i=0;
		int i2=0;
		
		CellStyle cellStyleData = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataTitulo = Funciones2.getStyleTitulo(workbook,"PRINCIPAL");
		CellStyle cellStyleDataZebra = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataAux =null;
		CellStyle cellStyleDataAuxHijo =null;
		
		for(ParametroFactuSecuencial parametrofactusecuencial : parametrofactusecuencialsParaReportes) {			
			if(i!=0) {
				row = sheet.createRow(iRow++);				
				this.generarExcelReporteHeaderParametroFactuSecuencial("NORMAL",row,workbook);
			}
			
			cellStyleDataAux=null;
			
			if(i%2==0) {
				//cellStyleDataAux=cellStyleData;
			}
			
			row = sheet.createRow(iRow++);						
			ParametroFactuSecuencialConstantesFunciones.generarExcelReporteDataParametroFactuSecuencial("NORMAL",row,workbook,parametrofactusecuencial,cellStyleDataAux);
		
			
			
			
			i++;
        }
        
		/*
		row = sheet.createRow(iRow++);
		iRowLast=iRow - 1;
			
		cell = row.createCell(0);
		cell.setCellValue(ParametroFactuSecuencialConstantesFunciones.getParametroFactuSecuencialDescripcion(parametrofactusecuencial));
		cell.setCellStyle(cellStyleTitulo);
			
		sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,0,2));			
		*/
		
			
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.parametrofactusecuencialSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Parametro Secuencial ",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	
	public Boolean existeColumnaReporteDinamico(String sColumna) {
		Boolean existe=false;
		
		Reporte reporte=new Reporte();
		
		
		for(int index:this.jInternalFrameReporteDinamicoParametroFactuSecuencial.getjListColumnasSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoParametroFactuSecuencial.getjListColumnasSelectReporte().getModel().getElementAt(index);
			
			if(sColumna.equals(reporte.getsCodigo())) {
				existe=true;
				break;
			}
		
		}
		
		
		return existe;
	}
	
	public Boolean existeRelacionReporteDinamico(String sColumna) {
		Boolean existe=false;
		
		Reporte reporte=new Reporte();
		
		
		for(int index:this.jInternalFrameReporteDinamicoParametroFactuSecuencial.getjListRelacionesSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoParametroFactuSecuencial.getjListRelacionesSelectReporte().getModel().getElementAt(index);
			
			if(sColumna.equals(reporte.getsCodigo())) {
				existe=true;
				break;
			}
		
		}
		
		
		return existe;
	}
	
	public void startProcessParametroFactuSecuencial() throws Exception {		
		this.startProcessParametroFactuSecuencial(true);
	}
	
	public void startProcessParametroFactuSecuencial(Boolean conSplash) throws Exception {		
		//FuncionesSwing.enableDisablePanels(false,this.jTabbedPaneBusquedasParametroFactuSecuencial ,this.jPanelParametrosReportesParametroFactuSecuencial, this.jScrollPanelDatosParametroFactuSecuencial,this.jPanelPaginacionParametroFactuSecuencial, this.jScrollPanelDatosEdicionParametroFactuSecuencial, this.jPanelAccionesParametroFactuSecuencial,this.jPanelAccionesFormularioParametroFactuSecuencial,this.jmenuBarParametroFactuSecuencial,this.jmenuBarDetalleParametroFactuSecuencial,this.jTtoolBarParametroFactuSecuencial,this.jTtoolBarDetalleParametroFactuSecuencial);		
		
		final JTabbedPane jTabbedPaneBusquedasParametroFactuSecuencial=this.jTabbedPaneBusquedasParametroFactuSecuencial; 
		
		final JPanel jPanelParametrosReportesParametroFactuSecuencial=this.jPanelParametrosReportesParametroFactuSecuencial;
		//final JScrollPane jScrollPanelDatosParametroFactuSecuencial=this.jScrollPanelDatosParametroFactuSecuencial;
		final JTable jTableDatosParametroFactuSecuencial=this.jTableDatosParametroFactuSecuencial;		
		final JPanel jPanelPaginacionParametroFactuSecuencial=this.jPanelPaginacionParametroFactuSecuencial;
		//final JScrollPane jScrollPanelDatosEdicionParametroFactuSecuencial=this.jScrollPanelDatosEdicionParametroFactuSecuencial;
		final JPanel jPanelAccionesParametroFactuSecuencial=this.jPanelAccionesParametroFactuSecuencial;
		
		JPanel jPanelCamposAuxiliarParametroFactuSecuencial=new JPanelMe();
		JPanel jPanelAccionesFormularioAuxiliarParametroFactuSecuencial=new JPanelMe();
		
		if(this.jInternalFrameDetalleFormParametroFactuSecuencial!=null) {
			jPanelCamposAuxiliarParametroFactuSecuencial=this.jInternalFrameDetalleFormParametroFactuSecuencial.jPanelCamposParametroFactuSecuencial;
			jPanelAccionesFormularioAuxiliarParametroFactuSecuencial=this.jInternalFrameDetalleFormParametroFactuSecuencial.jPanelAccionesFormularioParametroFactuSecuencial;
		}
		
		final JPanel jPanelCamposParametroFactuSecuencial=jPanelCamposAuxiliarParametroFactuSecuencial;
		final JPanel jPanelAccionesFormularioParametroFactuSecuencial=jPanelAccionesFormularioAuxiliarParametroFactuSecuencial;
		
		
		final JMenuBar jmenuBarParametroFactuSecuencial=this.jmenuBarParametroFactuSecuencial;
		final JToolBar jTtoolBarParametroFactuSecuencial=this.jTtoolBarParametroFactuSecuencial;		
		
		
		JMenuBar jmenuBarDetalleAuxiliarParametroFactuSecuencial=new JMenuBar();
		JToolBar jTtoolBarDetalleAuxiliarParametroFactuSecuencial=new JToolBar();		
		
		if(this.jInternalFrameDetalleFormParametroFactuSecuencial!=null) {
			jmenuBarDetalleAuxiliarParametroFactuSecuencial=this.jInternalFrameDetalleFormParametroFactuSecuencial.jmenuBarDetalleParametroFactuSecuencial;
			jTtoolBarDetalleAuxiliarParametroFactuSecuencial=this.jInternalFrameDetalleFormParametroFactuSecuencial.jTtoolBarDetalleParametroFactuSecuencial;
		}
		
		final JMenuBar jmenuBarDetalleParametroFactuSecuencial=jmenuBarDetalleAuxiliarParametroFactuSecuencial;
		final JToolBar jTtoolBarDetalleParametroFactuSecuencial=jTtoolBarDetalleAuxiliarParametroFactuSecuencial;		
		
		
		
		
		
		if(Constantes2.CON_PROCESO_HILO) {
			Thread threadRunnableProcess;
			ProcessRunnable processRunnable;
			
			processRunnable=new ProcessRunnable();
			
			processRunnable.setsTipo("START");
			processRunnable.setDesktop(jDesktopPane);
			processRunnable.setModuloActual(moduloActual);
			processRunnable.setModuloUsuarioSeleccionado(moduloActual);
			processRunnable.setOpcionActual(opcionActual);
			processRunnable.setParametroGeneralSg(parametroGeneralSg);
			processRunnable.setParametroGeneralUsuario(parametroGeneralUsuario);
			processRunnable.setResumenUsuarioActual(resumenUsuarioActual);
			processRunnable.setUsuarioActual(usuarioActual);
			
			processRunnable.jTabbedPaneBusquedas=jTabbedPaneBusquedasParametroFactuSecuencial;
			processRunnable.jPanelParametrosReportes=jPanelParametrosReportesParametroFactuSecuencial;
			processRunnable.jTableDatos=jTableDatosParametroFactuSecuencial;
			processRunnable.jPanelCampos=jPanelCamposParametroFactuSecuencial;
			processRunnable.jPanelPaginacion=jPanelPaginacionParametroFactuSecuencial;
			processRunnable.jPanelAcciones=jPanelAccionesParametroFactuSecuencial;
			processRunnable.jPanelAccionesFormulario=jPanelAccionesFormularioParametroFactuSecuencial;
			
			
			processRunnable.jmenuBar=jmenuBarParametroFactuSecuencial;
			processRunnable.jmenuBarDetalle=jmenuBarDetalleParametroFactuSecuencial;
			processRunnable.jTtoolBar=jTtoolBarParametroFactuSecuencial;
			processRunnable.jTtoolBarDetalle=jTtoolBarDetalleParametroFactuSecuencial;
			processRunnable.jInternalFrameBase=this;
			
			//processRunnable.CargarObjetosRendimientoCriticoModuloInventario();
			
			
			threadRunnableProcess=new Thread(processRunnable);//.start();
					
			threadRunnableProcess.start();
			
		} else {
			FuncionesSwing.enableDisablePanels(false,jTabbedPaneBusquedasParametroFactuSecuencial ,jPanelParametrosReportesParametroFactuSecuencial,jTableDatosParametroFactuSecuencial, /*jScrollPanelDatosParametroFactuSecuencial,*/jPanelCamposParametroFactuSecuencial,jPanelPaginacionParametroFactuSecuencial, /*jScrollPanelDatosEdicionParametroFactuSecuencial,*/ jPanelAccionesParametroFactuSecuencial,jPanelAccionesFormularioParametroFactuSecuencial,jmenuBarParametroFactuSecuencial,jmenuBarDetalleParametroFactuSecuencial,jTtoolBarParametroFactuSecuencial,jTtoolBarDetalleParametroFactuSecuencial);
		
			startProcess();//this.
		}
						
		/*
		if(conSplash) {
			SwingUtilities.invokeLater(new Runnable() {
			      public void run() {
			    	  try {
							FuncionesSwing.enableDisablePanels(false,jTabbedPaneBusquedasParametroFactuSecuencial ,jPanelParametrosReportesParametroFactuSecuencial, jScrollPanelDatosParametroFactuSecuencial,jPanelPaginacionParametroFactuSecuencial, jScrollPanelDatosEdicionParametroFactuSecuencial, jPanelAccionesParametroFactuSecuencial,jPanelAccionesFormularioParametroFactuSecuencial,jmenuBarParametroFactuSecuencial,jmenuBarDetalleParametroFactuSecuencial,jTtoolBarParametroFactuSecuencial,jTtoolBarDetalleParametroFactuSecuencial);
						
							startProcess();//this.
							
						} catch (Exception e) {
							// TODO Auto-generated catch block
							e.printStackTrace();
						}
			      }
			});
		}
		*/
	}
	
	public void finishProcessParametroFactuSecuencial() {// throws Exception 
		this.finishProcessParametroFactuSecuencial(true);
	}
	
	public void finishProcessParametroFactuSecuencial(Boolean conSplash) {// throws Exception 
		//FuncionesSwing.enableDisablePanels(true,this.jTabbedPaneBusquedasParametroFactuSecuencial ,this.jPanelParametrosReportesParametroFactuSecuencial, this.jScrollPanelDatosParametroFactuSecuencial,this.jPanelPaginacionParametroFactuSecuencial, this.jScrollPanelDatosEdicionParametroFactuSecuencial, this.jPanelAccionesParametroFactuSecuencial,this.jPanelAccionesFormularioParametroFactuSecuencial,this.jmenuBarParametroFactuSecuencial,this.jmenuBarDetalleParametroFactuSecuencial,this.jTtoolBarParametroFactuSecuencial,this.jTtoolBarDetalleParametroFactuSecuencial);		
		
		final JTabbedPane jTabbedPaneBusquedasParametroFactuSecuencial=this.jTabbedPaneBusquedasParametroFactuSecuencial; 
		
		final JPanel jPanelParametrosReportesParametroFactuSecuencial=this.jPanelParametrosReportesParametroFactuSecuencial;
		//final JScrollPane jScrollPanelDatosParametroFactuSecuencial=this.jScrollPanelDatosParametroFactuSecuencial;
		final JTable jTableDatosParametroFactuSecuencial=this.jTableDatosParametroFactuSecuencial;		
		final JPanel jPanelPaginacionParametroFactuSecuencial=this.jPanelPaginacionParametroFactuSecuencial;
		//final JScrollPane jScrollPanelDatosEdicionParametroFactuSecuencial=this.jScrollPanelDatosEdicionParametroFactuSecuencial;
		final JPanel jPanelAccionesParametroFactuSecuencial=this.jPanelAccionesParametroFactuSecuencial;
		
		JPanel jPanelCamposAuxiliarParametroFactuSecuencial=new JPanel();
		JPanel jPanelAccionesFormularioAuxiliarParametroFactuSecuencial=new JPanel();
		
		if(this.jInternalFrameDetalleFormParametroFactuSecuencial!=null) {
			jPanelCamposAuxiliarParametroFactuSecuencial=this.jInternalFrameDetalleFormParametroFactuSecuencial.jPanelCamposParametroFactuSecuencial;
			jPanelAccionesFormularioAuxiliarParametroFactuSecuencial=this.jInternalFrameDetalleFormParametroFactuSecuencial.jPanelAccionesFormularioParametroFactuSecuencial;
		}
		
		final JPanel jPanelCamposParametroFactuSecuencial=jPanelCamposAuxiliarParametroFactuSecuencial;
		final JPanel jPanelAccionesFormularioParametroFactuSecuencial=jPanelAccionesFormularioAuxiliarParametroFactuSecuencial;
		
		
		final JMenuBar jmenuBarParametroFactuSecuencial=this.jmenuBarParametroFactuSecuencial;		
		final JToolBar jTtoolBarParametroFactuSecuencial=this.jTtoolBarParametroFactuSecuencial;
				
		JMenuBar jmenuBarDetalleAuxiliarParametroFactuSecuencial=new JMenuBar();
		JToolBar jTtoolBarDetalleAuxiliarParametroFactuSecuencial=new JToolBar();
		
		if(this.jInternalFrameDetalleFormParametroFactuSecuencial!=null) {
			jmenuBarDetalleAuxiliarParametroFactuSecuencial=this.jInternalFrameDetalleFormParametroFactuSecuencial.jmenuBarDetalleParametroFactuSecuencial;
			jTtoolBarDetalleAuxiliarParametroFactuSecuencial=this.jInternalFrameDetalleFormParametroFactuSecuencial.jTtoolBarDetalleParametroFactuSecuencial;		
		}
		
		final JMenuBar jmenuBarDetalleParametroFactuSecuencial=jmenuBarDetalleAuxiliarParametroFactuSecuencial;
		final JToolBar jTtoolBarDetalleParametroFactuSecuencial=jTtoolBarDetalleAuxiliarParametroFactuSecuencial;
		
		
		
		if(Constantes2.CON_PROCESO_HILO) {
			Thread threadRunnableProcess;
			ProcessRunnable processRunnable;
			
			processRunnable=new ProcessRunnable();
			
			processRunnable.setsTipo("END");
			processRunnable.setDesktop(jDesktopPane);
			processRunnable.setModuloActual(moduloActual);
			processRunnable.setModuloUsuarioSeleccionado(moduloActual);
			processRunnable.setOpcionActual(opcionActual);
			processRunnable.setParametroGeneralSg(parametroGeneralSg);
			processRunnable.setParametroGeneralUsuario(parametroGeneralUsuario);
			processRunnable.setResumenUsuarioActual(resumenUsuarioActual);
			processRunnable.setUsuarioActual(usuarioActual);
			
			processRunnable.jTabbedPaneBusquedas=jTabbedPaneBusquedasParametroFactuSecuencial;
			processRunnable.jPanelParametrosReportes=jPanelParametrosReportesParametroFactuSecuencial;
			processRunnable.jTableDatos=jTableDatosParametroFactuSecuencial;
			processRunnable.jPanelCampos=jPanelCamposParametroFactuSecuencial;
			processRunnable.jPanelPaginacion=jPanelPaginacionParametroFactuSecuencial;
			processRunnable.jPanelAcciones=jPanelAccionesParametroFactuSecuencial;
			processRunnable.jPanelAccionesFormulario=jPanelAccionesFormularioParametroFactuSecuencial;
			
			
			processRunnable.jmenuBar=jmenuBarParametroFactuSecuencial;
			processRunnable.jmenuBarDetalle=jmenuBarDetalleParametroFactuSecuencial;
			processRunnable.jTtoolBar=jTtoolBarParametroFactuSecuencial;
			processRunnable.jTtoolBarDetalle=jTtoolBarDetalleParametroFactuSecuencial;
			processRunnable.jInternalFrameBase=this;
			
			//processRunnable.CargarObjetosRendimientoCriticoModuloInventario();
			
			
			threadRunnableProcess=new Thread(processRunnable);//.start();
					
			threadRunnableProcess.start();
			
		} else {
			if(conSplash) {
				SwingUtilities.invokeLater(new RunnableProceso(true,this,jTabbedPaneBusquedasParametroFactuSecuencial ,jPanelParametrosReportesParametroFactuSecuencial, jTableDatosParametroFactuSecuencial,/*jScrollPanelDatosParametroFactuSecuencial,*/jPanelCamposParametroFactuSecuencial,jPanelPaginacionParametroFactuSecuencial, /*jScrollPanelDatosEdicionParametroFactuSecuencial,*/ jPanelAccionesParametroFactuSecuencial,jPanelAccionesFormularioParametroFactuSecuencial,jmenuBarParametroFactuSecuencial,jmenuBarDetalleParametroFactuSecuencial,jTtoolBarParametroFactuSecuencial,jTtoolBarDetalleParametroFactuSecuencial));
			}
		}						
	}
	
	/*
	public void habilitarDeshabilitarControlesParametroFactuSecuencial(Boolean esHabilitar,Boolean conDetalle) {
		this.habilitarDeshabilitarToolBarParametroFactuSecuencial(esHabilitar,conDetalle);
		this.habilitarDeshabilitarMenuParametroFactuSecuencial(esHabilitar,conDetalle);
	}
	
	public void habilitarDeshabilitarToolBarParametroFactuSecuencial(Boolean esHabilitar,Boolean conDetalle) {
		FuncionesSwing.enableDisableComponents(this.jTtoolBarParametroFactuSecuencial,esHabilitar,1,1);
		
		if(conDetalle) {
			FuncionesSwing.enableDisableComponents(this.jTtoolBarDetalleParametroFactuSecuencial,esHabilitar,1,1);
		}
	}
	
	public void habilitarDeshabilitarMenuParametroFactuSecuencial(Boolean esHabilitar,Boolean conDetalle) {
		FuncionesSwing.enableDisableComponents(this.jmenuBarParametroFactuSecuencial,esHabilitar,1,1);
		
		if(conDetalle) {
			FuncionesSwing.enableDisableComponents(this.jmenuBarDetalleParametroFactuSecuencial,esHabilitar,1,1);
		}
	}
	*/
	
	
	
	public void procesarBusqueda(String sAccionBusqueda) throws Exception {		
		String  finalQueryPaginacion=this.parametrofactusecuencialConstantesFunciones.getsFinalQueryParametroFactuSecuencial();
		String  finalQueryPaginacionTodos=this.parametrofactusecuencialConstantesFunciones.getsFinalQueryParametroFactuSecuencial();
		
		Boolean esBusqueda=false;
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		if(!sAccionBusqueda.equals("Todos"))	{
			esBusqueda=true;
		}
		
		this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
		this.arrDatoGeneralNo= new  ArrayList<String>();
		
		ArrayList<String> arrColumnasGlobalesNo=ParametroFactuSecuencialConstantesFunciones.getArrayColumnasGlobalesNoParametroFactuSecuencial(this.arrDatoGeneral);
		ArrayList<String> arrColumnasGlobales=ParametroFactuSecuencialConstantesFunciones.getArrayColumnasGlobalesParametroFactuSecuencial(this.arrDatoGeneral,arrColumnasGlobalesNo);
		
			
		String  finalQueryGlobal="";
		
		finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,!esBusqueda,esBusqueda,arrColumnasGlobales,ParametroFactuSecuencialConstantesFunciones.TABLENAME);
		
		String sOrderBy="";
		
		
		sOrderBy=Funciones2.getFinalQueryOrderBy(this.arrOrderBy);
		
		
		if(!sOrderBy.equals("")) {			
			finalQueryPaginacion=sOrderBy;
			finalQueryPaginacionTodos=sOrderBy;
		}
		
		
		//INICIALIZA ELIMINADOS
		this.parametrofactusecuencialsEliminados= new ArrayList<ParametroFactuSecuencial>();
		
		if(!this.isEntroOnLoad) {
			this.onLoad();
		}/* else {
			this.isEntroOnLoad=false;
		}*/
		
		
		
				
		try	{		
			
			//this.startProcessParametroFactuSecuencial();
		
				///*ParametroFactuSecuencialSessionBean*/this.parametrofactusecuencialSessionBean=new ParametroFactuSecuencialSessionBean();
			
			if(this.parametrofactusecuencialSessionBean==null) {
				this.parametrofactusecuencialSessionBean=new ParametroFactuSecuencialSessionBean();
			}
			
			//ACTUALIZA EL TAMANIO DE PAGINACION DESDE EL COMBO
			if(this.sTipoPaginacion!=null && !this.sTipoPaginacion.equals("")) {
				if(!this.sTipoPaginacion.equals("TODOS")) {
					this.iNumeroPaginacion=Integer.parseInt(this.sTipoPaginacion);
				} else {
					this.iNumeroPaginacion=-1;
					this.iNumeroPaginacionPagina=-1;
				}
			} else {
				if(this.iNumeroPaginacion==null || (this.iNumeroPaginacion!=null && this.iNumeroPaginacion<=0)) {
					this.iNumeroPaginacion=ParametroFactuSecuencialConstantesFunciones.INUMEROPAGINACION;
				}
			}
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);
			
			this.cargarDatosCliente();
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			classes=ParametroFactuSecuencialConstantesFunciones.getClassesForeignKeysOfParametroFactuSecuencial(new ArrayList<Classe>(),DeepLoadType.NONE);
			
		
			this.datosDeep=new DatosDeep();
			this.datosDeep.setIsDeep(false);
			this.datosDeep.setDeepLoadType(DeepLoadType.INCLUDE);
			this.datosDeep.setClases(classes);
			
			this.datosCliente.setDatosDeepParametros(false, DeepLoadType.INCLUDE, classes, "");
			this.datosCliente.setIsConDeep(true);
			
			if(false) {//this.conExportar
				this.datosCliente.setIsConExportar(true);
				this.datosCliente.setDatosExportarParametros(Funciones2.getTipoExportar(this.parametroGeneralUsuario),this.parametroGeneralUsuario.getcon_exportar_cabecera(),Funciones2.getTipoDelimiter(this.parametroGeneralUsuario),this.parametroGeneralUsuario.getpath_exportar()+"/parametrofactusecuencial."+Funciones2.getTipoExtensionArchivoExportar(this.parametroGeneralUsuario));
			} else {
				this.datosCliente.setIsConExportar(false);
			}
			
			parametrofactusecuencialsAux= new ArrayList<ParametroFactuSecuencial>();
			
				
			parametrofactusecuencialLogic.setDatosCliente(this.datosCliente);
			parametrofactusecuencialLogic.setDatosDeep(this.datosDeep);
			parametrofactusecuencialLogic.setIsConDeep(true);
			
			
			parametrofactusecuencialLogic.getParametroFactuSecuencialDataAccess().setIsForForeingsKeysDataRelationships(true);
			
			if(sAccionBusqueda.equals("Todos") || sAccionBusqueda.equals("Query"))	{	
				if(sAccionBusqueda.equals("Todos")) {
					//FALTA:PARA BUSQUEDAS POR CAMPO EN FORMULARIO
					//this.sFinalQueryGeneral="";
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacionTodos );
					
					parametrofactusecuencialLogic.getTodosParametroFactuSecuencials(finalQueryGlobal,pagination);
					
					//parametrofactusecuencialLogic.getTodosParametroFactuSecuencialsWithConnection(finalQueryGlobal,pagination);										
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
				
				if(parametrofactusecuencialLogic.getParametroFactuSecuencials()==null|| parametrofactusecuencialLogic.getParametroFactuSecuencials().size()==0)	{
					
				
				}
				
				if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(-1);
						this.pagination.setiMaxResults(-1);
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							parametrofactusecuencialsAux= new ArrayList<ParametroFactuSecuencial>();
							parametrofactusecuencialsAux.addAll(parametrofactusecuencialLogic.getParametroFactuSecuencials());						
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrofactusecuencialsAux= new ArrayList<ParametroFactuSecuencial>();
							parametrofactusecuencialsAux.addAll(parametrofactusecuencials);
						}
						//ARCHITECTURE
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							parametrofactusecuencialLogic.getTodosParametroFactuSecuencials(finalQueryGlobal+"",this.pagination);												
							
							//parametrofactusecuencialLogic.getTodosParametroFactuSecuencialsWithConnection(finalQueryGlobal+"",this.pagination);												
						} else if(Constantes.ISUSAEJBREMOTE) {
						} else if(Constantes.ISUSAEJBHOME) {
						}
						//ARCHITECTURE
						
					}
					
					this.generarReporteParametroFactuSecuencials("Todos",parametrofactusecuencialLogic.getParametroFactuSecuencials() );
					
					if(false) {//isMostrarTodosResultadosReporte						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							parametrofactusecuencialLogic.setParametroFactuSecuencials(new ArrayList<ParametroFactuSecuencial>());					
							parametrofactusecuencialLogic.getParametroFactuSecuencials().addAll(parametrofactusecuencialsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrofactusecuencials=new ArrayList<ParametroFactuSecuencial>();
							parametrofactusecuencials.addAll(parametrofactusecuencialsAux);
						}
						//ARCHITECTURE
						
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);														
					}
				}
			}
			else if(sAccionBusqueda.equals("PorId")) {
				Long idParametroFactuSecuencial=0L;
				
				if(this.idActual!=null && this.idActual!=0L) {
					idParametroFactuSecuencial=this.idActual;
				
				} else if(this.idParametroFactuSecuencialActual!=null && this.idParametroFactuSecuencialActual!=0L) {
					idParametroFactuSecuencial=idParametroFactuSecuencialActual;
				}
				
					
				this.sDetalleReporte=ParametroFactuSecuencialConstantesFunciones.getDetalleIndicePorId(idParametroFactuSecuencial);
				
				this.parametrofactusecuencials=new ArrayList<ParametroFactuSecuencial>();
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {					
					parametrofactusecuencialLogic.getEntity(idParametroFactuSecuencial);
					
					//parametrofactusecuencialLogic.getEntityWithConnection(idParametroFactuSecuencial);
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
								
				if(Constantes.ISUSAEJBLOGICLAYER) {
					parametrofactusecuencialLogic.setParametroFactuSecuencials(new ArrayList<ParametroFactuSecuencial>());
					parametrofactusecuencialLogic.getParametroFactuSecuencials().add(parametrofactusecuencialLogic.getParametroFactuSecuencial());
				
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.parametrofactusecuencials=new ArrayList<ParametroFactuSecuencial>();
					this.parametrofactusecuencials.add(parametrofactusecuencial);
				}
				
				if(parametrofactusecuencialLogic.getParametroFactuSecuencial()==null)	{
					
				
				}			
			}
			
		
			else if(sAccionBusqueda.equals("FK_IdBodega")) {
				this.sDetalleReporte=ParametroFactuSecuencialConstantesFunciones.getDetalleIndiceFK_IdBodega(id_bodegaFK_IdBodega);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					parametrofactusecuencialLogic.getParametroFactuSecuencialsFK_IdBodega(finalQueryGlobal,pagination,id_bodegaFK_IdBodega);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroFactuSecuencialConstantesFunciones.getDetalleIndiceFK_IdBodega(id_bodegaFK_IdBodega);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroFactuSecuencialConstantesFunciones.getDetalleIndiceFK_IdBodega(id_bodegaFK_IdBodega);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=parametrofactusecuencialLogic.getParametroFactuSecuencials()==null||parametrofactusecuencialLogic.getParametroFactuSecuencials().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=parametrofactusecuencials==null|| parametrofactusecuencials.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrofactusecuencialsAux=new ArrayList<ParametroFactuSecuencial>();
						parametrofactusecuencialsAux.addAll(parametrofactusecuencialLogic.getParametroFactuSecuencials());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrofactusecuencialsAux=new ArrayList<ParametroFactuSecuencial>();
							parametrofactusecuencialsAux.addAll(parametrofactusecuencials);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							parametrofactusecuencialLogic.getParametroFactuSecuencialsFK_IdBodega(finalQueryGlobal,pagination,id_bodegaFK_IdBodega);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroFactuSecuencialConstantesFunciones.getDetalleIndiceFK_IdBodega(id_bodegaFK_IdBodega);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroFactuSecuencialConstantesFunciones.getDetalleIndiceFK_IdBodega(id_bodegaFK_IdBodega);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteParametroFactuSecuencials("FK_IdBodega",parametrofactusecuencialLogic.getParametroFactuSecuencials());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteParametroFactuSecuencials("FK_IdBodega",parametrofactusecuencials);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrofactusecuencialLogic.setParametroFactuSecuencials(new ArrayList<ParametroFactuSecuencial>());
						parametrofactusecuencialLogic.getParametroFactuSecuencials().addAll(parametrofactusecuencialsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrofactusecuencials=new ArrayList<ParametroFactuSecuencial>();
							parametrofactusecuencials.addAll(parametrofactusecuencialsAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdBodegaTransferencia")) {
				this.sDetalleReporte=ParametroFactuSecuencialConstantesFunciones.getDetalleIndiceFK_IdBodegaTransferencia(id_bodega_transferenciaFK_IdBodegaTransferencia);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					parametrofactusecuencialLogic.getParametroFactuSecuencialsFK_IdBodegaTransferencia(finalQueryGlobal,pagination,id_bodega_transferenciaFK_IdBodegaTransferencia);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroFactuSecuencialConstantesFunciones.getDetalleIndiceFK_IdBodegaTransferencia(id_bodega_transferenciaFK_IdBodegaTransferencia);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroFactuSecuencialConstantesFunciones.getDetalleIndiceFK_IdBodegaTransferencia(id_bodega_transferenciaFK_IdBodegaTransferencia);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=parametrofactusecuencialLogic.getParametroFactuSecuencials()==null||parametrofactusecuencialLogic.getParametroFactuSecuencials().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=parametrofactusecuencials==null|| parametrofactusecuencials.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrofactusecuencialsAux=new ArrayList<ParametroFactuSecuencial>();
						parametrofactusecuencialsAux.addAll(parametrofactusecuencialLogic.getParametroFactuSecuencials());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrofactusecuencialsAux=new ArrayList<ParametroFactuSecuencial>();
							parametrofactusecuencialsAux.addAll(parametrofactusecuencials);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							parametrofactusecuencialLogic.getParametroFactuSecuencialsFK_IdBodegaTransferencia(finalQueryGlobal,pagination,id_bodega_transferenciaFK_IdBodegaTransferencia);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroFactuSecuencialConstantesFunciones.getDetalleIndiceFK_IdBodegaTransferencia(id_bodega_transferenciaFK_IdBodegaTransferencia);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroFactuSecuencialConstantesFunciones.getDetalleIndiceFK_IdBodegaTransferencia(id_bodega_transferenciaFK_IdBodegaTransferencia);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteParametroFactuSecuencials("FK_IdBodegaTransferencia",parametrofactusecuencialLogic.getParametroFactuSecuencials());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteParametroFactuSecuencials("FK_IdBodegaTransferencia",parametrofactusecuencials);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrofactusecuencialLogic.setParametroFactuSecuencials(new ArrayList<ParametroFactuSecuencial>());
						parametrofactusecuencialLogic.getParametroFactuSecuencials().addAll(parametrofactusecuencialsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrofactusecuencials=new ArrayList<ParametroFactuSecuencial>();
							parametrofactusecuencials.addAll(parametrofactusecuencialsAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdEmpresa")) {
				this.sDetalleReporte=ParametroFactuSecuencialConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					parametrofactusecuencialLogic.getParametroFactuSecuencialsFK_IdEmpresa(finalQueryGlobal,pagination,id_empresaFK_IdEmpresa);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroFactuSecuencialConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroFactuSecuencialConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=parametrofactusecuencialLogic.getParametroFactuSecuencials()==null||parametrofactusecuencialLogic.getParametroFactuSecuencials().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=parametrofactusecuencials==null|| parametrofactusecuencials.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrofactusecuencialsAux=new ArrayList<ParametroFactuSecuencial>();
						parametrofactusecuencialsAux.addAll(parametrofactusecuencialLogic.getParametroFactuSecuencials());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrofactusecuencialsAux=new ArrayList<ParametroFactuSecuencial>();
							parametrofactusecuencialsAux.addAll(parametrofactusecuencials);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							parametrofactusecuencialLogic.getParametroFactuSecuencialsFK_IdEmpresa(finalQueryGlobal,pagination,id_empresaFK_IdEmpresa);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroFactuSecuencialConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroFactuSecuencialConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteParametroFactuSecuencials("FK_IdEmpresa",parametrofactusecuencialLogic.getParametroFactuSecuencials());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteParametroFactuSecuencials("FK_IdEmpresa",parametrofactusecuencials);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrofactusecuencialLogic.setParametroFactuSecuencials(new ArrayList<ParametroFactuSecuencial>());
						parametrofactusecuencialLogic.getParametroFactuSecuencials().addAll(parametrofactusecuencialsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrofactusecuencials=new ArrayList<ParametroFactuSecuencial>();
							parametrofactusecuencials.addAll(parametrofactusecuencialsAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdFormato")) {
				this.sDetalleReporte=ParametroFactuSecuencialConstantesFunciones.getDetalleIndiceFK_IdFormato(id_formatoFK_IdFormato);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					parametrofactusecuencialLogic.getParametroFactuSecuencialsFK_IdFormato(finalQueryGlobal,pagination,id_formatoFK_IdFormato);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroFactuSecuencialConstantesFunciones.getDetalleIndiceFK_IdFormato(id_formatoFK_IdFormato);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroFactuSecuencialConstantesFunciones.getDetalleIndiceFK_IdFormato(id_formatoFK_IdFormato);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=parametrofactusecuencialLogic.getParametroFactuSecuencials()==null||parametrofactusecuencialLogic.getParametroFactuSecuencials().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=parametrofactusecuencials==null|| parametrofactusecuencials.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrofactusecuencialsAux=new ArrayList<ParametroFactuSecuencial>();
						parametrofactusecuencialsAux.addAll(parametrofactusecuencialLogic.getParametroFactuSecuencials());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrofactusecuencialsAux=new ArrayList<ParametroFactuSecuencial>();
							parametrofactusecuencialsAux.addAll(parametrofactusecuencials);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							parametrofactusecuencialLogic.getParametroFactuSecuencialsFK_IdFormato(finalQueryGlobal,pagination,id_formatoFK_IdFormato);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroFactuSecuencialConstantesFunciones.getDetalleIndiceFK_IdFormato(id_formatoFK_IdFormato);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroFactuSecuencialConstantesFunciones.getDetalleIndiceFK_IdFormato(id_formatoFK_IdFormato);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteParametroFactuSecuencials("FK_IdFormato",parametrofactusecuencialLogic.getParametroFactuSecuencials());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteParametroFactuSecuencials("FK_IdFormato",parametrofactusecuencials);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrofactusecuencialLogic.setParametroFactuSecuencials(new ArrayList<ParametroFactuSecuencial>());
						parametrofactusecuencialLogic.getParametroFactuSecuencials().addAll(parametrofactusecuencialsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrofactusecuencials=new ArrayList<ParametroFactuSecuencial>();
							parametrofactusecuencials.addAll(parametrofactusecuencialsAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdSucursal")) {
				this.sDetalleReporte=ParametroFactuSecuencialConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					parametrofactusecuencialLogic.getParametroFactuSecuencialsFK_IdSucursal(finalQueryGlobal,pagination,id_sucursalFK_IdSucursal);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroFactuSecuencialConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroFactuSecuencialConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=parametrofactusecuencialLogic.getParametroFactuSecuencials()==null||parametrofactusecuencialLogic.getParametroFactuSecuencials().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=parametrofactusecuencials==null|| parametrofactusecuencials.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrofactusecuencialsAux=new ArrayList<ParametroFactuSecuencial>();
						parametrofactusecuencialsAux.addAll(parametrofactusecuencialLogic.getParametroFactuSecuencials());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrofactusecuencialsAux=new ArrayList<ParametroFactuSecuencial>();
							parametrofactusecuencialsAux.addAll(parametrofactusecuencials);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							parametrofactusecuencialLogic.getParametroFactuSecuencialsFK_IdSucursal(finalQueryGlobal,pagination,id_sucursalFK_IdSucursal);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroFactuSecuencialConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroFactuSecuencialConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteParametroFactuSecuencials("FK_IdSucursal",parametrofactusecuencialLogic.getParametroFactuSecuencials());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteParametroFactuSecuencials("FK_IdSucursal",parametrofactusecuencials);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrofactusecuencialLogic.setParametroFactuSecuencials(new ArrayList<ParametroFactuSecuencial>());
						parametrofactusecuencialLogic.getParametroFactuSecuencials().addAll(parametrofactusecuencialsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrofactusecuencials=new ArrayList<ParametroFactuSecuencial>();
							parametrofactusecuencials.addAll(parametrofactusecuencialsAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdTipoDocumentoGeneral")) {
				this.sDetalleReporte=ParametroFactuSecuencialConstantesFunciones.getDetalleIndiceFK_IdTipoDocumentoGeneral(id_tipo_documento_generalFK_IdTipoDocumentoGeneral);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					parametrofactusecuencialLogic.getParametroFactuSecuencialsFK_IdTipoDocumentoGeneral(finalQueryGlobal,pagination,id_tipo_documento_generalFK_IdTipoDocumentoGeneral);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroFactuSecuencialConstantesFunciones.getDetalleIndiceFK_IdTipoDocumentoGeneral(id_tipo_documento_generalFK_IdTipoDocumentoGeneral);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroFactuSecuencialConstantesFunciones.getDetalleIndiceFK_IdTipoDocumentoGeneral(id_tipo_documento_generalFK_IdTipoDocumentoGeneral);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=parametrofactusecuencialLogic.getParametroFactuSecuencials()==null||parametrofactusecuencialLogic.getParametroFactuSecuencials().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=parametrofactusecuencials==null|| parametrofactusecuencials.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrofactusecuencialsAux=new ArrayList<ParametroFactuSecuencial>();
						parametrofactusecuencialsAux.addAll(parametrofactusecuencialLogic.getParametroFactuSecuencials());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrofactusecuencialsAux=new ArrayList<ParametroFactuSecuencial>();
							parametrofactusecuencialsAux.addAll(parametrofactusecuencials);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							parametrofactusecuencialLogic.getParametroFactuSecuencialsFK_IdTipoDocumentoGeneral(finalQueryGlobal,pagination,id_tipo_documento_generalFK_IdTipoDocumentoGeneral);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroFactuSecuencialConstantesFunciones.getDetalleIndiceFK_IdTipoDocumentoGeneral(id_tipo_documento_generalFK_IdTipoDocumentoGeneral);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroFactuSecuencialConstantesFunciones.getDetalleIndiceFK_IdTipoDocumentoGeneral(id_tipo_documento_generalFK_IdTipoDocumentoGeneral);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteParametroFactuSecuencials("FK_IdTipoDocumentoGeneral",parametrofactusecuencialLogic.getParametroFactuSecuencials());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteParametroFactuSecuencials("FK_IdTipoDocumentoGeneral",parametrofactusecuencials);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrofactusecuencialLogic.setParametroFactuSecuencials(new ArrayList<ParametroFactuSecuencial>());
						parametrofactusecuencialLogic.getParametroFactuSecuencials().addAll(parametrofactusecuencialsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrofactusecuencials=new ArrayList<ParametroFactuSecuencial>();
							parametrofactusecuencials.addAll(parametrofactusecuencialsAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdTipoParamFactuPlazo")) {
				this.sDetalleReporte=ParametroFactuSecuencialConstantesFunciones.getDetalleIndiceFK_IdTipoParamFactuPlazo(id_tipo_param_factu_plazoFK_IdTipoParamFactuPlazo);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					parametrofactusecuencialLogic.getParametroFactuSecuencialsFK_IdTipoParamFactuPlazo(finalQueryGlobal,pagination,id_tipo_param_factu_plazoFK_IdTipoParamFactuPlazo);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroFactuSecuencialConstantesFunciones.getDetalleIndiceFK_IdTipoParamFactuPlazo(id_tipo_param_factu_plazoFK_IdTipoParamFactuPlazo);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroFactuSecuencialConstantesFunciones.getDetalleIndiceFK_IdTipoParamFactuPlazo(id_tipo_param_factu_plazoFK_IdTipoParamFactuPlazo);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=parametrofactusecuencialLogic.getParametroFactuSecuencials()==null||parametrofactusecuencialLogic.getParametroFactuSecuencials().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=parametrofactusecuencials==null|| parametrofactusecuencials.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrofactusecuencialsAux=new ArrayList<ParametroFactuSecuencial>();
						parametrofactusecuencialsAux.addAll(parametrofactusecuencialLogic.getParametroFactuSecuencials());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrofactusecuencialsAux=new ArrayList<ParametroFactuSecuencial>();
							parametrofactusecuencialsAux.addAll(parametrofactusecuencials);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							parametrofactusecuencialLogic.getParametroFactuSecuencialsFK_IdTipoParamFactuPlazo(finalQueryGlobal,pagination,id_tipo_param_factu_plazoFK_IdTipoParamFactuPlazo);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroFactuSecuencialConstantesFunciones.getDetalleIndiceFK_IdTipoParamFactuPlazo(id_tipo_param_factu_plazoFK_IdTipoParamFactuPlazo);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroFactuSecuencialConstantesFunciones.getDetalleIndiceFK_IdTipoParamFactuPlazo(id_tipo_param_factu_plazoFK_IdTipoParamFactuPlazo);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteParametroFactuSecuencials("FK_IdTipoParamFactuPlazo",parametrofactusecuencialLogic.getParametroFactuSecuencials());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteParametroFactuSecuencials("FK_IdTipoParamFactuPlazo",parametrofactusecuencials);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrofactusecuencialLogic.setParametroFactuSecuencials(new ArrayList<ParametroFactuSecuencial>());
						parametrofactusecuencialLogic.getParametroFactuSecuencials().addAll(parametrofactusecuencialsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrofactusecuencials=new ArrayList<ParametroFactuSecuencial>();
							parametrofactusecuencials.addAll(parametrofactusecuencialsAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdTransaccionTransferencia")) {
				this.sDetalleReporte=ParametroFactuSecuencialConstantesFunciones.getDetalleIndiceFK_IdTransaccionTransferencia(id_transaccion_transferenciaFK_IdTransaccionTransferencia);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					parametrofactusecuencialLogic.getParametroFactuSecuencialsFK_IdTransaccionTransferencia(finalQueryGlobal,pagination,id_transaccion_transferenciaFK_IdTransaccionTransferencia);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroFactuSecuencialConstantesFunciones.getDetalleIndiceFK_IdTransaccionTransferencia(id_transaccion_transferenciaFK_IdTransaccionTransferencia);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroFactuSecuencialConstantesFunciones.getDetalleIndiceFK_IdTransaccionTransferencia(id_transaccion_transferenciaFK_IdTransaccionTransferencia);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=parametrofactusecuencialLogic.getParametroFactuSecuencials()==null||parametrofactusecuencialLogic.getParametroFactuSecuencials().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=parametrofactusecuencials==null|| parametrofactusecuencials.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrofactusecuencialsAux=new ArrayList<ParametroFactuSecuencial>();
						parametrofactusecuencialsAux.addAll(parametrofactusecuencialLogic.getParametroFactuSecuencials());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrofactusecuencialsAux=new ArrayList<ParametroFactuSecuencial>();
							parametrofactusecuencialsAux.addAll(parametrofactusecuencials);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							parametrofactusecuencialLogic.getParametroFactuSecuencialsFK_IdTransaccionTransferencia(finalQueryGlobal,pagination,id_transaccion_transferenciaFK_IdTransaccionTransferencia);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroFactuSecuencialConstantesFunciones.getDetalleIndiceFK_IdTransaccionTransferencia(id_transaccion_transferenciaFK_IdTransaccionTransferencia);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroFactuSecuencialConstantesFunciones.getDetalleIndiceFK_IdTransaccionTransferencia(id_transaccion_transferenciaFK_IdTransaccionTransferencia);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteParametroFactuSecuencials("FK_IdTransaccionTransferencia",parametrofactusecuencialLogic.getParametroFactuSecuencials());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteParametroFactuSecuencials("FK_IdTransaccionTransferencia",parametrofactusecuencials);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrofactusecuencialLogic.setParametroFactuSecuencials(new ArrayList<ParametroFactuSecuencial>());
						parametrofactusecuencialLogic.getParametroFactuSecuencials().addAll(parametrofactusecuencialsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrofactusecuencials=new ArrayList<ParametroFactuSecuencial>();
							parametrofactusecuencials.addAll(parametrofactusecuencialsAux);
						}
						//ARCHITECTURE
					}
				}

			} 
		
		
		
		this.redimensionarTablaDatos();
		//this.refrescarForeignKeysDescripcionesParametroFactuSecuencial();
		
		
		if(this.conTotales) {
			this.crearFilaTotales();
		}		
		} catch (JRException e) {
			throw e;
		} catch(Exception e) {
			throw e;
      	} finally {
      		//this.finishProcessParametroFactuSecuencial();
      	}
		
	}				
	
	public void redimensionarTablaDatos() throws Exception {
		int iSizeTabla=0;
				
		iSizeTabla=this.getSizeTablaDatos();
		
		//ARCHITECTURE
		/*
		if(Constantes.ISUSAEJBLOGICLAYER) {	
			iSizeTabla=parametrofactusecuencialLogic.getParametroFactuSecuencials().size();
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			iSizeTabla=parametrofactusecuencials.size();
		}
		*/
		//ARCHITECTURE
											
		this.redimensionarTablaDatos(iSizeTabla);		
	}
	
	public Integer getSizeTablaDatos() throws Exception {
		Integer iSizeTabla=0;
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {	
			iSizeTabla=parametrofactusecuencialLogic.getParametroFactuSecuencials().size();
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			iSizeTabla=parametrofactusecuencials.size();
		}
		//ARCHITECTURE
											
		return iSizeTabla;		
	}
	
			
	public Boolean permiteMantenimiento(ParametroFactuSecuencial parametrofactusecuencial) {
		Boolean permite=true;
		
		if(this.parametrofactusecuencial.getsType().equals(Constantes2.S_TOTALES)) {
			permite=false;
		}
		
		return permite;
	}
	
	public void traerValoresTablaTotales() throws Exception {
	}
	
	
	public void traerValoresTablaOrderBy() throws Exception {
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.arrOrderBy=ParametroFactuSecuencialConstantesFunciones.getOrderByListaParametroFactuSecuencial();							
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			this.arrOrderBy=ParametroFactuSecuencialConstantesFunciones.getOrderByListaParametroFactuSecuencial();
		}		
	}
	
	
	public Boolean existeFilaTotales() throws Exception {
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(ParametroFactuSecuencial parametrofactusecuencial:parametrofactusecuencialLogic.getParametroFactuSecuencials()) {
				if(parametrofactusecuencial.getsType().equals(Constantes2.S_TOTALES)) {
					parametrofactusecuencialTotales=parametrofactusecuencial;
					existe=true;
					break;
				}
			}
								
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(ParametroFactuSecuencial parametrofactusecuencial:this.parametrofactusecuencials) {
				if(parametrofactusecuencial.getsType().equals(Constantes2.S_TOTALES)) {
					parametrofactusecuencialTotales=parametrofactusecuencial;
					existe=true;
					break;
				}
			}
		}
		
		return existe;
	}
	
	public void crearFilaTotales() throws Exception {
		Boolean existe=false;
		
		existe=this.existeFilaTotales();
		
		if(!existe) {
			//SI NO ES UNO A UNO SE CREA FILA TOTALES
			this.parametrofactusecuencialAux=new ParametroFactuSecuencial();
			this.parametrofactusecuencialAux.setsType(Constantes2.S_TOTALES);
			this.parametrofactusecuencialAux.setIsNew(false);
			this.parametrofactusecuencialAux.setIsChanged(false);
			this.parametrofactusecuencialAux.setIsDeleted(false);
				
			if(Constantes.ISUSAEJBLOGICLAYER) {
				ParametroFactuSecuencialConstantesFunciones.TotalizarValoresFilaParametroFactuSecuencial(this.parametrofactusecuencialLogic.getParametroFactuSecuencials(),this.parametrofactusecuencialAux);
				
				this.parametrofactusecuencialLogic.getParametroFactuSecuencials().add(this.parametrofactusecuencialAux);
				
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
				ParametroFactuSecuencialConstantesFunciones.TotalizarValoresFilaParametroFactuSecuencial(this.parametrofactusecuencials,this.parametrofactusecuencialAux);
				
				this.parametrofactusecuencials.add(this.parametrofactusecuencialAux);
			}
		}
	}
	
	public void quitarFilaTotales() throws Exception {
		parametrofactusecuencialTotales=new ParametroFactuSecuencial();
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			existe=this.existeFilaTotales();
			
			if(existe) {
				this.parametrofactusecuencialLogic.getParametroFactuSecuencials().remove(parametrofactusecuencialTotales);
			}			
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			existe=this.existeFilaTotales();
			
			if(existe) {
				this.parametrofactusecuencials.remove(parametrofactusecuencialTotales);
			}
		}
	}
	
	public void actualizarFilaTotales() throws Exception {
		parametrofactusecuencialTotales=new ParametroFactuSecuencial();
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(ParametroFactuSecuencial parametrofactusecuencial:parametrofactusecuencialLogic.getParametroFactuSecuencials()) {
				if(parametrofactusecuencial.getsType().equals(Constantes2.S_TOTALES)) {
					parametrofactusecuencialTotales=parametrofactusecuencial;
					existe=true;
					break;
				}
			}
			
			if(existe) {
				ParametroFactuSecuencialConstantesFunciones.TotalizarValoresFilaParametroFactuSecuencial(this.parametrofactusecuencialLogic.getParametroFactuSecuencials(),parametrofactusecuencialTotales);
			}			
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(ParametroFactuSecuencial parametrofactusecuencial:this.parametrofactusecuencials) {
				if(parametrofactusecuencial.getsType().equals(Constantes2.S_TOTALES)) {
					parametrofactusecuencialTotales=parametrofactusecuencial;
					existe=true;
					break;
				}
			}
			
			if(existe) {
				ParametroFactuSecuencialConstantesFunciones.TotalizarValoresFilaParametroFactuSecuencial(this.parametrofactusecuencials,parametrofactusecuencialTotales);
			}
		}
	}		
	
	public void recargarInformacion()throws Exception {
		try {
			sAccionBusqueda="Todos";
			this.iNumeroPaginacionPagina=0;
			
			this.procesarBusqueda(sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroFactuSecuencialConstantesFunciones.CLASSNAME);
		}	
	}		
	
	
	public void getParametroFactuSecuencialsFK_IdBodega()throws Exception {
		try {
			sAccionBusqueda="FK_IdBodega";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getParametroFactuSecuencialsFK_IdBodegaTransferencia()throws Exception {
		try {
			sAccionBusqueda="FK_IdBodegaTransferencia";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getParametroFactuSecuencialsFK_IdEmpresa()throws Exception {
		try {
			sAccionBusqueda="FK_IdEmpresa";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getParametroFactuSecuencialsFK_IdFormato()throws Exception {
		try {
			sAccionBusqueda="FK_IdFormato";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getParametroFactuSecuencialsFK_IdSucursal()throws Exception {
		try {
			sAccionBusqueda="FK_IdSucursal";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getParametroFactuSecuencialsFK_IdTipoDocumentoGeneral()throws Exception {
		try {
			sAccionBusqueda="FK_IdTipoDocumentoGeneral";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getParametroFactuSecuencialsFK_IdTipoParamFactuPlazo()throws Exception {
		try {
			sAccionBusqueda="FK_IdTipoParamFactuPlazo";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getParametroFactuSecuencialsFK_IdTransaccionTransferencia()throws Exception {
		try {
			sAccionBusqueda="FK_IdTransaccionTransferencia";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	
	
	public void getParametroFactuSecuencialsFK_IdBodega(String sFinalQuery,Long id_bodega)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					parametrofactusecuencialLogic.getParametroFactuSecuencialsFK_IdBodega(sFinalQuery,this.pagination,id_bodega);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getParametroFactuSecuencialsFK_IdBodegaTransferencia(String sFinalQuery,Long id_bodega_transferencia)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					parametrofactusecuencialLogic.getParametroFactuSecuencialsFK_IdBodegaTransferencia(sFinalQuery,this.pagination,id_bodega_transferencia);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getParametroFactuSecuencialsFK_IdEmpresa(String sFinalQuery,Long id_empresa)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					parametrofactusecuencialLogic.getParametroFactuSecuencialsFK_IdEmpresa(sFinalQuery,this.pagination,id_empresa);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getParametroFactuSecuencialsFK_IdFormato(String sFinalQuery,Long id_formato)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					parametrofactusecuencialLogic.getParametroFactuSecuencialsFK_IdFormato(sFinalQuery,this.pagination,id_formato);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getParametroFactuSecuencialsFK_IdSucursal(String sFinalQuery,Long id_sucursal)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					parametrofactusecuencialLogic.getParametroFactuSecuencialsFK_IdSucursal(sFinalQuery,this.pagination,id_sucursal);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getParametroFactuSecuencialsFK_IdTipoDocumentoGeneral(String sFinalQuery,Long id_tipo_documento_general)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					parametrofactusecuencialLogic.getParametroFactuSecuencialsFK_IdTipoDocumentoGeneral(sFinalQuery,this.pagination,id_tipo_documento_general);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getParametroFactuSecuencialsFK_IdTipoParamFactuPlazo(String sFinalQuery,Long id_tipo_param_factu_plazo)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					parametrofactusecuencialLogic.getParametroFactuSecuencialsFK_IdTipoParamFactuPlazo(sFinalQuery,this.pagination,id_tipo_param_factu_plazo);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getParametroFactuSecuencialsFK_IdTransaccionTransferencia(String sFinalQuery,Long id_transaccion_transferencia)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					parametrofactusecuencialLogic.getParametroFactuSecuencialsFK_IdTransaccionTransferencia(sFinalQuery,this.pagination,id_transaccion_transferencia);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	
	public void onLoad()throws Exception {		
		try {		
			isEntroOnLoad=true;
			//INTENTA TRAER DATOS DE BUSQUEDA ANTERIOR
			this.traerDatosBusquedaDesdeSession();
					
			//SINO SE CUMPLE VIENE DE PADRE FOREIGN O BUSQUEDA ANTIGUA
			if(this.sAccionBusqueda.equals("")) {
				this.sAccionBusqueda="Todos";
			}
								
			this.procesarBusqueda(sAccionBusqueda);
			
		} catch (Exception e) {
			throw e;
		}
	}		
	
	public void inicializarPermisosParametroFactuSecuencial() {
		this.isPermisoTodoParametroFactuSecuencial=false;
		this.isPermisoNuevoParametroFactuSecuencial=false;
		this.isPermisoActualizarParametroFactuSecuencial=false;
		this.isPermisoActualizarOriginalParametroFactuSecuencial=false;
		this.isPermisoEliminarParametroFactuSecuencial=false;
		this.isPermisoGuardarCambiosParametroFactuSecuencial=false;
		this.isPermisoConsultaParametroFactuSecuencial=false;
		this.isPermisoBusquedaParametroFactuSecuencial=false;
		this.isPermisoReporteParametroFactuSecuencial=false;		
		this.isPermisoOrdenParametroFactuSecuencial=false;		
		this.isPermisoPaginacionMedioParametroFactuSecuencial=false;		
		this.isPermisoPaginacionAltoParametroFactuSecuencial=false;
		this.isPermisoPaginacionTodoParametroFactuSecuencial=false;
		this.isPermisoCopiarParametroFactuSecuencial=false;		
		this.isPermisoVerFormParametroFactuSecuencial=false;		
		this.isPermisoDuplicarParametroFactuSecuencial=false;		
		this.isPermisoOrdenParametroFactuSecuencial=false;		
	}
	
	public void setPermisosUsuarioParametroFactuSecuencial(Boolean isPermiso) {
		this.isPermisoTodoParametroFactuSecuencial=isPermiso;
		this.isPermisoNuevoParametroFactuSecuencial=isPermiso;
		this.isPermisoActualizarParametroFactuSecuencial=isPermiso;
		this.isPermisoActualizarOriginalParametroFactuSecuencial=isPermiso;
		this.isPermisoEliminarParametroFactuSecuencial=isPermiso;
		this.isPermisoGuardarCambiosParametroFactuSecuencial=isPermiso;
		this.isPermisoConsultaParametroFactuSecuencial=isPermiso;
		this.isPermisoBusquedaParametroFactuSecuencial=isPermiso;
		this.isPermisoReporteParametroFactuSecuencial=isPermiso;
		this.isPermisoOrdenParametroFactuSecuencial=isPermiso;		
		this.isPermisoPaginacionMedioParametroFactuSecuencial=isPermiso;		
		this.isPermisoPaginacionAltoParametroFactuSecuencial=isPermiso;		
		this.isPermisoPaginacionTodoParametroFactuSecuencial=isPermiso;		
		this.isPermisoCopiarParametroFactuSecuencial=isPermiso;		
		this.isPermisoVerFormParametroFactuSecuencial=isPermiso;		
		this.isPermisoDuplicarParametroFactuSecuencial=isPermiso;
		this.isPermisoOrdenParametroFactuSecuencial=isPermiso;
	}
	
	public void setPermisosMantenimientoUsuarioParametroFactuSecuencial(Boolean isPermiso) {
		//this.isPermisoTodoParametroFactuSecuencial=isPermiso;
		this.isPermisoNuevoParametroFactuSecuencial=isPermiso;
		this.isPermisoActualizarParametroFactuSecuencial=isPermiso;
		this.isPermisoActualizarOriginalParametroFactuSecuencial=isPermiso;
		this.isPermisoEliminarParametroFactuSecuencial=isPermiso;
		this.isPermisoGuardarCambiosParametroFactuSecuencial=isPermiso;
		//this.isPermisoConsultaParametroFactuSecuencial=isPermiso;
		//this.isPermisoBusquedaParametroFactuSecuencial=isPermiso;
		//this.isPermisoReporteParametroFactuSecuencial=isPermiso;
		//this.isPermisoOrdenParametroFactuSecuencial=isPermiso;		
		//this.isPermisoPaginacionMedioParametroFactuSecuencial=isPermiso;		
		//this.isPermisoPaginacionAltoParametroFactuSecuencial=isPermiso;		
		//this.isPermisoPaginacionTodoParametroFactuSecuencial=isPermiso;		
		//this.isPermisoCopiarParametroFactuSecuencial=isPermiso;		
		//this.isPermisoDuplicarParametroFactuSecuencial=isPermiso;
		//this.isPermisoOrdenParametroFactuSecuencial=isPermiso;
	}
	
	public void inicializarSetPermisosUsuarioParametroFactuSecuencialClasesRelacionadas() throws Exception {
		ArrayList<String> arrPaginas=new ArrayList<String>();		
		ArrayList<Opcion> opcionsFinal=new ArrayList<Opcion>();	
		
		
		if(ParametroFactuSecuencialJInternalFrame.CON_LLAMADA_SIMPLE) {
			this.opcionsRelacionadas.addAll(this.sistemaReturnGeneral.getOpcionsRelacionadas());
			
		} else {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				opcionsFinal=sistemaLogicAdditional.tienePermisosOpcionesEnPaginaWeb(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, arrPaginas);
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}
			
			this.opcionsRelacionadas.addAll(opcionsFinal);
		}
		
		
		
	}
	
	public Boolean tienePermisosUsuarioEnPaginaWebParametroFactuSecuencial(String sPagina) throws Exception {
		Boolean tienePermisos=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			tienePermisos=sistemaLogicAdditional.tienePermisosEnPaginaWeb(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, sPagina);
		} else if(Constantes.ISUSAEJBREMOTE) {
		} else if(Constantes.ISUSAEJBHOME) {
		}
		
		return tienePermisos;
	}
	
	public void inicializarSetPermisosUsuarioParametroFactuSecuencialClasesRelacionadas(Boolean conPermiso) throws Exception {
		
	}
	
	public Boolean verificarGetPermisosUsuarioParametroFactuSecuencialClaseRelacionada(ArrayList<String> arrPaginasFinal,String sPaginaActual) throws Exception {
		Boolean verificado=false;
		
		verificado=Funciones2.verificarGetPermisosUsuarioClaseRelacionada(arrPaginasFinal,sPaginaActual);				
		
		return verificado;
	}
	
	public Boolean verificarGetPermisosUsuarioOpcionParametroFactuSecuencialClaseRelacionada(List<Opcion> opcionsFinal,String sPaginaActual) throws Exception {
		Boolean verificado=false;
		
		verificado=Funciones2.verificarGetPermisosUsuarioOpcionClaseRelacionada(opcionsFinal,sPaginaActual);				
		
		return verificado;
	}
	
	public void actualizarTabsSetPermisosUsuarioParametroFactuSecuencialClasesRelacionadas() throws Exception {
		
	}
	
	public void setPermisosUsuarioParametroFactuSecuencial() throws Exception {
		
		PerfilOpcion perfilOpcionUsuario=new PerfilOpcion();		
		Long idOpcion=this.opcionActual.getId();
		
		if(ParametroFactuSecuencialJInternalFrame.CON_LLAMADA_SIMPLE) {
			perfilOpcionUsuario=this.sistemaReturnGeneral.getPerfilOpcion();
			
		} else {
			if(this.parametrofactusecuencialSessionBean.getEsGuardarRelacionado()) {
				idOpcion=0L;
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				perfilOpcionUsuario=sistemaLogicAdditional.traerPermisosPaginaWebPerfilOpcion(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, ParametroFactuSecuencialConstantesFunciones.SNOMBREOPCION,idOpcion);				
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}
		}
		
		if(perfilOpcionUsuario!=null && perfilOpcionUsuario.getId()>0) {
			this.isPermisoNuevoParametroFactuSecuencial=perfilOpcionUsuario.getingreso()||perfilOpcionUsuario.gettodo();
			this.isPermisoActualizarParametroFactuSecuencial=perfilOpcionUsuario.getmodificacion()||perfilOpcionUsuario.gettodo();
			this.isPermisoActualizarOriginalParametroFactuSecuencial=this.isPermisoActualizarParametroFactuSecuencial;
			this.isPermisoEliminarParametroFactuSecuencial=perfilOpcionUsuario.geteliminacion()||perfilOpcionUsuario.gettodo();
			this.isPermisoGuardarCambiosParametroFactuSecuencial=perfilOpcionUsuario.getguardar_cambios()||perfilOpcionUsuario.gettodo();
			this.isPermisoConsultaParametroFactuSecuencial=perfilOpcionUsuario.getconsulta()||perfilOpcionUsuario.gettodo();
			this.isPermisoBusquedaParametroFactuSecuencial=perfilOpcionUsuario.getbusqueda()||perfilOpcionUsuario.gettodo();
			this.isPermisoTodoParametroFactuSecuencial=perfilOpcionUsuario.gettodo()||perfilOpcionUsuario.gettodo();
			this.isPermisoReporteParametroFactuSecuencial=perfilOpcionUsuario.getreporte()||perfilOpcionUsuario.gettodo();
			this.isPermisoOrdenParametroFactuSecuencial=perfilOpcionUsuario.getorden()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionMedioParametroFactuSecuencial=perfilOpcionUsuario.getpaginacion_medio()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionAltoParametroFactuSecuencial=perfilOpcionUsuario.getpaginacion_alto()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionTodoParametroFactuSecuencial=perfilOpcionUsuario.getpaginacion_todo()||perfilOpcionUsuario.gettodo();
			this.isPermisoCopiarParametroFactuSecuencial=perfilOpcionUsuario.getcopiar()||perfilOpcionUsuario.gettodo();
			this.isPermisoVerFormParametroFactuSecuencial=true;//perfilOpcionUsuario.getver_form()||perfilOpcionUsuario.gettodo();
			this.isPermisoDuplicarParametroFactuSecuencial=perfilOpcionUsuario.getduplicar()||perfilOpcionUsuario.gettodo();
			this.isPermisoOrdenParametroFactuSecuencial=perfilOpcionUsuario.getorden()||perfilOpcionUsuario.gettodo();
			
			if(this.parametrofactusecuencialSessionBean.getEsGuardarRelacionado()) {
				this.opcionActual.setId(perfilOpcionUsuario.getid_opcion());
				
				this.jTableDatosParametroFactuSecuencial.setToolTipText(this.jTableDatosParametroFactuSecuencial.getToolTipText()+"_"+perfilOpcionUsuario.getid_opcion());		
			}
		} else {
			this.setPermisosUsuarioParametroFactuSecuencial(false);
		}
		
		//SI SE NECESITA PONER TODOS LOS PERMISOS POR DEFECTO
		//
		
	}
	
	public void setAccionesUsuarioParametroFactuSecuencial(Boolean esParaAccionesFormulario) throws Exception {		
		Reporte reporte=null;
		
		if(!esParaAccionesFormulario) {
			this.accions=new ArrayList<Accion>();
			
			if(ParametroFactuSecuencialJInternalFrame.CON_LLAMADA_SIMPLE) {
				this.accions=this.sistemaReturnGeneral.getAccions();
				
				
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.accions=sistemaLogicAdditional.getAccionesUsuario(this.usuarioActual,this.opcionActual,false);				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}
			
			if(this.accions.size()>0) {			
				for(Accion accion:this.accions) {
					reporte=new Reporte();
					reporte.setsCodigo(accion.getcodigo());
					reporte.setsDescripcion(accion.getnombre());
		
		
					this.tiposAcciones.add(reporte);
				}
			}	
			
			

			reporte=new Reporte();
			reporte.setsCodigo("");
			reporte.setsDescripcion("");

			this.tiposAcciones.add(reporte);
			
		} else {
			//ACCIONES FORMULARIO
			this.accionsFormulario=new ArrayList<Accion>();
			
			if(ParametroFactuSecuencialJInternalFrame.CON_LLAMADA_SIMPLE) {
				this.accionsFormulario=this.sistemaReturnGeneral.getAccionsFormulario();
			
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.accionsFormulario=sistemaLogicAdditional.getAccionesUsuario(this.usuarioActual,this.opcionActual,true);				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}
			
			if(this.accionsFormulario.size()>0) {			
				for(Accion accion:this.accionsFormulario) {
					reporte=new Reporte();
					reporte.setsCodigo(accion.getcodigo());
					reporte.setsDescripcion(accion.getnombre());
					
					this.tiposAccionesFormulario.add(reporte);
				}
			}	
			
			

			reporte=new Reporte();
			reporte.setsCodigo("");
			reporte.setsDescripcion("");

			this.tiposAccionesFormulario.add(reporte);
		}				
	}	 	
	
	public void setRelacionesUsuarioParametroFactuSecuencial() throws Exception {
		Reporte reporte=null;
		
		
		
		
		//ORDENAR ALFABETICAMENTE
		Collections.sort(this.tiposRelaciones, new ReporteComparator());
		/*
		reporte=new Reporte();
		reporte.setsCodigo(accion.getcodigo());
		reporte.setsDescripcion(accion.getnombre());
			
		this.tiposRelaciones.add(reporte);
		*/
	}	
	
		
	@SuppressWarnings({ "unchecked", "rawtypes" } )
	public void inicializarCombosForeignKeyParametroFactuSecuencialListas()throws Exception {
		try	{						
			
				this.empresasForeignKey=new ArrayList();
				this.sucursalsForeignKey=new ArrayList();
				this.tipodocumentogeneralsForeignKey=new ArrayList();
				this.bodegasForeignKey=new ArrayList();
				this.tipoparamfactuplazosForeignKey=new ArrayList();
				this.formatosForeignKey=new ArrayList();
				this.bodegatransferenciasForeignKey=new ArrayList();
				this.transacciontransferenciasForeignKey=new ArrayList();
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void cargarCombosTodosForeignKeyParametroFactuSecuencialListas(Boolean cargarCombosDependencia)throws Exception {
		try	{
			
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			String sFinalQueryCombo="";
			
			Modulo  moduloActualAux=new Modulo();
			
			if(ParametroFactuSecuencialJInternalFrame.ISLOAD_FKLOTE) {
				this.cargarCombosLoteForeignKeyParametroFactuSecuencialListas(false);
			} else {
			
				this.cargarCombosForeignKeyEmpresaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeySucursalListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTipoDocumentoGeneralListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyBodegaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTipoParamFactuPlazoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyFormatoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyBodegaTransferenciaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTransaccionTransferenciaListas(cargarCombosDependencia,sFinalQueryCombo);
			}
		} catch(Exception e) {
			throw e;
		}		
	}		
	
	

	public void cargarCombosForeignKeyEmpresaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.empresasForeignKey==null||this.empresasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=EmpresaConstantesFunciones.getArrayColumnasGlobalesEmpresa(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EmpresaConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=EmpresaConstantesFunciones.SFINALQUERY;

				this.cargarCombosEmpresasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeySucursalListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.sucursalsForeignKey==null||this.sucursalsForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=SucursalConstantesFunciones.getArrayColumnasGlobalesSucursal(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,SucursalConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=SucursalConstantesFunciones.SFINALQUERY;

				this.cargarCombosSucursalsForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoDocumentoGeneralListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.tipodocumentogeneralsForeignKey==null||this.tipodocumentogeneralsForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TipoDocumentoGeneralConstantesFunciones.getArrayColumnasGlobalesTipoDocumentoGeneral(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoDocumentoGeneralConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TipoDocumentoGeneralConstantesFunciones.SFINALQUERY;

				this.cargarCombosTipoDocumentoGeneralsForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyBodegaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.bodegasForeignKey==null||this.bodegasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=BodegaConstantesFunciones.getArrayColumnasGlobalesBodega(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,BodegaConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=BodegaConstantesFunciones.SFINALQUERY;

				this.cargarCombosBodegasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoParamFactuPlazoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.tipoparamfactuplazosForeignKey==null||this.tipoparamfactuplazosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TipoParamFactuPlazoConstantesFunciones.getArrayColumnasGlobalesTipoParamFactuPlazo(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoParamFactuPlazoConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TipoParamFactuPlazoConstantesFunciones.SFINALQUERY;

				this.cargarCombosTipoParamFactuPlazosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyFormatoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.formatosForeignKey==null||this.formatosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=FormatoConstantesFunciones.getArrayColumnasGlobalesFormato(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,FormatoConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=FormatoConstantesFunciones.SFINALQUERY;

				this.cargarCombosFormatosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyBodegaTransferenciaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.bodegatransferenciasForeignKey==null||this.bodegatransferenciasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=BodegaConstantesFunciones.getArrayColumnasGlobalesBodega(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,BodegaConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=BodegaConstantesFunciones.SFINALQUERY;

				this.cargarCombosBodegaTransferenciasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTransaccionTransferenciaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.transacciontransferenciasForeignKey==null||this.transacciontransferenciasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TransaccionConstantesFunciones.getArrayColumnasGlobalesTransaccion(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TransaccionConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TransaccionConstantesFunciones.SFINALQUERY;

				this.cargarCombosTransaccionTransferenciasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}
	
	public void cargarCombosLoteForeignKeyParametroFactuSecuencialListas(Boolean cargarCombosDependencia)throws Exception {
		try	{
			
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			
			Modulo  moduloActualAux=new Modulo();
			
			
			ParametroFactuSecuencialParameterReturnGeneral parametrofactusecuencialReturnGeneral=new ParametroFactuSecuencialParameterReturnGeneral();
						
			


				String finalQueryGlobalEmpresa="";

				if(((this.empresasForeignKey==null||this.empresasForeignKey.size()<=0) && this.parametrofactusecuencialConstantesFunciones.cargarid_empresaParametroFactuSecuencial)
					 || (this.esRecargarFks && this.parametrofactusecuencialConstantesFunciones.cargarid_empresaParametroFactuSecuencial)) {

					if(!this.parametrofactusecuencialSessionBean.getisBusquedaDesdeForeignKeySesionEmpresa()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=EmpresaConstantesFunciones.getArrayColumnasGlobalesEmpresa(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalEmpresa=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EmpresaConstantesFunciones.TABLENAME);

						finalQueryGlobalEmpresa=Funciones.GetFinalQueryAppend(finalQueryGlobalEmpresa, "");
						finalQueryGlobalEmpresa+=EmpresaConstantesFunciones.SFINALQUERY;

						//this.cargarCombosEmpresasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalEmpresa=" WHERE " + ConstantesSql.ID + "="+parametrofactusecuencialSessionBean.getlidEmpresaActual();
					}
				} else {
					finalQueryGlobalEmpresa="NONE";
				}


				String finalQueryGlobalSucursal="";

				if(((this.sucursalsForeignKey==null||this.sucursalsForeignKey.size()<=0) && this.parametrofactusecuencialConstantesFunciones.cargarid_sucursalParametroFactuSecuencial)
					 || (this.esRecargarFks && this.parametrofactusecuencialConstantesFunciones.cargarid_sucursalParametroFactuSecuencial)) {

					if(!this.parametrofactusecuencialSessionBean.getisBusquedaDesdeForeignKeySesionSucursal()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=SucursalConstantesFunciones.getArrayColumnasGlobalesSucursal(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalSucursal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,SucursalConstantesFunciones.TABLENAME);

						finalQueryGlobalSucursal=Funciones.GetFinalQueryAppend(finalQueryGlobalSucursal, "");
						finalQueryGlobalSucursal+=SucursalConstantesFunciones.SFINALQUERY;

						//this.cargarCombosSucursalsForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalSucursal=" WHERE " + ConstantesSql.ID + "="+parametrofactusecuencialSessionBean.getlidSucursalActual();
					}
				} else {
					finalQueryGlobalSucursal="NONE";
				}


				String finalQueryGlobalTipoDocumentoGeneral="";

				if(((this.tipodocumentogeneralsForeignKey==null||this.tipodocumentogeneralsForeignKey.size()<=0) && this.parametrofactusecuencialConstantesFunciones.cargarid_tipo_documento_generalParametroFactuSecuencial)
					 || (this.esRecargarFks && this.parametrofactusecuencialConstantesFunciones.cargarid_tipo_documento_generalParametroFactuSecuencial)) {

					if(!this.parametrofactusecuencialSessionBean.getisBusquedaDesdeForeignKeySesionTipoDocumentoGeneral()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TipoDocumentoGeneralConstantesFunciones.getArrayColumnasGlobalesTipoDocumentoGeneral(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalTipoDocumentoGeneral=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoDocumentoGeneralConstantesFunciones.TABLENAME);

						finalQueryGlobalTipoDocumentoGeneral=Funciones.GetFinalQueryAppend(finalQueryGlobalTipoDocumentoGeneral, "");
						finalQueryGlobalTipoDocumentoGeneral+=TipoDocumentoGeneralConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTipoDocumentoGeneralsForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTipoDocumentoGeneral=" WHERE " + ConstantesSql.ID + "="+parametrofactusecuencialSessionBean.getlidTipoDocumentoGeneralActual();
					}
				} else {
					finalQueryGlobalTipoDocumentoGeneral="NONE";
				}


				String finalQueryGlobalBodega="";

				if(((this.bodegasForeignKey==null||this.bodegasForeignKey.size()<=0) && this.parametrofactusecuencialConstantesFunciones.cargarid_bodegaParametroFactuSecuencial)
					 || (this.esRecargarFks && this.parametrofactusecuencialConstantesFunciones.cargarid_bodegaParametroFactuSecuencial)) {

					if(!this.parametrofactusecuencialSessionBean.getisBusquedaDesdeForeignKeySesionBodega()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=BodegaConstantesFunciones.getArrayColumnasGlobalesBodega(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalBodega=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,BodegaConstantesFunciones.TABLENAME);

						finalQueryGlobalBodega=Funciones.GetFinalQueryAppend(finalQueryGlobalBodega, "");
						finalQueryGlobalBodega+=BodegaConstantesFunciones.SFINALQUERY;

						//this.cargarCombosBodegasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalBodega=" WHERE " + ConstantesSql.ID + "="+parametrofactusecuencialSessionBean.getlidBodegaActual();
					}
				} else {
					finalQueryGlobalBodega="NONE";
				}


				String finalQueryGlobalTipoParamFactuPlazo="";

				if(((this.tipoparamfactuplazosForeignKey==null||this.tipoparamfactuplazosForeignKey.size()<=0) && this.parametrofactusecuencialConstantesFunciones.cargarid_tipo_param_factu_plazoParametroFactuSecuencial)
					 || (this.esRecargarFks && this.parametrofactusecuencialConstantesFunciones.cargarid_tipo_param_factu_plazoParametroFactuSecuencial)) {

					if(!this.parametrofactusecuencialSessionBean.getisBusquedaDesdeForeignKeySesionTipoParamFactuPlazo()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TipoParamFactuPlazoConstantesFunciones.getArrayColumnasGlobalesTipoParamFactuPlazo(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalTipoParamFactuPlazo=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoParamFactuPlazoConstantesFunciones.TABLENAME);

						finalQueryGlobalTipoParamFactuPlazo=Funciones.GetFinalQueryAppend(finalQueryGlobalTipoParamFactuPlazo, "");
						finalQueryGlobalTipoParamFactuPlazo+=TipoParamFactuPlazoConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTipoParamFactuPlazosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTipoParamFactuPlazo=" WHERE " + ConstantesSql.ID + "="+parametrofactusecuencialSessionBean.getlidTipoParamFactuPlazoActual();
					}
				} else {
					finalQueryGlobalTipoParamFactuPlazo="NONE";
				}


				String finalQueryGlobalFormato="";

				if(((this.formatosForeignKey==null||this.formatosForeignKey.size()<=0) && this.parametrofactusecuencialConstantesFunciones.cargarid_formatoParametroFactuSecuencial)
					 || (this.esRecargarFks && this.parametrofactusecuencialConstantesFunciones.cargarid_formatoParametroFactuSecuencial)) {

					if(!this.parametrofactusecuencialSessionBean.getisBusquedaDesdeForeignKeySesionFormato()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=FormatoConstantesFunciones.getArrayColumnasGlobalesFormato(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalFormato=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,FormatoConstantesFunciones.TABLENAME);

						finalQueryGlobalFormato=Funciones.GetFinalQueryAppend(finalQueryGlobalFormato, "");
						finalQueryGlobalFormato+=FormatoConstantesFunciones.SFINALQUERY;

						//this.cargarCombosFormatosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalFormato=" WHERE " + ConstantesSql.ID + "="+parametrofactusecuencialSessionBean.getlidFormatoActual();
					}
				} else {
					finalQueryGlobalFormato="NONE";
				}


				String finalQueryGlobalBodegaTransferencia="";

				if(((this.bodegatransferenciasForeignKey==null||this.bodegatransferenciasForeignKey.size()<=0) && this.parametrofactusecuencialConstantesFunciones.cargarid_bodega_transferenciaParametroFactuSecuencial)
					 || (this.esRecargarFks && this.parametrofactusecuencialConstantesFunciones.cargarid_bodega_transferenciaParametroFactuSecuencial)) {

					if(!this.parametrofactusecuencialSessionBean.getisBusquedaDesdeForeignKeySesionBodegaTransferencia()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=BodegaConstantesFunciones.getArrayColumnasGlobalesBodega(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalBodegaTransferencia=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,BodegaConstantesFunciones.TABLENAME);

						finalQueryGlobalBodegaTransferencia=Funciones.GetFinalQueryAppend(finalQueryGlobalBodegaTransferencia, "");
						finalQueryGlobalBodegaTransferencia+=BodegaConstantesFunciones.SFINALQUERY;

						//this.cargarCombosBodegaTransferenciasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalBodegaTransferencia=" WHERE " + ConstantesSql.ID + "="+parametrofactusecuencialSessionBean.getlidBodegaTransferenciaActual();
					}
				} else {
					finalQueryGlobalBodegaTransferencia="NONE";
				}


				String finalQueryGlobalTransaccionTransferencia="";

				if(((this.transacciontransferenciasForeignKey==null||this.transacciontransferenciasForeignKey.size()<=0) && this.parametrofactusecuencialConstantesFunciones.cargarid_transaccion_transferenciaParametroFactuSecuencial)
					 || (this.esRecargarFks && this.parametrofactusecuencialConstantesFunciones.cargarid_transaccion_transferenciaParametroFactuSecuencial)) {

					if(!this.parametrofactusecuencialSessionBean.getisBusquedaDesdeForeignKeySesionTransaccionTransferencia()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TransaccionConstantesFunciones.getArrayColumnasGlobalesTransaccion(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalTransaccionTransferencia=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TransaccionConstantesFunciones.TABLENAME);

						finalQueryGlobalTransaccionTransferencia=Funciones.GetFinalQueryAppend(finalQueryGlobalTransaccionTransferencia, "");
						finalQueryGlobalTransaccionTransferencia+=TransaccionConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTransaccionTransferenciasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTransaccionTransferencia=" WHERE " + ConstantesSql.ID + "="+parametrofactusecuencialSessionBean.getlidTransaccionTransferenciaActual();
					}
				} else {
					finalQueryGlobalTransaccionTransferencia="NONE";
				}
			
			//ARCHITECTURE			
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				parametrofactusecuencialReturnGeneral=parametrofactusecuencialLogic.cargarCombosLoteForeignKeyParametroFactuSecuencial(finalQueryGlobalEmpresa,finalQueryGlobalSucursal,finalQueryGlobalTipoDocumentoGeneral,finalQueryGlobalBodega,finalQueryGlobalTipoParamFactuPlazo,finalQueryGlobalFormato,finalQueryGlobalBodegaTransferencia,finalQueryGlobalTransaccionTransferencia);//WithConnection
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}			
			//ARCHITECTURE
			
			

			if(!finalQueryGlobalEmpresa.equals("NONE")) {
				this.empresasForeignKey=parametrofactusecuencialReturnGeneral.getempresasForeignKey();
			}

			if(!finalQueryGlobalSucursal.equals("NONE")) {
				this.sucursalsForeignKey=parametrofactusecuencialReturnGeneral.getsucursalsForeignKey();
			}

			if(!finalQueryGlobalTipoDocumentoGeneral.equals("NONE")) {
				this.tipodocumentogeneralsForeignKey=parametrofactusecuencialReturnGeneral.gettipodocumentogeneralsForeignKey();
			}

			if(!finalQueryGlobalBodega.equals("NONE")) {
				this.bodegasForeignKey=parametrofactusecuencialReturnGeneral.getbodegasForeignKey();
			}

			if(!finalQueryGlobalTipoParamFactuPlazo.equals("NONE")) {
				this.tipoparamfactuplazosForeignKey=parametrofactusecuencialReturnGeneral.gettipoparamfactuplazosForeignKey();
			}

			if(!finalQueryGlobalFormato.equals("NONE")) {
				this.formatosForeignKey=parametrofactusecuencialReturnGeneral.getformatosForeignKey();
			}

			if(!finalQueryGlobalBodegaTransferencia.equals("NONE")) {
				this.bodegatransferenciasForeignKey=parametrofactusecuencialReturnGeneral.getbodegatransferenciasForeignKey();
			}

			if(!finalQueryGlobalTransaccionTransferencia.equals("NONE")) {
				this.transacciontransferenciasForeignKey=parametrofactusecuencialReturnGeneral.gettransacciontransferenciasForeignKey();
			}
			
			
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void addItemDefectoCombosTodosForeignKeyParametroFactuSecuencial()throws Exception {
		try {
			
			this.addItemDefectoCombosForeignKeyEmpresa();
			this.addItemDefectoCombosForeignKeySucursal();
			this.addItemDefectoCombosForeignKeyTipoDocumentoGeneral();
			this.addItemDefectoCombosForeignKeyBodega();
			this.addItemDefectoCombosForeignKeyTipoParamFactuPlazo();
			this.addItemDefectoCombosForeignKeyFormato();
			this.addItemDefectoCombosForeignKeyBodegaTransferencia();
			this.addItemDefectoCombosForeignKeyTransaccionTransferencia();
		} catch(Exception e) {
			throw e;
		}		
	}
	
	



	public void addItemDefectoCombosForeignKeyEmpresa()throws Exception {
		try {
			if(this.parametrofactusecuencialSessionBean==null) {
				this.parametrofactusecuencialSessionBean=new ParametroFactuSecuencialSessionBean();
			}

			if(!this.parametrofactusecuencialSessionBean.getisBusquedaDesdeForeignKeySesionEmpresa()) {
				Empresa empresa=new Empresa();
				EmpresaConstantesFunciones.setEmpresaDescripcion(empresa,Constantes.SMENSAJE_ESCOJA_OPCION);
				empresa.setId(null);

				if(!EmpresaConstantesFunciones.ExisteEnLista(this.empresasForeignKey,empresa,true)) {

					this.empresasForeignKey.add(0,empresa);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeySucursal()throws Exception {
		try {

			if(!this.parametrofactusecuencialSessionBean.getisBusquedaDesdeForeignKeySesionSucursal()) {
				Sucursal sucursal=new Sucursal();
				SucursalConstantesFunciones.setSucursalDescripcion(sucursal,Constantes.SMENSAJE_ESCOJA_OPCION);
				sucursal.setId(null);

				if(!SucursalConstantesFunciones.ExisteEnLista(this.sucursalsForeignKey,sucursal,true)) {

					this.sucursalsForeignKey.add(0,sucursal);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTipoDocumentoGeneral()throws Exception {
		try {

			if(!this.parametrofactusecuencialSessionBean.getisBusquedaDesdeForeignKeySesionTipoDocumentoGeneral()) {
				TipoDocumentoGeneral tipodocumentogeneral=new TipoDocumentoGeneral();
				TipoDocumentoGeneralConstantesFunciones.setTipoDocumentoGeneralDescripcion(tipodocumentogeneral,Constantes.SMENSAJE_ESCOJA_OPCION);
				tipodocumentogeneral.setId(null);

				if(!TipoDocumentoGeneralConstantesFunciones.ExisteEnLista(this.tipodocumentogeneralsForeignKey,tipodocumentogeneral,true)) {

					this.tipodocumentogeneralsForeignKey.add(0,tipodocumentogeneral);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyBodega()throws Exception {
		try {

			if(!this.parametrofactusecuencialSessionBean.getisBusquedaDesdeForeignKeySesionBodega()) {
				Bodega bodega=new Bodega();
				BodegaConstantesFunciones.setBodegaDescripcion(bodega,Constantes.SMENSAJE_ESCOJA_OPCION);
				bodega.setId(null);

				if(!BodegaConstantesFunciones.ExisteEnLista(this.bodegasForeignKey,bodega,true)) {

					this.bodegasForeignKey.add(0,bodega);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTipoParamFactuPlazo()throws Exception {
		try {

			if(!this.parametrofactusecuencialSessionBean.getisBusquedaDesdeForeignKeySesionTipoParamFactuPlazo()) {
				TipoParamFactuPlazo tipoparamfactuplazo=new TipoParamFactuPlazo();
				TipoParamFactuPlazoConstantesFunciones.setTipoParamFactuPlazoDescripcion(tipoparamfactuplazo,Constantes.SMENSAJE_ESCOJA_OPCION);
				tipoparamfactuplazo.setId(null);

				if(!TipoParamFactuPlazoConstantesFunciones.ExisteEnLista(this.tipoparamfactuplazosForeignKey,tipoparamfactuplazo,true)) {

					this.tipoparamfactuplazosForeignKey.add(0,tipoparamfactuplazo);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyFormato()throws Exception {
		try {

			if(!this.parametrofactusecuencialSessionBean.getisBusquedaDesdeForeignKeySesionFormato()) {
				Formato formato=new Formato();
				FormatoConstantesFunciones.setFormatoDescripcion(formato,Constantes.SMENSAJE_ESCOJA_OPCION);
				formato.setId(null);

				if(!FormatoConstantesFunciones.ExisteEnLista(this.formatosForeignKey,formato,true)) {

					this.formatosForeignKey.add(0,formato);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyBodegaTransferencia()throws Exception {
		try {

			if(!this.parametrofactusecuencialSessionBean.getisBusquedaDesdeForeignKeySesionBodegaTransferencia()) {
				Bodega bodegatransferencia=new Bodega();
				BodegaConstantesFunciones.setBodegaDescripcion(bodegatransferencia,Constantes.SMENSAJE_ESCOJA_OPCION);
				bodegatransferencia.setId(null);

				if(!BodegaConstantesFunciones.ExisteEnLista(this.bodegatransferenciasForeignKey,bodegatransferencia,true)) {

					this.bodegatransferenciasForeignKey.add(0,bodegatransferencia);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTransaccionTransferencia()throws Exception {
		try {

			if(!this.parametrofactusecuencialSessionBean.getisBusquedaDesdeForeignKeySesionTransaccionTransferencia()) {
				Transaccion transacciontransferencia=new Transaccion();
				TransaccionConstantesFunciones.setTransaccionDescripcion(transacciontransferencia,Constantes.SMENSAJE_ESCOJA_OPCION);
				transacciontransferencia.setId(null);

				if(!TransaccionConstantesFunciones.ExisteEnLista(this.transacciontransferenciasForeignKey,transacciontransferencia,true)) {

					this.transacciontransferenciasForeignKey.add(0,transacciontransferencia);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void initActionsCombosTodosForeignKeyParametroFactuSecuencial()throws Exception {
		try {
			
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void initActionsCombosTodosForeignKeyParametroFactuSecuencial(String sFormularioTipoBusqueda)throws Exception {
		try {
			
		} catch(Exception e) {
			throw e;
		}		
	}
	
	


	
	


	
	public void setVariablesGlobalesCombosForeignKeyParametroFactuSecuencial()throws Exception {	
		try {
			if(this.parametroGeneralUsuario!=null && this.parametroGeneralUsuario.getId()>0) {
			
				this.setActualEmpresaForeignKey(this.parametroGeneralUsuario.getid_empresa(),false,"Formulario");
				this.setActualSucursalForeignKey(this.parametroGeneralUsuario.getid_sucursal(),false,"Formulario");
			
			
			}
			
			//INICIALIZA VARIABLES COMBOS GLOBALES AUXILIARES A FORMULARIO(Anio,Mes)
			this.setVariablesGlobalesAuxiliaresCombosForeignKeyParametroFactuSecuencial();
		
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesObjetoActualToFormularioForeignKeyParametroFactuSecuencial(ParametroFactuSecuencial parametrofactusecuencial)throws Exception {	
		try {
			
			this.setActualTipoDocumentoGeneralForeignKey(parametrofactusecuencial.getid_tipo_documento_general(),false,"Formulario");
			this.setActualBodegaForeignKey(parametrofactusecuencial.getid_bodega(),false,"Formulario");
			this.setActualTipoParamFactuPlazoForeignKey(parametrofactusecuencial.getid_tipo_param_factu_plazo(),false,"Formulario");
			this.setActualFormatoForeignKey(parametrofactusecuencial.getid_formato(),false,"Formulario");
			this.setActualBodegaTransferenciaForeignKey(parametrofactusecuencial.getid_bodega_transferencia(),false,"Formulario");
			this.setActualTransaccionTransferenciaForeignKey(parametrofactusecuencial.getid_transaccion_transferencia(),false,"Formulario");			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesObjetoActualToListasForeignKeyParametroFactuSecuencial(ParametroFactuSecuencial parametrofactusecuencial,String sTipoEvento)throws Exception {	
		try {
			
			
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	/*
	public void setVariablesCombosFromBeanForeignKeyParametroFactuSecuencial()throws Exception {	
		try {
			
			this.setActualTipoDocumentoGeneralForeignKey(this.parametrofactusecuencialConstantesFunciones.getid_tipo_documento_general(),false,"Formulario");
			this.setActualBodegaForeignKey(this.parametrofactusecuencialConstantesFunciones.getid_bodega(),false,"Formulario");
			this.setActualTipoParamFactuPlazoForeignKey(this.parametrofactusecuencialConstantesFunciones.getid_tipo_param_factu_plazo(),false,"Formulario");
			this.setActualFormatoForeignKey(this.parametrofactusecuencialConstantesFunciones.getid_formato(),false,"Formulario");
			this.setActualBodegaTransferenciaForeignKey(this.parametrofactusecuencialConstantesFunciones.getid_bodega_transferencia(),false,"Formulario");
			this.setActualTransaccionTransferenciaForeignKey(this.parametrofactusecuencialConstantesFunciones.getid_transaccion_transferencia(),false,"Formulario");			
		} catch(Exception e) {
			throw e;
		}
	}
	*/
	
	public void setVariablesGlobalesAuxiliaresCombosForeignKeyParametroFactuSecuencial()throws Exception {	
		try {
			
		
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesDefaultCombosForeignKeyParametroFactuSecuencial()throws Exception {	
		try {
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesParametroCombosForeignKeyParametroFactuSecuencial()throws Exception {	
		try {
			
		} catch(Exception e) {
			throw e;
		}
	}		
	
	public void cargarCombosParametroParametroFactuSecuencial()throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			
			//this.cargarDatosCliente();
			
			
			
		} catch(Exception e) {
			throw e;
		}		
	}
		
	public void cargarCombosFrameForeignKeyParametroFactuSecuencial()throws Exception {
		try {
			

			this.cargarCombosFrameEmpresasForeignKey("Todos");
			this.cargarCombosFrameSucursalsForeignKey("Todos");
			this.cargarCombosFrameTipoDocumentoGeneralsForeignKey("Todos");
			this.cargarCombosFrameBodegasForeignKey("Todos");
			this.cargarCombosFrameTipoParamFactuPlazosForeignKey("Todos");
			this.cargarCombosFrameFormatosForeignKey("Todos");
			this.cargarCombosFrameBodegaTransferenciasForeignKey("Todos");
			this.cargarCombosFrameTransaccionTransferenciasForeignKey("Todos");

		} catch(Exception e) {
			throw e;
		}		
	}		
	
	public void cargarCombosFrameForeignKeyParametroFactuSecuencial(String sFormularioTipoBusqueda)throws Exception {
		try {
			

			this.cargarCombosFrameEmpresasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameSucursalsForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTipoDocumentoGeneralsForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameBodegasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTipoParamFactuPlazosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameFormatosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameBodegaTransferenciasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTransaccionTransferenciasForeignKey(sFormularioTipoBusqueda);

		} catch(Exception e) {
			throw e;
		}		
	}	
	
	public void setItemDefectoCombosForeignKeyParametroFactuSecuencial()throws Exception {
		try {
			



			if(this.jInternalFrameDetalleFormParametroFactuSecuencial.jComboBoxid_empresaParametroFactuSecuencial!=null && this.jInternalFrameDetalleFormParametroFactuSecuencial.jComboBoxid_empresaParametroFactuSecuencial.getItemCount()>0) {
				this.jInternalFrameDetalleFormParametroFactuSecuencial.jComboBoxid_empresaParametroFactuSecuencial.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormParametroFactuSecuencial.jComboBoxid_sucursalParametroFactuSecuencial!=null && this.jInternalFrameDetalleFormParametroFactuSecuencial.jComboBoxid_sucursalParametroFactuSecuencial.getItemCount()>0) {
				this.jInternalFrameDetalleFormParametroFactuSecuencial.jComboBoxid_sucursalParametroFactuSecuencial.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormParametroFactuSecuencial.jComboBoxid_tipo_documento_generalParametroFactuSecuencial!=null && this.jInternalFrameDetalleFormParametroFactuSecuencial.jComboBoxid_tipo_documento_generalParametroFactuSecuencial.getItemCount()>0) {
				this.jInternalFrameDetalleFormParametroFactuSecuencial.jComboBoxid_tipo_documento_generalParametroFactuSecuencial.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormParametroFactuSecuencial.jComboBoxid_bodegaParametroFactuSecuencial!=null && this.jInternalFrameDetalleFormParametroFactuSecuencial.jComboBoxid_bodegaParametroFactuSecuencial.getItemCount()>0) {
				this.jInternalFrameDetalleFormParametroFactuSecuencial.jComboBoxid_bodegaParametroFactuSecuencial.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormParametroFactuSecuencial.jComboBoxid_tipo_param_factu_plazoParametroFactuSecuencial!=null && this.jInternalFrameDetalleFormParametroFactuSecuencial.jComboBoxid_tipo_param_factu_plazoParametroFactuSecuencial.getItemCount()>0) {
				this.jInternalFrameDetalleFormParametroFactuSecuencial.jComboBoxid_tipo_param_factu_plazoParametroFactuSecuencial.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormParametroFactuSecuencial.jComboBoxid_formatoParametroFactuSecuencial!=null && this.jInternalFrameDetalleFormParametroFactuSecuencial.jComboBoxid_formatoParametroFactuSecuencial.getItemCount()>0) {
				this.jInternalFrameDetalleFormParametroFactuSecuencial.jComboBoxid_formatoParametroFactuSecuencial.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormParametroFactuSecuencial.jComboBoxid_bodega_transferenciaParametroFactuSecuencial!=null && this.jInternalFrameDetalleFormParametroFactuSecuencial.jComboBoxid_bodega_transferenciaParametroFactuSecuencial.getItemCount()>0) {
				this.jInternalFrameDetalleFormParametroFactuSecuencial.jComboBoxid_bodega_transferenciaParametroFactuSecuencial.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormParametroFactuSecuencial.jComboBoxid_transaccion_transferenciaParametroFactuSecuencial!=null && this.jInternalFrameDetalleFormParametroFactuSecuencial.jComboBoxid_transaccion_transferenciaParametroFactuSecuencial.getItemCount()>0) {
				this.jInternalFrameDetalleFormParametroFactuSecuencial.jComboBoxid_transaccion_transferenciaParametroFactuSecuencial.setSelectedIndex(0);
			}
		} catch(Exception e) {
			throw e;
		}		
	}		
	
	
















	
	

	public ParametroFactuSecuencialBeanSwingJInternalFrame() throws Exception {
		super(false,PaginaTipo.PRINCIPAL);
	}
	
	public ParametroFactuSecuencialBeanSwingJInternalFrame(Boolean cargarRelaciones,PaginaTipo paginaTipo) throws Exception {
		super(cargarRelaciones,paginaTipo);
	}
	
	public ParametroFactuSecuencialBeanSwingJInternalFrame(Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,PaginaTipo paginaTipo) throws Exception {
		super(cargarRelaciones,paginaTipo);
		
		this.parametrofactusecuencialSessionBean=new ParametroFactuSecuencialSessionBean(); 
		this.parametrofactusecuencialConstantesFunciones=new ParametroFactuSecuencialConstantesFunciones(); 
		this.parametrofactusecuencialBean=new ParametroFactuSecuencial();//(this.parametrofactusecuencialConstantesFunciones); 		
		this.parametrofactusecuencialReturnGeneral=new ParametroFactuSecuencialParameterReturnGeneral(); 
		
		this.parametrofactusecuencialSessionBean.setConGuardarRelaciones(conGuardarRelaciones);
		this.parametrofactusecuencialSessionBean.setEsGuardarRelacionado(esGuardarRelacionado);
				
	}
	
	public ParametroFactuSecuencialBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,Boolean cargarTodosDatos,PaginaTipo paginaTipo) throws Exception {
		this(blncargarCombostrForeignKey,blnCargarInformacionInicial,jdesktopPane,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo,conGuardarRelaciones,esGuardarRelacionado,cargarRelaciones,cargarTodosDatos);
	}
		
	public ParametroFactuSecuencialBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,Boolean cargarRelaciones,Boolean cargarTodosDatos,PaginaTipo paginaTipo) throws Exception {
		this(blncargarCombostrForeignKey,blnCargarInformacionInicial,jdesktopPane,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo,false,false,cargarRelaciones,cargarTodosDatos);
	}	
	
	public ParametroFactuSecuencialBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,PaginaTipo paginaTipo,Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,Boolean cargarTodosDatos) throws Exception //Boolean esParaBusquedaForeignKey
    {
		super(jdesktopPane,conGuardarRelaciones,esGuardarRelacionado,cargarRelaciones,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo);
		
		try {
			
			this.permiteRecargarForm=false;
			
			this.startProcessParametroFactuSecuencial(true);
			
			Boolean esParaBusquedaForeignKey=false;//ANTES USADO COMO PARAMETRO DEL CONSTRUCTOR
			
			if(paginaTipo.equals(PaginaTipo.BUSQUEDA)) {
				esParaBusquedaForeignKey=true;
			}
			
			
			
			//SE ASIGNA EN CLASE PADRE
			/*
			this.parametroGeneralSg=parametroGeneralSg;		
			this.parametroGeneralUsuario=parametroGeneralUsuario;	
			this.usuarioActual=usuarioActual;
			this.moduloActual=moduloActual;
			*/						
			
			long start_time=0;
			long end_time=0;
			
			if(Constantes2.ISDEVELOPING2) {
				start_time = System.currentTimeMillis();
			}
			
			if(!cargarTodosDatos) {
				this.sAccionBusqueda="NINGUNO";
			}
			
			this.parametrofactusecuencialConstantesFunciones=new ParametroFactuSecuencialConstantesFunciones(); 
			this.parametrofactusecuencialBean=new ParametroFactuSecuencial();//this.parametrofactusecuencialConstantesFunciones); 			
			this.parametrofactusecuencialReturnGeneral=new ParametroFactuSecuencialParameterReturnGeneral(); 
		
			ParametroFactuSecuencialBeanSwingJInternalFrameAdditional.CargaInicialInicio(this, "NORMAL", null);
			
			this.setTitle(Funciones.GetTituloSistema(this.parametroGeneralSg,this.moduloActual,this.usuarioActual,"Parametro Secuencial  Mantenimiento",paginaTipo));			
			
			this.conTotales=false;
			
			this.conTotales=true;
			
			
			this.parametrofactusecuencial=new ParametroFactuSecuencial();
			this.parametrofactusecuencials = new ArrayList<ParametroFactuSecuencial>();
			this.parametrofactusecuencialsAux = new ArrayList<ParametroFactuSecuencial>();
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactusecuencialLogic=new ParametroFactuSecuencialLogic();
				this.parametrofactusecuencialLogic.getNewConnexionToDeep("");
			}
			
			//this.parametrofactusecuencialSessionBean.setConGuardarRelaciones(conGuardarRelaciones);
			//this.parametrofactusecuencialSessionBean.setEsGuardarRelacionado(esGuardarRelacionado);
			
			this.jDesktopPane=jdesktopPane;
			
			if(this.jDesktopPane.getClass().equals(JDesktopPaneMe.class)) {
				this.constantes2=((JDesktopPaneMe)this.jDesktopPane).constantes2;
			}
			
			if(!Constantes.CON_VARIAS_VENTANAS) {
    			MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameDetalleFormParametroFactuSecuencial);
				
				if(!this.conCargarMinimo) {
					
					if(this.jInternalFrameReporteDinamicoParametroFactuSecuencial!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameReporteDinamicoParametroFactuSecuencial);	
					}
					
					if(this.jInternalFrameImportacionParametroFactuSecuencial!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameImportacionParametroFactuSecuencial);							
					}
					
				}
				
				
				if(!this.conCargarMinimo) {
					
					if(this.jInternalFrameOrderByParametroFactuSecuencial!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameOrderByParametroFactuSecuencial);					
					}
					
				}
			}
			
			//DETALLE DATOS
			if(this.jInternalFrameDetalleFormParametroFactuSecuencial!=null) { //this.conCargarFormDetalle) {
				this.jDesktopPane.add(this.jInternalFrameDetalleFormParametroFactuSecuencial);
				this.jInternalFrameDetalleFormParametroFactuSecuencial.setVisible(false);
				this.jInternalFrameDetalleFormParametroFactuSecuencial.setSelected(false);						
			}
			
			if(!this.conCargarMinimo) {
				
				//REPORTE DINAMICO
				if(this.jInternalFrameReporteDinamicoParametroFactuSecuencial!=null) {
					this.jDesktopPane.add(this.jInternalFrameReporteDinamicoParametroFactuSecuencial);
					this.jInternalFrameReporteDinamicoParametroFactuSecuencial.setVisible(false);
					this.jInternalFrameReporteDinamicoParametroFactuSecuencial.setSelected(false);
				}
				
				//IMPORTACION
				if(this.jInternalFrameImportacionParametroFactuSecuencial!=null) {
					this.jDesktopPane.add(this.jInternalFrameImportacionParametroFactuSecuencial);
					this.jInternalFrameImportacionParametroFactuSecuencial.setVisible(false);
					this.jInternalFrameImportacionParametroFactuSecuencial.setSelected(false);
				}
				
				
			}
			
			
			if(!this.conCargarMinimo) {
				
				if(this.jInternalFrameOrderByParametroFactuSecuencial!=null) {
					this.jDesktopPane.add(this.jInternalFrameOrderByParametroFactuSecuencial);
					this.jInternalFrameOrderByParametroFactuSecuencial.setVisible(false);
					this.jInternalFrameOrderByParametroFactuSecuencial.setSelected(false);				
				}
				
			}
			
			
			//this.esParaBusquedaForeignKey=false;
			this.esParaBusquedaForeignKey=esParaBusquedaForeignKey;
			
			this.invalidValues=new InvalidValue[0];
			
			
			
			this.idParametroFactuSecuencialActual=0L;
			this.rowIndexActual=0;
			
			
			this.iNumeroPaginacionPagina=0;
			this.iNumeroPaginacion=ParametroFactuSecuencialConstantesFunciones.INUMEROPAGINACION;
			this.pagination=new Pagination();
			this.datosCliente=new DatosCliente();
			this.lIdUsuarioSesion=0L;	
			this.sTipoArchivoReporte="";
			this.sTipoArchivoReporteDinamico="";
			this.sTipoReporte="";
			this.sTipoReporteDinamico="";
			this.sTipoPaginacion="";
			this.sTipoRelacion="";
			this.sTipoAccion="";
			this.sTipoAccionFormulario="";
			this.sTipoSeleccionar="";			
			this.sDetalleReporte="";
			this.sTipoReporteExtra="";
			this.sValorCampoGeneral="";
			this.sPathReporteDinamico="";			
			
			this.isMostrarNumeroPaginacion=false;
			this.isSeleccionarTodos=false;
			this.isSeleccionados=false;
			this.conGraficoReporte=false;
			this.isPostAccionNuevo=false;
			this.isPostAccionSinCerrar=false;
			this.isPostAccionSinMensaje=false;
			this.esReporteDinamico=false;
			this.esRecargarFks=false;
			this.esReporteAccionProceso=false;
			
			this.parametrofactusecuencialReturnGeneral=new ParametroFactuSecuencialParameterReturnGeneral();
			
			this.parametrofactusecuencialParameterGeneral=new ParametroFactuSecuencialParameterReturnGeneral();
			
			
			
			this.sistemaLogicAdditional=new SistemaLogicAdditional();
			
			this.sistemaLogicAdditional.setConnexion(this.parametrofactusecuencialLogic.getConnexion());			
			
			
			
			
			
			
			
			//VERIFICAR GLOBAL
			this.cargarDatosCliente();			
			
			
			if(!this.parametrofactusecuencialSessionBean.getEsGuardarRelacionado()) {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					if(!sistemaLogicAdditional.validarLicenciaCliente(this.datosCliente,this.moduloActual,this.usuarioActual)) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_CONTROLGLOBAL);
					}
					
				} else if(Constantes.ISUSAEJBREMOTE) {
					
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}			
			
			//VERIFICAR GLOBAL
			
			//VERIFICAR SESSION ACTUAL
			//this.cargarDatosCliente();
			
			this.sistemaReturnGeneral=new SistemaParameterReturnGeneral();
			
			SistemaParameterReturnGeneralAdditional.inicializarSinSeguridad(this.sistemaReturnGeneral);
			
			if(ParametroFactuSecuencialJInternalFrame.CON_LLAMADA_SIMPLE) {
				if(this.parametrofactusecuencialSessionBean.getEsGuardarRelacionado()) {
					this.opcionActual.setId(0L);
					
					//idOpcion=0L;					
				}
				
				ArrayList<String> arrPaginas=new ArrayList<String>();		
				ArrayList<Opcion> opcionsFinal=new ArrayList<Opcion>();	
				
		
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					//this.sistemaReturnGeneral=sistemaLogicAdditional.validarCargarSesionUsuarioActualWithConnection(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual,Constantes.LIDSISTEMAACTUAL,ParametroFactuSecuencialConstantesFunciones.SNOMBREOPCION,this.opcionActual,this.parametrofactusecuencialSessionBean.getEsGuardarRelacionado(),this.parametrofactusecuencialSessionBean.getConGuardarRelaciones(),arrPaginas);
					
					this.sistemaReturnGeneral=sistemaLogicAdditional.validarCargarSesionUsuarioActual(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual,Constantes.LIDSISTEMAACTUAL,ParametroFactuSecuencialConstantesFunciones.SNOMBREOPCION,this.opcionActual,this.parametrofactusecuencialSessionBean.getEsGuardarRelacionado(),this.parametrofactusecuencialSessionBean.getConGuardarRelaciones(),arrPaginas);
					
					if(!this.sistemaReturnGeneral.getEsValidado()) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_SESIONACTUAL);
					}
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
					//FALTA
				}
			} else { 
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					if(!sistemaLogicAdditional.validarSesionUsuarioActual(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual)) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_SESIONACTUAL);
					}
				
				} else if(Constantes.ISUSAEJBREMOTE) {
					
				} else if(Constantes.ISUSAEJBHOME) {
				}
			} 
			//VERIFICAR SESSION ACTUAL
			
			
			this.sVisibilidadTablaBusquedas="table-row";
			this.sVisibilidadTablaElementos="none";
			this.sVisibilidadTablaAcciones="none";
			
			this.isVisibilidadCeldaNuevoParametroFactuSecuencial=false;
			this.isVisibilidadCeldaDuplicarParametroFactuSecuencial=true;
			this.isVisibilidadCeldaCopiarParametroFactuSecuencial=true;
			this.isVisibilidadCeldaVerFormParametroFactuSecuencial=true;
			this.isVisibilidadCeldaOrdenParametroFactuSecuencial=true;
			this.isVisibilidadCeldaNuevoRelacionesParametroFactuSecuencial=false;
			this.isVisibilidadCeldaModificarParametroFactuSecuencial=false;
			this.isVisibilidadCeldaActualizarParametroFactuSecuencial=false;
			this.isVisibilidadCeldaEliminarParametroFactuSecuencial=false;
			this.isVisibilidadCeldaCancelarParametroFactuSecuencial=false;
			this.isVisibilidadCeldaGuardarParametroFactuSecuencial=false;
			this.isVisibilidadCeldaGuardarCambiosParametroFactuSecuencial=false;
			
			
			this.isVisibilidadFK_IdBodega=true;
			this.isVisibilidadFK_IdBodegaTransferencia=true;
			this.isVisibilidadFK_IdEmpresa=true;
			this.isVisibilidadFK_IdFormato=true;
			this.isVisibilidadFK_IdSucursal=true;
			this.isVisibilidadFK_IdTipoDocumentoGeneral=true;
			this.isVisibilidadFK_IdTipoParamFactuPlazo=true;
			this.isVisibilidadFK_IdTransaccionTransferencia=true;
			
			//ELEMENTOS TABLAS PARAMETOS
			
			
			
			//ELEMENTOS TABLAS PARAMETOS_FIN
			
			//this.actualizarEstadoCeldasBotonesParametroFactuSecuencial("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
						
			
			
			this.inicializarPermisosParametroFactuSecuencial();
			
			//INICIALIZAR FALSE, TALVEZ COMENTAR
			this.setPermisosUsuarioParametroFactuSecuencial(false);
			
			this.setPermisosUsuarioParametroFactuSecuencial();
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.parametrofactusecuencialSessionBean.getEsGuardarRelacionado() 
				|| (this.parametrofactusecuencialSessionBean.getEsGuardarRelacionado() && this.parametrofactusecuencialSessionBean.getConGuardarRelaciones())) {
				
				this.inicializarSetPermisosUsuarioParametroFactuSecuencialClasesRelacionadas();
			}
			
			if(this.parametrofactusecuencialSessionBean.getConGuardarRelaciones()) {
				this.actualizarTabsSetPermisosUsuarioParametroFactuSecuencialClasesRelacionadas();
			}
			
			
			
			//SOLO SE EJECUTA LA PRIMERA VEZ, BINDINGS SI FUNCIONA
			if(!ParametroFactuSecuencialJInternalFrame.ISBINDING_MANUAL) {
				this.inicializarActualizarBindingBotonesPermisosParametroFactuSecuencial();
			} else {
				this.inicializarActualizarBindingBotonesPermisosManualParametroFactuSecuencial();
			}
			
			if(!this.isPermisoBusquedaParametroFactuSecuencial) {
				//BYDAN_BUSQUEDAS
				
				this.jTabbedPaneBusquedasParametroFactuSecuencial.setVisible(false);				
				
			}
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.parametrofactusecuencialSessionBean.getEsGuardarRelacionado()) {				
				this.tiposArchivosReportes=Funciones.getListTiposArchivosReportes();
				this.tiposArchivosReportesDinamico=Funciones.getListTiposArchivosReportes();
				this.tiposReportes=Funciones.getListTiposReportes(false);
				this.tiposReportesDinamico=Funciones.getListTiposReportesDinamico(false);
				
				
				
				this.tiposGraficosReportes=Funciones2.getListTiposGraficosReportes();
				this.tiposPaginacion=Funciones2.getListTiposPaginacion(this.isPermisoPaginacionMedioParametroFactuSecuencial,this.isPermisoPaginacionMedioParametroFactuSecuencial,this.isPermisoPaginacionTodoParametroFactuSecuencial);
				this.tiposSeleccionar=Funciones2.getListTiposSeleccionar();
				this.tiposSeleccionar.addAll(ParametroFactuSecuencialConstantesFunciones.getTiposSeleccionarParametroFactuSecuencial());
				
				this.tiposColumnasSelect=ParametroFactuSecuencialConstantesFunciones.getTiposSeleccionarParametroFactuSecuencial(true);
				
				this.tiposRelacionesSelect=new ArrayList<Reporte>();								
				
				
			} else {
				this.tiposArchivosReportes=new ArrayList<Reporte>();
				this.tiposArchivosReportesDinamico=new ArrayList<Reporte>();
				this.tiposReportes=new ArrayList<Reporte>();
				this.tiposReportesDinamico=new ArrayList<Reporte>();
				this.tiposGraficosReportes=new ArrayList<Reporte>();
				this.tiposPaginacion=new ArrayList<Reporte>();
				this.tiposSeleccionar=new ArrayList<Reporte>();			
				this.tiposColumnasSelect=new ArrayList<Reporte>();	
				this.tiposRelacionesSelect=new ArrayList<Reporte>();	
			}
						
			
			//FUNCIONALIDAD_RELACIONADO
			//if(!this.parametrofactusecuencialSessionBean.getEsGuardarRelacionado()) {
				//SE ENCUENTRA MAS ADELANTE CON ACCIONES POR USUARIO
				//ACCIONES GENERALES Y POR USUARIO
				this.tiposRelaciones=Funciones2.getListTiposRelaciones();
				this.setRelacionesUsuarioParametroFactuSecuencial();
				
				this.tiposAcciones=Funciones2.getListTiposAcciones(false,false,true);
				this.setAccionesUsuarioParametroFactuSecuencial(false);	
				
				this.tiposAccionesFormulario=Funciones2.getListTiposAccionesFormulario(false,false,true);							
				this.setAccionesUsuarioParametroFactuSecuencial(true);	
				
				this.inicializarActualizarBindingtiposArchivosReportesAccionesParametroFactuSecuencial() ;
			
			/*
			} else {
				this.tiposAcciones=new ArrayList<Reporte>();
				this.tiposAccionesFormulario=new ArrayList<Reporte>();
			}
			*/						
			
			this.inicializarInvalidValues();
						
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			
			
			this.arrOrderBy= new  ArrayList<OrderBy>();
			
			
			this.arrDatoGeneralMinimos= new  ArrayList<DatoGeneralMinimo>();
			
			
			this.traerValoresTablaOrderBy();			
			
			
			this.isGuardarCambiosEnLote=false;
			this.isCargarCombosDependencia=false;
			
			 
			jasperPrint = null;												
			
			//FK
			
			this.empresaLogic=new EmpresaLogic();
			this.sucursalLogic=new SucursalLogic();
			this.tipodocumentogeneralLogic=new TipoDocumentoGeneralLogic();
			this.bodegaLogic=new BodegaLogic();
			this.tipoparamfactuplazoLogic=new TipoParamFactuPlazoLogic();
			this.formatoLogic=new FormatoLogic();
			this.bodegatransferenciaLogic=new BodegaLogic();
			this.transacciontransferenciaLogic=new TransaccionLogic();
			
			//PARAMETROS
			
			
			/*
			if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {		
				hashtableEnv =  Funciones.getHashtableEnv();		
				initialContext = new InitialContext(hashtableEnv);	
			}
			*/
			/*
			if(Constantes.ISUSAEJBREMOTE) {
				parametrofactusecuencialImplementable= (ParametroFactuSecuencialImplementable) initialContext.lookup(Constantes.SEJBPACKAGE+Constantes.SEJBSEPARATOR+ParametroFactuSecuencialConstantesFunciones.SEJBNAME+Constantes.SEJBSEPARATOR+Constantes.SEJBREMOTE);
			} else if(Constantes.ISUSAEJBHOME) {
				parametrofactusecuencialImplementableHome= (ParametroFactuSecuencialImplementableHome) initialContext.lookup(Constantes.SEJBPACKAGE+Constantes.SEJBSEPARATOR+ParametroFactuSecuencialConstantesFunciones.SEJBNAME+Constantes.SEJBSEPARATOR+Constantes.SEJBLOCAL);
			}			
			*/
			
			
			this.parametrofactusecuencials= new ArrayList<ParametroFactuSecuencial>();
			this.parametrofactusecuencialsEliminados= new ArrayList<ParametroFactuSecuencial>();
						
			this.isEsNuevoParametroFactuSecuencial=false;
			this.esParaAccionDesdeFormularioParametroFactuSecuencial=false;
			this.isEsMantenimientoRelacionesRelacionadoUnico=false;
			this.isEsMantenimientoRelaciones=false;
			this.isEsMantenimientoRelacionado=false;
			this.isContieneImagenes=false;
			
			
			
			
			
			//INICIALIZAR LISTAS FK
			
			this.empresasForeignKey=new ArrayList<Empresa>() ;
			this.sucursalsForeignKey=new ArrayList<Sucursal>() ;
			this.tipodocumentogeneralsForeignKey=new ArrayList<TipoDocumentoGeneral>() ;
			this.bodegasForeignKey=new ArrayList<Bodega>() ;
			this.tipoparamfactuplazosForeignKey=new ArrayList<TipoParamFactuPlazo>() ;
			this.formatosForeignKey=new ArrayList<Formato>() ;
			this.bodegatransferenciasForeignKey=new ArrayList<Bodega>() ;
			this.transacciontransferenciasForeignKey=new ArrayList<Transaccion>() ;
			
			
			
			
			if(blncargarCombostrForeignKey) {
				this.cargarCombosForeignKeyParametroFactuSecuencial(this.isCargarCombosDependencia);
			}
			
			this.cargarCombosParametroParametroFactuSecuencial();
			
			
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.parametrofactusecuencialSessionBean.getEsGuardarRelacionado()) {
				this.onLoad();
			}
						
			ParametroFactuSecuencialBeanSwingJInternalFrameAdditional.RecargarVentanaSegunOpcion(this,opcionActual);
			
			/*
			if(blnCargarInformacionInicial) {
				this.recargarInformacion();
			}
			*/
			//this.iNumeroPaginacionPagina=0;
			//this.iNumeroPaginacion=ParametroFactuSecuencialConstantesFunciones.INUMEROPAGINACION;
			
			this.actualizarEstadoCeldasBotonesParametroFactuSecuencial("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			//SOLO LA PRIMERA VEZ HACE LOS BINDINGS, SOLO AHI FUNCIONA
			this.inicializarActualizarBindingParametroFactuSecuencial(true); 
			
			//SE REDIMENSIONA SINO NO SE ACTUALIZA
			this.redimensionarTablaDatos();
			
			
			this.initActions();
			
			;
						
			if(this.jInternalFrameDetalleFormParametroFactuSecuencial!=null) {//if(this.conCargarFormDetalle) {
				this.cargarMenuRelaciones();
			}
			
			//OBLIGA CARGAR DETALLE, MEJOR DESHABILITAR, FALTA TALVEZ PONER EN SELECCIONAR
			//MAYBE
			//this.updateControlesFormularioParametroFactuSecuencial();
			
			if(!this.conCargarMinimo) {
				this.updateBusquedasFormularioParametroFactuSecuencial();
			}
			
			ParametroFactuSecuencialBeanSwingJInternalFrameAdditional.CargaInicial(this, "NORMAL", null);
			
			
			//SE REALIZA ESTO PARA QUE SE PUEDA RECORRER TAB SIN IMPORTAR ORDEN
			Boolean existeTabBusqueda=false;
			
			if(!this.conCargarMinimo) {
				//BYDAN_BUSQUEDAS
				
				
				for(int i=0; i<this.jTabbedPaneBusquedasParametroFactuSecuencial.getTabCount(); i++) {
					this.jTabbedPaneBusquedasParametroFactuSecuencial.setSelectedIndex(i);
						
					if(!existeTabBusqueda) {
						existeTabBusqueda=true;
					}
				}
					
				if(existeTabBusqueda) {
					this.jTabbedPaneBusquedasParametroFactuSecuencial.setSelectedIndex(0);
				}	
				
				
			}
			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactusecuencialLogic.commitNewConnexionToDeep();
			}
			
			
			if(Constantes2.ISDEVELOPING2) {
				end_time = System.currentTimeMillis();			
				String sTipo="Load Ventana";
				Funciones2.getMensajeTiempoEjecucion(start_time, end_time, sTipo,false);
			}  
			
			this.finishProcessParametroFactuSecuencial(true);
			
			this.dEnd=(double)System.currentTimeMillis();
			
			this.dDif=this.dEnd - this.dStart;
			
			if(Constantes.ISDEVELOPING) {
				System.out.println("Tiempo(ms) Carga ParametroFactuSecuencial: " + this.dDif); 
			}
			
			this.permiteRecargarForm=true;
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactusecuencialLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,ParametroFactuSecuencialConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactusecuencialLogic.closeNewConnexionToDeep();
			}
		}	 
    }
	
	public void cargarTiposRelacionesSelectParametroFactuSecuencial() {
		Reporte reporte=new Reporte();
		
	
	}
	
	
	
	public void jTabbedPaneChangeListenerGeneral(String sTipo,ChangeEvent evt) { 	  
		Boolean procesaCargarParteTab=false;
			
		try {
			int iIndex=0;		    			
			String sTitle="";
			
			//TABBED PANE RELACIONES
			if(sTipo.equals("RelacionesParametroFactuSecuencial")) {
				iIndex=this.jInternalFrameDetalleFormParametroFactuSecuencial.jTabbedPaneRelacionesParametroFactuSecuencial.getSelectedIndex();		    
			
				sTitle=this.jInternalFrameDetalleFormParametroFactuSecuencial.jTabbedPaneRelacionesParametroFactuSecuencial.getTitleAt(iIndex);
				
				Integer intSelectedRow = 0;	
			
				intSelectedRow = this.jTableDatosParametroFactuSecuencial.getSelectedRow();	
				
				
				
			}
			
			//TABBED PANE RELACIONES FIN(EXTRA TAB)
			;
			
  		} catch(Exception e) {
  			e.printStackTrace();
  		} finally {
			if(procesaCargarParteTab) {				
				this.finishProcessParametroFactuSecuencial();	
			}
		}
    }
	
	
	
	public void jButtonRelacionActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
  		} catch(Exception e) {
  			e.printStackTrace();
  		}
    }
	
	public void cargarMenuRelaciones() {	
		JMenuItem jmenuItem= new JMenuItem("General");
		String sLabelMenu="";
		
	}		
	
	public void cargarCombosForeignKeyParametroFactuSecuencial(Boolean cargarCombosDependencia) throws Exception {   
		this.cargarCombosForeignKeyParametroFactuSecuencial(cargarCombosDependencia,true,true);
	}
	
	//CARGAR COMBOS EN LOTE
	public void cargarCombosForeignKeyParametroFactuSecuencial(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales) throws Exception {   
		this.cargarCombosTodosForeignKeyParametroFactuSecuencialListas(cargarCombosDependencia);
				
		this.addItemDefectoCombosTodosForeignKeyParametroFactuSecuencial();
		
		this.cargarCombosFrameForeignKeyParametroFactuSecuencial();						
		
		if(conInitActions) {
			this.initActionsCombosTodosForeignKeyParametroFactuSecuencial();
		}
		
		if(conSetVariablesGlobales) {
			this.setVariablesGlobalesCombosForeignKeyParametroFactuSecuencial();
		}
	}
	
	

	public void cargarCombosForeignKeyTipoDocumentoGeneral(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTipoDocumentoGeneralListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTipoDocumentoGeneral();
				this.cargarCombosFrameTipoDocumentoGeneralsForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaTipoDocumentoGeneral(this.tipodocumentogeneralsForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyBodega(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyBodegaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyBodega();
				this.cargarCombosFrameBodegasForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaBodega(this.bodegasForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoParamFactuPlazo(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTipoParamFactuPlazoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTipoParamFactuPlazo();
				this.cargarCombosFrameTipoParamFactuPlazosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaTipoParamFactuPlazo(this.tipoparamfactuplazosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyFormato(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyFormatoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyFormato();
				this.cargarCombosFrameFormatosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaFormato(this.formatosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyBodegaTransferencia(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyBodegaTransferenciaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyBodegaTransferencia();
				this.cargarCombosFrameBodegaTransferenciasForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaBodegaTransferencia(this.bodegatransferenciasForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTransaccionTransferencia(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTransaccionTransferenciaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTransaccionTransferencia();
				this.cargarCombosFrameTransaccionTransferenciasForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaTransaccionTransferencia(this.transacciontransferenciasForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}
	
	public void jButtonNuevoParametroFactuSecuencialActionPerformed(ActionEvent evt,Boolean esRelaciones) throws Exception {   
		try {
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.FORM_RECARGAR;
			String sTipo="NUEVO_NORMAL";
			
			this.estaModoNuevo=true;
			
			if(this.parametrofactusecuencialSessionBean.getConGuardarRelaciones()) {
				this.dStart=(double)System.currentTimeMillis();
			}
				
			//if(this.esUsoDesdeHijo) {
			//	eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			//}
											
			if(this.jInternalFrameDetalleFormParametroFactuSecuencial==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}			
				
			ParametroFactuSecuencialBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.parametrofactusecuencial,new Object(),this.parametrofactusecuencialParameterGeneral,this.parametrofactusecuencialReturnGeneral);
			
			
			if(jTableDatosParametroFactuSecuencial.getRowCount()>=1) {
				jTableDatosParametroFactuSecuencial.removeRowSelectionInterval(0, jTableDatosParametroFactuSecuencial.getRowCount()-1);						
			}
			
			this.isEsNuevoParametroFactuSecuencial=true;
			
			//ESTABLECE SI ES RELACIONADO O NO 
			this.habilitarDeshabilitarTipoMantenimientoParametroFactuSecuencial(esRelaciones);
			
			this.nuevoPreparar(false); 
			this.habilitarDeshabilitarControlesParametroFactuSecuencial(true);			
			//this.parametrofactusecuencial=new ParametroFactuSecuencial();
			//this.parametrofactusecuencial.setIsChanged(true);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesParametroFactuSecuencial(false) ;						
			 
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualParametroFactuSecuencial() ;
			
			if(ParametroFactuSecuencialJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetalleParametroFactuSecuencial(esRelaciones);
			}
					
			//Se Duplica, sin sentido
			//this.actualizarInformacion("EVENTO_NUEVO",false,this.parametrofactusecuencial);	
			this.actualizarInformacion("INFO_PADRE",false,this.parametrofactusecuencial);				
			
			ParametroFactuSecuencialBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.parametrofactusecuencial,new Object(),this.parametrofactusecuencialParameterGeneral,this.parametrofactusecuencialReturnGeneral);
			
			if(this.parametrofactusecuencialSessionBean.getConGuardarRelaciones()) {
				this.dEnd=(double)System.currentTimeMillis();					
				this.dDif=this.dEnd - this.dStart;
					
				if(Constantes.ISDEVELOPING) {
					System.out.println("Tiempo(ms) Nuevo Preparar ParametroFactuSecuencial: " + this.dDif); 
				}
			}
			
			//false para que pueda generar eventos
			this.estaModoNuevo=false;
							
			//Con this.estaModoNuevo=false;, se permite actualizar y usar eventos control al mismo tiempo (FuncionTipo.LAST)			
			ParametroFactuSecuencialBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.LAST,ControlTipo.FORM,EventoTipo.CLIC,EventoSubTipo.NEW,sTipo,this.parametrofactusecuencial,new Object(),this.parametrofactusecuencialParameterGeneral,this.parametrofactusecuencialReturnGeneral);
			
		} catch(Exception e) {									
			FuncionesSwing.manageException(this, e,logger,ParametroFactuSecuencialConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoNuevo=false;			
		}
	}
	
	public void jButtonDuplicarParametroFactuSecuencialActionPerformed(ActionEvent evt,Boolean esRelaciones) throws Exception {   
		try {
			Boolean soloDuplicarUno=false;
			Boolean conSeleccionarFilaTabla=false;
			
			this.estaModoNuevo=true;
			this.estaModoDuplicar=true;
			
			ArrayList<ParametroFactuSecuencial> parametrofactusecuencialsSeleccionados=new ArrayList<ParametroFactuSecuencial>();
			int intSelectedRow =-1;
			Integer iNumRowsSeleccionados=0;
			int[] arrNumRowsSeleccionados=null;
			
			//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
			if(conSeleccionarFilaTabla) {
				arrNumRowsSeleccionados=this.jTableDatosParametroFactuSecuencial.getSelectedRows();
				iNumRowsSeleccionados=this.jTableDatosParametroFactuSecuencial.getSelectedRows().length;			
			}
			
			parametrofactusecuencialsSeleccionados=this.getParametroFactuSecuencialsSeleccionados(false);
				
			if((soloDuplicarUno && iNumRowsSeleccionados.equals(1)) || !soloDuplicarUno) {
				//LO HACE NUEVOPREPARAR
				//this.iIdNuevoParametroFactuSecuencial--;			
				//ParametroFactuSecuencial parametrofactusecuencialAux= new ParametroFactuSecuencial();			
				//parametrofactusecuencialAux.setId(this.iIdNuevoParametroFactuSecuencial);																
				
				//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
				//ParametroFactuSecuencial parametrofactusecuencialOrigen=new ParametroFactuSecuencial();
				//for(Integer iNumRowSeleccionado:arrNumRowsSeleccionados) {				
				
				for(ParametroFactuSecuencial parametrofactusecuencialOrigen : parametrofactusecuencialsSeleccionados) {
					if(conSeleccionarFilaTabla) {
						if(!soloDuplicarUno) {
							//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
							//intSelectedRow =iNumRowSeleccionado;
						} else {
							intSelectedRow = this.jTableDatosParametroFactuSecuencial.getSelectedRow();
						}
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							parametrofactusecuencialOrigen =(ParametroFactuSecuencial) this.parametrofactusecuencialLogic.getParametroFactuSecuencials().toArray()[this.jTableDatosParametroFactuSecuencial.convertRowIndexToModel(intSelectedRow)];
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrofactusecuencialOrigen =(ParametroFactuSecuencial) this.parametrofactusecuencials.toArray()[this.jTableDatosParametroFactuSecuencial.convertRowIndexToModel(intSelectedRow)];
						}
					}
					
					this.aumentarTamanioFilaNuevaTablaParametroFactuSecuencial();
					
					if(this.conTotales) {
						this.quitarFilaTotales();
					}
					
					this.nuevoPreparar(true);
					
					this.parametrofactusecuencial.setsType("DUPLICADO");
					
					this.setCopiarVariablesObjetosParametroFactuSecuencial(parametrofactusecuencialOrigen,this.parametrofactusecuencial,true,true);
					
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuSecuencial(this.parametrofactusecuencial);
					
					//LO HACE NUEVOPREPARAR
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						this.parametrofactusecuencialLogic.getParametroFactuSecuencials().add(this.parametrofactusecuencialAux);
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						this.parametrofactusecuencials.add(this.parametrofactusecuencialAux);				
					}
					*/
				}
				
				this.inicializarActualizarBindingTablaParametroFactuSecuencial(false);
				
				this.jTableDatosParametroFactuSecuencial.setRowSelectionInterval(this.getIndiceNuevoParametroFactuSecuencial(), this.getIndiceNuevoParametroFactuSecuencial());
				
				int iLastRow =  this.jTableDatosParametroFactuSecuencial.getRowCount () - 1;
				Rectangle rectangle = this.jTableDatosParametroFactuSecuencial.getCellRect(iLastRow, 0, true);
				
				this.jTableDatosParametroFactuSecuencial.scrollRectToVisible(rectangle);
				
				//FILA TOTALES
				if(this.conTotales) {
					this.crearFilaTotales();
					
					this.inicializarActualizarBindingTablaParametroFactuSecuencial(false);
				}
			} else {
				throw new Exception("DEBE ESTAR SELECCIONADO 1 REGISTRO");
			}
			
		} catch(Exception e) {			
			FuncionesSwing.manageException(this, e,logger,ParametroFactuSecuencialConstantesFunciones.CLASSNAME);
		
		} finally {
			this.estaModoNuevo=false;
			this.estaModoDuplicar=false;
		}
	}
	
	public void jButtonCopiarParametroFactuSecuencialActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			Boolean conSeleccionarFilaTabla=false;
			Integer iNumRowsSeleccionados=0;
			int[] intSelectedRows =null;
			int intSelectedRow =0;
			
			this.estaModoCopiar=true;
			
			ArrayList<ParametroFactuSecuencial> parametrofactusecuencialsSeleccionados=new ArrayList<ParametroFactuSecuencial>();									
		
			ParametroFactuSecuencial parametrofactusecuencialOrigen=new ParametroFactuSecuencial();
			ParametroFactuSecuencial parametrofactusecuencialDestino=new ParametroFactuSecuencial();
				
			parametrofactusecuencialsSeleccionados=this.getParametroFactuSecuencialsSeleccionados(false);
			
			if(conSeleccionarFilaTabla) {
				iNumRowsSeleccionados=this.jTableDatosParametroFactuSecuencial.getSelectedRows().length;	
			}
			
			if(iNumRowsSeleccionados.equals(2) || parametrofactusecuencialsSeleccionados.size()==2) {
				if(conSeleccionarFilaTabla) {
					intSelectedRows =this.jTableDatosParametroFactuSecuencial.getSelectedRows();
					intSelectedRow = intSelectedRows[0];	
									
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrofactusecuencialOrigen =(ParametroFactuSecuencial) this.parametrofactusecuencialLogic.getParametroFactuSecuencials().toArray()[this.jTableDatosParametroFactuSecuencial.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						parametrofactusecuencialOrigen =(ParametroFactuSecuencial) this.parametrofactusecuencials.toArray()[this.jTableDatosParametroFactuSecuencial.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					intSelectedRow = intSelectedRows[1];
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrofactusecuencialDestino =(ParametroFactuSecuencial) this.parametrofactusecuencialLogic.getParametroFactuSecuencials().toArray()[this.jTableDatosParametroFactuSecuencial.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						parametrofactusecuencialDestino =(ParametroFactuSecuencial) this.parametrofactusecuencials.toArray()[this.jTableDatosParametroFactuSecuencial.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				}
				
				parametrofactusecuencialOrigen =parametrofactusecuencialsSeleccionados.get(0);
				parametrofactusecuencialDestino =parametrofactusecuencialsSeleccionados.get(1);
				
				this.setCopiarVariablesObjetosParametroFactuSecuencial(parametrofactusecuencialOrigen,parametrofactusecuencialDestino,true,false);
				
				parametrofactusecuencialDestino.setsType("DUPLICADO");
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					actualizarLista(parametrofactusecuencialDestino,parametrofactusecuencialLogic.getParametroFactuSecuencials());					
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(parametrofactusecuencialDestino,parametrofactusecuencials);
				}
				//ARCHITECTURE
				
				this.inicializarActualizarBindingTablaParametroFactuSecuencial(false);
				
				//this.jTableDatosParametroFactuSecuencial.setRowSelectionInterval(this.getIndiceNuevoParametroFactuSecuencial(), this.getIndiceNuevoParametroFactuSecuencial());
				
				int iLastRow =  this.jTableDatosParametroFactuSecuencial.getRowCount () - 1;
				Rectangle rectangle = this.jTableDatosParametroFactuSecuencial.getCellRect(iLastRow, 0, true);
				
				this.jTableDatosParametroFactuSecuencial.scrollRectToVisible(rectangle);
				
				//FILA TOTALES
				if(this.conTotales) {
					//this.crearFilaTotales();
					
					this.inicializarActualizarBindingTablaParametroFactuSecuencial(false);
				}
			} else {
				throw new Exception("DEBEN ESTAR SELECCIONADOS 2 REGISTROS");
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroFactuSecuencialConstantesFunciones.CLASSNAME);
		
		}  finally {
			this.estaModoCopiar=false;
		}
	}
	
	public void jButtonVerFormParametroFactuSecuencialActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			if(this.jInternalFrameDetalleFormParametroFactuSecuencial==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			this.jInternalFrameDetalleFormParametroFactuSecuencial.setSelected(true);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroFactuSecuencialConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonMostrarOcultarParametroFactuSecuencialActionPerformed(ActionEvent evt) throws Exception {   
		try {
			Boolean isVisible=this.jPanelParametrosReportesParametroFactuSecuencial.isVisible();
			
			//BYDAN_BUSQUEDAS
			
			this.jTabbedPaneBusquedasParametroFactuSecuencial.setVisible(!isVisible);			
			
			
			this.jPanelParametrosReportesParametroFactuSecuencial.setVisible(!isVisible);
			this.jPanelPaginacionParametroFactuSecuencial.setVisible(!isVisible);
			this.jPanelAccionesParametroFactuSecuencial.setVisible(!isVisible);
							
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroFactuSecuencialConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarParametroFactuSecuencialActionPerformed(ActionEvent evt) throws Exception {   
		try {
			this.closingInternalFrameParametroFactuSecuencial();
			
			//if(this.jInternalFrameParent==null) {
				//this.dispose();
			/*} else {
				this.setVisible(false);
	        	this.setSelected(false);	
			}*/			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroFactuSecuencialConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarReporteDinamicoParametroFactuSecuencialActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.cerrarFrameReporteDinamicoParametroFactuSecuencial();
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroFactuSecuencialConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarImportacionParametroFactuSecuencialActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.cerrarFrameImportacionParametroFactuSecuencial();
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroFactuSecuencialConstantesFunciones.CLASSNAME);
		}
	}
	
	
	public void jButtonAbrirOrderByParametroFactuSecuencialActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			
			this.abrirInicializarFrameOrderByParametroFactuSecuencial();
			
			this.abrirFrameOrderByParametroFactuSecuencial();
			
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroFactuSecuencialConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarOrderByParametroFactuSecuencialActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.cerrarFrameOrderByParametroFactuSecuencial();
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroFactuSecuencialConstantesFunciones.CLASSNAME);
		}
	}
	
	public void abrirFrameDetalleParametroFactuSecuencial(Boolean esRelaciones) throws Exception {	    	        
	    try {
			//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false
			//this.jDesktopPane.add(jInternalFrameDetalleFormParametroFactuSecuencial);
			
			if(!esRelaciones) {
				if(this.jInternalFrameDetalleFormParametroFactuSecuencial.isMaximum()) {
					this.jInternalFrameDetalleFormParametroFactuSecuencial.setMaximum(false);
				}								
				
	    		this.jInternalFrameDetalleFormParametroFactuSecuencial.setSize(this.jInternalFrameDetalleFormParametroFactuSecuencial.iWidthFormulario,this.jInternalFrameDetalleFormParametroFactuSecuencial.iHeightFormulario);
	    	} else {
				if(this.iWidthScroll<this.jInternalFrameDetalleFormParametroFactuSecuencial.iWidthFormularioMaximo) {
	    			this.jInternalFrameDetalleFormParametroFactuSecuencial.setSize(this.iWidthScroll,this.iHeightScroll);
				} else {
					if(!this.jInternalFrameDetalleFormParametroFactuSecuencial.isMaximum()) {
						this.jInternalFrameDetalleFormParametroFactuSecuencial.setMaximum(true);
					}
				}
				
				if(this.jInternalFrameDetalleFormParametroFactuSecuencial.jContentPaneDetalleParametroFactuSecuencial.getWidth() > this.getWidth()) {
					this.jInternalFrameDetalleFormParametroFactuSecuencial.jTabbedPaneRelacionesParametroFactuSecuencial.setMinimumSize(new Dimension(this.jInternalFrameDetalleFormParametroFactuSecuencial.jContentPaneDetalleParametroFactuSecuencial.getWidth(),ParametroFactuSecuencialConstantesFunciones.ALTO_TABPANE_RELACIONES));
					this.jInternalFrameDetalleFormParametroFactuSecuencial.jTabbedPaneRelacionesParametroFactuSecuencial.setMaximumSize(new Dimension(this.jInternalFrameDetalleFormParametroFactuSecuencial.jContentPaneDetalleParametroFactuSecuencial.getWidth(),ParametroFactuSecuencialConstantesFunciones.ALTO_TABPANE_RELACIONES));
					this.jInternalFrameDetalleFormParametroFactuSecuencial.jTabbedPaneRelacionesParametroFactuSecuencial.setPreferredSize(new Dimension(this.jInternalFrameDetalleFormParametroFactuSecuencial.jContentPaneDetalleParametroFactuSecuencial.getWidth(),ParametroFactuSecuencialConstantesFunciones.ALTO_TABPANE_RELACIONES));
					
					Dimension dimension=new Dimension(); 
					
					
					
				}
	    	}
			
		
	       	this.jInternalFrameDetalleFormParametroFactuSecuencial.setVisible(true);
	        this.jInternalFrameDetalleFormParametroFactuSecuencial.setSelected(true);
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,ParametroFactuSecuencialConstantesFunciones.CLASSNAME);
	    }
	}
	
	
	public void abrirInicializarFrameOrderByParametroFactuSecuencial() throws Exception {	    	        
	    try {
			if(this.jInternalFrameOrderByParametroFactuSecuencial==null) {
				
				if(!this.conCargarMinimo) {
					this.jInternalFrameOrderByParametroFactuSecuencial=new OrderByJInternalFrame(STIPO_TAMANIO_GENERAL,this.jButtonAbrirOrderByParametroFactuSecuencial,false,this);
				} else {
					this.jInternalFrameOrderByParametroFactuSecuencial=new OrderByJInternalFrame(STIPO_TAMANIO_GENERAL,this.jButtonAbrirOrderByParametroFactuSecuencial,true,this);
				}
				
				this.jDesktopPane.add(this.jInternalFrameOrderByParametroFactuSecuencial);
				this.jInternalFrameOrderByParametroFactuSecuencial.setVisible(false);
				this.jInternalFrameOrderByParametroFactuSecuencial.setSelected(false);
				
				this.jInternalFrameOrderByParametroFactuSecuencial.getjButtonCerrarOrderBy().addActionListener (new ButtonActionListener(this,"CerrarOrderByParametroFactuSecuencial"));
				
				this.inicializarActualizarBindingTablaOrderByParametroFactuSecuencial();
			}
		} catch (final Exception e) {
			
		}
	}
	
	
	
	public void abrirInicializarFrameImportacionParametroFactuSecuencial() throws Exception {	    	        
	    try {
			if(this.jInternalFrameImportacionParametroFactuSecuencial==null) {
				
				this.jInternalFrameImportacionParametroFactuSecuencial=new ImportacionJInternalFrame(ParametroFactuSecuencialConstantesFunciones.SCLASSWEBTITULO,this);			
				
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameImportacionParametroFactuSecuencial);							
				
				this.jDesktopPane.add(this.jInternalFrameImportacionParametroFactuSecuencial);
				this.jInternalFrameImportacionParametroFactuSecuencial.setVisible(false);
				this.jInternalFrameImportacionParametroFactuSecuencial.setSelected(false);


				this.jInternalFrameImportacionParametroFactuSecuencial.getjButtonCerrarImportacion().addActionListener (new ButtonActionListener(this,"CerrarImportacionParametroFactuSecuencial"));
				this.jInternalFrameImportacionParametroFactuSecuencial.getjButtonGenerarImportacion().addActionListener (new ButtonActionListener(this,"GenerarImportacionParametroFactuSecuencial"));
				this.jInternalFrameImportacionParametroFactuSecuencial.getjButtonAbrirImportacion().addActionListener (new ButtonActionListener(this,"AbrirImportacionParametroFactuSecuencial"));


			}
		} catch (final Exception e) {
			
		}
	}		
	
	
	
	public void abrirInicializarFrameReporteDinamicoParametroFactuSecuencial() throws Exception {	    	        
	    try {
			
			if(this.jInternalFrameReporteDinamicoParametroFactuSecuencial==null) {
				this.jInternalFrameReporteDinamicoParametroFactuSecuencial=new ReporteDinamicoJInternalFrame(ParametroFactuSecuencialConstantesFunciones.SCLASSWEBTITULO,this);	
				
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameReporteDinamicoParametroFactuSecuencial);	
	
	
				this.jDesktopPane.add(this.jInternalFrameReporteDinamicoParametroFactuSecuencial);
				this.jInternalFrameReporteDinamicoParametroFactuSecuencial.setVisible(false);
				this.jInternalFrameReporteDinamicoParametroFactuSecuencial.setSelected(false);
	
	
	
				this.jInternalFrameReporteDinamicoParametroFactuSecuencial.getjButtonCerrarReporteDinamico().addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoParametroFactuSecuencial"));
				this.jInternalFrameReporteDinamicoParametroFactuSecuencial.getjButtonGenerarReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoParametroFactuSecuencial"));
				this.jInternalFrameReporteDinamicoParametroFactuSecuencial.getjButtonGenerarExcelReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoParametroFactuSecuencial"));
	
				this.inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualParametroFactuSecuencial();
			}

		} catch (final Exception e) {
			
		}
	}	
	
	
	
		
					
	public void cerrarFrameDetalleParametroFactuSecuencial() throws Exception {	    	        
	    try {
			//this.jDesktopPane.add(jInternalFrameDetalleFormParametroFactuSecuencial);
			
	       	this.jInternalFrameDetalleFormParametroFactuSecuencial.setVisible(false);
	        this.jInternalFrameDetalleFormParametroFactuSecuencial.setSelected(false);
			
			//this.jInternalFrameDetalleFormParametroFactuSecuencial.dispose();
			//this.jInternalFrameDetalleFormParametroFactuSecuencial=null;
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,ParametroFactuSecuencialConstantesFunciones.CLASSNAME);
	    }
	}
	
	
	public void abrirFrameReporteDinamicoParametroFactuSecuencial() throws Exception {	    	        
	    try {
			
			this.jInternalFrameReporteDinamicoParametroFactuSecuencial.setVisible(true);
	        this.jInternalFrameReporteDinamicoParametroFactuSecuencial.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,ParametroFactuSecuencialConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void abrirFrameImportacionParametroFactuSecuencial() throws Exception {	    	        		
	    try {			
			this.jInternalFrameImportacionParametroFactuSecuencial.setVisible(true);
	        this.jInternalFrameImportacionParametroFactuSecuencial.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,ParametroFactuSecuencialConstantesFunciones.CLASSNAME);
	    }		
	}	
	
	
	
	
	
	public void abrirFrameOrderByParametroFactuSecuencial() throws Exception {	    	        		
	    try {
			this.jInternalFrameOrderByParametroFactuSecuencial.setVisible(true);
	        this.jInternalFrameOrderByParametroFactuSecuencial.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,ParametroFactuSecuencialConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void cerrarFrameOrderByParametroFactuSecuencial() throws Exception {	    	        		
	    try {			
			this.jInternalFrameOrderByParametroFactuSecuencial.setVisible(false);
	        this.jInternalFrameOrderByParametroFactuSecuencial.setSelected(false);			
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,ParametroFactuSecuencialConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void cerrarFrameReporteDinamicoParametroFactuSecuencial() throws Exception {			
	    try {
			this.jInternalFrameReporteDinamicoParametroFactuSecuencial.setVisible(false);
	        this.jInternalFrameReporteDinamicoParametroFactuSecuencial.setSelected(false);			
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,ParametroFactuSecuencialConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void cerrarFrameImportacionParametroFactuSecuencial() throws Exception {	    	        		
	    try {
			this.jInternalFrameImportacionParametroFactuSecuencial.setVisible(false);
	        this.jInternalFrameImportacionParametroFactuSecuencial.setSelected(false);
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,ParametroFactuSecuencialConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	
	public void jButtonModificarParametroFactuSecuencialActionPerformed(ActionEvent evt) throws Exception {   
		try {
			this.modificarParametroFactuSecuencial(evt,-1,false);
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroFactuSecuencialConstantesFunciones.CLASSNAME);
		}
	}
	
	public void modificarParametroFactuSecuencial(ActionEvent evt,int rowIndex,Boolean esRelaciones) throws Exception {   
		try {
			int intSelectedRow = 0;	
			
			if(rowIndex>=0) {
				intSelectedRow=rowIndex;
			} else {
				intSelectedRow = this.jTableDatosParametroFactuSecuencial.getSelectedRow();
			}
			
			this.habilitarDeshabilitarControlesParametroFactuSecuencial(true);
			//this.isEsNuevoParametroFactuSecuencial=false;
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactusecuencial =(ParametroFactuSecuencial) this.parametrofactusecuencialLogic.getParametroFactuSecuencials().toArray()[this.jTableDatosParametroFactuSecuencial.convertRowIndexToModel(intSelectedRow)];
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.parametrofactusecuencial =(ParametroFactuSecuencial) this.parametrofactusecuencials.toArray()[this.jTableDatosParametroFactuSecuencial.convertRowIndexToModel(intSelectedRow)];
			}
			//ARCHITECTURE
			
			this.actualizarEstadoCeldasBotonesParametroFactuSecuencial("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesParametroFactuSecuencial(false) ;
			
			if(parametrofactusecuencialSessionBean.getConGuardarRelaciones()) {
			
			}
			
			if(ParametroFactuSecuencialJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetalleParametroFactuSecuencial(esRelaciones);
			}
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualParametroFactuSecuencial(false) ;
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroFactuSecuencialConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarFilaTablaParametroFactuSecuencialActual() { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL
			Integer intSelectedRow = this.jTableDatosParametroFactuSecuencial.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactusecuencial =(ParametroFactuSecuencial) this.parametrofactusecuencialLogic.getParametroFactuSecuencials().toArray()[this.jTableDatosParametroFactuSecuencial.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.parametrofactusecuencial =(ParametroFactuSecuencial) this.parametrofactusecuencials.toArray()[this.jTableDatosParametroFactuSecuencial.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroFactuSecuencialConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void seleccionarParametroFactuSecuencial(ActionEvent evt,int rowIndex) throws Exception {   
		try {
			
			if(this.jInternalFrameDetalleFormParametroFactuSecuencial==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			int intSelectedRow = 0;	
			
			if(rowIndex>=0) {
				intSelectedRow=rowIndex;
			} else {
				intSelectedRow = this.jTableDatosParametroFactuSecuencial.getSelectedRow();
			}
			
			//this.habilitarDeshabilitarControlesParametroFactuSecuencial(true);
			//this.isEsNuevoParametroFactuSecuencial=false;
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactusecuencial =(ParametroFactuSecuencial) this.parametrofactusecuencialLogic.getParametroFactuSecuencials().toArray()[this.jTableDatosParametroFactuSecuencial.convertRowIndexToModel(intSelectedRow)];
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.parametrofactusecuencial =(ParametroFactuSecuencial) this.parametrofactusecuencials.toArray()[this.jTableDatosParametroFactuSecuencial.convertRowIndexToModel(intSelectedRow)];
			}
			//ARCHITECTURE
			
			this.jInternalFrameParent.setIdCombosCodigoDesdeBusquedaForeignKey(this.parametrofactusecuencial.getId(),this.sTipoBusqueda);
			
			this.dispose();
			
			//this.actualizarEstadoCeldasBotonesParametroFactuSecuencial("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
			//NO FUNCIONA BINDINGS
			/*
			this.inicializarActualizarBindingBotonesParametroFactuSecuencial(false) ;
			
			if(ParametroFactuSecuencialJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetalleParametroFactuSecuencial(esRelaciones);
			}
			*/
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualParametroFactuSecuencial(false) ;
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroFactuSecuencialConstantesFunciones.CLASSNAME);
		}
	}		
	
	public void setIdCombosCodigoDesdeBusquedaForeignKey(Long id,String sType)throws Exception{
		
		try {
		} catch(Exception e) {
			throw e;
		}
	}
	
			
	
	public void recargarComboTablaTipoDocumentoGeneral(List<TipoDocumentoGeneral> tipodocumentogeneralsForeignKey)throws Exception{
		TableColumn tableColumnTipoDocumentoGeneral=this.jTableDatosParametroFactuSecuencial.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroFactuSecuencial,ParametroFactuSecuencialConstantesFunciones.LABEL_IDTIPODOCUMENTOGENERAL));
		TableCellEditor tableCellEditorTipoDocumentoGeneral =tableColumnTipoDocumentoGeneral.getCellEditor();

		TipoDocumentoGeneralTableCell tipodocumentogeneralTableCellFk=(TipoDocumentoGeneralTableCell)tableCellEditorTipoDocumentoGeneral;

		if(tipodocumentogeneralTableCellFk!=null) {
			tipodocumentogeneralTableCellFk.settipodocumentogeneralsForeignKey(tipodocumentogeneralsForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosParametroFactuSecuencial.getSelectedRow();

		//if(intSelectedRow<=0) {
			//tipodocumentogeneralTableCellFk.setRowActual(intSelectedRow);
			//tipodocumentogeneralTableCellFk.settipodocumentogeneralsForeignKeyActual(tipodocumentogeneralsForeignKey);
		//}


		if(tipodocumentogeneralTableCellFk!=null) {
			tipodocumentogeneralTableCellFk.RecargarTipoDocumentoGeneralsForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaBodega(List<Bodega> bodegasForeignKey)throws Exception{
		TableColumn tableColumnBodega=this.jTableDatosParametroFactuSecuencial.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroFactuSecuencial,ParametroFactuSecuencialConstantesFunciones.LABEL_IDBODEGA));
		TableCellEditor tableCellEditorBodega =tableColumnBodega.getCellEditor();

		BodegaTableCell bodegaTableCellFk=(BodegaTableCell)tableCellEditorBodega;

		if(bodegaTableCellFk!=null) {
			bodegaTableCellFk.setbodegasForeignKey(bodegasForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosParametroFactuSecuencial.getSelectedRow();

		//if(intSelectedRow<=0) {
			//bodegaTableCellFk.setRowActual(intSelectedRow);
			//bodegaTableCellFk.setbodegasForeignKeyActual(bodegasForeignKey);
		//}


		if(bodegaTableCellFk!=null) {
			bodegaTableCellFk.RecargarBodegasForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaTipoParamFactuPlazo(List<TipoParamFactuPlazo> tipoparamfactuplazosForeignKey)throws Exception{
		TableColumn tableColumnTipoParamFactuPlazo=this.jTableDatosParametroFactuSecuencial.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroFactuSecuencial,ParametroFactuSecuencialConstantesFunciones.LABEL_IDTIPOPARAMFACTUPLAZO));
		TableCellEditor tableCellEditorTipoParamFactuPlazo =tableColumnTipoParamFactuPlazo.getCellEditor();

		TipoParamFactuPlazoTableCell tipoparamfactuplazoTableCellFk=(TipoParamFactuPlazoTableCell)tableCellEditorTipoParamFactuPlazo;

		if(tipoparamfactuplazoTableCellFk!=null) {
			tipoparamfactuplazoTableCellFk.settipoparamfactuplazosForeignKey(tipoparamfactuplazosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosParametroFactuSecuencial.getSelectedRow();

		//if(intSelectedRow<=0) {
			//tipoparamfactuplazoTableCellFk.setRowActual(intSelectedRow);
			//tipoparamfactuplazoTableCellFk.settipoparamfactuplazosForeignKeyActual(tipoparamfactuplazosForeignKey);
		//}


		if(tipoparamfactuplazoTableCellFk!=null) {
			tipoparamfactuplazoTableCellFk.RecargarTipoParamFactuPlazosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaFormato(List<Formato> formatosForeignKey)throws Exception{
		TableColumn tableColumnFormato=this.jTableDatosParametroFactuSecuencial.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroFactuSecuencial,ParametroFactuSecuencialConstantesFunciones.LABEL_IDFORMATO));
		TableCellEditor tableCellEditorFormato =tableColumnFormato.getCellEditor();

		FormatoTableCell formatoTableCellFk=(FormatoTableCell)tableCellEditorFormato;

		if(formatoTableCellFk!=null) {
			formatoTableCellFk.setformatosForeignKey(formatosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosParametroFactuSecuencial.getSelectedRow();

		//if(intSelectedRow<=0) {
			//formatoTableCellFk.setRowActual(intSelectedRow);
			//formatoTableCellFk.setformatosForeignKeyActual(formatosForeignKey);
		//}


		if(formatoTableCellFk!=null) {
			formatoTableCellFk.RecargarFormatosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaBodegaTransferencia(List<Bodega> bodegatransferenciasForeignKey)throws Exception{
		TableColumn tableColumnBodegaTransferencia=this.jTableDatosParametroFactuSecuencial.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroFactuSecuencial,ParametroFactuSecuencialConstantesFunciones.LABEL_IDBODEGATRANSFERENCIA));
		TableCellEditor tableCellEditorBodegaTransferencia =tableColumnBodegaTransferencia.getCellEditor();

		BodegaTableCell bodegaTableCellFk=(BodegaTableCell)tableCellEditorBodegaTransferencia;

		if(bodegaTableCellFk!=null) {
			bodegaTableCellFk.setbodegasForeignKey(bodegatransferenciasForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosParametroFactuSecuencial.getSelectedRow();

		//if(intSelectedRow<=0) {
			//bodegaTableCellFk.setRowActual(intSelectedRow);
			//bodegaTableCellFk.setbodegasForeignKeyActual(bodegatransferenciasForeignKey);
		//}


		if(bodegaTableCellFk!=null) {
			bodegaTableCellFk.RecargarBodegasForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaTransaccionTransferencia(List<Transaccion> transacciontransferenciasForeignKey)throws Exception{
		TableColumn tableColumnTransaccionTransferencia=this.jTableDatosParametroFactuSecuencial.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroFactuSecuencial,ParametroFactuSecuencialConstantesFunciones.LABEL_IDTRANSACCIONTRANSFERENCIA));
		TableCellEditor tableCellEditorTransaccionTransferencia =tableColumnTransaccionTransferencia.getCellEditor();

		TransaccionTableCell transaccionTableCellFk=(TransaccionTableCell)tableCellEditorTransaccionTransferencia;

		if(transaccionTableCellFk!=null) {
			transaccionTableCellFk.settransaccionsForeignKey(transacciontransferenciasForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosParametroFactuSecuencial.getSelectedRow();

		//if(intSelectedRow<=0) {
			//transaccionTableCellFk.setRowActual(intSelectedRow);
			//transaccionTableCellFk.settransaccionsForeignKeyActual(transacciontransferenciasForeignKey);
		//}


		if(transaccionTableCellFk!=null) {
			transaccionTableCellFk.RecargarTransaccionsForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	
	public void jButtonActualizarParametroFactuSecuencialActionPerformed(ActionEvent evt) throws Exception {   
		try	{
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactusecuencialLogic.getNewConnexionToDeep("");
			}
			
			this.inicializarActualizarBindingParametrosReportesParametroFactuSecuencial(false);
			
			//if(!this.isEsNuevoParametroFactuSecuencial) {								
				int intSelectedRow = this.jTableDatosParametroFactuSecuencial.getSelectedRow();	
				
				//SE PIEDE INDICE SELECTED CON FILA TOTALES, ASEGURARSE QUE OBJETO ACTUAL ESTE EN FORMULARIO
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactusecuencial =(ParametroFactuSecuencial) this.parametrofactusecuencialLogic.getParametroFactuSecuencials().toArray()[this.jTableDatosParametroFactuSecuencial.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.parametrofactusecuencial =(ParametroFactuSecuencial) this.parametrofactusecuencials.toArray()[this.jTableDatosParametroFactuSecuencial.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
			//}
				
			if(ParametroFactuSecuencialJInternalFrame.ISBINDING_MANUAL_TABLA) {
				this.setVariablesFormularioToObjetoActualParametroFactuSecuencial(this.parametrofactusecuencial,true);
				this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuSecuencial(this.parametrofactusecuencial);
				
			}
			
			if(this.permiteMantenimiento(this.parametrofactusecuencial)) {	
				this.actualizar();
				
				if(!this.isGuardarCambiosEnLote && !this.parametrofactusecuencialSessionBean.getEsGuardarRelacionado()) {
					this.procesarBusqueda(sAccionBusqueda);
					
					this.isEsNuevoParametroFactuSecuencial=true;
					this.inicializarActualizarBindingTablaParametroFactuSecuencial(false);
					this.isEsNuevoParametroFactuSecuencial=false;
				
				} else {					
					
					//PARA RELACIONADO ACTUALIZAR FILA TOTALES
					this.isEsNuevoParametroFactuSecuencial=true;
					this.procesoActualizarFilaTotales(false,"MANTENIMIENTO");
					this.isEsNuevoParametroFactuSecuencial=false;
				}
						
								
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingBotonesParametroFactuSecuencial(false);
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualParametroFactuSecuencial(false);
				
				this.habilitarDeshabilitarControlesParametroFactuSecuencial(false);
			
												
				
				if(ParametroFactuSecuencialJInternalFrame.CON_DATOS_FRAME) {
					if(!this.isPostAccionSinCerrar) {
						this.cerrarFrameDetalleParametroFactuSecuencial();
					}
				}
				
				if(this.isPostAccionNuevo) {
					this.jButtonNuevoParametroFactuSecuencialActionPerformed(evt,parametrofactusecuencialSessionBean.getConGuardarRelaciones());
				} else {
					if(this.isPostAccionSinCerrar) {
						Integer intSelectedRowActual=this.getIndiceActualParametroFactuSecuencial(this.parametrofactusecuencial,intSelectedRow);
						
						if(intSelectedRow>-1) {
							this.jTableDatosParametroFactuSecuencial.setRowSelectionInterval(intSelectedRowActual, intSelectedRowActual);
							this.jButtonIdActionPerformed(evt,intSelectedRowActual,parametrofactusecuencialSessionBean.getConGuardarRelaciones(),false);
						}
					}
				}
				
				this.cancelar(false);
				
			} else {
				JOptionPane.showMessageDialog(this,"ESTE REGISTRO NO PUEDE ACTUALIZARSE","EDITAR",JOptionPane.ERROR_MESSAGE);
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactusecuencialLogic.commitNewConnexionToDeep();
			}
			
			
			if(this.jInternalFrameParent!=null) { //&& this.isEsMantenimientoRelacionado) {
				Boolean esUsoDesdeHijoLocal=true;
				String sTipo="Formulario";
				Boolean conIrServidorAplicacionParent=false;
				Long id=this.parametrofactusecuencial.getId();
				ArrayList<String> arrClasses=new ArrayList<String>();
				
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();
				
				generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
				generalEntityParameterGeneral.setsDominio("Formulario");
				generalEntityParameterGeneral.setsDominioTipo(ParametroFactuSecuencial.class.getName());
				
				this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",ParametroFactuSecuencial.class.getName(),sTipo,"FORMULARIO",esControlTabla,conIrServidorAplicacionParent,
					id,this, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.FORM,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
					evt,generalEntityParameterGeneral,this);
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactusecuencialLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,ParametroFactuSecuencialConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactusecuencialLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonEliminarParametroFactuSecuencialActionPerformed(ActionEvent evt) throws Exception {   
		try	{
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactusecuencialLogic.getNewConnexionToDeep("");
			}
			
			int intSelectedRow = this.jTableDatosParametroFactuSecuencial.getSelectedRow();	       
							
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactusecuencial =(ParametroFactuSecuencial) this.parametrofactusecuencialLogic.getParametroFactuSecuencials().toArray()[this.jTableDatosParametroFactuSecuencial.convertRowIndexToModel(intSelectedRow)];
				this.parametrofactusecuencial.setIsDeleted(true);
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.parametrofactusecuencial =(ParametroFactuSecuencial) this.parametrofactusecuencials.toArray()[this.jTableDatosParametroFactuSecuencial.convertRowIndexToModel(intSelectedRow)];
				this.parametrofactusecuencial.setIsDeleted(true);
			}
			//ARCHITECTURE
			
			if(this.permiteMantenimiento(this.parametrofactusecuencial)) {
				this.eliminar();
				
				if(!this.isGuardarCambiosEnLote && !this.parametrofactusecuencialSessionBean.getEsGuardarRelacionado()) {
					this.procesarBusqueda(sAccionBusqueda);
				}
				
				((ParametroFactuSecuencialModel) this.jTableDatosParametroFactuSecuencial.getModel()).fireTableRowsDeleted(intSelectedRow,intSelectedRow);
				
				this.isEsNuevoParametroFactuSecuencial=true;
				this.inicializarActualizarBindingTablaParametroFactuSecuencial(false);
				this.isEsNuevoParametroFactuSecuencial=false;									
					
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingBotonesParametroFactuSecuencial(false);
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualParametroFactuSecuencial(false);
				
				this.habilitarDeshabilitarControlesParametroFactuSecuencial(false);
				
				
				
				if(ParametroFactuSecuencialJInternalFrame.CON_DATOS_FRAME) {
					this.cerrarFrameDetalleParametroFactuSecuencial();
				}
			} else {
				JOptionPane.showMessageDialog(this,"ESTE REGISTRO NO PUEDE ACTUALIZARSE","EDITAR",JOptionPane.ERROR_MESSAGE);
			}	
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactusecuencialLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactusecuencialLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroFactuSecuencialConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactusecuencialLogic.closeNewConnexionToDeep();
			}
		}		
	}
		
	public void jButtonCancelarParametroFactuSecuencialActionPerformed(ActionEvent evt) throws Exception {                                         	   	       
	  	try {
			if(jTableDatosParametroFactuSecuencial.getRowCount()>=1) {
				jTableDatosParametroFactuSecuencial.removeRowSelectionInterval(0, jTableDatosParametroFactuSecuencial.getRowCount()-1);						
			}
						
			this.invalidValues=new InvalidValue[0];
			this.habilitarDeshabilitarControlesParametroFactuSecuencial(false);
			this.cancelar(true);			
			this.inicializarActualizarBindingTablaParametroFactuSecuencial(false);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesParametroFactuSecuencial(false) ;
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualParametroFactuSecuencial(false) ;
			
			this.isEsNuevoParametroFactuSecuencial=false;
			
			if(ParametroFactuSecuencialJInternalFrame.CON_DATOS_FRAME) {
				this.cerrarFrameDetalleParametroFactuSecuencial();
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroFactuSecuencialConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonGuardarCambiosParametroFactuSecuencialActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactusecuencialLogic.getNewConnexionToDeep("");
			}
			
			//this.estaModoGuardarCambios=true;
			
	    	this.guardarCambios();
			
			if(!this.isErrorGuardar) {
				this.procesarBusqueda(this.sAccionBusqueda);
				
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingParametroFactuSecuencial(false);
				
				//SI ES MANUAL
				if(ParametroFactuSecuencialJInternalFrame.ISBINDING_MANUAL) {				
					//this.inicializarActualizarBindingManualParametroFactuSecuencial();				
				}
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactusecuencialLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactusecuencialLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroFactuSecuencialConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactusecuencialLogic.closeNewConnexionToDeep();
			}
			
			//this.estaModoGuardarCambios=false;
		}
	}
	
	public void jButtonNuevoGuardarCambiosParametroFactuSecuencialActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			
			this.estaModoNuevo=true;
			this.estaModoNuevoGuardarCambios=true;
			
			//LO HACE NUEVOPREPARAR
			//this.iIdNuevoParametroFactuSecuencial--;			
			//ParametroFactuSecuencial parametrofactusecuencialAux= new ParametroFactuSecuencial();			
			//parametrofactusecuencialAux.setId(this.iIdNuevoParametroFactuSecuencial);
			
			if(this.jInternalFrameDetalleFormParametroFactuSecuencial==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			this.aumentarTamanioFilaNuevaTablaParametroFactuSecuencial();
			
			if(this.conTotales) {
				this.quitarFilaTotales();
			}
			
			this.nuevoPreparar(true);
			
			this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuSecuencial(this.parametrofactusecuencial);
			
			this.parametrofactusecuencial.setsType("NUEVO_GUARDAR_CAMBIOS");
			
			//LO HACE NUEVOPREPARAR
			/*
			if(Constantes.ISUSAEJBLOGICLAYER) {				
				this.parametrofactusecuencialLogic.getParametroFactuSecuencials().add(this.parametrofactusecuencialAux);
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				this.parametrofactusecuencials.add(this.parametrofactusecuencialAux);				
			}
			*/
			
			this.inicializarActualizarBindingTablaParametroFactuSecuencial(false);
			
			this.jTableDatosParametroFactuSecuencial.setRowSelectionInterval(this.getIndiceNuevoParametroFactuSecuencial(), this.getIndiceNuevoParametroFactuSecuencial());
			
			int iLastRow =  this.jTableDatosParametroFactuSecuencial.getRowCount () - 1;
			Rectangle rectangle = this.jTableDatosParametroFactuSecuencial.getCellRect(iLastRow, 0, true);
			
			this.jTableDatosParametroFactuSecuencial.scrollRectToVisible(rectangle);
			
			//FILA TOTALES
			if(this.conTotales) {
				this.crearFilaTotales();
				
				this.inicializarActualizarBindingTablaParametroFactuSecuencial(false);
			}

		} catch(Exception e) {									
			FuncionesSwing.manageException(this, e,logger,ParametroFactuSecuencialConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoNuevo=false;
			this.estaModoNuevoGuardarCambios=false;
		}
	}		
	
	public void jButtonRecargarInformacionParametroFactuSecuencialActionPerformed(ActionEvent evt) throws Exception {    		
		try {
			this.iNumeroPaginacionPagina=0;
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactusecuencialLogic.getNewConnexionToDeep("");
			}
			
			this.inicializarActualizarBindingParametroFactuSecuencial(false,false);
			
	    	this.recargarInformacion();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingParametroFactuSecuencial(false);
			
			//SI ES MANUAL
			if(ParametroFactuSecuencialJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualParametroFactuSecuencial();
			}
			
			//this.abrirFrameTreeParametroFactuSecuencial();
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactusecuencialLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactusecuencialLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,ParametroFactuSecuencialConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactusecuencialLogic.closeNewConnexionToDeep();
			}
		}	
	}
	
	
	public void jButtonGenerarImportacionParametroFactuSecuencialActionPerformed(ActionEvent evt) throws Exception {    				
		BufferedReader bufferedReader = null;
		String sXmlStringFile="";
		String sPath="";
		this.arrDatoGeneralMinimos= new  ArrayList<DatoGeneralMinimo>();
		DatoGeneralMinimo datoGeneralMinimo=new DatoGeneralMinimo();
		String sLine="";
		
		try {			
			if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE PROCESAR IMPORTACION DE Parametro Secuencial S ?", "MANTENIMIENTO DE Parametro Secuencial ", JOptionPane.OK_CANCEL_OPTION) == 0) {
				bufferedReader = new BufferedReader(new FileReader(this.jInternalFrameImportacionParametroFactuSecuencial.getFileImportacion().getAbsolutePath()));
								
				while ((sLine = bufferedReader.readLine()) != null) {
					datoGeneralMinimo=new DatoGeneralMinimo();
					datoGeneralMinimo.setsDescripcion(sLine);
					
					this.arrDatoGeneralMinimos.add(datoGeneralMinimo);
				}
				
				this.actualizarParametrosGeneralParametroFactuSecuencial();
						
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {						
					this.parametrofactusecuencialReturnGeneral=parametrofactusecuencialLogic.procesarImportacionParametroFactuSecuencialsWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this.arrDatoGeneralMinimos,this.parametrofactusecuencialParameterGeneral);
						
				} else if(Constantes.ISUSAEJBREMOTE) {
						
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
						
				this.procesarParametroFactuSecuencialReturnGeneral();
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroFactuSecuencialConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedReader != null) {
				bufferedReader.close();
			}	
		}				
	}
	
	
	
	public void jButtonAbrirImportacionParametroFactuSecuencialActionPerformed(ActionEvent evt) throws Exception {    				
		BufferedWriter bufferedWriter = null;
		String sXmlStringFile="";
		String sPath="";
		
		try {
			int iReturnArchivo = this.jInternalFrameImportacionParametroFactuSecuencial.getjFileChooserImportacion().showOpenDialog(this);
 
            if (iReturnArchivo == JFileChooser.APPROVE_OPTION) {
            	this.jInternalFrameImportacionParametroFactuSecuencial.setFileImportacion(this.jInternalFrameImportacionParametroFactuSecuencial.getjFileChooserImportacion().getSelectedFile());
            	
				this.jInternalFrameImportacionParametroFactuSecuencial.getjTextFieldPathArchivoImportacion().setText(this.jInternalFrameImportacionParametroFactuSecuencial.getFileImportacion().getName());
				
				//System.out.println("ARCHIVO ESCOGIDO: "+this.fileImportacionParametroFactuSecuencial.getName());
				
            } else {
                //System.out.println("CANCELAR SELECCION");
				this.jInternalFrameImportacionParametroFactuSecuencial.getjTextFieldPathArchivoImportacion().setText("SELECCION CANCELADA");
            }			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroFactuSecuencialConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedWriter != null) {
				bufferedWriter.close();
			}	
		}		
	}
	
	
	public void jButtonGenerarReporteDinamicoParametroFactuSecuencialActionPerformed(ActionEvent evt) throws Exception {    		
		BufferedWriter bufferedWriter = null;
		String sXmlStringFile="";
		String sPath="";
		
		try {	
		
		ArrayList<ParametroFactuSecuencial> parametrofactusecuencialsSeleccionados=new ArrayList<ParametroFactuSecuencial>();		

		parametrofactusecuencialsSeleccionados=this.getParametroFactuSecuencialsSeleccionados(true);
		
		
		this.sTipoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoParametroFactuSecuencial.getjComboBoxTiposReportesDinamico().getSelectedItem()).getsCodigo();
		
		this.sTipoArchivoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoParametroFactuSecuencial.getjComboBoxTiposArchivosReportesDinamico().getSelectedItem()).getsCodigo();			
		
		
		this.sTipoArchivoReporte=this.sTipoArchivoReporteDinamico;
		
		//this.sTipoReporteExtra="Base";
		
			InputStream reportFile=null;
			InputStream imageFile=null;
			
			imageFile=AuxiliarImagenes.class.getResourceAsStream("LogoReporte.jpg");			
				
		
		
			reportFile = AuxiliarReportes.class.getResourceAsStream("ParametroFactuSecuencialBaseDesign.jrxml");	
			
			sPath=this.parametroGeneralUsuario.getpath_exportar()+"ParametroFactuSecuencialBaseDesign.jrxml";
			
			sXmlStringFile=Funciones2.getStringFromInputStream(reportFile);
						
			bufferedWriter = new BufferedWriter(new FileWriter(sPath));
			
			
			sXmlStringFile=this.actualizarReporteDinamico(sXmlStringFile);
			
			
			bufferedWriter.write(sXmlStringFile);
			
			bufferedWriter.close();
			
			try{JasperCompileManager.compileReportToFile(sPath);}catch(Exception e){e.printStackTrace();}
			
			this.actualizarVariablesTipoReporte(false,true,false,sPath);
			
			/*
			this.esReporteDinamico=true;
			this.sPathReporteDinamico=sPath.replace(".jrxml",".jasper");
			this.sTipoReporteExtra="";
			*/
			
			this.generarReporteParametroFactuSecuencials("Todos",parametrofactusecuencialsSeleccionados );

			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.parametrofactusecuencialSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				//DEBE APARECER EL REPORTE DIRECTAMENTE
				//JOptionPane.showMessageDialog(this,"GENERADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Parametro Secuencial ",JOptionPane.INFORMATION_MESSAGE);
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroFactuSecuencialConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedWriter != null) {
				bufferedWriter.close();
			}	
		}
	}		
	
	
	public String actualizarReporteDinamico(String sXmlStringFile) {				
		Reporte reporte=new Reporte();
		Integer iAnchoMaximoVertical=535;//781,782
		Integer iAnchoMaximoHorizontal=782;
		Integer iAnchoSum=0;
		Integer iAnchoColumna=0;
		
		Integer iAnchoMargenes=60;
		String sWidthGrafico="535";
		
		for(int index:this.jInternalFrameReporteDinamicoParametroFactuSecuencial.getjListColumnasSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoParametroFactuSecuencial.getjListColumnasSelectReporte().getModel().getElementAt(index);
			
			switch(reporte.getsCodigo()) {
				
				case ParametroFactuSecuencialConstantesFunciones.LABEL_IDEMPRESA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Empresa_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Empresa_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Empresa_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Empresa_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroFactuSecuencialConstantesFunciones.LABEL_IDSUCURSAL:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Sucursal_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Sucursal_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Sucursal_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Sucursal_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroFactuSecuencialConstantesFunciones.LABEL_IDTIPODOCUMENTOGENERAL:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_TipoDocumentoGeneral_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_TipoDocumentoGeneral_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_TipoDocumentoGeneral_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_TipoDocumentoGeneral_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroFactuSecuencialConstantesFunciones.LABEL_SECUENCIAL:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_cuencial_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_cuencial_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_cuencial_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_cuencial_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroFactuSecuencialConstantesFunciones.LABEL_NUMERODIGITOS:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_meroDigitos_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_meroDigitos_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_meroDigitos_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_meroDigitos_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroFactuSecuencialConstantesFunciones.LABEL_NUMEROITEMS:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_meroItems_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_meroItems_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_meroItems_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_meroItems_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroFactuSecuencialConstantesFunciones.LABEL_NUMERODESCUENTO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_meroDescuento_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_meroDescuento_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_meroDescuento_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_meroDescuento_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroFactuSecuencialConstantesFunciones.LABEL_NUMEROADIICIONALES:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_meroAdiicionales_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_meroAdiicionales_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_meroAdiicionales_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_meroAdiicionales_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroFactuSecuencialConstantesFunciones.LABEL_NUMERODIGITOINICIO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_meroDigitoInicio_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_meroDigitoInicio_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_meroDigitoInicio_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_meroDigitoInicio_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroFactuSecuencialConstantesFunciones.LABEL_NUMERODIGITOFIN:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_meroDigitoFin_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_meroDigitoFin_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_meroDigitoFin_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_meroDigitoFin_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroFactuSecuencialConstantesFunciones.LABEL_NUMERODIASPLAZO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_meroDiasPlazo_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_meroDiasPlazo_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_meroDiasPlazo_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_meroDiasPlazo_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroFactuSecuencialConstantesFunciones.LABEL_CONDETALLE:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_nDetalle_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_nDetalle_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_nDetalle_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_nDetalle_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroFactuSecuencialConstantesFunciones.LABEL_CONLECTOR:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_nLector_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_nLector_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_nLector_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_nLector_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroFactuSecuencialConstantesFunciones.LABEL_IDBODEGA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Bodega_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Bodega_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Bodega_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Bodega_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroFactuSecuencialConstantesFunciones.LABEL_IDTIPOPARAMFACTUPLAZO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_TipoParamFactuPlazo_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_TipoParamFactuPlazo_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_TipoParamFactuPlazo_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_TipoParamFactuPlazo_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroFactuSecuencialConstantesFunciones.LABEL_IDFORMATO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Formato_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Formato_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Formato_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Formato_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroFactuSecuencialConstantesFunciones.LABEL_CONTRANSFERENCIA:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_nTransferencia_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_nTransferencia_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_nTransferencia_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_nTransferencia_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroFactuSecuencialConstantesFunciones.LABEL_IDBODEGATRANSFERENCIA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_BodegaTransferencia_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_BodegaTransferencia_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_BodegaTransferencia_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_BodegaTransferencia_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroFactuSecuencialConstantesFunciones.LABEL_IDTRANSACCIONTRANSFERENCIA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_TransaccionTransferencia_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_TransaccionTransferencia_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_TransaccionTransferencia_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_TransaccionTransferencia_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;
					
				default :
					break;
			}
		}
		
		iAnchoSum+=iAnchoMargenes;
		
		if(iAnchoSum>iAnchoMaximoVertical) {
			sXmlStringFile=sXmlStringFile.replace("595", "842");
			//sXmlStringFile=sXmlStringFile.replace("842", "595");
			sXmlStringFile=sXmlStringFile.replace("535", "782");
			sXmlStringFile=sXmlStringFile.replace("Portrait", "Landscape");			
			sWidthGrafico="782";
		
		} else {
			sXmlStringFile=sXmlStringFile.replace("842", "595");
			//sXmlStringFile=sXmlStringFile.replace("595", "842");
			sXmlStringFile=sXmlStringFile.replace("782", "535");
			sXmlStringFile=sXmlStringFile.replace("Landscape", "Portrait");
			sWidthGrafico="535";
		}
		
		if(this.jInternalFrameReporteDinamicoParametroFactuSecuencial.getjCheckBoxConGraficoDinamico().isSelected()) {
			sXmlStringFile=this.actualizarGraficoReporteDinamico(sXmlStringFile,sWidthGrafico);
		} else {
			sXmlStringFile=sXmlStringFile.replace("colancho_summary_colancho", "30");
		}
		
		return sXmlStringFile;
	}
	
	
	
	public String actualizarGraficoReporteDinamico(String sXmlStringFile,String sWidthGrafico) {		
		String strGrafico="";		
		String sTipo="NORMAL";
		String strCategorySeries="";
		String sNombreCampoCategoria="";
		String sNombreCampoCategoriaValor="";
		Reporte reporte=new Reporte();
		Reporte reporteCategoriaValor=new Reporte();
		Reporte reporteTipoGraficoReporte=new Reporte();
		Boolean existe=false;
		
		sXmlStringFile=sXmlStringFile.replace("colancho_summary_colancho", "280");
		
		//CATEGORIA GRAFICO				
		reporte=((Reporte)this.jInternalFrameReporteDinamicoParametroFactuSecuencial.getjComboBoxColumnaCategoriaGrafico().getSelectedItem());
				
		//TIPO GRAFICO REPORTE
		reporteTipoGraficoReporte=((Reporte)this.jInternalFrameReporteDinamicoParametroFactuSecuencial.getjComboBoxTiposGraficosReportesDinamico().getSelectedItem());
		
		String sTipoGraficoReporte=reporteTipoGraficoReporte.getsCodigo();
		
		switch(reporte.getsCodigo()) {
			
				case ParametroFactuSecuencialConstantesFunciones.LABEL_IDEMPRESA:
					sNombreCampoCategoria="id_empresa";
					break;

				case ParametroFactuSecuencialConstantesFunciones.LABEL_IDSUCURSAL:
					sNombreCampoCategoria="id_sucursal";
					break;

				case ParametroFactuSecuencialConstantesFunciones.LABEL_IDTIPODOCUMENTOGENERAL:
					sNombreCampoCategoria="id_tipo_documento_general";
					break;

				case ParametroFactuSecuencialConstantesFunciones.LABEL_SECUENCIAL:
					sNombreCampoCategoria="secuencial";
					break;

				case ParametroFactuSecuencialConstantesFunciones.LABEL_NUMERODIGITOS:
					sNombreCampoCategoria="numero_digitos";
					break;

				case ParametroFactuSecuencialConstantesFunciones.LABEL_NUMEROITEMS:
					sNombreCampoCategoria="numero_items";
					break;

				case ParametroFactuSecuencialConstantesFunciones.LABEL_NUMERODESCUENTO:
					sNombreCampoCategoria="numero_descuento";
					break;

				case ParametroFactuSecuencialConstantesFunciones.LABEL_NUMEROADIICIONALES:
					sNombreCampoCategoria="numero_adiicionales";
					break;

				case ParametroFactuSecuencialConstantesFunciones.LABEL_NUMERODIGITOINICIO:
					sNombreCampoCategoria="numero_digito_inicio";
					break;

				case ParametroFactuSecuencialConstantesFunciones.LABEL_NUMERODIGITOFIN:
					sNombreCampoCategoria="numero_digito_fin";
					break;

				case ParametroFactuSecuencialConstantesFunciones.LABEL_NUMERODIASPLAZO:
					sNombreCampoCategoria="numero_dias_plazo";
					break;

				case ParametroFactuSecuencialConstantesFunciones.LABEL_CONDETALLE:
					sNombreCampoCategoria="con_detalle";
					break;

				case ParametroFactuSecuencialConstantesFunciones.LABEL_CONLECTOR:
					sNombreCampoCategoria="con_lector";
					break;

				case ParametroFactuSecuencialConstantesFunciones.LABEL_IDBODEGA:
					sNombreCampoCategoria="id_bodega";
					break;

				case ParametroFactuSecuencialConstantesFunciones.LABEL_IDTIPOPARAMFACTUPLAZO:
					sNombreCampoCategoria="id_tipo_param_factu_plazo";
					break;

				case ParametroFactuSecuencialConstantesFunciones.LABEL_IDFORMATO:
					sNombreCampoCategoria="id_formato";
					break;

				case ParametroFactuSecuencialConstantesFunciones.LABEL_CONTRANSFERENCIA:
					sNombreCampoCategoria="con_transferencia";
					break;

				case ParametroFactuSecuencialConstantesFunciones.LABEL_IDBODEGATRANSFERENCIA:
					sNombreCampoCategoria="id_bodega_transferencia";
					break;

				case ParametroFactuSecuencialConstantesFunciones.LABEL_IDTRANSACCIONTRANSFERENCIA:
					sNombreCampoCategoria="id_transaccion_transferencia";
					break;
					
			default :
				break;
		}		
		//CATEGORIA GRAFICO
		
		//CATEGORIA VALOR				
		reporteCategoriaValor=((Reporte)this.jInternalFrameReporteDinamicoParametroFactuSecuencial.getjComboBoxColumnaCategoriaValor().getSelectedItem());
		
		switch(reporteCategoriaValor.getsCodigo()) {
			
				case ParametroFactuSecuencialConstantesFunciones.LABEL_IDEMPRESA:
					sNombreCampoCategoriaValor="id_empresa";
					break;

				case ParametroFactuSecuencialConstantesFunciones.LABEL_IDSUCURSAL:
					sNombreCampoCategoriaValor="id_sucursal";
					break;

				case ParametroFactuSecuencialConstantesFunciones.LABEL_IDTIPODOCUMENTOGENERAL:
					sNombreCampoCategoriaValor="id_tipo_documento_general";
					break;

				case ParametroFactuSecuencialConstantesFunciones.LABEL_SECUENCIAL:
					sNombreCampoCategoriaValor="secuencial";
					break;

				case ParametroFactuSecuencialConstantesFunciones.LABEL_NUMERODIGITOS:
					sNombreCampoCategoriaValor="numero_digitos";
					break;

				case ParametroFactuSecuencialConstantesFunciones.LABEL_NUMEROITEMS:
					sNombreCampoCategoriaValor="numero_items";
					break;

				case ParametroFactuSecuencialConstantesFunciones.LABEL_NUMERODESCUENTO:
					sNombreCampoCategoriaValor="numero_descuento";
					break;

				case ParametroFactuSecuencialConstantesFunciones.LABEL_NUMEROADIICIONALES:
					sNombreCampoCategoriaValor="numero_adiicionales";
					break;

				case ParametroFactuSecuencialConstantesFunciones.LABEL_NUMERODIGITOINICIO:
					sNombreCampoCategoriaValor="numero_digito_inicio";
					break;

				case ParametroFactuSecuencialConstantesFunciones.LABEL_NUMERODIGITOFIN:
					sNombreCampoCategoriaValor="numero_digito_fin";
					break;

				case ParametroFactuSecuencialConstantesFunciones.LABEL_NUMERODIASPLAZO:
					sNombreCampoCategoriaValor="numero_dias_plazo";
					break;

				case ParametroFactuSecuencialConstantesFunciones.LABEL_CONDETALLE:
					sNombreCampoCategoriaValor="con_detalle";
					break;

				case ParametroFactuSecuencialConstantesFunciones.LABEL_CONLECTOR:
					sNombreCampoCategoriaValor="con_lector";
					break;

				case ParametroFactuSecuencialConstantesFunciones.LABEL_IDBODEGA:
					sNombreCampoCategoriaValor="id_bodega";
					break;

				case ParametroFactuSecuencialConstantesFunciones.LABEL_IDTIPOPARAMFACTUPLAZO:
					sNombreCampoCategoriaValor="id_tipo_param_factu_plazo";
					break;

				case ParametroFactuSecuencialConstantesFunciones.LABEL_IDFORMATO:
					sNombreCampoCategoriaValor="id_formato";
					break;

				case ParametroFactuSecuencialConstantesFunciones.LABEL_CONTRANSFERENCIA:
					sNombreCampoCategoriaValor="con_transferencia";
					break;

				case ParametroFactuSecuencialConstantesFunciones.LABEL_IDBODEGATRANSFERENCIA:
					sNombreCampoCategoriaValor="id_bodega_transferencia";
					break;

				case ParametroFactuSecuencialConstantesFunciones.LABEL_IDTRANSACCIONTRANSFERENCIA:
					sNombreCampoCategoriaValor="id_transaccion_transferencia";
					break;
					
			default :
				break;
		}	
		//CATEGORIA VALOR
		
		//VALORES GRAFICO
		for(int index:this.jInternalFrameReporteDinamicoParametroFactuSecuencial.getjListColumnasValoresGrafico().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoParametroFactuSecuencial.getjListColumnasValoresGrafico().getModel().getElementAt(index);
			
			switch(reporte.getsCodigo()) {
				
				case ParametroFactuSecuencialConstantesFunciones.LABEL_IDEMPRESA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Empresa",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_empresa");
					break;

				case ParametroFactuSecuencialConstantesFunciones.LABEL_IDSUCURSAL:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Sucursal",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_sucursal");
					break;

				case ParametroFactuSecuencialConstantesFunciones.LABEL_IDTIPODOCUMENTOGENERAL:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"T. Documento General",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_tipo_documento_general");
					break;

				case ParametroFactuSecuencialConstantesFunciones.LABEL_SECUENCIAL:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Secuencial",sNombreCampoCategoria,sNombreCampoCategoriaValor,"secuencial");
					break;

				case ParametroFactuSecuencialConstantesFunciones.LABEL_NUMERODIGITOS:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"No Digitos",sNombreCampoCategoria,sNombreCampoCategoriaValor,"numero_digitos");
					break;

				case ParametroFactuSecuencialConstantesFunciones.LABEL_NUMEROITEMS:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"No Items",sNombreCampoCategoria,sNombreCampoCategoriaValor,"numero_items");
					break;

				case ParametroFactuSecuencialConstantesFunciones.LABEL_NUMERODESCUENTO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"No Descuento",sNombreCampoCategoria,sNombreCampoCategoriaValor,"numero_descuento");
					break;

				case ParametroFactuSecuencialConstantesFunciones.LABEL_NUMEROADIICIONALES:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"No Adiicionales",sNombreCampoCategoria,sNombreCampoCategoriaValor,"numero_adiicionales");
					break;

				case ParametroFactuSecuencialConstantesFunciones.LABEL_NUMERODIGITOINICIO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"No Digito Inicio",sNombreCampoCategoria,sNombreCampoCategoriaValor,"numero_digito_inicio");
					break;

				case ParametroFactuSecuencialConstantesFunciones.LABEL_NUMERODIGITOFIN:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"No Digito Fin",sNombreCampoCategoria,sNombreCampoCategoriaValor,"numero_digito_fin");
					break;

				case ParametroFactuSecuencialConstantesFunciones.LABEL_NUMERODIASPLAZO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"No Dias Plazo",sNombreCampoCategoria,sNombreCampoCategoriaValor,"numero_dias_plazo");
					break;

				case ParametroFactuSecuencialConstantesFunciones.LABEL_CONDETALLE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Detalle",sNombreCampoCategoria,sNombreCampoCategoriaValor,"con_detalle");
					break;

				case ParametroFactuSecuencialConstantesFunciones.LABEL_CONLECTOR:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Lector",sNombreCampoCategoria,sNombreCampoCategoriaValor,"con_lector");
					break;

				case ParametroFactuSecuencialConstantesFunciones.LABEL_IDBODEGA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Bodega Defecto",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_bodega");
					break;

				case ParametroFactuSecuencialConstantesFunciones.LABEL_IDTIPOPARAMFACTUPLAZO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"T. Parametro Plazo",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_tipo_param_factu_plazo");
					break;

				case ParametroFactuSecuencialConstantesFunciones.LABEL_IDFORMATO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Formato",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_formato");
					break;

				case ParametroFactuSecuencialConstantesFunciones.LABEL_CONTRANSFERENCIA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Transferencia",sNombreCampoCategoria,sNombreCampoCategoriaValor,"con_transferencia");
					break;

				case ParametroFactuSecuencialConstantesFunciones.LABEL_IDBODEGATRANSFERENCIA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Bodega Transferencia",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_bodega_transferencia");
					break;

				case ParametroFactuSecuencialConstantesFunciones.LABEL_IDTRANSACCIONTRANSFERENCIA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Transaccion Transferencia",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_transaccion_transferencia");
					break;
					
				default :
					break;
			}
		}
		//VALORES GRAFICO
		//if(sTipoGraficoReporte.equals("BARRAS") || sTipoGraficoReporte.equals("BARRAS_3D") || sTipoGraficoReporte.equals("BARRAS_XY") ||
		//   sTipoGraficoReporte.equals("PASTEL") || sTipoGraficoReporte.equals("PASTEL_3D") || sTipoGraficoReporte.equals("APILADO")) {
			
			existe=true;
			strGrafico=FuncionesReporte.getStringGraficoReporte(sTipoGraficoReporte,sWidthGrafico,strCategorySeries);			
		//}
		
		if(existe) {
			sXmlStringFile=sXmlStringFile.replace("<!--GRAFICO-->", strGrafico);
		}												
		
		return sXmlStringFile;
	}
	
	
	//@SuppressWarnings("deprecation")
	
	public void jButtonGenerarExcelReporteDinamicoParametroFactuSecuencialActionPerformed(ActionEvent evt) throws Exception {		
		ArrayList<ParametroFactuSecuencial> parametrofactusecuencialsSeleccionados=new ArrayList<ParametroFactuSecuencial>();		
		
		parametrofactusecuencialsSeleccionados=this.getParametroFactuSecuencialsSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"parametrofactusecuencial";//.xls";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		Boolean existeFilas=false;
		
		Workbook workbook = null;
		FileOutputStream fileOutputStream=null;
		Reporte reporte=new Reporte();
		
		try {
			
			if(sTipoArchivoReporte=="EXCEL2") {
				workbook = new HSSFWorkbook();
				sPath+=".xls";
			
			} else if(sTipoArchivoReporte=="EXCEL2_2") {
				workbook = new XSSFWorkbook();
				sPath+=".xlsx";			
			}
		
			Sheet sheet = workbook.createSheet("ParametroFactuSecuencials");
						
		    			
			Integer iRow=0;
			Integer iCell=0;
			
			Row row = sheet.createRow(iRow);
			Cell cell = row.createCell(iCell);
			//cell.setCellValue("Blahblah");
			
			for(int index:this.jInternalFrameReporteDinamicoParametroFactuSecuencial.getjListColumnasSelectReporte().getSelectedIndices()) {
				reporte=(Reporte)this.jInternalFrameReporteDinamicoParametroFactuSecuencial.getjListColumnasSelectReporte().getModel().getElementAt(index);
				
				switch(reporte.getsCodigo()) {
					
				case ParametroFactuSecuencialConstantesFunciones.LABEL_IDEMPRESA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroFactuSecuencialConstantesFunciones.LABEL_IDEMPRESA);
					iRow++;

					for(ParametroFactuSecuencial parametrofactusecuencial:parametrofactusecuencialsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrofactusecuencial.getempresa_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroFactuSecuencialConstantesFunciones.LABEL_IDSUCURSAL:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroFactuSecuencialConstantesFunciones.LABEL_IDSUCURSAL);
					iRow++;

					for(ParametroFactuSecuencial parametrofactusecuencial:parametrofactusecuencialsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrofactusecuencial.getsucursal_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroFactuSecuencialConstantesFunciones.LABEL_IDTIPODOCUMENTOGENERAL:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroFactuSecuencialConstantesFunciones.LABEL_IDTIPODOCUMENTOGENERAL);
					iRow++;

					for(ParametroFactuSecuencial parametrofactusecuencial:parametrofactusecuencialsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrofactusecuencial.gettipodocumentogeneral_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroFactuSecuencialConstantesFunciones.LABEL_SECUENCIAL:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroFactuSecuencialConstantesFunciones.LABEL_SECUENCIAL);
					iRow++;

					for(ParametroFactuSecuencial parametrofactusecuencial:parametrofactusecuencialsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrofactusecuencial.getsecuencial());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroFactuSecuencialConstantesFunciones.LABEL_NUMERODIGITOS:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroFactuSecuencialConstantesFunciones.LABEL_NUMERODIGITOS);
					iRow++;

					for(ParametroFactuSecuencial parametrofactusecuencial:parametrofactusecuencialsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrofactusecuencial.getnumero_digitos());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroFactuSecuencialConstantesFunciones.LABEL_NUMEROITEMS:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroFactuSecuencialConstantesFunciones.LABEL_NUMEROITEMS);
					iRow++;

					for(ParametroFactuSecuencial parametrofactusecuencial:parametrofactusecuencialsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrofactusecuencial.getnumero_items());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroFactuSecuencialConstantesFunciones.LABEL_NUMERODESCUENTO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroFactuSecuencialConstantesFunciones.LABEL_NUMERODESCUENTO);
					iRow++;

					for(ParametroFactuSecuencial parametrofactusecuencial:parametrofactusecuencialsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrofactusecuencial.getnumero_descuento());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroFactuSecuencialConstantesFunciones.LABEL_NUMEROADIICIONALES:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroFactuSecuencialConstantesFunciones.LABEL_NUMEROADIICIONALES);
					iRow++;

					for(ParametroFactuSecuencial parametrofactusecuencial:parametrofactusecuencialsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrofactusecuencial.getnumero_adiicionales());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroFactuSecuencialConstantesFunciones.LABEL_NUMERODIGITOINICIO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroFactuSecuencialConstantesFunciones.LABEL_NUMERODIGITOINICIO);
					iRow++;

					for(ParametroFactuSecuencial parametrofactusecuencial:parametrofactusecuencialsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrofactusecuencial.getnumero_digito_inicio());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroFactuSecuencialConstantesFunciones.LABEL_NUMERODIGITOFIN:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroFactuSecuencialConstantesFunciones.LABEL_NUMERODIGITOFIN);
					iRow++;

					for(ParametroFactuSecuencial parametrofactusecuencial:parametrofactusecuencialsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrofactusecuencial.getnumero_digito_fin());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroFactuSecuencialConstantesFunciones.LABEL_NUMERODIASPLAZO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroFactuSecuencialConstantesFunciones.LABEL_NUMERODIASPLAZO);
					iRow++;

					for(ParametroFactuSecuencial parametrofactusecuencial:parametrofactusecuencialsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrofactusecuencial.getnumero_dias_plazo());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroFactuSecuencialConstantesFunciones.LABEL_CONDETALLE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroFactuSecuencialConstantesFunciones.LABEL_CONDETALLE);
					iRow++;

					for(ParametroFactuSecuencial parametrofactusecuencial:parametrofactusecuencialsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrofactusecuencial.getcon_detalle());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroFactuSecuencialConstantesFunciones.LABEL_CONLECTOR:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroFactuSecuencialConstantesFunciones.LABEL_CONLECTOR);
					iRow++;

					for(ParametroFactuSecuencial parametrofactusecuencial:parametrofactusecuencialsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrofactusecuencial.getcon_lector());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroFactuSecuencialConstantesFunciones.LABEL_IDBODEGA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroFactuSecuencialConstantesFunciones.LABEL_IDBODEGA);
					iRow++;

					for(ParametroFactuSecuencial parametrofactusecuencial:parametrofactusecuencialsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrofactusecuencial.getbodega_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroFactuSecuencialConstantesFunciones.LABEL_IDTIPOPARAMFACTUPLAZO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroFactuSecuencialConstantesFunciones.LABEL_IDTIPOPARAMFACTUPLAZO);
					iRow++;

					for(ParametroFactuSecuencial parametrofactusecuencial:parametrofactusecuencialsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrofactusecuencial.gettipoparamfactuplazo_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroFactuSecuencialConstantesFunciones.LABEL_IDFORMATO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroFactuSecuencialConstantesFunciones.LABEL_IDFORMATO);
					iRow++;

					for(ParametroFactuSecuencial parametrofactusecuencial:parametrofactusecuencialsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrofactusecuencial.getformato_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroFactuSecuencialConstantesFunciones.LABEL_CONTRANSFERENCIA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroFactuSecuencialConstantesFunciones.LABEL_CONTRANSFERENCIA);
					iRow++;

					for(ParametroFactuSecuencial parametrofactusecuencial:parametrofactusecuencialsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrofactusecuencial.getcon_transferencia());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroFactuSecuencialConstantesFunciones.LABEL_IDBODEGATRANSFERENCIA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroFactuSecuencialConstantesFunciones.LABEL_IDBODEGATRANSFERENCIA);
					iRow++;

					for(ParametroFactuSecuencial parametrofactusecuencial:parametrofactusecuencialsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrofactusecuencial.getbodegatransferencia_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroFactuSecuencialConstantesFunciones.LABEL_IDTRANSACCIONTRANSFERENCIA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroFactuSecuencialConstantesFunciones.LABEL_IDTRANSACCIONTRANSFERENCIA);
					iRow++;

					for(ParametroFactuSecuencial parametrofactusecuencial:parametrofactusecuencialsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrofactusecuencial.gettransacciontransferencia_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;
					
					default :
						break;
				}
			}
			
			
			//if(conCabecera) {
			//	this.getFilaCabeceraExportarExcelParametroFactuSecuencial(row);				
			//	iRow++;
			//}				
			
			//for(ParametroFactuSecuencial parametrofactusecuencialAux:parametrofactusecuencialsSeleccionados) {
			//	row = sheet.createRow(iRow);
				
			//	this.getFilaDatosExportarExcelParametroFactuSecuencial(parametrofactusecuencialAux,row);
				
			//	iRow++;
			//}
			
			
			
			fileOutputStream = new FileOutputStream(new File(sPath));
		    
			workbook.write(fileOutputStream);
			
			//fileOutputStream.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.parametrofactusecuencialSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Parametro Secuencial ",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			
       		if (fileOutputStream != null) {
				fileOutputStream.close();
			}			
		}				
	}	
	
	
	
	
	public void buscarPorId(Long idActual) throws Exception {    		
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactusecuencialLogic.getNewConnexionToDeep("");
			}
			
			this.idActual=idActual;
			this.iNumeroPaginacionPagina=0;
			
			this.procesarBusqueda("PorId");
				    	
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingParametroFactuSecuencial(false);
			
			//SI ES MANUAL
			if(ParametroFactuSecuencialJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualParametroFactuSecuencial();
			}	
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactusecuencialLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactusecuencialLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger);
			
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactusecuencialLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonAnterioresParametroFactuSecuencialActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			//this.iNumeroPaginacion-=this.iNumeroPaginacion;
			/*
			if(this.iNumeroPaginacion<0) {
				this.iNumeroPaginacion=0;
			}
			*/
			//this.iNumeroPaginacionPagina=10;			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactusecuencialLogic.getNewConnexionToDeep("");
			}
			
			this.anteriores();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingParametroFactuSecuencial(false);
			
			//SI ES MANUAL
			if(ParametroFactuSecuencialJInternalFrame.ISBINDING_MANUAL) {
	    		//this.inicializarActualizarBindingManualParametroFactuSecuencial();
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactusecuencialLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactusecuencialLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,ParametroFactuSecuencialConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactusecuencialLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonSiguientesParametroFactuSecuencialActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			//this.iNumeroPaginacion+=this.iNumeroPaginacion;
			//this.iNumeroPaginacionPagina=10;			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactusecuencialLogic.getNewConnexionToDeep("");
			}
			
			this.siguientes();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingParametroFactuSecuencial(false);
			
			//SI ES MANUAL
			if(ParametroFactuSecuencialJInternalFrame.ISBINDING_MANUAL) {
	    		//this.inicializarActualizarBindingManualParametroFactuSecuencial();
			}		
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactusecuencialLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactusecuencialLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,ParametroFactuSecuencialConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactusecuencialLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void aumentarTamanioFilaNuevaTablaParametroFactuSecuencial() throws Exception {		
		Dimension dimensionMinimum=this.jTableDatosParametroFactuSecuencial.getMinimumSize();
		Dimension dimensionMaximum=this.jTableDatosParametroFactuSecuencial.getMaximumSize();
		Dimension dimensionPreferred=this.jTableDatosParametroFactuSecuencial.getPreferredSize();
	
		double iHeightConFilaNueva=dimensionPreferred.getHeight();
		
		iHeightConFilaNueva+=this.jTableDatosParametroFactuSecuencial.getRowHeight();
		
		dimensionMinimum.setSize(dimensionMinimum.getWidth(),iHeightConFilaNueva);
		dimensionMaximum.setSize(dimensionMaximum.getWidth(),iHeightConFilaNueva);
		dimensionPreferred.setSize(dimensionPreferred.getWidth(),iHeightConFilaNueva);
		
		this.jTableDatosParametroFactuSecuencial.setMinimumSize(dimensionMinimum);
		this.jTableDatosParametroFactuSecuencial.setMaximumSize(dimensionMaximum);
		this.jTableDatosParametroFactuSecuencial.setPreferredSize(dimensionPreferred);	
	}
	
	public void inicializarActualizarBindingParametroFactuSecuencial(Boolean esInicializar) throws Exception {
		this.inicializarActualizarBindingParametroFactuSecuencial(esInicializar,true);
	}
	
	public void inicializarActualizarBindingParametroFactuSecuencial(Boolean esInicializar,Boolean conTabla) throws Exception {		
		if(conTabla) {
			this.inicializarActualizarBindingTablaParametroFactuSecuencial(esInicializar);
		}
		
		this.inicializarActualizarBindingBotonesParametroFactuSecuencial(esInicializar);
		
		//FUNCIONALIDAD_RELACIONADO
		if(!this.parametrofactusecuencialSessionBean.getEsGuardarRelacionado()) {
			try{this.inicializarActualizarBindingBusquedasParametroFactuSecuencial(esInicializar);}catch(Exception e){e.printStackTrace();}
			
			//this.inicializarActualizarBindingtiposArchivosReportesAccionesParametroFactuSecuencial(esInicializar) ;
			
			this.inicializarActualizarBindingParametrosReportesParametroFactuSecuencial(esInicializar) ;
		}
		
		if(esInicializar) {
			if( !ParametroFactuSecuencialJInternalFrame.ISBINDING_MANUAL_TABLA ||
			   	!ParametroFactuSecuencialJInternalFrame.ISBINDING_MANUAL) {
			   	
			}
		}
	}
	
	public void inicializarActualizarBindingManualParametroFactuSecuencial() throws Exception {		
		//NO SE NECESITA HACER BINDING OTRA VEZ
		//this.inicializarActualizarBindingTablaParametroFactuSecuencial();
		
		this.inicializarActualizarBindingBotonesManualParametroFactuSecuencial(true);
		
		//FUNCIONALIDAD_RELACIONADO
		if(!this.parametrofactusecuencialSessionBean.getEsGuardarRelacionado()) {
			
			this.inicializarActualizarBindingBusquedasManualParametroFactuSecuencial();			
			
			
			//this.inicializarActualizarBindingtiposArchivosReportesAccionesParametroFactuSecuencial() ;
			
			this.inicializarActualizarBindingParametrosReportesPostAccionesManualParametroFactuSecuencial(false) ;			
			
		}
	}
	
	public void inicializarActualizarBindingParametrosReportesPostAccionesManualParametroFactuSecuencial(Boolean esSetControles) throws Exception {
		try	{					
			if(!esSetControles) {
				this.isSeleccionarTodos=this.jCheckBoxSeleccionarTodosParametroFactuSecuencial.isSelected();
				this.isSeleccionados=this.jCheckBoxSeleccionadosParametroFactuSecuencial.isSelected();
				
				
				this.conGraficoReporte=this.jCheckBoxConGraficoReporteParametroFactuSecuencial.isSelected();															
				
				
				if(this.jInternalFrameDetalleFormParametroFactuSecuencial!=null) {
				this.isPostAccionNuevo=this.jInternalFrameDetalleFormParametroFactuSecuencial.jCheckBoxPostAccionNuevoParametroFactuSecuencial.isSelected();
				this.isPostAccionSinCerrar=this.jInternalFrameDetalleFormParametroFactuSecuencial.jCheckBoxPostAccionSinCerrarParametroFactuSecuencial.isSelected();
				this.isPostAccionSinMensaje=this.jInternalFrameDetalleFormParametroFactuSecuencial.jCheckBoxPostAccionSinMensajeParametroFactuSecuencial.isSelected();
				}
			
			} else {
				this.jCheckBoxSeleccionarTodosParametroFactuSecuencial.setSelected(this.isSeleccionarTodos);
				this.jCheckBoxSeleccionadosParametroFactuSecuencial.setSelected(this.isSeleccionados);
				
				
				this.jCheckBoxConGraficoReporteParametroFactuSecuencial.setSelected(this.conGraficoReporte);				
				
				
				if(this.jInternalFrameDetalleFormParametroFactuSecuencial!=null) {
				this.jInternalFrameDetalleFormParametroFactuSecuencial.jCheckBoxPostAccionNuevoParametroFactuSecuencial.setSelected(this.isPostAccionNuevo);
				this.jInternalFrameDetalleFormParametroFactuSecuencial.jCheckBoxPostAccionSinCerrarParametroFactuSecuencial.setSelected(this.isPostAccionSinCerrar);
				this.jInternalFrameDetalleFormParametroFactuSecuencial.jCheckBoxPostAccionSinMensajeParametroFactuSecuencial.setSelected(this.isPostAccionSinMensaje);
				}
			}
			
			
			if(this.jComboBoxTiposPaginacionParametroFactuSecuencial.getSelectedItem()!=null) {
				this.sTipoPaginacion=((Reporte)this.jComboBoxTiposPaginacionParametroFactuSecuencial.getSelectedItem()).getsCodigo();			
			}
			
			
			
			if(this.jInternalFrameDetalleFormParametroFactuSecuencial!=null) {
			this.sTipoAccionFormulario=((Reporte)this.jInternalFrameDetalleFormParametroFactuSecuencial.jComboBoxTiposAccionesFormularioParametroFactuSecuencial.getSelectedItem()).getsCodigo();
			}
			
			
			
			if(!this.conCargarMinimo) {
				this.sTipoArchivoReporte=((Reporte)this.jComboBoxTiposArchivosReportesParametroFactuSecuencial.getSelectedItem()).getsCodigo();			
				
				if(this.jInternalFrameReporteDinamicoParametroFactuSecuencial!=null) {
					this.sTipoArchivoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoParametroFactuSecuencial.getjComboBoxTiposArchivosReportesDinamico().getSelectedItem()).getsCodigo();			
				}
				
				this.sTipoRelacion=((Reporte)this.jComboBoxTiposRelacionesParametroFactuSecuencial.getSelectedItem()).getsCodigo();
									
				this.sTipoAccion=((Reporte)this.jComboBoxTiposAccionesParametroFactuSecuencial.getSelectedItem()).getsCodigo();
													
				this.sTipoSeleccionar=((Reporte)this.jComboBoxTiposSeleccionarParametroFactuSecuencial.getSelectedItem()).getsCodigo();
									
				this.sTipoReporte=((Reporte)this.jComboBoxTiposReportesParametroFactuSecuencial.getSelectedItem()).getsCodigo();							
					
				if(this.jInternalFrameReporteDinamicoParametroFactuSecuencial!=null) {
					this.sTipoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoParametroFactuSecuencial.getjComboBoxTiposReportesDinamico().getSelectedItem()).getsCodigo();							
				}
				
				this.sTipoGraficoReporte=((Reporte)this.jComboBoxTiposGraficosReportesParametroFactuSecuencial.getSelectedItem()).getsCodigo();											
			}			
			
			this.sValorCampoGeneral=this.jTextFieldValorCampoGeneralParametroFactuSecuencial.getText();						
			
			
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void inicializarActualizarBindingParametrosReportesParametroFactuSecuencial(Boolean esInicializar) throws Exception {
		try	{	
			if(ParametroFactuSecuencialJInternalFrame.ISBINDING_MANUAL) {
				this. inicializarActualizarBindingParametrosReportesPostAccionesManualParametroFactuSecuencial(false);
			} else {
			}
		} catch(Exception e) {
			throw e;
		}
	}	
	
	public void inicializarActualizarBindingtiposArchivosReportesAccionesParametroFactuSecuencial() throws Exception {
		try	{
			if(ParametroFactuSecuencialJInternalFrame.ISBINDING_MANUAL) {
				this.inicializarActualizarBindingtiposArchivosReportesAccionesManualParametroFactuSecuencial();
			} else {
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesAccionesManualFormDetalleParametroFactuSecuencial() throws Exception {
		//TIPOS ACCIONES FORMULARIO	
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jComboBoxTiposAccionesFormularioParametroFactuSecuencial.removeAllItems();
				
		for(Reporte reporte:this.tiposAccionesFormulario) {
			this.jInternalFrameDetalleFormParametroFactuSecuencial.jComboBoxTiposAccionesFormularioParametroFactuSecuencial.addItem(reporte);
		}
		
		//TIPOS ACCIONES FORMULARIO
	}
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesAccionesManualParametroFactuSecuencial() throws Exception {
		try	{
			
			//TIPOS ARCHIVOS REPORTES
			this.jComboBoxTiposArchivosReportesParametroFactuSecuencial.removeAllItems();
				
			for(Reporte reporte:this.tiposArchivosReportes) {
				this.jComboBoxTiposArchivosReportesParametroFactuSecuencial.addItem(reporte);
			}
			
			
				
			//TIPOS REPORTES
			this.jComboBoxTiposReportesParametroFactuSecuencial.removeAllItems();
				
			for(Reporte reporte:this.tiposReportes) {
				this.jComboBoxTiposReportesParametroFactuSecuencial.addItem(reporte);
			}
			
			
			//TIPOS GRAFICOS REPORTES
			this.jComboBoxTiposGraficosReportesParametroFactuSecuencial.removeAllItems();
				
			for(Reporte reporte:this.tiposGraficosReportes) {
				this.jComboBoxTiposGraficosReportesParametroFactuSecuencial.addItem(reporte);
			}
			
			
			//TIPOS PAGINACION
			this.jComboBoxTiposPaginacionParametroFactuSecuencial.removeAllItems();
				
			for(Reporte reporte:this.tiposPaginacion) {
				this.jComboBoxTiposPaginacionParametroFactuSecuencial.addItem(reporte);
			}
			
			
			if(!this.parametrofactusecuencialSessionBean.getEsGuardarRelacionado()) {
				this.jComboBoxTiposPaginacionParametroFactuSecuencial.setSelectedItem(Funciones2.getTipoPaginacionDefecto("NORMAL",this.tiposPaginacion));
			} else {
				this.jComboBoxTiposPaginacionParametroFactuSecuencial.setSelectedItem(Funciones2.getTipoPaginacionDefecto("RELACIONADO",this.tiposPaginacion));
			}
				
				
			//TIPOS ACCIONES	
			this.jComboBoxTiposRelacionesParametroFactuSecuencial.removeAllItems();
				
			for(Reporte reporte:this.tiposRelaciones) {
				this.jComboBoxTiposRelacionesParametroFactuSecuencial.addItem(reporte);
			}
			
			//TIPOS ACCIONES
				
				
			//TIPOS ACCIONES	
			this.jComboBoxTiposAccionesParametroFactuSecuencial.removeAllItems();
				
			for(Reporte reporte:this.tiposAcciones) {
				this.jComboBoxTiposAccionesParametroFactuSecuencial.addItem(reporte);
			}
			
			//TIPOS ACCIONES			
			
			
			
			//TIPOS ACCIONES FORMULARIO	
			if(this.jInternalFrameDetalleFormParametroFactuSecuencial!=null) { //if(this.conCargarFormDetalle) {
				this.jInternalFrameDetalleFormParametroFactuSecuencial.jComboBoxTiposAccionesFormularioParametroFactuSecuencial.removeAllItems();
				
				for(Reporte reporte:this.tiposAccionesFormulario) {
					this.jInternalFrameDetalleFormParametroFactuSecuencial.jComboBoxTiposAccionesFormularioParametroFactuSecuencial.addItem(reporte);
				}
				
			}
			//TIPOS ACCIONES FORMULARIO
			
			
			
			//TIPOS SELECCIONAR
			this.jComboBoxTiposSeleccionarParametroFactuSecuencial.removeAllItems();
				
			for(Reporte reporte:this.tiposSeleccionar) {
				this.jComboBoxTiposSeleccionarParametroFactuSecuencial.addItem(reporte);
			}
			
			
			if(this.tiposSeleccionar!=null && this.tiposSeleccionar.size()>1) {
				this.jComboBoxTiposSeleccionarParametroFactuSecuencial.setSelectedIndex(1);
			}
				
			//REPORTE DINAMICO
			this.inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualParametroFactuSecuencial();
							
			//TIPOS COLUMNAS SELECT
			//TIPOS SELECCIONAR
			
			
		} catch(Exception e) {
			throw e;
		}
	}		
	
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualParametroFactuSecuencial() throws Exception {
		try	{
			DefaultListModel<Reporte> defaultListModel=new DefaultListModel<Reporte>();
			
			
			//TIPOS ARCHIVOS REPORTES DINAMICO
			if(this.jInternalFrameReporteDinamicoParametroFactuSecuencial!=null) {
				this.jInternalFrameReporteDinamicoParametroFactuSecuencial.getjComboBoxTiposArchivosReportesDinamico().removeAllItems();
					
				for(Reporte reporte:this.tiposArchivosReportesDinamico) {
					this.jInternalFrameReporteDinamicoParametroFactuSecuencial.getjComboBoxTiposArchivosReportesDinamico().addItem(reporte);
				}
				
			}
			
			//TIPOS REPORTES DINAMICO
			if(this.jInternalFrameReporteDinamicoParametroFactuSecuencial!=null) {
				this.jInternalFrameReporteDinamicoParametroFactuSecuencial.getjComboBoxTiposReportesDinamico().removeAllItems();
					
				for(Reporte reporte:this.tiposReportesDinamico) {
					this.jInternalFrameReporteDinamicoParametroFactuSecuencial.getjComboBoxTiposReportesDinamico().addItem(reporte);
				}
				
			}
			
			defaultListModel=new DefaultListModel<Reporte>();
			
			if(this.jInternalFrameReporteDinamicoParametroFactuSecuencial!=null) {
				
				if(this.jInternalFrameReporteDinamicoParametroFactuSecuencial.getjListColumnasSelectReporte()!=null) {
					this.jInternalFrameReporteDinamicoParametroFactuSecuencial.getjListColumnasSelectReporte().removeAll();
						
					for(Reporte reporte:this.tiposColumnasSelect) {
						defaultListModel.addElement(reporte);
					}						
						
					this.jInternalFrameReporteDinamicoParametroFactuSecuencial.getjListColumnasSelectReporte().setModel(defaultListModel);									
						
				}	
					
				//TIPOS RELACIONES SELECT
				//TIPOS SELECCIONAR
				defaultListModel=new DefaultListModel<Reporte>();
				if(this.jInternalFrameReporteDinamicoParametroFactuSecuencial.getjListRelacionesSelectReporte()!=null) {
					this.jInternalFrameReporteDinamicoParametroFactuSecuencial.getjListRelacionesSelectReporte().removeAll();
						
					for(Reporte reporte:this.tiposRelacionesSelect) {
						defaultListModel.addElement(reporte);
					}						
						
					this.jInternalFrameReporteDinamicoParametroFactuSecuencial.getjListRelacionesSelectReporte().setModel(defaultListModel);									
						
				}	
				
			}
		} catch(Exception e) {
			throw e;
		}
	}	
	
	
	
	public void inicializarActualizarBindingBusquedasManualParametroFactuSecuencial()  throws Exception {				
		//BYDAN_BUSQUEDAS		
		
		if(this.jComboBoxid_bodegaFK_IdBodegaParametroFactuSecuencial.getSelectedItem()!=null){this.id_bodegaFK_IdBodega=((Bodega)this.jComboBoxid_bodegaFK_IdBodegaParametroFactuSecuencial.getSelectedItem()).getId();}
		if(this.jComboBoxid_bodega_transferenciaFK_IdBodegaTransferenciaParametroFactuSecuencial.getSelectedItem()!=null){this.id_bodega_transferenciaFK_IdBodegaTransferencia=((Bodega)this.jComboBoxid_bodega_transferenciaFK_IdBodegaTransferenciaParametroFactuSecuencial.getSelectedItem()).getId();}
		if(this.jComboBoxid_formatoFK_IdFormatoParametroFactuSecuencial.getSelectedItem()!=null){this.id_formatoFK_IdFormato=((Formato)this.jComboBoxid_formatoFK_IdFormatoParametroFactuSecuencial.getSelectedItem()).getId();}
		if(this.jComboBoxid_tipo_documento_generalFK_IdTipoDocumentoGeneralParametroFactuSecuencial.getSelectedItem()!=null){this.id_tipo_documento_generalFK_IdTipoDocumentoGeneral=((TipoDocumentoGeneral)this.jComboBoxid_tipo_documento_generalFK_IdTipoDocumentoGeneralParametroFactuSecuencial.getSelectedItem()).getId();}
		if(this.jComboBoxid_tipo_param_factu_plazoFK_IdTipoParamFactuPlazoParametroFactuSecuencial.getSelectedItem()!=null){this.id_tipo_param_factu_plazoFK_IdTipoParamFactuPlazo=((TipoParamFactuPlazo)this.jComboBoxid_tipo_param_factu_plazoFK_IdTipoParamFactuPlazoParametroFactuSecuencial.getSelectedItem()).getId();}
		if(this.jComboBoxid_transaccion_transferenciaFK_IdTransaccionTransferenciaParametroFactuSecuencial.getSelectedItem()!=null){this.id_transaccion_transferenciaFK_IdTransaccionTransferencia=((Transaccion)this.jComboBoxid_transaccion_transferenciaFK_IdTransaccionTransferenciaParametroFactuSecuencial.getSelectedItem()).getId();}
		
	}
	
	
	
	
	public void inicializarActualizarBindingBusquedasParametroFactuSecuencial(Boolean esInicializar) throws Exception {				
		if(ParametroFactuSecuencialJInternalFrame.ISBINDING_MANUAL) {
			
			this.inicializarActualizarBindingBusquedasManualParametroFactuSecuencial();			
			
		} else {
		}
	}		
		
	public void inicializarActualizarBindingTablaParametroFactuSecuencial() throws Exception {
		this.inicializarActualizarBindingTablaParametroFactuSecuencial(false);
	}
	
	
	public void inicializarActualizarBindingTablaOrderByParametroFactuSecuencial() {
		//TABLA OrderBy	
		TableColumn tableColumn=new TableColumn();
		Integer iWidthTableDefinicionOrderBy=0;			
			
		this.jInternalFrameOrderByParametroFactuSecuencial.getjTableDatosOrderBy().setModel(new TablaGeneralOrderByModel(this.arrOrderBy));
					
		//DEFINIR RENDERERS OrderBy
		tableColumn=this.jInternalFrameOrderByParametroFactuSecuencial.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderByParametroFactuSecuencial.getjTableDatosOrderBy(),OrderBy.ISSELECTED));			
		//tableColumn.addPropertyChangeListener(new ParametroFactuSecuencialPropertyChangeListener());
					
		tableColumn.setPreferredWidth(50); 	 
		tableColumn.setWidth(50); 	 
		tableColumn.setMinWidth(50);
		tableColumn.setMaxWidth(50);
				
		iWidthTableDefinicionOrderBy+=50;
					
		tableColumn=this.jInternalFrameOrderByParametroFactuSecuencial.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderByParametroFactuSecuencial.getjTableDatosOrderBy(),OrderBy.NOMBRE));
		//tableColumn.addPropertyChangeListener(new ParametroFactuSecuencialPropertyChangeListener());
					
		tableColumn.setPreferredWidth(150); 	 
		tableColumn.setWidth(150); 	 
		tableColumn.setMinWidth(150);
		tableColumn.setMaxWidth(150);
				
		iWidthTableDefinicionOrderBy+=150;
					
		//tableColumn=this.jTableDatosParametroFactuSecuencialOrderBy.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroFactuSecuencialOrderBy,OrderBy.NOMBREDB));			
		////tableColumn.addPropertyChangeListener(new ParametroFactuSecuencialPropertyChangeListener());
								
		tableColumn=this.jInternalFrameOrderByParametroFactuSecuencial.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderByParametroFactuSecuencial.getjTableDatosOrderBy(),OrderBy.ESDESC));
		//tableColumn.addPropertyChangeListener(new ParametroFactuSecuencialPropertyChangeListener());
												
		tableColumn.setPreferredWidth(50); 	 
		tableColumn.setWidth(50); 	 
		tableColumn.setMinWidth(50);
		tableColumn.setMaxWidth(50);
				
		((AbstractTableModel) this.jInternalFrameOrderByParametroFactuSecuencial.getjTableDatosOrderBy().getModel()).fireTableDataChanged();
				
		iWidthTableDefinicionOrderBy+=50;
	}
	
	
	
	public void inicializarActualizarBindingTablaParametroFactuSecuencial(Boolean esInicializar) throws Exception {
		Boolean isNoExiste=false;
		Integer iCountNumeroColumnasNormal=0;
		Integer iCountNumeroColumnasFk=0;
		
		this.iWidthTableDefinicion=0;
		
		int iSizeTabla=0;
		
		iSizeTabla=this.getSizeTablaDatos();
		
	if(esInicializar || ConstantesSwing.FORZAR_INICIALIZAR_TABLA) {//esInicializar
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			isNoExiste=parametrofactusecuencialLogic.getParametroFactuSecuencials().size()==0;
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			isNoExiste=parametrofactusecuencials.size()==0;
		}
		//ARCHITECTURE
			
		if(isNoExiste) {
			if(this.iNumeroPaginacion-this.iNumeroPaginacion>0) {
				this.iNumeroPaginacion-=this.iNumeroPaginacion;
			}
		}
		
		TableColumn tableColumn=new TableColumn();
		
		if(ParametroFactuSecuencialJInternalFrame.ISBINDING_MANUAL_TABLA) {
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.jTableDatosParametroFactuSecuencial.setModel(new ParametroFactuSecuencialModel(this.parametrofactusecuencialLogic.getParametroFactuSecuencials(),this));
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.jTableDatosParametroFactuSecuencial.setModel(new ParametroFactuSecuencialModel(this.parametrofactusecuencials,this));
			}
			//ARCHITECTURE
			
							
			
			
			if(this.jInternalFrameOrderByParametroFactuSecuencial!=null && this.jInternalFrameOrderByParametroFactuSecuencial.getjTableDatosOrderBy()!=null) {
				this.inicializarActualizarBindingTablaOrderByParametroFactuSecuencial();
			}
			
								
			//DEFINIR RENDERERS
			tableColumn=this.jTableDatosParametroFactuSecuencial.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroFactuSecuencial,Constantes2.S_SELECCIONAR));
			//tableColumn.addPropertyChangeListener(new ParametroFactuSecuencialPropertyChangeListener());
			tableColumn.setCellRenderer(new BooleanRenderer(true,"Seleccionar "+ParametroFactuSecuencialConstantesFunciones.SCLASSWEBTITULO,parametrofactusecuencialConstantesFunciones.resaltarSeleccionarParametroFactuSecuencial,true,false,"","",this));
			tableColumn.setCellEditor(new BooleanEditorRenderer(true,"Seleccionar "+ParametroFactuSecuencialConstantesFunciones.SCLASSWEBTITULO,parametrofactusecuencialConstantesFunciones.resaltarSeleccionarParametroFactuSecuencial,false,"","",this));			
			
			tableColumn.setPreferredWidth(50); 	 
			tableColumn.setWidth(50); 	 
			tableColumn.setMinWidth(50); 
			tableColumn.setMaxWidth(50); 
			
			this.iWidthTableDefinicion+=50;
			
			


			tableColumn=this.jTableDatosParametroFactuSecuencial.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroFactuSecuencial,ParametroFactuSecuencialConstantesFunciones.LABEL_ID));

		if(this.parametrofactusecuencialConstantesFunciones.mostraridParametroFactuSecuencial && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroFactuSecuencialConstantesFunciones.LABEL_ID,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.parametrofactusecuencialConstantesFunciones.resaltaridParametroFactuSecuencial,this.parametrofactusecuencialConstantesFunciones.activaridParametroFactuSecuencial,this,true,"idParametroFactuSecuencial","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.parametrofactusecuencialConstantesFunciones.resaltaridParametroFactuSecuencial,this.parametrofactusecuencialConstantesFunciones.activaridParametroFactuSecuencial,this,true,"idParametroFactuSecuencial","BASICO",false));

			tableColumn.setPreferredWidth(50);
			tableColumn.setWidth(50);
			tableColumn.setMinWidth(50);
			tableColumn.setMaxWidth(50);

			this.iWidthTableDefinicion+=50;
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroFactuSecuencial.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroFactuSecuencial,ParametroFactuSecuencialConstantesFunciones.LABEL_IDEMPRESA));

		if(this.parametrofactusecuencialConstantesFunciones.mostrarid_empresaParametroFactuSecuencial && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroFactuSecuencialConstantesFunciones.LABEL_IDEMPRESA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new EmpresaTableCell(this.empresasForeignKey,this.parametrofactusecuencialConstantesFunciones.resaltarid_empresaParametroFactuSecuencial,this,this.parametrofactusecuencialConstantesFunciones.activarid_empresaParametroFactuSecuencial));
			tableColumn.setCellEditor(new EmpresaTableCell(this.empresasForeignKey,this.parametrofactusecuencialConstantesFunciones.resaltarid_empresaParametroFactuSecuencial,this,this.parametrofactusecuencialConstantesFunciones.activarid_empresaParametroFactuSecuencial,false,"id_empresaParametroFactuSecuencial","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ParametroFactuSecuencialPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroFactuSecuencial.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroFactuSecuencial,ParametroFactuSecuencialConstantesFunciones.LABEL_IDSUCURSAL));

		if(this.parametrofactusecuencialConstantesFunciones.mostrarid_sucursalParametroFactuSecuencial && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroFactuSecuencialConstantesFunciones.LABEL_IDSUCURSAL,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new SucursalTableCell(this.sucursalsForeignKey,this.parametrofactusecuencialConstantesFunciones.resaltarid_sucursalParametroFactuSecuencial,this,this.parametrofactusecuencialConstantesFunciones.activarid_sucursalParametroFactuSecuencial));
			tableColumn.setCellEditor(new SucursalTableCell(this.sucursalsForeignKey,this.parametrofactusecuencialConstantesFunciones.resaltarid_sucursalParametroFactuSecuencial,this,this.parametrofactusecuencialConstantesFunciones.activarid_sucursalParametroFactuSecuencial,false,"id_sucursalParametroFactuSecuencial","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ParametroFactuSecuencialPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroFactuSecuencial.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroFactuSecuencial,ParametroFactuSecuencialConstantesFunciones.LABEL_IDTIPODOCUMENTOGENERAL));

		if(this.parametrofactusecuencialConstantesFunciones.mostrarid_tipo_documento_generalParametroFactuSecuencial && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroFactuSecuencialConstantesFunciones.LABEL_IDTIPODOCUMENTOGENERAL,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new TipoDocumentoGeneralTableCell(this.tipodocumentogeneralsForeignKey,this.parametrofactusecuencialConstantesFunciones.resaltarid_tipo_documento_generalParametroFactuSecuencial,this,this.parametrofactusecuencialConstantesFunciones.activarid_tipo_documento_generalParametroFactuSecuencial));
			tableColumn.setCellEditor(new TipoDocumentoGeneralTableCell(this.tipodocumentogeneralsForeignKey,this.parametrofactusecuencialConstantesFunciones.resaltarid_tipo_documento_generalParametroFactuSecuencial,this,this.parametrofactusecuencialConstantesFunciones.activarid_tipo_documento_generalParametroFactuSecuencial,true,"id_tipo_documento_generalParametroFactuSecuencial","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ParametroFactuSecuencialPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroFactuSecuencial.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroFactuSecuencial,ParametroFactuSecuencialConstantesFunciones.LABEL_SECUENCIAL));

		if(this.parametrofactusecuencialConstantesFunciones.mostrarsecuencialParametroFactuSecuencial && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroFactuSecuencialConstantesFunciones.LABEL_SECUENCIAL,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.parametrofactusecuencialConstantesFunciones.resaltarsecuencialParametroFactuSecuencial,this.parametrofactusecuencialConstantesFunciones.activarsecuencialParametroFactuSecuencial,this,true,"secuencialParametroFactuSecuencial","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.parametrofactusecuencialConstantesFunciones.resaltarsecuencialParametroFactuSecuencial,this.parametrofactusecuencialConstantesFunciones.activarsecuencialParametroFactuSecuencial,this,true,"secuencialParametroFactuSecuencial","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ParametroFactuSecuencialPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroFactuSecuencial.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroFactuSecuencial,ParametroFactuSecuencialConstantesFunciones.LABEL_NUMERODIGITOS));

		if(this.parametrofactusecuencialConstantesFunciones.mostrarnumero_digitosParametroFactuSecuencial && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroFactuSecuencialConstantesFunciones.LABEL_NUMERODIGITOS,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.parametrofactusecuencialConstantesFunciones.resaltarnumero_digitosParametroFactuSecuencial,this.parametrofactusecuencialConstantesFunciones.activarnumero_digitosParametroFactuSecuencial,this,true,"numero_digitosParametroFactuSecuencial","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.parametrofactusecuencialConstantesFunciones.resaltarnumero_digitosParametroFactuSecuencial,this.parametrofactusecuencialConstantesFunciones.activarnumero_digitosParametroFactuSecuencial,this,true,"numero_digitosParametroFactuSecuencial","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new ParametroFactuSecuencialPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroFactuSecuencial.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroFactuSecuencial,ParametroFactuSecuencialConstantesFunciones.LABEL_NUMEROITEMS));

		if(this.parametrofactusecuencialConstantesFunciones.mostrarnumero_itemsParametroFactuSecuencial && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroFactuSecuencialConstantesFunciones.LABEL_NUMEROITEMS,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.parametrofactusecuencialConstantesFunciones.resaltarnumero_itemsParametroFactuSecuencial,this.parametrofactusecuencialConstantesFunciones.activarnumero_itemsParametroFactuSecuencial,this,true,"numero_itemsParametroFactuSecuencial","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.parametrofactusecuencialConstantesFunciones.resaltarnumero_itemsParametroFactuSecuencial,this.parametrofactusecuencialConstantesFunciones.activarnumero_itemsParametroFactuSecuencial,this,true,"numero_itemsParametroFactuSecuencial","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new ParametroFactuSecuencialPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroFactuSecuencial.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroFactuSecuencial,ParametroFactuSecuencialConstantesFunciones.LABEL_NUMERODESCUENTO));

		if(this.parametrofactusecuencialConstantesFunciones.mostrarnumero_descuentoParametroFactuSecuencial && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroFactuSecuencialConstantesFunciones.LABEL_NUMERODESCUENTO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.parametrofactusecuencialConstantesFunciones.resaltarnumero_descuentoParametroFactuSecuencial,this.parametrofactusecuencialConstantesFunciones.activarnumero_descuentoParametroFactuSecuencial,this,true,"numero_descuentoParametroFactuSecuencial","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.parametrofactusecuencialConstantesFunciones.resaltarnumero_descuentoParametroFactuSecuencial,this.parametrofactusecuencialConstantesFunciones.activarnumero_descuentoParametroFactuSecuencial,this,true,"numero_descuentoParametroFactuSecuencial","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new ParametroFactuSecuencialPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroFactuSecuencial.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroFactuSecuencial,ParametroFactuSecuencialConstantesFunciones.LABEL_NUMEROADIICIONALES));

		if(this.parametrofactusecuencialConstantesFunciones.mostrarnumero_adiicionalesParametroFactuSecuencial && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroFactuSecuencialConstantesFunciones.LABEL_NUMEROADIICIONALES,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.parametrofactusecuencialConstantesFunciones.resaltarnumero_adiicionalesParametroFactuSecuencial,this.parametrofactusecuencialConstantesFunciones.activarnumero_adiicionalesParametroFactuSecuencial,this,true,"numero_adiicionalesParametroFactuSecuencial","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.parametrofactusecuencialConstantesFunciones.resaltarnumero_adiicionalesParametroFactuSecuencial,this.parametrofactusecuencialConstantesFunciones.activarnumero_adiicionalesParametroFactuSecuencial,this,true,"numero_adiicionalesParametroFactuSecuencial","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new ParametroFactuSecuencialPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroFactuSecuencial.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroFactuSecuencial,ParametroFactuSecuencialConstantesFunciones.LABEL_NUMERODIGITOINICIO));

		if(this.parametrofactusecuencialConstantesFunciones.mostrarnumero_digito_inicioParametroFactuSecuencial && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroFactuSecuencialConstantesFunciones.LABEL_NUMERODIGITOINICIO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.parametrofactusecuencialConstantesFunciones.resaltarnumero_digito_inicioParametroFactuSecuencial,this.parametrofactusecuencialConstantesFunciones.activarnumero_digito_inicioParametroFactuSecuencial,this,true,"numero_digito_inicioParametroFactuSecuencial","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.parametrofactusecuencialConstantesFunciones.resaltarnumero_digito_inicioParametroFactuSecuencial,this.parametrofactusecuencialConstantesFunciones.activarnumero_digito_inicioParametroFactuSecuencial,this,true,"numero_digito_inicioParametroFactuSecuencial","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new ParametroFactuSecuencialPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroFactuSecuencial.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroFactuSecuencial,ParametroFactuSecuencialConstantesFunciones.LABEL_NUMERODIGITOFIN));

		if(this.parametrofactusecuencialConstantesFunciones.mostrarnumero_digito_finParametroFactuSecuencial && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroFactuSecuencialConstantesFunciones.LABEL_NUMERODIGITOFIN,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.parametrofactusecuencialConstantesFunciones.resaltarnumero_digito_finParametroFactuSecuencial,this.parametrofactusecuencialConstantesFunciones.activarnumero_digito_finParametroFactuSecuencial,this,true,"numero_digito_finParametroFactuSecuencial","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.parametrofactusecuencialConstantesFunciones.resaltarnumero_digito_finParametroFactuSecuencial,this.parametrofactusecuencialConstantesFunciones.activarnumero_digito_finParametroFactuSecuencial,this,true,"numero_digito_finParametroFactuSecuencial","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new ParametroFactuSecuencialPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroFactuSecuencial.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroFactuSecuencial,ParametroFactuSecuencialConstantesFunciones.LABEL_NUMERODIASPLAZO));

		if(this.parametrofactusecuencialConstantesFunciones.mostrarnumero_dias_plazoParametroFactuSecuencial && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroFactuSecuencialConstantesFunciones.LABEL_NUMERODIASPLAZO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.parametrofactusecuencialConstantesFunciones.resaltarnumero_dias_plazoParametroFactuSecuencial,this.parametrofactusecuencialConstantesFunciones.activarnumero_dias_plazoParametroFactuSecuencial,this,true,"numero_dias_plazoParametroFactuSecuencial","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.parametrofactusecuencialConstantesFunciones.resaltarnumero_dias_plazoParametroFactuSecuencial,this.parametrofactusecuencialConstantesFunciones.activarnumero_dias_plazoParametroFactuSecuencial,this,true,"numero_dias_plazoParametroFactuSecuencial","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new ParametroFactuSecuencialPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroFactuSecuencial.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroFactuSecuencial,ParametroFactuSecuencialConstantesFunciones.LABEL_CONDETALLE));

		if(this.parametrofactusecuencialConstantesFunciones.mostrarcon_detalleParametroFactuSecuencial && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroFactuSecuencialConstantesFunciones.LABEL_CONDETALLE,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new BooleanRenderer(this.parametrofactusecuencialConstantesFunciones.resaltarcon_detalleParametroFactuSecuencial,this.parametrofactusecuencialConstantesFunciones.activarcon_detalleParametroFactuSecuencial));
			tableColumn.setCellEditor(new BooleanEditorRenderer(this.parametrofactusecuencialConstantesFunciones.resaltarcon_detalleParametroFactuSecuencial,this.parametrofactusecuencialConstantesFunciones.activarcon_detalleParametroFactuSecuencial,this,true,"con_detalleParametroFactuSecuencial","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new ParametroFactuSecuencialPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroFactuSecuencial.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroFactuSecuencial,ParametroFactuSecuencialConstantesFunciones.LABEL_CONLECTOR));

		if(this.parametrofactusecuencialConstantesFunciones.mostrarcon_lectorParametroFactuSecuencial && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroFactuSecuencialConstantesFunciones.LABEL_CONLECTOR,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new BooleanRenderer(this.parametrofactusecuencialConstantesFunciones.resaltarcon_lectorParametroFactuSecuencial,this.parametrofactusecuencialConstantesFunciones.activarcon_lectorParametroFactuSecuencial));
			tableColumn.setCellEditor(new BooleanEditorRenderer(this.parametrofactusecuencialConstantesFunciones.resaltarcon_lectorParametroFactuSecuencial,this.parametrofactusecuencialConstantesFunciones.activarcon_lectorParametroFactuSecuencial,this,true,"con_lectorParametroFactuSecuencial","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new ParametroFactuSecuencialPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroFactuSecuencial.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroFactuSecuencial,ParametroFactuSecuencialConstantesFunciones.LABEL_IDBODEGA));

		if(this.parametrofactusecuencialConstantesFunciones.mostrarid_bodegaParametroFactuSecuencial && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroFactuSecuencialConstantesFunciones.LABEL_IDBODEGA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new BodegaTableCell(this.bodegasForeignKey,this.parametrofactusecuencialConstantesFunciones.resaltarid_bodegaParametroFactuSecuencial,this,this.parametrofactusecuencialConstantesFunciones.activarid_bodegaParametroFactuSecuencial));
			tableColumn.setCellEditor(new BodegaTableCell(this.bodegasForeignKey,this.parametrofactusecuencialConstantesFunciones.resaltarid_bodegaParametroFactuSecuencial,this,this.parametrofactusecuencialConstantesFunciones.activarid_bodegaParametroFactuSecuencial,true,"id_bodegaParametroFactuSecuencial","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75);
			//tableColumn.addPropertyChangeListener(new ParametroFactuSecuencialPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroFactuSecuencial.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroFactuSecuencial,ParametroFactuSecuencialConstantesFunciones.LABEL_IDTIPOPARAMFACTUPLAZO));

		if(this.parametrofactusecuencialConstantesFunciones.mostrarid_tipo_param_factu_plazoParametroFactuSecuencial && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroFactuSecuencialConstantesFunciones.LABEL_IDTIPOPARAMFACTUPLAZO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new TipoParamFactuPlazoTableCell(this.tipoparamfactuplazosForeignKey,this.parametrofactusecuencialConstantesFunciones.resaltarid_tipo_param_factu_plazoParametroFactuSecuencial,this,this.parametrofactusecuencialConstantesFunciones.activarid_tipo_param_factu_plazoParametroFactuSecuencial));
			tableColumn.setCellEditor(new TipoParamFactuPlazoTableCell(this.tipoparamfactuplazosForeignKey,this.parametrofactusecuencialConstantesFunciones.resaltarid_tipo_param_factu_plazoParametroFactuSecuencial,this,this.parametrofactusecuencialConstantesFunciones.activarid_tipo_param_factu_plazoParametroFactuSecuencial,true,"id_tipo_param_factu_plazoParametroFactuSecuencial","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ParametroFactuSecuencialPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroFactuSecuencial.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroFactuSecuencial,ParametroFactuSecuencialConstantesFunciones.LABEL_IDFORMATO));

		if(this.parametrofactusecuencialConstantesFunciones.mostrarid_formatoParametroFactuSecuencial && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroFactuSecuencialConstantesFunciones.LABEL_IDFORMATO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new FormatoTableCell(this.formatosForeignKey,this.parametrofactusecuencialConstantesFunciones.resaltarid_formatoParametroFactuSecuencial,this,this.parametrofactusecuencialConstantesFunciones.activarid_formatoParametroFactuSecuencial));
			tableColumn.setCellEditor(new FormatoTableCell(this.formatosForeignKey,this.parametrofactusecuencialConstantesFunciones.resaltarid_formatoParametroFactuSecuencial,this,this.parametrofactusecuencialConstantesFunciones.activarid_formatoParametroFactuSecuencial,true,"id_formatoParametroFactuSecuencial","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ParametroFactuSecuencialPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroFactuSecuencial.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroFactuSecuencial,ParametroFactuSecuencialConstantesFunciones.LABEL_CONTRANSFERENCIA));

		if(this.parametrofactusecuencialConstantesFunciones.mostrarcon_transferenciaParametroFactuSecuencial && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroFactuSecuencialConstantesFunciones.LABEL_CONTRANSFERENCIA,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new BooleanRenderer(this.parametrofactusecuencialConstantesFunciones.resaltarcon_transferenciaParametroFactuSecuencial,this.parametrofactusecuencialConstantesFunciones.activarcon_transferenciaParametroFactuSecuencial));
			tableColumn.setCellEditor(new BooleanEditorRenderer(this.parametrofactusecuencialConstantesFunciones.resaltarcon_transferenciaParametroFactuSecuencial,this.parametrofactusecuencialConstantesFunciones.activarcon_transferenciaParametroFactuSecuencial,this,true,"con_transferenciaParametroFactuSecuencial","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new ParametroFactuSecuencialPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroFactuSecuencial.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroFactuSecuencial,ParametroFactuSecuencialConstantesFunciones.LABEL_IDBODEGATRANSFERENCIA));

		if(this.parametrofactusecuencialConstantesFunciones.mostrarid_bodega_transferenciaParametroFactuSecuencial && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroFactuSecuencialConstantesFunciones.LABEL_IDBODEGATRANSFERENCIA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new BodegaTableCell(this.bodegatransferenciasForeignKey,this.parametrofactusecuencialConstantesFunciones.resaltarid_bodega_transferenciaParametroFactuSecuencial,this,this.parametrofactusecuencialConstantesFunciones.activarid_bodega_transferenciaParametroFactuSecuencial));
			tableColumn.setCellEditor(new BodegaTableCell(this.bodegatransferenciasForeignKey,this.parametrofactusecuencialConstantesFunciones.resaltarid_bodega_transferenciaParametroFactuSecuencial,this,this.parametrofactusecuencialConstantesFunciones.activarid_bodega_transferenciaParametroFactuSecuencial,true,"id_bodega_transferenciaParametroFactuSecuencial","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75);
			//tableColumn.addPropertyChangeListener(new ParametroFactuSecuencialPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroFactuSecuencial.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroFactuSecuencial,ParametroFactuSecuencialConstantesFunciones.LABEL_IDTRANSACCIONTRANSFERENCIA));

		if(this.parametrofactusecuencialConstantesFunciones.mostrarid_transaccion_transferenciaParametroFactuSecuencial && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroFactuSecuencialConstantesFunciones.LABEL_IDTRANSACCIONTRANSFERENCIA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new TransaccionTableCell(this.transacciontransferenciasForeignKey,this.parametrofactusecuencialConstantesFunciones.resaltarid_transaccion_transferenciaParametroFactuSecuencial,this,this.parametrofactusecuencialConstantesFunciones.activarid_transaccion_transferenciaParametroFactuSecuencial));
			tableColumn.setCellEditor(new TransaccionTableCell(this.transacciontransferenciasForeignKey,this.parametrofactusecuencialConstantesFunciones.resaltarid_transaccion_transferenciaParametroFactuSecuencial,this,this.parametrofactusecuencialConstantesFunciones.activarid_transaccion_transferenciaParametroFactuSecuencial,true,"id_transaccion_transferenciaParametroFactuSecuencial","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50);
			//tableColumn.addPropertyChangeListener(new ParametroFactuSecuencialPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}
			
		} else {
		}			
					
		if(!this.parametrofactusecuencialSessionBean.getEsGuardarRelacionado()
			&& !this.esParaBusquedaForeignKey) {
			
		}
		
		if(true) {
			String sLabelColumnAccion="Editar";
			String sLabelColumnAccionEli="Eli";
			
			if(this.esParaBusquedaForeignKey)  {
				sLabelColumnAccion="Seleccionar";
				
				//LO MISMO QUE ELSE
				tableColumn= new TableColumn();
				tableColumn.setIdentifier(sLabelColumnAccion);
				tableColumn.setHeaderValue(sLabelColumnAccion);
				tableColumn.setCellRenderer(new IdTableCell(this,false,false,this.parametrofactusecuencialSessionBean.getEsGuardarRelacionado()));
				tableColumn.setCellEditor(new IdTableCell(this,false,false,this.parametrofactusecuencialSessionBean.getEsGuardarRelacionado()));
	
				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				
				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
				
				this.jTableDatosParametroFactuSecuencial.addColumn(tableColumn);
			
			} else {				
				
				//LO MISMO QUE IF
				
				tableColumn= new TableColumn();
				tableColumn.setIdentifier(sLabelColumnAccion);
				tableColumn.setHeaderValue(sLabelColumnAccion);
				tableColumn.setCellRenderer(new IdTableCell(this,false,false,this.parametrofactusecuencialSessionBean.getEsGuardarRelacionado()));
				tableColumn.setCellEditor(new IdTableCell(this,false,false,this.parametrofactusecuencialSessionBean.getEsGuardarRelacionado()));
		
				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				
				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
				
				this.jTableDatosParametroFactuSecuencial.addColumn(tableColumn);				
					
				//ELIMINAR
				if(this.isPermisoEliminarParametroFactuSecuencial && this.isPermisoGuardarCambiosParametroFactuSecuencial) {
					tableColumn= new TableColumn();
					tableColumn.setIdentifier(Constantes2.S_ELI);
					tableColumn.setHeaderValue(sLabelColumnAccionEli);
					tableColumn.setCellRenderer(new IdTableCell(this,false,true,this.parametrofactusecuencialSessionBean.getEsGuardarRelacionado()));
					tableColumn.setCellEditor(new IdTableCell(this,false,true,this.parametrofactusecuencialSessionBean.getEsGuardarRelacionado()));
			
					tableColumn.setPreferredWidth(65); 	 
					tableColumn.setWidth(65); 	 
					tableColumn.setMinWidth(65); 
					tableColumn.setMaxWidth(65);
					
					this.iWidthTableDefinicion+=65;
						
					this.jTableDatosParametroFactuSecuencial.addColumn(tableColumn);
				}
			}			
						
			
			/*
			tableColumn= new TableColumn();
			tableColumn.setIdentifier(Constantes2.S_SELECCIONAR);
			tableColumn.setHeaderValue(Constantes2.S_SELECCIONAR);
			tableColumn.setCellRenderer(new IdSeleccionarTableCell(this));
			tableColumn.setCellEditor(new IdSeleccionarTableCell(this));
			
			tableColumn.setPreferredWidth(30); 	 
			tableColumn.setWidth(30); 	 
			tableColumn.setMinWidth(30); 
			
			this.iWidthTableDefinicion+=30;
			
			this.jTableDatosParametroFactuSecuencial.addColumn(tableColumn);
			*/
		}
		
		Integer iUltimaColumna=0;//1
		Integer iNuevaPosicionColumna=0;
		
		
		//PERMITE ELIMINAR SIMPLE
		if(!this.esParaBusquedaForeignKey)  {
			if(this.isPermisoEliminarParametroFactuSecuencial && this.isPermisoGuardarCambiosParametroFactuSecuencial) {
				iUltimaColumna++;
			}	
		}
		
		//PERMITE EDITAR SIMPLE
		iUltimaColumna++;	
		
				
		
		//MOVIA SELECCIONAR
		//iUltimaColumna++;
		
		if(!this.esParaBusquedaForeignKey)  {
			if(this.isPermisoEliminarParametroFactuSecuencial && this.isPermisoGuardarCambiosParametroFactuSecuencial) {
				//REUBICA ELIMINAR SIMPLE
				jTableDatosParametroFactuSecuencial.moveColumn(this.jTableDatosParametroFactuSecuencial.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1,-2 o -3
					
				iUltimaColumna--;
			}
		}
		//REUBICA EDITAR SIMPLE
		jTableDatosParametroFactuSecuencial.moveColumn(this.jTableDatosParametroFactuSecuencial.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1,-2 o -3				
		
		
		
		
		//REUBICABA SELECCIONAR
		/*
		if(iUltimaColumna>1) {
			iUltimaColumna--;
		}
		
		//iNuevaPosicionColumna++;
			
		//REUBICA SELECCIONAR FILA CHECK
		jTableDatosParametroFactuSecuencial.moveColumn(this.jTableDatosParametroFactuSecuencial.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1		
		*/
		
		//DEFINEN HEADERS
		final TableCellRenderer tableHeaderDefaultCellRenderer = this.jTableDatosParametroFactuSecuencial.getTableHeader().getDefaultRenderer();
		
		this.jTableDatosParametroFactuSecuencial.getTableHeader().setDefaultRenderer(new TableCellRendererHeader(this.jTableDatosParametroFactuSecuencial,tableHeaderDefaultCellRenderer));
	    
		TableColumn column=null;
		
		if(!ParametroFactuSecuencialJInternalFrame.ISBINDING_MANUAL_TABLA) {
			for(int i = 0; i < this.jTableDatosParametroFactuSecuencial.getColumnModel().getColumnCount(); i++) { 
				column = this.jTableDatosParametroFactuSecuencial.getColumnModel().getColumn(i); 
				
				if(column.getIdentifier()!=null) {
					//SI SE UTILIZA UN HEADER ES GENERICO
					//column.setHeaderRenderer(new HeaderRenderer(column.getIdentifier().toString()));
				}
				
				if(column.getIdentifier()!=null && column.getIdentifier().equals(Constantes2.S_ELI)) {
					continue;
				}
				
				if(column.getIdentifier()!=null && column.getIdentifier().equals(Constantes2.S_SELECCIONAR)) {
					if(!ParametroFactuSecuencialJInternalFrame.ISBINDING_MANUAL_TABLA) {
						column.setPreferredWidth(50); 	 
						column.setWidth(50); 	 
						column.setMinWidth(50); 	
						column.setMaxWidth(50); 
						
						this.iWidthTableDefinicion+=50;
					}
					
				} else {
					if(!ParametroFactuSecuencialJInternalFrame.ISBINDING_MANUAL_TABLA) {
						column.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
						column.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
						column.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 	
						column.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 	
						
						this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
					}
				}
			}
		}
		
		this.jTableDatosParametroFactuSecuencial.setSelectionBackground(FuncionesSwing.getColorSelectedBackground());
		this.jTableDatosParametroFactuSecuencial.setSelectionForeground(FuncionesSwing.getColorSelectedForeground());
		
		/*
		this.jTableDatosParametroFactuSecuencial.setDefaultRenderer(Object.class, new DefaultTableCellRenderer() {
			private static final long serialVersionUID = 1L;
			
		    @Override
		    public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
		        final Component component= super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
		        //POR DEFECTO ES MEJOR, SE PIERDE DATOS AL SELECCIONAR BLANCO LETRAS BLANCAS
				component.setBackground(row % 2 == 0 ? FuncionesSwing.getColorTextFields(Constantes2.S_FONDOCONTROL_COLOR) : Funciones2.getColorFilaTabla2()); //FuncionesSwing.getColorTextFields(Constantes2.S_FONDOCONTROL_COLOR)
				component.setForeground(Funciones2.getColorTextoFilaTabla1());
				
				try {
		        	int iSize=-999;
		        	
		        	if(conTotales) {
						//FILA TOTALES OTRO COLOR, SI TABLA NO ES UNO A UNO
			        	if(Constantes.ISUSAEJBLOGICLAYER) {
							iSize=parametrofactusecuencialLogic.getParametroFactuSecuencials().size()-1;
								
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							iSize=parametrofactusecuencials.size()-1;
						}
						
						if(iSize==row) {
							component.setBackground(Funciones2.getColorFilaTablaTotales());
						}
		        	}
					
					//POR EFICIENCIA NO UTILIZAR					
					//if (component instanceof JComponent) {
		            //    JComponent jcomponent = (JComponent) component;		                 		                
		        	//}				
					
				} catch (Exception e) {
					e.printStackTrace();
				}
				
		        return component;
		    }
		});
		*/
		
		//ESTA EN LA DEFINICION DE LA TABLA
		//this.jTableDatosParametroFactuSecuencial.setRowHeight(Constantes.ISWING_ALTO_FILA_TABLA);
		
		/*
		column=this.jTableDatosParametroFactuSecuencial.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSistema,Constantes2.S_SELECCIONAR));
		
		if(column!=null) {
			column.setPreferredWidth(25); 	 
			column.setWidth(25); 	 
			column.setMinWidth(25); 	
		}
		*/
			
			//CopyTableToTableTotal();
		} else {
			
			this.actualizarVisualTableDatosParametroFactuSecuencial();
			
		}
	}
	
	/*
	//COPY_TABLES
	/* FALTARIA RESOLVER:
	   1 SOLO SCROLL PARA 2 TABLAS
	   COPIA EXACTA DE COLUMNAS DE UNA TABLA A OTRA, SI SE MODIFICA TAMANIO TAMBIEN LA OTRA
	*/
	
	public void jButtonIdActionPerformed(ActionEvent evt,int rowIndex,Boolean esRelaciones,Boolean esEliminar) { 
		try {
			if(!esEliminar) {
				this.estaModoSeleccionar=true;
				
				//this.isEsNuevoParametroFactuSecuencial=false;
					
				ParametroFactuSecuencialBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.SELECTED,"FORM",this.parametrofactusecuencial,new Object(),this.parametrofactusecuencialParameterGeneral,this.parametrofactusecuencialReturnGeneral);
			
				if(this.parametrofactusecuencialSessionBean.getConGuardarRelaciones()) {
					this.dStart=(double)System.currentTimeMillis();
				}
				
				if(this.jInternalFrameDetalleFormParametroFactuSecuencial==null) {
					this.inicializarFormDetalle();
				}
				
				this.inicializarInvalidValues();
				
				int intSelectedRow = 0;
				
				if(rowIndex>=0) {
					intSelectedRow=rowIndex;
					this.jTableDatosParametroFactuSecuencial.getSelectionModel().setSelectionInterval(intSelectedRow, intSelectedRow);
				} else {	
					intSelectedRow=this.jTableDatosParametroFactuSecuencial.getSelectedRow();	       
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactusecuencial =(ParametroFactuSecuencial) this.parametrofactusecuencialLogic.getParametroFactuSecuencials().toArray()[this.jTableDatosParametroFactuSecuencial.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.parametrofactusecuencial =(ParametroFactuSecuencial) this.parametrofactusecuencials.toArray()[this.jTableDatosParametroFactuSecuencial.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//PUEDE SER PARA DUPLICADO O NUEVO TABLA
				
				if(this.parametrofactusecuencial.getsType().equals("DUPLICADO")
				   || this.parametrofactusecuencial.getsType().equals("NUEVO_GUARDAR_CAMBIOS")) {
					
					this.isEsNuevoParametroFactuSecuencial=true;
				
				} else {
					this.isEsNuevoParametroFactuSecuencial=false;	
				}
				
				//CONTROL VERSION ANTERIOR
				/*
				if(!this.parametrofactusecuencialSessionBean.getEsGuardarRelacionado()) {
					if(this.parametrofactusecuencial.getId()>=0 && !this.parametrofactusecuencial.getIsNew()) {						
						this.isEsNuevoParametroFactuSecuencial=false;
						
					} else {
						this.isEsNuevoParametroFactuSecuencial=true;
					}
					
				} else {
					//CONTROLAR PARA RELACIONADO
				}
				*/
				
				//ESTABLECE SI ES RELACIONADO O NO 
				this.habilitarDeshabilitarTipoMantenimientoParametroFactuSecuencial(esRelaciones);						
				
				this.seleccionarParametroFactuSecuencial(evt,null,rowIndex);
				
				//SELECCIONA ACTUAL PERO AUN NO SE HA INGRESADO AL SISTEMA
				//SE DESHABILITA POR GUARDAR CAMBIOS
				/*
				if(this.parametrofactusecuencial.getId()<0) {
					this.isEsNuevoParametroFactuSecuencial=true;
				}
				*/
				
				if(!this.esParaBusquedaForeignKey) {
					this.modificarParametroFactuSecuencial(evt,rowIndex,esRelaciones);
				} else {
					this.seleccionarParametroFactuSecuencial(evt,rowIndex);
				}	
				
				if(this.parametrofactusecuencialSessionBean.getConGuardarRelaciones()) {
					this.dEnd=(double)System.currentTimeMillis();					
					this.dDif=this.dEnd - this.dStart;
					
					if(Constantes.ISDEVELOPING) {
						System.out.println("Tiempo(ms) Seleccion ParametroFactuSecuencial: " + this.dDif); 
					}
				}								
				
				ParametroFactuSecuencialBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.SELECTED,"FORM",this.parametrofactusecuencial,new Object(),this.parametrofactusecuencialParameterGeneral,this.parametrofactusecuencialReturnGeneral);
				
			} else {
				this.estaModoEliminarGuardarCambios=true;
				
				this.seleccionarParametroFactuSecuencial(evt,null,rowIndex);
				
				if(this.permiteMantenimiento(this.parametrofactusecuencial)) {
					if(this.parametrofactusecuencial.getId()>0) {
						this.parametrofactusecuencial.setIsDeleted(true);
						
						this.parametrofactusecuencialsEliminados.add(this.parametrofactusecuencial);
					}
					
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						this.parametrofactusecuencialLogic.getParametroFactuSecuencials().remove(this.parametrofactusecuencial);
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						this.parametrofactusecuencials.remove(this.parametrofactusecuencial);				
					}
					
					
					((ParametroFactuSecuencialModel) this.jTableDatosParametroFactuSecuencial.getModel()).fireTableRowsDeleted(rowIndex,rowIndex);
					
					this.actualizarFilaTotales();
					
					this.inicializarActualizarBindingTablaParametroFactuSecuencial(false);					
				}								
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException2(this, e,logger,ParametroFactuSecuencialConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoSeleccionar=false;				
			this.estaModoEliminarGuardarCambios=false;
		}
	}
	
	
	public void seleccionarParametroFactuSecuencial(ActionEvent evt,javax.swing.event.ListSelectionEvent evt2,int rowIndex) throws Exception { 
		try {
			//SI PUEDE SER NUEVO Y SELECCIONAR (PARA DUPLICAR Y NUEVO TABLA)
			//if(!this.isEsNuevoParametroFactuSecuencial) {
			
			if(this.jInternalFrameDetalleFormParametroFactuSecuencial==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
				int intSelectedRow = 0;
				
				if(rowIndex>=0) {
					intSelectedRow=rowIndex;
					this.jTableDatosParametroFactuSecuencial.getSelectionModel().setSelectionInterval(intSelectedRow, intSelectedRow);
				} else {	
					intSelectedRow=this.jTableDatosParametroFactuSecuencial.getSelectedRow();	       
				}
				
				//CUANDO SE RECARGA TABLA TAMBIEN SE SELECCIONA PERO CON -1 POR LO QUE SE NECESITA VALIDAR ANTES
				if(intSelectedRow<0) {
					return;
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactusecuencial =(ParametroFactuSecuencial) this.parametrofactusecuencialLogic.getParametroFactuSecuencials().toArray()[this.jTableDatosParametroFactuSecuencial.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.parametrofactusecuencial =(ParametroFactuSecuencial) this.parametrofactusecuencials.toArray()[this.jTableDatosParametroFactuSecuencial.convertRowIndexToModel(intSelectedRow)];
				}
				
				if(ParametroFactuSecuencialJInternalFrame.ISBINDING_MANUAL_TABLA) {
					this.setVariablesObjetoActualToFormularioParametroFactuSecuencial(this.parametrofactusecuencial);
				}
				
				//ARCHITECTURE
				try {
					

					//Empresa
					if(!this.parametrofactusecuencialConstantesFunciones.cargarid_empresaParametroFactuSecuencial || this.parametrofactusecuencialConstantesFunciones.event_dependid_empresaParametroFactuSecuencial) {
						//this.cargarCombosEmpresasForeignKeyLista(" where id="+this.parametrofactusecuencial.getid_empresa());
									//this.inicializarActualizarBindingParametroFactuSecuencial(false,false);
						this.empresasForeignKey=new ArrayList<Empresa>();

						if(parametrofactusecuencial.getEmpresa()!=null) {
							this.empresasForeignKey.add(parametrofactusecuencial.getEmpresa());
						}

						this.addItemDefectoCombosForeignKeyEmpresa();
						this.cargarCombosFrameEmpresasForeignKey("Todos");
					}
					this.setActualEmpresaForeignKey(this.parametrofactusecuencial.getid_empresa(),false,"Formulario");

					//Sucursal
					if(!this.parametrofactusecuencialConstantesFunciones.cargarid_sucursalParametroFactuSecuencial || this.parametrofactusecuencialConstantesFunciones.event_dependid_sucursalParametroFactuSecuencial) {
						//this.cargarCombosSucursalsForeignKeyLista(" where id="+this.parametrofactusecuencial.getid_sucursal());
									//this.inicializarActualizarBindingParametroFactuSecuencial(false,false);
						this.sucursalsForeignKey=new ArrayList<Sucursal>();

						if(parametrofactusecuencial.getSucursal()!=null) {
							this.sucursalsForeignKey.add(parametrofactusecuencial.getSucursal());
						}

						this.addItemDefectoCombosForeignKeySucursal();
						this.cargarCombosFrameSucursalsForeignKey("Todos");
					}
					this.setActualSucursalForeignKey(this.parametrofactusecuencial.getid_sucursal(),false,"Formulario");

					//TipoDocumentoGeneral
					if(!this.parametrofactusecuencialConstantesFunciones.cargarid_tipo_documento_generalParametroFactuSecuencial || this.parametrofactusecuencialConstantesFunciones.event_dependid_tipo_documento_generalParametroFactuSecuencial) {
						//this.cargarCombosTipoDocumentoGeneralsForeignKeyLista(" where id="+this.parametrofactusecuencial.getid_tipo_documento_general());
									//this.inicializarActualizarBindingParametroFactuSecuencial(false,false);
						this.tipodocumentogeneralsForeignKey=new ArrayList<TipoDocumentoGeneral>();

						if(parametrofactusecuencial.getTipoDocumentoGeneral()!=null) {
							this.tipodocumentogeneralsForeignKey.add(parametrofactusecuencial.getTipoDocumentoGeneral());
						}

						this.addItemDefectoCombosForeignKeyTipoDocumentoGeneral();
						this.cargarCombosFrameTipoDocumentoGeneralsForeignKey("Todos");
					}
					this.setActualTipoDocumentoGeneralForeignKey(this.parametrofactusecuencial.getid_tipo_documento_general(),false,"Formulario");

					//Bodega
					if(!this.parametrofactusecuencialConstantesFunciones.cargarid_bodegaParametroFactuSecuencial || this.parametrofactusecuencialConstantesFunciones.event_dependid_bodegaParametroFactuSecuencial) {
						//this.cargarCombosBodegasForeignKeyLista(" where id="+this.parametrofactusecuencial.getid_bodega());
									//this.inicializarActualizarBindingParametroFactuSecuencial(false,false);
						this.bodegasForeignKey=new ArrayList<Bodega>();

						if(parametrofactusecuencial.getBodega()!=null) {
							this.bodegasForeignKey.add(parametrofactusecuencial.getBodega());
						}

						this.addItemDefectoCombosForeignKeyBodega();
						this.cargarCombosFrameBodegasForeignKey("Todos");
					}
					this.setActualBodegaForeignKey(this.parametrofactusecuencial.getid_bodega(),false,"Formulario");

					//TipoParamFactuPlazo
					if(!this.parametrofactusecuencialConstantesFunciones.cargarid_tipo_param_factu_plazoParametroFactuSecuencial || this.parametrofactusecuencialConstantesFunciones.event_dependid_tipo_param_factu_plazoParametroFactuSecuencial) {
						//this.cargarCombosTipoParamFactuPlazosForeignKeyLista(" where id="+this.parametrofactusecuencial.getid_tipo_param_factu_plazo());
									//this.inicializarActualizarBindingParametroFactuSecuencial(false,false);
						this.tipoparamfactuplazosForeignKey=new ArrayList<TipoParamFactuPlazo>();

						if(parametrofactusecuencial.getTipoParamFactuPlazo()!=null) {
							this.tipoparamfactuplazosForeignKey.add(parametrofactusecuencial.getTipoParamFactuPlazo());
						}

						this.addItemDefectoCombosForeignKeyTipoParamFactuPlazo();
						this.cargarCombosFrameTipoParamFactuPlazosForeignKey("Todos");
					}
					this.setActualTipoParamFactuPlazoForeignKey(this.parametrofactusecuencial.getid_tipo_param_factu_plazo(),false,"Formulario");

					//Formato
					if(!this.parametrofactusecuencialConstantesFunciones.cargarid_formatoParametroFactuSecuencial || this.parametrofactusecuencialConstantesFunciones.event_dependid_formatoParametroFactuSecuencial) {
						//this.cargarCombosFormatosForeignKeyLista(" where id="+this.parametrofactusecuencial.getid_formato());
									//this.inicializarActualizarBindingParametroFactuSecuencial(false,false);
						this.formatosForeignKey=new ArrayList<Formato>();

						if(parametrofactusecuencial.getFormato()!=null) {
							this.formatosForeignKey.add(parametrofactusecuencial.getFormato());
						}

						this.addItemDefectoCombosForeignKeyFormato();
						this.cargarCombosFrameFormatosForeignKey("Todos");
					}
					this.setActualFormatoForeignKey(this.parametrofactusecuencial.getid_formato(),false,"Formulario");

					//BodegaTransferencia
					if(!this.parametrofactusecuencialConstantesFunciones.cargarid_bodega_transferenciaParametroFactuSecuencial || this.parametrofactusecuencialConstantesFunciones.event_dependid_bodega_transferenciaParametroFactuSecuencial) {
						//this.cargarCombosBodegaTransferenciasForeignKeyLista(" where id="+this.parametrofactusecuencial.getid_bodega_transferencia());
									//this.inicializarActualizarBindingParametroFactuSecuencial(false,false);
						this.bodegatransferenciasForeignKey=new ArrayList<Bodega>();

						if(parametrofactusecuencial.getBodegaTransferencia()!=null) {
							this.bodegatransferenciasForeignKey.add(parametrofactusecuencial.getBodegaTransferencia());
						}

						this.addItemDefectoCombosForeignKeyBodegaTransferencia();
						this.cargarCombosFrameBodegaTransferenciasForeignKey("Todos");
					}
					this.setActualBodegaTransferenciaForeignKey(this.parametrofactusecuencial.getid_bodega_transferencia(),false,"Formulario");

					//TransaccionTransferencia
					if(!this.parametrofactusecuencialConstantesFunciones.cargarid_transaccion_transferenciaParametroFactuSecuencial || this.parametrofactusecuencialConstantesFunciones.event_dependid_transaccion_transferenciaParametroFactuSecuencial) {
						//this.cargarCombosTransaccionTransferenciasForeignKeyLista(" where id="+this.parametrofactusecuencial.getid_transaccion_transferencia());
									//this.inicializarActualizarBindingParametroFactuSecuencial(false,false);
						this.transacciontransferenciasForeignKey=new ArrayList<Transaccion>();

						if(parametrofactusecuencial.getTransaccionTransferencia()!=null) {
							this.transacciontransferenciasForeignKey.add(parametrofactusecuencial.getTransaccionTransferencia());
						}

						this.addItemDefectoCombosForeignKeyTransaccionTransferencia();
						this.cargarCombosFrameTransaccionTransferenciasForeignKey("Todos");
					}
					this.setActualTransaccionTransferenciaForeignKey(this.parametrofactusecuencial.getid_transaccion_transferencia(),false,"Formulario");
				} catch(Exception e) {
					throw e;
				}
				
				this.actualizarEstadoCeldasBotonesParametroFactuSecuencial("s", this.isGuardarCambiosEnLote, this.isEsMantenimientoRelacionado);
				
				//NO FUNCIONA BINDING PERO SE MANTIENE
				this.inicializarActualizarBindingBotonesParametroFactuSecuencial(false) ;
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualParametroFactuSecuencial() ;
			//}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroFactuSecuencialConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setVariablesObjetoActualToFormularioTodoParametroFactuSecuencial(ParametroFactuSecuencial parametrofactusecuencial) throws Exception { 
		this.setVariablesObjetoActualToFormularioTodoParametroFactuSecuencial(parametrofactusecuencial,false,"NINGUNO");
	}
	
	public void setVariablesObjetoActualToFormularioTodoParametroFactuSecuencial(ParametroFactuSecuencial parametrofactusecuencial,Boolean conCargarListasDesdeObjetoActual,String sTipoEvento) throws Exception { 
		this.setVariablesObjetoActualToFormularioParametroFactuSecuencial(parametrofactusecuencial);
		
		if(conCargarListasDesdeObjetoActual) {
			this.setVariablesObjetoActualToListasForeignKeyParametroFactuSecuencial(parametrofactusecuencial,sTipoEvento);
		}
		
		this.setVariablesObjetoActualToFormularioForeignKeyParametroFactuSecuencial(parametrofactusecuencial);
	}
	
	public void setVariablesObjetoActualToFormularioParametroFactuSecuencial(ParametroFactuSecuencial parametrofactusecuencial) throws Exception { 
		try {			
			Image imageActual=null;
			ImageIcon imageIcon = null;
			
			if(this.jInternalFrameDetalleFormParametroFactuSecuencial==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			
			this.jInternalFrameDetalleFormParametroFactuSecuencial.jLabelidParametroFactuSecuencial.setText(parametrofactusecuencial.getId().toString());
			this.jInternalFrameDetalleFormParametroFactuSecuencial.jTextFieldsecuencialParametroFactuSecuencial.setText(parametrofactusecuencial.getsecuencial());
			this.jInternalFrameDetalleFormParametroFactuSecuencial.jTextFieldnumero_digitosParametroFactuSecuencial.setText(parametrofactusecuencial.getnumero_digitos().toString());
			this.jInternalFrameDetalleFormParametroFactuSecuencial.jTextFieldnumero_itemsParametroFactuSecuencial.setText(parametrofactusecuencial.getnumero_items().toString());
			this.jInternalFrameDetalleFormParametroFactuSecuencial.jTextFieldnumero_descuentoParametroFactuSecuencial.setText(parametrofactusecuencial.getnumero_descuento().toString());
			this.jInternalFrameDetalleFormParametroFactuSecuencial.jTextFieldnumero_adiicionalesParametroFactuSecuencial.setText(parametrofactusecuencial.getnumero_adiicionales().toString());
			this.jInternalFrameDetalleFormParametroFactuSecuencial.jTextFieldnumero_digito_inicioParametroFactuSecuencial.setText(parametrofactusecuencial.getnumero_digito_inicio().toString());
			this.jInternalFrameDetalleFormParametroFactuSecuencial.jTextFieldnumero_digito_finParametroFactuSecuencial.setText(parametrofactusecuencial.getnumero_digito_fin().toString());
			this.jInternalFrameDetalleFormParametroFactuSecuencial.jTextFieldnumero_dias_plazoParametroFactuSecuencial.setText(parametrofactusecuencial.getnumero_dias_plazo().toString());
			this.jInternalFrameDetalleFormParametroFactuSecuencial.jCheckBoxcon_detalleParametroFactuSecuencial.setSelected(parametrofactusecuencial.getcon_detalle());
			this.jInternalFrameDetalleFormParametroFactuSecuencial.jCheckBoxcon_lectorParametroFactuSecuencial.setSelected(parametrofactusecuencial.getcon_lector());
			this.jInternalFrameDetalleFormParametroFactuSecuencial.jCheckBoxcon_transferenciaParametroFactuSecuencial.setSelected(parametrofactusecuencial.getcon_transferencia());
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,ParametroFactuSecuencialConstantesFunciones.CLASSNAME);
		}
	}
		
	public void actualizarInformacion(String sTipo,ParametroFactuSecuencial parametrofactusecuencialLocal) throws Exception {
		this.actualizarInformacion(sTipo,false,parametrofactusecuencialLocal);
	}	
	
	public void actualizarInformacion(String sTipo,Boolean conParametroObjeto,ParametroFactuSecuencial parametrofactusecuencialLocal) throws Exception {
		
		if(!conParametroObjeto) {
			if(!this.getEsControlTabla()) {
				parametrofactusecuencialLocal=this.parametrofactusecuencial;
			} else {
				parametrofactusecuencialLocal=this.parametrofactusecuencialAnterior;
			}
		}
		
		if(this.permiteMantenimiento(parametrofactusecuencialLocal)) {
			if(sTipo.equals("EVENTO_CONTROL")) { // || sTipo.equals("EVENTO_NUEVO")
				if(!this.esControlTabla) {
					this.setVariablesFormularioToObjetoActualTodoParametroFactuSecuencial(parametrofactusecuencialLocal,true);
					
					if(parametrofactusecuencialSessionBean.getConGuardarRelaciones()) {
						this.actualizarRelaciones(parametrofactusecuencialLocal);
					}
				}
			
			} else if(sTipo.equals("INFO_PADRE")) {
				
				if(this.parametrofactusecuencialSessionBean.getEsGuardarRelacionado()) {
					this.actualizarRelacionFkPadreActual(parametrofactusecuencialLocal);
				}
			}
		}
	}
	
	public void setVariablesFormularioToObjetoActualTodoParametroFactuSecuencial(ParametroFactuSecuencial parametrofactusecuencial,Boolean conColumnasBase) throws Exception { 
		this.setVariablesFormularioToObjetoActualParametroFactuSecuencial(parametrofactusecuencial,conColumnasBase);
		this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuSecuencial(parametrofactusecuencial);
	}
	
	public void setVariablesFormularioToObjetoActualParametroFactuSecuencial(ParametroFactuSecuencial parametrofactusecuencial,Boolean conColumnasBase) throws Exception { 
		this.setVariablesFormularioToObjetoActualParametroFactuSecuencial(parametrofactusecuencial,conColumnasBase,true);
	}
	
	public void setVariablesFormularioToObjetoActualParametroFactuSecuencial(ParametroFactuSecuencial parametrofactusecuencial,Boolean conColumnasBase,Boolean conInicializarInvalidValues) throws Exception { 
		String sMensajeCampoActual="";
		Boolean estaValidado=true;
		try {
			
			if(this.jInternalFrameDetalleFormParametroFactuSecuencial==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			if(conInicializarInvalidValues) {
				this.inicializarInvalidValues();
			}
			
			

		try {
			if(this.jInternalFrameDetalleFormParametroFactuSecuencial.jLabelidParametroFactuSecuencial.getText()==null || this.jInternalFrameDetalleFormParametroFactuSecuencial.jLabelidParametroFactuSecuencial.getText()=="" || this.jInternalFrameDetalleFormParametroFactuSecuencial.jLabelidParametroFactuSecuencial.getText()=="Id") {
				this.jInternalFrameDetalleFormParametroFactuSecuencial.jLabelidParametroFactuSecuencial.setText("0");
			}

			if(conColumnasBase) {parametrofactusecuencial.setId(Long.parseLong(this.jInternalFrameDetalleFormParametroFactuSecuencial.jLabelidParametroFactuSecuencial.getText()));}
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ParametroFactuSecuencialConstantesFunciones.LABEL_ID+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroFactuSecuencial.jLabelIdParametroFactuSecuencial,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			parametrofactusecuencial.setsecuencial(this.jInternalFrameDetalleFormParametroFactuSecuencial.jTextFieldsecuencialParametroFactuSecuencial.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ParametroFactuSecuencialConstantesFunciones.LABEL_SECUENCIAL+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroFactuSecuencial.jLabelsecuencialParametroFactuSecuencial,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			parametrofactusecuencial.setnumero_digitos(Integer.parseInt(this.jInternalFrameDetalleFormParametroFactuSecuencial.jTextFieldnumero_digitosParametroFactuSecuencial.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ParametroFactuSecuencialConstantesFunciones.LABEL_NUMERODIGITOS+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroFactuSecuencial.jLabelnumero_digitosParametroFactuSecuencial,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			parametrofactusecuencial.setnumero_items(Integer.parseInt(this.jInternalFrameDetalleFormParametroFactuSecuencial.jTextFieldnumero_itemsParametroFactuSecuencial.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ParametroFactuSecuencialConstantesFunciones.LABEL_NUMEROITEMS+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroFactuSecuencial.jLabelnumero_itemsParametroFactuSecuencial,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			parametrofactusecuencial.setnumero_descuento(Integer.parseInt(this.jInternalFrameDetalleFormParametroFactuSecuencial.jTextFieldnumero_descuentoParametroFactuSecuencial.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ParametroFactuSecuencialConstantesFunciones.LABEL_NUMERODESCUENTO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroFactuSecuencial.jLabelnumero_descuentoParametroFactuSecuencial,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			parametrofactusecuencial.setnumero_adiicionales(Integer.parseInt(this.jInternalFrameDetalleFormParametroFactuSecuencial.jTextFieldnumero_adiicionalesParametroFactuSecuencial.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ParametroFactuSecuencialConstantesFunciones.LABEL_NUMEROADIICIONALES+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroFactuSecuencial.jLabelnumero_adiicionalesParametroFactuSecuencial,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			parametrofactusecuencial.setnumero_digito_inicio(Integer.parseInt(this.jInternalFrameDetalleFormParametroFactuSecuencial.jTextFieldnumero_digito_inicioParametroFactuSecuencial.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ParametroFactuSecuencialConstantesFunciones.LABEL_NUMERODIGITOINICIO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroFactuSecuencial.jLabelnumero_digito_inicioParametroFactuSecuencial,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			parametrofactusecuencial.setnumero_digito_fin(Integer.parseInt(this.jInternalFrameDetalleFormParametroFactuSecuencial.jTextFieldnumero_digito_finParametroFactuSecuencial.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ParametroFactuSecuencialConstantesFunciones.LABEL_NUMERODIGITOFIN+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroFactuSecuencial.jLabelnumero_digito_finParametroFactuSecuencial,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			parametrofactusecuencial.setnumero_dias_plazo(Integer.parseInt(this.jInternalFrameDetalleFormParametroFactuSecuencial.jTextFieldnumero_dias_plazoParametroFactuSecuencial.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ParametroFactuSecuencialConstantesFunciones.LABEL_NUMERODIASPLAZO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroFactuSecuencial.jLabelnumero_dias_plazoParametroFactuSecuencial,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			parametrofactusecuencial.setcon_detalle(this.jInternalFrameDetalleFormParametroFactuSecuencial.jCheckBoxcon_detalleParametroFactuSecuencial.isSelected());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ParametroFactuSecuencialConstantesFunciones.LABEL_CONDETALLE+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroFactuSecuencial.jLabelcon_detalleParametroFactuSecuencial,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			parametrofactusecuencial.setcon_lector(this.jInternalFrameDetalleFormParametroFactuSecuencial.jCheckBoxcon_lectorParametroFactuSecuencial.isSelected());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ParametroFactuSecuencialConstantesFunciones.LABEL_CONLECTOR+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroFactuSecuencial.jLabelcon_lectorParametroFactuSecuencial,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			parametrofactusecuencial.setcon_transferencia(this.jInternalFrameDetalleFormParametroFactuSecuencial.jCheckBoxcon_transferenciaParametroFactuSecuencial.isSelected());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ParametroFactuSecuencialConstantesFunciones.LABEL_CONTRANSFERENCIA+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroFactuSecuencial.jLabelcon_transferenciaParametroFactuSecuencial,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}
			
			if(!estaValidado) {
				throw new Exception(sMensajeCampoActual);
			}
		} catch(NumberFormatException e) {
			throw new Exception(sMensajeCampoActual);
			//FuncionesSwing.manageException(this, e,logger,MovimientoInventarioConstantesFunciones.CLASSNAME);
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,ParametroFactuSecuencialConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setVariablesForeignKeyObjetoBeanDefectoActualToObjetoActualParametroFactuSecuencial(ParametroFactuSecuencial parametrofactusecuencialBean,ParametroFactuSecuencial parametrofactusecuencial,Boolean conDefault,Boolean conColumnasBase) throws Exception { 
		try {
			
			if(conDefault || (!conDefault && parametrofactusecuencialBean.getid_tipo_documento_general()!=null && !parametrofactusecuencialBean.getid_tipo_documento_general().equals(-1L))) {parametrofactusecuencial.setid_tipo_documento_general(parametrofactusecuencialBean.getid_tipo_documento_general());}
			if(conDefault || (!conDefault && parametrofactusecuencialBean.getid_bodega()!=null && !parametrofactusecuencialBean.getid_bodega().equals(-1L))) {parametrofactusecuencial.setid_bodega(parametrofactusecuencialBean.getid_bodega());}
			if(conDefault || (!conDefault && parametrofactusecuencialBean.getid_tipo_param_factu_plazo()!=null && !parametrofactusecuencialBean.getid_tipo_param_factu_plazo().equals(-1L))) {parametrofactusecuencial.setid_tipo_param_factu_plazo(parametrofactusecuencialBean.getid_tipo_param_factu_plazo());}
			if(conDefault || (!conDefault && parametrofactusecuencialBean.getid_formato()!=null && !parametrofactusecuencialBean.getid_formato().equals(-1L))) {parametrofactusecuencial.setid_formato(parametrofactusecuencialBean.getid_formato());}
			if(conDefault || (!conDefault && parametrofactusecuencialBean.getid_bodega_transferencia()!=null && !parametrofactusecuencialBean.getid_bodega_transferencia().equals(-1L))) {parametrofactusecuencial.setid_bodega_transferencia(parametrofactusecuencialBean.getid_bodega_transferencia());}
			if(conDefault || (!conDefault && parametrofactusecuencialBean.getid_transaccion_transferencia()!=null && !parametrofactusecuencialBean.getid_transaccion_transferencia().equals(-1L))) {parametrofactusecuencial.setid_transaccion_transferencia(parametrofactusecuencialBean.getid_transaccion_transferencia());}
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,ParametroFactuSecuencialConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setCopiarVariablesObjetosParametroFactuSecuencial(ParametroFactuSecuencial parametrofactusecuencialOrigen,ParametroFactuSecuencial parametrofactusecuencial,Boolean conDefault,Boolean conColumnasBase) throws Exception { 
		try {
			
			if(conColumnasBase) {if(conDefault || (!conDefault && parametrofactusecuencialOrigen.getId()!=null && !parametrofactusecuencialOrigen.getId().equals(0L))) {parametrofactusecuencial.setId(parametrofactusecuencialOrigen.getId());}}
			if(conDefault || (!conDefault && parametrofactusecuencialOrigen.getid_tipo_documento_general()!=null && !parametrofactusecuencialOrigen.getid_tipo_documento_general().equals(-1L))) {parametrofactusecuencial.setid_tipo_documento_general(parametrofactusecuencialOrigen.getid_tipo_documento_general());}
			if(conDefault || (!conDefault && parametrofactusecuencialOrigen.getsecuencial()!=null && !parametrofactusecuencialOrigen.getsecuencial().equals(""))) {parametrofactusecuencial.setsecuencial(parametrofactusecuencialOrigen.getsecuencial());}
			if(conDefault || (!conDefault && parametrofactusecuencialOrigen.getnumero_digitos()!=null && !parametrofactusecuencialOrigen.getnumero_digitos().equals(0))) {parametrofactusecuencial.setnumero_digitos(parametrofactusecuencialOrigen.getnumero_digitos());}
			if(conDefault || (!conDefault && parametrofactusecuencialOrigen.getnumero_items()!=null && !parametrofactusecuencialOrigen.getnumero_items().equals(0))) {parametrofactusecuencial.setnumero_items(parametrofactusecuencialOrigen.getnumero_items());}
			if(conDefault || (!conDefault && parametrofactusecuencialOrigen.getnumero_descuento()!=null && !parametrofactusecuencialOrigen.getnumero_descuento().equals(0))) {parametrofactusecuencial.setnumero_descuento(parametrofactusecuencialOrigen.getnumero_descuento());}
			if(conDefault || (!conDefault && parametrofactusecuencialOrigen.getnumero_adiicionales()!=null && !parametrofactusecuencialOrigen.getnumero_adiicionales().equals(0))) {parametrofactusecuencial.setnumero_adiicionales(parametrofactusecuencialOrigen.getnumero_adiicionales());}
			if(conDefault || (!conDefault && parametrofactusecuencialOrigen.getnumero_digito_inicio()!=null && !parametrofactusecuencialOrigen.getnumero_digito_inicio().equals(0))) {parametrofactusecuencial.setnumero_digito_inicio(parametrofactusecuencialOrigen.getnumero_digito_inicio());}
			if(conDefault || (!conDefault && parametrofactusecuencialOrigen.getnumero_digito_fin()!=null && !parametrofactusecuencialOrigen.getnumero_digito_fin().equals(0))) {parametrofactusecuencial.setnumero_digito_fin(parametrofactusecuencialOrigen.getnumero_digito_fin());}
			if(conDefault || (!conDefault && parametrofactusecuencialOrigen.getnumero_dias_plazo()!=null && !parametrofactusecuencialOrigen.getnumero_dias_plazo().equals(0))) {parametrofactusecuencial.setnumero_dias_plazo(parametrofactusecuencialOrigen.getnumero_dias_plazo());}
			if(conDefault || (!conDefault && parametrofactusecuencialOrigen.getcon_detalle()!=null && !parametrofactusecuencialOrigen.getcon_detalle().equals(false))) {parametrofactusecuencial.setcon_detalle(parametrofactusecuencialOrigen.getcon_detalle());}
			if(conDefault || (!conDefault && parametrofactusecuencialOrigen.getcon_lector()!=null && !parametrofactusecuencialOrigen.getcon_lector().equals(false))) {parametrofactusecuencial.setcon_lector(parametrofactusecuencialOrigen.getcon_lector());}
			if(conDefault || (!conDefault && parametrofactusecuencialOrigen.getid_bodega()!=null && !parametrofactusecuencialOrigen.getid_bodega().equals(-1L))) {parametrofactusecuencial.setid_bodega(parametrofactusecuencialOrigen.getid_bodega());}
			if(conDefault || (!conDefault && parametrofactusecuencialOrigen.getid_tipo_param_factu_plazo()!=null && !parametrofactusecuencialOrigen.getid_tipo_param_factu_plazo().equals(-1L))) {parametrofactusecuencial.setid_tipo_param_factu_plazo(parametrofactusecuencialOrigen.getid_tipo_param_factu_plazo());}
			if(conDefault || (!conDefault && parametrofactusecuencialOrigen.getid_formato()!=null && !parametrofactusecuencialOrigen.getid_formato().equals(-1L))) {parametrofactusecuencial.setid_formato(parametrofactusecuencialOrigen.getid_formato());}
			if(conDefault || (!conDefault && parametrofactusecuencialOrigen.getcon_transferencia()!=null && !parametrofactusecuencialOrigen.getcon_transferencia().equals(false))) {parametrofactusecuencial.setcon_transferencia(parametrofactusecuencialOrigen.getcon_transferencia());}
			if(conDefault || (!conDefault && parametrofactusecuencialOrigen.getid_bodega_transferencia()!=null && !parametrofactusecuencialOrigen.getid_bodega_transferencia().equals(-1L))) {parametrofactusecuencial.setid_bodega_transferencia(parametrofactusecuencialOrigen.getid_bodega_transferencia());}
			if(conDefault || (!conDefault && parametrofactusecuencialOrigen.getid_transaccion_transferencia()!=null && !parametrofactusecuencialOrigen.getid_transaccion_transferencia().equals(-1L))) {parametrofactusecuencial.setid_transaccion_transferencia(parametrofactusecuencialOrigen.getid_transaccion_transferencia());}
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,ParametroFactuSecuencialConstantesFunciones.CLASSNAME);
		}
	}
	
	/*
	public void setVariablesObjetoBeanActualToFormularioParametroFactuSecuencial(ParametroFactuSecuencial parametrofactusecuencial) throws Exception { 
		try {
			
			this.jInternalFrameDetalleFormParametroFactuSecuencial.jLabelidParametroFactuSecuencial.setText(parametrofactusecuencial.getId().toString());
			this.jInternalFrameDetalleFormParametroFactuSecuencial.jTextFieldsecuencialParametroFactuSecuencial.setText(parametrofactusecuencial.getsecuencial());
			this.jInternalFrameDetalleFormParametroFactuSecuencial.jTextFieldnumero_digitosParametroFactuSecuencial.setText(parametrofactusecuencial.getnumero_digitos().toString());
			this.jInternalFrameDetalleFormParametroFactuSecuencial.jTextFieldnumero_itemsParametroFactuSecuencial.setText(parametrofactusecuencial.getnumero_items().toString());
			this.jInternalFrameDetalleFormParametroFactuSecuencial.jTextFieldnumero_descuentoParametroFactuSecuencial.setText(parametrofactusecuencial.getnumero_descuento().toString());
			this.jInternalFrameDetalleFormParametroFactuSecuencial.jTextFieldnumero_adiicionalesParametroFactuSecuencial.setText(parametrofactusecuencial.getnumero_adiicionales().toString());
			this.jInternalFrameDetalleFormParametroFactuSecuencial.jTextFieldnumero_digito_inicioParametroFactuSecuencial.setText(parametrofactusecuencial.getnumero_digito_inicio().toString());
			this.jInternalFrameDetalleFormParametroFactuSecuencial.jTextFieldnumero_digito_finParametroFactuSecuencial.setText(parametrofactusecuencial.getnumero_digito_fin().toString());
			this.jInternalFrameDetalleFormParametroFactuSecuencial.jTextFieldnumero_dias_plazoParametroFactuSecuencial.setText(parametrofactusecuencial.getnumero_dias_plazo().toString());
			this.jInternalFrameDetalleFormParametroFactuSecuencial.jCheckBoxcon_detalleParametroFactuSecuencial.setSelected(parametrofactusecuencial.getcon_detalle());
			this.jInternalFrameDetalleFormParametroFactuSecuencial.jCheckBoxcon_lectorParametroFactuSecuencial.setSelected(parametrofactusecuencial.getcon_lector());
			this.jInternalFrameDetalleFormParametroFactuSecuencial.jCheckBoxcon_transferenciaParametroFactuSecuencial.setSelected(parametrofactusecuencial.getcon_transferencia());
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroFactuSecuencialConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesObjetoBeanActualToFormularioParametroFactuSecuencial(ParametroFactuSecuencialBean parametrofactusecuencialBean) throws Exception { 
		try {
			
			this.jInternalFrameDetalleFormParametroFactuSecuencial.jLabelidParametroFactuSecuencial.setText(parametrofactusecuencialBean.getId().toString());
			this.jInternalFrameDetalleFormParametroFactuSecuencial.jTextFieldsecuencialParametroFactuSecuencial.setText(parametrofactusecuencialBean.getsecuencial());
			this.jInternalFrameDetalleFormParametroFactuSecuencial.jTextFieldnumero_digitosParametroFactuSecuencial.setText(parametrofactusecuencialBean.getnumero_digitos().toString());
			this.jInternalFrameDetalleFormParametroFactuSecuencial.jTextFieldnumero_itemsParametroFactuSecuencial.setText(parametrofactusecuencialBean.getnumero_items().toString());
			this.jInternalFrameDetalleFormParametroFactuSecuencial.jTextFieldnumero_descuentoParametroFactuSecuencial.setText(parametrofactusecuencialBean.getnumero_descuento().toString());
			this.jInternalFrameDetalleFormParametroFactuSecuencial.jTextFieldnumero_adiicionalesParametroFactuSecuencial.setText(parametrofactusecuencialBean.getnumero_adiicionales().toString());
			this.jInternalFrameDetalleFormParametroFactuSecuencial.jTextFieldnumero_digito_inicioParametroFactuSecuencial.setText(parametrofactusecuencialBean.getnumero_digito_inicio().toString());
			this.jInternalFrameDetalleFormParametroFactuSecuencial.jTextFieldnumero_digito_finParametroFactuSecuencial.setText(parametrofactusecuencialBean.getnumero_digito_fin().toString());
			this.jInternalFrameDetalleFormParametroFactuSecuencial.jTextFieldnumero_dias_plazoParametroFactuSecuencial.setText(parametrofactusecuencialBean.getnumero_dias_plazo().toString());
			this.jInternalFrameDetalleFormParametroFactuSecuencial.jCheckBoxcon_detalleParametroFactuSecuencial.setSelected(parametrofactusecuencialBean.getcon_detalle());
			this.jInternalFrameDetalleFormParametroFactuSecuencial.jCheckBoxcon_lectorParametroFactuSecuencial.setSelected(parametrofactusecuencialBean.getcon_lector());
			this.jInternalFrameDetalleFormParametroFactuSecuencial.jCheckBoxcon_transferenciaParametroFactuSecuencial.setSelected(parametrofactusecuencialBean.getcon_transferencia());
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroFactuSecuencialConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesObjetoReturnGeneralToBeanParametroFactuSecuencial(ParametroFactuSecuencialParameterReturnGeneral parametrofactusecuencialReturnGeneral,ParametroFactuSecuencialBean parametrofactusecuencialBean,Boolean conDefault) throws Exception { 
		try {
			ParametroFactuSecuencial parametrofactusecuencialLocal=new ParametroFactuSecuencial();
			
			parametrofactusecuencialLocal=parametrofactusecuencialReturnGeneral.getParametroFactuSecuencial();
			
			
			if(conColumnasBase) {if(conDefault || (!conDefault && parametrofactusecuencialLocal.getId()!=null && !parametrofactusecuencialLocal.getId().equals(0L))) {parametrofactusecuencialBean.setId(parametrofactusecuencialLocal.getId());}}
			if(conDefault || (!conDefault && parametrofactusecuencialLocal.getid_tipo_documento_general()!=null && !parametrofactusecuencialLocal.getid_tipo_documento_general().equals(-1L))) {parametrofactusecuencialBean.setid_tipo_documento_general(parametrofactusecuencialLocal.getid_tipo_documento_general());}
			if(conDefault || (!conDefault && parametrofactusecuencialLocal.getsecuencial()!=null && !parametrofactusecuencialLocal.getsecuencial().equals(""))) {parametrofactusecuencialBean.setsecuencial(parametrofactusecuencialLocal.getsecuencial());}
			if(conDefault || (!conDefault && parametrofactusecuencialLocal.getnumero_digitos()!=null && !parametrofactusecuencialLocal.getnumero_digitos().equals(0))) {parametrofactusecuencialBean.setnumero_digitos(parametrofactusecuencialLocal.getnumero_digitos());}
			if(conDefault || (!conDefault && parametrofactusecuencialLocal.getnumero_items()!=null && !parametrofactusecuencialLocal.getnumero_items().equals(0))) {parametrofactusecuencialBean.setnumero_items(parametrofactusecuencialLocal.getnumero_items());}
			if(conDefault || (!conDefault && parametrofactusecuencialLocal.getnumero_descuento()!=null && !parametrofactusecuencialLocal.getnumero_descuento().equals(0))) {parametrofactusecuencialBean.setnumero_descuento(parametrofactusecuencialLocal.getnumero_descuento());}
			if(conDefault || (!conDefault && parametrofactusecuencialLocal.getnumero_adiicionales()!=null && !parametrofactusecuencialLocal.getnumero_adiicionales().equals(0))) {parametrofactusecuencialBean.setnumero_adiicionales(parametrofactusecuencialLocal.getnumero_adiicionales());}
			if(conDefault || (!conDefault && parametrofactusecuencialLocal.getnumero_digito_inicio()!=null && !parametrofactusecuencialLocal.getnumero_digito_inicio().equals(0))) {parametrofactusecuencialBean.setnumero_digito_inicio(parametrofactusecuencialLocal.getnumero_digito_inicio());}
			if(conDefault || (!conDefault && parametrofactusecuencialLocal.getnumero_digito_fin()!=null && !parametrofactusecuencialLocal.getnumero_digito_fin().equals(0))) {parametrofactusecuencialBean.setnumero_digito_fin(parametrofactusecuencialLocal.getnumero_digito_fin());}
			if(conDefault || (!conDefault && parametrofactusecuencialLocal.getnumero_dias_plazo()!=null && !parametrofactusecuencialLocal.getnumero_dias_plazo().equals(0))) {parametrofactusecuencialBean.setnumero_dias_plazo(parametrofactusecuencialLocal.getnumero_dias_plazo());}
			if(conDefault || (!conDefault && parametrofactusecuencialLocal.getcon_detalle()!=null && !parametrofactusecuencialLocal.getcon_detalle().equals(false))) {parametrofactusecuencialBean.setcon_detalle(parametrofactusecuencialLocal.getcon_detalle());}
			if(conDefault || (!conDefault && parametrofactusecuencialLocal.getcon_lector()!=null && !parametrofactusecuencialLocal.getcon_lector().equals(false))) {parametrofactusecuencialBean.setcon_lector(parametrofactusecuencialLocal.getcon_lector());}
			if(conDefault || (!conDefault && parametrofactusecuencialLocal.getid_bodega()!=null && !parametrofactusecuencialLocal.getid_bodega().equals(-1L))) {parametrofactusecuencialBean.setid_bodega(parametrofactusecuencialLocal.getid_bodega());}
			if(conDefault || (!conDefault && parametrofactusecuencialLocal.getid_tipo_param_factu_plazo()!=null && !parametrofactusecuencialLocal.getid_tipo_param_factu_plazo().equals(-1L))) {parametrofactusecuencialBean.setid_tipo_param_factu_plazo(parametrofactusecuencialLocal.getid_tipo_param_factu_plazo());}
			if(conDefault || (!conDefault && parametrofactusecuencialLocal.getid_formato()!=null && !parametrofactusecuencialLocal.getid_formato().equals(-1L))) {parametrofactusecuencialBean.setid_formato(parametrofactusecuencialLocal.getid_formato());}
			if(conDefault || (!conDefault && parametrofactusecuencialLocal.getcon_transferencia()!=null && !parametrofactusecuencialLocal.getcon_transferencia().equals(false))) {parametrofactusecuencialBean.setcon_transferencia(parametrofactusecuencialLocal.getcon_transferencia());}
			if(conDefault || (!conDefault && parametrofactusecuencialLocal.getid_bodega_transferencia()!=null && !parametrofactusecuencialLocal.getid_bodega_transferencia().equals(-1L))) {parametrofactusecuencialBean.setid_bodega_transferencia(parametrofactusecuencialLocal.getid_bodega_transferencia());}
			if(conDefault || (!conDefault && parametrofactusecuencialLocal.getid_transaccion_transferencia()!=null && !parametrofactusecuencialLocal.getid_transaccion_transferencia().equals(-1L))) {parametrofactusecuencialBean.setid_transaccion_transferencia(parametrofactusecuencialLocal.getid_transaccion_transferencia());}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroFactuSecuencialConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	@SuppressWarnings("rawtypes")
	public static void setActualComboBoxParametroFactuSecuencialGenerico(Long idParametroFactuSecuencialSeleccionado,JComboBox jComboBoxParametroFactuSecuencial,List<ParametroFactuSecuencial> parametrofactusecuencialsLocal)throws Exception {
		try {
			ParametroFactuSecuencial  parametrofactusecuencialTemp=null;

			for(ParametroFactuSecuencial parametrofactusecuencialAux:parametrofactusecuencialsLocal) {
				if(parametrofactusecuencialAux.getId()!=null && parametrofactusecuencialAux.getId().equals(idParametroFactuSecuencialSeleccionado)) {
					parametrofactusecuencialTemp=parametrofactusecuencialAux;
					break;
				}
			}

			jComboBoxParametroFactuSecuencial.setSelectedItem(parametrofactusecuencialTemp);

		} catch(Exception e) {
			throw e;
		}
	}
	
	@SuppressWarnings("rawtypes")
	public static void setHotKeysComboBoxParametroFactuSecuencialGenerico(JComboBox jComboBoxParametroFactuSecuencial,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda)throws Exception {
		try {
			//GLOBAL(id_empresa,id_sucursal,id_ejercicio)
			//BASICO(normal)
			//CON_BUSQUEDA(Permite buscar Fk)
			
			String sKeyStrokeName="";
			KeyStroke keyStrokeControl=null;
			
			if(!sTipoBusqueda.equals("GLOBAL")) {
				
				//BUSCAR
				sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_BUSCAR");
				keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_BUSCAR");
				
				jComboBoxParametroFactuSecuencial.getInputMap().put(keyStrokeControl, sKeyStrokeName);
				jComboBoxParametroFactuSecuencial.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction+"Busqueda"));
				//BUSCAR
				
				
				//ACTUALIZAR
				sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_ACTUALIZAR");
				keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_ACTUALIZAR");
				
				jComboBoxParametroFactuSecuencial.getInputMap().put(keyStrokeControl, sKeyStrokeName);
				jComboBoxParametroFactuSecuencial.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction+"Update"));
				//ACTUALIZAR
				
				if(sTipoBusqueda.contains("CON_EVENT_CHANGE")) {
					if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
						jComboBoxParametroFactuSecuencial.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
						jComboBoxParametroFactuSecuencial.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));						
					}
					
					/*
					if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
						jComboBoxParametroFactuSecuencial.addItemListener(new ComboBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
					} else {
						jComboBoxParametroFactuSecuencial.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
					}
					*/
				}								
				
				//CON_BUSQUEDA								
				if(sTipoBusqueda.contains("CON_BUSQUEDA")) {
					sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_BUSQUEDA");
					keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_BUSQUEDA");
							
					jComboBoxParametroFactuSecuencial.getInputMap().put(keyStrokeControl, sKeyStrokeName);
					jComboBoxParametroFactuSecuencial.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction));
				}
				//CON_BUSQUEDA
				
				
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	@SuppressWarnings("rawtypes")
	public void setHotKeysComboBoxGenerico(JComboBox jComboBox,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		if(sTipoBusqueda.contains("CON_EVENT_CHANGE")) {
			if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
				jComboBox.addItemListener(new ComboBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
				jComboBox.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
			} else {
				jComboBox.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
				jComboBox.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
			}
		}
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJTextFieldGenerico(JTextField jTextField,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jTextField.addFocusListener(new TextFieldFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		jTextField.addActionListener(new TextFieldActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJTextAreaGenerico(JTextArea jTextArea,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jTextArea.addFocusListener(new TextAreaFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//NO EXISTE
		//jTextArea.addActionListener(new TextAreaActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJLabelGenerico(JLabel jLabel,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jLabel.addFocusListener(new LabelFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//NO EXISTE
		//jLabel.addActionListener(new LabelActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJCheckBoxGenerico(JCheckBox jCheckBox,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jCheckBox.addFocusListener(new CheckBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//SI SE DEFINE AL CAMBIAR VALOR, ESTE NUEVO VALOR NO SE ENVIA AL EVENTO
		//jCheckBox.addItemListener(new CheckBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJDateChooserGenerico(JDateChooser jDateChooser,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		FuncionesSwing.addDateListener(jDateChooser, jInternalFrameBase, sNombreHotKeyAbstractAction);
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJButtonGenerico(JButton jButton,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jButton.addActionListener(new ButtonActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	public void jButtonRelacionActionPerformed(String sTipo,ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado) {
		//ABRIR RELACIONES
		try {
			
		} catch (Exception e) {
			FuncionesSwing.manageException2(this, e,logger,ParametroFactuSecuencialConstantesFunciones.CLASSNAME);
		}
	}
	
	public String getDescripcionFk(String sTipo,JTable table,Object value,int intSelectedRow) throws Exception {
		//DESCRIPCIONES FK		
		String sDescripcion="";
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			parametrofactusecuencial=(ParametroFactuSecuencial) parametrofactusecuencialLogic.getParametroFactuSecuencials().toArray()[table.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE) {
			parametrofactusecuencial =(ParametroFactuSecuencial) parametrofactusecuencials.toArray()[table.convertRowIndexToModel(intSelectedRow)];
		}
					
		
		if(sTipo.equals("Empresa")) {
			//sDescripcion=this.getActualEmpresaForeignKeyDescripcion((Long)value);
			if(!parametrofactusecuencial.getIsNew() && !parametrofactusecuencial.getIsChanged() && !parametrofactusecuencial.getIsDeleted()) {
				sDescripcion=parametrofactusecuencial.getempresa_descripcion();
			} else {
				//sDescripcion=this.getActualEmpresaForeignKeyDescripcion((Long)value);
				sDescripcion=parametrofactusecuencial.getempresa_descripcion();
			}
		}

		if(sTipo.equals("Sucursal")) {
			//sDescripcion=this.getActualSucursalForeignKeyDescripcion((Long)value);
			if(!parametrofactusecuencial.getIsNew() && !parametrofactusecuencial.getIsChanged() && !parametrofactusecuencial.getIsDeleted()) {
				sDescripcion=parametrofactusecuencial.getsucursal_descripcion();
			} else {
				//sDescripcion=this.getActualSucursalForeignKeyDescripcion((Long)value);
				sDescripcion=parametrofactusecuencial.getsucursal_descripcion();
			}
		}

		if(sTipo.equals("TipoDocumentoGeneral")) {
			//sDescripcion=this.getActualTipoDocumentoGeneralForeignKeyDescripcion((Long)value);
			if(!parametrofactusecuencial.getIsNew() && !parametrofactusecuencial.getIsChanged() && !parametrofactusecuencial.getIsDeleted()) {
				sDescripcion=parametrofactusecuencial.gettipodocumentogeneral_descripcion();
			} else {
				//sDescripcion=this.getActualTipoDocumentoGeneralForeignKeyDescripcion((Long)value);
				sDescripcion=parametrofactusecuencial.gettipodocumentogeneral_descripcion();
			}
		}

		if(sTipo.equals("Bodega")) {
			//sDescripcion=this.getActualBodegaForeignKeyDescripcion((Long)value);
			if(!parametrofactusecuencial.getIsNew() && !parametrofactusecuencial.getIsChanged() && !parametrofactusecuencial.getIsDeleted()) {
				sDescripcion=parametrofactusecuencial.getbodega_descripcion();
			} else {
				//sDescripcion=this.getActualBodegaForeignKeyDescripcion((Long)value);
				sDescripcion=parametrofactusecuencial.getbodega_descripcion();
			}
		}

		if(sTipo.equals("TipoParamFactuPlazo")) {
			//sDescripcion=this.getActualTipoParamFactuPlazoForeignKeyDescripcion((Long)value);
			if(!parametrofactusecuencial.getIsNew() && !parametrofactusecuencial.getIsChanged() && !parametrofactusecuencial.getIsDeleted()) {
				sDescripcion=parametrofactusecuencial.gettipoparamfactuplazo_descripcion();
			} else {
				//sDescripcion=this.getActualTipoParamFactuPlazoForeignKeyDescripcion((Long)value);
				sDescripcion=parametrofactusecuencial.gettipoparamfactuplazo_descripcion();
			}
		}

		if(sTipo.equals("Formato")) {
			//sDescripcion=this.getActualFormatoForeignKeyDescripcion((Long)value);
			if(!parametrofactusecuencial.getIsNew() && !parametrofactusecuencial.getIsChanged() && !parametrofactusecuencial.getIsDeleted()) {
				sDescripcion=parametrofactusecuencial.getformato_descripcion();
			} else {
				//sDescripcion=this.getActualFormatoForeignKeyDescripcion((Long)value);
				sDescripcion=parametrofactusecuencial.getformato_descripcion();
			}
		}

		if(sTipo.equals("BodegaTransferencia")) {
			//sDescripcion=this.getActualBodegaTransferenciaForeignKeyDescripcion((Long)value);
			if(!parametrofactusecuencial.getIsNew() && !parametrofactusecuencial.getIsChanged() && !parametrofactusecuencial.getIsDeleted()) {
				sDescripcion=parametrofactusecuencial.getbodegatransferencia_descripcion();
			} else {
				//sDescripcion=this.getActualBodegaTransferenciaForeignKeyDescripcion((Long)value);
				sDescripcion=parametrofactusecuencial.getbodegatransferencia_descripcion();
			}
		}

		if(sTipo.equals("TransaccionTransferencia")) {
			//sDescripcion=this.getActualTransaccionTransferenciaForeignKeyDescripcion((Long)value);
			if(!parametrofactusecuencial.getIsNew() && !parametrofactusecuencial.getIsChanged() && !parametrofactusecuencial.getIsDeleted()) {
				sDescripcion=parametrofactusecuencial.gettransacciontransferencia_descripcion();
			} else {
				//sDescripcion=this.getActualTransaccionTransferenciaForeignKeyDescripcion((Long)value);
				sDescripcion=parametrofactusecuencial.gettransacciontransferencia_descripcion();
			}
		}

		
		return sDescripcion;
	}
	
	public Color getColorFk(String sTipo,JTable table,Object value,int intSelectedRow) throws Exception {
		//DESCRIPCIONES FK		
		Color color=Color.WHITE;
		
		ParametroFactuSecuencial parametrofactusecuencialRow=new ParametroFactuSecuencial();
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			parametrofactusecuencialRow=(ParametroFactuSecuencial) parametrofactusecuencialLogic.getParametroFactuSecuencials().toArray()[table.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE) {
			parametrofactusecuencialRow=(ParametroFactuSecuencial) parametrofactusecuencials.toArray()[table.convertRowIndexToModel(intSelectedRow)];
		}
					
		
		
		return color;
	}
	
	
	
	
	
	
	
	public void refrescarBindingTabla(Boolean blnSoloTabla) {
	}
	
	public void inicializarActualizarBindingBotonesManualParametroFactuSecuencial(Boolean esSetControles) {						
		if(esSetControles) {
			this.jButtonNuevoParametroFactuSecuencial.setVisible((this.isVisibilidadCeldaNuevoParametroFactuSecuencial && this.isPermisoNuevoParametroFactuSecuencial));			
			this.jButtonDuplicarParametroFactuSecuencial.setVisible((this.isVisibilidadCeldaDuplicarParametroFactuSecuencial && this.isPermisoDuplicarParametroFactuSecuencial));			
			this.jButtonCopiarParametroFactuSecuencial.setVisible((this.isVisibilidadCeldaCopiarParametroFactuSecuencial && this.isPermisoCopiarParametroFactuSecuencial));
			this.jButtonVerFormParametroFactuSecuencial.setVisible((this.isVisibilidadCeldaVerFormParametroFactuSecuencial && this.isPermisoVerFormParametroFactuSecuencial));
			
			this.jButtonAbrirOrderByParametroFactuSecuencial.setVisible((this.isVisibilidadCeldaOrdenParametroFactuSecuencial && this.isPermisoOrdenParametroFactuSecuencial));			
			
			this.jButtonNuevoRelacionesParametroFactuSecuencial.setVisible((this.isVisibilidadCeldaNuevoRelacionesParametroFactuSecuencial && this.isPermisoNuevoParametroFactuSecuencial));			
			this.jButtonNuevoGuardarCambiosParametroFactuSecuencial.setVisible((this.isVisibilidadCeldaNuevoParametroFactuSecuencial && this.isPermisoNuevoParametroFactuSecuencial && this.isPermisoGuardarCambiosParametroFactuSecuencial));
			
			if(this.jInternalFrameDetalleFormParametroFactuSecuencial!=null) {
			this.jInternalFrameDetalleFormParametroFactuSecuencial.jButtonModificarParametroFactuSecuencial.setVisible((this.isVisibilidadCeldaModificarParametroFactuSecuencial && this.isPermisoActualizarParametroFactuSecuencial));	
			this.jInternalFrameDetalleFormParametroFactuSecuencial.jButtonActualizarParametroFactuSecuencial.setVisible((this.isVisibilidadCeldaActualizarParametroFactuSecuencial && this.isPermisoActualizarParametroFactuSecuencial));	
			this.jInternalFrameDetalleFormParametroFactuSecuencial.jButtonEliminarParametroFactuSecuencial.setVisible((this.isVisibilidadCeldaEliminarParametroFactuSecuencial && this.isPermisoEliminarParametroFactuSecuencial));
			this.jInternalFrameDetalleFormParametroFactuSecuencial.jButtonCancelarParametroFactuSecuencial.setVisible(this.isVisibilidadCeldaCancelarParametroFactuSecuencial);							
			this.jInternalFrameDetalleFormParametroFactuSecuencial.jButtonGuardarCambiosParametroFactuSecuencial.setVisible((this.isVisibilidadCeldaGuardarParametroFactuSecuencial && this.isPermisoGuardarCambiosParametroFactuSecuencial));			
			
			}
						
			this.jButtonGuardarCambiosTablaParametroFactuSecuencial.setVisible((this.isVisibilidadCeldaGuardarCambiosParametroFactuSecuencial && this.isPermisoGuardarCambiosParametroFactuSecuencial));							
			
			//TOOLBAR
			
			this.jButtonNuevoToolBarParametroFactuSecuencial.setVisible((this.isVisibilidadCeldaNuevoParametroFactuSecuencial && this.isPermisoNuevoParametroFactuSecuencial));						
			this.jButtonDuplicarToolBarParametroFactuSecuencial.setVisible((this.isVisibilidadCeldaDuplicarParametroFactuSecuencial && this.isPermisoDuplicarParametroFactuSecuencial));						
			this.jButtonCopiarToolBarParametroFactuSecuencial.setVisible((this.isVisibilidadCeldaCopiarParametroFactuSecuencial && this.isPermisoCopiarParametroFactuSecuencial));			
			this.jButtonVerFormToolBarParametroFactuSecuencial.setVisible((this.isVisibilidadCeldaVerFormParametroFactuSecuencial && this.isPermisoVerFormParametroFactuSecuencial));			
			this.jButtonAbrirOrderByToolBarParametroFactuSecuencial.setVisible((this.isVisibilidadCeldaOrdenParametroFactuSecuencial && this.isPermisoOrdenParametroFactuSecuencial));
			this.jButtonNuevoRelacionesToolBarParametroFactuSecuencial.setVisible((this.isVisibilidadCeldaNuevoRelacionesParametroFactuSecuencial && this.isPermisoNuevoParametroFactuSecuencial));			
			this.jButtonNuevoGuardarCambiosToolBarParametroFactuSecuencial.setVisible((this.isVisibilidadCeldaNuevoParametroFactuSecuencial && this.isPermisoNuevoParametroFactuSecuencial && this.isPermisoGuardarCambiosParametroFactuSecuencial));			
			
			if(this.jInternalFrameDetalleFormParametroFactuSecuencial!=null) {
			this.jInternalFrameDetalleFormParametroFactuSecuencial.jButtonModificarToolBarParametroFactuSecuencial.setVisible((this.isVisibilidadCeldaModificarParametroFactuSecuencial && this.isPermisoActualizarParametroFactuSecuencial));	
			this.jInternalFrameDetalleFormParametroFactuSecuencial.jButtonActualizarToolBarParametroFactuSecuencial.setVisible((this.isVisibilidadCeldaActualizarParametroFactuSecuencial  && this.isPermisoActualizarParametroFactuSecuencial));	
			this.jInternalFrameDetalleFormParametroFactuSecuencial.jButtonEliminarToolBarParametroFactuSecuencial.setVisible((this.isVisibilidadCeldaEliminarParametroFactuSecuencial && this.isPermisoEliminarParametroFactuSecuencial));
			this.jInternalFrameDetalleFormParametroFactuSecuencial.jButtonCancelarToolBarParametroFactuSecuencial.setVisible(this.isVisibilidadCeldaCancelarParametroFactuSecuencial);				
			this.jInternalFrameDetalleFormParametroFactuSecuencial.jButtonGuardarCambiosToolBarParametroFactuSecuencial.setVisible((this.isVisibilidadCeldaGuardarParametroFactuSecuencial && this.isPermisoGuardarCambiosParametroFactuSecuencial));									
			}
			
			this.jButtonGuardarCambiosTablaToolBarParametroFactuSecuencial.setVisible((this.isVisibilidadCeldaGuardarCambiosParametroFactuSecuencial && this.isPermisoGuardarCambiosParametroFactuSecuencial));									
			
			//TOOLBAR
			
			//MENUS
			
			this.jMenuItemNuevoParametroFactuSecuencial.setVisible((this.isVisibilidadCeldaNuevoParametroFactuSecuencial && this.isPermisoNuevoParametroFactuSecuencial));			
			this.jMenuItemDuplicarParametroFactuSecuencial.setVisible((this.isVisibilidadCeldaDuplicarParametroFactuSecuencial && this.isPermisoDuplicarParametroFactuSecuencial));			
			this.jMenuItemCopiarParametroFactuSecuencial.setVisible((this.isVisibilidadCeldaCopiarParametroFactuSecuencial && this.isPermisoCopiarParametroFactuSecuencial));			
			this.jMenuItemVerFormParametroFactuSecuencial.setVisible((this.isVisibilidadCeldaVerFormParametroFactuSecuencial && this.isPermisoVerFormParametroFactuSecuencial));			
			this.jMenuItemAbrirOrderByParametroFactuSecuencial.setVisible((this.isVisibilidadCeldaOrdenParametroFactuSecuencial && this.isPermisoOrdenParametroFactuSecuencial));			
			//this.jMenuItemMostrarOcultarParametroFactuSecuencial.setVisible((this.isVisibilidadCeldaOrdenParametroFactuSecuencial && this.isPermisoOrdenParametroFactuSecuencial));
			this.jMenuItemDetalleAbrirOrderByParametroFactuSecuencial.setVisible((this.isVisibilidadCeldaOrdenParametroFactuSecuencial && this.isPermisoOrdenParametroFactuSecuencial));			
			//this.jMenuItemDetalleMostrarOcultarParametroFactuSecuencial.setVisible((this.isVisibilidadCeldaOrdenParametroFactuSecuencial && this.isPermisoOrdenParametroFactuSecuencial));			
			this.jMenuItemNuevoRelacionesParametroFactuSecuencial.setVisible((this.isVisibilidadCeldaNuevoRelacionesParametroFactuSecuencial && this.isPermisoNuevoParametroFactuSecuencial));			
			this.jMenuItemNuevoGuardarCambiosParametroFactuSecuencial.setVisible((this.isVisibilidadCeldaNuevoParametroFactuSecuencial && this.isPermisoNuevoParametroFactuSecuencial && this.isPermisoGuardarCambiosParametroFactuSecuencial));									
			
			if(this.jInternalFrameDetalleFormParametroFactuSecuencial!=null) {
			this.jInternalFrameDetalleFormParametroFactuSecuencial.jMenuItemModificarParametroFactuSecuencial.setVisible((this.isVisibilidadCeldaModificarParametroFactuSecuencial && this.isPermisoActualizarParametroFactuSecuencial));	
			this.jInternalFrameDetalleFormParametroFactuSecuencial.jMenuItemActualizarParametroFactuSecuencial.setVisible((this.isVisibilidadCeldaActualizarParametroFactuSecuencial && this.isPermisoActualizarParametroFactuSecuencial));	
			this.jInternalFrameDetalleFormParametroFactuSecuencial.jMenuItemEliminarParametroFactuSecuencial.setVisible((this.isVisibilidadCeldaEliminarParametroFactuSecuencial && this.isPermisoEliminarParametroFactuSecuencial));
			this.jInternalFrameDetalleFormParametroFactuSecuencial.jMenuItemCancelarParametroFactuSecuencial.setVisible(this.isVisibilidadCeldaCancelarParametroFactuSecuencial);				
			}
			
			this.jMenuItemGuardarCambiosParametroFactuSecuencial.setVisible((this.isVisibilidadCeldaGuardarParametroFactuSecuencial && this.isPermisoGuardarCambiosParametroFactuSecuencial));						
			this.jMenuItemGuardarCambiosTablaParametroFactuSecuencial.setVisible((this.isVisibilidadCeldaGuardarCambiosParametroFactuSecuencial && this.isPermisoGuardarCambiosParametroFactuSecuencial));						
			
			//MENUS
			
		} else {
			this.isVisibilidadCeldaNuevoParametroFactuSecuencial=this.jButtonNuevoParametroFactuSecuencial.isVisible();
			this.isVisibilidadCeldaDuplicarParametroFactuSecuencial=this.jButtonDuplicarParametroFactuSecuencial.isVisible();
			this.isVisibilidadCeldaCopiarParametroFactuSecuencial=this.jButtonCopiarParametroFactuSecuencial.isVisible();
			this.isVisibilidadCeldaVerFormParametroFactuSecuencial=this.jButtonVerFormParametroFactuSecuencial.isVisible();
			
			this.isVisibilidadCeldaOrdenParametroFactuSecuencial=this.jButtonAbrirOrderByParametroFactuSecuencial.isVisible();			
			
			this.isVisibilidadCeldaNuevoRelacionesParametroFactuSecuencial=this.jButtonNuevoRelacionesParametroFactuSecuencial.isVisible();
			this.isVisibilidadCeldaModificarParametroFactuSecuencial=this.jButtonModificarParametroFactuSecuencial.isVisible();
			
			if(this.jInternalFrameDetalleFormParametroFactuSecuencial!=null) {
			this.isVisibilidadCeldaActualizarParametroFactuSecuencial=this.jInternalFrameDetalleFormParametroFactuSecuencial.jButtonActualizarParametroFactuSecuencial.isVisible();
			this.isVisibilidadCeldaEliminarParametroFactuSecuencial=this.jInternalFrameDetalleFormParametroFactuSecuencial.jButtonEliminarParametroFactuSecuencial.isVisible();
			this.isVisibilidadCeldaCancelarParametroFactuSecuencial=this.jInternalFrameDetalleFormParametroFactuSecuencial.jButtonCancelarParametroFactuSecuencial.isVisible();
			this.isVisibilidadCeldaGuardarParametroFactuSecuencial=this.jInternalFrameDetalleFormParametroFactuSecuencial.jButtonGuardarCambiosParametroFactuSecuencial.isVisible();			
			}
			
			this.isVisibilidadCeldaGuardarCambiosParametroFactuSecuencial=this.jButtonGuardarCambiosTablaParametroFactuSecuencial.isVisible();
			
			//TOOLBAR
			
			this.isVisibilidadCeldaNuevoParametroFactuSecuencial=this.jButtonNuevoToolBarParametroFactuSecuencial.isVisible();
			this.isVisibilidadCeldaNuevoRelacionesParametroFactuSecuencial=this.jButtonNuevoRelacionesToolBarParametroFactuSecuencial.isVisible();
			
			if(this.jInternalFrameDetalleFormParametroFactuSecuencial!=null) {
			this.isVisibilidadCeldaModificarParametroFactuSecuencial=this.jInternalFrameDetalleFormParametroFactuSecuencial.jButtonModificarToolBarParametroFactuSecuencial.isVisible();
			this.isVisibilidadCeldaActualizarParametroFactuSecuencial=this.jInternalFrameDetalleFormParametroFactuSecuencial.jButtonActualizarToolBarParametroFactuSecuencial.isVisible();
			this.isVisibilidadCeldaEliminarParametroFactuSecuencial=this.jInternalFrameDetalleFormParametroFactuSecuencial.jButtonEliminarToolBarParametroFactuSecuencial.isVisible();
			this.isVisibilidadCeldaCancelarParametroFactuSecuencial=this.jInternalFrameDetalleFormParametroFactuSecuencial.jButtonCancelarToolBarParametroFactuSecuencial.isVisible();
			}
			
			this.isVisibilidadCeldaGuardarParametroFactuSecuencial=this.jButtonGuardarCambiosToolBarParametroFactuSecuencial.isVisible();
			this.isVisibilidadCeldaGuardarCambiosParametroFactuSecuencial=this.jButtonGuardarCambiosTablaToolBarParametroFactuSecuencial.isVisible();						
			
			//TOOLBAR
			
			//MENUS
			
			this.isVisibilidadCeldaNuevoParametroFactuSecuencial=this.jMenuItemNuevoParametroFactuSecuencial.isVisible();
			this.isVisibilidadCeldaNuevoRelacionesParametroFactuSecuencial=this.jMenuItemNuevoRelacionesParametroFactuSecuencial.isVisible();
			
			if(this.jInternalFrameDetalleFormParametroFactuSecuencial!=null) {
			this.isVisibilidadCeldaModificarParametroFactuSecuencial=this.jInternalFrameDetalleFormParametroFactuSecuencial.jMenuItemModificarParametroFactuSecuencial.isVisible();
			this.isVisibilidadCeldaActualizarParametroFactuSecuencial=this.jInternalFrameDetalleFormParametroFactuSecuencial.jMenuItemActualizarParametroFactuSecuencial.isVisible();
			this.isVisibilidadCeldaEliminarParametroFactuSecuencial=this.jInternalFrameDetalleFormParametroFactuSecuencial.jMenuItemEliminarParametroFactuSecuencial.isVisible();
			this.isVisibilidadCeldaCancelarParametroFactuSecuencial=this.jInternalFrameDetalleFormParametroFactuSecuencial.jMenuItemCancelarParametroFactuSecuencial.isVisible();
			}
			
			this.isVisibilidadCeldaGuardarParametroFactuSecuencial=this.jMenuItemGuardarCambiosParametroFactuSecuencial.isVisible();
			this.isVisibilidadCeldaGuardarCambiosParametroFactuSecuencial=this.jMenuItemGuardarCambiosTablaParametroFactuSecuencial.isVisible();						
			
			//MENUS
		}
	}
	
	public void inicializarActualizarBindingBotonesParametroFactuSecuencial(Boolean esInicializar) {
		if(ParametroFactuSecuencialJInternalFrame.ISBINDING_MANUAL) {			
			if(this.parametrofactusecuencialSessionBean.getConGuardarRelaciones()) {
				//if(this.parametrofactusecuencialSessionBean.getEsGuardarRelacionado()) {
				
				this.actualizarEstadoCeldasBotonesConGuardarRelacionesParametroFactuSecuencial();
			}
			
			this.inicializarActualizarBindingBotonesManualParametroFactuSecuencial(true);
			
		} else {	
		}
	}		
	
	public void inicializarActualizarBindingBotonesPermisosManualParametroFactuSecuencial() {
		this.jButtonNuevoParametroFactuSecuencial.setVisible(this.isPermisoNuevoParametroFactuSecuencial);			
		this.jButtonDuplicarParametroFactuSecuencial.setVisible(this.isPermisoDuplicarParametroFactuSecuencial);			
		this.jButtonCopiarParametroFactuSecuencial.setVisible(this.isPermisoCopiarParametroFactuSecuencial);			
		this.jButtonVerFormParametroFactuSecuencial.setVisible(this.isPermisoVerFormParametroFactuSecuencial);			
		
		this.jButtonAbrirOrderByParametroFactuSecuencial.setVisible(this.isPermisoOrdenParametroFactuSecuencial);					
		
		this.jButtonNuevoRelacionesParametroFactuSecuencial.setVisible(this.isPermisoNuevoParametroFactuSecuencial);			
		
		if(this.jInternalFrameDetalleFormParametroFactuSecuencial!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormParametroFactuSecuencial.jButtonModificarParametroFactuSecuencial.setVisible(this.isPermisoActualizarParametroFactuSecuencial);	
			this.jInternalFrameDetalleFormParametroFactuSecuencial.jButtonActualizarParametroFactuSecuencial.setVisible(this.isPermisoActualizarParametroFactuSecuencial);	
			this.jInternalFrameDetalleFormParametroFactuSecuencial.jButtonEliminarParametroFactuSecuencial.setVisible(this.isPermisoEliminarParametroFactuSecuencial);
			this.jInternalFrameDetalleFormParametroFactuSecuencial.jButtonCancelarParametroFactuSecuencial.setVisible(this.isVisibilidadCeldaCancelarParametroFactuSecuencial);						
			this.jInternalFrameDetalleFormParametroFactuSecuencial.jButtonGuardarCambiosParametroFactuSecuencial.setVisible(this.isPermisoGuardarCambiosParametroFactuSecuencial);							
		}
		
		this.jButtonGuardarCambiosTablaParametroFactuSecuencial.setVisible(this.isPermisoActualizarParametroFactuSecuencial);
	}
	
	public void inicializarActualizarBindingBotonesPermisosManualFormDetalleParametroFactuSecuencial() {
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jButtonModificarParametroFactuSecuencial.setVisible(this.isPermisoActualizarParametroFactuSecuencial);	
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jButtonActualizarParametroFactuSecuencial.setVisible(this.isPermisoActualizarParametroFactuSecuencial);	
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jButtonEliminarParametroFactuSecuencial.setVisible(this.isPermisoEliminarParametroFactuSecuencial);
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jButtonCancelarParametroFactuSecuencial.setVisible(this.isVisibilidadCeldaCancelarParametroFactuSecuencial);							
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jButtonGuardarCambiosParametroFactuSecuencial.setVisible((this.isVisibilidadCeldaGuardarParametroFactuSecuencial && this.isPermisoGuardarCambiosParametroFactuSecuencial));			
	}
	
	public void inicializarActualizarBindingBotonesPermisosParametroFactuSecuencial() {
		if(ParametroFactuSecuencialJInternalFrame.ISBINDING_MANUAL) {
			this.inicializarActualizarBindingBotonesPermisosManualParametroFactuSecuencial();
		} else {
		}
	}
	
	
	public void refrescarBindingBotonesParametroFactuSecuencial() {
	}
	
	public void jTableDatosParametroFactuSecuencialListSelectionListener(javax.swing.event.ListSelectionEvent evt) throws Exception { 
		try {
			this.seleccionarParametroFactuSecuencial(null,evt,-1);
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroFactuSecuencialConstantesFunciones.CLASSNAME);
		}
	}
	
	
	public void jButtonidParametroFactuSecuencialBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactusecuencialLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroFactuSecuencial.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroFactuSecuencial(this.getparametrofactusecuencial(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuSecuencial(this.parametrofactusecuencial);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrofactusecuencial =(ParametroFactuSecuencial) this.parametrofactusecuencialLogic.getParametroFactuSecuencials().toArray()[this.jTableDatosParametroFactuSecuencial.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrofactusecuencial =(ParametroFactuSecuencial) this.parametrofactusecuencials.toArray()[this.jTableDatosParametroFactuSecuencial.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrofactusecuencial==null) {
						this.parametrofactusecuencial = new ParametroFactuSecuencial();
					}

					this.setVariablesFormularioToObjetoActualParametroFactuSecuencial(this.parametrofactusecuencial,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuSecuencial(this.parametrofactusecuencial);
				}

				if(this.parametrofactusecuencial.getId()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id = "+this.parametrofactusecuencial.getId().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroFactuSecuencial(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactusecuencialLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactusecuencialLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroFactuSecuencialConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactusecuencialLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_empresaParametroFactuSecuencialUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactusecuencialLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoempresa=true;

			idTienePermisoempresa=this.tienePermisosUsuarioEnPaginaWebParametroFactuSecuencial(EmpresaConstantesFunciones.CLASSNAME);

			if(idTienePermisoempresa) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroFactuSecuencial.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosParametroFactuSecuencial.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosParametroFactuSecuencial.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactusecuencial =(ParametroFactuSecuencial) this.parametrofactusecuencialLogic.getParametroFactuSecuencials().toArray()[this.jTableDatosParametroFactuSecuencial.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.parametrofactusecuencial =(ParametroFactuSecuencial) this.parametrofactusecuencials.toArray()[this.jTableDatosParametroFactuSecuencial.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualParametroFactuSecuencial(this.getparametrofactusecuencial(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuSecuencial(this.parametrofactusecuencial);

				this.empresaBeanSwingJInternalFrame=new EmpresaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.empresaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.empresaBeanSwingJInternalFrame.getEmpresaLogic().setConnexion(this.parametrofactusecuencialLogic.getConnexion());

				if(this.parametrofactusecuencial.getid_empresa()!=null) {
					this.empresaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.empresaBeanSwingJInternalFrame.setIdActual(this.parametrofactusecuencial.getid_empresa());
					this.empresaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.empresaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.empresaBeanSwingJInternalFrame.inicializarActualizarBindingTablaEmpresa();
				}

				JInternalFrameBase jinternalFrame =this.empresaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderParametroFactuSecuencial=(TitledBorder)this.jScrollPanelDatosParametroFactuSecuencial.getBorder();
				TitledBorder titledBorderempresa=(TitledBorder)this.empresaBeanSwingJInternalFrame.jScrollPanelDatosEmpresa.getBorder();

				titledBorderempresa.setTitle(titledBorderParametroFactuSecuencial.getTitle() + " -> Empresa");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactusecuencialLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactusecuencialLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroFactuSecuencialConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactusecuencialLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_empresaParametroFactuSecuencialBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactusecuencialLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroFactuSecuencial.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroFactuSecuencial(this.getparametrofactusecuencial(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuSecuencial(this.parametrofactusecuencial);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrofactusecuencial =(ParametroFactuSecuencial) this.parametrofactusecuencialLogic.getParametroFactuSecuencials().toArray()[this.jTableDatosParametroFactuSecuencial.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrofactusecuencial =(ParametroFactuSecuencial) this.parametrofactusecuencials.toArray()[this.jTableDatosParametroFactuSecuencial.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrofactusecuencial==null) {
						this.parametrofactusecuencial = new ParametroFactuSecuencial();
					}

					this.setVariablesFormularioToObjetoActualParametroFactuSecuencial(this.parametrofactusecuencial,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuSecuencial(this.parametrofactusecuencial);
				}

				if(this.parametrofactusecuencial.getid_empresa()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_empresa = "+this.parametrofactusecuencial.getid_empresa().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroFactuSecuencial(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactusecuencialLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactusecuencialLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroFactuSecuencialConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactusecuencialLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_sucursalParametroFactuSecuencialUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactusecuencialLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisosucursal=true;

			idTienePermisosucursal=this.tienePermisosUsuarioEnPaginaWebParametroFactuSecuencial(SucursalConstantesFunciones.CLASSNAME);

			if(idTienePermisosucursal) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroFactuSecuencial.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosParametroFactuSecuencial.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosParametroFactuSecuencial.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactusecuencial =(ParametroFactuSecuencial) this.parametrofactusecuencialLogic.getParametroFactuSecuencials().toArray()[this.jTableDatosParametroFactuSecuencial.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.parametrofactusecuencial =(ParametroFactuSecuencial) this.parametrofactusecuencials.toArray()[this.jTableDatosParametroFactuSecuencial.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualParametroFactuSecuencial(this.getparametrofactusecuencial(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuSecuencial(this.parametrofactusecuencial);

				this.sucursalBeanSwingJInternalFrame=new SucursalBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.sucursalBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.sucursalBeanSwingJInternalFrame.getSucursalLogic().setConnexion(this.parametrofactusecuencialLogic.getConnexion());

				if(this.parametrofactusecuencial.getid_sucursal()!=null) {
					this.sucursalBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.sucursalBeanSwingJInternalFrame.setIdActual(this.parametrofactusecuencial.getid_sucursal());
					this.sucursalBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.sucursalBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.sucursalBeanSwingJInternalFrame.inicializarActualizarBindingTablaSucursal();
				}

				JInternalFrameBase jinternalFrame =this.sucursalBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderParametroFactuSecuencial=(TitledBorder)this.jScrollPanelDatosParametroFactuSecuencial.getBorder();
				TitledBorder titledBordersucursal=(TitledBorder)this.sucursalBeanSwingJInternalFrame.jScrollPanelDatosSucursal.getBorder();

				titledBordersucursal.setTitle(titledBorderParametroFactuSecuencial.getTitle() + " -> Sucursal");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactusecuencialLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactusecuencialLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroFactuSecuencialConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactusecuencialLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_sucursalParametroFactuSecuencialBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactusecuencialLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroFactuSecuencial.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroFactuSecuencial(this.getparametrofactusecuencial(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuSecuencial(this.parametrofactusecuencial);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrofactusecuencial =(ParametroFactuSecuencial) this.parametrofactusecuencialLogic.getParametroFactuSecuencials().toArray()[this.jTableDatosParametroFactuSecuencial.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrofactusecuencial =(ParametroFactuSecuencial) this.parametrofactusecuencials.toArray()[this.jTableDatosParametroFactuSecuencial.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrofactusecuencial==null) {
						this.parametrofactusecuencial = new ParametroFactuSecuencial();
					}

					this.setVariablesFormularioToObjetoActualParametroFactuSecuencial(this.parametrofactusecuencial,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuSecuencial(this.parametrofactusecuencial);
				}

				if(this.parametrofactusecuencial.getid_sucursal()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_sucursal = "+this.parametrofactusecuencial.getid_sucursal().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroFactuSecuencial(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactusecuencialLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactusecuencialLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroFactuSecuencialConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactusecuencialLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_tipo_documento_generalParametroFactuSecuencialUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactusecuencialLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotipodocumentogeneral=true;

			idTienePermisotipodocumentogeneral=this.tienePermisosUsuarioEnPaginaWebParametroFactuSecuencial(TipoDocumentoGeneralConstantesFunciones.CLASSNAME);

			if(idTienePermisotipodocumentogeneral) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroFactuSecuencial.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosParametroFactuSecuencial.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosParametroFactuSecuencial.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactusecuencial =(ParametroFactuSecuencial) this.parametrofactusecuencialLogic.getParametroFactuSecuencials().toArray()[this.jTableDatosParametroFactuSecuencial.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.parametrofactusecuencial =(ParametroFactuSecuencial) this.parametrofactusecuencials.toArray()[this.jTableDatosParametroFactuSecuencial.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualParametroFactuSecuencial(this.getparametrofactusecuencial(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuSecuencial(this.parametrofactusecuencial);

				this.tipodocumentogeneralBeanSwingJInternalFrame=new TipoDocumentoGeneralBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.tipodocumentogeneralBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.tipodocumentogeneralBeanSwingJInternalFrame.getTipoDocumentoGeneralLogic().setConnexion(this.parametrofactusecuencialLogic.getConnexion());

				if(this.parametrofactusecuencial.getid_tipo_documento_general()!=null) {
					this.tipodocumentogeneralBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.tipodocumentogeneralBeanSwingJInternalFrame.setIdActual(this.parametrofactusecuencial.getid_tipo_documento_general());
					this.tipodocumentogeneralBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.tipodocumentogeneralBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.tipodocumentogeneralBeanSwingJInternalFrame.inicializarActualizarBindingTablaTipoDocumentoGeneral();
				}

				JInternalFrameBase jinternalFrame =this.tipodocumentogeneralBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderParametroFactuSecuencial=(TitledBorder)this.jScrollPanelDatosParametroFactuSecuencial.getBorder();
				TitledBorder titledBordertipodocumentogeneral=(TitledBorder)this.tipodocumentogeneralBeanSwingJInternalFrame.jScrollPanelDatosTipoDocumentoGeneral.getBorder();

				titledBordertipodocumentogeneral.setTitle(titledBorderParametroFactuSecuencial.getTitle() + " -> Tipo Documento General");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactusecuencialLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactusecuencialLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroFactuSecuencialConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactusecuencialLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_tipo_documento_generalParametroFactuSecuencialBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactusecuencialLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroFactuSecuencial.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroFactuSecuencial(this.getparametrofactusecuencial(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuSecuencial(this.parametrofactusecuencial);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrofactusecuencial =(ParametroFactuSecuencial) this.parametrofactusecuencialLogic.getParametroFactuSecuencials().toArray()[this.jTableDatosParametroFactuSecuencial.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrofactusecuencial =(ParametroFactuSecuencial) this.parametrofactusecuencials.toArray()[this.jTableDatosParametroFactuSecuencial.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrofactusecuencial==null) {
						this.parametrofactusecuencial = new ParametroFactuSecuencial();
					}

					this.setVariablesFormularioToObjetoActualParametroFactuSecuencial(this.parametrofactusecuencial,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuSecuencial(this.parametrofactusecuencial);
				}

				if(this.parametrofactusecuencial.getid_tipo_documento_general()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_tipo_documento_general = "+this.parametrofactusecuencial.getid_tipo_documento_general().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroFactuSecuencial(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactusecuencialLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactusecuencialLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroFactuSecuencialConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactusecuencialLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonsecuencialParametroFactuSecuencialBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactusecuencialLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroFactuSecuencial.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroFactuSecuencial(this.getparametrofactusecuencial(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuSecuencial(this.parametrofactusecuencial);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrofactusecuencial =(ParametroFactuSecuencial) this.parametrofactusecuencialLogic.getParametroFactuSecuencials().toArray()[this.jTableDatosParametroFactuSecuencial.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrofactusecuencial =(ParametroFactuSecuencial) this.parametrofactusecuencials.toArray()[this.jTableDatosParametroFactuSecuencial.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrofactusecuencial==null) {
						this.parametrofactusecuencial = new ParametroFactuSecuencial();
					}

					this.setVariablesFormularioToObjetoActualParametroFactuSecuencial(this.parametrofactusecuencial,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuSecuencial(this.parametrofactusecuencial);
				}

				if(this.parametrofactusecuencial.getsecuencial()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where secuencial like '%"+this.parametrofactusecuencial.getsecuencial()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroFactuSecuencial(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactusecuencialLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactusecuencialLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroFactuSecuencialConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactusecuencialLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonnumero_digitosParametroFactuSecuencialBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactusecuencialLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroFactuSecuencial.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroFactuSecuencial(this.getparametrofactusecuencial(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuSecuencial(this.parametrofactusecuencial);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrofactusecuencial =(ParametroFactuSecuencial) this.parametrofactusecuencialLogic.getParametroFactuSecuencials().toArray()[this.jTableDatosParametroFactuSecuencial.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrofactusecuencial =(ParametroFactuSecuencial) this.parametrofactusecuencials.toArray()[this.jTableDatosParametroFactuSecuencial.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrofactusecuencial==null) {
						this.parametrofactusecuencial = new ParametroFactuSecuencial();
					}

					this.setVariablesFormularioToObjetoActualParametroFactuSecuencial(this.parametrofactusecuencial,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuSecuencial(this.parametrofactusecuencial);
				}

				if(this.parametrofactusecuencial.getnumero_digitos()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where numero_digitos = "+this.parametrofactusecuencial.getnumero_digitos().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroFactuSecuencial(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactusecuencialLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactusecuencialLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroFactuSecuencialConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactusecuencialLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonnumero_itemsParametroFactuSecuencialBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactusecuencialLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroFactuSecuencial.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroFactuSecuencial(this.getparametrofactusecuencial(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuSecuencial(this.parametrofactusecuencial);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrofactusecuencial =(ParametroFactuSecuencial) this.parametrofactusecuencialLogic.getParametroFactuSecuencials().toArray()[this.jTableDatosParametroFactuSecuencial.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrofactusecuencial =(ParametroFactuSecuencial) this.parametrofactusecuencials.toArray()[this.jTableDatosParametroFactuSecuencial.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrofactusecuencial==null) {
						this.parametrofactusecuencial = new ParametroFactuSecuencial();
					}

					this.setVariablesFormularioToObjetoActualParametroFactuSecuencial(this.parametrofactusecuencial,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuSecuencial(this.parametrofactusecuencial);
				}

				if(this.parametrofactusecuencial.getnumero_items()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where numero_items = "+this.parametrofactusecuencial.getnumero_items().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroFactuSecuencial(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactusecuencialLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactusecuencialLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroFactuSecuencialConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactusecuencialLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonnumero_descuentoParametroFactuSecuencialBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactusecuencialLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroFactuSecuencial.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroFactuSecuencial(this.getparametrofactusecuencial(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuSecuencial(this.parametrofactusecuencial);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrofactusecuencial =(ParametroFactuSecuencial) this.parametrofactusecuencialLogic.getParametroFactuSecuencials().toArray()[this.jTableDatosParametroFactuSecuencial.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrofactusecuencial =(ParametroFactuSecuencial) this.parametrofactusecuencials.toArray()[this.jTableDatosParametroFactuSecuencial.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrofactusecuencial==null) {
						this.parametrofactusecuencial = new ParametroFactuSecuencial();
					}

					this.setVariablesFormularioToObjetoActualParametroFactuSecuencial(this.parametrofactusecuencial,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuSecuencial(this.parametrofactusecuencial);
				}

				if(this.parametrofactusecuencial.getnumero_descuento()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where numero_descuento = "+this.parametrofactusecuencial.getnumero_descuento().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroFactuSecuencial(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactusecuencialLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactusecuencialLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroFactuSecuencialConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactusecuencialLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonnumero_adiicionalesParametroFactuSecuencialBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactusecuencialLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroFactuSecuencial.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroFactuSecuencial(this.getparametrofactusecuencial(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuSecuencial(this.parametrofactusecuencial);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrofactusecuencial =(ParametroFactuSecuencial) this.parametrofactusecuencialLogic.getParametroFactuSecuencials().toArray()[this.jTableDatosParametroFactuSecuencial.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrofactusecuencial =(ParametroFactuSecuencial) this.parametrofactusecuencials.toArray()[this.jTableDatosParametroFactuSecuencial.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrofactusecuencial==null) {
						this.parametrofactusecuencial = new ParametroFactuSecuencial();
					}

					this.setVariablesFormularioToObjetoActualParametroFactuSecuencial(this.parametrofactusecuencial,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuSecuencial(this.parametrofactusecuencial);
				}

				if(this.parametrofactusecuencial.getnumero_adiicionales()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where numero_adiicionales = "+this.parametrofactusecuencial.getnumero_adiicionales().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroFactuSecuencial(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactusecuencialLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactusecuencialLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroFactuSecuencialConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactusecuencialLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonnumero_digito_inicioParametroFactuSecuencialBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactusecuencialLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroFactuSecuencial.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroFactuSecuencial(this.getparametrofactusecuencial(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuSecuencial(this.parametrofactusecuencial);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrofactusecuencial =(ParametroFactuSecuencial) this.parametrofactusecuencialLogic.getParametroFactuSecuencials().toArray()[this.jTableDatosParametroFactuSecuencial.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrofactusecuencial =(ParametroFactuSecuencial) this.parametrofactusecuencials.toArray()[this.jTableDatosParametroFactuSecuencial.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrofactusecuencial==null) {
						this.parametrofactusecuencial = new ParametroFactuSecuencial();
					}

					this.setVariablesFormularioToObjetoActualParametroFactuSecuencial(this.parametrofactusecuencial,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuSecuencial(this.parametrofactusecuencial);
				}

				if(this.parametrofactusecuencial.getnumero_digito_inicio()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where numero_digito_inicio = "+this.parametrofactusecuencial.getnumero_digito_inicio().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroFactuSecuencial(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactusecuencialLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactusecuencialLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroFactuSecuencialConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactusecuencialLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonnumero_digito_finParametroFactuSecuencialBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactusecuencialLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroFactuSecuencial.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroFactuSecuencial(this.getparametrofactusecuencial(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuSecuencial(this.parametrofactusecuencial);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrofactusecuencial =(ParametroFactuSecuencial) this.parametrofactusecuencialLogic.getParametroFactuSecuencials().toArray()[this.jTableDatosParametroFactuSecuencial.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrofactusecuencial =(ParametroFactuSecuencial) this.parametrofactusecuencials.toArray()[this.jTableDatosParametroFactuSecuencial.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrofactusecuencial==null) {
						this.parametrofactusecuencial = new ParametroFactuSecuencial();
					}

					this.setVariablesFormularioToObjetoActualParametroFactuSecuencial(this.parametrofactusecuencial,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuSecuencial(this.parametrofactusecuencial);
				}

				if(this.parametrofactusecuencial.getnumero_digito_fin()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where numero_digito_fin = "+this.parametrofactusecuencial.getnumero_digito_fin().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroFactuSecuencial(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactusecuencialLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactusecuencialLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroFactuSecuencialConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactusecuencialLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonnumero_dias_plazoParametroFactuSecuencialBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactusecuencialLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroFactuSecuencial.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroFactuSecuencial(this.getparametrofactusecuencial(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuSecuencial(this.parametrofactusecuencial);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrofactusecuencial =(ParametroFactuSecuencial) this.parametrofactusecuencialLogic.getParametroFactuSecuencials().toArray()[this.jTableDatosParametroFactuSecuencial.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrofactusecuencial =(ParametroFactuSecuencial) this.parametrofactusecuencials.toArray()[this.jTableDatosParametroFactuSecuencial.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrofactusecuencial==null) {
						this.parametrofactusecuencial = new ParametroFactuSecuencial();
					}

					this.setVariablesFormularioToObjetoActualParametroFactuSecuencial(this.parametrofactusecuencial,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuSecuencial(this.parametrofactusecuencial);
				}

				if(this.parametrofactusecuencial.getnumero_dias_plazo()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where numero_dias_plazo = "+this.parametrofactusecuencial.getnumero_dias_plazo().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroFactuSecuencial(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactusecuencialLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactusecuencialLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroFactuSecuencialConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactusecuencialLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtoncon_detalleParametroFactuSecuencialBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactusecuencialLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroFactuSecuencial.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroFactuSecuencial(this.getparametrofactusecuencial(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuSecuencial(this.parametrofactusecuencial);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrofactusecuencial =(ParametroFactuSecuencial) this.parametrofactusecuencialLogic.getParametroFactuSecuencials().toArray()[this.jTableDatosParametroFactuSecuencial.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrofactusecuencial =(ParametroFactuSecuencial) this.parametrofactusecuencials.toArray()[this.jTableDatosParametroFactuSecuencial.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrofactusecuencial==null) {
						this.parametrofactusecuencial = new ParametroFactuSecuencial();
					}

					this.setVariablesFormularioToObjetoActualParametroFactuSecuencial(this.parametrofactusecuencial,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuSecuencial(this.parametrofactusecuencial);
				}

				if(this.parametrofactusecuencial.getcon_detalle()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where con_detalle = "+this.parametrofactusecuencial.getcon_detalle().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroFactuSecuencial(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactusecuencialLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactusecuencialLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroFactuSecuencialConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactusecuencialLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtoncon_lectorParametroFactuSecuencialBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactusecuencialLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroFactuSecuencial.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroFactuSecuencial(this.getparametrofactusecuencial(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuSecuencial(this.parametrofactusecuencial);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrofactusecuencial =(ParametroFactuSecuencial) this.parametrofactusecuencialLogic.getParametroFactuSecuencials().toArray()[this.jTableDatosParametroFactuSecuencial.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrofactusecuencial =(ParametroFactuSecuencial) this.parametrofactusecuencials.toArray()[this.jTableDatosParametroFactuSecuencial.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrofactusecuencial==null) {
						this.parametrofactusecuencial = new ParametroFactuSecuencial();
					}

					this.setVariablesFormularioToObjetoActualParametroFactuSecuencial(this.parametrofactusecuencial,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuSecuencial(this.parametrofactusecuencial);
				}

				if(this.parametrofactusecuencial.getcon_lector()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where con_lector = "+this.parametrofactusecuencial.getcon_lector().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroFactuSecuencial(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactusecuencialLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactusecuencialLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroFactuSecuencialConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactusecuencialLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_bodegaParametroFactuSecuencialUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactusecuencialLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisobodega=true;

			idTienePermisobodega=this.tienePermisosUsuarioEnPaginaWebParametroFactuSecuencial(BodegaConstantesFunciones.CLASSNAME);

			if(idTienePermisobodega) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroFactuSecuencial.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosParametroFactuSecuencial.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosParametroFactuSecuencial.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactusecuencial =(ParametroFactuSecuencial) this.parametrofactusecuencialLogic.getParametroFactuSecuencials().toArray()[this.jTableDatosParametroFactuSecuencial.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.parametrofactusecuencial =(ParametroFactuSecuencial) this.parametrofactusecuencials.toArray()[this.jTableDatosParametroFactuSecuencial.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualParametroFactuSecuencial(this.getparametrofactusecuencial(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuSecuencial(this.parametrofactusecuencial);

				this.bodegaBeanSwingJInternalFrame=new BodegaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.bodegaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.bodegaBeanSwingJInternalFrame.getBodegaLogic().setConnexion(this.parametrofactusecuencialLogic.getConnexion());

				if(this.parametrofactusecuencial.getid_bodega()!=null) {
					this.bodegaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.bodegaBeanSwingJInternalFrame.setIdActual(this.parametrofactusecuencial.getid_bodega());
					this.bodegaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.bodegaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.bodegaBeanSwingJInternalFrame.inicializarActualizarBindingTablaBodega();
				}

				JInternalFrameBase jinternalFrame =this.bodegaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderParametroFactuSecuencial=(TitledBorder)this.jScrollPanelDatosParametroFactuSecuencial.getBorder();
				TitledBorder titledBorderbodega=(TitledBorder)this.bodegaBeanSwingJInternalFrame.jScrollPanelDatosBodega.getBorder();

				titledBorderbodega.setTitle(titledBorderParametroFactuSecuencial.getTitle() + " -> Bodega");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactusecuencialLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactusecuencialLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroFactuSecuencialConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactusecuencialLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_bodegaParametroFactuSecuencialBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactusecuencialLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroFactuSecuencial.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroFactuSecuencial(this.getparametrofactusecuencial(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuSecuencial(this.parametrofactusecuencial);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrofactusecuencial =(ParametroFactuSecuencial) this.parametrofactusecuencialLogic.getParametroFactuSecuencials().toArray()[this.jTableDatosParametroFactuSecuencial.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrofactusecuencial =(ParametroFactuSecuencial) this.parametrofactusecuencials.toArray()[this.jTableDatosParametroFactuSecuencial.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrofactusecuencial==null) {
						this.parametrofactusecuencial = new ParametroFactuSecuencial();
					}

					this.setVariablesFormularioToObjetoActualParametroFactuSecuencial(this.parametrofactusecuencial,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuSecuencial(this.parametrofactusecuencial);
				}

				if(this.parametrofactusecuencial.getid_bodega()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_bodega = "+this.parametrofactusecuencial.getid_bodega().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroFactuSecuencial(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactusecuencialLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactusecuencialLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroFactuSecuencialConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactusecuencialLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_tipo_param_factu_plazoParametroFactuSecuencialUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactusecuencialLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotipoparamfactuplazo=true;

			idTienePermisotipoparamfactuplazo=this.tienePermisosUsuarioEnPaginaWebParametroFactuSecuencial(TipoParamFactuPlazoConstantesFunciones.CLASSNAME);

			if(idTienePermisotipoparamfactuplazo) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroFactuSecuencial.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosParametroFactuSecuencial.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosParametroFactuSecuencial.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactusecuencial =(ParametroFactuSecuencial) this.parametrofactusecuencialLogic.getParametroFactuSecuencials().toArray()[this.jTableDatosParametroFactuSecuencial.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.parametrofactusecuencial =(ParametroFactuSecuencial) this.parametrofactusecuencials.toArray()[this.jTableDatosParametroFactuSecuencial.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualParametroFactuSecuencial(this.getparametrofactusecuencial(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuSecuencial(this.parametrofactusecuencial);

				this.tipoparamfactuplazoBeanSwingJInternalFrame=new TipoParamFactuPlazoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.tipoparamfactuplazoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.tipoparamfactuplazoBeanSwingJInternalFrame.getTipoParamFactuPlazoLogic().setConnexion(this.parametrofactusecuencialLogic.getConnexion());

				if(this.parametrofactusecuencial.getid_tipo_param_factu_plazo()!=null) {
					this.tipoparamfactuplazoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.tipoparamfactuplazoBeanSwingJInternalFrame.setIdActual(this.parametrofactusecuencial.getid_tipo_param_factu_plazo());
					this.tipoparamfactuplazoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.tipoparamfactuplazoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.tipoparamfactuplazoBeanSwingJInternalFrame.inicializarActualizarBindingTablaTipoParamFactuPlazo();
				}

				JInternalFrameBase jinternalFrame =this.tipoparamfactuplazoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderParametroFactuSecuencial=(TitledBorder)this.jScrollPanelDatosParametroFactuSecuencial.getBorder();
				TitledBorder titledBordertipoparamfactuplazo=(TitledBorder)this.tipoparamfactuplazoBeanSwingJInternalFrame.jScrollPanelDatosTipoParamFactuPlazo.getBorder();

				titledBordertipoparamfactuplazo.setTitle(titledBorderParametroFactuSecuencial.getTitle() + " -> Tipo Plazo");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactusecuencialLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactusecuencialLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroFactuSecuencialConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactusecuencialLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_tipo_param_factu_plazoParametroFactuSecuencialBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactusecuencialLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroFactuSecuencial.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroFactuSecuencial(this.getparametrofactusecuencial(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuSecuencial(this.parametrofactusecuencial);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrofactusecuencial =(ParametroFactuSecuencial) this.parametrofactusecuencialLogic.getParametroFactuSecuencials().toArray()[this.jTableDatosParametroFactuSecuencial.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrofactusecuencial =(ParametroFactuSecuencial) this.parametrofactusecuencials.toArray()[this.jTableDatosParametroFactuSecuencial.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrofactusecuencial==null) {
						this.parametrofactusecuencial = new ParametroFactuSecuencial();
					}

					this.setVariablesFormularioToObjetoActualParametroFactuSecuencial(this.parametrofactusecuencial,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuSecuencial(this.parametrofactusecuencial);
				}

				if(this.parametrofactusecuencial.getid_tipo_param_factu_plazo()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_tipo_param_factu_plazo = "+this.parametrofactusecuencial.getid_tipo_param_factu_plazo().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroFactuSecuencial(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactusecuencialLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactusecuencialLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroFactuSecuencialConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactusecuencialLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_formatoParametroFactuSecuencialUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactusecuencialLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoformato=true;

			idTienePermisoformato=this.tienePermisosUsuarioEnPaginaWebParametroFactuSecuencial(FormatoConstantesFunciones.CLASSNAME);

			if(idTienePermisoformato) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroFactuSecuencial.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosParametroFactuSecuencial.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosParametroFactuSecuencial.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactusecuencial =(ParametroFactuSecuencial) this.parametrofactusecuencialLogic.getParametroFactuSecuencials().toArray()[this.jTableDatosParametroFactuSecuencial.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.parametrofactusecuencial =(ParametroFactuSecuencial) this.parametrofactusecuencials.toArray()[this.jTableDatosParametroFactuSecuencial.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualParametroFactuSecuencial(this.getparametrofactusecuencial(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuSecuencial(this.parametrofactusecuencial);

				this.formatoBeanSwingJInternalFrame=new FormatoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.formatoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.formatoBeanSwingJInternalFrame.getFormatoLogic().setConnexion(this.parametrofactusecuencialLogic.getConnexion());

				if(this.parametrofactusecuencial.getid_formato()!=null) {
					this.formatoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.formatoBeanSwingJInternalFrame.setIdActual(this.parametrofactusecuencial.getid_formato());
					this.formatoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.formatoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.formatoBeanSwingJInternalFrame.inicializarActualizarBindingTablaFormato();
				}

				JInternalFrameBase jinternalFrame =this.formatoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderParametroFactuSecuencial=(TitledBorder)this.jScrollPanelDatosParametroFactuSecuencial.getBorder();
				TitledBorder titledBorderformato=(TitledBorder)this.formatoBeanSwingJInternalFrame.jScrollPanelDatosFormato.getBorder();

				titledBorderformato.setTitle(titledBorderParametroFactuSecuencial.getTitle() + " -> Formato");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactusecuencialLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactusecuencialLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroFactuSecuencialConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactusecuencialLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_formatoParametroFactuSecuencialBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactusecuencialLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroFactuSecuencial.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroFactuSecuencial(this.getparametrofactusecuencial(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuSecuencial(this.parametrofactusecuencial);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrofactusecuencial =(ParametroFactuSecuencial) this.parametrofactusecuencialLogic.getParametroFactuSecuencials().toArray()[this.jTableDatosParametroFactuSecuencial.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrofactusecuencial =(ParametroFactuSecuencial) this.parametrofactusecuencials.toArray()[this.jTableDatosParametroFactuSecuencial.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrofactusecuencial==null) {
						this.parametrofactusecuencial = new ParametroFactuSecuencial();
					}

					this.setVariablesFormularioToObjetoActualParametroFactuSecuencial(this.parametrofactusecuencial,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuSecuencial(this.parametrofactusecuencial);
				}

				if(this.parametrofactusecuencial.getid_formato()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_formato = "+this.parametrofactusecuencial.getid_formato().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroFactuSecuencial(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactusecuencialLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactusecuencialLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroFactuSecuencialConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactusecuencialLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtoncon_transferenciaParametroFactuSecuencialBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactusecuencialLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroFactuSecuencial.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroFactuSecuencial(this.getparametrofactusecuencial(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuSecuencial(this.parametrofactusecuencial);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrofactusecuencial =(ParametroFactuSecuencial) this.parametrofactusecuencialLogic.getParametroFactuSecuencials().toArray()[this.jTableDatosParametroFactuSecuencial.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrofactusecuencial =(ParametroFactuSecuencial) this.parametrofactusecuencials.toArray()[this.jTableDatosParametroFactuSecuencial.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrofactusecuencial==null) {
						this.parametrofactusecuencial = new ParametroFactuSecuencial();
					}

					this.setVariablesFormularioToObjetoActualParametroFactuSecuencial(this.parametrofactusecuencial,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuSecuencial(this.parametrofactusecuencial);
				}

				if(this.parametrofactusecuencial.getcon_transferencia()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where con_transferencia = "+this.parametrofactusecuencial.getcon_transferencia().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroFactuSecuencial(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactusecuencialLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactusecuencialLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroFactuSecuencialConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactusecuencialLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_bodega_transferenciaParametroFactuSecuencialUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactusecuencialLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisobodegatransferencia=true;

			idTienePermisobodegatransferencia=this.tienePermisosUsuarioEnPaginaWebParametroFactuSecuencial(BodegaConstantesFunciones.CLASSNAME);

			if(idTienePermisobodegatransferencia) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroFactuSecuencial.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosParametroFactuSecuencial.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosParametroFactuSecuencial.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactusecuencial =(ParametroFactuSecuencial) this.parametrofactusecuencialLogic.getParametroFactuSecuencials().toArray()[this.jTableDatosParametroFactuSecuencial.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.parametrofactusecuencial =(ParametroFactuSecuencial) this.parametrofactusecuencials.toArray()[this.jTableDatosParametroFactuSecuencial.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualParametroFactuSecuencial(this.getparametrofactusecuencial(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuSecuencial(this.parametrofactusecuencial);

				this.bodegatransferenciaBeanSwingJInternalFrame=new BodegaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.bodegatransferenciaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.bodegatransferenciaBeanSwingJInternalFrame.getBodegaLogic().setConnexion(this.parametrofactusecuencialLogic.getConnexion());

				if(this.parametrofactusecuencial.getid_bodega_transferencia()!=null) {
					this.bodegatransferenciaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.bodegatransferenciaBeanSwingJInternalFrame.setIdActual(this.parametrofactusecuencial.getid_bodega_transferencia());
					this.bodegatransferenciaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.bodegatransferenciaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.bodegatransferenciaBeanSwingJInternalFrame.inicializarActualizarBindingTablaBodega();
				}

				JInternalFrameBase jinternalFrame =this.bodegatransferenciaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderParametroFactuSecuencial=(TitledBorder)this.jScrollPanelDatosParametroFactuSecuencial.getBorder();
				TitledBorder titledBorderbodegatransferencia=(TitledBorder)this.bodegatransferenciaBeanSwingJInternalFrame.jScrollPanelDatosBodega.getBorder();

				titledBorderbodegatransferencia.setTitle(titledBorderParametroFactuSecuencial.getTitle() + " -> Bodega");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactusecuencialLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactusecuencialLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroFactuSecuencialConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactusecuencialLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_bodega_transferenciaParametroFactuSecuencialBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactusecuencialLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroFactuSecuencial.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroFactuSecuencial(this.getparametrofactusecuencial(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuSecuencial(this.parametrofactusecuencial);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrofactusecuencial =(ParametroFactuSecuencial) this.parametrofactusecuencialLogic.getParametroFactuSecuencials().toArray()[this.jTableDatosParametroFactuSecuencial.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrofactusecuencial =(ParametroFactuSecuencial) this.parametrofactusecuencials.toArray()[this.jTableDatosParametroFactuSecuencial.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrofactusecuencial==null) {
						this.parametrofactusecuencial = new ParametroFactuSecuencial();
					}

					this.setVariablesFormularioToObjetoActualParametroFactuSecuencial(this.parametrofactusecuencial,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuSecuencial(this.parametrofactusecuencial);
				}

				if(this.parametrofactusecuencial.getid_bodega_transferencia()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_bodega_transferencia = "+this.parametrofactusecuencial.getid_bodega_transferencia().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroFactuSecuencial(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactusecuencialLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactusecuencialLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroFactuSecuencialConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactusecuencialLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_transaccion_transferenciaParametroFactuSecuencialUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactusecuencialLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotransacciontransferencia=true;

			idTienePermisotransacciontransferencia=this.tienePermisosUsuarioEnPaginaWebParametroFactuSecuencial(TransaccionConstantesFunciones.CLASSNAME);

			if(idTienePermisotransacciontransferencia) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroFactuSecuencial.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosParametroFactuSecuencial.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosParametroFactuSecuencial.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactusecuencial =(ParametroFactuSecuencial) this.parametrofactusecuencialLogic.getParametroFactuSecuencials().toArray()[this.jTableDatosParametroFactuSecuencial.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.parametrofactusecuencial =(ParametroFactuSecuencial) this.parametrofactusecuencials.toArray()[this.jTableDatosParametroFactuSecuencial.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualParametroFactuSecuencial(this.getparametrofactusecuencial(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuSecuencial(this.parametrofactusecuencial);

				this.transacciontransferenciaBeanSwingJInternalFrame=new TransaccionBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.transacciontransferenciaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.transacciontransferenciaBeanSwingJInternalFrame.getTransaccionLogic().setConnexion(this.parametrofactusecuencialLogic.getConnexion());

				if(this.parametrofactusecuencial.getid_transaccion_transferencia()!=null) {
					this.transacciontransferenciaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.transacciontransferenciaBeanSwingJInternalFrame.setIdActual(this.parametrofactusecuencial.getid_transaccion_transferencia());
					this.transacciontransferenciaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.transacciontransferenciaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.transacciontransferenciaBeanSwingJInternalFrame.inicializarActualizarBindingTablaTransaccion();
				}

				JInternalFrameBase jinternalFrame =this.transacciontransferenciaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderParametroFactuSecuencial=(TitledBorder)this.jScrollPanelDatosParametroFactuSecuencial.getBorder();
				TitledBorder titledBordertransacciontransferencia=(TitledBorder)this.transacciontransferenciaBeanSwingJInternalFrame.jScrollPanelDatosTransaccion.getBorder();

				titledBordertransacciontransferencia.setTitle(titledBorderParametroFactuSecuencial.getTitle() + " -> Transaccion");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactusecuencialLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactusecuencialLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroFactuSecuencialConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactusecuencialLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_transaccion_transferenciaParametroFactuSecuencialBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactusecuencialLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroFactuSecuencial.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroFactuSecuencial(this.getparametrofactusecuencial(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuSecuencial(this.parametrofactusecuencial);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrofactusecuencial =(ParametroFactuSecuencial) this.parametrofactusecuencialLogic.getParametroFactuSecuencials().toArray()[this.jTableDatosParametroFactuSecuencial.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrofactusecuencial =(ParametroFactuSecuencial) this.parametrofactusecuencials.toArray()[this.jTableDatosParametroFactuSecuencial.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrofactusecuencial==null) {
						this.parametrofactusecuencial = new ParametroFactuSecuencial();
					}

					this.setVariablesFormularioToObjetoActualParametroFactuSecuencial(this.parametrofactusecuencial,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuSecuencial(this.parametrofactusecuencial);
				}

				if(this.parametrofactusecuencial.getid_transaccion_transferencia()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_transaccion_transferencia = "+this.parametrofactusecuencial.getid_transaccion_transferencia().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroFactuSecuencial(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactusecuencialLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactusecuencialLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroFactuSecuencialConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactusecuencialLogic.closeNewConnexionToDeep();
				}

			}
		}

	
	
	public void jButtonFK_IdBodegaParametroFactuSecuencialActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactusecuencialLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingParametroFactuSecuencial(false,false);

			this.getParametroFactuSecuencialsFK_IdBodega();

			this.inicializarActualizarBindingParametroFactuSecuencial(false);

			//if(ParametroFactuSecuencialBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingParametroFactuSecuencial(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactusecuencialLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactusecuencialLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroFactuSecuencialConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactusecuencialLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdBodegaTransferenciaParametroFactuSecuencialActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactusecuencialLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingParametroFactuSecuencial(false,false);

			this.getParametroFactuSecuencialsFK_IdBodegaTransferencia();

			this.inicializarActualizarBindingParametroFactuSecuencial(false);

			//if(ParametroFactuSecuencialBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingParametroFactuSecuencial(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactusecuencialLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactusecuencialLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroFactuSecuencialConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactusecuencialLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdEmpresaParametroFactuSecuencialActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactusecuencialLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingParametroFactuSecuencial(false,false);

			this.getParametroFactuSecuencialsFK_IdEmpresa();

			this.inicializarActualizarBindingParametroFactuSecuencial(false);

			//if(ParametroFactuSecuencialBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingParametroFactuSecuencial(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactusecuencialLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactusecuencialLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroFactuSecuencialConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactusecuencialLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdFormatoParametroFactuSecuencialActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactusecuencialLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingParametroFactuSecuencial(false,false);

			this.getParametroFactuSecuencialsFK_IdFormato();

			this.inicializarActualizarBindingParametroFactuSecuencial(false);

			//if(ParametroFactuSecuencialBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingParametroFactuSecuencial(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactusecuencialLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactusecuencialLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroFactuSecuencialConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactusecuencialLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdSucursalParametroFactuSecuencialActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactusecuencialLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingParametroFactuSecuencial(false,false);

			this.getParametroFactuSecuencialsFK_IdSucursal();

			this.inicializarActualizarBindingParametroFactuSecuencial(false);

			//if(ParametroFactuSecuencialBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingParametroFactuSecuencial(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactusecuencialLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactusecuencialLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroFactuSecuencialConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactusecuencialLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdTipoDocumentoGeneralParametroFactuSecuencialActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactusecuencialLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingParametroFactuSecuencial(false,false);

			this.getParametroFactuSecuencialsFK_IdTipoDocumentoGeneral();

			this.inicializarActualizarBindingParametroFactuSecuencial(false);

			//if(ParametroFactuSecuencialBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingParametroFactuSecuencial(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactusecuencialLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactusecuencialLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroFactuSecuencialConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactusecuencialLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdTipoParamFactuPlazoParametroFactuSecuencialActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactusecuencialLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingParametroFactuSecuencial(false,false);

			this.getParametroFactuSecuencialsFK_IdTipoParamFactuPlazo();

			this.inicializarActualizarBindingParametroFactuSecuencial(false);

			//if(ParametroFactuSecuencialBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingParametroFactuSecuencial(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactusecuencialLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactusecuencialLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroFactuSecuencialConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactusecuencialLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdTransaccionTransferenciaParametroFactuSecuencialActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactusecuencialLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingParametroFactuSecuencial(false,false);

			this.getParametroFactuSecuencialsFK_IdTransaccionTransferencia();

			this.inicializarActualizarBindingParametroFactuSecuencial(false);

			//if(ParametroFactuSecuencialBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingParametroFactuSecuencial(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactusecuencialLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactusecuencialLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroFactuSecuencialConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactusecuencialLogic.closeNewConnexionToDeep();
			}
		}
	}

	
	public void closingInternalFrameParametroFactuSecuencial() {
		if(this.jInternalFrameDetalleFormParametroFactuSecuencial!=null) {
			
		
		
		}
		
		if(this.jInternalFrameDetalleFormParametroFactuSecuencial!=null) {
			this.jInternalFrameDetalleFormParametroFactuSecuencial.setVisible(false);	    			
			this.jInternalFrameDetalleFormParametroFactuSecuencial.dispose();
			this.jInternalFrameDetalleFormParametroFactuSecuencial=null;
		}
		
		
		if(this.jInternalFrameReporteDinamicoParametroFactuSecuencial!=null) {
			this.jInternalFrameReporteDinamicoParametroFactuSecuencial.setVisible(false);	    			
			this.jInternalFrameReporteDinamicoParametroFactuSecuencial.dispose();
			this.jInternalFrameReporteDinamicoParametroFactuSecuencial=null;
		}
		
		if(this.jInternalFrameImportacionParametroFactuSecuencial!=null) {
			this.jInternalFrameImportacionParametroFactuSecuencial.setVisible(false);	    			
			this.jInternalFrameImportacionParametroFactuSecuencial.dispose();
			this.jInternalFrameImportacionParametroFactuSecuencial=null;
		}		
		
		
		this.setVisible(false);
		this.dispose();
		//this=null;
	}
	
	
	
	public void jButtonActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {			
			this.startProcessParametroFactuSecuencial();
			
			ParametroFactuSecuencialBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.BUTTON,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.parametrofactusecuencial,new Object(),this.parametrofactusecuencialParameterGeneral,this.parametrofactusecuencialReturnGeneral);
			
			
			if(sTipo.equals("NuevoParametroFactuSecuencial")) {
				jButtonNuevoParametroFactuSecuencialActionPerformed(evt,false);
			} else if(sTipo.equals("DuplicarParametroFactuSecuencial")) {
				jButtonDuplicarParametroFactuSecuencialActionPerformed(evt,false);
			} else if(sTipo.equals("CopiarParametroFactuSecuencial")) {
				jButtonCopiarParametroFactuSecuencialActionPerformed(evt);
			} else if(sTipo.equals("VerFormParametroFactuSecuencial")) {
				jButtonVerFormParametroFactuSecuencialActionPerformed(evt);
			} else if(sTipo.equals("NuevoToolBarParametroFactuSecuencial")) {
				jButtonNuevoParametroFactuSecuencialActionPerformed(evt,false);
			} else if(sTipo.equals("DuplicarToolBarParametroFactuSecuencial")) {
				jButtonDuplicarParametroFactuSecuencialActionPerformed(evt,false);
			} else if(sTipo.equals("MenuItemNuevoParametroFactuSecuencial")) {
				jButtonNuevoParametroFactuSecuencialActionPerformed(evt,false);
			} else if(sTipo.equals("MenuItemDuplicarParametroFactuSecuencial")) {
				jButtonDuplicarParametroFactuSecuencialActionPerformed(evt,false);
			} else if(sTipo.equals("NuevoRelacionesParametroFactuSecuencial")) {
				jButtonNuevoParametroFactuSecuencialActionPerformed(evt,true);
			} else if(sTipo.equals("NuevoRelacionesToolBarParametroFactuSecuencial")) {
				jButtonNuevoParametroFactuSecuencialActionPerformed(evt,true);
			} else if(sTipo.equals("MenuItemNuevoRelacionesParametroFactuSecuencial")) {
				jButtonNuevoParametroFactuSecuencialActionPerformed(evt,true);
			} else if(sTipo.equals("ModificarParametroFactuSecuencial")) {
				jButtonModificarParametroFactuSecuencialActionPerformed(evt);
			} else if(sTipo.equals("ModificarToolBarParametroFactuSecuencial")) {
				jButtonModificarParametroFactuSecuencialActionPerformed(evt);
			} else if(sTipo.equals("MenuItemModificarParametroFactuSecuencial")) {
				jButtonModificarParametroFactuSecuencialActionPerformed(evt);
			} else if(sTipo.equals("ActualizarParametroFactuSecuencial")) {
				jButtonActualizarParametroFactuSecuencialActionPerformed(evt);
			} else if(sTipo.equals("ActualizarToolBarParametroFactuSecuencial")) {
				jButtonActualizarParametroFactuSecuencialActionPerformed(evt);
			} else if(sTipo.equals("MenuItemActualizarParametroFactuSecuencial")) {
				jButtonActualizarParametroFactuSecuencialActionPerformed(evt);
			} else if(sTipo.equals("EliminarParametroFactuSecuencial")) {
				jButtonEliminarParametroFactuSecuencialActionPerformed(evt);
			} else if(sTipo.equals("EliminarToolBarParametroFactuSecuencial")) {
				jButtonEliminarParametroFactuSecuencialActionPerformed(evt);
			} else if(sTipo.equals("MenuItemEliminarParametroFactuSecuencial")) {
				jButtonEliminarParametroFactuSecuencialActionPerformed(evt);
			} else if(sTipo.equals("CancelarParametroFactuSecuencial")) {
				jButtonCancelarParametroFactuSecuencialActionPerformed(evt);
			} else if(sTipo.equals("CancelarToolBarParametroFactuSecuencial")) {
				jButtonCancelarParametroFactuSecuencialActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCancelarParametroFactuSecuencial")) {
				jButtonCancelarParametroFactuSecuencialActionPerformed(evt);
			} else if(sTipo.equals("CerrarParametroFactuSecuencial")) {
				jButtonCerrarParametroFactuSecuencialActionPerformed(evt);
			} else if(sTipo.equals("CerrarToolBarParametroFactuSecuencial")) {
				jButtonCerrarParametroFactuSecuencialActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCerrarParametroFactuSecuencial")) {
				jButtonCerrarParametroFactuSecuencialActionPerformed(evt);
			} else if(sTipo.equals("MostrarOcultarToolBarParametroFactuSecuencial")) {
				jButtonMostrarOcultarParametroFactuSecuencialActionPerformed(evt);
			} else if(sTipo.equals("MenuItemDetalleCerrarParametroFactuSecuencial")) {
				jButtonCancelarParametroFactuSecuencialActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosParametroFactuSecuencial")) {
				jButtonGuardarCambiosParametroFactuSecuencialActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosToolBarParametroFactuSecuencial")) {
				jButtonGuardarCambiosParametroFactuSecuencialActionPerformed(evt);
			} else if(sTipo.equals("CopiarToolBarParametroFactuSecuencial")) {
				jButtonCopiarParametroFactuSecuencialActionPerformed(evt);
			} else if(sTipo.equals("VerFormToolBarParametroFactuSecuencial")) {
				jButtonVerFormParametroFactuSecuencialActionPerformed(evt);
			} else if(sTipo.equals("MenuItemGuardarCambiosParametroFactuSecuencial")) {
				jButtonGuardarCambiosParametroFactuSecuencialActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCopiarParametroFactuSecuencial")) {
				jButtonCopiarParametroFactuSecuencialActionPerformed(evt);
			} else if(sTipo.equals("MenuItemVerFormParametroFactuSecuencial")) {
				jButtonVerFormParametroFactuSecuencialActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosTablaParametroFactuSecuencial")) {
				jButtonGuardarCambiosParametroFactuSecuencialActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosTablaToolBarParametroFactuSecuencial")) {
				jButtonGuardarCambiosParametroFactuSecuencialActionPerformed(evt);
			} else if(sTipo.equals("MenuItemGuardarCambiosTablaParametroFactuSecuencial")) {
				jButtonGuardarCambiosParametroFactuSecuencialActionPerformed(evt);
			} else if(sTipo.equals("RecargarInformacionParametroFactuSecuencial")) {
				jButtonRecargarInformacionParametroFactuSecuencialActionPerformed(evt);
			} else if(sTipo.equals("RecargarInformacionToolBarParametroFactuSecuencial")) {
				jButtonRecargarInformacionParametroFactuSecuencialActionPerformed(evt);
			} else if(sTipo.equals("MenuItemRecargarInformacionParametroFactuSecuencial")) {
				jButtonRecargarInformacionParametroFactuSecuencialActionPerformed(evt);
			}
			else if(sTipo.equals("AnterioresParametroFactuSecuencial")) {
				jButtonAnterioresParametroFactuSecuencialActionPerformed(evt);
			} else if(sTipo.equals("AnterioresToolBarParametroFactuSecuencial")) {
				jButtonAnterioresParametroFactuSecuencialActionPerformed(evt);
			} else if(sTipo.equals("MenuItemAnterioreParametroFactuSecuencial")) {
				jButtonAnterioresParametroFactuSecuencialActionPerformed(evt);
			} else if(sTipo.equals("SiguientesParametroFactuSecuencial")) {
				jButtonSiguientesParametroFactuSecuencialActionPerformed(evt);
			} else if(sTipo.equals("SiguientesToolBarParametroFactuSecuencial")) {
				jButtonSiguientesParametroFactuSecuencialActionPerformed(evt);
			} else if(sTipo.equals("MenuItemSiguientesParametroFactuSecuencial")) {
				jButtonSiguientesParametroFactuSecuencialActionPerformed(evt);
			} else if(sTipo.equals("MenuItemAbrirOrderByParametroFactuSecuencial") || sTipo.equals("MenuItemDetalleAbrirOrderByParametroFactuSecuencial")) {
				jButtonAbrirOrderByParametroFactuSecuencialActionPerformed(evt);
			} else if(sTipo.equals("MenuItemMostrarOcultarParametroFactuSecuencial") || sTipo.equals("MenuItemDetalleMostrarOcultarParametroFactuSecuencial")) {
				jButtonMostrarOcultarParametroFactuSecuencialActionPerformed(evt);
			} else if(sTipo.equals("NuevoGuardarCambiosParametroFactuSecuencial")) {
				jButtonNuevoGuardarCambiosParametroFactuSecuencialActionPerformed(evt);
			} else if(sTipo.equals("NuevoGuardarCambiosToolBarParametroFactuSecuencial")) {
				jButtonNuevoGuardarCambiosParametroFactuSecuencialActionPerformed(evt);
			} else if(sTipo.equals("MenuItemNuevoGuardarCambiosParametroFactuSecuencial")) {
				jButtonNuevoGuardarCambiosParametroFactuSecuencialActionPerformed(evt);
			} 
			else if(sTipo.equals("CerrarReporteDinamicoParametroFactuSecuencial")) {
				jButtonCerrarReporteDinamicoParametroFactuSecuencialActionPerformed(evt);
			} else if(sTipo.equals("GenerarReporteDinamicoParametroFactuSecuencial")) {
				jButtonGenerarReporteDinamicoParametroFactuSecuencialActionPerformed(evt);
			} else if(sTipo.equals("GenerarExcelReporteDinamicoParametroFactuSecuencial")) {
				
				jButtonGenerarExcelReporteDinamicoParametroFactuSecuencialActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarImportacionParametroFactuSecuencial")) {
				jButtonCerrarImportacionParametroFactuSecuencialActionPerformed(evt);
			} else if(sTipo.equals("GenerarImportacionParametroFactuSecuencial")) {
				
				jButtonGenerarImportacionParametroFactuSecuencialActionPerformed(evt);
				
			} else if(sTipo.equals("AbrirImportacionParametroFactuSecuencial")) {
				
				jButtonAbrirImportacionParametroFactuSecuencialActionPerformed(evt);
				
			} else if(sTipo.equals("TiposAccionesParametroFactuSecuencial")) {
				jComboBoxTiposAccionesParametroFactuSecuencialActionListener(evt,false);
			} else if(sTipo.equals("TiposRelacionesParametroFactuSecuencial")) {
				jComboBoxTiposRelacionesParametroFactuSecuencialActionListener(evt);
			} else if(sTipo.equals("TiposAccionesFormularioParametroFactuSecuencial")) {
				jComboBoxTiposAccionesParametroFactuSecuencialActionListener(evt,true);
			} else if(sTipo.equals("TiposSeleccionarParametroFactuSecuencial")) {
				
				jComboBoxTiposSeleccionarParametroFactuSecuencialActionListener(evt);
				
			} else if(sTipo.equals("ValorCampoGeneralParametroFactuSecuencial")) {
				jTextFieldValorCampoGeneralParametroFactuSecuencialActionListener(evt);
			}
			
			
			else if(sTipo.equals("AbrirOrderByParametroFactuSecuencial")) {
				jButtonAbrirOrderByParametroFactuSecuencialActionPerformed(evt);
				
			} else if(sTipo.equals("AbrirOrderByToolBarParametroFactuSecuencial")) {
				jButtonAbrirOrderByParametroFactuSecuencialActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarOrderByParametroFactuSecuencial")) {
				jButtonCerrarOrderByParametroFactuSecuencialActionPerformed(evt);
			} 
						
			
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("idParametroFactuSecuencialBusqueda")) {
				this.jButtonidParametroFactuSecuencialBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_empresaParametroFactuSecuencialUpdate")) {
				this.jButtonid_empresaParametroFactuSecuencialUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_empresaParametroFactuSecuencialBusqueda")) {
				this.jButtonid_empresaParametroFactuSecuencialBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_sucursalParametroFactuSecuencialUpdate")) {
				this.jButtonid_sucursalParametroFactuSecuencialUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_sucursalParametroFactuSecuencialBusqueda")) {
				this.jButtonid_sucursalParametroFactuSecuencialBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_documento_generalParametroFactuSecuencialUpdate")) {
				this.jButtonid_tipo_documento_generalParametroFactuSecuencialUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_documento_generalParametroFactuSecuencialBusqueda")) {
				this.jButtonid_tipo_documento_generalParametroFactuSecuencialBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("secuencialParametroFactuSecuencialBusqueda")) {
				this.jButtonsecuencialParametroFactuSecuencialBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("numero_digitosParametroFactuSecuencialBusqueda")) {
				this.jButtonnumero_digitosParametroFactuSecuencialBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("numero_itemsParametroFactuSecuencialBusqueda")) {
				this.jButtonnumero_itemsParametroFactuSecuencialBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("numero_descuentoParametroFactuSecuencialBusqueda")) {
				this.jButtonnumero_descuentoParametroFactuSecuencialBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("numero_adiicionalesParametroFactuSecuencialBusqueda")) {
				this.jButtonnumero_adiicionalesParametroFactuSecuencialBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("numero_digito_inicioParametroFactuSecuencialBusqueda")) {
				this.jButtonnumero_digito_inicioParametroFactuSecuencialBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("numero_digito_finParametroFactuSecuencialBusqueda")) {
				this.jButtonnumero_digito_finParametroFactuSecuencialBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("numero_dias_plazoParametroFactuSecuencialBusqueda")) {
				this.jButtonnumero_dias_plazoParametroFactuSecuencialBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("con_detalleParametroFactuSecuencialBusqueda")) {
				this.jButtoncon_detalleParametroFactuSecuencialBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("con_lectorParametroFactuSecuencialBusqueda")) {
				this.jButtoncon_lectorParametroFactuSecuencialBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_bodegaParametroFactuSecuencialUpdate")) {
				this.jButtonid_bodegaParametroFactuSecuencialUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_bodegaParametroFactuSecuencialBusqueda")) {
				this.jButtonid_bodegaParametroFactuSecuencialBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_param_factu_plazoParametroFactuSecuencialUpdate")) {
				this.jButtonid_tipo_param_factu_plazoParametroFactuSecuencialUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_param_factu_plazoParametroFactuSecuencialBusqueda")) {
				this.jButtonid_tipo_param_factu_plazoParametroFactuSecuencialBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_formatoParametroFactuSecuencialUpdate")) {
				this.jButtonid_formatoParametroFactuSecuencialUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_formatoParametroFactuSecuencialBusqueda")) {
				this.jButtonid_formatoParametroFactuSecuencialBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("con_transferenciaParametroFactuSecuencialBusqueda")) {
				this.jButtoncon_transferenciaParametroFactuSecuencialBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_bodega_transferenciaParametroFactuSecuencialUpdate")) {
				this.jButtonid_bodega_transferenciaParametroFactuSecuencialUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_bodega_transferenciaParametroFactuSecuencialBusqueda")) {
				this.jButtonid_bodega_transferenciaParametroFactuSecuencialBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_transaccion_transferenciaParametroFactuSecuencialUpdate")) {
				this.jButtonid_transaccion_transferenciaParametroFactuSecuencialUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_transaccion_transferenciaParametroFactuSecuencialBusqueda")) {
				this.jButtonid_transaccion_transferenciaParametroFactuSecuencialBusquedaActionPerformed(evt);
			}
			
			
			
			
			else if(sTipo.equals("FK_IdBodegaParametroFactuSecuencial")) {
				this.jButtonFK_IdBodegaParametroFactuSecuencialActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdBodegaTransferenciaParametroFactuSecuencial")) {
				this.jButtonFK_IdBodegaTransferenciaParametroFactuSecuencialActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdFormatoParametroFactuSecuencial")) {
				this.jButtonFK_IdFormatoParametroFactuSecuencialActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdTipoDocumentoGeneralParametroFactuSecuencial")) {
				this.jButtonFK_IdTipoDocumentoGeneralParametroFactuSecuencialActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdTipoParamFactuPlazoParametroFactuSecuencial")) {
				this.jButtonFK_IdTipoParamFactuPlazoParametroFactuSecuencialActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdTransaccionTransferenciaParametroFactuSecuencial")) {
				this.jButtonFK_IdTransaccionTransferenciaParametroFactuSecuencialActionPerformed(evt);
			}
			
			;
			
			
			ParametroFactuSecuencialBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.BUTTON,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.parametrofactusecuencial,new Object(),this.parametrofactusecuencialParameterGeneral,this.parametrofactusecuencialReturnGeneral);
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroFactuSecuencialConstantesFunciones.CLASSNAME);
			
  		} finally {
      		this.finishProcessParametroFactuSecuencial();
      	}
    }
	
	//FUNCIONA AL APLASTAR ENTER
	public void jTextFieldActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaParametroFactuSecuencialActual();
			
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				Container containerParent=null;
				JTextField jTextField=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParent=jTextField.getParent();
						
				if(containerParent!=null && containerParent.getClass().equals(JTableMe.class)) {
					esControlTabla=true;
				}
						
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.parametrofactusecuencial);
				
				this.actualizarInformacion("INFO_PADRE",false,this.parametrofactusecuencial);
				
				ParametroFactuSecuencialBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametrofactusecuencial,new Object(),this.parametrofactusecuencialParameterGeneral,this.parametrofactusecuencialReturnGeneral);
				
				


				
				ParametroFactuSecuencialBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametrofactusecuencial,new Object(),this.parametrofactusecuencialParameterGeneral,this.parametrofactusecuencialReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(ParametroFactuSecuencial.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",ParametroFactuSecuencial.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
				}
				
			} catch(Exception e) {
  				FuncionesSwing.manageException2(this, e,logger,ParametroFactuSecuencialConstantesFunciones.CLASSNAME);
  			}
    }
	
	public Boolean existeCambioValor(ControlTipo controlTipo,String sTipo) throws Exception {
		Boolean existeCambio=true;
		
		try {
			ParametroFactuSecuencial parametrofactusecuencialLocal=null;
			
			if(!this.getEsControlTabla()) {
				parametrofactusecuencialLocal=this.parametrofactusecuencial;
			} else {
				parametrofactusecuencialLocal=this.parametrofactusecuencialAnterior;
			}
			
			if(controlTipo.equals(ControlTipo.TEXTBOX)) {
				


			}
		
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroFactuSecuencialConstantesFunciones.CLASSNAME);
  		}
		
		return existeCambio;
	}
	
	public void jTextFieldFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTBOX,sTipo)) {
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextField jTextField=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParent=jTextField.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.parametrofactusecuencial);
				
				this.actualizarInformacion("INFO_PADRE",false,this.parametrofactusecuencial);
				
				ParametroFactuSecuencialBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametrofactusecuencial,new Object(),this.parametrofactusecuencialParameterGeneral,this.parametrofactusecuencialReturnGeneral);
							
				
				


				
				ParametroFactuSecuencialBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametrofactusecuencial,new Object(),this.parametrofactusecuencialParameterGeneral,this.parametrofactusecuencialReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(ParametroFactuSecuencial.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",ParametroFactuSecuencial.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroFactuSecuencialConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextFieldFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaParametroFactuSecuencialActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosParametroFactuSecuencial.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactusecuencialAnterior =(ParametroFactuSecuencial) this.parametrofactusecuencialLogic.getParametroFactuSecuencials().toArray()[this.jTableDatosParametroFactuSecuencial.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.parametrofactusecuencialAnterior =(ParametroFactuSecuencial) this.parametrofactusecuencials.toArray()[this.jTableDatosParametroFactuSecuencial.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroFactuSecuencialConstantesFunciones.CLASSNAME);
  		}
    }	
	
	//CUANDO SE CAMBIA ALGUN FORMATO(TIPO DE LETRA,NEGRILLA,ETC)
	public void jTextFieldChangedUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			/*
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			//System.out.println("UPDATE");
			
			Boolean esControlTabla=false;
			//JTextField jTextField=null;
			Container containerParent=null;
			Component componentOpposite=null;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			ParametroFactuSecuencialBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametrofactusecuencial,new Object(),this.parametrofactusecuencialParameterGeneral,this.parametrofactusecuencialReturnGeneral);
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			//jTextField=(JTextField)evt.getSource();
			
			containerParent=jTextField.getParent();
					
			componentOpposite=null;//evt.getOppositeComponent();
			
			if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
				|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
			) {					
				esControlTabla=true;
			}
			
			this.esControlTabla=esControlTabla;
			
			


			
			ParametroFactuSecuencialBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametrofactusecuencial,new Object(),this.parametrofactusecuencialParameterGeneral,this.parametrofactusecuencialReturnGeneral);
			*/
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroFactuSecuencialConstantesFunciones.CLASSNAME);
  		}
    }
	
	//CUANDO SE QUITA ALGUN CARACTER
	public void jTextFieldRemoveUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			//System.out.println("REMOVE");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroFactuSecuencialConstantesFunciones.CLASSNAME);
  		}
    }
	
	//CUANDO SE INGRESA ALGUN CARACTER
	public void jTextFieldInsertUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			//System.out.println("INSERT");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroFactuSecuencialConstantesFunciones.CLASSNAME);
  		}
    }
	
	//FUNCIONA AL APLASTAR ENTER
	public void jFormattedTextFieldActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaParametroFactuSecuencialActual();
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				Container containerParent=null;
				Container containerParentAux=null;
				JFormattedTextField JFormattedTextField=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				JFormattedTextField=(JFormattedTextField)evt.getSource();
				
				containerParentAux=JFormattedTextField.getParent();
				
				if(containerParentAux!=null && containerParentAux.getClass().equals(JDateChooser.class)) {
					containerParent=containerParentAux.getParent();
				}
				
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.parametrofactusecuencial);
				
				this.actualizarInformacion("INFO_PADRE",false,this.parametrofactusecuencial);
				
				ParametroFactuSecuencialBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametrofactusecuencial,new Object(),this.parametrofactusecuencialParameterGeneral,this.parametrofactusecuencialReturnGeneral);
								
						
				


				
				ParametroFactuSecuencialBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametrofactusecuencial,new Object(),this.parametrofactusecuencialParameterGeneral,this.parametrofactusecuencialReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(ParametroFactuSecuencial.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",ParametroFactuSecuencial.class.getName(),sTipo,"DATE",esControlTabla,conIrServidorAplicacionParent,
							id,JFormattedTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroFactuSecuencialConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jFormattedTextFieldFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTBOX,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextField jTextField=null;
				Container containerParent=null;
				Container containerParentAux=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParentAux=jTextField.getParent();
						
				if(containerParentAux!=null && containerParentAux.getClass().equals(JDateChooser.class)) {
					containerParent=containerParentAux.getParent();
				}
				
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.parametrofactusecuencial);
				
				this.actualizarInformacion("INFO_PADRE",false,this.parametrofactusecuencial);
				
				ParametroFactuSecuencialBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametrofactusecuencial,new Object(),this.parametrofactusecuencialParameterGeneral,this.parametrofactusecuencialReturnGeneral);
								
				
				


				
				ParametroFactuSecuencialBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametrofactusecuencial,new Object(),this.parametrofactusecuencialParameterGeneral,this.parametrofactusecuencialReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(ParametroFactuSecuencial.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",ParametroFactuSecuencial.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroFactuSecuencialConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jFormattedTextFieldFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaParametroFactuSecuencialActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosParametroFactuSecuencial.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactusecuencialAnterior =(ParametroFactuSecuencial) this.parametrofactusecuencialLogic.getParametroFactuSecuencials().toArray()[this.jTableDatosParametroFactuSecuencial.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.parametrofactusecuencialAnterior =(ParametroFactuSecuencial) this.parametrofactusecuencials.toArray()[this.jTableDatosParametroFactuSecuencial.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroFactuSecuencialConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.DATE,sTipo)) {
				this.actualizarInformacion("EVENTO_CONTROL",false,this.parametrofactusecuencial);
				
				this.actualizarInformacion("INFO_PADRE",false,this.parametrofactusecuencial);
			}	
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroFactuSecuencialConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaParametroFactuSecuencialActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosParametroFactuSecuencial.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactusecuencialAnterior =(ParametroFactuSecuencial) this.parametrofactusecuencialLogic.getParametroFactuSecuencials().toArray()[this.jTableDatosParametroFactuSecuencial.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.parametrofactusecuencialAnterior =(ParametroFactuSecuencial) this.parametrofactusecuencials.toArray()[this.jTableDatosParametroFactuSecuencial.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroFactuSecuencialConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaParametroFactuSecuencialActual();
				
			this.actualizarInformacion("EVENTO_CONTROL",false,this.parametrofactusecuencial);
			
			this.actualizarInformacion("INFO_PADRE",false,this.parametrofactusecuencial);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroFactuSecuencialConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jTextAreaFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTAREA,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextArea jTextArea=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextArea=(JTextArea)evt.getSource();
				
				containerParent=jTextArea.getParent();
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.parametrofactusecuencial);
				
				this.actualizarInformacion("INFO_PADRE",false,this.parametrofactusecuencial);
				
				ParametroFactuSecuencialBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametrofactusecuencial,new Object(),this.parametrofactusecuencialParameterGeneral,this.parametrofactusecuencialReturnGeneral);
							
				
				


				
				ParametroFactuSecuencialBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametrofactusecuencial,new Object(),this.parametrofactusecuencialParameterGeneral,this.parametrofactusecuencialReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(ParametroFactuSecuencial.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",ParametroFactuSecuencial.class.getName(),sTipo,"TEXTAREA",esControlTabla,conIrServidorAplicacionParent,
							id,jTextArea, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroFactuSecuencialConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaParametroFactuSecuencialActual();
			
				//SELECCIONA FILA A OBJETO ANTERIOR
				Integer intSelectedRow = this.jTableDatosParametroFactuSecuencial.getSelectedRow();
						
				if(intSelectedRow!=null && intSelectedRow>-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrofactusecuencialAnterior =(ParametroFactuSecuencial) this.parametrofactusecuencialLogic.getParametroFactuSecuencials().toArray()[this.jTableDatosParametroFactuSecuencial.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
						this.parametrofactusecuencialAnterior =(ParametroFactuSecuencial) this.parametrofactusecuencials.toArray()[this.jTableDatosParametroFactuSecuencial.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					//System.out.println(this.banco);
				}
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroFactuSecuencialConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaChangedUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			/*
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			//System.out.println("UPDATE");
			
			Boolean esControlTabla=false;
			//JTextArea jTextArea=null;
			Container containerParent=null;
			Component componentOpposite=null;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			ParametroFactuSecuencialBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametrofactusecuencial,new Object(),this.parametrofactusecuencialParameterGeneral,this.parametrofactusecuencialReturnGeneral);
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			//jTextArea=(JTextArea)evt.getSource();
			
			containerParent=jTextArea.getParent();
			componentOpposite=null;//evt.getOppositeComponent();
			
			if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
				|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
			) {
				esControlTabla=true;
			}
			
			this.esControlTabla=esControlTabla;
			
			


			
			ParametroFactuSecuencialBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametrofactusecuencial,new Object(),this.parametrofactusecuencialParameterGeneral,this.parametrofactusecuencialReturnGeneral);
			
			*/
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroFactuSecuencialConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaRemoveUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			//System.out.println("REMOVE");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroFactuSecuencialConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaInsertUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			
			//System.out.println("INSERT");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroFactuSecuencialConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO EXISTE O NO ES APLICABLE
	public void jTextAreaActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaParametroFactuSecuencialActual();
			
			this.actualizarInformacion("EVENTO_CONTROL",false,this.parametrofactusecuencial);
			
			this.actualizarInformacion("INFO_PADRE",false,this.parametrofactusecuencial);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroFactuSecuencialConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jLabelFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JLabel jLabel=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jLabel=(JLabel)evt.getSource();
				
				containerParent=jLabel.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.parametrofactusecuencial);
				
				this.actualizarInformacion("INFO_PADRE",false,this.parametrofactusecuencial);
				
				ParametroFactuSecuencialBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametrofactusecuencial,new Object(),this.parametrofactusecuencialParameterGeneral,this.parametrofactusecuencialReturnGeneral);
								
				
				


				
				ParametroFactuSecuencialBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametrofactusecuencial,new Object(),this.parametrofactusecuencialParameterGeneral,this.parametrofactusecuencialReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(ParametroFactuSecuencial.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",ParametroFactuSecuencial.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jLabel, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}	
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroFactuSecuencialConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jLabelFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaParametroFactuSecuencialActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosParametroFactuSecuencial.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactusecuencialAnterior =(ParametroFactuSecuencial) this.parametrofactusecuencialLogic.getParametroFactuSecuencials().toArray()[this.jTableDatosParametroFactuSecuencial.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.parametrofactusecuencialAnterior =(ParametroFactuSecuencial) this.parametrofactusecuencials.toArray()[this.jTableDatosParametroFactuSecuencial.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroFactuSecuencialConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO EXISTE O NO ES APLICABLE
	public void jLabelActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaParametroFactuSecuencialActual();
				
			this.actualizarInformacion("EVENTO_CONTROL",false,this.parametrofactusecuencial);
			
			this.actualizarInformacion("INFO_PADRE",false,this.parametrofactusecuencial);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroFactuSecuencialConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxItemListenerGeneral(String sTipo,ItemEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaParametroFactuSecuencialActual();
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JCheckBox jCheckBox=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
							
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jCheckBox=(JCheckBox)evt.getSource();
				
				containerParent=jCheckBox.getParent();
						
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.parametrofactusecuencial);
				
				this.actualizarInformacion("INFO_PADRE",false,this.parametrofactusecuencial);
				
				ParametroFactuSecuencialBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.parametrofactusecuencial,new Object(),this.parametrofactusecuencialParameterGeneral,this.parametrofactusecuencialReturnGeneral);
												
				
				if(sTipo.equals("SeleccionarTodosParametroFactuSecuencial")) {
					jCheckBoxSeleccionarTodosParametroFactuSecuencialItemListener(evt);
				
				} else if(sTipo.equals("SeleccionadosParametroFactuSecuencial")) {
					jCheckBoxSeleccionadosParametroFactuSecuencialItemListener(evt);
				
				} else if(sTipo.equals("NuevoToolBarParametroFactuSecuencial")) {
					
				}
				
				


				
				
				ParametroFactuSecuencialBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.parametrofactusecuencial,new Object(),this.parametrofactusecuencialParameterGeneral,this.parametrofactusecuencialReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(ParametroFactuSecuencial.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",ParametroFactuSecuencial.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jCheckBox, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}	
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroFactuSecuencialConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.CHECKBOX,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JCheckBox jCheckBox=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jCheckBox=(JCheckBox)evt.getSource();
				
				containerParent=jCheckBox.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				//this.actualizarInformacion("EVENTO_CONTROL",false,this.parametrofactusecuencial);
				
				//this.actualizarInformacion("INFO_PADRE",false,this.parametrofactusecuencial);
				
				ParametroFactuSecuencialBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.parametrofactusecuencial,new Object(),this.parametrofactusecuencialParameterGeneral,this.parametrofactusecuencialReturnGeneral);
												
				
				


				
				
				ParametroFactuSecuencialBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.parametrofactusecuencial,new Object(),this.parametrofactusecuencialParameterGeneral,this.parametrofactusecuencialReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
				
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(ParametroFactuSecuencial.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",ParametroFactuSecuencial.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jCheckBox, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroFactuSecuencialConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaParametroFactuSecuencialActual();
			
				//SELECCIONA FILA A OBJETO ANTERIOR
				Integer intSelectedRow = this.jTableDatosParametroFactuSecuencial.getSelectedRow();
						
				if(intSelectedRow!=null && intSelectedRow>-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrofactusecuencialAnterior =(ParametroFactuSecuencial) this.parametrofactusecuencialLogic.getParametroFactuSecuencials().toArray()[this.jTableDatosParametroFactuSecuencial.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
						this.parametrofactusecuencialAnterior =(ParametroFactuSecuencial) this.parametrofactusecuencials.toArray()[this.jTableDatosParametroFactuSecuencial.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					//System.out.println(this.banco);
				}
			}
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroFactuSecuencialConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaParametroFactuSecuencialActual();
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.parametrofactusecuencial);
				
				this.actualizarInformacion("INFO_PADRE",false,this.parametrofactusecuencial);
				
				ParametroFactuSecuencialBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.parametrofactusecuencial,new Object(),this.parametrofactusecuencialParameterGeneral,this.parametrofactusecuencialReturnGeneral);
				
				
				ParametroFactuSecuencialBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.parametrofactusecuencial,new Object(),this.parametrofactusecuencialParameterGeneral,this.parametrofactusecuencialReturnGeneral);
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroFactuSecuencialConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO SE UTILIZA, SE USA EL DE ABAJO, IGUAL SE DEJA EL CODIGO COMO RESPALDO Y ES CASI IGUAL
	//ERROR:SI SE USA,AL HACER CLIC EN EL MISMO ELEMENTO O EJECUTAR SELECTEDITEM, SIEMPRE SE EJECUTA COMO SI ESCOGIERA OTRO ELEMENTO(NO DEBERIA)
	//@SuppressWarnings("rawtypes")
	public void jComboBoxActionPerformedGeneral(String sTipo,ActionEvent evt) {		
		try {
			/*		
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			Container containerParent=null;
			Component componentOpposite=null;
			Boolean esControlTabla=false;
				
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			ParametroFactuSecuencialBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.parametrofactusecuencial,new Object(),this.parametrofactusecuencialParameterGeneral,this.parametrofactusecuencialReturnGeneral);
			JComboBox jComboBoxGenerico=null;						
			
			if(evt.getSource().getClass().equals(JComboBox.class)
				|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
					
				jComboBoxGenerico=(JComboBox)evt.getSource();
				
				containerParent=jComboBoxGenerico.getParent();
				
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
			}
			
			String sFinalQueryCombo="";
			
			


			
			ParametroFactuSecuencialBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametrofactusecuencial,new Object(),this.parametrofactusecuencialParameterGeneral,this.parametrofactusecuencialReturnGeneral);
			*/						
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroFactuSecuencialConstantesFunciones.CLASSNAME);
  		}		
    }
	
	@SuppressWarnings("rawtypes")
	public void jComboBoxItemStateChangedGeneral(String sTipo,ItemEvent evt) { 	  
		try {
			if (evt.getStateChange() == ItemEvent.SELECTED && this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaParametroFactuSecuencialActual();
			
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
			
			
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				Container containerParent=null;
				Component componentOpposite=null;
				Boolean esControlTabla=false;
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				JComboBox jComboBoxGenerico=null;						
				
				if(evt.getSource().getClass().equals(JComboBox.class)
					|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
						
					jComboBoxGenerico=(JComboBox)evt.getSource();
					
					containerParent=jComboBoxGenerico.getParent();
					
					componentOpposite=null;//evt.getOppositeComponent();
					
					if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
					) {					
						esControlTabla=true;
					}		
					
					this.esControlTabla=esControlTabla;
				}
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.parametrofactusecuencial);
				
				this.actualizarInformacion("INFO_PADRE",false,this.parametrofactusecuencial);
				
				ParametroFactuSecuencialBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.parametrofactusecuencial,new Object(),this.parametrofactusecuencialParameterGeneral,this.parametrofactusecuencialReturnGeneral);
				
				
				String sFinalQueryCombo="";
				
				


				
				ParametroFactuSecuencialBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametrofactusecuencial,new Object(),this.parametrofactusecuencialParameterGeneral,this.parametrofactusecuencialReturnGeneral);
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
				
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(ParametroFactuSecuencial.class.getName());
								
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",ParametroFactuSecuencial.class.getName(),sTipo,"COMBOBOX",esControlTabla,conIrServidorAplicacionParent,
							id,jComboBoxGenerico, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroFactuSecuencialConstantesFunciones.CLASSNAME);
  		}
    }
	
	//@SuppressWarnings("rawtypes")
	public void jComboBoxFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		//MANEJADO EN ITEMLISTENER
		/*
		try {
			if(this.permiteManejarEventosControl()) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				
				//if(this.esUsoDesdeHijo) {
				//	eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				//}
				
				
				Container containerParent=null;
				Component componentOpposite=null;
				Boolean esControlTabla=false;
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
			
				this.actualizarInformacion("EVENTO_CONTROL",false,this.parametrofactusecuencial);
				
				this.actualizarInformacion("INFO_PADRE",false,this.parametrofactusecuencial);
				
				ParametroFactuSecuencialBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.parametrofactusecuencial,new Object(),this.parametrofactusecuencialParameterGeneral,this.parametrofactusecuencialReturnGeneral);
				JComboBox jComboBoxGenerico=null;						
				
				if(evt.getSource().getClass().equals(JComboBox.class)
					|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
						
					jComboBoxGenerico=(JComboBox)evt.getSource();
					
					containerParent=jComboBoxGenerico.getParent();
					
					componentOpposite=evt.getOppositeComponent();
					
					if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
					) {					
						esControlTabla=true;
					}
					
					this.esControlTabla=esControlTabla;
				}
				
				String sFinalQueryCombo="";
				
				


				
				ParametroFactuSecuencialBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametrofactusecuencial,new Object(),this.parametrofactusecuencialParameterGeneral,this.parametrofactusecuencialReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(ParametroFactuSecuencial.class.getName());
				
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",ParametroFactuSecuencial.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jComboBoxGenerico, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroFactuSecuencialConstantesFunciones.CLASSNAME);
  		}
		
		*/
    }
	
	public void jComboBoxFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaParametroFactuSecuencialActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosParametroFactuSecuencial.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactusecuencialAnterior =(ParametroFactuSecuencial) this.parametrofactusecuencialLogic.getParametroFactuSecuencials().toArray()[this.jTableDatosParametroFactuSecuencial.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.parametrofactusecuencialAnterior =(ParametroFactuSecuencial) this.parametrofactusecuencials.toArray()[this.jTableDatosParametroFactuSecuencial.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroFactuSecuencialConstantesFunciones.CLASSNAME);
  		}
    }		
	
	public void tableValueChangedGeneral(String sTipo,ListSelectionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				ParametroFactuSecuencialBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TABLE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametrofactusecuencial,new Object(),this.parametrofactusecuencialParameterGeneral,this.parametrofactusecuencialReturnGeneral);
				
				if(sTipo.equals("TableDatosSeleccionarParametroFactuSecuencial")) {
					//BYDAN_DESHABILITADO
					//try {jTableDatosParametroFactuSecuencialListSelectionListener(e);}catch(Exception e1){e1.printStackTrace();}
					
					//SOLO CUANDO MOUSE ES SOLTADO
					if (!evt.getValueIsAdjusting()) {
						//SELECCIONA FILA A OBJETO ACTUAL
						Integer intSelectedRow = this.jTableDatosParametroFactuSecuencial.getSelectedRow();
						
						if(intSelectedRow!=null && intSelectedRow>-1) {
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								this.parametrofactusecuencial =(ParametroFactuSecuencial) this.parametrofactusecuencialLogic.getParametroFactuSecuencials().toArray()[this.jTableDatosParametroFactuSecuencial.convertRowIndexToModel(intSelectedRow)];
							} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
								this.parametrofactusecuencial =(ParametroFactuSecuencial) this.parametrofactusecuencials.toArray()[this.jTableDatosParametroFactuSecuencial.convertRowIndexToModel(intSelectedRow)];
							}
							//ARCHITECTURE
							
							//System.out.println(this.parametrofactusecuencial);
						}
					}
					
				} else if(sTipo.equals("jButtonCancelarParametroFactuSecuencial")) {
				
				}
				
				ParametroFactuSecuencialBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TABLE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametrofactusecuencial,new Object(),this.parametrofactusecuencialParameterGeneral,this.parametrofactusecuencialReturnGeneral);
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroFactuSecuencialConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void tableMouseAdapterGeneral(String sTipo,MouseEvent evt) { 	  
		try {
			ParametroFactuSecuencialBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TABLE,EventoTipo.MOUSE,EventoSubTipo.CLICKED,sTipo,this.parametrofactusecuencial,new Object(),this.parametrofactusecuencialParameterGeneral,this.parametrofactusecuencialReturnGeneral);
			
			if(sTipo.equals("DatosSeleccionarParametroFactuSecuencial")) {
				if (evt.getClickCount() == 2) {
					jButtonIdActionPerformed(null,jTableDatosParametroFactuSecuencial.getSelectedRow(),false,false);
				}	
			} else if(sTipo.equals("jButtonCancelarParametroFactuSecuencial")) {
			
			}
			
			ParametroFactuSecuencialBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TABLE,EventoTipo.MOUSE,EventoSubTipo.CLICKED,sTipo,this.parametrofactusecuencial,new Object(),this.parametrofactusecuencialParameterGeneral,this.parametrofactusecuencialReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroFactuSecuencialConstantesFunciones.CLASSNAME);
  		}
    }
	
	;
	
	public void jButtonActionPerformedTecladoGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			this.startProcessParametroFactuSecuencial();
			
			ParametroFactuSecuencialBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.KEY,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.parametrofactusecuencial,new Object(),this.parametrofactusecuencialParameterGeneral,this.parametrofactusecuencialReturnGeneral);
			
			if(sTipo.equals("NuevoParametroFactuSecuencial")) {
				jButtonNuevoParametroFactuSecuencialActionPerformed(evt,false);
				
			} else if(sTipo.equals("DuplicarParametroFactuSecuencial")) {
				jButtonDuplicarParametroFactuSecuencialActionPerformed(evt,false);
				
			} else if(sTipo.equals("CopiarParametroFactuSecuencial")) {
				jButtonCopiarParametroFactuSecuencialActionPerformed(evt);
				
			} else if(sTipo.equals("VerFormParametroFactuSecuencial")) {
				jButtonVerFormParametroFactuSecuencialActionPerformed(evt);
				
			} else if(sTipo.equals("NuevoRelacionesParametroFactuSecuencial")) {
				jButtonNuevoParametroFactuSecuencialActionPerformed(evt,true);
				
			} else if(sTipo.equals("ModificarParametroFactuSecuencial")) {
				jButtonModificarParametroFactuSecuencialActionPerformed(evt);
				
			} else if(sTipo.equals("ActualizarParametroFactuSecuencial")) {
				jButtonActualizarParametroFactuSecuencialActionPerformed(evt);
				
			} else if(sTipo.equals("EliminarParametroFactuSecuencial")) {
				jButtonEliminarParametroFactuSecuencialActionPerformed(evt);
				
			} else if(sTipo.equals("GuardarCambiosTablaParametroFactuSecuencial")) {
				jButtonGuardarCambiosParametroFactuSecuencialActionPerformed(evt);
				
			} else if(sTipo.equals("CancelarParametroFactuSecuencial")) {
				jButtonCancelarParametroFactuSecuencialActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarParametroFactuSecuencial")) {
				jButtonCerrarParametroFactuSecuencialActionPerformed(evt);
				
			} else if(sTipo.equals("GuardarCambiosParametroFactuSecuencial")) {
				jButtonGuardarCambiosParametroFactuSecuencialActionPerformed(evt);
			
			} else if(sTipo.equals("NuevoGuardarCambiosParametroFactuSecuencial")) {
				jButtonNuevoGuardarCambiosParametroFactuSecuencialActionPerformed(evt);
			
			} else if(sTipo.equals("AbrirOrderByParametroFactuSecuencial")) {
				jButtonAbrirOrderByParametroFactuSecuencialActionPerformed(evt);
			
			} else if(sTipo.equals("RecargarInformacionParametroFactuSecuencial")) {
				jButtonRecargarInformacionParametroFactuSecuencialActionPerformed(evt);
			
			} else if(sTipo.equals("AnterioresParametroFactuSecuencial")) {
				jButtonAnterioresParametroFactuSecuencialActionPerformed(evt);			
			
			}  else if(sTipo.equals("SiguientesParametroFactuSecuencial")) {
				jButtonSiguientesParametroFactuSecuencialActionPerformed(evt);			
			} 
			
			
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("idParametroFactuSecuencialBusqueda")) {
				this.jButtonidParametroFactuSecuencialBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_empresaParametroFactuSecuencialUpdate")) {
				this.jButtonid_empresaParametroFactuSecuencialUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_empresaParametroFactuSecuencialBusqueda")) {
				this.jButtonid_empresaParametroFactuSecuencialBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_sucursalParametroFactuSecuencialUpdate")) {
				this.jButtonid_sucursalParametroFactuSecuencialUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_sucursalParametroFactuSecuencialBusqueda")) {
				this.jButtonid_sucursalParametroFactuSecuencialBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_documento_generalParametroFactuSecuencialUpdate")) {
				this.jButtonid_tipo_documento_generalParametroFactuSecuencialUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_documento_generalParametroFactuSecuencialBusqueda")) {
				this.jButtonid_tipo_documento_generalParametroFactuSecuencialBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("secuencialParametroFactuSecuencialBusqueda")) {
				this.jButtonsecuencialParametroFactuSecuencialBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("numero_digitosParametroFactuSecuencialBusqueda")) {
				this.jButtonnumero_digitosParametroFactuSecuencialBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("numero_itemsParametroFactuSecuencialBusqueda")) {
				this.jButtonnumero_itemsParametroFactuSecuencialBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("numero_descuentoParametroFactuSecuencialBusqueda")) {
				this.jButtonnumero_descuentoParametroFactuSecuencialBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("numero_adiicionalesParametroFactuSecuencialBusqueda")) {
				this.jButtonnumero_adiicionalesParametroFactuSecuencialBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("numero_digito_inicioParametroFactuSecuencialBusqueda")) {
				this.jButtonnumero_digito_inicioParametroFactuSecuencialBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("numero_digito_finParametroFactuSecuencialBusqueda")) {
				this.jButtonnumero_digito_finParametroFactuSecuencialBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("numero_dias_plazoParametroFactuSecuencialBusqueda")) {
				this.jButtonnumero_dias_plazoParametroFactuSecuencialBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("con_detalleParametroFactuSecuencialBusqueda")) {
				this.jButtoncon_detalleParametroFactuSecuencialBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("con_lectorParametroFactuSecuencialBusqueda")) {
				this.jButtoncon_lectorParametroFactuSecuencialBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_bodegaParametroFactuSecuencialUpdate")) {
				this.jButtonid_bodegaParametroFactuSecuencialUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_bodegaParametroFactuSecuencialBusqueda")) {
				this.jButtonid_bodegaParametroFactuSecuencialBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_param_factu_plazoParametroFactuSecuencialUpdate")) {
				this.jButtonid_tipo_param_factu_plazoParametroFactuSecuencialUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_param_factu_plazoParametroFactuSecuencialBusqueda")) {
				this.jButtonid_tipo_param_factu_plazoParametroFactuSecuencialBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_formatoParametroFactuSecuencialUpdate")) {
				this.jButtonid_formatoParametroFactuSecuencialUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_formatoParametroFactuSecuencialBusqueda")) {
				this.jButtonid_formatoParametroFactuSecuencialBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("con_transferenciaParametroFactuSecuencialBusqueda")) {
				this.jButtoncon_transferenciaParametroFactuSecuencialBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_bodega_transferenciaParametroFactuSecuencialUpdate")) {
				this.jButtonid_bodega_transferenciaParametroFactuSecuencialUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_bodega_transferenciaParametroFactuSecuencialBusqueda")) {
				this.jButtonid_bodega_transferenciaParametroFactuSecuencialBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_transaccion_transferenciaParametroFactuSecuencialUpdate")) {
				this.jButtonid_transaccion_transferenciaParametroFactuSecuencialUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_transaccion_transferenciaParametroFactuSecuencialBusqueda")) {
				this.jButtonid_transaccion_transferenciaParametroFactuSecuencialBusquedaActionPerformed(evt);
			}
			
			ParametroFactuSecuencialBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.KEY,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.parametrofactusecuencial,new Object(),this.parametrofactusecuencialParameterGeneral,this.parametrofactusecuencialReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroFactuSecuencialConstantesFunciones.CLASSNAME);
			
  		}  finally {
      		this.finishProcessParametroFactuSecuencial();
      	}
    }
	
	public void internalFrameClosingInternalFrameGeneral(String sTipo,InternalFrameEvent evt) { 	  
		try {
			ParametroFactuSecuencialBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.WINDOW,EventoTipo.CLIC,EventoSubTipo.CLOSING,sTipo,this.parametrofactusecuencial,new Object(),this.parametrofactusecuencialParameterGeneral,this.parametrofactusecuencialReturnGeneral);
			
			if(sTipo.equals("CloseInternalFrameParametroFactuSecuencial")) {
				closingInternalFrameParametroFactuSecuencial();
				
			} else if(sTipo.equals("jButtonCancelarParametroFactuSecuencial")) {
				JInternalFrameBase jInternalFrameDetalleFormParametroFactuSecuencial = (JInternalFrameBase)evt.getSource();
	            	
	            ParametroFactuSecuencialBeanSwingJInternalFrame jInternalFrameParent=(ParametroFactuSecuencialBeanSwingJInternalFrame)jInternalFrameDetalleFormParametroFactuSecuencial.getjInternalFrameParent();
	            
				jInternalFrameParent.jButtonCancelarParametroFactuSecuencialActionPerformed(null);
			}
			
			ParametroFactuSecuencialBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.WINDOW,EventoTipo.CLIC,EventoSubTipo.CLOSING,sTipo,this.parametrofactusecuencial,new Object(),this.parametrofactusecuencialParameterGeneral,this.parametrofactusecuencialReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroFactuSecuencialConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void recargarFormParametroFactuSecuencial(String sTipo,String sDominio,EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,String sTipoGeneral,ArrayList<Classe> classes,Boolean conIrServidorAplicacion) throws Exception {
		this.recargarFormParametroFactuSecuencial(sTipo,sDominio,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipoGeneral,classes,conIrServidorAplicacion,false);
	}
	
	public void recargarFormParametroFactuSecuencial(String sTipo,String sDominio,EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,String sTipoGeneral,ArrayList<Classe> classes,Boolean conIrServidorAplicacion,Boolean esControlTabla) throws Exception {
		if(this.permiteRecargarForm && this.permiteMantenimiento(this.parametrofactusecuencial)) {
			if(!esControlTabla) {
				if(ParametroFactuSecuencialJInternalFrame.ISBINDING_MANUAL_TABLA) {			
					this.setVariablesFormularioToObjetoActualParametroFactuSecuencial(this.parametrofactusecuencial,true,false);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuSecuencial(this.parametrofactusecuencial);			
				}
				
				if(this.parametrofactusecuencialSessionBean.getEstaModoGuardarRelaciones()) {
					this.setVariablesFormularioRelacionesToObjetoActualParametroFactuSecuencial(this.parametrofactusecuencial,classes);				
				}
			
				if(conIrServidorAplicacion) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {						
						this.parametrofactusecuencialReturnGeneral=parametrofactusecuencialLogic.procesarEventosParametroFactuSecuencialsWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.parametrofactusecuencialLogic.getParametroFactuSecuencials(),this.parametrofactusecuencial,this.parametrofactusecuencialParameterGeneral,this.isEsNuevoParametroFactuSecuencial,classes);//this.parametrofactusecuencialLogic.getParametroFactuSecuencial()//sTipoGeneral
									
					} else if(Constantes.ISUSAEJBREMOTE) {
									
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE
					
					//ACTUALIZA VARIABLES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
					//this.setVariablesObjetoReturnGeneralToBeanParametroFactuSecuencial(this.parametrofactusecuencialReturnGeneral,this.parametrofactusecuencialBean,false);
						
					//ACTUALIZA VARIABLES RELACIONES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
					if(this.parametrofactusecuencialSessionBean.getEstaModoGuardarRelaciones()) {
						//this.setVariablesRelacionesObjetoReturnGeneralToBeanParametroFactuSecuencial(classes,this.parametrofactusecuencialReturnGeneral,this.parametrofactusecuencialBean,false);
					}
						
					if(this.parametrofactusecuencialReturnGeneral.getConRecargarPropiedades()) {
						//INICIALIZA VARIABLES COMBOS NORMALES (FK)
						this.setVariablesObjetoActualToFormularioForeignKeyParametroFactuSecuencial(this.parametrofactusecuencialReturnGeneral.getParametroFactuSecuencial());
							
						//INICIALIZA VARIABLES NORMALES A FORMULARIO(SIN FK)
						this.setVariablesObjetoActualToFormularioParametroFactuSecuencial(this.parametrofactusecuencialReturnGeneral.getParametroFactuSecuencial());	
					}
						
					if(this.parametrofactusecuencialReturnGeneral.getConRecargarRelaciones()) {
						//INICIALIZA VARIABLES RELACIONES A FORMULARIO
						this.setVariablesRelacionesObjetoActualToFormularioParametroFactuSecuencial(this.parametrofactusecuencialReturnGeneral.getParametroFactuSecuencial(),classes);//this.parametrofactusecuencialBean);	
					}									
					
				} else {				
					//INICIALIZA VARIABLES RELACIONES A FORMULARIO
					this.setVariablesRelacionesObjetoActualToFormularioParametroFactuSecuencial(this.parametrofactusecuencial,classes);//this.parametrofactusecuencialBean);									
				}
			
				if(ParametroFactuSecuencialJInternalFrame.ISBINDING_MANUAL_TABLA) {
					this.setVariablesFormularioToObjetoActualParametroFactuSecuencial(this.parametrofactusecuencial,true,false);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuSecuencial(this.parametrofactusecuencial);				
				}
				
			} else {
				
				if(((controlTipo.equals(ControlTipo.TEXTBOX) || controlTipo.equals(ControlTipo.DATE)
					|| controlTipo.equals(ControlTipo.TEXTAREA) || controlTipo.equals(ControlTipo.COMBOBOX)
					)				
					&& eventoTipo.equals(EventoTipo.CHANGE)
					)
					
					|| (controlTipo.equals(ControlTipo.CHECKBOX) && eventoTipo.equals(EventoTipo.CLIC))
					
				) { // && sTipoGeneral.equals("TEXTBOX")
					
					if(this.parametrofactusecuencialAnterior!=null) {
						this.parametrofactusecuencial=this.parametrofactusecuencialAnterior;
					}
				}
				
				if(conIrServidorAplicacion) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {						
						this.parametrofactusecuencialReturnGeneral=parametrofactusecuencialLogic.procesarEventosParametroFactuSecuencialsWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.parametrofactusecuencialLogic.getParametroFactuSecuencials(),this.parametrofactusecuencial,this.parametrofactusecuencialParameterGeneral,this.isEsNuevoParametroFactuSecuencial,classes);//this.parametrofactusecuencialLogic.getParametroFactuSecuencial()//sTipoGeneral
									
					} else if(Constantes.ISUSAEJBREMOTE) {
									
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//NO ENTENDIBLE PORQUE PONER
					//if(this.parametrofactusecuencialSessionBean.getEstaModoGuardarRelaciones() 
					//	|| this.parametrofactusecuencialSessionBean.getEsGuardarRelacionado())	{
						actualizarLista(this.parametrofactusecuencialReturnGeneral.getParametroFactuSecuencial(),parametrofactusecuencialLogic.getParametroFactuSecuencials());
					//}
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(this.parametrofactusecuencialReturnGeneral.getParametroFactuSecuencial(),this.parametrofactusecuencials);
				}
				//ARCHITECTURE
				
				//this.jTableDatosParametroFactuSecuencial.repaint();
				
				//((AbstractTableModel) this.jTableDatosParametroFactuSecuencial.getModel()).fireTableDataChanged();
				
				this.actualizarVisualTableDatosParametroFactuSecuencial();
			}
		}
	}
	
	public void actualizarVisualTableDatosParametroFactuSecuencial() throws Exception {
		
		ParametroFactuSecuencialModel parametrofactusecuencialModel=(ParametroFactuSecuencialModel)this.jTableDatosParametroFactuSecuencial.getModel();
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			parametrofactusecuencialModel.parametrofactusecuencials=this.parametrofactusecuencialLogic.getParametroFactuSecuencials();
		
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
			parametrofactusecuencialModel.parametrofactusecuencials=this.parametrofactusecuencials;
		}
		
		
		((ParametroFactuSecuencialModel) this.jTableDatosParametroFactuSecuencial.getModel()).fireTableDataChanged();
	}
	
	public void actualizarVisualTableDatosEventosVistaParametroFactuSecuencial() throws Exception {
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.actualizarLista(this.getparametrofactusecuencialAnterior(),this.parametrofactusecuencialLogic.getParametroFactuSecuencials());
					
		} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
			this.actualizarLista(this.getparametrofactusecuencialAnterior(),this.parametrofactusecuencials);
		}
		//ARCHITECTURE
						
		this.actualizarFilaTotales();
						
		this.actualizarVisualTableDatosParametroFactuSecuencial();	
	}
	
	public void setVariablesRelacionesObjetoActualToFormularioParametroFactuSecuencial(ParametroFactuSecuencial parametrofactusecuencial,ArrayList<Classe> classes) throws Exception { 
		try {
			
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroFactuSecuencialConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setEventoParentGeneral(Boolean esUsoDesdeHijo,String sDominio,String sDominioTipo,String sTipo,String sTipoGeneral,Boolean esControlTabla,Boolean conIrServidorAplicacion,
						Long id,Component control, EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,ArrayList<String> arrClasses,
						Object evt,GeneralEntityParameterReturnGeneral generalEntityParameterGeneral,Object otro) { 	  
		try {
			
			if(this.permiteManejarEventosControl()) {
				
				//BASE COPIADO DESDE TEXTFIELLOSTFOCUS
				
				//EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				Boolean conTodasRelaciones=false;
				
				this.esUsoDesdeHijo=esUsoDesdeHijo;
										
				ParametroFactuSecuencialBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.parametrofactusecuencial,new Object(),generalEntityParameterGeneral,this.parametrofactusecuencialReturnGeneral);
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				for(String sClasse:arrClasses) {
					if(sClasse.equals("TODOS")) {
						conTodasRelaciones=true;
						break;
					}
				}
				
				if(this.parametrofactusecuencialSessionBean.getConGuardarRelaciones()) {
					if(conTodasRelaciones) {
						classes=ParametroFactuSecuencialConstantesFunciones.getClassesRelationshipsOfParametroFactuSecuencial(new ArrayList<Classe>(),DeepLoadType.NONE);
					} else {
						classes=ParametroFactuSecuencialConstantesFunciones.getClassesRelationshipsFromStringsOfParametroFactuSecuencial(arrClasses,DeepLoadType.NONE);
					}
				}
	
				this.classesActual=new ArrayList<Classe>();
				this.classesActual.addAll(classes);
	
				this.recargarFormParametroFactuSecuencial(sTipo,sDominio,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipoGeneral,classes,conIrServidorAplicacion,esControlTabla);
										
				ParametroFactuSecuencialBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.parametrofactusecuencial,new Object(),generalEntityParameterGeneral,this.parametrofactusecuencialReturnGeneral);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroFactuSecuencialConstantesFunciones.CLASSNAME);
  		}
    }
	
	/*
	public void setVariablesRelacionesObjetoBeanActualToFormularioParametroFactuSecuencial(ParametroFactuSecuencialBean parametrofactusecuencialBean) throws Exception { 
		try {
			
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroFactuSecuencialConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesRelacionesObjetoReturnGeneralToBeanParametroFactuSecuencial(ArrayList<Classe> classes,ParametroFactuSecuencialReturnGeneral parametrofactusecuencialReturnGeneral,ParametroFactuSecuencialBean parametrofactusecuencialBean,Boolean conDefault) throws Exception {
		
	}
	*/
	
	public void setVariablesFormularioRelacionesToObjetoActualParametroFactuSecuencial(ParametroFactuSecuencial parametrofactusecuencial,ArrayList<Classe> classes) throws Exception {
		
	}
	
	public Boolean permiteManejarEventosControl() {
		Boolean permite=true;				
		
		if(this.estaModoNuevo || this.estaModoSeleccionar || this.estaModoEliminarGuardarCambios) {
			permite=false;
			
		} 
		
		//NO DEBE MEZCLARSE CONCEPTOS
		/*	
		if(!paraTabla && !this.permiteMantenimiento(this.parametrofactusecuencial)) {
			System.out.println("ERROR:EL OBJETO ACTUAL NO PUEDE SER FILA TOTALES");
				
			//JOptionPane.showMessageDialog(this,"EL OBJETO ACTUAL NO PUEDE SER FILA TOTALES","EVENTO",JOptionPane.ERROR_MESSAGE);			
		}
		*/
		
		return permite;
	}
	
	public void inicializarFormDetalle() throws Exception {
		
		this.jInternalFrameDetalleFormParametroFactuSecuencial = new ParametroFactuSecuencialDetalleFormJInternalFrame(jDesktopPane,this.parametrofactusecuencialSessionBean.getConGuardarRelaciones(),this.parametrofactusecuencialSessionBean.getEsGuardarRelacionado(),this.cargarRelaciones,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo);
		
		this.jDesktopPane.add(this.jInternalFrameDetalleFormParametroFactuSecuencial);
		this.jInternalFrameDetalleFormParametroFactuSecuencial.setVisible(false);
		this.jInternalFrameDetalleFormParametroFactuSecuencial.setSelected(false);						
		
		this.jInternalFrameDetalleFormParametroFactuSecuencial.setJInternalFrameParent(this);
		
		this.jInternalFrameDetalleFormParametroFactuSecuencial.parametrofactusecuencialLogic=this.parametrofactusecuencialLogic;
		
		this.cargarCombosFrameForeignKeyParametroFactuSecuencial("Formulario");
		
		this.inicializarActualizarBindingBotonesPermisosManualFormDetalleParametroFactuSecuencial();
		this.inicializarActualizarBindingtiposArchivosReportesAccionesManualFormDetalleParametroFactuSecuencial();
		
		this.initActionsFormDetalle();		
		
		this.initActionsCombosTodosForeignKeyParametroFactuSecuencial("Formulario");
		
		//TALVEZ conSetVariablesGlobales COMO if() 
		this.setVariablesGlobalesCombosForeignKeyParametroFactuSecuencial();
		
		this.cargarMenuRelaciones();
		
	}
	
	public void initActionsFormDetalle() {	
		
		this.jInternalFrameDetalleFormParametroFactuSecuencial.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"jButtonCancelarParametroFactuSecuencial"));
		
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jButtonModificarParametroFactuSecuencial.addActionListener(new ButtonActionListener(this,"ModificarParametroFactuSecuencial"));

		
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jButtonModificarToolBarParametroFactuSecuencial.addActionListener(new ButtonActionListener(this,"ModificarToolBarParametroFactuSecuencial"));
					
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jMenuItemModificarParametroFactuSecuencial.addActionListener(new ButtonActionListener(this,"MenuItemModificarParametroFactuSecuencial"));		
		
		
		
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jButtonActualizarParametroFactuSecuencial.addActionListener (new ButtonActionListener(this,"ActualizarParametroFactuSecuencial"));
		
		
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jButtonActualizarToolBarParametroFactuSecuencial.addActionListener(new ButtonActionListener(this,"ActualizarToolBarParametroFactuSecuencial"));
						
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jMenuItemActualizarParametroFactuSecuencial.addActionListener (new ButtonActionListener(this,"MenuItemActualizarParametroFactuSecuencial"));		
		
		
		
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jButtonEliminarParametroFactuSecuencial.addActionListener (new ButtonActionListener(this,"EliminarParametroFactuSecuencial"));
		
		
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jButtonEliminarToolBarParametroFactuSecuencial.addActionListener (new ButtonActionListener(this,"EliminarToolBarParametroFactuSecuencial"));
								
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jMenuItemEliminarParametroFactuSecuencial.addActionListener (new ButtonActionListener(this,"MenuItemEliminarParametroFactuSecuencial"));		
		
		
		
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jButtonCancelarParametroFactuSecuencial.addActionListener (new ButtonActionListener(this,"CancelarParametroFactuSecuencial"));
		
		
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jButtonCancelarToolBarParametroFactuSecuencial.addActionListener (new ButtonActionListener(this,"CancelarToolBarParametroFactuSecuencial"));
					
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jMenuItemCancelarParametroFactuSecuencial.addActionListener (new ButtonActionListener(this,"MenuItemCancelarParametroFactuSecuencial"));		
		
		
		
		
		
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jMenuItemDetalleCerrarParametroFactuSecuencial.addActionListener (new ButtonActionListener(this,"MenuItemDetalleCerrarParametroFactuSecuencial"));		
		
		
		
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jButtonGuardarCambiosToolBarParametroFactuSecuencial.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarParametroFactuSecuencial"));
		
		
		
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jButtonGuardarCambiosToolBarParametroFactuSecuencial.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarParametroFactuSecuencial"));
		
		
		
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jComboBoxTiposAccionesFormularioParametroFactuSecuencial.addActionListener (new ButtonActionListener(this,"TiposAccionesFormularioParametroFactuSecuencial"));
		
		
				
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jButtonidParametroFactuSecuencialBusqueda.addActionListener(new ButtonActionListener(this,"idParametroFactuSecuencialBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jButtonid_empresaParametroFactuSecuencialUpdate.addActionListener(new ButtonActionListener(this,"id_empresaParametroFactuSecuencialUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jButtonid_empresaParametroFactuSecuencialBusqueda.addActionListener(new ButtonActionListener(this,"id_empresaParametroFactuSecuencialBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jButtonid_sucursalParametroFactuSecuencialUpdate.addActionListener(new ButtonActionListener(this,"id_sucursalParametroFactuSecuencialUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jButtonid_sucursalParametroFactuSecuencialBusqueda.addActionListener(new ButtonActionListener(this,"id_sucursalParametroFactuSecuencialBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jButtonid_tipo_documento_generalParametroFactuSecuencialUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_documento_generalParametroFactuSecuencialUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jButtonid_tipo_documento_generalParametroFactuSecuencialBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_documento_generalParametroFactuSecuencialBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jButtonsecuencialParametroFactuSecuencialBusqueda.addActionListener(new ButtonActionListener(this,"secuencialParametroFactuSecuencialBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jButtonnumero_digitosParametroFactuSecuencialBusqueda.addActionListener(new ButtonActionListener(this,"numero_digitosParametroFactuSecuencialBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jButtonnumero_itemsParametroFactuSecuencialBusqueda.addActionListener(new ButtonActionListener(this,"numero_itemsParametroFactuSecuencialBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jButtonnumero_descuentoParametroFactuSecuencialBusqueda.addActionListener(new ButtonActionListener(this,"numero_descuentoParametroFactuSecuencialBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jButtonnumero_adiicionalesParametroFactuSecuencialBusqueda.addActionListener(new ButtonActionListener(this,"numero_adiicionalesParametroFactuSecuencialBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jButtonnumero_digito_inicioParametroFactuSecuencialBusqueda.addActionListener(new ButtonActionListener(this,"numero_digito_inicioParametroFactuSecuencialBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jButtonnumero_digito_finParametroFactuSecuencialBusqueda.addActionListener(new ButtonActionListener(this,"numero_digito_finParametroFactuSecuencialBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jButtonnumero_dias_plazoParametroFactuSecuencialBusqueda.addActionListener(new ButtonActionListener(this,"numero_dias_plazoParametroFactuSecuencialBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jButtoncon_detalleParametroFactuSecuencialBusqueda.addActionListener(new ButtonActionListener(this,"con_detalleParametroFactuSecuencialBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jButtoncon_lectorParametroFactuSecuencialBusqueda.addActionListener(new ButtonActionListener(this,"con_lectorParametroFactuSecuencialBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jButtonid_bodegaParametroFactuSecuencialUpdate.addActionListener(new ButtonActionListener(this,"id_bodegaParametroFactuSecuencialUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jButtonid_bodegaParametroFactuSecuencialBusqueda.addActionListener(new ButtonActionListener(this,"id_bodegaParametroFactuSecuencialBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jButtonid_tipo_param_factu_plazoParametroFactuSecuencialUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_param_factu_plazoParametroFactuSecuencialUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jButtonid_tipo_param_factu_plazoParametroFactuSecuencialBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_param_factu_plazoParametroFactuSecuencialBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jButtonid_formatoParametroFactuSecuencialUpdate.addActionListener(new ButtonActionListener(this,"id_formatoParametroFactuSecuencialUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jButtonid_formatoParametroFactuSecuencialBusqueda.addActionListener(new ButtonActionListener(this,"id_formatoParametroFactuSecuencialBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jButtoncon_transferenciaParametroFactuSecuencialBusqueda.addActionListener(new ButtonActionListener(this,"con_transferenciaParametroFactuSecuencialBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jButtonid_bodega_transferenciaParametroFactuSecuencialUpdate.addActionListener(new ButtonActionListener(this,"id_bodega_transferenciaParametroFactuSecuencialUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jButtonid_bodega_transferenciaParametroFactuSecuencialBusqueda.addActionListener(new ButtonActionListener(this,"id_bodega_transferenciaParametroFactuSecuencialBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jButtonid_transaccion_transferenciaParametroFactuSecuencialUpdate.addActionListener(new ButtonActionListener(this,"id_transaccion_transferenciaParametroFactuSecuencialUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jButtonid_transaccion_transferenciaParametroFactuSecuencialBusqueda.addActionListener(new ButtonActionListener(this,"id_transaccion_transferenciaParametroFactuSecuencialBusqueda"));
		
		
		;

		//TABBED PANE RELACIONES
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jTabbedPaneRelacionesParametroFactuSecuencial.addChangeListener(new TabbedPaneChangeListener(this,"RelacionesParametroFactuSecuencial"));
		
		;		
		//TABBED PANE RELACIONES FIN(EXTRA TAB)	
	}
	
	public void initActions() {				
		this.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"CloseInternalFrameParametroFactuSecuencial"));
		
		if(this.jInternalFrameDetalleFormParametroFactuSecuencial!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormParametroFactuSecuencial.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"jButtonCancelarParametroFactuSecuencial"));
		}
		
		this.jTableDatosParametroFactuSecuencial.getSelectionModel().addListSelectionListener(new TableListSelectionListener(this,"TableDatosSeleccionarParametroFactuSecuencial"));
		
		this.jTableDatosParametroFactuSecuencial.addMouseListener(new TableMouseAdapter(this,"DatosSeleccionarParametroFactuSecuencial"));
		
		this.jButtonNuevoParametroFactuSecuencial.addActionListener(new ButtonActionListener(this,"NuevoParametroFactuSecuencial"));
		
		this.jButtonDuplicarParametroFactuSecuencial.addActionListener(new ButtonActionListener(this,"DuplicarParametroFactuSecuencial"));
		
		this.jButtonCopiarParametroFactuSecuencial.addActionListener(new ButtonActionListener(this,"CopiarParametroFactuSecuencial"));
		
		this.jButtonVerFormParametroFactuSecuencial.addActionListener(new ButtonActionListener(this,"VerFormParametroFactuSecuencial"));
		
		
		this.jButtonNuevoToolBarParametroFactuSecuencial.addActionListener(new ButtonActionListener(this,"NuevoToolBarParametroFactuSecuencial"));
			
		this.jButtonDuplicarToolBarParametroFactuSecuencial.addActionListener(new ButtonActionListener(this,"DuplicarToolBarParametroFactuSecuencial"));
			
		this.jMenuItemNuevoParametroFactuSecuencial.addActionListener (new ButtonActionListener(this,"MenuItemNuevoParametroFactuSecuencial"));
			
		this.jMenuItemDuplicarParametroFactuSecuencial.addActionListener (new ButtonActionListener(this,"MenuItemDuplicarParametroFactuSecuencial"));		
		
		
		this.jButtonNuevoRelacionesParametroFactuSecuencial.addActionListener (new ButtonActionListener(this,"NuevoRelacionesParametroFactuSecuencial"));
		
		
		this.jButtonNuevoRelacionesToolBarParametroFactuSecuencial.addActionListener(new ButtonActionListener(this,"NuevoRelacionesToolBarParametroFactuSecuencial"));
			
		this.jMenuItemNuevoRelacionesParametroFactuSecuencial.addActionListener(new ButtonActionListener(this,"MenuItemNuevoRelacionesParametroFactuSecuencial"));		
		
		
		if(this.jInternalFrameDetalleFormParametroFactuSecuencial!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormParametroFactuSecuencial.jButtonModificarParametroFactuSecuencial.addActionListener(new ButtonActionListener(this,"ModificarParametroFactuSecuencial"));
		}
		
		
		if(this.jInternalFrameDetalleFormParametroFactuSecuencial!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormParametroFactuSecuencial.jButtonModificarToolBarParametroFactuSecuencial.addActionListener(new ButtonActionListener(this,"ModificarToolBarParametroFactuSecuencial"));
			
			this.jInternalFrameDetalleFormParametroFactuSecuencial.jMenuItemModificarParametroFactuSecuencial.addActionListener(new ButtonActionListener(this,"MenuItemModificarParametroFactuSecuencial"));		
		}
		
		
		if(this.jInternalFrameDetalleFormParametroFactuSecuencial!=null) { //if(this.conCargarFormDetalle) {			
			this.jInternalFrameDetalleFormParametroFactuSecuencial.jButtonActualizarParametroFactuSecuencial.addActionListener (new ButtonActionListener(this,"ActualizarParametroFactuSecuencial"));
		}
		
		
		if(this.jInternalFrameDetalleFormParametroFactuSecuencial!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormParametroFactuSecuencial.jButtonActualizarToolBarParametroFactuSecuencial.addActionListener(new ButtonActionListener(this,"ActualizarToolBarParametroFactuSecuencial"));
				
			this.jInternalFrameDetalleFormParametroFactuSecuencial.jMenuItemActualizarParametroFactuSecuencial.addActionListener (new ButtonActionListener(this,"MenuItemActualizarParametroFactuSecuencial"));		
		}
		
		
		if(this.jInternalFrameDetalleFormParametroFactuSecuencial!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormParametroFactuSecuencial.jButtonEliminarParametroFactuSecuencial.addActionListener (new ButtonActionListener(this,"EliminarParametroFactuSecuencial"));
		}
		
		
		if(this.jInternalFrameDetalleFormParametroFactuSecuencial!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormParametroFactuSecuencial.jButtonEliminarToolBarParametroFactuSecuencial.addActionListener (new ButtonActionListener(this,"EliminarToolBarParametroFactuSecuencial"));
						
			this.jInternalFrameDetalleFormParametroFactuSecuencial.jMenuItemEliminarParametroFactuSecuencial.addActionListener (new ButtonActionListener(this,"MenuItemEliminarParametroFactuSecuencial"));		
		}
		
		
		if(this.jInternalFrameDetalleFormParametroFactuSecuencial!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormParametroFactuSecuencial.jButtonCancelarParametroFactuSecuencial.addActionListener (new ButtonActionListener(this,"CancelarParametroFactuSecuencial"));
		}
		
		
		if(this.jInternalFrameDetalleFormParametroFactuSecuencial!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormParametroFactuSecuencial.jButtonCancelarToolBarParametroFactuSecuencial.addActionListener (new ButtonActionListener(this,"CancelarToolBarParametroFactuSecuencial"));
			
			this.jInternalFrameDetalleFormParametroFactuSecuencial.jMenuItemCancelarParametroFactuSecuencial.addActionListener (new ButtonActionListener(this,"MenuItemCancelarParametroFactuSecuencial"));		
		}
		
		this.jButtonMostrarOcultarTablaToolBarParametroFactuSecuencial.addActionListener (new ButtonActionListener(this,"MostrarOcultarToolBarParametroFactuSecuencial"));		
		
		
		this.jButtonCerrarParametroFactuSecuencial.addActionListener (new ButtonActionListener(this,"CerrarParametroFactuSecuencial"));
		
		
		this.jButtonCerrarToolBarParametroFactuSecuencial.addActionListener (new ButtonActionListener(this,"CerrarToolBarParametroFactuSecuencial"));
			
		this.jMenuItemCerrarParametroFactuSecuencial.addActionListener (new ButtonActionListener(this,"MenuItemCerrarParametroFactuSecuencial"));
			
		if(this.jInternalFrameDetalleFormParametroFactuSecuencial!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormParametroFactuSecuencial.jMenuItemDetalleCerrarParametroFactuSecuencial.addActionListener (new ButtonActionListener(this,"MenuItemDetalleCerrarParametroFactuSecuencial"));		
		}
		
		
		if(this.jInternalFrameDetalleFormParametroFactuSecuencial!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormParametroFactuSecuencial.jButtonGuardarCambiosParametroFactuSecuencial.addActionListener (new ButtonActionListener(this,"GuardarCambiosParametroFactuSecuencial"));
		}
		
		
		if(this.jInternalFrameDetalleFormParametroFactuSecuencial!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormParametroFactuSecuencial.jButtonGuardarCambiosToolBarParametroFactuSecuencial.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarParametroFactuSecuencial"));
		}
		
		this.jButtonCopiarToolBarParametroFactuSecuencial.addActionListener (new ButtonActionListener(this,"CopiarToolBarParametroFactuSecuencial"));
			
		this.jButtonVerFormToolBarParametroFactuSecuencial.addActionListener (new ButtonActionListener(this,"VerFormToolBarParametroFactuSecuencial"));
		
		this.jMenuItemGuardarCambiosParametroFactuSecuencial.addActionListener (new ButtonActionListener(this,"MenuItemGuardarCambiosParametroFactuSecuencial"));
			
		this.jMenuItemCopiarParametroFactuSecuencial.addActionListener (new ButtonActionListener(this,"MenuItemCopiarParametroFactuSecuencial"));		
		
		this.jMenuItemVerFormParametroFactuSecuencial.addActionListener (new ButtonActionListener(this,"MenuItemVerFormParametroFactuSecuencial"));		
		
		
		this.jButtonGuardarCambiosTablaParametroFactuSecuencial.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaParametroFactuSecuencial"));
		
		
		this.jButtonGuardarCambiosTablaToolBarParametroFactuSecuencial.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaToolBarParametroFactuSecuencial"));
			
		this.jMenuItemGuardarCambiosTablaParametroFactuSecuencial.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaParametroFactuSecuencial"));		
		
		
		
		this.jButtonRecargarInformacionParametroFactuSecuencial.addActionListener (new ButtonActionListener(this,"RecargarInformacionParametroFactuSecuencial"));
					
		this.jButtonRecargarInformacionToolBarParametroFactuSecuencial.addActionListener (new ButtonActionListener(this,"RecargarInformacionToolBarParametroFactuSecuencial"));
		
		this.jMenuItemRecargarInformacionParametroFactuSecuencial.addActionListener (new ButtonActionListener(this,"MenuItemRecargarInformacionParametroFactuSecuencial"));		
		
		
		
		this.jButtonAnterioresParametroFactuSecuencial.addActionListener (new ButtonActionListener(this,"AnterioresParametroFactuSecuencial"));
		
		
		this.jButtonAnterioresToolBarParametroFactuSecuencial.addActionListener (new ButtonActionListener(this,"AnterioresToolBarParametroFactuSecuencial"));
		
		this.jMenuItemAnterioresParametroFactuSecuencial.addActionListener (new ButtonActionListener(this,"MenuItemAnterioresParametroFactuSecuencial"));		
		
		
		this.jButtonSiguientesParametroFactuSecuencial.addActionListener (new ButtonActionListener(this,"SiguientesParametroFactuSecuencial"));
		
		
		this.jButtonSiguientesToolBarParametroFactuSecuencial.addActionListener (new ButtonActionListener(this,"SiguientesToolBarParametroFactuSecuencial"));
			
		this.jMenuItemSiguientesParametroFactuSecuencial.addActionListener (new ButtonActionListener(this,"MenuItemSiguientesParametroFactuSecuencial"));
			
		this.jMenuItemAbrirOrderByParametroFactuSecuencial.addActionListener (new ButtonActionListener(this,"MenuItemAbrirOrderByParametroFactuSecuencial"));
			
		this.jMenuItemMostrarOcultarParametroFactuSecuencial.addActionListener (new ButtonActionListener(this,"MenuItemMostrarOcultarParametroFactuSecuencial"));
			
		this.jMenuItemDetalleAbrirOrderByParametroFactuSecuencial.addActionListener (new ButtonActionListener(this,"MenuItemDetalleAbrirOrderByParametroFactuSecuencial"));
			
		this.jMenuItemDetalleMostarOcultarParametroFactuSecuencial.addActionListener (new ButtonActionListener(this,"MenuItemDetalleMostrarOcultarParametroFactuSecuencial"));		
		
		
		this.jButtonNuevoGuardarCambiosParametroFactuSecuencial.addActionListener (new ButtonActionListener(this,"NuevoGuardarCambiosParametroFactuSecuencial"));
		
		
		this.jButtonNuevoGuardarCambiosToolBarParametroFactuSecuencial.addActionListener (new ButtonActionListener(this,"NuevoGuardarCambiosToolBarParametroFactuSecuencial"));
			
		this.jMenuItemNuevoGuardarCambiosParametroFactuSecuencial.addActionListener (new ButtonActionListener(this,"MenuItemNuevoGuardarCambiosParametroFactuSecuencial"));		
		
		
		
		//SELECCIONAR TODOS
		
		this.jCheckBoxSeleccionarTodosParametroFactuSecuencial.addItemListener(new CheckBoxItemListener(this,"SeleccionarTodosParametroFactuSecuencial"));

		this.jCheckBoxSeleccionadosParametroFactuSecuencial.addItemListener(new CheckBoxItemListener(this,"SeleccionadosParametroFactuSecuencial"));
		
		if(this.jInternalFrameDetalleFormParametroFactuSecuencial!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormParametroFactuSecuencial.jComboBoxTiposAccionesFormularioParametroFactuSecuencial.addActionListener (new ButtonActionListener(this,"TiposAccionesFormularioParametroFactuSecuencial"));
		}
		
		
		this.jComboBoxTiposRelacionesParametroFactuSecuencial.addActionListener (new ButtonActionListener(this,"TiposRelacionesParametroFactuSecuencial"));
			
		this.jComboBoxTiposAccionesParametroFactuSecuencial.addActionListener (new ButtonActionListener(this,"TiposAccionesParametroFactuSecuencial"));
					
		this.jComboBoxTiposSeleccionarParametroFactuSecuencial.addActionListener (new ButtonActionListener(this,"TiposSeleccionarParametroFactuSecuencial"));
			
		this.jTextFieldValorCampoGeneralParametroFactuSecuencial.addActionListener (new ButtonActionListener(this,"ValorCampoGeneralParametroFactuSecuencial"));		
		
		
		if(this.jInternalFrameDetalleFormParametroFactuSecuencial!=null) { //if(this.conCargarFormDetalle) {
		
		
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jButtonidParametroFactuSecuencialBusqueda.addActionListener(new ButtonActionListener(this,"idParametroFactuSecuencialBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jButtonid_empresaParametroFactuSecuencialUpdate.addActionListener(new ButtonActionListener(this,"id_empresaParametroFactuSecuencialUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jButtonid_empresaParametroFactuSecuencialBusqueda.addActionListener(new ButtonActionListener(this,"id_empresaParametroFactuSecuencialBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jButtonid_sucursalParametroFactuSecuencialUpdate.addActionListener(new ButtonActionListener(this,"id_sucursalParametroFactuSecuencialUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jButtonid_sucursalParametroFactuSecuencialBusqueda.addActionListener(new ButtonActionListener(this,"id_sucursalParametroFactuSecuencialBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jButtonid_tipo_documento_generalParametroFactuSecuencialUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_documento_generalParametroFactuSecuencialUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jButtonid_tipo_documento_generalParametroFactuSecuencialBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_documento_generalParametroFactuSecuencialBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jButtonsecuencialParametroFactuSecuencialBusqueda.addActionListener(new ButtonActionListener(this,"secuencialParametroFactuSecuencialBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jButtonnumero_digitosParametroFactuSecuencialBusqueda.addActionListener(new ButtonActionListener(this,"numero_digitosParametroFactuSecuencialBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jButtonnumero_itemsParametroFactuSecuencialBusqueda.addActionListener(new ButtonActionListener(this,"numero_itemsParametroFactuSecuencialBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jButtonnumero_descuentoParametroFactuSecuencialBusqueda.addActionListener(new ButtonActionListener(this,"numero_descuentoParametroFactuSecuencialBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jButtonnumero_adiicionalesParametroFactuSecuencialBusqueda.addActionListener(new ButtonActionListener(this,"numero_adiicionalesParametroFactuSecuencialBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jButtonnumero_digito_inicioParametroFactuSecuencialBusqueda.addActionListener(new ButtonActionListener(this,"numero_digito_inicioParametroFactuSecuencialBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jButtonnumero_digito_finParametroFactuSecuencialBusqueda.addActionListener(new ButtonActionListener(this,"numero_digito_finParametroFactuSecuencialBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jButtonnumero_dias_plazoParametroFactuSecuencialBusqueda.addActionListener(new ButtonActionListener(this,"numero_dias_plazoParametroFactuSecuencialBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jButtoncon_detalleParametroFactuSecuencialBusqueda.addActionListener(new ButtonActionListener(this,"con_detalleParametroFactuSecuencialBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jButtoncon_lectorParametroFactuSecuencialBusqueda.addActionListener(new ButtonActionListener(this,"con_lectorParametroFactuSecuencialBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jButtonid_bodegaParametroFactuSecuencialUpdate.addActionListener(new ButtonActionListener(this,"id_bodegaParametroFactuSecuencialUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jButtonid_bodegaParametroFactuSecuencialBusqueda.addActionListener(new ButtonActionListener(this,"id_bodegaParametroFactuSecuencialBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jButtonid_tipo_param_factu_plazoParametroFactuSecuencialUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_param_factu_plazoParametroFactuSecuencialUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jButtonid_tipo_param_factu_plazoParametroFactuSecuencialBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_param_factu_plazoParametroFactuSecuencialBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jButtonid_formatoParametroFactuSecuencialUpdate.addActionListener(new ButtonActionListener(this,"id_formatoParametroFactuSecuencialUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jButtonid_formatoParametroFactuSecuencialBusqueda.addActionListener(new ButtonActionListener(this,"id_formatoParametroFactuSecuencialBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jButtoncon_transferenciaParametroFactuSecuencialBusqueda.addActionListener(new ButtonActionListener(this,"con_transferenciaParametroFactuSecuencialBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jButtonid_bodega_transferenciaParametroFactuSecuencialUpdate.addActionListener(new ButtonActionListener(this,"id_bodega_transferenciaParametroFactuSecuencialUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jButtonid_bodega_transferenciaParametroFactuSecuencialBusqueda.addActionListener(new ButtonActionListener(this,"id_bodega_transferenciaParametroFactuSecuencialBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jButtonid_transaccion_transferenciaParametroFactuSecuencialUpdate.addActionListener(new ButtonActionListener(this,"id_transaccion_transferenciaParametroFactuSecuencialUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jButtonid_transaccion_transferenciaParametroFactuSecuencialBusqueda.addActionListener(new ButtonActionListener(this,"id_transaccion_transferenciaParametroFactuSecuencialBusqueda"));
		}
		
		if(!this.conCargarMinimo) {
		//BYDAN_BUSQUEDAS
		
		
			this.jButtonFK_IdBodegaParametroFactuSecuencial.addActionListener(new ButtonActionListener(this,"FK_IdBodegaParametroFactuSecuencial"));

			this.jButtonFK_IdBodegaTransferenciaParametroFactuSecuencial.addActionListener(new ButtonActionListener(this,"FK_IdBodegaTransferenciaParametroFactuSecuencial"));

			this.jButtonFK_IdFormatoParametroFactuSecuencial.addActionListener(new ButtonActionListener(this,"FK_IdFormatoParametroFactuSecuencial"));

			this.jButtonFK_IdTipoDocumentoGeneralParametroFactuSecuencial.addActionListener(new ButtonActionListener(this,"FK_IdTipoDocumentoGeneralParametroFactuSecuencial"));

			this.jButtonFK_IdTipoParamFactuPlazoParametroFactuSecuencial.addActionListener(new ButtonActionListener(this,"FK_IdTipoParamFactuPlazoParametroFactuSecuencial"));

			this.jButtonFK_IdTransaccionTransferenciaParametroFactuSecuencial.addActionListener(new ButtonActionListener(this,"FK_IdTransaccionTransferenciaParametroFactuSecuencial"));
		
		
		
			//REPORTE DINAMICO
			
			if(this.jInternalFrameReporteDinamicoParametroFactuSecuencial!=null) {
				this.jInternalFrameReporteDinamicoParametroFactuSecuencial.getjButtonCerrarReporteDinamico().addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoParametroFactuSecuencial"));
				this.jInternalFrameReporteDinamicoParametroFactuSecuencial.getjButtonGenerarReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoParametroFactuSecuencial"));
				this.jInternalFrameReporteDinamicoParametroFactuSecuencial.getjButtonGenerarExcelReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoParametroFactuSecuencial"));
			}
			
			//this.jButtonCerrarReporteDinamicoParametroFactuSecuencial.addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoParametroFactuSecuencial"));				
			//this.jButtonGenerarReporteDinamicoParametroFactuSecuencial.addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoParametroFactuSecuencial"));
			//this.jButtonGenerarExcelReporteDinamicoParametroFactuSecuencial.addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoParametroFactuSecuencial"));
				
				
			//IMPORTACION			
			if(this.jInternalFrameImportacionParametroFactuSecuencial!=null) {
				this.jInternalFrameImportacionParametroFactuSecuencial.getjButtonCerrarImportacion().addActionListener (new ButtonActionListener(this,"CerrarImportacionParametroFactuSecuencial"));
				this.jInternalFrameImportacionParametroFactuSecuencial.getjButtonGenerarImportacion().addActionListener (new ButtonActionListener(this,"GenerarImportacionParametroFactuSecuencial"));
				this.jInternalFrameImportacionParametroFactuSecuencial.getjButtonAbrirImportacion().addActionListener (new ButtonActionListener(this,"AbrirImportacionParametroFactuSecuencial"));
			}
			
			//ORDER BY
			this.jButtonAbrirOrderByParametroFactuSecuencial.addActionListener (new ButtonActionListener(this,"AbrirOrderByParametroFactuSecuencial"));
			
			this.jButtonAbrirOrderByToolBarParametroFactuSecuencial.addActionListener (new ButtonActionListener(this,"AbrirOrderByToolBarParametroFactuSecuencial"));			
			
			if(this.jInternalFrameOrderByParametroFactuSecuencial!=null) {
				this.jInternalFrameOrderByParametroFactuSecuencial.getjButtonCerrarOrderBy().addActionListener (new ButtonActionListener(this,"CerrarOrderByParametroFactuSecuencial"));				
			}
			
			
		}
		
		
		
		if(!this.conCargarMinimo) {
			if(this.jInternalFrameDetalleFormParametroFactuSecuencial!=null) { //if(this.conCargarFormDetalle) {
			;
			}
		}
		
		
		//TABBED PANE RELACIONES
		if(this.jInternalFrameDetalleFormParametroFactuSecuencial!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormParametroFactuSecuencial.jTabbedPaneRelacionesParametroFactuSecuencial.addChangeListener(new TabbedPaneChangeListener(this,"RelacionesParametroFactuSecuencial"));
		
		;
		}
		//TABBED PANE RELACIONES FIN(EXTRA TAB)		
	}
	
	/*
	public void initActions() {
		String sMapKey = "";
		InputMap inputMap =null;
		
		this.addInternalFrameListener(new javax.swing.event.InternalFrameAdapter() {
            public void internalFrameClosing(InternalFrameEvent event) {          	
            	try {
            		closingInternalFrameParametroFactuSecuencial();
				} catch (Exception e) {
					e.printStackTrace();
				}
            }
        });
		
		this.jInternalFrameDetalleFormParametroFactuSecuencial.addInternalFrameListener(new javax.swing.event.InternalFrameAdapter() {
	        public void internalFrameClosing(InternalFrameEvent event) {
	            JInternalFrameBase jInternalFrameDetalleFormParametroFactuSecuencial = (JInternalFrameBase)event.getSource();
	            	
	            ParametroFactuSecuencialBeanSwingJInternalFrame jInternalFrameParent=(ParametroFactuSecuencialBeanSwingJInternalFrame)jInternalFrameDetalleFormParametroFactuSecuencial.getjInternalFrameParent();
	                
	            try {
					jInternalFrameParent.jButtonCancelarParametroFactuSecuencialActionPerformed(null);
					
					//jInternalFrameParent.dispose();
					//jInternalFrameParent=null;
					
				} catch (Exception e) {
					e.printStackTrace();
				}
	        }
	    });
			
		this.jTableDatosParametroFactuSecuencial.getSelectionModel().addListSelectionListener (
	                new ListSelectionListener() {
	                    public void valueChanged(ListSelectionEvent e) {
							//BYDAN_DESHABILITADO
	                    	//try {jTableDatosParametroFactuSecuencialListSelectionListener(e);}catch(Exception e1){e1.printStackTrace();}
	                    }
	                }
	     );
		
		this.jTableDatosParametroFactuSecuencial.addMouseListener(new MouseAdapter() {
			   public void mouseClicked(MouseEvent evt) {
				      if (evt.getClickCount() == 2) {
				    	  jButtonIdActionPerformed(null,jTableDatosParametroFactuSecuencial.getSelectedRow(),false,false);
				      }
				   }
		});
		
		this.jButtonNuevoParametroFactuSecuencial.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoParametroFactuSecuencialActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoToolBarParametroFactuSecuencial.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoParametroFactuSecuencialActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoParametroFactuSecuencial.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoParametroFactuSecuencialActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "NuevoParametroFactuSecuencial";
		inputMap = this.jButtonNuevoParametroFactuSecuencial.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_N , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonNuevoParametroFactuSecuencial.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonNuevoParametroFactuSecuencialActionPerformed(evt,false);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonNuevoRelacionesParametroFactuSecuencial.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoParametroFactuSecuencialActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoRelacionesToolBarParametroFactuSecuencial.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoParametroFactuSecuencialActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoRelacionesParametroFactuSecuencial.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoParametroFactuSecuencialActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "NuevoRelacionesParametroFactuSecuencial";
		inputMap = this.jButtonNuevoRelacionesParametroFactuSecuencial.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_R , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonNuevoRelacionesParametroFactuSecuencial.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonNuevoParametroFactuSecuencialActionPerformed(evt,true);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonModificarParametroFactuSecuencial.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarParametroFactuSecuencialActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonModificarToolBarParametroFactuSecuencial.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarParametroFactuSecuencialActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemModificarParametroFactuSecuencial.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarParametroFactuSecuencialActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "ModificarParametroFactuSecuencial";
		inputMap = this.jButtonModificarParametroFactuSecuencial.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_M , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonModificarParametroFactuSecuencial.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonModificarParametroFactuSecuencialActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonActualizarParametroFactuSecuencial.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarParametroFactuSecuencialActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonActualizarToolBarParametroFactuSecuencial.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarParametroFactuSecuencialActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemActualizarParametroFactuSecuencial.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarParametroFactuSecuencialActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "ActualizarParametroFactuSecuencial";
		inputMap = this.jButtonActualizarParametroFactuSecuencial.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_G , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonActualizarParametroFactuSecuencial.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonActualizarParametroFactuSecuencialActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonEliminarParametroFactuSecuencial.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarParametroFactuSecuencialActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonEliminarToolBarParametroFactuSecuencial.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarParametroFactuSecuencialActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
				
		this.jMenuItemEliminarParametroFactuSecuencial.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarParametroFactuSecuencialActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "EliminarParametroFactuSecuencial";
		inputMap = this.jButtonEliminarParametroFactuSecuencial.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_E , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonEliminarParametroFactuSecuencial.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonEliminarParametroFactuSecuencialActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonCancelarParametroFactuSecuencial.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarParametroFactuSecuencialActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonCancelarToolBarParametroFactuSecuencial.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarParametroFactuSecuencialActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemCancelarParametroFactuSecuencial.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarParametroFactuSecuencialActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "CancelarParametroFactuSecuencial";
		inputMap = this.jButtonCancelarParametroFactuSecuencial.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_Q , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonCancelarParametroFactuSecuencial.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonCancelarParametroFactuSecuencialActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonCerrarParametroFactuSecuencial.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarParametroFactuSecuencialActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonCerrarToolBarParametroFactuSecuencial.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarParametroFactuSecuencialActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemCerrarParametroFactuSecuencial.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarParametroFactuSecuencialActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemDetalleCerrarParametroFactuSecuencial.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  //try {jButtonCerrarParametroFactuSecuencialActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
					try {jButtonCancelarParametroFactuSecuencialActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "CerrarParametroFactuSecuencial";
		inputMap = this.jButtonCerrarParametroFactuSecuencial.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_C , KeyEvent.ALT_MASK), sMapKey);
			
		this.jButtonCerrarParametroFactuSecuencial.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonCerrarParametroFactuSecuencialActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jButtonGuardarCambiosParametroFactuSecuencial.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosParametroFactuSecuencialActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosToolBarParametroFactuSecuencial.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosParametroFactuSecuencialActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemGuardarCambiosParametroFactuSecuencial.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosParametroFactuSecuencialActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosTablaParametroFactuSecuencial.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosParametroFactuSecuencialActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosTablaToolBarParametroFactuSecuencial.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosParametroFactuSecuencialActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemGuardarCambiosTablaParametroFactuSecuencial.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosParametroFactuSecuencialActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "GuardarCambiosParametroFactuSecuencial";
		inputMap = this.jInternalFrameDetalleFormParametroFactuSecuencial.jButtonGuardarCambiosParametroFactuSecuencial.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_G , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jButtonGuardarCambiosParametroFactuSecuencial.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonGuardarCambiosParametroFactuSecuencialActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonRecargarInformacionParametroFactuSecuencial.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionParametroFactuSecuencialActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonRecargarInformacionToolBarParametroFactuSecuencial.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionParametroFactuSecuencialActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemRecargarInformacionParametroFactuSecuencial.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionParametroFactuSecuencialActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		
		this.jButtonAnterioresParametroFactuSecuencial.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresParametroFactuSecuencialActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonAnterioresToolBarParametroFactuSecuencial.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresParametroFactuSecuencialActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemAnterioresParametroFactuSecuencial.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresParametroFactuSecuencialActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonSiguientesParametroFactuSecuencial.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesParametroFactuSecuencialActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonSiguientesToolBarParametroFactuSecuencial.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesParametroFactuSecuencialActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemSiguientesParametroFactuSecuencial.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesParametroFactuSecuencialActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoGuardarCambiosParametroFactuSecuencial.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosParametroFactuSecuencialActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoGuardarCambiosToolBarParametroFactuSecuencial.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosParametroFactuSecuencialActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoGuardarCambiosParametroFactuSecuencial.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosParametroFactuSecuencialActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		
		//SELECCIONAR TODOS
		this.jCheckBoxSeleccionarTodosParametroFactuSecuencial.addItemListener(new ItemListener() {		
			public void itemStateChanged(ItemEvent evt) {
				try {jCheckBoxSeleccionarTodosParametroFactuSecuencialItemListener(evt);}catch(Exception e){e.printStackTrace();}
			}
		});

		this.jComboBoxTiposAccionesParametroFactuSecuencial.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jComboBoxTiposAccionesParametroFactuSecuencialActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		this.jComboBoxTiposSeleccionarParametroFactuSecuencial.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jComboBoxTiposSeleccionarParametroFactuSecuencialActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		this.jTextFieldValorCampoGeneralParametroFactuSecuencial.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jTextFieldValorCampoGeneralParametroFactuSecuencialActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jButtonidParametroFactuSecuencialBusqueda.addActionListener(new ButtonActionListener(this,"idParametroFactuSecuencialBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jButtonid_empresaParametroFactuSecuencialUpdate.addActionListener(new ButtonActionListener(this,"id_empresaParametroFactuSecuencialUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jButtonid_empresaParametroFactuSecuencialBusqueda.addActionListener(new ButtonActionListener(this,"id_empresaParametroFactuSecuencialBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jButtonid_sucursalParametroFactuSecuencialUpdate.addActionListener(new ButtonActionListener(this,"id_sucursalParametroFactuSecuencialUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jButtonid_sucursalParametroFactuSecuencialBusqueda.addActionListener(new ButtonActionListener(this,"id_sucursalParametroFactuSecuencialBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jButtonid_tipo_documento_generalParametroFactuSecuencialUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_documento_generalParametroFactuSecuencialUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jButtonid_tipo_documento_generalParametroFactuSecuencialBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_documento_generalParametroFactuSecuencialBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jButtonsecuencialParametroFactuSecuencialBusqueda.addActionListener(new ButtonActionListener(this,"secuencialParametroFactuSecuencialBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jButtonnumero_digitosParametroFactuSecuencialBusqueda.addActionListener(new ButtonActionListener(this,"numero_digitosParametroFactuSecuencialBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jButtonnumero_itemsParametroFactuSecuencialBusqueda.addActionListener(new ButtonActionListener(this,"numero_itemsParametroFactuSecuencialBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jButtonnumero_descuentoParametroFactuSecuencialBusqueda.addActionListener(new ButtonActionListener(this,"numero_descuentoParametroFactuSecuencialBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jButtonnumero_adiicionalesParametroFactuSecuencialBusqueda.addActionListener(new ButtonActionListener(this,"numero_adiicionalesParametroFactuSecuencialBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jButtonnumero_digito_inicioParametroFactuSecuencialBusqueda.addActionListener(new ButtonActionListener(this,"numero_digito_inicioParametroFactuSecuencialBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jButtonnumero_digito_finParametroFactuSecuencialBusqueda.addActionListener(new ButtonActionListener(this,"numero_digito_finParametroFactuSecuencialBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jButtonnumero_dias_plazoParametroFactuSecuencialBusqueda.addActionListener(new ButtonActionListener(this,"numero_dias_plazoParametroFactuSecuencialBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jButtoncon_detalleParametroFactuSecuencialBusqueda.addActionListener(new ButtonActionListener(this,"con_detalleParametroFactuSecuencialBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jButtoncon_lectorParametroFactuSecuencialBusqueda.addActionListener(new ButtonActionListener(this,"con_lectorParametroFactuSecuencialBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jButtonid_bodegaParametroFactuSecuencialUpdate.addActionListener(new ButtonActionListener(this,"id_bodegaParametroFactuSecuencialUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jButtonid_bodegaParametroFactuSecuencialBusqueda.addActionListener(new ButtonActionListener(this,"id_bodegaParametroFactuSecuencialBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jButtonid_tipo_param_factu_plazoParametroFactuSecuencialUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_param_factu_plazoParametroFactuSecuencialUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jButtonid_tipo_param_factu_plazoParametroFactuSecuencialBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_param_factu_plazoParametroFactuSecuencialBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jButtonid_formatoParametroFactuSecuencialUpdate.addActionListener(new ButtonActionListener(this,"id_formatoParametroFactuSecuencialUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jButtonid_formatoParametroFactuSecuencialBusqueda.addActionListener(new ButtonActionListener(this,"id_formatoParametroFactuSecuencialBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jButtoncon_transferenciaParametroFactuSecuencialBusqueda.addActionListener(new ButtonActionListener(this,"con_transferenciaParametroFactuSecuencialBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jButtonid_bodega_transferenciaParametroFactuSecuencialUpdate.addActionListener(new ButtonActionListener(this,"id_bodega_transferenciaParametroFactuSecuencialUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jButtonid_bodega_transferenciaParametroFactuSecuencialBusqueda.addActionListener(new ButtonActionListener(this,"id_bodega_transferenciaParametroFactuSecuencialBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jButtonid_transaccion_transferenciaParametroFactuSecuencialUpdate.addActionListener(new ButtonActionListener(this,"id_transaccion_transferenciaParametroFactuSecuencialUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jButtonid_transaccion_transferenciaParametroFactuSecuencialBusqueda.addActionListener(new ButtonActionListener(this,"id_transaccion_transferenciaParametroFactuSecuencialBusqueda"));
		
		
		this.jButtonFK_IdBodegaParametroFactuSecuencial.addActionListener(new ButtonActionListener(this,"FK_IdBodegaParametroFactuSecuencial"));

		this.jButtonFK_IdBodegaTransferenciaParametroFactuSecuencial.addActionListener(new ButtonActionListener(this,"FK_IdBodegaTransferenciaParametroFactuSecuencial"));

		this.jButtonFK_IdFormatoParametroFactuSecuencial.addActionListener(new ButtonActionListener(this,"FK_IdFormatoParametroFactuSecuencial"));

		this.jButtonFK_IdTipoDocumentoGeneralParametroFactuSecuencial.addActionListener(new ButtonActionListener(this,"FK_IdTipoDocumentoGeneralParametroFactuSecuencial"));

		this.jButtonFK_IdTipoParamFactuPlazoParametroFactuSecuencial.addActionListener(new ButtonActionListener(this,"FK_IdTipoParamFactuPlazoParametroFactuSecuencial"));

		this.jButtonFK_IdTransaccionTransferenciaParametroFactuSecuencial.addActionListener(new ButtonActionListener(this,"FK_IdTransaccionTransferenciaParametroFactuSecuencial"));

		
		//REPORTE DINAMICO
		this.jButtonCerrarReporteDinamicoParametroFactuSecuencial.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarReporteDinamicoParametroFactuSecuencialActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarReporteDinamicoParametroFactuSecuencial.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarReporteDinamicoParametroFactuSecuencialActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarExcelReporteDinamicoParametroFactuSecuencial.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarExcelReporteDinamicoParametroFactuSecuencialActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		//IMPORTACION
		this.jButtonCerrarImportacionParametroFactuSecuencial.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarImportacionParametroFactuSecuencialActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarImportacionParametroFactuSecuencial.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarImportacionParametroFactuSecuencialActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonAbrirImportacionParametroFactuSecuencial.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAbrirImportacionParametroFactuSecuencialActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
	}
	*/
	
	
	public void jComboBoxTiposSeleccionarParametroFactuSecuencialActionListener(ActionEvent evt) throws Exception {    		
		try {			
			Reporte reporte=(Reporte)this.jComboBoxTiposSeleccionarParametroFactuSecuencial.getSelectedItem();
			
			//if(reporte.getsCodigo().equals("SELECCIONAR")) {
			//}					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroFactuSecuencialConstantesFunciones.CLASSNAME);
		}
	}	
	
	
	
	public void seleccionarTodosParametroFactuSecuencial(Boolean conSeleccionarTodos) throws Exception {    		
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {				
				for(ParametroFactuSecuencial parametrofactusecuencialAux:this.parametrofactusecuencialLogic.getParametroFactuSecuencials()) {
					parametrofactusecuencialAux.setIsSelected(conSeleccionarTodos);
				}			
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(ParametroFactuSecuencial parametrofactusecuencialAux:parametrofactusecuencials) {
					parametrofactusecuencialAux.setIsSelected(conSeleccionarTodos);
				}
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroFactuSecuencialConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionarTodosParametroFactuSecuencialItemListener(ItemEvent evt) throws Exception {    		
		try {			
			this.inicializarActualizarBindingParametroFactuSecuencial(false,false);
			
			//JCheckBox jCheckBox=(JCheckBox)evt.getSource();			
			//System.out.println("ok");		
			
			Boolean existe=false;
			
			if(sTipoSeleccionar.equals("COLUMNAS")) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					for(ParametroFactuSecuencial parametrofactusecuencialAux:this.parametrofactusecuencialLogic.getParametroFactuSecuencials()) {
						parametrofactusecuencialAux.setIsSelected(this.isSeleccionarTodos);
					}			
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(ParametroFactuSecuencial parametrofactusecuencialAux:parametrofactusecuencials) {
						parametrofactusecuencialAux.setIsSelected(this.isSeleccionarTodos);
					}
				}
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					for(ParametroFactuSecuencial parametrofactusecuencialAux:this.parametrofactusecuencialLogic.getParametroFactuSecuencials()) {
					
						if(sTipoSeleccionar.equals(ParametroFactuSecuencialConstantesFunciones.LABEL_CONDETALLE)) {
							existe=true;
							parametrofactusecuencialAux.setcon_detalle(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(ParametroFactuSecuencialConstantesFunciones.LABEL_CONLECTOR)) {
							existe=true;
							parametrofactusecuencialAux.setcon_lector(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(ParametroFactuSecuencialConstantesFunciones.LABEL_CONTRANSFERENCIA)) {
							existe=true;
							parametrofactusecuencialAux.setcon_transferencia(this.isSeleccionarTodos);
						}
					}	
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(ParametroFactuSecuencial parametrofactusecuencialAux:parametrofactusecuencials) {
						
						if(sTipoSeleccionar.equals(ParametroFactuSecuencialConstantesFunciones.LABEL_CONDETALLE)) {
							existe=true;
							parametrofactusecuencialAux.setcon_detalle(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(ParametroFactuSecuencialConstantesFunciones.LABEL_CONLECTOR)) {
							existe=true;
							parametrofactusecuencialAux.setcon_lector(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(ParametroFactuSecuencialConstantesFunciones.LABEL_CONTRANSFERENCIA)) {
							existe=true;
							parametrofactusecuencialAux.setcon_transferencia(this.isSeleccionarTodos);
						}
					}
				}
			}
					
			if(existe) {
				this.inicializarActualizarBindingTablaParametroFactuSecuencial(false);
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}	
			
			//TableCellRenderer tableCellRenderer=null;			
			
			//TableCellEditor tableCellEditor=null;						
						
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			/*
			for(int i = 0; i < this.jTableDatosParametroFactuSecuencial.getRowCount(); i++) {				
				tableCellRenderer=this.jTableDatosSistema.getCellRenderer(i, 2);
				tableCellEditor=this.jTableDatosSistema.getCellEditor(i, 2);
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellRenderer;				
				idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellEditor;
				
				if(idSeleccionarTableCell.jCheckBoxId!=null) {
					idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				}
				
				//System.out.println(idSeleccionarTableCell.valor);
				
				//this.jTableDatosParametroFactuSecuencial.getModel().setValueAt(jCheckBox.isSelected(), i, Funciones2.getColumnIndexByName(this.jTableDatosParametroFactuSecuencial,Constantes2.S_SELECCIONAR));
		    } 
			*/
					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroFactuSecuencialConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionadosParametroFactuSecuencialItemListener(ItemEvent evt) throws Exception {    		
		try {			
			this.inicializarActualizarBindingParametroFactuSecuencial(false,false);
			
			//JCheckBox jCheckBox=(JCheckBox)evt.getSource();			
			//System.out.println("ok");		
			
			Boolean existe=false;
			int[] arrNumRowsSeleccionados=null;
			
			arrNumRowsSeleccionados=this.jTableDatosParametroFactuSecuencial.getSelectedRows();
			
			ParametroFactuSecuencial parametrofactusecuencialLocal=new ParametroFactuSecuencial();
			
			//this.seleccionarTodosParametroFactuSecuencial(false);
			
			for(Integer iNumRowSeleccionado:arrNumRowsSeleccionados) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {
					parametrofactusecuencialLocal =(ParametroFactuSecuencial) this.parametrofactusecuencialLogic.getParametroFactuSecuencials().toArray()[this.jTableDatosParametroFactuSecuencial.convertRowIndexToModel(iNumRowSeleccionado)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					parametrofactusecuencialLocal =(ParametroFactuSecuencial) this.parametrofactusecuencials.toArray()[this.jTableDatosParametroFactuSecuencial.convertRowIndexToModel(iNumRowSeleccionado)];
				}
				
				parametrofactusecuencialLocal.setIsSelected(this.isSeleccionados);
			}
			
			/*
			if(sTipoSeleccionar.equals("SELECCIONAR")) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					for(ParametroFactuSecuencial parametrofactusecuencialAux:this.parametrofactusecuencialLogic.getParametroFactuSecuencials()) {
						parametrofactusecuencialAux.setIsSelected(this.isSeleccionados);
					}			
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(ParametroFactuSecuencial parametrofactusecuencialAux:parametrofactusecuencials) {
						parametrofactusecuencialAux.setIsSelected(this.isSeleccionados);
					}
				}
			}
			*/
			
			//if(existe) {
				this.inicializarActualizarBindingTablaParametroFactuSecuencial(false);
			/*
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}	
			*/
			
			
			//TableCellRenderer tableCellRenderer=null;			
			
			//TableCellEditor tableCellEditor=null;						
						
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			/*
			for(int i = 0; i < this.jTableDatosParametroFactuSecuencial.getRowCount(); i++) {				
				tableCellRenderer=this.jTableDatosSistema.getCellRenderer(i, 2);
				tableCellEditor=this.jTableDatosSistema.getCellEditor(i, 2);
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellRenderer;				
				idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellEditor;
				
				if(idSeleccionarTableCell.jCheckBoxId!=null) {
					idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				}
				
				//System.out.println(idSeleccionarTableCell.valor);
				
				//this.jTableDatosParametroFactuSecuencial.getModel().setValueAt(jCheckBox.isSelected(), i, Funciones2.getColumnIndexByName(this.jTableDatosParametroFactuSecuencial,Constantes2.S_SELECCIONAR));
		    } 
			*/
					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroFactuSecuencialConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionarActualParametroFactuSecuencialItemListener(ItemEvent evt,Long idActual) throws Exception {    		
		try {
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroFactuSecuencialConstantesFunciones.CLASSNAME);
		}
	}
	
	public void ejecutarAuxiliarParametroFactuSecuencialParaAjaxPostBack() throws Exception {    		
		try {
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroFactuSecuencialConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jTextFieldValorCampoGeneralParametroFactuSecuencialActionListener(ActionEvent evt) throws Exception {    		
		try {
			this.inicializarActualizarBindingParametroFactuSecuencial(false,false);
			
			//System.out.println(this.jTextFieldValorCampoGeneralParametroFactuSecuencial.getText());		
			
			Boolean existe=false;
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				for(ParametroFactuSecuencial parametrofactusecuencialAux:this.parametrofactusecuencialLogic.getParametroFactuSecuencials()) {
				
						if(sTipoSeleccionar.equals(ParametroFactuSecuencialConstantesFunciones.LABEL_SECUENCIAL)) {
							existe=true;
							parametrofactusecuencialAux.setsecuencial(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(ParametroFactuSecuencialConstantesFunciones.LABEL_NUMERODIGITOS)) {
							existe=true;
							parametrofactusecuencialAux.setnumero_digitos(Integer.parseInt(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ParametroFactuSecuencialConstantesFunciones.LABEL_NUMEROITEMS)) {
							existe=true;
							parametrofactusecuencialAux.setnumero_items(Integer.parseInt(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ParametroFactuSecuencialConstantesFunciones.LABEL_NUMERODESCUENTO)) {
							existe=true;
							parametrofactusecuencialAux.setnumero_descuento(Integer.parseInt(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ParametroFactuSecuencialConstantesFunciones.LABEL_NUMEROADIICIONALES)) {
							existe=true;
							parametrofactusecuencialAux.setnumero_adiicionales(Integer.parseInt(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ParametroFactuSecuencialConstantesFunciones.LABEL_NUMERODIGITOINICIO)) {
							existe=true;
							parametrofactusecuencialAux.setnumero_digito_inicio(Integer.parseInt(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ParametroFactuSecuencialConstantesFunciones.LABEL_NUMERODIGITOFIN)) {
							existe=true;
							parametrofactusecuencialAux.setnumero_digito_fin(Integer.parseInt(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ParametroFactuSecuencialConstantesFunciones.LABEL_NUMERODIASPLAZO)) {
							existe=true;
							parametrofactusecuencialAux.setnumero_dias_plazo(Integer.parseInt(this.sValorCampoGeneral));
						}
				}	
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(ParametroFactuSecuencial parametrofactusecuencialAux:parametrofactusecuencials) {
					
						if(sTipoSeleccionar.equals(ParametroFactuSecuencialConstantesFunciones.LABEL_SECUENCIAL)) {
							existe=true;
							parametrofactusecuencialAux.setsecuencial(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(ParametroFactuSecuencialConstantesFunciones.LABEL_NUMERODIGITOS)) {
							existe=true;
							parametrofactusecuencialAux.setnumero_digitos(Integer.parseInt(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ParametroFactuSecuencialConstantesFunciones.LABEL_NUMEROITEMS)) {
							existe=true;
							parametrofactusecuencialAux.setnumero_items(Integer.parseInt(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ParametroFactuSecuencialConstantesFunciones.LABEL_NUMERODESCUENTO)) {
							existe=true;
							parametrofactusecuencialAux.setnumero_descuento(Integer.parseInt(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ParametroFactuSecuencialConstantesFunciones.LABEL_NUMEROADIICIONALES)) {
							existe=true;
							parametrofactusecuencialAux.setnumero_adiicionales(Integer.parseInt(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ParametroFactuSecuencialConstantesFunciones.LABEL_NUMERODIGITOINICIO)) {
							existe=true;
							parametrofactusecuencialAux.setnumero_digito_inicio(Integer.parseInt(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ParametroFactuSecuencialConstantesFunciones.LABEL_NUMERODIGITOFIN)) {
							existe=true;
							parametrofactusecuencialAux.setnumero_digito_fin(Integer.parseInt(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ParametroFactuSecuencialConstantesFunciones.LABEL_NUMERODIASPLAZO)) {
							existe=true;
							parametrofactusecuencialAux.setnumero_dias_plazo(Integer.parseInt(this.sValorCampoGeneral));
						}
				}
			}
								
			if(existe) {
				this.inicializarActualizarBindingTablaParametroFactuSecuencial(false);
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroFactuSecuencialConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jComboBoxTiposAccionesParametroFactuSecuencialActionListener(ActionEvent evt,Boolean esParaAccionDesdeFormulario) throws Exception {    				
		Boolean conSplash=true;
		
		try {							
		
			this.inicializarActualizarBindingParametroFactuSecuencial(false,false);
			
			Reporte reporte=new Reporte();
			
			this.esParaAccionDesdeFormularioParametroFactuSecuencial=esParaAccionDesdeFormulario;
			
			if(!esParaAccionDesdeFormulario) {
				
				reporte=(Reporte)this.jComboBoxTiposAccionesParametroFactuSecuencial.getSelectedItem();
				
			} else {
				reporte=(Reporte)this.jInternalFrameDetalleFormParametroFactuSecuencial.jComboBoxTiposAccionesFormularioParametroFactuSecuencial.getSelectedItem();
			}
			String sTipoAccionLocal=this.sTipoAccion;
			
			if(!esParaAccionDesdeFormulario) {
				sTipoAccionLocal=this.sTipoAccion;
			} else {
				sTipoAccionLocal=this.sTipoAccionFormulario;
			}
			
			if(sTipoAccionLocal.equals("GENERAR REPORTE")) {//reporte.getsCodigo().equals("GENERAR REPORTE")) {
				if(this.isPermisoReporteParametroFactuSecuencial) {				
					conSplash=true;//false;										
					
					//this.startProcessParametroFactuSecuencial(conSplash);
				
					this.generarReporteParametroFactuSecuencialsSeleccionados();
				} else {
					JOptionPane.showMessageDialog(this,"NO TIENE PERMISO PARA GENERAR REPORTES","REPORTE",JOptionPane.ERROR_MESSAGE);					
				}
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesParametroFactuSecuencial.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormParametroFactuSecuencial.jComboBoxTiposAccionesFormularioParametroFactuSecuencial.setSelectedIndex(0);					
				}
			} else if(sTipoAccionLocal.equals("GENERAR REPORTE DINAMICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.mostrarReporteDinamicoParametroFactuSecuencialsSeleccionados();
				//this.jComboBoxTiposAccionesParametroFactuSecuencial.setSelectedIndex(0);					
			}  else if(sTipoAccionLocal.equals("GENERAR_REPORTE_GROUP_GENERICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.generarReporteGroupGenericoParametroFactuSecuencialsSeleccionados(false);
				//this.jComboBoxTiposAccionesParametroFactuSecuencial.setSelectedIndex(0);					
			} else if(sTipoAccionLocal.equals("GENERAR_REPORTE_TOTALES_GROUP_GENERICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.generarReporteGroupGenericoParametroFactuSecuencialsSeleccionados(true);
				//this.jComboBoxTiposAccionesParametroFactuSecuencial.setSelectedIndex(0);					
			} else if(sTipoAccionLocal.equals("EXPORTAR_DATOS")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//this.startProcessParametroFactuSecuencial();
				
				this.exportarParametroFactuSecuencialsSeleccionados();
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesParametroFactuSecuencial.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormParametroFactuSecuencial.jComboBoxTiposAccionesFormularioParametroFactuSecuencial.setSelectedIndex(0);					
				}					
			} else if(sTipoAccionLocal.equals("IMPORTAR_DATOS")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				this.mostrarImportacionParametroFactuSecuencials();
				//this.importarParametroFactuSecuencials();
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesParametroFactuSecuencial.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormParametroFactuSecuencial.jComboBoxTiposAccionesFormularioParametroFactuSecuencial.setSelectedIndex(0);					
				}					
			} else if(sTipoAccionLocal.equals("EXPORTAR_DATOS_EXCEL")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//this.startProcessParametroFactuSecuencial();
				//SE EXPORTA SEGUN TIPO ARCHIVO SELECCIONADO
				//this.exportarExcelParametroFactuSecuencialsSeleccionados();
				//this.jComboBoxTiposAccionesParametroFactuSecuencial.setSelectedIndex(0);					
			}  else if(sTipoAccionLocal.equals("RECARGAR_FK")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {								
				if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE RECARGAR REFERENCIAS ?", "MANTENIMIENTO DE Parametro Secuencial ", JOptionPane.OK_CANCEL_OPTION) == 0) {
				
				//this.startProcessParametroFactuSecuencial();
				
					if(!esParaAccionDesdeFormulario || (esParaAccionDesdeFormulario && this.isEsNuevoParametroFactuSecuencial)) {
						this.esRecargarFks=true;
						this.cargarCombosForeignKeyParametroFactuSecuencial(false,false,false);
						this.esRecargarFks=false;
						
						JOptionPane.showMessageDialog(this,"PROCESO EJECUTADO CORRECTAMENTE","MANTENIMIENTO DE Parametro Secuencial ",JOptionPane.INFORMATION_MESSAGE);
					} else {
						JOptionPane.showMessageDialog(this,"ESTE PROCESO SOLO FUNCIONA AL INGRESAR UN NUEVO ELEMENTO","MANTENIMIENTO",JOptionPane.ERROR_MESSAGE);	
					}
					
					
				}
				
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesParametroFactuSecuencial.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormParametroFactuSecuencial.jComboBoxTiposAccionesFormularioParametroFactuSecuencial.setSelectedIndex(0);					
				}	
			} 			
			else if(ParametroFactuSecuencialBeanSwingJInternalFrame.EsProcesoReporte(reporte.getsCodigo())){
				if(this.isPermisoReporteParametroFactuSecuencial) {				
					if(this.tieneElementosSeleccionados()) {
						this.quitarFilaTotales();
						
						conSplash=false;
						
						//this.startProcessParametroFactuSecuencial(conSplash);
					
						//this.actualizarParametrosGeneralParametroFactuSecuencial();
						
						this.generarReporteProcesoAccionParametroFactuSecuencialsSeleccionados(reporte.getsCodigo());
						
						if(!esParaAccionDesdeFormulario) {
							
							this.jComboBoxTiposAccionesParametroFactuSecuencial.setSelectedIndex(0);					
							
						} else {
							this.jInternalFrameDetalleFormParametroFactuSecuencial.jComboBoxTiposAccionesFormularioParametroFactuSecuencial.setSelectedIndex(0);					
						}
					} else {
						JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO TIENE PERMISO PARA GENERAR REPORTES","REPORTE",JOptionPane.ERROR_MESSAGE);					
				}
			} 
			else if(ParametroFactuSecuencialBeanSwingJInternalFrameAdditional.EsProcesoAccionNormal(reporte.getsCodigo())){
				if(this.tieneElementosSeleccionados()) {
					this.quitarFilaTotales();
					
					if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE PROCESAR "+reporte.getsDescripcion()+" EN PROCESO Parametro Secuencial S SELECCIONADOS?", "MANTENIMIENTO DE Parametro Secuencial ", JOptionPane.OK_CANCEL_OPTION) == 0) {
						//this.startProcessParametroFactuSecuencial();
				
						this.actualizarParametrosGeneralParametroFactuSecuencial();
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {						
							this.parametrofactusecuencialReturnGeneral=parametrofactusecuencialLogic.procesarAccionParametroFactuSecuencialsWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,sTipoAccionLocal,this.parametrofactusecuencialLogic.getParametroFactuSecuencials(),this.parametrofactusecuencialParameterGeneral);
						
						} else if(Constantes.ISUSAEJBREMOTE) {
						
						} else if(Constantes.ISUSAEJBHOME) {
						}
						//ARCHITECTURE
						
						this.procesarParametroFactuSecuencialReturnGeneral();
					
					if(!esParaAccionDesdeFormulario) {
						
						this.jComboBoxTiposAccionesParametroFactuSecuencial.setSelectedIndex(0);					
						
					} else {
						this.jInternalFrameDetalleFormParametroFactuSecuencial.jComboBoxTiposAccionesFormularioParametroFactuSecuencial.setSelectedIndex(0);					
					}
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
				}				
			} 
			else {
				if(this.tieneElementosSeleccionados()) {
					this.quitarFilaTotales();
					
					this.actualizarParametrosGeneralParametroFactuSecuencial();
					
					ParametroFactuSecuencialBeanSwingJInternalFrameAdditional.ProcesarAccion(reporte.getsCodigo(),reporte.getsDescripcion(),this);
					
					this.procesarParametroFactuSecuencialReturnGeneral();
					
					if(!esParaAccionDesdeFormulario) {
						
						this.jComboBoxTiposAccionesParametroFactuSecuencial.setSelectedIndex(0);					
						
					} else {
						this.jInternalFrameDetalleFormParametroFactuSecuencial.jComboBoxTiposAccionesFormularioParametroFactuSecuencial.setSelectedIndex(0);					
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
				}
			}
		} catch(Exception e) {
			this.esRecargarFks=false;
			
			FuncionesSwing.manageException(this, e,logger,ParametroFactuSecuencialConstantesFunciones.CLASSNAME);
		
		}  finally {
      		//this.finishProcessParametroFactuSecuencial(conSplash);
      	}
	}
	
	public void jComboBoxTiposRelacionesParametroFactuSecuencialActionListener(ActionEvent evt) throws Exception {    				
		Boolean conSplash=true;
		
		try {			
			this.startProcessParametroFactuSecuencial();
			
			if(this.jInternalFrameDetalleFormParametroFactuSecuencial==null) { //if(!this.conCargarFormDetalle) {			
				this.inicializarFormDetalle();
			}
			
			ArrayList<ParametroFactuSecuencial> parametrofactusecuencialsSeleccionados=new ArrayList<ParametroFactuSecuencial>();		
			ParametroFactuSecuencial parametrofactusecuencial=new ParametroFactuSecuencial();
			
			int rowIndex=-1;//CON ESTO SE DESHABILITA SELECCION POR INDICE
			
			this.inicializarActualizarBindingParametroFactuSecuencial(false,false);
			
			Reporte reporte=new Reporte();
			
			
			reporte=(Reporte)this.jComboBoxTiposRelacionesParametroFactuSecuencial.getSelectedItem();
			
			
			
			
			parametrofactusecuencialsSeleccionados=this.getParametroFactuSecuencialsSeleccionados(true);
			//this.sTipoAccion;
			
			if(parametrofactusecuencialsSeleccionados.size()==1) {
				for(ParametroFactuSecuencial parametrofactusecuencialAux:parametrofactusecuencialsSeleccionados) {
					parametrofactusecuencial=parametrofactusecuencialAux;
				}
				
				if(this.sTipoAccion.equals("NONE")) {
				
				}
				
			} else {
				JOptionPane.showMessageDialog(this,"SELECCIONE SOLO UN REGISTRO","RELACIONES",JOptionPane.ERROR_MESSAGE);
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroFactuSecuencialConstantesFunciones.CLASSNAME);
		
		}  finally {
			this.finishProcessParametroFactuSecuencial();
			
      		//this.finishProcessParametroFactuSecuencial(conSplash);
      	}
	}
			
	public static Boolean EsProcesoReporte(String sTipoProceso) throws Exception {
		Boolean esProcesoAccionRepoorte=false;

		if(sTipoProceso.contains("REPORTE_")) {
			 esProcesoAccionRepoorte=true;
		}

		return esProcesoAccionRepoorte;
	}
	
	public void procesarParametroFactuSecuencialReturnGeneral() throws Exception {
		if(this.parametrofactusecuencialReturnGeneral.getConRetornoEstaProcesado()) {
			JOptionPane.showMessageDialog(this,this.parametrofactusecuencialReturnGeneral.getsMensajeProceso(),"PROCESO",JOptionPane.INFORMATION_MESSAGE);
		}
		
		if(this.parametrofactusecuencialReturnGeneral.getConMostrarMensaje()) {
			JOptionPane.showMessageDialog(this,this.parametrofactusecuencialReturnGeneral.getsMensajeProceso(),"PROCESO",FuncionesSwing.getColorSelectedBackground(this.parametrofactusecuencialReturnGeneral.getsTipoMensaje()));
		}
		
		if(this.parametrofactusecuencialReturnGeneral.getConRecargarInformacion()) {
			this.procesarBusqueda(this.sAccionBusqueda);
			
			this.inicializarActualizarBindingParametroFactuSecuencial(false);
		}
		
		if(this.parametrofactusecuencialReturnGeneral.getConRetornoLista() || this.parametrofactusecuencialReturnGeneral.getConRetornoObjeto()) {
			if(this.parametrofactusecuencialReturnGeneral.getConRetornoLista()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.parametrofactusecuencialLogic.setParametroFactuSecuencials(this.parametrofactusecuencialReturnGeneral.getParametroFactuSecuencials());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
			
			if(this.parametrofactusecuencialReturnGeneral.getConRetornoObjeto()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.parametrofactusecuencialLogic.setParametroFactuSecuencial(this.parametrofactusecuencialReturnGeneral.getParametroFactuSecuencial());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
			
			this.inicializarActualizarBindingParametroFactuSecuencial(false);
		}
	}
	
	public void actualizarParametrosGeneralParametroFactuSecuencial() throws Exception {
		
		
	}
	
	public ArrayList<ParametroFactuSecuencial> getParametroFactuSecuencialsSeleccionados(Boolean conSeleccionarTodosAutomatico) throws Exception {
		ArrayList<ParametroFactuSecuencial> parametrofactusecuencialsSeleccionados=new ArrayList<ParametroFactuSecuencial>();
		Boolean existe=false;
		
		if(!this.esParaAccionDesdeFormularioParametroFactuSecuencial) {
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				
				for(ParametroFactuSecuencial parametrofactusecuencialAux:parametrofactusecuencialLogic.getParametroFactuSecuencials()) {
					if(parametrofactusecuencialAux.getIsSelected()) {
						parametrofactusecuencialsSeleccionados.add(parametrofactusecuencialAux);				
					}
				}
				
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(ParametroFactuSecuencial parametrofactusecuencialAux:this.parametrofactusecuencials) {
					if(parametrofactusecuencialAux.getIsSelected()) {
						parametrofactusecuencialsSeleccionados.add(parametrofactusecuencialAux);				
					}
				}
			}
			
			if(parametrofactusecuencialsSeleccionados.size()>0) {
				existe=true;
			}
			
			//SI NO ESTA NINGUNO SELECCIONADO SE SELECCIONA TODOS
			if(!existe) {
				if(conSeleccionarTodosAutomatico) {
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						parametrofactusecuencialsSeleccionados.addAll(this.parametrofactusecuencialLogic.getParametroFactuSecuencials());
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						parametrofactusecuencialsSeleccionados.addAll(this.parametrofactusecuencials);				
					}
				}
			}
		} else {
			parametrofactusecuencialsSeleccionados.add(this.parametrofactusecuencial);
		}
		
		return parametrofactusecuencialsSeleccionados;
	}
	
	public void actualizarVariablesTipoReporte(Boolean esReporteNormal,Boolean esReporteDinamico,Boolean esReporteAccionProceso,String sPath) {
		if(esReporteNormal) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=false;
			this.sPathReporteDinamico="";
			this.esReporteAccionProceso=false;
			
		} else if(esReporteAccionProceso) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=false;
			this.sPathReporteDinamico="";
			this.esReporteAccionProceso=true;
			
		} else if(esReporteDinamico) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=true;
			this.esReporteAccionProceso=false;
			this.sPathReporteDinamico=sPath.replace(".jrxml",".jasper");			
		}
	}
	
	public void generarReporteParametroFactuSecuencialsSeleccionados() throws Exception {
		Boolean existe=false;
		
		if(this.sTipoReporte.equals("NORMAL") || this.sTipoReporte.equals("FORMULARIO")) {
			existe=true;								
			this.generarReporteNormalParametroFactuSecuencialsSeleccionados();
			
		} else if(this.sTipoReporte.equals("DINAMICO")) {
			existe=true;
			this.mostrarReporteDinamicoParametroFactuSecuencialsSeleccionados();
			
		} else if(this.sTipoReporte.equals("GRUPO_GENERICO")) {
			existe=true;
			this.generarReporteGroupGenericoParametroFactuSecuencialsSeleccionados(false);
			
		} else if(this.sTipoReporte.equals("TOTALES_GRUPO_GENERICO")) {
			existe=true;
			this.generarReporteGroupGenericoParametroFactuSecuencialsSeleccionados(true);
		}
		
		if(!existe) {
			JOptionPane.showMessageDialog(this,"SELECCIONE UN TIPO DE REPORTE VALIDO","REPORTE DE Parametro Secuencial ",JOptionPane.ERROR_MESSAGE);
		}
	}
	
	public void generarReporteRelacionesParametroFactuSecuencialsSeleccionados() throws Exception {
		ArrayList<ParametroFactuSecuencial> parametrofactusecuencialsSeleccionados=new ArrayList<ParametroFactuSecuencial>();		
		
		parametrofactusecuencialsSeleccionados=this.getParametroFactuSecuencialsSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
					
		//this.sTipoReporteExtra="MasterRelaciones";
		
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		
		this.generarReporteParametroFactuSecuencials("Todos",parametrofactusecuencialsSeleccionados);
		
	}	
	
	public void generarReporteNormalParametroFactuSecuencialsSeleccionados() throws Exception {
		ArrayList<ParametroFactuSecuencial> parametrofactusecuencialsSeleccionados=new ArrayList<ParametroFactuSecuencial>();		
		
		parametrofactusecuencialsSeleccionados=this.getParametroFactuSecuencialsSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
								
		if(this.sTipoReporte.equals("FORMULARIO")) {
			this.sTipoReporteExtra="Vertical";					
		}
		
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		this.generarReporteParametroFactuSecuencials("Todos",parametrofactusecuencialsSeleccionados);
	}		
	
	public void generarReporteProcesoAccionParametroFactuSecuencialsSeleccionados(String sProcesoReporte) throws Exception {
		ArrayList<ParametroFactuSecuencial> parametrofactusecuencialsSeleccionados=new ArrayList<ParametroFactuSecuencial>();
		
		parametrofactusecuencialsSeleccionados=this.getParametroFactuSecuencialsSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(false,false,true,"");
		
		/*
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		this.sTipoReporteExtra=sProcesoReporte.toLowerCase();
		
		this.esReporteAccionProceso=true;
		this.generarReporteParametroFactuSecuencials("Todos",parametrofactusecuencialsSeleccionados);
		this.esReporteAccionProceso=false;
	}
	
	
	public void mostrarReporteDinamicoParametroFactuSecuencialsSeleccionados() throws Exception {
		ArrayList<ParametroFactuSecuencial> parametrofactusecuencialsSeleccionados=new ArrayList<ParametroFactuSecuencial>();		
		
		
		this.abrirInicializarFrameReporteDinamicoParametroFactuSecuencial();
		
		
		parametrofactusecuencialsSeleccionados=this.getParametroFactuSecuencialsSeleccionados(true);
		
		this.sTipoReporteExtra="";
		//this.actualizarVariablesTipoReporte(true,false,false,"");
		
		
		this.abrirFrameReporteDinamicoParametroFactuSecuencial();
		
		
		//this.generarReporteParametroFactuSecuencials("Todos",parametrofactusecuencialsSeleccionados ,parametrofactusecuencialImplementable,parametrofactusecuencialImplementableHome);
	}
	
	public void mostrarImportacionParametroFactuSecuencials() throws Exception {
		//this.sTipoReporteExtra="";
		//this.actualizarVariablesTipoReporte(true,false,false,"");
		
		
		this.abrirInicializarFrameImportacionParametroFactuSecuencial();
		
		this.abrirFrameImportacionParametroFactuSecuencial();		
		
			
		//this.generarReporteParametroFactuSecuencials("Todos",parametrofactusecuencialsSeleccionados ,parametrofactusecuencialImplementable,parametrofactusecuencialImplementableHome);
	}
	
	public void importarParametroFactuSecuencials() throws Exception {		
	
	}
	
	public void exportarParametroFactuSecuencialsSeleccionados() throws Exception {
		Boolean existe=false;
		
		if(this.sTipoArchivoReporte.equals("EXCEL")) {
			existe=true;
			this.exportarExcelParametroFactuSecuencialsSeleccionados();
			
		} else if(this.sTipoArchivoReporte.equals("TEXTO")) {
			existe=true;
			this.exportarTextoParametroFactuSecuencialsSeleccionados();
		
		} else if(this.sTipoArchivoReporte.equals("XML")) {
			existe=true;
			this.exportarXmlParametroFactuSecuencialsSeleccionados();
		} 
		
		if(!existe) {
			JOptionPane.showMessageDialog(this,"SELECCIONE UN TIPO DE ARCHIVO VALIDO","EXPORTACION DE Parametro Secuencial ",JOptionPane.ERROR_MESSAGE);
		}
	}
	
	public void exportarTextoParametroFactuSecuencialsSeleccionados() throws Exception {
		ArrayList<ParametroFactuSecuencial> parametrofactusecuencialsSeleccionados=new ArrayList<ParametroFactuSecuencial>();		
		
		parametrofactusecuencialsSeleccionados=this.getParametroFactuSecuencialsSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"parametrofactusecuencial."+"txt";//Funciones2.getTipoExtensionArchivoExportar(this.parametroGeneralUsuario);
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		BufferedWriter bufferedWriter = null;
		FileWriter fileWriter=null;
		
		fileWriter=new FileWriter(sPath);
		
		bufferedWriter = new BufferedWriter(fileWriter);
		
		try {
			if(conCabecera) {
				sFilaCabecera=this.getFilaCabeceraExportarParametroFactuSecuencial(sDelimiter);
				
				bufferedWriter.write(sFilaCabecera);
			}				
			
			for(ParametroFactuSecuencial parametrofactusecuencialAux:parametrofactusecuencialsSeleccionados) {
				sFilaDatos=this.getFilaDatosExportarParametroFactuSecuencial(parametrofactusecuencialAux,sDelimiter);
				
				bufferedWriter.write(sFilaDatos);
				
				//parametrofactusecuencialAux.setsDetalleGeneralEntityReporte(parametrofactusecuencialAux.toString());			
			}
			
			bufferedWriter.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.parametrofactusecuencialSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Parametro Secuencial ",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {
       		if (bufferedWriter != null) {
				bufferedWriter.close();
			}
		}
	}
	
	public String getFilaCabeceraExportarParametroFactuSecuencial(String sDelimiter) {
		String sFilaCabecera="";
		
		
		sFilaCabecera+=ParametroFactuSecuencialConstantesFunciones.LABEL_ID;

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
			sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroFactuSecuencialConstantesFunciones.LABEL_VERSIONROW;
		}

		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroFactuSecuencialConstantesFunciones.LABEL_IDEMPRESA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroFactuSecuencialConstantesFunciones.LABEL_IDSUCURSAL;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroFactuSecuencialConstantesFunciones.LABEL_IDTIPODOCUMENTOGENERAL;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroFactuSecuencialConstantesFunciones.LABEL_SECUENCIAL;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroFactuSecuencialConstantesFunciones.LABEL_NUMERODIGITOS;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroFactuSecuencialConstantesFunciones.LABEL_NUMEROITEMS;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroFactuSecuencialConstantesFunciones.LABEL_NUMERODESCUENTO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroFactuSecuencialConstantesFunciones.LABEL_NUMEROADIICIONALES;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroFactuSecuencialConstantesFunciones.LABEL_NUMERODIGITOINICIO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroFactuSecuencialConstantesFunciones.LABEL_NUMERODIGITOFIN;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroFactuSecuencialConstantesFunciones.LABEL_NUMERODIASPLAZO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroFactuSecuencialConstantesFunciones.LABEL_CONDETALLE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroFactuSecuencialConstantesFunciones.LABEL_CONLECTOR;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroFactuSecuencialConstantesFunciones.LABEL_IDBODEGA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroFactuSecuencialConstantesFunciones.LABEL_IDTIPOPARAMFACTUPLAZO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroFactuSecuencialConstantesFunciones.LABEL_IDFORMATO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroFactuSecuencialConstantesFunciones.LABEL_CONTRANSFERENCIA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroFactuSecuencialConstantesFunciones.LABEL_IDBODEGATRANSFERENCIA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroFactuSecuencialConstantesFunciones.LABEL_IDTRANSACCIONTRANSFERENCIA;
		
		return sFilaCabecera;
	}
	
	public String getFilaDatosExportarParametroFactuSecuencial(ParametroFactuSecuencial parametrofactusecuencial,String sDelimiter) {
		String sFilaDatos="";
		
		sFilaDatos+="\r\n";
		
		
		sFilaDatos+=parametrofactusecuencial.getId().toString();

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
			sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrofactusecuencial.getVersionRow().toString();
		}

		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrofactusecuencial.getempresa_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrofactusecuencial.getsucursal_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrofactusecuencial.gettipodocumentogeneral_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrofactusecuencial.getsecuencial();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrofactusecuencial.getnumero_digitos().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrofactusecuencial.getnumero_items().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrofactusecuencial.getnumero_descuento().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrofactusecuencial.getnumero_adiicionales().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrofactusecuencial.getnumero_digito_inicio().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrofactusecuencial.getnumero_digito_fin().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrofactusecuencial.getnumero_dias_plazo().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrofactusecuencial.getcon_detalle().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrofactusecuencial.getcon_lector().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrofactusecuencial.getbodega_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrofactusecuencial.gettipoparamfactuplazo_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrofactusecuencial.getformato_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrofactusecuencial.getcon_transferencia().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrofactusecuencial.getbodegatransferencia_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrofactusecuencial.gettransacciontransferencia_descripcion();
		
		return sFilaDatos;
	}
	
	//@SuppressWarnings("deprecation")
	public void exportarExcelParametroFactuSecuencialsSeleccionados() throws Exception {
		ArrayList<ParametroFactuSecuencial> parametrofactusecuencialsSeleccionados=new ArrayList<ParametroFactuSecuencial>();		
		
		parametrofactusecuencialsSeleccionados=this.getParametroFactuSecuencialsSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"parametrofactusecuencial.xls";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		FileOutputStream fileOutputStream=null;
		
		try {
			HSSFWorkbook workbook = new HSSFWorkbook();
			HSSFSheet sheet = workbook.createSheet("ParametroFactuSecuencials");
						
		    			
			Integer iRow=0;
			Integer iCell=0;
			
			HSSFRow row = sheet.createRow(iRow);
			HSSFCell cell = row.createCell(iCell);
			//cell.setCellValue("Blahblah");

			if(conCabecera) {
				this.getFilaCabeceraExportarExcelParametroFactuSecuencial(row);				
				iRow++;
			}				
			
			for(ParametroFactuSecuencial parametrofactusecuencialAux:parametrofactusecuencialsSeleccionados) {
				row = sheet.createRow(iRow);
				
				this.getFilaDatosExportarExcelParametroFactuSecuencial(parametrofactusecuencialAux,row);
				
				iRow++;
			}
			
			
			fileOutputStream = new FileOutputStream(new File(sPath));
		    
			workbook.write(fileOutputStream);
			
			//fileOutputStream.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.parametrofactusecuencialSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Parametro Secuencial ",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			
       		if (fileOutputStream != null) {
				fileOutputStream.close();
			}			
		}
	}		
	
	public void exportarXmlParametroFactuSecuencialsSeleccionados() throws Exception {
		ArrayList<ParametroFactuSecuencial> parametrofactusecuencialsSeleccionados=new ArrayList<ParametroFactuSecuencial>();		
		
		parametrofactusecuencialsSeleccionados=this.getParametroFactuSecuencialsSeleccionados(true);
		
		//String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		//Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		//String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"parametrofactusecuencial.xml";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		DocumentBuilderFactory documentBuilderFactory=null;
		DocumentBuilder documentBuilder =null;
		
		try {
			documentBuilderFactory = DocumentBuilderFactory.newInstance();
			documentBuilder = documentBuilderFactory.newDocumentBuilder();
	
			Document document = documentBuilder.newDocument();
			Element elementRoot = document.createElement("parametrofactusecuencials");
			
			document.appendChild(elementRoot);
		    			
												
			Element element = null;//document.createElement("parametrofactusecuencial");
			//elementRoot.appendChild(element);
		
			for(ParametroFactuSecuencial parametrofactusecuencialAux:parametrofactusecuencialsSeleccionados) {
				element = document.createElement("parametrofactusecuencial");
				elementRoot.appendChild(element);
			
				this.setFilaDatosExportarXmlParametroFactuSecuencial(parametrofactusecuencialAux,document,element);
			}
			
			TransformerFactory transformerFactory = TransformerFactory.newInstance();
			Transformer transformer = transformerFactory.newTransformer();
			DOMSource domSource = new DOMSource(document);
			
			StreamResult streamResult = new StreamResult(new File(sPath));
	
			transformer.transform(domSource, streamResult);
						
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.parametrofactusecuencialSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Parametro Secuencial ",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			       				
		}
	}	
	
	//@SuppressWarnings("deprecation")
	public void getFilaCabeceraExportarExcelParametroFactuSecuencial(HSSFRow row) {
		Integer iColumn=0;
		
		
		HSSFCell cell =null;
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroFactuSecuencialConstantesFunciones.LABEL_ID);

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroFactuSecuencialConstantesFunciones.LABEL_VERSIONROW);
		}

		cell = row.createCell(iColumn++);cell.setCellValue(ParametroFactuSecuencialConstantesFunciones.LABEL_IDEMPRESA);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroFactuSecuencialConstantesFunciones.LABEL_IDSUCURSAL);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroFactuSecuencialConstantesFunciones.LABEL_IDTIPODOCUMENTOGENERAL);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroFactuSecuencialConstantesFunciones.LABEL_SECUENCIAL);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroFactuSecuencialConstantesFunciones.LABEL_NUMERODIGITOS);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroFactuSecuencialConstantesFunciones.LABEL_NUMEROITEMS);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroFactuSecuencialConstantesFunciones.LABEL_NUMERODESCUENTO);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroFactuSecuencialConstantesFunciones.LABEL_NUMEROADIICIONALES);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroFactuSecuencialConstantesFunciones.LABEL_NUMERODIGITOINICIO);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroFactuSecuencialConstantesFunciones.LABEL_NUMERODIGITOFIN);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroFactuSecuencialConstantesFunciones.LABEL_NUMERODIASPLAZO);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroFactuSecuencialConstantesFunciones.LABEL_CONDETALLE);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroFactuSecuencialConstantesFunciones.LABEL_CONLECTOR);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroFactuSecuencialConstantesFunciones.LABEL_IDBODEGA);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroFactuSecuencialConstantesFunciones.LABEL_IDTIPOPARAMFACTUPLAZO);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroFactuSecuencialConstantesFunciones.LABEL_IDFORMATO);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroFactuSecuencialConstantesFunciones.LABEL_CONTRANSFERENCIA);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroFactuSecuencialConstantesFunciones.LABEL_IDBODEGATRANSFERENCIA);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroFactuSecuencialConstantesFunciones.LABEL_IDTRANSACCIONTRANSFERENCIA);
	}
	
	//@SuppressWarnings("deprecation")
	public void getFilaDatosExportarExcelParametroFactuSecuencial(ParametroFactuSecuencial parametrofactusecuencial,HSSFRow row) {
		Integer iColumn=0;
		
		
		HSSFCell cell =null;
		cell = row.createCell(iColumn++);cell.setCellValue(parametrofactusecuencial.getId());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrofactusecuencial.getempresa_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrofactusecuencial.getsucursal_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrofactusecuencial.gettipodocumentogeneral_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrofactusecuencial.getsecuencial());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrofactusecuencial.getnumero_digitos());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrofactusecuencial.getnumero_items());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrofactusecuencial.getnumero_descuento());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrofactusecuencial.getnumero_adiicionales());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrofactusecuencial.getnumero_digito_inicio());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrofactusecuencial.getnumero_digito_fin());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrofactusecuencial.getnumero_dias_plazo());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrofactusecuencial.getcon_detalle());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrofactusecuencial.getcon_lector());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrofactusecuencial.getbodega_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrofactusecuencial.gettipoparamfactuplazo_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrofactusecuencial.getformato_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrofactusecuencial.getcon_transferencia());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrofactusecuencial.getbodegatransferencia_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrofactusecuencial.gettransacciontransferencia_descripcion());				
	}
	
	public void setFilaDatosExportarXmlParametroFactuSecuencial(ParametroFactuSecuencial parametrofactusecuencial,Document document,Element element) {
		/*
		Element lastname = document.createElement("lastname");
		lastname.appendChild(document.createTextNode("mook kim"));
		element.appendChild(lastname);
		*/
		

		Element elementId = document.createElement(ParametroFactuSecuencialConstantesFunciones.ID);
		elementId.appendChild(document.createTextNode(parametrofactusecuencial.getId().toString().trim()));
		element.appendChild(elementId);

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){

		Element elementVersionRow = document.createElement(ParametroFactuSecuencialConstantesFunciones.VERSIONROW);
		elementVersionRow.appendChild(document.createTextNode(parametrofactusecuencial.getVersionRow().toString().trim()));
		element.appendChild(elementVersionRow);
		}


		Element elementempresa_descripcion = document.createElement(ParametroFactuSecuencialConstantesFunciones.IDEMPRESA);
		elementempresa_descripcion.appendChild(document.createTextNode(parametrofactusecuencial.getempresa_descripcion()));
		element.appendChild(elementempresa_descripcion);

		Element elementsucursal_descripcion = document.createElement(ParametroFactuSecuencialConstantesFunciones.IDSUCURSAL);
		elementsucursal_descripcion.appendChild(document.createTextNode(parametrofactusecuencial.getsucursal_descripcion()));
		element.appendChild(elementsucursal_descripcion);

		Element elementtipodocumentogeneral_descripcion = document.createElement(ParametroFactuSecuencialConstantesFunciones.IDTIPODOCUMENTOGENERAL);
		elementtipodocumentogeneral_descripcion.appendChild(document.createTextNode(parametrofactusecuencial.gettipodocumentogeneral_descripcion()));
		element.appendChild(elementtipodocumentogeneral_descripcion);

		Element elementsecuencial = document.createElement(ParametroFactuSecuencialConstantesFunciones.SECUENCIAL);
		elementsecuencial.appendChild(document.createTextNode(parametrofactusecuencial.getsecuencial().trim()));
		element.appendChild(elementsecuencial);

		Element elementnumero_digitos = document.createElement(ParametroFactuSecuencialConstantesFunciones.NUMERODIGITOS);
		elementnumero_digitos.appendChild(document.createTextNode(parametrofactusecuencial.getnumero_digitos().toString().trim()));
		element.appendChild(elementnumero_digitos);

		Element elementnumero_items = document.createElement(ParametroFactuSecuencialConstantesFunciones.NUMEROITEMS);
		elementnumero_items.appendChild(document.createTextNode(parametrofactusecuencial.getnumero_items().toString().trim()));
		element.appendChild(elementnumero_items);

		Element elementnumero_descuento = document.createElement(ParametroFactuSecuencialConstantesFunciones.NUMERODESCUENTO);
		elementnumero_descuento.appendChild(document.createTextNode(parametrofactusecuencial.getnumero_descuento().toString().trim()));
		element.appendChild(elementnumero_descuento);

		Element elementnumero_adiicionales = document.createElement(ParametroFactuSecuencialConstantesFunciones.NUMEROADIICIONALES);
		elementnumero_adiicionales.appendChild(document.createTextNode(parametrofactusecuencial.getnumero_adiicionales().toString().trim()));
		element.appendChild(elementnumero_adiicionales);

		Element elementnumero_digito_inicio = document.createElement(ParametroFactuSecuencialConstantesFunciones.NUMERODIGITOINICIO);
		elementnumero_digito_inicio.appendChild(document.createTextNode(parametrofactusecuencial.getnumero_digito_inicio().toString().trim()));
		element.appendChild(elementnumero_digito_inicio);

		Element elementnumero_digito_fin = document.createElement(ParametroFactuSecuencialConstantesFunciones.NUMERODIGITOFIN);
		elementnumero_digito_fin.appendChild(document.createTextNode(parametrofactusecuencial.getnumero_digito_fin().toString().trim()));
		element.appendChild(elementnumero_digito_fin);

		Element elementnumero_dias_plazo = document.createElement(ParametroFactuSecuencialConstantesFunciones.NUMERODIASPLAZO);
		elementnumero_dias_plazo.appendChild(document.createTextNode(parametrofactusecuencial.getnumero_dias_plazo().toString().trim()));
		element.appendChild(elementnumero_dias_plazo);

		Element elementcon_detalle = document.createElement(ParametroFactuSecuencialConstantesFunciones.CONDETALLE);
		elementcon_detalle.appendChild(document.createTextNode(parametrofactusecuencial.getcon_detalle().toString().trim()));
		element.appendChild(elementcon_detalle);

		Element elementcon_lector = document.createElement(ParametroFactuSecuencialConstantesFunciones.CONLECTOR);
		elementcon_lector.appendChild(document.createTextNode(parametrofactusecuencial.getcon_lector().toString().trim()));
		element.appendChild(elementcon_lector);

		Element elementbodega_descripcion = document.createElement(ParametroFactuSecuencialConstantesFunciones.IDBODEGA);
		elementbodega_descripcion.appendChild(document.createTextNode(parametrofactusecuencial.getbodega_descripcion()));
		element.appendChild(elementbodega_descripcion);

		Element elementtipoparamfactuplazo_descripcion = document.createElement(ParametroFactuSecuencialConstantesFunciones.IDTIPOPARAMFACTUPLAZO);
		elementtipoparamfactuplazo_descripcion.appendChild(document.createTextNode(parametrofactusecuencial.gettipoparamfactuplazo_descripcion()));
		element.appendChild(elementtipoparamfactuplazo_descripcion);

		Element elementformato_descripcion = document.createElement(ParametroFactuSecuencialConstantesFunciones.IDFORMATO);
		elementformato_descripcion.appendChild(document.createTextNode(parametrofactusecuencial.getformato_descripcion()));
		element.appendChild(elementformato_descripcion);

		Element elementcon_transferencia = document.createElement(ParametroFactuSecuencialConstantesFunciones.CONTRANSFERENCIA);
		elementcon_transferencia.appendChild(document.createTextNode(parametrofactusecuencial.getcon_transferencia().toString().trim()));
		element.appendChild(elementcon_transferencia);

		Element elementbodegatransferencia_descripcion = document.createElement(ParametroFactuSecuencialConstantesFunciones.IDBODEGATRANSFERENCIA);
		elementbodegatransferencia_descripcion.appendChild(document.createTextNode(parametrofactusecuencial.getbodegatransferencia_descripcion()));
		element.appendChild(elementbodegatransferencia_descripcion);

		Element elementtransacciontransferencia_descripcion = document.createElement(ParametroFactuSecuencialConstantesFunciones.IDTRANSACCIONTRANSFERENCIA);
		elementtransacciontransferencia_descripcion.appendChild(document.createTextNode(parametrofactusecuencial.gettransacciontransferencia_descripcion()));
		element.appendChild(elementtransacciontransferencia_descripcion);
	}
	
	public void generarReporteGroupGenericoParametroFactuSecuencialsSeleccionados(Boolean soloTotales) throws Exception {
		ArrayList<ParametroFactuSecuencial> parametrofactusecuencialsSeleccionados=new ArrayList<ParametroFactuSecuencial>();
		
		parametrofactusecuencialsSeleccionados=this.getParametroFactuSecuencialsSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
		
		/*
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		if(!soloTotales) {
			this.sTipoReporteExtra=Constantes2.S_REPORTE_EXTRA_GROUP_GENERICO;
		} else {
			this.sTipoReporteExtra=Constantes2.S_REPORTE_EXTRA_GROUP_TOTALES_GENERICO;
		}
		
		this.setColumnaDescripcionReporteGroupGenericoParametroFactuSecuencial(parametrofactusecuencialsSeleccionados);
		
		this.generarReporteParametroFactuSecuencials("Todos",parametrofactusecuencialsSeleccionados);
	}
	
	public void setColumnaDescripcionReporteGroupGenericoParametroFactuSecuencial(ArrayList<ParametroFactuSecuencial> parametrofactusecuencialsSeleccionados) throws Exception {    		
		try {
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			
			Boolean existe=false;
			
			for(ParametroFactuSecuencial parametrofactusecuencialAux:parametrofactusecuencialsSeleccionados) {
				parametrofactusecuencialAux.setsDetalleGeneralEntityReporte(parametrofactusecuencialAux.toString());
			
				if(sTipoSeleccionar.equals(ParametroFactuSecuencialConstantesFunciones.LABEL_IDEMPRESA)) {
					existe=true;
					parametrofactusecuencialAux.setsDescripcionGeneralEntityReporte1(parametrofactusecuencialAux.getempresa_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ParametroFactuSecuencialConstantesFunciones.LABEL_IDSUCURSAL)) {
					existe=true;
					parametrofactusecuencialAux.setsDescripcionGeneralEntityReporte1(parametrofactusecuencialAux.getsucursal_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ParametroFactuSecuencialConstantesFunciones.LABEL_IDTIPODOCUMENTOGENERAL)) {
					existe=true;
					parametrofactusecuencialAux.setsDescripcionGeneralEntityReporte1(parametrofactusecuencialAux.gettipodocumentogeneral_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ParametroFactuSecuencialConstantesFunciones.LABEL_SECUENCIAL)) {
					existe=true;
					parametrofactusecuencialAux.setsDescripcionGeneralEntityReporte1(parametrofactusecuencialAux.getsecuencial());
				}
				 else if(sTipoSeleccionar.equals(ParametroFactuSecuencialConstantesFunciones.LABEL_NUMERODIGITOS)) {
					existe=true;
					parametrofactusecuencialAux.setsDescripcionGeneralEntityReporte1(parametrofactusecuencialAux.getnumero_digitos().toString());
				}
				 else if(sTipoSeleccionar.equals(ParametroFactuSecuencialConstantesFunciones.LABEL_NUMEROITEMS)) {
					existe=true;
					parametrofactusecuencialAux.setsDescripcionGeneralEntityReporte1(parametrofactusecuencialAux.getnumero_items().toString());
				}
				 else if(sTipoSeleccionar.equals(ParametroFactuSecuencialConstantesFunciones.LABEL_NUMERODESCUENTO)) {
					existe=true;
					parametrofactusecuencialAux.setsDescripcionGeneralEntityReporte1(parametrofactusecuencialAux.getnumero_descuento().toString());
				}
				 else if(sTipoSeleccionar.equals(ParametroFactuSecuencialConstantesFunciones.LABEL_NUMEROADIICIONALES)) {
					existe=true;
					parametrofactusecuencialAux.setsDescripcionGeneralEntityReporte1(parametrofactusecuencialAux.getnumero_adiicionales().toString());
				}
				 else if(sTipoSeleccionar.equals(ParametroFactuSecuencialConstantesFunciones.LABEL_NUMERODIGITOINICIO)) {
					existe=true;
					parametrofactusecuencialAux.setsDescripcionGeneralEntityReporte1(parametrofactusecuencialAux.getnumero_digito_inicio().toString());
				}
				 else if(sTipoSeleccionar.equals(ParametroFactuSecuencialConstantesFunciones.LABEL_NUMERODIGITOFIN)) {
					existe=true;
					parametrofactusecuencialAux.setsDescripcionGeneralEntityReporte1(parametrofactusecuencialAux.getnumero_digito_fin().toString());
				}
				 else if(sTipoSeleccionar.equals(ParametroFactuSecuencialConstantesFunciones.LABEL_NUMERODIASPLAZO)) {
					existe=true;
					parametrofactusecuencialAux.setsDescripcionGeneralEntityReporte1(parametrofactusecuencialAux.getnumero_dias_plazo().toString());
				}
				 else if(sTipoSeleccionar.equals(ParametroFactuSecuencialConstantesFunciones.LABEL_CONDETALLE)) {
					existe=true;
					parametrofactusecuencialAux.setsDescripcionGeneralEntityReporte1(Funciones2.getDescripcionBoolean(parametrofactusecuencialAux.getcon_detalle()));
				}
				 else if(sTipoSeleccionar.equals(ParametroFactuSecuencialConstantesFunciones.LABEL_CONLECTOR)) {
					existe=true;
					parametrofactusecuencialAux.setsDescripcionGeneralEntityReporte1(Funciones2.getDescripcionBoolean(parametrofactusecuencialAux.getcon_lector()));
				}
				 else if(sTipoSeleccionar.equals(ParametroFactuSecuencialConstantesFunciones.LABEL_IDBODEGA)) {
					existe=true;
					parametrofactusecuencialAux.setsDescripcionGeneralEntityReporte1(parametrofactusecuencialAux.getbodega_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ParametroFactuSecuencialConstantesFunciones.LABEL_IDTIPOPARAMFACTUPLAZO)) {
					existe=true;
					parametrofactusecuencialAux.setsDescripcionGeneralEntityReporte1(parametrofactusecuencialAux.gettipoparamfactuplazo_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ParametroFactuSecuencialConstantesFunciones.LABEL_IDFORMATO)) {
					existe=true;
					parametrofactusecuencialAux.setsDescripcionGeneralEntityReporte1(parametrofactusecuencialAux.getformato_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ParametroFactuSecuencialConstantesFunciones.LABEL_CONTRANSFERENCIA)) {
					existe=true;
					parametrofactusecuencialAux.setsDescripcionGeneralEntityReporte1(Funciones2.getDescripcionBoolean(parametrofactusecuencialAux.getcon_transferencia()));
				}
				 else if(sTipoSeleccionar.equals(ParametroFactuSecuencialConstantesFunciones.LABEL_IDBODEGATRANSFERENCIA)) {
					existe=true;
					parametrofactusecuencialAux.setsDescripcionGeneralEntityReporte1(parametrofactusecuencialAux.getbodegatransferencia_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ParametroFactuSecuencialConstantesFunciones.LABEL_IDTRANSACCIONTRANSFERENCIA)) {
					existe=true;
					parametrofactusecuencialAux.setsDescripcionGeneralEntityReporte1(parametrofactusecuencialAux.gettransacciontransferencia_descripcion());
				}
			}	
											
			if(!existe) {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}										
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroFactuSecuencialConstantesFunciones.CLASSNAME);
		}
	}
	
	
	public void actualizarEstadoCeldasBotonesParametroFactuSecuencial(String sAccion,Boolean isGuardarCambiosEnLote,Boolean isEsMantenimientoRelacionado) throws Exception {
		if(sAccion=="n") {
			if(!this.esParaBusquedaForeignKey) {
				this.isVisibilidadCeldaNuevoParametroFactuSecuencial=true;
				this.isVisibilidadCeldaNuevoRelacionesParametroFactuSecuencial=true;
				this.isVisibilidadCeldaGuardarCambiosParametroFactuSecuencial=true;
			}
			
			this.isVisibilidadCeldaModificarParametroFactuSecuencial=false;
			this.isVisibilidadCeldaActualizarParametroFactuSecuencial=false;
			this.isVisibilidadCeldaEliminarParametroFactuSecuencial=false;
			this.isVisibilidadCeldaCancelarParametroFactuSecuencial=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarParametroFactuSecuencial=true;
				} else {
					this.isVisibilidadCeldaGuardarParametroFactuSecuencial=false;
				}
			}
		} else if(sAccion=="a") {
			this.isVisibilidadCeldaNuevoParametroFactuSecuencial=false;
			this.isVisibilidadCeldaNuevoRelacionesParametroFactuSecuencial=false;
			this.isVisibilidadCeldaGuardarCambiosParametroFactuSecuencial=false;
			this.isVisibilidadCeldaModificarParametroFactuSecuencial=false;
			this.isVisibilidadCeldaActualizarParametroFactuSecuencial=true;
			this.isVisibilidadCeldaEliminarParametroFactuSecuencial=false;
			this.isVisibilidadCeldaCancelarParametroFactuSecuencial=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarParametroFactuSecuencial=true;
				} else {
					this.isVisibilidadCeldaGuardarParametroFactuSecuencial=false;
				}
			}
		} else if(sAccion=="ae") {
			this.isVisibilidadCeldaNuevoParametroFactuSecuencial=false;
			this.isVisibilidadCeldaNuevoRelacionesParametroFactuSecuencial=false;
			this.isVisibilidadCeldaGuardarCambiosParametroFactuSecuencial=false;
			this.isVisibilidadCeldaModificarParametroFactuSecuencial=false;
			this.isVisibilidadCeldaActualizarParametroFactuSecuencial=true;
			this.isVisibilidadCeldaEliminarParametroFactuSecuencial=true;
			this.isVisibilidadCeldaCancelarParametroFactuSecuencial=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarParametroFactuSecuencial=true;
				} else {
					this.isVisibilidadCeldaGuardarParametroFactuSecuencial=false;
				}
			}
		}
		//Para Mantenimientos de tablas relacionados con mas de columnas minimas
		else if(sAccion=="ae2") {
			this.isVisibilidadCeldaNuevoParametroFactuSecuencial=false;
			this.isVisibilidadCeldaNuevoRelacionesParametroFactuSecuencial=false;
			this.isVisibilidadCeldaGuardarCambiosParametroFactuSecuencial=false;
			this.isVisibilidadCeldaModificarParametroFactuSecuencial=false;
			this.isVisibilidadCeldaActualizarParametroFactuSecuencial=true;
			this.isVisibilidadCeldaEliminarParametroFactuSecuencial=false;
			this.isVisibilidadCeldaCancelarParametroFactuSecuencial=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarParametroFactuSecuencial=false;
				} else {
					this.isVisibilidadCeldaGuardarParametroFactuSecuencial=false;
				}
			}
		} else if(sAccion=="c") {
			this.isVisibilidadCeldaNuevoParametroFactuSecuencial=true;
			this.isVisibilidadCeldaNuevoRelacionesParametroFactuSecuencial=true;
			this.isVisibilidadCeldaGuardarCambiosParametroFactuSecuencial=true;
			this.isVisibilidadCeldaModificarParametroFactuSecuencial=false;
			this.isVisibilidadCeldaActualizarParametroFactuSecuencial=false;
			this.isVisibilidadCeldaEliminarParametroFactuSecuencial=false;
			this.isVisibilidadCeldaCancelarParametroFactuSecuencial=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarParametroFactuSecuencial=true;
				} else {
					this.isVisibilidadCeldaGuardarParametroFactuSecuencial=false;
				}
			}
		} else if(sAccion=="t") {
			this.isVisibilidadCeldaNuevoParametroFactuSecuencial=false;
			this.isVisibilidadCeldaNuevoRelacionesParametroFactuSecuencial=false;
			this.isVisibilidadCeldaGuardarCambiosParametroFactuSecuencial=false;
			this.isVisibilidadCeldaActualizarParametroFactuSecuencial=false;
			this.isVisibilidadCeldaEliminarParametroFactuSecuencial=false;
			this.isVisibilidadCeldaCancelarParametroFactuSecuencial=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarParametroFactuSecuencial=false;
				} else {
					this.isVisibilidadCeldaGuardarParametroFactuSecuencial=false;
				}
			}
		}  else if(sAccion=="s"||sAccion=="s2") {
			this.isVisibilidadCeldaNuevoParametroFactuSecuencial=false;
			this.isVisibilidadCeldaNuevoRelacionesParametroFactuSecuencial=false;
			this.isVisibilidadCeldaGuardarCambiosParametroFactuSecuencial=false;
			this.isVisibilidadCeldaModificarParametroFactuSecuencial=true;
			this.isVisibilidadCeldaActualizarParametroFactuSecuencial=false;
			this.isVisibilidadCeldaEliminarParametroFactuSecuencial=false;
			this.isVisibilidadCeldaCancelarParametroFactuSecuencial=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarParametroFactuSecuencial=false;
				} else {
					this.isVisibilidadCeldaGuardarParametroFactuSecuencial=false;
				}
			}
		}
		
		//ACTUALIZA VISIBILIDAD PANELES
		if(ParametroFactuSecuencialJInternalFrame.CON_DATOS_FRAME && !this.esParaBusquedaForeignKey) {
			//SIEMPRE VISIBLE
			this.isVisibilidadCeldaNuevoParametroFactuSecuencial=true;
			this.isVisibilidadCeldaNuevoRelacionesParametroFactuSecuencial=true;
			this.isVisibilidadCeldaGuardarCambiosParametroFactuSecuencial=true;
		} else {
			this.actualizarEstadoPanelsParametroFactuSecuencial(sAccion);						
		}
		
		if(this.esParaBusquedaForeignKey) {
			this.isVisibilidadCeldaCopiarParametroFactuSecuencial=false;
			//this.isVisibilidadCeldaVerFormParametroFactuSecuencial=false;
			this.isVisibilidadCeldaDuplicarParametroFactuSecuencial=false;
		}
		
		//SI ES MANTENIMIENTO RELACIONES
		if(!parametrofactusecuencialSessionBean.getConGuardarRelaciones()) {
			this.isVisibilidadCeldaNuevoRelacionesParametroFactuSecuencial=false;
		} else {
			this.isVisibilidadCeldaNuevoParametroFactuSecuencial=false;
			this.isVisibilidadCeldaGuardarCambiosParametroFactuSecuencial=false;
		}
		
		//SI ES MANTENIMIENTO RELACIONADO
		if(parametrofactusecuencialSessionBean.getEsGuardarRelacionado()) {
			if(!parametrofactusecuencialSessionBean.getConGuardarRelaciones()) {	
				this.isVisibilidadCeldaNuevoRelacionesParametroFactuSecuencial=false;												
			}
			
			this.jButtonCerrarParametroFactuSecuencial.setVisible(false);
		}
		
		//SI NO TIENE MAXIMO DE RELACIONES PERMITIDAS
		if(!this.conMaximoRelaciones) {
			this.isVisibilidadCeldaNuevoRelacionesParametroFactuSecuencial=false;
		}
		
		if(!this.permiteMantenimiento(this.parametrofactusecuencial)) {
			this.isVisibilidadCeldaActualizarParametroFactuSecuencial=false;
			this.isVisibilidadCeldaEliminarParametroFactuSecuencial=false;
		}
		
		
		
	}
	
	public void actualizarEstadoCeldasBotonesConGuardarRelacionesParametroFactuSecuencial() {
	}
	
	public void actualizarEstadoPanelsParametroFactuSecuencial(String sAccion) {
		if(sAccion=="n") {
			if(this.jScrollPanelDatosEdicionParametroFactuSecuencial!=null) {
				this.jScrollPanelDatosEdicionParametroFactuSecuencial.setVisible(false);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasParametroFactuSecuencial!=null) {
				this.jTabbedPaneBusquedasParametroFactuSecuencial.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosParametroFactuSecuencial!=null) {
				this.jScrollPanelDatosParametroFactuSecuencial.setVisible(true);
			}
			
			if(this.jPanelPaginacionParametroFactuSecuencial!=null) {
				this.jPanelPaginacionParametroFactuSecuencial.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesParametroFactuSecuencial!=null) {
				this.jPanelParametrosReportesParametroFactuSecuencial.setVisible(true);		    
			}
			
		} else if(sAccion=="a") {				
			if(this.jScrollPanelDatosEdicionParametroFactuSecuencial!=null) {
				this.jScrollPanelDatosEdicionParametroFactuSecuencial.setVisible(true);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasParametroFactuSecuencial!=null) {
				this.jTabbedPaneBusquedasParametroFactuSecuencial.setVisible(false);			
			}
			
			
			
			if(this.jScrollPanelDatosParametroFactuSecuencial!=null) {
				this.jScrollPanelDatosParametroFactuSecuencial.setVisible(false);
			}
			
			if(this.jPanelPaginacionParametroFactuSecuencial!=null) {
				this.jPanelPaginacionParametroFactuSecuencial.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesParametroFactuSecuencial!=null) {
				this.jPanelParametrosReportesParametroFactuSecuencial.setVisible(false);
			}
						
		} else if(sAccion=="ae") {		
			if(this.jScrollPanelDatosEdicionParametroFactuSecuencial!=null) {
				this.jScrollPanelDatosEdicionParametroFactuSecuencial.setVisible(true);		
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasParametroFactuSecuencial!=null) {
				this.jTabbedPaneBusquedasParametroFactuSecuencial.setVisible(false);			
			}
			
			
			if(this.jScrollPanelDatosParametroFactuSecuencial!=null) {
				this.jScrollPanelDatosParametroFactuSecuencial.setVisible(false);
			}
			
			if(this.jPanelPaginacionParametroFactuSecuencial!=null) {
				this.jPanelPaginacionParametroFactuSecuencial.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesParametroFactuSecuencial!=null) {
				this.jPanelParametrosReportesParametroFactuSecuencial.setVisible(false);
			}
						
		}
		//Para Mantenimientos de tablas relacionados con mas de columnas minimas
		else if(sAccion=="ae2") {	
			if(this.jScrollPanelDatosEdicionParametroFactuSecuencial!=null) {
				this.jScrollPanelDatosEdicionParametroFactuSecuencial.setVisible(true);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasParametroFactuSecuencial!=null) {
				this.jTabbedPaneBusquedasParametroFactuSecuencial.setVisible(false);			
			}
			
			
			if(this.jScrollPanelDatosParametroFactuSecuencial!=null) {
				this.jScrollPanelDatosParametroFactuSecuencial.setVisible(false);
			}
			
			if(this.jPanelPaginacionParametroFactuSecuencial!=null) {
				this.jPanelPaginacionParametroFactuSecuencial.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesParametroFactuSecuencial!=null) {
				this.jPanelParametrosReportesParametroFactuSecuencial.setVisible(false);
			}
						
		} else if(sAccion=="c") {	
			if(this.jScrollPanelDatosEdicionParametroFactuSecuencial!=null) {
				this.jScrollPanelDatosEdicionParametroFactuSecuencial.setVisible(false);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasParametroFactuSecuencial!=null) {
				this.jTabbedPaneBusquedasParametroFactuSecuencial.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosParametroFactuSecuencial!=null) {
				this.jScrollPanelDatosParametroFactuSecuencial.setVisible(true);
			}
			
			if(this.jPanelPaginacionParametroFactuSecuencial!=null) {
				this.jPanelPaginacionParametroFactuSecuencial.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesParametroFactuSecuencial!=null) {
				this.jPanelParametrosReportesParametroFactuSecuencial.setVisible(true);
			}
						
		} else if(sAccion=="t") {
			
			if(this.jScrollPanelDatosEdicionParametroFactuSecuencial!=null) {
				this.jScrollPanelDatosEdicionParametroFactuSecuencial.setVisible(false);
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasParametroFactuSecuencial!=null) {
				this.jTabbedPaneBusquedasParametroFactuSecuencial.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosParametroFactuSecuencial!=null) {
				this.jScrollPanelDatosParametroFactuSecuencial.setVisible(true);
			}
			
			if(this.jPanelPaginacionParametroFactuSecuencial!=null) {
				this.jPanelPaginacionParametroFactuSecuencial.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesParametroFactuSecuencial!=null) {
				this.jPanelParametrosReportesParametroFactuSecuencial.setVisible(true);
			}
						
		}  else if(sAccion=="s"||sAccion=="s2") {
			if(this.jScrollPanelDatosEdicionParametroFactuSecuencial!=null) {
				this.jScrollPanelDatosEdicionParametroFactuSecuencial.setVisible(false);
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasParametroFactuSecuencial!=null) {
				this.jTabbedPaneBusquedasParametroFactuSecuencial.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosParametroFactuSecuencial!=null) {
				this.jScrollPanelDatosParametroFactuSecuencial.setVisible(true);
			}
			
			if(this.jPanelPaginacionParametroFactuSecuencial!=null) {
				this.jPanelPaginacionParametroFactuSecuencial.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesParametroFactuSecuencial!=null) {
				this.jPanelParametrosReportesParametroFactuSecuencial.setVisible(true);
			}
			
		} 
		
		if(sAccion.equals("relacionado") || this.parametrofactusecuencialSessionBean.getEsGuardarRelacionado()) {
			if(!this.conCargarMinimo) {
				//BYDAN_BUSQUEDAS
				
				if(this.jTabbedPaneBusquedasParametroFactuSecuencial!=null) {
					this.jTabbedPaneBusquedasParametroFactuSecuencial.setVisible(false);				
				}
				
			}
			
			if(this.jPanelParametrosReportesParametroFactuSecuencial!=null) {
				this.jPanelParametrosReportesParametroFactuSecuencial.setVisible(false);
			}
		
		} else if(sAccion.equals("no_relacionado") && !this.parametrofactusecuencialSessionBean.getEsGuardarRelacionado()) {
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasParametroFactuSecuencial!=null) {
				this.jTabbedPaneBusquedasParametroFactuSecuencial.setVisible(true);			
			}
			
			if(this.jPanelParametrosReportesParametroFactuSecuencial!=null) {
				this.jPanelParametrosReportesParametroFactuSecuencial.setVisible(true);
			}
		}
	}	
	
	

	public void setVisibilidadBusquedasParaEmpresa(Boolean isParaEmpresa){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaEmpresaNegation=!isParaEmpresa;

			this.isVisibilidadFK_IdBodega=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdBodega) {this.jTabbedPaneBusquedasParametroFactuSecuencial.remove(jPanelFK_IdBodegaParametroFactuSecuencial);}

			this.isVisibilidadFK_IdBodegaTransferencia=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdBodegaTransferencia) {this.jTabbedPaneBusquedasParametroFactuSecuencial.remove(jPanelFK_IdBodegaTransferenciaParametroFactuSecuencial);}

			this.isVisibilidadFK_IdFormato=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdFormato) {this.jTabbedPaneBusquedasParametroFactuSecuencial.remove(jPanelFK_IdFormatoParametroFactuSecuencial);}

			this.isVisibilidadFK_IdTipoDocumentoGeneral=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdTipoDocumentoGeneral) {this.jTabbedPaneBusquedasParametroFactuSecuencial.remove(jPanelFK_IdTipoDocumentoGeneralParametroFactuSecuencial);}

			this.isVisibilidadFK_IdTipoParamFactuPlazo=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdTipoParamFactuPlazo) {this.jTabbedPaneBusquedasParametroFactuSecuencial.remove(jPanelFK_IdTipoParamFactuPlazoParametroFactuSecuencial);}

			this.isVisibilidadFK_IdTransaccionTransferencia=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdTransaccionTransferencia) {this.jTabbedPaneBusquedasParametroFactuSecuencial.remove(jPanelFK_IdTransaccionTransferenciaParametroFactuSecuencial);}
		}
		
	}

	public void setVisibilidadBusquedasParaSucursal(Boolean isParaSucursal){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaSucursalNegation=!isParaSucursal;

			this.isVisibilidadFK_IdBodega=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdBodega) {this.jTabbedPaneBusquedasParametroFactuSecuencial.remove(jPanelFK_IdBodegaParametroFactuSecuencial);}

			this.isVisibilidadFK_IdBodegaTransferencia=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdBodegaTransferencia) {this.jTabbedPaneBusquedasParametroFactuSecuencial.remove(jPanelFK_IdBodegaTransferenciaParametroFactuSecuencial);}

			this.isVisibilidadFK_IdFormato=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdFormato) {this.jTabbedPaneBusquedasParametroFactuSecuencial.remove(jPanelFK_IdFormatoParametroFactuSecuencial);}

			this.isVisibilidadFK_IdTipoDocumentoGeneral=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdTipoDocumentoGeneral) {this.jTabbedPaneBusquedasParametroFactuSecuencial.remove(jPanelFK_IdTipoDocumentoGeneralParametroFactuSecuencial);}

			this.isVisibilidadFK_IdTipoParamFactuPlazo=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdTipoParamFactuPlazo) {this.jTabbedPaneBusquedasParametroFactuSecuencial.remove(jPanelFK_IdTipoParamFactuPlazoParametroFactuSecuencial);}

			this.isVisibilidadFK_IdTransaccionTransferencia=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdTransaccionTransferencia) {this.jTabbedPaneBusquedasParametroFactuSecuencial.remove(jPanelFK_IdTransaccionTransferenciaParametroFactuSecuencial);}
		}
		
	}

	public void setVisibilidadBusquedasParaTipoDocumentoGeneral(Boolean isParaTipoDocumentoGeneral){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaTipoDocumentoGeneralNegation=!isParaTipoDocumentoGeneral;

			this.isVisibilidadFK_IdBodega=isParaTipoDocumentoGeneralNegation;
			if(!this.isVisibilidadFK_IdBodega) {this.jTabbedPaneBusquedasParametroFactuSecuencial.remove(jPanelFK_IdBodegaParametroFactuSecuencial);}

			this.isVisibilidadFK_IdBodegaTransferencia=isParaTipoDocumentoGeneralNegation;
			if(!this.isVisibilidadFK_IdBodegaTransferencia) {this.jTabbedPaneBusquedasParametroFactuSecuencial.remove(jPanelFK_IdBodegaTransferenciaParametroFactuSecuencial);}

			this.isVisibilidadFK_IdFormato=isParaTipoDocumentoGeneralNegation;
			if(!this.isVisibilidadFK_IdFormato) {this.jTabbedPaneBusquedasParametroFactuSecuencial.remove(jPanelFK_IdFormatoParametroFactuSecuencial);}

			this.isVisibilidadFK_IdTipoDocumentoGeneral=isParaTipoDocumentoGeneral;
			if(!this.isVisibilidadFK_IdTipoDocumentoGeneral) {this.jTabbedPaneBusquedasParametroFactuSecuencial.remove(jPanelFK_IdTipoDocumentoGeneralParametroFactuSecuencial);}

			this.isVisibilidadFK_IdTipoParamFactuPlazo=isParaTipoDocumentoGeneralNegation;
			if(!this.isVisibilidadFK_IdTipoParamFactuPlazo) {this.jTabbedPaneBusquedasParametroFactuSecuencial.remove(jPanelFK_IdTipoParamFactuPlazoParametroFactuSecuencial);}

			this.isVisibilidadFK_IdTransaccionTransferencia=isParaTipoDocumentoGeneralNegation;
			if(!this.isVisibilidadFK_IdTransaccionTransferencia) {this.jTabbedPaneBusquedasParametroFactuSecuencial.remove(jPanelFK_IdTransaccionTransferenciaParametroFactuSecuencial);}
		}
		
	}

	public void setVisibilidadBusquedasParaBodega(Boolean isParaBodega){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaBodegaNegation=!isParaBodega;

			this.isVisibilidadFK_IdBodega=isParaBodega;
			if(!this.isVisibilidadFK_IdBodega) {this.jTabbedPaneBusquedasParametroFactuSecuencial.remove(jPanelFK_IdBodegaParametroFactuSecuencial);}

			this.isVisibilidadFK_IdBodegaTransferencia=isParaBodegaNegation;
			if(!this.isVisibilidadFK_IdBodegaTransferencia) {this.jTabbedPaneBusquedasParametroFactuSecuencial.remove(jPanelFK_IdBodegaTransferenciaParametroFactuSecuencial);}

			this.isVisibilidadFK_IdFormato=isParaBodegaNegation;
			if(!this.isVisibilidadFK_IdFormato) {this.jTabbedPaneBusquedasParametroFactuSecuencial.remove(jPanelFK_IdFormatoParametroFactuSecuencial);}

			this.isVisibilidadFK_IdTipoDocumentoGeneral=isParaBodegaNegation;
			if(!this.isVisibilidadFK_IdTipoDocumentoGeneral) {this.jTabbedPaneBusquedasParametroFactuSecuencial.remove(jPanelFK_IdTipoDocumentoGeneralParametroFactuSecuencial);}

			this.isVisibilidadFK_IdTipoParamFactuPlazo=isParaBodegaNegation;
			if(!this.isVisibilidadFK_IdTipoParamFactuPlazo) {this.jTabbedPaneBusquedasParametroFactuSecuencial.remove(jPanelFK_IdTipoParamFactuPlazoParametroFactuSecuencial);}

			this.isVisibilidadFK_IdTransaccionTransferencia=isParaBodegaNegation;
			if(!this.isVisibilidadFK_IdTransaccionTransferencia) {this.jTabbedPaneBusquedasParametroFactuSecuencial.remove(jPanelFK_IdTransaccionTransferenciaParametroFactuSecuencial);}
		}
		
	}

	public void setVisibilidadBusquedasParaTipoParamFactuPlazo(Boolean isParaTipoParamFactuPlazo){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaTipoParamFactuPlazoNegation=!isParaTipoParamFactuPlazo;

			this.isVisibilidadFK_IdBodega=isParaTipoParamFactuPlazoNegation;
			if(!this.isVisibilidadFK_IdBodega) {this.jTabbedPaneBusquedasParametroFactuSecuencial.remove(jPanelFK_IdBodegaParametroFactuSecuencial);}

			this.isVisibilidadFK_IdBodegaTransferencia=isParaTipoParamFactuPlazoNegation;
			if(!this.isVisibilidadFK_IdBodegaTransferencia) {this.jTabbedPaneBusquedasParametroFactuSecuencial.remove(jPanelFK_IdBodegaTransferenciaParametroFactuSecuencial);}

			this.isVisibilidadFK_IdFormato=isParaTipoParamFactuPlazoNegation;
			if(!this.isVisibilidadFK_IdFormato) {this.jTabbedPaneBusquedasParametroFactuSecuencial.remove(jPanelFK_IdFormatoParametroFactuSecuencial);}

			this.isVisibilidadFK_IdTipoDocumentoGeneral=isParaTipoParamFactuPlazoNegation;
			if(!this.isVisibilidadFK_IdTipoDocumentoGeneral) {this.jTabbedPaneBusquedasParametroFactuSecuencial.remove(jPanelFK_IdTipoDocumentoGeneralParametroFactuSecuencial);}

			this.isVisibilidadFK_IdTipoParamFactuPlazo=isParaTipoParamFactuPlazo;
			if(!this.isVisibilidadFK_IdTipoParamFactuPlazo) {this.jTabbedPaneBusquedasParametroFactuSecuencial.remove(jPanelFK_IdTipoParamFactuPlazoParametroFactuSecuencial);}

			this.isVisibilidadFK_IdTransaccionTransferencia=isParaTipoParamFactuPlazoNegation;
			if(!this.isVisibilidadFK_IdTransaccionTransferencia) {this.jTabbedPaneBusquedasParametroFactuSecuencial.remove(jPanelFK_IdTransaccionTransferenciaParametroFactuSecuencial);}
		}
		
	}

	public void setVisibilidadBusquedasParaFormato(Boolean isParaFormato){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaFormatoNegation=!isParaFormato;

			this.isVisibilidadFK_IdBodega=isParaFormatoNegation;
			if(!this.isVisibilidadFK_IdBodega) {this.jTabbedPaneBusquedasParametroFactuSecuencial.remove(jPanelFK_IdBodegaParametroFactuSecuencial);}

			this.isVisibilidadFK_IdBodegaTransferencia=isParaFormatoNegation;
			if(!this.isVisibilidadFK_IdBodegaTransferencia) {this.jTabbedPaneBusquedasParametroFactuSecuencial.remove(jPanelFK_IdBodegaTransferenciaParametroFactuSecuencial);}

			this.isVisibilidadFK_IdFormato=isParaFormato;
			if(!this.isVisibilidadFK_IdFormato) {this.jTabbedPaneBusquedasParametroFactuSecuencial.remove(jPanelFK_IdFormatoParametroFactuSecuencial);}

			this.isVisibilidadFK_IdTipoDocumentoGeneral=isParaFormatoNegation;
			if(!this.isVisibilidadFK_IdTipoDocumentoGeneral) {this.jTabbedPaneBusquedasParametroFactuSecuencial.remove(jPanelFK_IdTipoDocumentoGeneralParametroFactuSecuencial);}

			this.isVisibilidadFK_IdTipoParamFactuPlazo=isParaFormatoNegation;
			if(!this.isVisibilidadFK_IdTipoParamFactuPlazo) {this.jTabbedPaneBusquedasParametroFactuSecuencial.remove(jPanelFK_IdTipoParamFactuPlazoParametroFactuSecuencial);}

			this.isVisibilidadFK_IdTransaccionTransferencia=isParaFormatoNegation;
			if(!this.isVisibilidadFK_IdTransaccionTransferencia) {this.jTabbedPaneBusquedasParametroFactuSecuencial.remove(jPanelFK_IdTransaccionTransferenciaParametroFactuSecuencial);}
		}
		
	}

	public void setVisibilidadBusquedasParaBodegaTransferencia(Boolean isParaBodegaTransferencia){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaBodegaTransferenciaNegation=!isParaBodegaTransferencia;

			this.isVisibilidadFK_IdBodega=isParaBodegaTransferenciaNegation;
			if(!this.isVisibilidadFK_IdBodega) {this.jTabbedPaneBusquedasParametroFactuSecuencial.remove(jPanelFK_IdBodegaParametroFactuSecuencial);}

			this.isVisibilidadFK_IdBodegaTransferencia=isParaBodegaTransferencia;
			if(!this.isVisibilidadFK_IdBodegaTransferencia) {this.jTabbedPaneBusquedasParametroFactuSecuencial.remove(jPanelFK_IdBodegaTransferenciaParametroFactuSecuencial);}

			this.isVisibilidadFK_IdFormato=isParaBodegaTransferenciaNegation;
			if(!this.isVisibilidadFK_IdFormato) {this.jTabbedPaneBusquedasParametroFactuSecuencial.remove(jPanelFK_IdFormatoParametroFactuSecuencial);}

			this.isVisibilidadFK_IdTipoDocumentoGeneral=isParaBodegaTransferenciaNegation;
			if(!this.isVisibilidadFK_IdTipoDocumentoGeneral) {this.jTabbedPaneBusquedasParametroFactuSecuencial.remove(jPanelFK_IdTipoDocumentoGeneralParametroFactuSecuencial);}

			this.isVisibilidadFK_IdTipoParamFactuPlazo=isParaBodegaTransferenciaNegation;
			if(!this.isVisibilidadFK_IdTipoParamFactuPlazo) {this.jTabbedPaneBusquedasParametroFactuSecuencial.remove(jPanelFK_IdTipoParamFactuPlazoParametroFactuSecuencial);}

			this.isVisibilidadFK_IdTransaccionTransferencia=isParaBodegaTransferenciaNegation;
			if(!this.isVisibilidadFK_IdTransaccionTransferencia) {this.jTabbedPaneBusquedasParametroFactuSecuencial.remove(jPanelFK_IdTransaccionTransferenciaParametroFactuSecuencial);}
		}
		
	}

	public void setVisibilidadBusquedasParaTransaccionTransferencia(Boolean isParaTransaccionTransferencia){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaTransaccionTransferenciaNegation=!isParaTransaccionTransferencia;

			this.isVisibilidadFK_IdBodega=isParaTransaccionTransferenciaNegation;
			if(!this.isVisibilidadFK_IdBodega) {this.jTabbedPaneBusquedasParametroFactuSecuencial.remove(jPanelFK_IdBodegaParametroFactuSecuencial);}

			this.isVisibilidadFK_IdBodegaTransferencia=isParaTransaccionTransferenciaNegation;
			if(!this.isVisibilidadFK_IdBodegaTransferencia) {this.jTabbedPaneBusquedasParametroFactuSecuencial.remove(jPanelFK_IdBodegaTransferenciaParametroFactuSecuencial);}

			this.isVisibilidadFK_IdFormato=isParaTransaccionTransferenciaNegation;
			if(!this.isVisibilidadFK_IdFormato) {this.jTabbedPaneBusquedasParametroFactuSecuencial.remove(jPanelFK_IdFormatoParametroFactuSecuencial);}

			this.isVisibilidadFK_IdTipoDocumentoGeneral=isParaTransaccionTransferenciaNegation;
			if(!this.isVisibilidadFK_IdTipoDocumentoGeneral) {this.jTabbedPaneBusquedasParametroFactuSecuencial.remove(jPanelFK_IdTipoDocumentoGeneralParametroFactuSecuencial);}

			this.isVisibilidadFK_IdTipoParamFactuPlazo=isParaTransaccionTransferenciaNegation;
			if(!this.isVisibilidadFK_IdTipoParamFactuPlazo) {this.jTabbedPaneBusquedasParametroFactuSecuencial.remove(jPanelFK_IdTipoParamFactuPlazoParametroFactuSecuencial);}

			this.isVisibilidadFK_IdTransaccionTransferencia=isParaTransaccionTransferencia;
			if(!this.isVisibilidadFK_IdTransaccionTransferencia) {this.jTabbedPaneBusquedasParametroFactuSecuencial.remove(jPanelFK_IdTransaccionTransferenciaParametroFactuSecuencial);}
		}
		
	}
	
	
	
	
	
	
	public void guardarDatosBusquedaSession() throws Exception {
		
		//ParametroFactuSecuencialSessionBean parametrofactusecuencialSessionBean=new ParametroFactuSecuencialSessionBean();
		
		if(this.parametrofactusecuencialSessionBean==null) {
			this.parametrofactusecuencialSessionBean=new ParametroFactuSecuencialSessionBean();
		}
		
		this.parametrofactusecuencialSessionBean.setsUltimaBusquedaParametroFactuSecuencial(this.getsAccionBusqueda());
		this.parametrofactusecuencialSessionBean.setiNumeroPaginacion(this.getiNumeroPaginacion());
		this.parametrofactusecuencialSessionBean.setiNumeroPaginacionPagina(this.getiNumeroPaginacionPagina());
		
		if(this.getsAccionBusqueda().equals("Todos")) {
			;
		}
		

		else if(this.getsAccionBusqueda().equals("FK_IdBodega")) {
			parametrofactusecuencialSessionBean.setid_bodega(this.getid_bodegaFK_IdBodega());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdBodegaTransferencia")) {
			parametrofactusecuencialSessionBean.setid_bodega_transferencia(this.getid_bodega_transferenciaFK_IdBodegaTransferencia());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdEmpresa")) {
			parametrofactusecuencialSessionBean.setid_empresa(this.getid_empresaFK_IdEmpresa());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdFormato")) {
			parametrofactusecuencialSessionBean.setid_formato(this.getid_formatoFK_IdFormato());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdSucursal")) {
			parametrofactusecuencialSessionBean.setid_sucursal(this.getid_sucursalFK_IdSucursal());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdTipoDocumentoGeneral")) {
			parametrofactusecuencialSessionBean.setid_tipo_documento_general(this.getid_tipo_documento_generalFK_IdTipoDocumentoGeneral());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdTipoParamFactuPlazo")) {
			parametrofactusecuencialSessionBean.setid_tipo_param_factu_plazo(this.getid_tipo_param_factu_plazoFK_IdTipoParamFactuPlazo());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdTransaccionTransferencia")) {
			parametrofactusecuencialSessionBean.setid_transaccion_transferencia(this.getid_transaccion_transferenciaFK_IdTransaccionTransferencia());	
		}
		
	}
	
	public void traerDatosBusquedaDesdeSession() throws Exception {
		//ParametroFactuSecuencialSessionBean parametrofactusecuencialSessionBean=new ParametroFactuSecuencialSessionBean();
		
		if(this.parametrofactusecuencialSessionBean==null) {
			this.parametrofactusecuencialSessionBean=new ParametroFactuSecuencialSessionBean();
		}
		
		if(this.parametrofactusecuencialSessionBean.getsUltimaBusquedaParametroFactuSecuencial()!=null&&!this.parametrofactusecuencialSessionBean.getsUltimaBusquedaParametroFactuSecuencial().equals("")) {
			this.setsAccionBusqueda(parametrofactusecuencialSessionBean.getsUltimaBusquedaParametroFactuSecuencial());
			this.setiNumeroPaginacion(parametrofactusecuencialSessionBean.getiNumeroPaginacion());
			this.setiNumeroPaginacionPagina(parametrofactusecuencialSessionBean.getiNumeroPaginacionPagina());		
				
			if(this.getsAccionBusqueda().equals("Todos")) {
				;
			}
			

			 else if(this.getsAccionBusqueda().equals("FK_IdBodega")) {
				this.setid_bodegaFK_IdBodega(parametrofactusecuencialSessionBean.getid_bodega());
				parametrofactusecuencialSessionBean.setid_bodega(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdBodegaTransferencia")) {
				this.setid_bodega_transferenciaFK_IdBodegaTransferencia(parametrofactusecuencialSessionBean.getid_bodega_transferencia());
				parametrofactusecuencialSessionBean.setid_bodega_transferencia(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdEmpresa")) {
				this.setid_empresaFK_IdEmpresa(parametrofactusecuencialSessionBean.getid_empresa());
				parametrofactusecuencialSessionBean.setid_empresa(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdFormato")) {
				this.setid_formatoFK_IdFormato(parametrofactusecuencialSessionBean.getid_formato());
				parametrofactusecuencialSessionBean.setid_formato(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdSucursal")) {
				this.setid_sucursalFK_IdSucursal(parametrofactusecuencialSessionBean.getid_sucursal());
				parametrofactusecuencialSessionBean.setid_sucursal(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdTipoDocumentoGeneral")) {
				this.setid_tipo_documento_generalFK_IdTipoDocumentoGeneral(parametrofactusecuencialSessionBean.getid_tipo_documento_general());
				parametrofactusecuencialSessionBean.setid_tipo_documento_general(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdTipoParamFactuPlazo")) {
				this.setid_tipo_param_factu_plazoFK_IdTipoParamFactuPlazo(parametrofactusecuencialSessionBean.getid_tipo_param_factu_plazo());
				parametrofactusecuencialSessionBean.setid_tipo_param_factu_plazo(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdTransaccionTransferencia")) {
				this.setid_transaccion_transferenciaFK_IdTransaccionTransferencia(parametrofactusecuencialSessionBean.getid_transaccion_transferencia());
				parametrofactusecuencialSessionBean.setid_transaccion_transferencia(-1L);
			}
		}
		
		this.parametrofactusecuencialSessionBean.setsUltimaBusquedaParametroFactuSecuencial("");
		this.parametrofactusecuencialSessionBean.setiNumeroPaginacion(ParametroFactuSecuencialConstantesFunciones.INUMEROPAGINACION);
		this.parametrofactusecuencialSessionBean.setiNumeroPaginacionPagina(0);
		
	}
	
	public void procesoActualizarFilaTotales(Boolean esCampoValor,String sTipo) {
		try {
			this.actualizarFilaTotales();
				
			this.traerValoresTablaTotales();
			
			this.inicializarActualizarBindingTablaParametroFactuSecuencial(false);
			
			
			
			
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	
	
	public void updateBusquedasFormularioParametroFactuSecuencial() {
		this.updateBorderResaltarBusquedasFormularioParametroFactuSecuencial();
		this.updateVisibilidadBusquedasFormularioParametroFactuSecuencial();
		this.updateHabilitarBusquedasFormularioParametroFactuSecuencial();
	}
	
	public void updateBorderResaltarBusquedasFormularioParametroFactuSecuencial() {					
	//BYDAN_BUSQUEDAS
		
	int index=0;
		
	if(this.jTabbedPaneBusquedasParametroFactuSecuencial.getComponents().length>0) {
	

		if(this.parametrofactusecuencialConstantesFunciones.resaltarFK_IdBodegaParametroFactuSecuencial!=null) {
			index= this.jTabbedPaneBusquedasParametroFactuSecuencial.indexOfComponent(this.jPanelFK_IdBodegaParametroFactuSecuencial);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuSecuencial.getComponent(index);
				jPanel.setBorder(this.parametrofactusecuencialConstantesFunciones.resaltarFK_IdBodegaParametroFactuSecuencial);
			}
		}

		if(this.parametrofactusecuencialConstantesFunciones.resaltarFK_IdBodegaTransferenciaParametroFactuSecuencial!=null) {
			index= this.jTabbedPaneBusquedasParametroFactuSecuencial.indexOfComponent(this.jPanelFK_IdBodegaTransferenciaParametroFactuSecuencial);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuSecuencial.getComponent(index);
				jPanel.setBorder(this.parametrofactusecuencialConstantesFunciones.resaltarFK_IdBodegaTransferenciaParametroFactuSecuencial);
			}
		}

		if(this.parametrofactusecuencialConstantesFunciones.resaltarFK_IdFormatoParametroFactuSecuencial!=null) {
			index= this.jTabbedPaneBusquedasParametroFactuSecuencial.indexOfComponent(this.jPanelFK_IdFormatoParametroFactuSecuencial);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuSecuencial.getComponent(index);
				jPanel.setBorder(this.parametrofactusecuencialConstantesFunciones.resaltarFK_IdFormatoParametroFactuSecuencial);
			}
		}

		if(this.parametrofactusecuencialConstantesFunciones.resaltarFK_IdTipoDocumentoGeneralParametroFactuSecuencial!=null) {
			index= this.jTabbedPaneBusquedasParametroFactuSecuencial.indexOfComponent(this.jPanelFK_IdTipoDocumentoGeneralParametroFactuSecuencial);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuSecuencial.getComponent(index);
				jPanel.setBorder(this.parametrofactusecuencialConstantesFunciones.resaltarFK_IdTipoDocumentoGeneralParametroFactuSecuencial);
			}
		}

		if(this.parametrofactusecuencialConstantesFunciones.resaltarFK_IdTipoParamFactuPlazoParametroFactuSecuencial!=null) {
			index= this.jTabbedPaneBusquedasParametroFactuSecuencial.indexOfComponent(this.jPanelFK_IdTipoParamFactuPlazoParametroFactuSecuencial);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuSecuencial.getComponent(index);
				jPanel.setBorder(this.parametrofactusecuencialConstantesFunciones.resaltarFK_IdTipoParamFactuPlazoParametroFactuSecuencial);
			}
		}

		if(this.parametrofactusecuencialConstantesFunciones.resaltarFK_IdTransaccionTransferenciaParametroFactuSecuencial!=null) {
			index= this.jTabbedPaneBusquedasParametroFactuSecuencial.indexOfComponent(this.jPanelFK_IdTransaccionTransferenciaParametroFactuSecuencial);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuSecuencial.getComponent(index);
				jPanel.setBorder(this.parametrofactusecuencialConstantesFunciones.resaltarFK_IdTransaccionTransferenciaParametroFactuSecuencial);
			}
		}
	}	
	
	}
	
	public void updateVisibilidadBusquedasFormularioParametroFactuSecuencial() {
	//BYDAN_BUSQUEDAS
	
	int index=0;
	JPanel jPanel=null;
		
	if(this.jTabbedPaneBusquedasParametroFactuSecuencial.getComponents().length>0) {
	

			index= this.jTabbedPaneBusquedasParametroFactuSecuencial.indexOfComponent(this.jPanelFK_IdBodegaParametroFactuSecuencial);
			jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuSecuencial.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.parametrofactusecuencialConstantesFunciones.mostrarFK_IdBodegaParametroFactuSecuencial);
			if(!this.parametrofactusecuencialConstantesFunciones.mostrarFK_IdBodegaParametroFactuSecuencial && index>-1) {
				this.jTabbedPaneBusquedasParametroFactuSecuencial.remove(index);
			}

			index= this.jTabbedPaneBusquedasParametroFactuSecuencial.indexOfComponent(this.jPanelFK_IdBodegaTransferenciaParametroFactuSecuencial);
			jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuSecuencial.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.parametrofactusecuencialConstantesFunciones.mostrarFK_IdBodegaTransferenciaParametroFactuSecuencial);
			if(!this.parametrofactusecuencialConstantesFunciones.mostrarFK_IdBodegaTransferenciaParametroFactuSecuencial && index>-1) {
				this.jTabbedPaneBusquedasParametroFactuSecuencial.remove(index);
			}

			index= this.jTabbedPaneBusquedasParametroFactuSecuencial.indexOfComponent(this.jPanelFK_IdFormatoParametroFactuSecuencial);
			jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuSecuencial.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.parametrofactusecuencialConstantesFunciones.mostrarFK_IdFormatoParametroFactuSecuencial);
			if(!this.parametrofactusecuencialConstantesFunciones.mostrarFK_IdFormatoParametroFactuSecuencial && index>-1) {
				this.jTabbedPaneBusquedasParametroFactuSecuencial.remove(index);
			}

			index= this.jTabbedPaneBusquedasParametroFactuSecuencial.indexOfComponent(this.jPanelFK_IdTipoDocumentoGeneralParametroFactuSecuencial);
			jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuSecuencial.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.parametrofactusecuencialConstantesFunciones.mostrarFK_IdTipoDocumentoGeneralParametroFactuSecuencial);
			if(!this.parametrofactusecuencialConstantesFunciones.mostrarFK_IdTipoDocumentoGeneralParametroFactuSecuencial && index>-1) {
				this.jTabbedPaneBusquedasParametroFactuSecuencial.remove(index);
			}

			index= this.jTabbedPaneBusquedasParametroFactuSecuencial.indexOfComponent(this.jPanelFK_IdTipoParamFactuPlazoParametroFactuSecuencial);
			jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuSecuencial.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.parametrofactusecuencialConstantesFunciones.mostrarFK_IdTipoParamFactuPlazoParametroFactuSecuencial);
			if(!this.parametrofactusecuencialConstantesFunciones.mostrarFK_IdTipoParamFactuPlazoParametroFactuSecuencial && index>-1) {
				this.jTabbedPaneBusquedasParametroFactuSecuencial.remove(index);
			}

			index= this.jTabbedPaneBusquedasParametroFactuSecuencial.indexOfComponent(this.jPanelFK_IdTransaccionTransferenciaParametroFactuSecuencial);
			jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuSecuencial.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.parametrofactusecuencialConstantesFunciones.mostrarFK_IdTransaccionTransferenciaParametroFactuSecuencial);
			if(!this.parametrofactusecuencialConstantesFunciones.mostrarFK_IdTransaccionTransferenciaParametroFactuSecuencial && index>-1) {
				this.jTabbedPaneBusquedasParametroFactuSecuencial.remove(index);
			}
	}	
	
	}
	
	public void updateHabilitarBusquedasFormularioParametroFactuSecuencial() {
	
	//BYDAN_BUSQUEDAS		
		int index=0;
		JPanel jPanel=null;
			
		if(this.jTabbedPaneBusquedasParametroFactuSecuencial.getComponents().length>0) {
	

			index= this.jTabbedPaneBusquedasParametroFactuSecuencial.indexOfComponent(this.jPanelFK_IdBodegaParametroFactuSecuencial);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuSecuencial.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.parametrofactusecuencialConstantesFunciones.activarFK_IdBodegaParametroFactuSecuencial);
				this.jTabbedPaneBusquedasParametroFactuSecuencial.setEnabledAt(index,this.parametrofactusecuencialConstantesFunciones.activarFK_IdBodegaParametroFactuSecuencial);
			}

			index= this.jTabbedPaneBusquedasParametroFactuSecuencial.indexOfComponent(this.jPanelFK_IdBodegaTransferenciaParametroFactuSecuencial);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuSecuencial.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.parametrofactusecuencialConstantesFunciones.activarFK_IdBodegaTransferenciaParametroFactuSecuencial);
				this.jTabbedPaneBusquedasParametroFactuSecuencial.setEnabledAt(index,this.parametrofactusecuencialConstantesFunciones.activarFK_IdBodegaTransferenciaParametroFactuSecuencial);
			}

			index= this.jTabbedPaneBusquedasParametroFactuSecuencial.indexOfComponent(this.jPanelFK_IdFormatoParametroFactuSecuencial);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuSecuencial.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.parametrofactusecuencialConstantesFunciones.activarFK_IdFormatoParametroFactuSecuencial);
				this.jTabbedPaneBusquedasParametroFactuSecuencial.setEnabledAt(index,this.parametrofactusecuencialConstantesFunciones.activarFK_IdFormatoParametroFactuSecuencial);
			}

			index= this.jTabbedPaneBusquedasParametroFactuSecuencial.indexOfComponent(this.jPanelFK_IdTipoDocumentoGeneralParametroFactuSecuencial);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuSecuencial.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.parametrofactusecuencialConstantesFunciones.activarFK_IdTipoDocumentoGeneralParametroFactuSecuencial);
				this.jTabbedPaneBusquedasParametroFactuSecuencial.setEnabledAt(index,this.parametrofactusecuencialConstantesFunciones.activarFK_IdTipoDocumentoGeneralParametroFactuSecuencial);
			}

			index= this.jTabbedPaneBusquedasParametroFactuSecuencial.indexOfComponent(this.jPanelFK_IdTipoParamFactuPlazoParametroFactuSecuencial);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuSecuencial.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.parametrofactusecuencialConstantesFunciones.activarFK_IdTipoParamFactuPlazoParametroFactuSecuencial);
				this.jTabbedPaneBusquedasParametroFactuSecuencial.setEnabledAt(index,this.parametrofactusecuencialConstantesFunciones.activarFK_IdTipoParamFactuPlazoParametroFactuSecuencial);
			}

			index= this.jTabbedPaneBusquedasParametroFactuSecuencial.indexOfComponent(this.jPanelFK_IdTransaccionTransferenciaParametroFactuSecuencial);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuSecuencial.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.parametrofactusecuencialConstantesFunciones.activarFK_IdTransaccionTransferenciaParametroFactuSecuencial);
				this.jTabbedPaneBusquedasParametroFactuSecuencial.setEnabledAt(index,this.parametrofactusecuencialConstantesFunciones.activarFK_IdTransaccionTransferenciaParametroFactuSecuencial);
			}
		}	
	
	}
	
	
	public void resaltarPanelBusquedaParametroFactuSecuencial(String sTipoBusqueda) {
		Boolean existe=false;
		//BYDAN_BUSQUEDAS
		
		int index=0;
		Border resaltar = Funciones2.getBorderResaltar(this.parametroGeneralUsuario,"TAB");

		if(sTipoBusqueda.equals("FK_IdBodega")) {
			index= this.jTabbedPaneBusquedasParametroFactuSecuencial.indexOfComponent(this.jPanelFK_IdBodegaParametroFactuSecuencial);

			this.jTabbedPaneBusquedasParametroFactuSecuencial.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuSecuencial.getComponent(index);

			this.parametrofactusecuencialConstantesFunciones.setResaltarFK_IdBodegaParametroFactuSecuencial(resaltar);

			jPanel.setBorder(this.parametrofactusecuencialConstantesFunciones.resaltarFK_IdBodegaParametroFactuSecuencial);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdBodegaTransferencia")) {
			index= this.jTabbedPaneBusquedasParametroFactuSecuencial.indexOfComponent(this.jPanelFK_IdBodegaTransferenciaParametroFactuSecuencial);

			this.jTabbedPaneBusquedasParametroFactuSecuencial.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuSecuencial.getComponent(index);

			this.parametrofactusecuencialConstantesFunciones.setResaltarFK_IdBodegaTransferenciaParametroFactuSecuencial(resaltar);

			jPanel.setBorder(this.parametrofactusecuencialConstantesFunciones.resaltarFK_IdBodegaTransferenciaParametroFactuSecuencial);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdFormato")) {
			index= this.jTabbedPaneBusquedasParametroFactuSecuencial.indexOfComponent(this.jPanelFK_IdFormatoParametroFactuSecuencial);

			this.jTabbedPaneBusquedasParametroFactuSecuencial.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuSecuencial.getComponent(index);

			this.parametrofactusecuencialConstantesFunciones.setResaltarFK_IdFormatoParametroFactuSecuencial(resaltar);

			jPanel.setBorder(this.parametrofactusecuencialConstantesFunciones.resaltarFK_IdFormatoParametroFactuSecuencial);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdTipoDocumentoGeneral")) {
			index= this.jTabbedPaneBusquedasParametroFactuSecuencial.indexOfComponent(this.jPanelFK_IdTipoDocumentoGeneralParametroFactuSecuencial);

			this.jTabbedPaneBusquedasParametroFactuSecuencial.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuSecuencial.getComponent(index);

			this.parametrofactusecuencialConstantesFunciones.setResaltarFK_IdTipoDocumentoGeneralParametroFactuSecuencial(resaltar);

			jPanel.setBorder(this.parametrofactusecuencialConstantesFunciones.resaltarFK_IdTipoDocumentoGeneralParametroFactuSecuencial);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdTipoParamFactuPlazo")) {
			index= this.jTabbedPaneBusquedasParametroFactuSecuencial.indexOfComponent(this.jPanelFK_IdTipoParamFactuPlazoParametroFactuSecuencial);

			this.jTabbedPaneBusquedasParametroFactuSecuencial.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuSecuencial.getComponent(index);

			this.parametrofactusecuencialConstantesFunciones.setResaltarFK_IdTipoParamFactuPlazoParametroFactuSecuencial(resaltar);

			jPanel.setBorder(this.parametrofactusecuencialConstantesFunciones.resaltarFK_IdTipoParamFactuPlazoParametroFactuSecuencial);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdTransaccionTransferencia")) {
			index= this.jTabbedPaneBusquedasParametroFactuSecuencial.indexOfComponent(this.jPanelFK_IdTransaccionTransferenciaParametroFactuSecuencial);

			this.jTabbedPaneBusquedasParametroFactuSecuencial.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuSecuencial.getComponent(index);

			this.parametrofactusecuencialConstantesFunciones.setResaltarFK_IdTransaccionTransferenciaParametroFactuSecuencial(resaltar);

			jPanel.setBorder(this.parametrofactusecuencialConstantesFunciones.resaltarFK_IdTransaccionTransferenciaParametroFactuSecuencial);
			existe=true;
		}
		

		if(existe) {
			
			this.jTtoolBarParametroFactuSecuencial.setBorder(resaltar);
			
		}
	}	
	
	//NO FUNCIONA
	public void windowClosed(WindowEvent e) {	
	}
		
	public void windowClosing(WindowEvent e) {	    	    
	}

	public void windowOpened(WindowEvent e) {	    
	}

	public void windowIconified(WindowEvent e) {	    
	}

	public void windowDeiconified(WindowEvent e) {	    
	}

	public void windowActivated(WindowEvent e) {	    
	}

	public void windowDeactivated(WindowEvent e) {	    
	}

	public void windowGainedFocus(WindowEvent e) {	    
	}

	public void windowLostFocus(WindowEvent e) {	    
	}
	
	public void updateControlesFormularioParametroFactuSecuencial() throws Exception {

		if(this.jInternalFrameDetalleFormParametroFactuSecuencial==null) { //if(!this.conCargarFormDetalle) {			
			this.inicializarFormDetalle();
		}
		
		this.updateBorderResaltarControlesFormularioParametroFactuSecuencial();
		this.updateVisibilidadResaltarControlesFormularioParametroFactuSecuencial();
		this.updateHabilitarResaltarControlesFormularioParametroFactuSecuencial();
		
	}
	
	public void updateBorderResaltarControlesFormularioParametroFactuSecuencial() throws Exception {
		if(this.jInternalFrameDetalleFormParametroFactuSecuencial==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
	
		if(this.parametrofactusecuencialConstantesFunciones.resaltaridParametroFactuSecuencial!=null && this.jInternalFrameDetalleFormParametroFactuSecuencial!=null) {this.jInternalFrameDetalleFormParametroFactuSecuencial.jLabelidParametroFactuSecuencial.setBorder(this.parametrofactusecuencialConstantesFunciones.resaltaridParametroFactuSecuencial);}
		if(this.parametrofactusecuencialConstantesFunciones.resaltarid_empresaParametroFactuSecuencial!=null && this.jInternalFrameDetalleFormParametroFactuSecuencial!=null) {this.jInternalFrameDetalleFormParametroFactuSecuencial.jComboBoxid_empresaParametroFactuSecuencial.setBorder(this.parametrofactusecuencialConstantesFunciones.resaltarid_empresaParametroFactuSecuencial);}
		if(this.parametrofactusecuencialConstantesFunciones.resaltarid_sucursalParametroFactuSecuencial!=null && this.jInternalFrameDetalleFormParametroFactuSecuencial!=null) {this.jInternalFrameDetalleFormParametroFactuSecuencial.jComboBoxid_sucursalParametroFactuSecuencial.setBorder(this.parametrofactusecuencialConstantesFunciones.resaltarid_sucursalParametroFactuSecuencial);}
		if(this.parametrofactusecuencialConstantesFunciones.resaltarid_tipo_documento_generalParametroFactuSecuencial!=null && this.jInternalFrameDetalleFormParametroFactuSecuencial!=null) {this.jInternalFrameDetalleFormParametroFactuSecuencial.jComboBoxid_tipo_documento_generalParametroFactuSecuencial.setBorder(this.parametrofactusecuencialConstantesFunciones.resaltarid_tipo_documento_generalParametroFactuSecuencial);}
		if(this.parametrofactusecuencialConstantesFunciones.resaltarsecuencialParametroFactuSecuencial!=null && this.jInternalFrameDetalleFormParametroFactuSecuencial!=null) {this.jInternalFrameDetalleFormParametroFactuSecuencial.jTextFieldsecuencialParametroFactuSecuencial.setBorder(this.parametrofactusecuencialConstantesFunciones.resaltarsecuencialParametroFactuSecuencial);}
		if(this.parametrofactusecuencialConstantesFunciones.resaltarnumero_digitosParametroFactuSecuencial!=null && this.jInternalFrameDetalleFormParametroFactuSecuencial!=null) {this.jInternalFrameDetalleFormParametroFactuSecuencial.jTextFieldnumero_digitosParametroFactuSecuencial.setBorder(this.parametrofactusecuencialConstantesFunciones.resaltarnumero_digitosParametroFactuSecuencial);}
		if(this.parametrofactusecuencialConstantesFunciones.resaltarnumero_itemsParametroFactuSecuencial!=null && this.jInternalFrameDetalleFormParametroFactuSecuencial!=null) {this.jInternalFrameDetalleFormParametroFactuSecuencial.jTextFieldnumero_itemsParametroFactuSecuencial.setBorder(this.parametrofactusecuencialConstantesFunciones.resaltarnumero_itemsParametroFactuSecuencial);}
		if(this.parametrofactusecuencialConstantesFunciones.resaltarnumero_descuentoParametroFactuSecuencial!=null && this.jInternalFrameDetalleFormParametroFactuSecuencial!=null) {this.jInternalFrameDetalleFormParametroFactuSecuencial.jTextFieldnumero_descuentoParametroFactuSecuencial.setBorder(this.parametrofactusecuencialConstantesFunciones.resaltarnumero_descuentoParametroFactuSecuencial);}
		if(this.parametrofactusecuencialConstantesFunciones.resaltarnumero_adiicionalesParametroFactuSecuencial!=null && this.jInternalFrameDetalleFormParametroFactuSecuencial!=null) {this.jInternalFrameDetalleFormParametroFactuSecuencial.jTextFieldnumero_adiicionalesParametroFactuSecuencial.setBorder(this.parametrofactusecuencialConstantesFunciones.resaltarnumero_adiicionalesParametroFactuSecuencial);}
		if(this.parametrofactusecuencialConstantesFunciones.resaltarnumero_digito_inicioParametroFactuSecuencial!=null && this.jInternalFrameDetalleFormParametroFactuSecuencial!=null) {this.jInternalFrameDetalleFormParametroFactuSecuencial.jTextFieldnumero_digito_inicioParametroFactuSecuencial.setBorder(this.parametrofactusecuencialConstantesFunciones.resaltarnumero_digito_inicioParametroFactuSecuencial);}
		if(this.parametrofactusecuencialConstantesFunciones.resaltarnumero_digito_finParametroFactuSecuencial!=null && this.jInternalFrameDetalleFormParametroFactuSecuencial!=null) {this.jInternalFrameDetalleFormParametroFactuSecuencial.jTextFieldnumero_digito_finParametroFactuSecuencial.setBorder(this.parametrofactusecuencialConstantesFunciones.resaltarnumero_digito_finParametroFactuSecuencial);}
		if(this.parametrofactusecuencialConstantesFunciones.resaltarnumero_dias_plazoParametroFactuSecuencial!=null && this.jInternalFrameDetalleFormParametroFactuSecuencial!=null) {this.jInternalFrameDetalleFormParametroFactuSecuencial.jTextFieldnumero_dias_plazoParametroFactuSecuencial.setBorder(this.parametrofactusecuencialConstantesFunciones.resaltarnumero_dias_plazoParametroFactuSecuencial);}
		if(this.parametrofactusecuencialConstantesFunciones.resaltarcon_detalleParametroFactuSecuencial!=null && this.jInternalFrameDetalleFormParametroFactuSecuencial!=null) {this.jInternalFrameDetalleFormParametroFactuSecuencial.jCheckBoxcon_detalleParametroFactuSecuencial.setBorderPainted(true);this.jInternalFrameDetalleFormParametroFactuSecuencial.jCheckBoxcon_detalleParametroFactuSecuencial.setBorder(this.parametrofactusecuencialConstantesFunciones.resaltarcon_detalleParametroFactuSecuencial);}
		if(this.parametrofactusecuencialConstantesFunciones.resaltarcon_lectorParametroFactuSecuencial!=null && this.jInternalFrameDetalleFormParametroFactuSecuencial!=null) {this.jInternalFrameDetalleFormParametroFactuSecuencial.jCheckBoxcon_lectorParametroFactuSecuencial.setBorderPainted(true);this.jInternalFrameDetalleFormParametroFactuSecuencial.jCheckBoxcon_lectorParametroFactuSecuencial.setBorder(this.parametrofactusecuencialConstantesFunciones.resaltarcon_lectorParametroFactuSecuencial);}
		if(this.parametrofactusecuencialConstantesFunciones.resaltarid_bodegaParametroFactuSecuencial!=null && this.jInternalFrameDetalleFormParametroFactuSecuencial!=null) {this.jInternalFrameDetalleFormParametroFactuSecuencial.jComboBoxid_bodegaParametroFactuSecuencial.setBorder(this.parametrofactusecuencialConstantesFunciones.resaltarid_bodegaParametroFactuSecuencial);}
		if(this.parametrofactusecuencialConstantesFunciones.resaltarid_tipo_param_factu_plazoParametroFactuSecuencial!=null && this.jInternalFrameDetalleFormParametroFactuSecuencial!=null) {this.jInternalFrameDetalleFormParametroFactuSecuencial.jComboBoxid_tipo_param_factu_plazoParametroFactuSecuencial.setBorder(this.parametrofactusecuencialConstantesFunciones.resaltarid_tipo_param_factu_plazoParametroFactuSecuencial);}
		if(this.parametrofactusecuencialConstantesFunciones.resaltarid_formatoParametroFactuSecuencial!=null && this.jInternalFrameDetalleFormParametroFactuSecuencial!=null) {this.jInternalFrameDetalleFormParametroFactuSecuencial.jComboBoxid_formatoParametroFactuSecuencial.setBorder(this.parametrofactusecuencialConstantesFunciones.resaltarid_formatoParametroFactuSecuencial);}
		if(this.parametrofactusecuencialConstantesFunciones.resaltarcon_transferenciaParametroFactuSecuencial!=null && this.jInternalFrameDetalleFormParametroFactuSecuencial!=null) {this.jInternalFrameDetalleFormParametroFactuSecuencial.jCheckBoxcon_transferenciaParametroFactuSecuencial.setBorderPainted(true);this.jInternalFrameDetalleFormParametroFactuSecuencial.jCheckBoxcon_transferenciaParametroFactuSecuencial.setBorder(this.parametrofactusecuencialConstantesFunciones.resaltarcon_transferenciaParametroFactuSecuencial);}
		if(this.parametrofactusecuencialConstantesFunciones.resaltarid_bodega_transferenciaParametroFactuSecuencial!=null && this.jInternalFrameDetalleFormParametroFactuSecuencial!=null) {this.jInternalFrameDetalleFormParametroFactuSecuencial.jComboBoxid_bodega_transferenciaParametroFactuSecuencial.setBorder(this.parametrofactusecuencialConstantesFunciones.resaltarid_bodega_transferenciaParametroFactuSecuencial);}
		if(this.parametrofactusecuencialConstantesFunciones.resaltarid_transaccion_transferenciaParametroFactuSecuencial!=null && this.jInternalFrameDetalleFormParametroFactuSecuencial!=null) {this.jInternalFrameDetalleFormParametroFactuSecuencial.jComboBoxid_transaccion_transferenciaParametroFactuSecuencial.setBorder(this.parametrofactusecuencialConstantesFunciones.resaltarid_transaccion_transferenciaParametroFactuSecuencial);}
	}
	
	public void updateVisibilidadResaltarControlesFormularioParametroFactuSecuencial() throws Exception {		
		if(this.jInternalFrameDetalleFormParametroFactuSecuencial==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
		if(this.jInternalFrameDetalleFormParametroFactuSecuencial!=null) {
	
		//this.jInternalFrameDetalleFormParametroFactuSecuencial.jLabelidParametroFactuSecuencial.setVisible(this.parametrofactusecuencialConstantesFunciones.mostraridParametroFactuSecuencial);
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jPanelidParametroFactuSecuencial.setVisible(this.parametrofactusecuencialConstantesFunciones.mostraridParametroFactuSecuencial);
		//this.jInternalFrameDetalleFormParametroFactuSecuencial.jComboBoxid_empresaParametroFactuSecuencial.setVisible(this.parametrofactusecuencialConstantesFunciones.mostrarid_empresaParametroFactuSecuencial);
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jPanelid_empresaParametroFactuSecuencial.setVisible(this.parametrofactusecuencialConstantesFunciones.mostrarid_empresaParametroFactuSecuencial);
		//this.jInternalFrameDetalleFormParametroFactuSecuencial.jComboBoxid_sucursalParametroFactuSecuencial.setVisible(this.parametrofactusecuencialConstantesFunciones.mostrarid_sucursalParametroFactuSecuencial);
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jPanelid_sucursalParametroFactuSecuencial.setVisible(this.parametrofactusecuencialConstantesFunciones.mostrarid_sucursalParametroFactuSecuencial);
		//this.jInternalFrameDetalleFormParametroFactuSecuencial.jComboBoxid_tipo_documento_generalParametroFactuSecuencial.setVisible(this.parametrofactusecuencialConstantesFunciones.mostrarid_tipo_documento_generalParametroFactuSecuencial);
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jPanelid_tipo_documento_generalParametroFactuSecuencial.setVisible(this.parametrofactusecuencialConstantesFunciones.mostrarid_tipo_documento_generalParametroFactuSecuencial);
		//this.jInternalFrameDetalleFormParametroFactuSecuencial.jTextFieldsecuencialParametroFactuSecuencial.setVisible(this.parametrofactusecuencialConstantesFunciones.mostrarsecuencialParametroFactuSecuencial);
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jPanelsecuencialParametroFactuSecuencial.setVisible(this.parametrofactusecuencialConstantesFunciones.mostrarsecuencialParametroFactuSecuencial);
		//this.jInternalFrameDetalleFormParametroFactuSecuencial.jTextFieldnumero_digitosParametroFactuSecuencial.setVisible(this.parametrofactusecuencialConstantesFunciones.mostrarnumero_digitosParametroFactuSecuencial);
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jPanelnumero_digitosParametroFactuSecuencial.setVisible(this.parametrofactusecuencialConstantesFunciones.mostrarnumero_digitosParametroFactuSecuencial);
		//this.jInternalFrameDetalleFormParametroFactuSecuencial.jTextFieldnumero_itemsParametroFactuSecuencial.setVisible(this.parametrofactusecuencialConstantesFunciones.mostrarnumero_itemsParametroFactuSecuencial);
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jPanelnumero_itemsParametroFactuSecuencial.setVisible(this.parametrofactusecuencialConstantesFunciones.mostrarnumero_itemsParametroFactuSecuencial);
		//this.jInternalFrameDetalleFormParametroFactuSecuencial.jTextFieldnumero_descuentoParametroFactuSecuencial.setVisible(this.parametrofactusecuencialConstantesFunciones.mostrarnumero_descuentoParametroFactuSecuencial);
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jPanelnumero_descuentoParametroFactuSecuencial.setVisible(this.parametrofactusecuencialConstantesFunciones.mostrarnumero_descuentoParametroFactuSecuencial);
		//this.jInternalFrameDetalleFormParametroFactuSecuencial.jTextFieldnumero_adiicionalesParametroFactuSecuencial.setVisible(this.parametrofactusecuencialConstantesFunciones.mostrarnumero_adiicionalesParametroFactuSecuencial);
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jPanelnumero_adiicionalesParametroFactuSecuencial.setVisible(this.parametrofactusecuencialConstantesFunciones.mostrarnumero_adiicionalesParametroFactuSecuencial);
		//this.jInternalFrameDetalleFormParametroFactuSecuencial.jTextFieldnumero_digito_inicioParametroFactuSecuencial.setVisible(this.parametrofactusecuencialConstantesFunciones.mostrarnumero_digito_inicioParametroFactuSecuencial);
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jPanelnumero_digito_inicioParametroFactuSecuencial.setVisible(this.parametrofactusecuencialConstantesFunciones.mostrarnumero_digito_inicioParametroFactuSecuencial);
		//this.jInternalFrameDetalleFormParametroFactuSecuencial.jTextFieldnumero_digito_finParametroFactuSecuencial.setVisible(this.parametrofactusecuencialConstantesFunciones.mostrarnumero_digito_finParametroFactuSecuencial);
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jPanelnumero_digito_finParametroFactuSecuencial.setVisible(this.parametrofactusecuencialConstantesFunciones.mostrarnumero_digito_finParametroFactuSecuencial);
		//this.jInternalFrameDetalleFormParametroFactuSecuencial.jTextFieldnumero_dias_plazoParametroFactuSecuencial.setVisible(this.parametrofactusecuencialConstantesFunciones.mostrarnumero_dias_plazoParametroFactuSecuencial);
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jPanelnumero_dias_plazoParametroFactuSecuencial.setVisible(this.parametrofactusecuencialConstantesFunciones.mostrarnumero_dias_plazoParametroFactuSecuencial);
		//this.jInternalFrameDetalleFormParametroFactuSecuencial.jCheckBoxcon_detalleParametroFactuSecuencial.setVisible(this.parametrofactusecuencialConstantesFunciones.mostrarcon_detalleParametroFactuSecuencial);
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jPanelcon_detalleParametroFactuSecuencial.setVisible(this.parametrofactusecuencialConstantesFunciones.mostrarcon_detalleParametroFactuSecuencial);
		//this.jInternalFrameDetalleFormParametroFactuSecuencial.jCheckBoxcon_lectorParametroFactuSecuencial.setVisible(this.parametrofactusecuencialConstantesFunciones.mostrarcon_lectorParametroFactuSecuencial);
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jPanelcon_lectorParametroFactuSecuencial.setVisible(this.parametrofactusecuencialConstantesFunciones.mostrarcon_lectorParametroFactuSecuencial);
		//this.jInternalFrameDetalleFormParametroFactuSecuencial.jComboBoxid_bodegaParametroFactuSecuencial.setVisible(this.parametrofactusecuencialConstantesFunciones.mostrarid_bodegaParametroFactuSecuencial);
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jPanelid_bodegaParametroFactuSecuencial.setVisible(this.parametrofactusecuencialConstantesFunciones.mostrarid_bodegaParametroFactuSecuencial);
		//this.jInternalFrameDetalleFormParametroFactuSecuencial.jComboBoxid_tipo_param_factu_plazoParametroFactuSecuencial.setVisible(this.parametrofactusecuencialConstantesFunciones.mostrarid_tipo_param_factu_plazoParametroFactuSecuencial);
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jPanelid_tipo_param_factu_plazoParametroFactuSecuencial.setVisible(this.parametrofactusecuencialConstantesFunciones.mostrarid_tipo_param_factu_plazoParametroFactuSecuencial);
		//this.jInternalFrameDetalleFormParametroFactuSecuencial.jComboBoxid_formatoParametroFactuSecuencial.setVisible(this.parametrofactusecuencialConstantesFunciones.mostrarid_formatoParametroFactuSecuencial);
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jPanelid_formatoParametroFactuSecuencial.setVisible(this.parametrofactusecuencialConstantesFunciones.mostrarid_formatoParametroFactuSecuencial);
		//this.jInternalFrameDetalleFormParametroFactuSecuencial.jCheckBoxcon_transferenciaParametroFactuSecuencial.setVisible(this.parametrofactusecuencialConstantesFunciones.mostrarcon_transferenciaParametroFactuSecuencial);
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jPanelcon_transferenciaParametroFactuSecuencial.setVisible(this.parametrofactusecuencialConstantesFunciones.mostrarcon_transferenciaParametroFactuSecuencial);
		//this.jInternalFrameDetalleFormParametroFactuSecuencial.jComboBoxid_bodega_transferenciaParametroFactuSecuencial.setVisible(this.parametrofactusecuencialConstantesFunciones.mostrarid_bodega_transferenciaParametroFactuSecuencial);
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jPanelid_bodega_transferenciaParametroFactuSecuencial.setVisible(this.parametrofactusecuencialConstantesFunciones.mostrarid_bodega_transferenciaParametroFactuSecuencial);
		//this.jInternalFrameDetalleFormParametroFactuSecuencial.jComboBoxid_transaccion_transferenciaParametroFactuSecuencial.setVisible(this.parametrofactusecuencialConstantesFunciones.mostrarid_transaccion_transferenciaParametroFactuSecuencial);
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jPanelid_transaccion_transferenciaParametroFactuSecuencial.setVisible(this.parametrofactusecuencialConstantesFunciones.mostrarid_transaccion_transferenciaParametroFactuSecuencial);
		}
	}
	
	public void updateHabilitarResaltarControlesFormularioParametroFactuSecuencial() throws Exception {
		if(this.jInternalFrameDetalleFormParametroFactuSecuencial==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
		if(this.jInternalFrameDetalleFormParametroFactuSecuencial!=null) {
	
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jLabelidParametroFactuSecuencial.setEnabled(this.parametrofactusecuencialConstantesFunciones.activaridParametroFactuSecuencial);
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jComboBoxid_empresaParametroFactuSecuencial.setEnabled(this.parametrofactusecuencialConstantesFunciones.activarid_empresaParametroFactuSecuencial);
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jComboBoxid_sucursalParametroFactuSecuencial.setEnabled(this.parametrofactusecuencialConstantesFunciones.activarid_sucursalParametroFactuSecuencial);
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jComboBoxid_tipo_documento_generalParametroFactuSecuencial.setEnabled(this.parametrofactusecuencialConstantesFunciones.activarid_tipo_documento_generalParametroFactuSecuencial);
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jTextFieldsecuencialParametroFactuSecuencial.setEnabled(this.parametrofactusecuencialConstantesFunciones.activarsecuencialParametroFactuSecuencial);
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jTextFieldnumero_digitosParametroFactuSecuencial.setEnabled(this.parametrofactusecuencialConstantesFunciones.activarnumero_digitosParametroFactuSecuencial);
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jTextFieldnumero_itemsParametroFactuSecuencial.setEnabled(this.parametrofactusecuencialConstantesFunciones.activarnumero_itemsParametroFactuSecuencial);
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jTextFieldnumero_descuentoParametroFactuSecuencial.setEnabled(this.parametrofactusecuencialConstantesFunciones.activarnumero_descuentoParametroFactuSecuencial);
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jTextFieldnumero_adiicionalesParametroFactuSecuencial.setEnabled(this.parametrofactusecuencialConstantesFunciones.activarnumero_adiicionalesParametroFactuSecuencial);
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jTextFieldnumero_digito_inicioParametroFactuSecuencial.setEnabled(this.parametrofactusecuencialConstantesFunciones.activarnumero_digito_inicioParametroFactuSecuencial);
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jTextFieldnumero_digito_finParametroFactuSecuencial.setEnabled(this.parametrofactusecuencialConstantesFunciones.activarnumero_digito_finParametroFactuSecuencial);
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jTextFieldnumero_dias_plazoParametroFactuSecuencial.setEnabled(this.parametrofactusecuencialConstantesFunciones.activarnumero_dias_plazoParametroFactuSecuencial);
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jCheckBoxcon_detalleParametroFactuSecuencial.setEnabled(this.parametrofactusecuencialConstantesFunciones.activarcon_detalleParametroFactuSecuencial);
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jCheckBoxcon_lectorParametroFactuSecuencial.setEnabled(this.parametrofactusecuencialConstantesFunciones.activarcon_lectorParametroFactuSecuencial);
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jComboBoxid_bodegaParametroFactuSecuencial.setEnabled(this.parametrofactusecuencialConstantesFunciones.activarid_bodegaParametroFactuSecuencial);
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jComboBoxid_tipo_param_factu_plazoParametroFactuSecuencial.setEnabled(this.parametrofactusecuencialConstantesFunciones.activarid_tipo_param_factu_plazoParametroFactuSecuencial);
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jComboBoxid_formatoParametroFactuSecuencial.setEnabled(this.parametrofactusecuencialConstantesFunciones.activarid_formatoParametroFactuSecuencial);
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jCheckBoxcon_transferenciaParametroFactuSecuencial.setEnabled(this.parametrofactusecuencialConstantesFunciones.activarcon_transferenciaParametroFactuSecuencial);
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jComboBoxid_bodega_transferenciaParametroFactuSecuencial.setEnabled(this.parametrofactusecuencialConstantesFunciones.activarid_bodega_transferenciaParametroFactuSecuencial);
		this.jInternalFrameDetalleFormParametroFactuSecuencial.jComboBoxid_transaccion_transferenciaParametroFactuSecuencial.setEnabled(this.parametrofactusecuencialConstantesFunciones.activarid_transaccion_transferenciaParametroFactuSecuencial);
		}
	}
	
		
}