/*
*AVISO LEGAL
Â© Copyright
*Este programa esta protegido por la ley de derechos de autor.
*La reproduccion o distribucion ilicita de este programa o de cualquiera de
*sus partes esta penado por la ley con severas sanciones civiles y penales,
*y seran objeto de todas las sanciones legales que correspondan.

*Su contenido no puede copiarse para fines comerciales o de otras,
*ni puede mostrarse, incluso en una version modificada, en otros sitios Web.
Solo esta permitido colocar hipervinculos al sitio web.
*/
package com.bydan.erp.facturacion.presentation.swing.jinternalframes;




import com.bydan.erp.seguridad.business.entity.Usuario;
import com.bydan.erp.seguridad.business.entity.ResumenUsuario;
import com.bydan.erp.seguridad.business.entity.Opcion;
import com.bydan.erp.seguridad.business.entity.PerfilOpcion;
import com.bydan.erp.seguridad.business.entity.PerfilCampo;
import com.bydan.erp.seguridad.business.entity.PerfilAccion;
import com.bydan.erp.seguridad.business.entity.ParametroGeneralSg;
import com.bydan.erp.seguridad.business.entity.ParametroGeneralUsuario;
import com.bydan.erp.seguridad.business.entity.Modulo;
import com.bydan.erp.seguridad.business.entity.Accion;

import com.bydan.erp.seguridad.util.SistemaParameterReturnGeneralAdditional;
import com.bydan.erp.seguridad.util.SistemaParameterReturnGeneral;


//import com.bydan.erp.seguridad.business.entity.PerfilAccion;


import com.bydan.erp.seguridad.util.SistemaConstantesFunciones;
import com.bydan.erp.seguridad.util.SistemaConstantesFuncionesAdditional;
import com.bydan.erp.seguridad.business.logic.SistemaLogicAdditional;

import com.bydan.erp.facturacion.util.TipoFormaPagoConstantesFunciones;
import com.bydan.erp.facturacion.util.TipoFormaPagoParameterReturnGeneral;
//import com.bydan.erp.facturacion.util.TipoFormaPagoParameterGeneral;
//import com.bydan.erp.facturacion.presentation.report.source.TipoFormaPagoBean;
import com.bydan.framework.erp.business.dataaccess.ConstantesSql;
import com.bydan.framework.erp.business.entity.Classe;
import com.bydan.framework.erp.business.entity.DatoGeneral;
import com.bydan.framework.erp.business.entity.GeneralEntityParameterGeneral;
import com.bydan.framework.erp.business.entity.OrderBy;
import com.bydan.framework.erp.business.entity.DatoGeneralMinimo;
import com.bydan.framework.erp.business.entity.GeneralEntity;
import com.bydan.framework.erp.business.entity.Mensajes;
import com.bydan.framework.erp.business.entity.GeneralEntityParameterReturnGeneral;
//import com.bydan.framework.erp.business.entity.MaintenanceType;
import com.bydan.framework.erp.util.MaintenanceType;
import com.bydan.framework.erp.util.FuncionesReporte;
import com.bydan.framework.erp.business.logic.DatosCliente;
import com.bydan.framework.erp.business.logic.Pagination;

import com.bydan.erp.facturacion.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.framework.erp.presentation.desktop.swing.TablaGeneralTotalModel;
import com.bydan.framework.erp.presentation.desktop.swing.TablaGeneralOrderByModel;
import com.bydan.framework.erp.presentation.desktop.swing.DateConverter;
import com.bydan.framework.erp.presentation.desktop.swing.DateConverterFromDate;
import com.bydan.framework.erp.presentation.desktop.swing.DateRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.DateEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.BooleanRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.BooleanEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.TextFieldRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.RunnableProceso;
import com.bydan.framework.erp.presentation.desktop.swing.*;
//import com.bydan.framework.erp.presentation.desktop.swing.TextFieldEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.HeaderRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.JInternalFrameBase;
import com.bydan.framework.erp.presentation.desktop.swing.FuncionesSwing;
import com.bydan.framework.erp.presentation.desktop.swing.MainJFrame;
import com.bydan.framework.erp.resources.imagenes.AuxiliarImagenes;
import com.bydan.erp.facturacion.resources.reportes.AuxiliarReportes;


import com.bydan.erp.facturacion.util.*;
import com.bydan.erp.facturacion.business.logic.*;

import com.bydan.erp.seguridad.business.logic.*;
import com.bydan.erp.contabilidad.business.logic.*;
import com.bydan.erp.tesoreria.business.logic.*;
import com.bydan.erp.puntoventa.business.logic.*;
import com.bydan.erp.facturacion.business.logic.*;
import com.bydan.erp.inventario.business.logic.*;

//EJB

//PARAMETROS


//EJB PARAMETROS

import com.bydan.framework.erp.business.logic.*;
import com.bydan.framework.erp.util.*;

import com.bydan.erp.facturacion.business.entity.*;
//import com.bydan.framework.erp.business.entity.ConexionBeanFace;
//import com.bydan.framework.erp.business.entity.Mensajes;


import com.bydan.erp.seguridad.presentation.swing.jinternalframes.*;
import com.bydan.erp.contabilidad.presentation.swing.jinternalframes.*;
import com.bydan.erp.tesoreria.presentation.swing.jinternalframes.*;
import com.bydan.erp.puntoventa.presentation.swing.jinternalframes.*;
import com.bydan.erp.facturacion.presentation.swing.jinternalframes.*;
import com.bydan.erp.inventario.presentation.swing.jinternalframes.*;

import com.bydan.erp.seguridad.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.contabilidad.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.tesoreria.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.puntoventa.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.facturacion.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.inventario.presentation.swing.jinternalframes.auxiliar.*;






import javax.imageio.ImageIO;
import java.net.NetworkInterface;
import java.net.InterfaceAddress;
import java.net.InetAddress;
import javax.naming.InitialContext;
import java.lang.Long;
import java.util.Date;
import java.util.Enumeration;
import java.util.Iterator;
import java.util.Set;
import java.util.HashSet;
import java.util.List;
import java.util.ArrayList;
import java.io.Serializable;
import java.util.Hashtable;
import java.util.Collections;
import java.io.File;
import java.io.FileInputStream;
import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.io.BufferedReader;
import java.io.FileReader;
import java.util.HashMap;
import java.util.Map;
import java.io.PrintWriter;
import java.sql.SQLException;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.transform.stream.StreamSource;

import org.xml.sax.EntityResolver;
import org.xml.sax.InputSource;
import org.xml.sax.SAXException;

import org.w3c.dom.Document;
import org.w3c.dom.Document;
import org.w3c.dom.NodeList;
import org.w3c.dom.Node;
import org.w3c.dom.Element;

import org.apache.poi.hssf.usermodel.HSSFCell;
import org.apache.poi.hssf.usermodel.HSSFRow;
import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellStyle;
import org.apache.poi.ss.usermodel.IndexedColors;
import org.apache.poi.ss.util.CellRangeAddress;

import javax.xml.transform.Transformer;
import javax.xml.transform.TransformerFactory;
import javax.xml.transform.dom.DOMSource;
import javax.xml.transform.stream.StreamResult;


import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JRRuntimeException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.engine.export.JRHtmlExporter;
import net.sf.jasperreports.j2ee.servlets.BaseHttpServlet;
import net.sf.jasperreports.engine.JRExporterParameter;
import net.sf.jasperreports.engine.data.JRBeanArrayDataSource;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import net.sf.jasperreports.view.JasperViewer;

import org.apache.log4j.Logger;

import com.bydan.framework.erp.business.entity.Reporte;


//VALIDACION
import org.hibernate.validator.ClassValidator;
import org.hibernate.validator.InvalidValue;

import net.sf.jasperreports.engine.JREmptyDataSource;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperExportManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperPrintManager;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.JasperRunManager;
import net.sf.jasperreports.engine.export.JExcelApiExporter;
import net.sf.jasperreports.engine.export.JRCsvExporter;
import net.sf.jasperreports.engine.export.JRRtfExporter;
import net.sf.jasperreports.engine.export.JRXlsExporter;
import net.sf.jasperreports.engine.export.JRXlsExporterParameter;
import net.sf.jasperreports.engine.util.JRSaver;
import net.sf.jasperreports.engine.xml.JRXmlWriter;


import com.bydan.erp.facturacion.presentation.web.jsf.sessionbean.*;

import java.util.EventObject;
import javax.swing.*;
import javax.swing.border.Border;
import javax.swing.border.TitledBorder;
import javax.swing.border.EmptyBorder;
import javax.swing.event.*;
import javax.swing.table.AbstractTableModel;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.TableColumn;
import javax.swing.table.TableCellEditor;
import javax.swing.table.TableCellRenderer;
import java.awt.*;
import java.awt.event.*;

import org.jdesktop.beansbinding.Binding.SyncFailure;
import org.jdesktop.beansbinding.BindingListener;
import org.jdesktop.beansbinding.Bindings;
import org.jdesktop.beansbinding.BeanProperty;
import org.jdesktop.beansbinding.ELProperty;
import org.jdesktop.beansbinding.AutoBinding.UpdateStrategy;
import org.jdesktop.beansbinding.PropertyStateEvent;
import org.jdesktop.swingbinding.JComboBoxBinding;
import org.jdesktop.swingbinding.SwingBindings;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeEvent;

import com.toedter.calendar.JDateChooser;


import com.bydan.erp.seguridad.business.entity.*;
import com.bydan.erp.contabilidad.business.entity.*;
import com.bydan.erp.tesoreria.business.entity.*;
import com.bydan.erp.puntoventa.business.entity.*;
import com.bydan.erp.facturacion.business.entity.*;
import com.bydan.erp.inventario.business.entity.*;
import com.bydan.erp.seguridad.util.*;
import com.bydan.erp.contabilidad.util.*;
import com.bydan.erp.tesoreria.util.*;
import com.bydan.erp.puntoventa.util.*;
import com.bydan.erp.facturacion.util.*;
import com.bydan.erp.inventario.util.*;
import com.bydan.erp.seguridad.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.contabilidad.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.tesoreria.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.puntoventa.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.facturacion.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.inventario.presentation.web.jsf.sessionbean.*;


@SuppressWarnings("unused")
public class TipoFormaPagoBeanSwingJInternalFrame extends TipoFormaPagoJInternalFrame implements WindowListener,WindowFocusListener
{				
	
	public static final long serialVersionUID = 1L;
	
	public static Logger logger = Logger.getLogger(TipoFormaPagoBeanSwingJInternalFrame.class);  
	
	public static ClassValidator<TipoFormaPago> tipoformapagoValidator = new ClassValidator<TipoFormaPago>(TipoFormaPago.class);
	
	public InvalidValue[] invalidValues=null;
		

	//Ejb Foreign Keys
	
	public TipoFormaPago tipoformapago;	
	public TipoFormaPago tipoformapagoAux;
	public TipoFormaPago tipoformapagoAnterior;//USADO PARA MANEJAR FOCUS GAINED,LOST
	public TipoFormaPago tipoformapagoTotales;
	public Long idTipoFormaPagoActual;
	public Long iIdNuevoTipoFormaPago=0L;
	public int rowIndexActual=0;
	
	
	
	
	public String sFinalQueryComboEmpresa="";

	public List<Empresa> empresasForeignKey;

	public List<Empresa> getempresasForeignKey() {
		return empresasForeignKey;
	}

	public void setempresasForeignKey(List<Empresa> empresasForeignKey) {
		this.empresasForeignKey = empresasForeignKey;
	}

	//OBJETO FK ACTUAL
	public Empresa empresaForeignKey;

	public Empresa getempresaForeignKey() {
		return empresaForeignKey;
	}

	public void setempresaForeignKey(Empresa empresaForeignKey) {
		this.empresaForeignKey = empresaForeignKey;
	}

	public String sFinalQueryComboSucursal="";

	public List<Sucursal> sucursalsForeignKey;

	public List<Sucursal> getsucursalsForeignKey() {
		return sucursalsForeignKey;
	}

	public void setsucursalsForeignKey(List<Sucursal> sucursalsForeignKey) {
		this.sucursalsForeignKey = sucursalsForeignKey;
	}

	//OBJETO FK ACTUAL
	public Sucursal sucursalForeignKey;

	public Sucursal getsucursalForeignKey() {
		return sucursalForeignKey;
	}

	public void setsucursalForeignKey(Sucursal sucursalForeignKey) {
		this.sucursalForeignKey = sucursalForeignKey;
	}

	public String sFinalQueryComboModulo="";

	public List<Modulo> modulosForeignKey;

	public List<Modulo> getmodulosForeignKey() {
		return modulosForeignKey;
	}

	public void setmodulosForeignKey(List<Modulo> modulosForeignKey) {
		this.modulosForeignKey = modulosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Modulo moduloForeignKey;

	public Modulo getmoduloForeignKey() {
		return moduloForeignKey;
	}

	public void setmoduloForeignKey(Modulo moduloForeignKey) {
		this.moduloForeignKey = moduloForeignKey;
	}

	public String sFinalQueryComboTipoGrupoFormaPago="";

	public List<TipoGrupoFormaPago> tipogrupoformapagosForeignKey;

	public List<TipoGrupoFormaPago> gettipogrupoformapagosForeignKey() {
		return tipogrupoformapagosForeignKey;
	}

	public void settipogrupoformapagosForeignKey(List<TipoGrupoFormaPago> tipogrupoformapagosForeignKey) {
		this.tipogrupoformapagosForeignKey = tipogrupoformapagosForeignKey;
	}

	//OBJETO FK ACTUAL
	public TipoGrupoFormaPago tipogrupoformapagoForeignKey;

	public TipoGrupoFormaPago gettipogrupoformapagoForeignKey() {
		return tipogrupoformapagoForeignKey;
	}

	public void settipogrupoformapagoForeignKey(TipoGrupoFormaPago tipogrupoformapagoForeignKey) {
		this.tipogrupoformapagoForeignKey = tipogrupoformapagoForeignKey;
	}

	public String sFinalQueryComboTipoTransaccionModulo="";

	public List<TipoTransaccionModulo> tipotransaccionmodulosForeignKey;

	public List<TipoTransaccionModulo> gettipotransaccionmodulosForeignKey() {
		return tipotransaccionmodulosForeignKey;
	}

	public void settipotransaccionmodulosForeignKey(List<TipoTransaccionModulo> tipotransaccionmodulosForeignKey) {
		this.tipotransaccionmodulosForeignKey = tipotransaccionmodulosForeignKey;
	}

	//OBJETO FK ACTUAL
	public TipoTransaccionModulo tipotransaccionmoduloForeignKey;

	public TipoTransaccionModulo gettipotransaccionmoduloForeignKey() {
		return tipotransaccionmoduloForeignKey;
	}

	public void settipotransaccionmoduloForeignKey(TipoTransaccionModulo tipotransaccionmoduloForeignKey) {
		this.tipotransaccionmoduloForeignKey = tipotransaccionmoduloForeignKey;
	}

	public String sFinalQueryComboTransaccion="";

	public List<Transaccion> transaccionsForeignKey;

	public List<Transaccion> gettransaccionsForeignKey() {
		return transaccionsForeignKey;
	}

	public void settransaccionsForeignKey(List<Transaccion> transaccionsForeignKey) {
		this.transaccionsForeignKey = transaccionsForeignKey;
	}

	//OBJETO FK ACTUAL
	public Transaccion transaccionForeignKey;

	public Transaccion gettransaccionForeignKey() {
		return transaccionForeignKey;
	}

	public void settransaccionForeignKey(Transaccion transaccionForeignKey) {
		this.transaccionForeignKey = transaccionForeignKey;
	}

	public String sFinalQueryComboCuentaContable="";

	public List<CuentaContable> cuentacontablesForeignKey;

	public List<CuentaContable> getcuentacontablesForeignKey() {
		return cuentacontablesForeignKey;
	}

	public void setcuentacontablesForeignKey(List<CuentaContable> cuentacontablesForeignKey) {
		this.cuentacontablesForeignKey = cuentacontablesForeignKey;
	}

	//OBJETO FK ACTUAL
	public CuentaContable cuentacontableForeignKey;

	public CuentaContable getcuentacontableForeignKey() {
		return cuentacontableForeignKey;
	}

	public void setcuentacontableForeignKey(CuentaContable cuentacontableForeignKey) {
		this.cuentacontableForeignKey = cuentacontableForeignKey;
	}

		
	
	
	
	//BUSQUEDA INTERNA FK
	public Long idCuentaContableActual=0L;

	public Long getidCuentaContableActual() {
		return idCuentaContableActual;
	}

	public void setidCuentaContableActual(Long idCuentaContableActual) {
		this.idCuentaContableActual= idCuentaContableActual;
	}
	
	

	public Boolean isTienePermisosRegistroFormaPagoBanco=false;

	public Boolean getIsTienePermisosRegistroFormaPagoBanco() {
		return isTienePermisosRegistroFormaPagoBanco;
	}

	public void setIsTienePermisosRegistroFormaPagoBanco(Boolean isTienePermisosRegistroFormaPagoBanco) {
		this.isTienePermisosRegistroFormaPagoBanco= isTienePermisosRegistroFormaPagoBanco;
	}


	public Boolean isTienePermisosDetaFormaPagoFactu=false;

	public Boolean getIsTienePermisosDetaFormaPagoFactu() {
		return isTienePermisosDetaFormaPagoFactu;
	}

	public void setIsTienePermisosDetaFormaPagoFactu(Boolean isTienePermisosDetaFormaPagoFactu) {
		this.isTienePermisosDetaFormaPagoFactu= isTienePermisosDetaFormaPagoFactu;
	}


	public Boolean isTienePermisosGrupoClienteFormaPago=false;

	public Boolean getIsTienePermisosGrupoClienteFormaPago() {
		return isTienePermisosGrupoClienteFormaPago;
	}

	public void setIsTienePermisosGrupoClienteFormaPago(Boolean isTienePermisosGrupoClienteFormaPago) {
		this.isTienePermisosGrupoClienteFormaPago= isTienePermisosGrupoClienteFormaPago;
	}


	public Boolean isTienePermisosDetaFormaPago=false;

	public Boolean getIsTienePermisosDetaFormaPago() {
		return isTienePermisosDetaFormaPago;
	}

	public void setIsTienePermisosDetaFormaPago(Boolean isTienePermisosDetaFormaPago) {
		this.isTienePermisosDetaFormaPago= isTienePermisosDetaFormaPago;
	}


	public Boolean isTienePermisosFormaPagoPuntoVenta=false;

	public Boolean getIsTienePermisosFormaPagoPuntoVenta() {
		return isTienePermisosFormaPagoPuntoVenta;
	}

	public void setIsTienePermisosFormaPagoPuntoVenta(Boolean isTienePermisosFormaPagoPuntoVenta) {
		this.isTienePermisosFormaPagoPuntoVenta= isTienePermisosFormaPagoPuntoVenta;
	}


	public Boolean isTienePermisosFormaPago=false;

	public Boolean getIsTienePermisosFormaPago() {
		return isTienePermisosFormaPago;
	}

	public void setIsTienePermisosFormaPago(Boolean isTienePermisosFormaPago) {
		this.isTienePermisosFormaPago= isTienePermisosFormaPago;
	}


	public Boolean isTienePermisosFormaPagoInven=false;

	public Boolean getIsTienePermisosFormaPagoInven() {
		return isTienePermisosFormaPagoInven;
	}

	public void setIsTienePermisosFormaPagoInven(Boolean isTienePermisosFormaPagoInven) {
		this.isTienePermisosFormaPagoInven= isTienePermisosFormaPagoInven;
	}


	public Boolean isTienePermisosCierreCaja=false;

	public Boolean getIsTienePermisosCierreCaja() {
		return isTienePermisosCierreCaja;
	}

	public void setIsTienePermisosCierreCaja(Boolean isTienePermisosCierreCaja) {
		this.isTienePermisosCierreCaja= isTienePermisosCierreCaja;
	}

	
	
	//FALTA:PARA BUSQUEDAS POR CAMPO EN FORMULARIO
	public String sFinalQueryGeneral="";
	public Boolean isEntroOnLoad=false;
	public Boolean isErrorGuardar=false;
	
	public Boolean isGuardarCambiosEnLote=false;
	public Boolean isCargarCombosDependencia=false;
	public Boolean isSeleccionarTodos=false;
	public Boolean isSeleccionados=false;
	public Boolean conGraficoReporte=false;
	
	public Boolean isPostAccionNuevo=false;
	public Boolean isPostAccionSinCerrar=false;
	public Boolean isPostAccionSinMensaje=false;
	
	
	public Boolean esControlTabla=false;
	
	public Boolean isPermisoTodoTipoFormaPago;
	public Boolean isPermisoNuevoTipoFormaPago;
	public Boolean isPermisoActualizarTipoFormaPago;
	public Boolean isPermisoActualizarOriginalTipoFormaPago;
	public Boolean isPermisoEliminarTipoFormaPago;
	public Boolean isPermisoGuardarCambiosTipoFormaPago;
	public Boolean isPermisoConsultaTipoFormaPago;
	public Boolean isPermisoBusquedaTipoFormaPago;
	public Boolean isPermisoReporteTipoFormaPago;
	public Boolean isPermisoPaginacionMedioTipoFormaPago;
	public Boolean isPermisoPaginacionAltoTipoFormaPago;
	public Boolean isPermisoPaginacionTodoTipoFormaPago;
	public Boolean isPermisoCopiarTipoFormaPago;
	public Boolean isPermisoVerFormTipoFormaPago;
	public Boolean isPermisoDuplicarTipoFormaPago;
	public Boolean isPermisoOrdenTipoFormaPago;
	
	
	public ArrayList<DatoGeneral> arrDatoGeneral;
	public ArrayList<String> arrDatoGeneralNo;
	ArrayList<Classe> classesActual=new ArrayList<Classe>();
	
	public List<Accion> accions;	
	public List<Accion> accionsFormulario;
	
	
	public ArrayList<DatoGeneralMinimo> arrDatoGeneralMinimos;
	
	public ArrayList<Reporte> tiposArchivosReportes;
	public ArrayList<Reporte> tiposArchivosReportesDinamico;
	public ArrayList<Reporte> tiposReportes;
	public ArrayList<Reporte> tiposReportesDinamico;
	public ArrayList<Reporte> tiposGraficosReportes;
	public ArrayList<Reporte> tiposPaginacion;
	public ArrayList<Reporte> tiposRelaciones;
	public ArrayList<Reporte> tiposAcciones;
	public ArrayList<Reporte> tiposAccionesFormulario;
	public ArrayList<Reporte> tiposSeleccionar;
	
	public ArrayList<Reporte> tiposColumnasSelect;
	public ArrayList<Reporte> tiposRelacionesSelect;
	
	
	public Integer iNumeroPaginacion;
	public Integer iNumeroPaginacionPagina;
	public Pagination pagination;
	public DatosCliente datosCliente;
	public DatosDeep datosDeep;
	public String sTipoArchivoReporte="";
	public String sTipoArchivoReporteDinamico="";
	public String sTipoReporte="";
	public String sTipoReporteDinamico="";
	public String sTipoGraficoReporte="";
	public String sTipoPaginacion="";
	public String sTipoRelacion="";
	public String sTipoAccion="";
	public String sTipoAccionFormulario="";
	public String sTipoSeleccionar="";	
	public String sDetalleReporte="";
	public Boolean isMostrarNumeroPaginacion;
	public String sTipoReporteExtra="";
	public String sValorCampoGeneral="";
	public Boolean esReporteDinamico=false;
	public Boolean esReporteAccionProceso=false;
	public Boolean esRecargarFks=false;
	public String sPathReporteDinamico="";
	
	public TipoFormaPagoParameterReturnGeneral tipoformapagoReturnGeneral;
	public TipoFormaPagoParameterReturnGeneral tipoformapagoParameterGeneral;
	
	

	public RegistroFormaPagoBancoLogic registroformapagobancoLogic=null;

	public RegistroFormaPagoBancoLogic getRegistroFormaPagoBancoLogic() {
		return registroformapagobancoLogic;
	}

	public void setRegistroFormaPagoBancoLogic(RegistroFormaPagoBancoLogic registroformapagobancoLogic) {
		this.registroformapagobancoLogic = registroformapagobancoLogic;
	}


	public DetaFormaPagoFactuLogic detaformapagofactuLogic=null;

	public DetaFormaPagoFactuLogic getDetaFormaPagoFactuLogic() {
		return detaformapagofactuLogic;
	}

	public void setDetaFormaPagoFactuLogic(DetaFormaPagoFactuLogic detaformapagofactuLogic) {
		this.detaformapagofactuLogic = detaformapagofactuLogic;
	}


	public GrupoClienteFormaPagoLogic grupoclienteformapagoLogic=null;

	public GrupoClienteFormaPagoLogic getGrupoClienteFormaPagoLogic() {
		return grupoclienteformapagoLogic;
	}

	public void setGrupoClienteFormaPagoLogic(GrupoClienteFormaPagoLogic grupoclienteformapagoLogic) {
		this.grupoclienteformapagoLogic = grupoclienteformapagoLogic;
	}


	public DetaFormaPagoLogic detaformapagoLogic=null;

	public DetaFormaPagoLogic getDetaFormaPagoLogic() {
		return detaformapagoLogic;
	}

	public void setDetaFormaPagoLogic(DetaFormaPagoLogic detaformapagoLogic) {
		this.detaformapagoLogic = detaformapagoLogic;
	}


	public FormaPagoPuntoVentaLogic formapagopuntoventaLogic=null;

	public FormaPagoPuntoVentaLogic getFormaPagoPuntoVentaLogic() {
		return formapagopuntoventaLogic;
	}

	public void setFormaPagoPuntoVentaLogic(FormaPagoPuntoVentaLogic formapagopuntoventaLogic) {
		this.formapagopuntoventaLogic = formapagopuntoventaLogic;
	}


	public FormaPagoLogic formapagoLogic=null;

	public FormaPagoLogic getFormaPagoLogic() {
		return formapagoLogic;
	}

	public void setFormaPagoLogic(FormaPagoLogic formapagoLogic) {
		this.formapagoLogic = formapagoLogic;
	}


	public FormaPagoInvenLogic formapagoinvenLogic=null;

	public FormaPagoInvenLogic getFormaPagoInvenLogic() {
		return formapagoinvenLogic;
	}

	public void setFormaPagoInvenLogic(FormaPagoInvenLogic formapagoinvenLogic) {
		this.formapagoinvenLogic = formapagoinvenLogic;
	}


	public CierreCajaLogic cierrecajaLogic=null;

	public CierreCajaLogic getCierreCajaLogic() {
		return cierrecajaLogic;
	}

	public void setCierreCajaLogic(CierreCajaLogic cierrecajaLogic) {
		this.cierrecajaLogic = cierrecajaLogic;
	}
 	
	public JasperPrint jasperPrint = null;
	
	public Long lIdUsuarioSesion=0L;				
	
	public Boolean isEsNuevoTipoFormaPago=false;
	public Boolean esParaAccionDesdeFormularioTipoFormaPago=false;
	public Boolean isEsMantenimientoRelacionesRelacionadoUnico=false;
	public Boolean isEsMantenimientoRelaciones=false;
	public Boolean isEsMantenimientoRelacionado=false;	
	public Boolean isContieneImagenes=false;
		
	//public Boolean conTotales=false; //Viene heredado de JInternalFrameBase
	//public Boolean esParaBusquedaForeignKey=false;
	
	
	protected TipoFormaPagoSessionBeanAdditional tipoformapagoSessionBeanAdditional=null;
	
	public TipoFormaPagoSessionBeanAdditional getTipoFormaPagoSessionBeanAdditional() {
		return this.tipoformapagoSessionBeanAdditional;
	}
	
	public void setTipoFormaPagoSessionBeanAdditional(TipoFormaPagoSessionBeanAdditional tipoformapagoSessionBeanAdditional) {
		try {
			this.tipoformapagoSessionBeanAdditional=tipoformapagoSessionBeanAdditional;
		} catch(Exception e) {
			;
		}
	}
	
	
	
	
	protected TipoFormaPagoBeanSwingJInternalFrameAdditional tipoformapagoBeanSwingJInternalFrameAdditional=null;
	//public class TipoFormaPagoBeanSwingJInternalFrame
	
	public TipoFormaPagoBeanSwingJInternalFrameAdditional getTipoFormaPagoBeanSwingJInternalFrameAdditional() {
		return this.tipoformapagoBeanSwingJInternalFrameAdditional;
	}
	
	public void setTipoFormaPagoBeanSwingJInternalFrameAdditional(TipoFormaPagoBeanSwingJInternalFrameAdditional tipoformapagoBeanSwingJInternalFrameAdditional) {
		try {
			this.tipoformapagoBeanSwingJInternalFrameAdditional=tipoformapagoBeanSwingJInternalFrameAdditional;
		} catch(Exception e) {
			;
		}
	}
	
	
	
	
	//ESTA EN PADRE
	
	//public TipoFormaPagoLogic tipoformapagoLogic;
	public SistemaLogicAdditional sistemaLogicAdditional;
	
	
	public TipoFormaPago tipoformapagoBean;
	public TipoFormaPagoConstantesFunciones tipoformapagoConstantesFunciones;
	//public TipoFormaPagoParameterReturnGeneral tipoformapagoReturnGeneral;
	
	//FK
	
	public EmpresaLogic empresaLogic;
	public SucursalLogic sucursalLogic;
	public ModuloLogic moduloLogic;
	public TipoGrupoFormaPagoLogic tipogrupoformapagoLogic;
	public TipoTransaccionModuloLogic tipotransaccionmoduloLogic;
	public TransaccionLogic transaccionLogic;
	public CuentaContableLogic cuentacontableLogic;
	
	//PARAMETROS
	
	
	//public List<TipoFormaPago> tipoformapagos;	
	//public List<TipoFormaPago> tipoformapagosEliminados;
	//public List<TipoFormaPago> tipoformapagosAux;
	
	public String sAccionMantenimiento="";
	public String sAccionBusqueda="";
	public String sAccionAdicional="";
	public String sUltimaBusqueda="";
	
	public Mensaje mensaje;
	
	
	public String sVisibilidadTablaBusquedas="";					
	public String sVisibilidadTablaElementos="";	
	public String sVisibilidadTablaAcciones="";			
	
	public Boolean isVisibilidadCeldaNuevoTipoFormaPago=false;
	public Boolean isVisibilidadCeldaDuplicarTipoFormaPago=true;
	public Boolean isVisibilidadCeldaCopiarTipoFormaPago=true;
	public Boolean isVisibilidadCeldaVerFormTipoFormaPago=true;
	public Boolean isVisibilidadCeldaOrdenTipoFormaPago=true;
	public Boolean isVisibilidadCeldaNuevoRelacionesTipoFormaPago=false;
	public Boolean isVisibilidadCeldaModificarTipoFormaPago=false;
	public Boolean isVisibilidadCeldaActualizarTipoFormaPago=false;
	public Boolean isVisibilidadCeldaEliminarTipoFormaPago=false;
	public Boolean isVisibilidadCeldaCancelarTipoFormaPago=false;
	public Boolean isVisibilidadCeldaGuardarTipoFormaPago=false;	
	public Boolean isVisibilidadCeldaGuardarCambiosTipoFormaPago=false;	
	
	
	public Boolean isVisibilidadBusquedaPorNombre=false;
	public Boolean isVisibilidadBusquedaPorSiglas=false;
	public Boolean isVisibilidadFK_IdEmpresa=false;
	public Boolean isVisibilidadFK_IdModulo=false;
	public Boolean isVisibilidadFK_IdSucursal=false;
	public Boolean isVisibilidadFK_IdTipoFormaPago=false;
	public Boolean isVisibilidadFK_IdTipoGrupoFormaPago=false;
	public Boolean isVisibilidadFK_IdTipoTransaccionModulo=false;
	public Boolean isVisibilidadFK_IdTransaccion=false;
	
	public Long getiIdNuevoTipoFormaPago() {
		return this.iIdNuevoTipoFormaPago;
	}

	public void setiIdNuevoTipoFormaPago(Long iIdNuevoTipoFormaPago) {
		this.iIdNuevoTipoFormaPago = iIdNuevoTipoFormaPago;
	}
	
	public Long getidTipoFormaPagoActual() {
		return this.idTipoFormaPagoActual;
	}

	public void setidTipoFormaPagoActual(Long idTipoFormaPagoActual) {
		this.idTipoFormaPagoActual = idTipoFormaPagoActual;
	}
	
	public int getrowIndexActual() {
		return this.rowIndexActual;
	}

	public void setrowIndexActual(int rowIndexActual) {
		this.rowIndexActual=rowIndexActual;
	}
	
	
	public TipoFormaPago gettipoformapago() {
		return this.tipoformapago;
	}

	public void settipoformapago(TipoFormaPago tipoformapago) {
		this.tipoformapago = tipoformapago;
	}
	
	public TipoFormaPago gettipoformapagoAux() {
		return this.tipoformapagoAux;
	}

	public void settipoformapagoAux(TipoFormaPago tipoformapagoAux) {
		this.tipoformapagoAux = tipoformapagoAux;
	}				
	
	public TipoFormaPago gettipoformapagoAnterior() {
		return this.tipoformapagoAnterior;
	}

	public void settipoformapagoAnterior(TipoFormaPago tipoformapagoAnterior) {
		this.tipoformapagoAnterior = tipoformapagoAnterior;
	}	
	
	public TipoFormaPago gettipoformapagoTotales() {
		return this.tipoformapagoTotales;
	}

	public void settipoformapagoTotales(TipoFormaPago tipoformapagoTotales) {
		this.tipoformapagoTotales = tipoformapagoTotales;
	}	
	
	public TipoFormaPago gettipoformapagoBean() {
		return this.tipoformapagoBean;
	}

	public void settipoformapagoBean(TipoFormaPago tipoformapagoBean) {
		this.tipoformapagoBean = tipoformapagoBean;
	}	
	
	public TipoFormaPagoParameterReturnGeneral gettipoformapagoReturnGeneral() {
		return this.tipoformapagoReturnGeneral;
	}

	public void settipoformapagoReturnGeneral(TipoFormaPagoParameterReturnGeneral tipoformapagoReturnGeneral) {
		this.tipoformapagoReturnGeneral = tipoformapagoReturnGeneral;
	}	
	
	
	public String nombreBusquedaPorNombre="";

	public String getnombreBusquedaPorNombre() {
		return this.nombreBusquedaPorNombre;
	}

	public void setnombreBusquedaPorNombre(String nombreBusquedaPorNombre) {
		this.nombreBusquedaPorNombre = nombreBusquedaPorNombre;
	}

	public String siglasBusquedaPorSiglas="";

	public String getsiglasBusquedaPorSiglas() {
		return this.siglasBusquedaPorSiglas;
	}

	public void setsiglasBusquedaPorSiglas(String siglasBusquedaPorSiglas) {
		this.siglasBusquedaPorSiglas = siglasBusquedaPorSiglas;
	}

	public Long id_empresaFK_IdEmpresa=-1L;

	public Long getid_empresaFK_IdEmpresa() {
		return this.id_empresaFK_IdEmpresa;
	}

	public void setid_empresaFK_IdEmpresa(Long id_empresaFK_IdEmpresa) {
		this.id_empresaFK_IdEmpresa = id_empresaFK_IdEmpresa;
	}

	public Long id_moduloFK_IdModulo=null;

	public Long getid_moduloFK_IdModulo() {
		return this.id_moduloFK_IdModulo;
	}

	public void setid_moduloFK_IdModulo(Long id_moduloFK_IdModulo) {
		this.id_moduloFK_IdModulo = id_moduloFK_IdModulo;
	}

	public Long id_sucursalFK_IdSucursal=-1L;

	public Long getid_sucursalFK_IdSucursal() {
		return this.id_sucursalFK_IdSucursal;
	}

	public void setid_sucursalFK_IdSucursal(Long id_sucursalFK_IdSucursal) {
		this.id_sucursalFK_IdSucursal = id_sucursalFK_IdSucursal;
	}

	public Long id_cuenta_contableFK_IdTipoFormaPago=null;

	public Long getid_cuenta_contableFK_IdTipoFormaPago() {
		return this.id_cuenta_contableFK_IdTipoFormaPago;
	}

	public void setid_cuenta_contableFK_IdTipoFormaPago(Long id_cuenta_contableFK_IdTipoFormaPago) {
		this.id_cuenta_contableFK_IdTipoFormaPago = id_cuenta_contableFK_IdTipoFormaPago;
	}

	public Long id_tipo_grupo_forma_pagoFK_IdTipoGrupoFormaPago=-1L;

	public Long getid_tipo_grupo_forma_pagoFK_IdTipoGrupoFormaPago() {
		return this.id_tipo_grupo_forma_pagoFK_IdTipoGrupoFormaPago;
	}

	public void setid_tipo_grupo_forma_pagoFK_IdTipoGrupoFormaPago(Long id_tipo_grupo_forma_pagoFK_IdTipoGrupoFormaPago) {
		this.id_tipo_grupo_forma_pagoFK_IdTipoGrupoFormaPago = id_tipo_grupo_forma_pagoFK_IdTipoGrupoFormaPago;
	}

	public Long id_tipo_transaccion_moduloFK_IdTipoTransaccionModulo=null;

	public Long getid_tipo_transaccion_moduloFK_IdTipoTransaccionModulo() {
		return this.id_tipo_transaccion_moduloFK_IdTipoTransaccionModulo;
	}

	public void setid_tipo_transaccion_moduloFK_IdTipoTransaccionModulo(Long id_tipo_transaccion_moduloFK_IdTipoTransaccionModulo) {
		this.id_tipo_transaccion_moduloFK_IdTipoTransaccionModulo = id_tipo_transaccion_moduloFK_IdTipoTransaccionModulo;
	}

	public Long id_transaccionFK_IdTransaccion=null;

	public Long getid_transaccionFK_IdTransaccion() {
		return this.id_transaccionFK_IdTransaccion;
	}

	public void setid_transaccionFK_IdTransaccion(Long id_transaccionFK_IdTransaccion) {
		this.id_transaccionFK_IdTransaccion = id_transaccionFK_IdTransaccion;
	}

		
	
	//ELEMENTOS TABLAS PARAMETOS
	
	
	
	
	
	
	//ELEMENTOS TABLAS PARAMETOS_FIN
	
	
	public TipoFormaPagoLogic getTipoFormaPagoLogic()	{		
		return tipoformapagoLogic;
	}

	public void setTipoFormaPagoLogic(TipoFormaPagoLogic tipoformapagoLogic) {
		this.tipoformapagoLogic = tipoformapagoLogic;
	}
	
	
	public void setsFinalQueryGeneral(String sFinalQueryGeneral) {
		this.sFinalQueryGeneral=sFinalQueryGeneral;
	}
	
	public String getsFinalQueryGeneral() {
		return this.sFinalQueryGeneral;
	}
		
	public Boolean getIsGuardarCambiosEnLote() {
		return isGuardarCambiosEnLote;
	}

	public void setIsGuardarCambiosEnLote(Boolean isGuardarCambiosEnLote) {
		this.isGuardarCambiosEnLote = isGuardarCambiosEnLote;
	}
	
	public Boolean getIsCargarCombosDependencia() {
		return isCargarCombosDependencia;
	}

	public void setIsCargarCombosDependencia(Boolean isCargarCombosDependencia) {
		this.isCargarCombosDependencia = isCargarCombosDependencia;
	}
	
	public Boolean getIsEsNuevoTipoFormaPago() {
		return isEsNuevoTipoFormaPago;
	}

	public void setIsEsNuevoTipoFormaPago(Boolean isEsNuevoTipoFormaPago) {
		this.isEsNuevoTipoFormaPago = isEsNuevoTipoFormaPago;
	}

	public Boolean getEsParaAccionDesdeFormularioTipoFormaPago() {
		return esParaAccionDesdeFormularioTipoFormaPago;
	}
	
	public void setEsParaAccionDesdeFormularioTipoFormaPago(Boolean esParaAccionDesdeFormularioTipoFormaPago) {
		this.esParaAccionDesdeFormularioTipoFormaPago = esParaAccionDesdeFormularioTipoFormaPago;
	}
	
	public Boolean getIsEsMantenimientoRelacionesRelacionadoUnico() {
		return isEsMantenimientoRelacionesRelacionadoUnico;
	}

	public void setIsEsMantenimientoRelacionesRelacionadoUnico(Boolean isEsMantenimientoRelacionesRelacionadoUnico) {
		this.isEsMantenimientoRelacionesRelacionadoUnico = isEsMantenimientoRelacionesRelacionadoUnico;
	}

	public Boolean getIsEsMantenimientoRelaciones() {
		return isEsMantenimientoRelaciones;
	}

	public void setIsEsMantenimientoRelaciones(Boolean isEsMantenimientoRelaciones) {
		this.isEsMantenimientoRelaciones = isEsMantenimientoRelaciones;
	}

	public Boolean getIsEsMantenimientoRelacionado() {
		return isEsMantenimientoRelacionado;
	}

	public void setIsEsMantenimientoRelacionado(Boolean isEsMantenimientoRelacionado) {
		this.isEsMantenimientoRelacionado = isEsMantenimientoRelacionado;
	}

	public Boolean getesParaBusquedaForeignKey() {
		return esParaBusquedaForeignKey;
	}

	public void setesParaBusquedaForeignKey(Boolean esParaBusquedaForeignKey) {
		this.esParaBusquedaForeignKey = esParaBusquedaForeignKey;
	}

	public Boolean getIsContieneImagenes() {
		return isContieneImagenes;
	}

	public void setIsContieneImagenes(Boolean isContieneImagenes) {
		this.isContieneImagenes = isContieneImagenes;
	}		
	
	
	public void cargarCombosEmpresasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.empresasForeignKey=new ArrayList<Empresa>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			EmpresaLogic empresaLogic=new EmpresaLogic();

			//empresaLogic.getEmpresaDataAccess().setIsForForeingKeyData(true);

			if(this.tipoformapagoSessionBean==null) {
				this.tipoformapagoSessionBean=new TipoFormaPagoSessionBean();
			}

			if(!this.tipoformapagoSessionBean.getisBusquedaDesdeForeignKeySesionEmpresa()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//empresaLogic.getEmpresaDataAccess().setIsForForeingKeyData(true);

					empresaLogic.getTodosEmpresasWithConnection(sFinalQuery,new Pagination());

					this.empresasForeignKey=empresaLogic.getEmpresas();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaEmpresa(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					empresaLogic.getEntityWithConnection(tipoformapagoSessionBean.getlidEmpresaActual());
					this.empresasForeignKey.add(empresaLogic.getEmpresa());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosSucursalsForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.sucursalsForeignKey=new ArrayList<Sucursal>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			SucursalLogic sucursalLogic=new SucursalLogic();

			//sucursalLogic.getSucursalDataAccess().setIsForForeingKeyData(true);

			if(this.tipoformapagoSessionBean==null) {
				this.tipoformapagoSessionBean=new TipoFormaPagoSessionBean();
			}

			if(!this.tipoformapagoSessionBean.getisBusquedaDesdeForeignKeySesionSucursal()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//sucursalLogic.getSucursalDataAccess().setIsForForeingKeyData(true);

					sucursalLogic.getTodosSucursalsWithConnection(sFinalQuery,new Pagination());

					this.sucursalsForeignKey=sucursalLogic.getSucursals();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaSucursal(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					sucursalLogic.getEntityWithConnection(tipoformapagoSessionBean.getlidSucursalActual());
					this.sucursalsForeignKey.add(sucursalLogic.getSucursal());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosModulosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.modulosForeignKey=new ArrayList<Modulo>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			ModuloLogic moduloLogic=new ModuloLogic();

			//moduloLogic.getModuloDataAccess().setIsForForeingKeyData(true);

			if(this.tipoformapagoSessionBean==null) {
				this.tipoformapagoSessionBean=new TipoFormaPagoSessionBean();
			}

			if(!this.tipoformapagoSessionBean.getisBusquedaDesdeForeignKeySesionModulo()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//moduloLogic.getModuloDataAccess().setIsForForeingKeyData(true);

					moduloLogic.getTodosModulosWithConnection(sFinalQuery,new Pagination());

					this.modulosForeignKey=moduloLogic.getModulos();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaModulo(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					moduloLogic.getEntityWithConnection(tipoformapagoSessionBean.getlidModuloActual());
					this.modulosForeignKey.add(moduloLogic.getModulo());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTipoGrupoFormaPagosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.tipogrupoformapagosForeignKey=new ArrayList<TipoGrupoFormaPago>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			TipoGrupoFormaPagoLogic tipogrupoformapagoLogic=new TipoGrupoFormaPagoLogic();

			//tipogrupoformapagoLogic.getTipoGrupoFormaPagoDataAccess().setIsForForeingKeyData(true);

			if(this.tipoformapagoSessionBean==null) {
				this.tipoformapagoSessionBean=new TipoFormaPagoSessionBean();
			}

			if(!this.tipoformapagoSessionBean.getisBusquedaDesdeForeignKeySesionTipoGrupoFormaPago()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//tipogrupoformapagoLogic.getTipoGrupoFormaPagoDataAccess().setIsForForeingKeyData(true);

					tipogrupoformapagoLogic.getTodosTipoGrupoFormaPagosWithConnection(sFinalQuery,new Pagination());

					this.tipogrupoformapagosForeignKey=tipogrupoformapagoLogic.getTipoGrupoFormaPagos();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTipoGrupoFormaPago(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipogrupoformapagoLogic.getEntityWithConnection(tipoformapagoSessionBean.getlidTipoGrupoFormaPagoActual());
					this.tipogrupoformapagosForeignKey.add(tipogrupoformapagoLogic.getTipoGrupoFormaPago());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTipoTransaccionModulosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.tipotransaccionmodulosForeignKey=new ArrayList<TipoTransaccionModulo>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			TipoTransaccionModuloLogic tipotransaccionmoduloLogic=new TipoTransaccionModuloLogic();

			//tipotransaccionmoduloLogic.getTipoTransaccionModuloDataAccess().setIsForForeingKeyData(true);

			if(this.tipoformapagoSessionBean==null) {
				this.tipoformapagoSessionBean=new TipoFormaPagoSessionBean();
			}

			if(!this.tipoformapagoSessionBean.getisBusquedaDesdeForeignKeySesionTipoTransaccionModulo()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//tipotransaccionmoduloLogic.getTipoTransaccionModuloDataAccess().setIsForForeingKeyData(true);

					tipotransaccionmoduloLogic.getTodosTipoTransaccionModulosWithConnection(sFinalQuery,new Pagination());

					this.tipotransaccionmodulosForeignKey=tipotransaccionmoduloLogic.getTipoTransaccionModulos();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTipoTransaccionModulo(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipotransaccionmoduloLogic.getEntityWithConnection(tipoformapagoSessionBean.getlidTipoTransaccionModuloActual());
					this.tipotransaccionmodulosForeignKey.add(tipotransaccionmoduloLogic.getTipoTransaccionModulo());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTransaccionsForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.transaccionsForeignKey=new ArrayList<Transaccion>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			TransaccionLogic transaccionLogic=new TransaccionLogic();

			//transaccionLogic.getTransaccionDataAccess().setIsForForeingKeyData(true);

			if(this.tipoformapagoSessionBean==null) {
				this.tipoformapagoSessionBean=new TipoFormaPagoSessionBean();
			}

			if(!this.tipoformapagoSessionBean.getisBusquedaDesdeForeignKeySesionTransaccion()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//transaccionLogic.getTransaccionDataAccess().setIsForForeingKeyData(true);

					transaccionLogic.getTodosTransaccionsWithConnection(sFinalQuery,new Pagination());

					this.transaccionsForeignKey=transaccionLogic.getTransaccions();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTransaccion(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					transaccionLogic.getEntityWithConnection(tipoformapagoSessionBean.getlidTransaccionActual());
					this.transaccionsForeignKey.add(transaccionLogic.getTransaccion());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosCuentaContablesForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.cuentacontablesForeignKey=new ArrayList<CuentaContable>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			CuentaContableLogic cuentacontableLogic=new CuentaContableLogic();

			//cuentacontableLogic.getCuentaContableDataAccess().setIsForForeingKeyData(true);

			if(this.tipoformapagoSessionBean==null) {
				this.tipoformapagoSessionBean=new TipoFormaPagoSessionBean();
			}

			if(!this.tipoformapagoSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContable()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//cuentacontableLogic.getCuentaContableDataAccess().setIsForForeingKeyData(true);

					cuentacontableLogic.getTodosCuentaContablesWithConnection(sFinalQuery,new Pagination());

					this.cuentacontablesForeignKey=cuentacontableLogic.getCuentaContables();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaCuentaContable(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					cuentacontableLogic.getEntityWithConnection(tipoformapagoSessionBean.getlidCuentaContableActual());
					this.cuentacontablesForeignKey.add(cuentacontableLogic.getCuentaContable());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	
	
	public void setActualEmpresaForeignKey(Long idEmpresaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Empresa  empresaTemp=null;

			for(Empresa empresaAux:empresasForeignKey) {
				if(empresaAux.getId()!=null && empresaAux.getId().equals(idEmpresaSeleccionado)) {
					empresaTemp=empresaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(empresaTemp!=null) {

					if(this.tipoformapago!=null) {
						this.tipoformapago.setEmpresa(empresaTemp);
					}

					if(this.jInternalFrameDetalleFormTipoFormaPago!=null) {
						this.jInternalFrameDetalleFormTipoFormaPago.jComboBoxid_empresaTipoFormaPago.setSelectedItem(empresaTemp);
					}
				} else {
					//jComboBoxid_empresaTipoFormaPago.setSelectedItem(empresaTemp);
					if(this.jInternalFrameDetalleFormTipoFormaPago!=null) {
						if(this.jInternalFrameDetalleFormTipoFormaPago.jComboBoxid_empresaTipoFormaPago.getItemCount()>0) {
							this.jInternalFrameDetalleFormTipoFormaPago.jComboBoxid_empresaTipoFormaPago.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualEmpresaForeignKeyDescripcion(Long idEmpresaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Empresa  empresaTemp=null;

			for(Empresa empresaAux:empresasForeignKey) {
				if(empresaAux.getId()!=null && empresaAux.getId().equals(idEmpresaSeleccionado)) {
					empresaTemp=empresaAux;
					break;
				}
			}


			sDescripcion=EmpresaConstantesFunciones.getEmpresaDescripcion(empresaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualEmpresaForeignKeyGenerico(Long idEmpresaSeleccionado,JComboBox jComboBoxid_empresaTipoFormaPagoGenerico)throws Exception
	{
		try
		{
			Empresa  empresaTemp=null;

			for(Empresa empresaAux:empresasForeignKey) {
				if(empresaAux.getId()!=null && empresaAux.getId().equals(idEmpresaSeleccionado)) {
					empresaTemp=empresaAux;
					break;
				}
			}

			if(empresaTemp!=null) {
				jComboBoxid_empresaTipoFormaPagoGenerico.setSelectedItem(empresaTemp);
			} else {
				if(jComboBoxid_empresaTipoFormaPagoGenerico!=null && jComboBoxid_empresaTipoFormaPagoGenerico.getItemCount()>0) {
					jComboBoxid_empresaTipoFormaPagoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualSucursalForeignKey(Long idSucursalSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Sucursal  sucursalTemp=null;

			for(Sucursal sucursalAux:sucursalsForeignKey) {
				if(sucursalAux.getId()!=null && sucursalAux.getId().equals(idSucursalSeleccionado)) {
					sucursalTemp=sucursalAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(sucursalTemp!=null) {

					if(this.tipoformapago!=null) {
						this.tipoformapago.setSucursal(sucursalTemp);
					}

					if(this.jInternalFrameDetalleFormTipoFormaPago!=null) {
						this.jInternalFrameDetalleFormTipoFormaPago.jComboBoxid_sucursalTipoFormaPago.setSelectedItem(sucursalTemp);
					}
				} else {
					//jComboBoxid_sucursalTipoFormaPago.setSelectedItem(sucursalTemp);
					if(this.jInternalFrameDetalleFormTipoFormaPago!=null) {
						if(this.jInternalFrameDetalleFormTipoFormaPago.jComboBoxid_sucursalTipoFormaPago.getItemCount()>0) {
							this.jInternalFrameDetalleFormTipoFormaPago.jComboBoxid_sucursalTipoFormaPago.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualSucursalForeignKeyDescripcion(Long idSucursalSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Sucursal  sucursalTemp=null;

			for(Sucursal sucursalAux:sucursalsForeignKey) {
				if(sucursalAux.getId()!=null && sucursalAux.getId().equals(idSucursalSeleccionado)) {
					sucursalTemp=sucursalAux;
					break;
				}
			}


			sDescripcion=SucursalConstantesFunciones.getSucursalDescripcion(sucursalTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualSucursalForeignKeyGenerico(Long idSucursalSeleccionado,JComboBox jComboBoxid_sucursalTipoFormaPagoGenerico)throws Exception
	{
		try
		{
			Sucursal  sucursalTemp=null;

			for(Sucursal sucursalAux:sucursalsForeignKey) {
				if(sucursalAux.getId()!=null && sucursalAux.getId().equals(idSucursalSeleccionado)) {
					sucursalTemp=sucursalAux;
					break;
				}
			}

			if(sucursalTemp!=null) {
				jComboBoxid_sucursalTipoFormaPagoGenerico.setSelectedItem(sucursalTemp);
			} else {
				if(jComboBoxid_sucursalTipoFormaPagoGenerico!=null && jComboBoxid_sucursalTipoFormaPagoGenerico.getItemCount()>0) {
					jComboBoxid_sucursalTipoFormaPagoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualModuloForeignKey(Long idModuloSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Modulo  moduloTemp=null;

			for(Modulo moduloAux:modulosForeignKey) {
				if(moduloAux.getId()!=null && moduloAux.getId().equals(idModuloSeleccionado)) {
					moduloTemp=moduloAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(moduloTemp!=null) {

					if(this.tipoformapago!=null) {
						this.tipoformapago.setModulo(moduloTemp);
					}

					if(this.jInternalFrameDetalleFormTipoFormaPago!=null) {
						this.jInternalFrameDetalleFormTipoFormaPago.jComboBoxid_moduloTipoFormaPago.setSelectedItem(moduloTemp);
					}
				} else {
					//jComboBoxid_moduloTipoFormaPago.setSelectedItem(moduloTemp);
					if(this.jInternalFrameDetalleFormTipoFormaPago!=null) {
						if(this.jInternalFrameDetalleFormTipoFormaPago.jComboBoxid_moduloTipoFormaPago.getItemCount()>0) {
							this.jInternalFrameDetalleFormTipoFormaPago.jComboBoxid_moduloTipoFormaPago.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualModuloForeignKeyDescripcion(Long idModuloSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Modulo  moduloTemp=null;

			for(Modulo moduloAux:modulosForeignKey) {
				if(moduloAux.getId()!=null && moduloAux.getId().equals(idModuloSeleccionado)) {
					moduloTemp=moduloAux;
					break;
				}
			}


			sDescripcion=ModuloConstantesFunciones.getModuloDescripcion(moduloTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualModuloForeignKeyGenerico(Long idModuloSeleccionado,JComboBox jComboBoxid_moduloTipoFormaPagoGenerico)throws Exception
	{
		try
		{
			Modulo  moduloTemp=null;

			for(Modulo moduloAux:modulosForeignKey) {
				if(moduloAux.getId()!=null && moduloAux.getId().equals(idModuloSeleccionado)) {
					moduloTemp=moduloAux;
					break;
				}
			}

			if(moduloTemp!=null) {
				jComboBoxid_moduloTipoFormaPagoGenerico.setSelectedItem(moduloTemp);
			} else {
				if(jComboBoxid_moduloTipoFormaPagoGenerico!=null && jComboBoxid_moduloTipoFormaPagoGenerico.getItemCount()>0) {
					jComboBoxid_moduloTipoFormaPagoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTipoGrupoFormaPagoForeignKey(Long idTipoGrupoFormaPagoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			TipoGrupoFormaPago  tipogrupoformapagoTemp=null;

			for(TipoGrupoFormaPago tipogrupoformapagoAux:tipogrupoformapagosForeignKey) {
				if(tipogrupoformapagoAux.getId()!=null && tipogrupoformapagoAux.getId().equals(idTipoGrupoFormaPagoSeleccionado)) {
					tipogrupoformapagoTemp=tipogrupoformapagoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(tipogrupoformapagoTemp!=null) {

					if(this.tipoformapago!=null) {
						this.tipoformapago.setTipoGrupoFormaPago(tipogrupoformapagoTemp);
					}

					if(this.jInternalFrameDetalleFormTipoFormaPago!=null) {
						this.jInternalFrameDetalleFormTipoFormaPago.jComboBoxid_tipo_grupo_forma_pagoTipoFormaPago.setSelectedItem(tipogrupoformapagoTemp);
					}
				} else {
					//jComboBoxid_tipo_grupo_forma_pagoTipoFormaPago.setSelectedItem(tipogrupoformapagoTemp);
					if(this.jInternalFrameDetalleFormTipoFormaPago!=null) {
						if(this.jInternalFrameDetalleFormTipoFormaPago.jComboBoxid_tipo_grupo_forma_pagoTipoFormaPago.getItemCount()>0) {
							this.jInternalFrameDetalleFormTipoFormaPago.jComboBoxid_tipo_grupo_forma_pagoTipoFormaPago.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdTipoGrupoFormaPago") || sFormularioTipoBusqueda.equals("Todos")){
					if(tipogrupoformapagoTemp!=null && jComboBoxid_tipo_grupo_forma_pagoFK_IdTipoGrupoFormaPagoTipoFormaPago!=null) {
						jComboBoxid_tipo_grupo_forma_pagoFK_IdTipoGrupoFormaPagoTipoFormaPago.setSelectedItem(tipogrupoformapagoTemp);
					} else {
						if(jComboBoxid_tipo_grupo_forma_pagoFK_IdTipoGrupoFormaPagoTipoFormaPago!=null) {
							//jComboBoxid_tipo_grupo_forma_pagoFK_IdTipoGrupoFormaPagoTipoFormaPago.setSelectedItem(tipogrupoformapagoTemp);
							if(jComboBoxid_tipo_grupo_forma_pagoFK_IdTipoGrupoFormaPagoTipoFormaPago.getItemCount()>0) {
								jComboBoxid_tipo_grupo_forma_pagoFK_IdTipoGrupoFormaPagoTipoFormaPago.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTipoGrupoFormaPagoForeignKeyDescripcion(Long idTipoGrupoFormaPagoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			TipoGrupoFormaPago  tipogrupoformapagoTemp=null;

			for(TipoGrupoFormaPago tipogrupoformapagoAux:tipogrupoformapagosForeignKey) {
				if(tipogrupoformapagoAux.getId()!=null && tipogrupoformapagoAux.getId().equals(idTipoGrupoFormaPagoSeleccionado)) {
					tipogrupoformapagoTemp=tipogrupoformapagoAux;
					break;
				}
			}


			sDescripcion=TipoGrupoFormaPagoConstantesFunciones.getTipoGrupoFormaPagoDescripcion(tipogrupoformapagoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTipoGrupoFormaPagoForeignKeyGenerico(Long idTipoGrupoFormaPagoSeleccionado,JComboBox jComboBoxid_tipo_grupo_forma_pagoTipoFormaPagoGenerico)throws Exception
	{
		try
		{
			TipoGrupoFormaPago  tipogrupoformapagoTemp=null;

			for(TipoGrupoFormaPago tipogrupoformapagoAux:tipogrupoformapagosForeignKey) {
				if(tipogrupoformapagoAux.getId()!=null && tipogrupoformapagoAux.getId().equals(idTipoGrupoFormaPagoSeleccionado)) {
					tipogrupoformapagoTemp=tipogrupoformapagoAux;
					break;
				}
			}

			if(tipogrupoformapagoTemp!=null) {
				jComboBoxid_tipo_grupo_forma_pagoTipoFormaPagoGenerico.setSelectedItem(tipogrupoformapagoTemp);
			} else {
				if(jComboBoxid_tipo_grupo_forma_pagoTipoFormaPagoGenerico!=null && jComboBoxid_tipo_grupo_forma_pagoTipoFormaPagoGenerico.getItemCount()>0) {
					jComboBoxid_tipo_grupo_forma_pagoTipoFormaPagoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTipoTransaccionModuloForeignKey(Long idTipoTransaccionModuloSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			TipoTransaccionModulo  tipotransaccionmoduloTemp=null;

			for(TipoTransaccionModulo tipotransaccionmoduloAux:tipotransaccionmodulosForeignKey) {
				if(tipotransaccionmoduloAux.getId()!=null && tipotransaccionmoduloAux.getId().equals(idTipoTransaccionModuloSeleccionado)) {
					tipotransaccionmoduloTemp=tipotransaccionmoduloAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(tipotransaccionmoduloTemp!=null) {

					if(this.tipoformapago!=null) {
						this.tipoformapago.setTipoTransaccionModulo(tipotransaccionmoduloTemp);
					}

					if(this.jInternalFrameDetalleFormTipoFormaPago!=null) {
						this.jInternalFrameDetalleFormTipoFormaPago.jComboBoxid_tipo_transaccion_moduloTipoFormaPago.setSelectedItem(tipotransaccionmoduloTemp);
					}
				} else {
					//jComboBoxid_tipo_transaccion_moduloTipoFormaPago.setSelectedItem(tipotransaccionmoduloTemp);
					if(this.jInternalFrameDetalleFormTipoFormaPago!=null) {
						if(this.jInternalFrameDetalleFormTipoFormaPago.jComboBoxid_tipo_transaccion_moduloTipoFormaPago.getItemCount()>0) {
							this.jInternalFrameDetalleFormTipoFormaPago.jComboBoxid_tipo_transaccion_moduloTipoFormaPago.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdTipoTransaccionModulo") || sFormularioTipoBusqueda.equals("Todos")){
					if(tipotransaccionmoduloTemp!=null && jComboBoxid_tipo_transaccion_moduloFK_IdTipoTransaccionModuloTipoFormaPago!=null) {
						jComboBoxid_tipo_transaccion_moduloFK_IdTipoTransaccionModuloTipoFormaPago.setSelectedItem(tipotransaccionmoduloTemp);
					} else {
						if(jComboBoxid_tipo_transaccion_moduloFK_IdTipoTransaccionModuloTipoFormaPago!=null) {
							//jComboBoxid_tipo_transaccion_moduloFK_IdTipoTransaccionModuloTipoFormaPago.setSelectedItem(tipotransaccionmoduloTemp);
							if(jComboBoxid_tipo_transaccion_moduloFK_IdTipoTransaccionModuloTipoFormaPago.getItemCount()>0) {
								jComboBoxid_tipo_transaccion_moduloFK_IdTipoTransaccionModuloTipoFormaPago.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTipoTransaccionModuloForeignKeyDescripcion(Long idTipoTransaccionModuloSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			TipoTransaccionModulo  tipotransaccionmoduloTemp=null;

			for(TipoTransaccionModulo tipotransaccionmoduloAux:tipotransaccionmodulosForeignKey) {
				if(tipotransaccionmoduloAux.getId()!=null && tipotransaccionmoduloAux.getId().equals(idTipoTransaccionModuloSeleccionado)) {
					tipotransaccionmoduloTemp=tipotransaccionmoduloAux;
					break;
				}
			}


			sDescripcion=TipoTransaccionModuloConstantesFunciones.getTipoTransaccionModuloDescripcion(tipotransaccionmoduloTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTipoTransaccionModuloForeignKeyGenerico(Long idTipoTransaccionModuloSeleccionado,JComboBox jComboBoxid_tipo_transaccion_moduloTipoFormaPagoGenerico)throws Exception
	{
		try
		{
			TipoTransaccionModulo  tipotransaccionmoduloTemp=null;

			for(TipoTransaccionModulo tipotransaccionmoduloAux:tipotransaccionmodulosForeignKey) {
				if(tipotransaccionmoduloAux.getId()!=null && tipotransaccionmoduloAux.getId().equals(idTipoTransaccionModuloSeleccionado)) {
					tipotransaccionmoduloTemp=tipotransaccionmoduloAux;
					break;
				}
			}

			if(tipotransaccionmoduloTemp!=null) {
				jComboBoxid_tipo_transaccion_moduloTipoFormaPagoGenerico.setSelectedItem(tipotransaccionmoduloTemp);
			} else {
				if(jComboBoxid_tipo_transaccion_moduloTipoFormaPagoGenerico!=null && jComboBoxid_tipo_transaccion_moduloTipoFormaPagoGenerico.getItemCount()>0) {
					jComboBoxid_tipo_transaccion_moduloTipoFormaPagoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTransaccionForeignKey(Long idTransaccionSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Transaccion  transaccionTemp=null;

			for(Transaccion transaccionAux:transaccionsForeignKey) {
				if(transaccionAux.getId()!=null && transaccionAux.getId().equals(idTransaccionSeleccionado)) {
					transaccionTemp=transaccionAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(transaccionTemp!=null) {

					if(this.tipoformapago!=null) {
						this.tipoformapago.setTransaccion(transaccionTemp);
					}

					if(this.jInternalFrameDetalleFormTipoFormaPago!=null) {
						this.jInternalFrameDetalleFormTipoFormaPago.jComboBoxid_transaccionTipoFormaPago.setSelectedItem(transaccionTemp);
					}
				} else {
					//jComboBoxid_transaccionTipoFormaPago.setSelectedItem(transaccionTemp);
					if(this.jInternalFrameDetalleFormTipoFormaPago!=null) {
						if(this.jInternalFrameDetalleFormTipoFormaPago.jComboBoxid_transaccionTipoFormaPago.getItemCount()>0) {
							this.jInternalFrameDetalleFormTipoFormaPago.jComboBoxid_transaccionTipoFormaPago.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdTransaccion") || sFormularioTipoBusqueda.equals("Todos")){
					if(transaccionTemp!=null && jComboBoxid_transaccionFK_IdTransaccionTipoFormaPago!=null) {
						jComboBoxid_transaccionFK_IdTransaccionTipoFormaPago.setSelectedItem(transaccionTemp);
					} else {
						if(jComboBoxid_transaccionFK_IdTransaccionTipoFormaPago!=null) {
							//jComboBoxid_transaccionFK_IdTransaccionTipoFormaPago.setSelectedItem(transaccionTemp);
							if(jComboBoxid_transaccionFK_IdTransaccionTipoFormaPago.getItemCount()>0) {
								jComboBoxid_transaccionFK_IdTransaccionTipoFormaPago.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTransaccionForeignKeyDescripcion(Long idTransaccionSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Transaccion  transaccionTemp=null;

			for(Transaccion transaccionAux:transaccionsForeignKey) {
				if(transaccionAux.getId()!=null && transaccionAux.getId().equals(idTransaccionSeleccionado)) {
					transaccionTemp=transaccionAux;
					break;
				}
			}


			sDescripcion=TransaccionConstantesFunciones.getTransaccionDescripcion(transaccionTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTransaccionForeignKeyGenerico(Long idTransaccionSeleccionado,JComboBox jComboBoxid_transaccionTipoFormaPagoGenerico)throws Exception
	{
		try
		{
			Transaccion  transaccionTemp=null;

			for(Transaccion transaccionAux:transaccionsForeignKey) {
				if(transaccionAux.getId()!=null && transaccionAux.getId().equals(idTransaccionSeleccionado)) {
					transaccionTemp=transaccionAux;
					break;
				}
			}

			if(transaccionTemp!=null) {
				jComboBoxid_transaccionTipoFormaPagoGenerico.setSelectedItem(transaccionTemp);
			} else {
				if(jComboBoxid_transaccionTipoFormaPagoGenerico!=null && jComboBoxid_transaccionTipoFormaPagoGenerico.getItemCount()>0) {
					jComboBoxid_transaccionTipoFormaPagoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualCuentaContableForeignKey(Long idCuentaContableSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			CuentaContable  cuentacontableTemp=null;

			for(CuentaContable cuentacontableAux:cuentacontablesForeignKey) {
				if(cuentacontableAux.getId()!=null && cuentacontableAux.getId().equals(idCuentaContableSeleccionado)) {
					cuentacontableTemp=cuentacontableAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(cuentacontableTemp!=null) {

					if(this.tipoformapago!=null) {
						this.tipoformapago.setCuentaContable(cuentacontableTemp);
					}

					if(this.jInternalFrameDetalleFormTipoFormaPago!=null) {
						this.jInternalFrameDetalleFormTipoFormaPago.jComboBoxid_cuenta_contableTipoFormaPago.setSelectedItem(cuentacontableTemp);
					}
				} else {
					//jComboBoxid_cuenta_contableTipoFormaPago.setSelectedItem(cuentacontableTemp);
					if(this.jInternalFrameDetalleFormTipoFormaPago!=null) {
						if(this.jInternalFrameDetalleFormTipoFormaPago.jComboBoxid_cuenta_contableTipoFormaPago.getItemCount()>0) {
							this.jInternalFrameDetalleFormTipoFormaPago.jComboBoxid_cuenta_contableTipoFormaPago.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdTipoFormaPago") || sFormularioTipoBusqueda.equals("Todos")){
					if(cuentacontableTemp!=null && jComboBoxid_cuenta_contableFK_IdTipoFormaPagoTipoFormaPago!=null) {
						jComboBoxid_cuenta_contableFK_IdTipoFormaPagoTipoFormaPago.setSelectedItem(cuentacontableTemp);
					} else {
						if(jComboBoxid_cuenta_contableFK_IdTipoFormaPagoTipoFormaPago!=null) {
							//jComboBoxid_cuenta_contableFK_IdTipoFormaPagoTipoFormaPago.setSelectedItem(cuentacontableTemp);
							if(jComboBoxid_cuenta_contableFK_IdTipoFormaPagoTipoFormaPago.getItemCount()>0) {
								jComboBoxid_cuenta_contableFK_IdTipoFormaPagoTipoFormaPago.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualCuentaContableForeignKeyDescripcion(Long idCuentaContableSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			CuentaContable  cuentacontableTemp=null;

			for(CuentaContable cuentacontableAux:cuentacontablesForeignKey) {
				if(cuentacontableAux.getId()!=null && cuentacontableAux.getId().equals(idCuentaContableSeleccionado)) {
					cuentacontableTemp=cuentacontableAux;
					break;
				}
			}


			sDescripcion=CuentaContableConstantesFunciones.getCuentaContableDescripcion(cuentacontableTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualCuentaContableForeignKeyGenerico(Long idCuentaContableSeleccionado,JComboBox jComboBoxid_cuenta_contableTipoFormaPagoGenerico)throws Exception
	{
		try
		{
			CuentaContable  cuentacontableTemp=null;

			for(CuentaContable cuentacontableAux:cuentacontablesForeignKey) {
				if(cuentacontableAux.getId()!=null && cuentacontableAux.getId().equals(idCuentaContableSeleccionado)) {
					cuentacontableTemp=cuentacontableAux;
					break;
				}
			}

			if(cuentacontableTemp!=null) {
				jComboBoxid_cuenta_contableTipoFormaPagoGenerico.setSelectedItem(cuentacontableTemp);
			} else {
				if(jComboBoxid_cuenta_contableTipoFormaPagoGenerico!=null && jComboBoxid_cuenta_contableTipoFormaPagoGenerico.getItemCount()>0) {
					jComboBoxid_cuenta_contableTipoFormaPagoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	
	
	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarEmpresaForeignKey(TipoFormaPago tipoformapago,JComboBox jComboBoxid_empresaTipoFormaPagoGenerico)throws Exception
	{
		try
		{
			Empresa  empresaAux=new Empresa();

			if(jComboBoxid_empresaTipoFormaPagoGenerico==null) {
				empresaAux=(Empresa)this.jInternalFrameDetalleFormTipoFormaPago.jComboBoxid_empresaTipoFormaPago.getSelectedItem();
			} else {
				empresaAux=(Empresa)jComboBoxid_empresaTipoFormaPagoGenerico.getSelectedItem();
			}

			if(empresaAux!=null && empresaAux.getId()!=null) {
				tipoformapago.setid_empresa(empresaAux.getId());
				tipoformapago.setempresa_descripcion(TipoFormaPagoConstantesFunciones.getEmpresaDescripcion(empresaAux));
				tipoformapago.setEmpresa(empresaAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarSucursalForeignKey(TipoFormaPago tipoformapago,JComboBox jComboBoxid_sucursalTipoFormaPagoGenerico)throws Exception
	{
		try
		{
			Sucursal  sucursalAux=new Sucursal();

			if(jComboBoxid_sucursalTipoFormaPagoGenerico==null) {
				sucursalAux=(Sucursal)this.jInternalFrameDetalleFormTipoFormaPago.jComboBoxid_sucursalTipoFormaPago.getSelectedItem();
			} else {
				sucursalAux=(Sucursal)jComboBoxid_sucursalTipoFormaPagoGenerico.getSelectedItem();
			}

			if(sucursalAux!=null && sucursalAux.getId()!=null) {
				tipoformapago.setid_sucursal(sucursalAux.getId());
				tipoformapago.setsucursal_descripcion(TipoFormaPagoConstantesFunciones.getSucursalDescripcion(sucursalAux));
				tipoformapago.setSucursal(sucursalAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarModuloForeignKey(TipoFormaPago tipoformapago,JComboBox jComboBoxid_moduloTipoFormaPagoGenerico)throws Exception
	{
		try
		{
			Modulo  moduloAux=new Modulo();

			if(jComboBoxid_moduloTipoFormaPagoGenerico==null) {
				moduloAux=(Modulo)this.jInternalFrameDetalleFormTipoFormaPago.jComboBoxid_moduloTipoFormaPago.getSelectedItem();
			} else {
				moduloAux=(Modulo)jComboBoxid_moduloTipoFormaPagoGenerico.getSelectedItem();
			}

			if(moduloAux!=null) {
				tipoformapago.setid_modulo(moduloAux.getId());
				tipoformapago.setmodulo_descripcion(TipoFormaPagoConstantesFunciones.getModuloDescripcion(moduloAux));
				tipoformapago.setModulo(moduloAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTipoGrupoFormaPagoForeignKey(TipoFormaPago tipoformapago,JComboBox jComboBoxid_tipo_grupo_forma_pagoTipoFormaPagoGenerico)throws Exception
	{
		try
		{
			TipoGrupoFormaPago  tipogrupoformapagoAux=new TipoGrupoFormaPago();

			if(jComboBoxid_tipo_grupo_forma_pagoTipoFormaPagoGenerico==null) {
				tipogrupoformapagoAux=(TipoGrupoFormaPago)this.jInternalFrameDetalleFormTipoFormaPago.jComboBoxid_tipo_grupo_forma_pagoTipoFormaPago.getSelectedItem();
			} else {
				tipogrupoformapagoAux=(TipoGrupoFormaPago)jComboBoxid_tipo_grupo_forma_pagoTipoFormaPagoGenerico.getSelectedItem();
			}

			if(tipogrupoformapagoAux!=null && tipogrupoformapagoAux.getId()!=null) {
				tipoformapago.setid_tipo_grupo_forma_pago(tipogrupoformapagoAux.getId());
				tipoformapago.settipogrupoformapago_descripcion(TipoFormaPagoConstantesFunciones.getTipoGrupoFormaPagoDescripcion(tipogrupoformapagoAux));
				tipoformapago.setTipoGrupoFormaPago(tipogrupoformapagoAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTipoTransaccionModuloForeignKey(TipoFormaPago tipoformapago,JComboBox jComboBoxid_tipo_transaccion_moduloTipoFormaPagoGenerico)throws Exception
	{
		try
		{
			TipoTransaccionModulo  tipotransaccionmoduloAux=new TipoTransaccionModulo();

			if(jComboBoxid_tipo_transaccion_moduloTipoFormaPagoGenerico==null) {
				tipotransaccionmoduloAux=(TipoTransaccionModulo)this.jInternalFrameDetalleFormTipoFormaPago.jComboBoxid_tipo_transaccion_moduloTipoFormaPago.getSelectedItem();
			} else {
				tipotransaccionmoduloAux=(TipoTransaccionModulo)jComboBoxid_tipo_transaccion_moduloTipoFormaPagoGenerico.getSelectedItem();
			}

			if(tipotransaccionmoduloAux!=null) {
				tipoformapago.setid_tipo_transaccion_modulo(tipotransaccionmoduloAux.getId());
				tipoformapago.settipotransaccionmodulo_descripcion(TipoFormaPagoConstantesFunciones.getTipoTransaccionModuloDescripcion(tipotransaccionmoduloAux));
				tipoformapago.setTipoTransaccionModulo(tipotransaccionmoduloAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTransaccionForeignKey(TipoFormaPago tipoformapago,JComboBox jComboBoxid_transaccionTipoFormaPagoGenerico)throws Exception
	{
		try
		{
			Transaccion  transaccionAux=new Transaccion();

			if(jComboBoxid_transaccionTipoFormaPagoGenerico==null) {
				transaccionAux=(Transaccion)this.jInternalFrameDetalleFormTipoFormaPago.jComboBoxid_transaccionTipoFormaPago.getSelectedItem();
			} else {
				transaccionAux=(Transaccion)jComboBoxid_transaccionTipoFormaPagoGenerico.getSelectedItem();
			}

			if(transaccionAux!=null) {
				tipoformapago.setid_transaccion(transaccionAux.getId());
				tipoformapago.settransaccion_descripcion(TipoFormaPagoConstantesFunciones.getTransaccionDescripcion(transaccionAux));
				tipoformapago.setTransaccion(transaccionAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarCuentaContableForeignKey(TipoFormaPago tipoformapago,JComboBox jComboBoxid_cuenta_contableTipoFormaPagoGenerico)throws Exception
	{
		try
		{
			CuentaContable  cuentacontableAux=new CuentaContable();

			if(jComboBoxid_cuenta_contableTipoFormaPagoGenerico==null) {
				cuentacontableAux=(CuentaContable)this.jInternalFrameDetalleFormTipoFormaPago.jComboBoxid_cuenta_contableTipoFormaPago.getSelectedItem();
			} else {
				cuentacontableAux=(CuentaContable)jComboBoxid_cuenta_contableTipoFormaPagoGenerico.getSelectedItem();
			}

			if(cuentacontableAux!=null) {
				tipoformapago.setid_cuenta_contable(cuentacontableAux.getId());
				tipoformapago.setcuentacontable_descripcion(TipoFormaPagoConstantesFunciones.getCuentaContableDescripcion(cuentacontableAux));
				tipoformapago.setCuentaContable(cuentacontableAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	
	


		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameEmpresasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingEmpresa=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!TipoFormaPagoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormTipoFormaPago!=null) { 
							this.jInternalFrameDetalleFormTipoFormaPago.jComboBoxid_empresaTipoFormaPago.removeAllItems();

							for(Empresa empresa:this.empresasForeignKey) {
								this.jInternalFrameDetalleFormTipoFormaPago.jComboBoxid_empresaTipoFormaPago.addItem(empresa);
							}
						}
					}

					if(this.jInternalFrameDetalleFormTipoFormaPago!=null) { 
					}

					if(!TipoFormaPagoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameSucursalsForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingSucursal=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!TipoFormaPagoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormTipoFormaPago!=null) { 
							this.jInternalFrameDetalleFormTipoFormaPago.jComboBoxid_sucursalTipoFormaPago.removeAllItems();

							for(Sucursal sucursal:this.sucursalsForeignKey) {
								this.jInternalFrameDetalleFormTipoFormaPago.jComboBoxid_sucursalTipoFormaPago.addItem(sucursal);
							}
						}
					}

					if(this.jInternalFrameDetalleFormTipoFormaPago!=null) { 
					}

					if(!TipoFormaPagoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameModulosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingModulo=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!TipoFormaPagoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormTipoFormaPago!=null) { 
							this.jInternalFrameDetalleFormTipoFormaPago.jComboBoxid_moduloTipoFormaPago.removeAllItems();

							for(Modulo modulo:this.modulosForeignKey) {
								this.jInternalFrameDetalleFormTipoFormaPago.jComboBoxid_moduloTipoFormaPago.addItem(modulo);
							}
						}
					}

					if(this.jInternalFrameDetalleFormTipoFormaPago!=null) { 
					}

					if(!TipoFormaPagoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTipoGrupoFormaPagosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTipoGrupoFormaPago=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!TipoFormaPagoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormTipoFormaPago!=null) { 
							this.jInternalFrameDetalleFormTipoFormaPago.jComboBoxid_tipo_grupo_forma_pagoTipoFormaPago.removeAllItems();

							for(TipoGrupoFormaPago tipogrupoformapago:this.tipogrupoformapagosForeignKey) {
								this.jInternalFrameDetalleFormTipoFormaPago.jComboBoxid_tipo_grupo_forma_pagoTipoFormaPago.addItem(tipogrupoformapago);
							}
						}
					}

					if(this.jInternalFrameDetalleFormTipoFormaPago!=null) { 
					}

					if(!TipoFormaPagoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdTipoGrupoFormaPago") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!TipoFormaPagoJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_tipo_grupo_forma_pagoFK_IdTipoGrupoFormaPagoTipoFormaPago.removeAllItems();

							for(TipoGrupoFormaPago tipogrupoformapago:this.tipogrupoformapagosForeignKey) {
								this.jComboBoxid_tipo_grupo_forma_pagoFK_IdTipoGrupoFormaPagoTipoFormaPago.addItem(tipogrupoformapago);
							}
						}

						if(!TipoFormaPagoJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTipoTransaccionModulosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTipoTransaccionModulo=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!TipoFormaPagoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormTipoFormaPago!=null) { 
							this.jInternalFrameDetalleFormTipoFormaPago.jComboBoxid_tipo_transaccion_moduloTipoFormaPago.removeAllItems();

							for(TipoTransaccionModulo tipotransaccionmodulo:this.tipotransaccionmodulosForeignKey) {
								this.jInternalFrameDetalleFormTipoFormaPago.jComboBoxid_tipo_transaccion_moduloTipoFormaPago.addItem(tipotransaccionmodulo);
							}
						}
					}

					if(this.jInternalFrameDetalleFormTipoFormaPago!=null) { 
					}

					if(!TipoFormaPagoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdTipoTransaccionModulo") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!TipoFormaPagoJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_tipo_transaccion_moduloFK_IdTipoTransaccionModuloTipoFormaPago.removeAllItems();

							for(TipoTransaccionModulo tipotransaccionmodulo:this.tipotransaccionmodulosForeignKey) {
								this.jComboBoxid_tipo_transaccion_moduloFK_IdTipoTransaccionModuloTipoFormaPago.addItem(tipotransaccionmodulo);
							}
						}

						if(!TipoFormaPagoJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTransaccionsForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTransaccion=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!TipoFormaPagoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormTipoFormaPago!=null) { 
							this.jInternalFrameDetalleFormTipoFormaPago.jComboBoxid_transaccionTipoFormaPago.removeAllItems();

							for(Transaccion transaccion:this.transaccionsForeignKey) {
								this.jInternalFrameDetalleFormTipoFormaPago.jComboBoxid_transaccionTipoFormaPago.addItem(transaccion);
							}
						}
					}

					if(this.jInternalFrameDetalleFormTipoFormaPago!=null) { 
					}

					if(!TipoFormaPagoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdTransaccion") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!TipoFormaPagoJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_transaccionFK_IdTransaccionTipoFormaPago.removeAllItems();

							for(Transaccion transaccion:this.transaccionsForeignKey) {
								this.jComboBoxid_transaccionFK_IdTransaccionTipoFormaPago.addItem(transaccion);
							}
						}

						if(!TipoFormaPagoJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameCuentaContablesForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingCuentaContable=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!TipoFormaPagoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormTipoFormaPago!=null) { 
							this.jInternalFrameDetalleFormTipoFormaPago.jComboBoxid_cuenta_contableTipoFormaPago.removeAllItems();

							for(CuentaContable cuentacontable:this.cuentacontablesForeignKey) {
								this.jInternalFrameDetalleFormTipoFormaPago.jComboBoxid_cuenta_contableTipoFormaPago.addItem(cuentacontable);
							}
						}
					}

					if(this.jInternalFrameDetalleFormTipoFormaPago!=null) { 
					}

					if(!TipoFormaPagoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdTipoFormaPago") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!TipoFormaPagoJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_cuenta_contableFK_IdTipoFormaPagoTipoFormaPago.removeAllItems();

							for(CuentaContable cuentacontable:this.cuentacontablesForeignKey) {
								this.jComboBoxid_cuenta_contableFK_IdTipoFormaPagoTipoFormaPago.addItem(cuentacontable);
							}
						}

						if(!TipoFormaPagoJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

	


		public void setSelectedItemCombosFrameEmpresaForeignKey(Empresa empresa,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormTipoFormaPago!=null) {
							this.jInternalFrameDetalleFormTipoFormaPago.jComboBoxid_empresaTipoFormaPago.setSelectedItem(empresa);
						}
					} else {
						if(this.jInternalFrameDetalleFormTipoFormaPago!=null) {
							this.jInternalFrameDetalleFormTipoFormaPago.jComboBoxid_empresaTipoFormaPago.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameSucursalForeignKey(Sucursal sucursal,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormTipoFormaPago!=null) {
							this.jInternalFrameDetalleFormTipoFormaPago.jComboBoxid_sucursalTipoFormaPago.setSelectedItem(sucursal);
						}
					} else {
						if(this.jInternalFrameDetalleFormTipoFormaPago!=null) {
							this.jInternalFrameDetalleFormTipoFormaPago.jComboBoxid_sucursalTipoFormaPago.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameModuloForeignKey(Modulo modulo,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormTipoFormaPago!=null) {
							this.jInternalFrameDetalleFormTipoFormaPago.jComboBoxid_moduloTipoFormaPago.setSelectedItem(modulo);
						}
					} else {
						if(this.jInternalFrameDetalleFormTipoFormaPago!=null) {
							this.jInternalFrameDetalleFormTipoFormaPago.jComboBoxid_moduloTipoFormaPago.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTipoGrupoFormaPagoForeignKey(TipoGrupoFormaPago tipogrupoformapago,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormTipoFormaPago!=null) {
							this.jInternalFrameDetalleFormTipoFormaPago.jComboBoxid_tipo_grupo_forma_pagoTipoFormaPago.setSelectedItem(tipogrupoformapago);
						}
					} else {
						if(this.jInternalFrameDetalleFormTipoFormaPago!=null) {
							this.jInternalFrameDetalleFormTipoFormaPago.jComboBoxid_tipo_grupo_forma_pagoTipoFormaPago.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_tipo_grupo_forma_pagoFK_IdTipoGrupoFormaPagoTipoFormaPago.setSelectedItem(tipogrupoformapago);
						} else {
							this.jComboBoxid_tipo_grupo_forma_pagoFK_IdTipoGrupoFormaPagoTipoFormaPago.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTipoTransaccionModuloForeignKey(TipoTransaccionModulo tipotransaccionmodulo,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormTipoFormaPago!=null) {
							this.jInternalFrameDetalleFormTipoFormaPago.jComboBoxid_tipo_transaccion_moduloTipoFormaPago.setSelectedItem(tipotransaccionmodulo);
						}
					} else {
						if(this.jInternalFrameDetalleFormTipoFormaPago!=null) {
							this.jInternalFrameDetalleFormTipoFormaPago.jComboBoxid_tipo_transaccion_moduloTipoFormaPago.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_tipo_transaccion_moduloFK_IdTipoTransaccionModuloTipoFormaPago.setSelectedItem(tipotransaccionmodulo);
						} else {
							this.jComboBoxid_tipo_transaccion_moduloFK_IdTipoTransaccionModuloTipoFormaPago.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTransaccionForeignKey(Transaccion transaccion,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormTipoFormaPago!=null) {
							this.jInternalFrameDetalleFormTipoFormaPago.jComboBoxid_transaccionTipoFormaPago.setSelectedItem(transaccion);
						}
					} else {
						if(this.jInternalFrameDetalleFormTipoFormaPago!=null) {
							this.jInternalFrameDetalleFormTipoFormaPago.jComboBoxid_transaccionTipoFormaPago.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_transaccionFK_IdTransaccionTipoFormaPago.setSelectedItem(transaccion);
						} else {
							this.jComboBoxid_transaccionFK_IdTransaccionTipoFormaPago.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameCuentaContableForeignKey(CuentaContable cuentacontable,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormTipoFormaPago!=null) {
							this.jInternalFrameDetalleFormTipoFormaPago.jComboBoxid_cuenta_contableTipoFormaPago.setSelectedItem(cuentacontable);
						}
					} else {
						if(this.jInternalFrameDetalleFormTipoFormaPago!=null) {
							this.jInternalFrameDetalleFormTipoFormaPago.jComboBoxid_cuenta_contableTipoFormaPago.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_cuenta_contableFK_IdTipoFormaPagoTipoFormaPago.setSelectedItem(cuentacontable);
						} else {
							this.jComboBoxid_cuenta_contableFK_IdTipoFormaPagoTipoFormaPago.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

	


	
	public void refrescarForeignKeysDescripcionesTipoFormaPago() throws Exception {
		//SI FUNCIONA DEEPLOAD ESTO VA AL ULTIMO
		if(Constantes.ISUSAEJBLOGICLAYER) {
			TipoFormaPagoConstantesFunciones.refrescarForeignKeysDescripcionesTipoFormaPago(this.tipoformapagoLogic.getTipoFormaPagos());
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			TipoFormaPagoConstantesFunciones.refrescarForeignKeysDescripcionesTipoFormaPago(this.tipoformapagos);
		}
		
		/*
		ArrayList<Classe> classes=new ArrayList<Classe>();
		
		classes.add(new Classe(Empresa.class));
		classes.add(new Classe(Sucursal.class));
		classes.add(new Classe(Modulo.class));
		classes.add(new Classe(TipoGrupoFormaPago.class));
		classes.add(new Classe(TipoTransaccionModulo.class));
		classes.add(new Classe(Transaccion.class));
		classes.add(new Classe(CuentaContable.class));
			
		if(Constantes.ISUSAEJBLOGICLAYER) {
			//USA LOS OBJETOS DE LOGIC DIRECTAMENTE
			//tipoformapagoLogic.setTipoFormaPagos(this.tipoformapagos);
			tipoformapagoLogic.deepLoadsWithConnection(false, DeepLoadType.INCLUDE, classes,"");
	
		} else if(Constantes.ISUSAEJBREMOTE) {
		} else if(Constantes.ISUSAEJBHOME) {
		}
		*/				
	}	
	
	
	
	public Integer getiNumeroPaginacion() {
		return iNumeroPaginacion;
	}

	public void setiNumeroPaginacion(Integer iNumeroPaginacion) {
		this.iNumeroPaginacion= iNumeroPaginacion;
	}
	
	public Integer getiNumeroPaginacionPagina() {
		return iNumeroPaginacionPagina;
	}

	public void setiNumeroPaginacionPagina(Integer iNumeroPaginacionPagina) {
		this.iNumeroPaginacionPagina= iNumeroPaginacionPagina;
	}
	
	
	public Boolean getIsSeleccionarTodos() {
		return this.isSeleccionarTodos;
	}

	public void setIsSeleccionarTodos(Boolean isSeleccionarTodos) {
		this.isSeleccionarTodos= isSeleccionarTodos;
	}
	
	public Boolean getEsControlTabla() {
		return this.esControlTabla;
	}

	public void setEsControlTabla(Boolean esControlTabla) {
		this.esControlTabla= esControlTabla;
	}
	
	public Boolean getIsSeleccionados() {
		return this.isSeleccionados;
	}

	public void setIsSeleccionados(Boolean isSeleccionados) {
		this.isSeleccionados= isSeleccionados;
	}
	
	public Boolean getIsPostAccionNuevo() {
		return this.isPostAccionNuevo;
	}

	public void setIsPostAccionNuevo(Boolean isPostAccionNuevo) {
		this.isPostAccionNuevo= isPostAccionNuevo;
	}
	
	public Boolean getIsPostAccionSinCerrar() {
		return this.isPostAccionSinCerrar;
	}

	public void setIsPostAccionSinCerrar(Boolean isPostAccionSinCerrar) {
		this.isPostAccionSinCerrar= isPostAccionSinCerrar;
	}
	
	public Boolean getIsPostAccionSinMensaje() {
		return this.isPostAccionSinMensaje;
	}

	public void setIsPostAccionSinMensaje(Boolean isPostAccionSinMensaje) {
		this.isPostAccionSinMensaje= isPostAccionSinMensaje;
	}
	
	public Boolean getConGraficoReporte() {
		return this.conGraficoReporte;
	}

	public void setConGraficoReporte(Boolean conGraficoReporte) {
		this.conGraficoReporte= conGraficoReporte;
	}
	
	
	public ArrayList<Reporte> gettiposArchivosReportes() {
		return this.tiposArchivosReportes;
	}
	
	public void settiposArchivosReportes(ArrayList<Reporte> tiposArchivosReportes) {
		this.tiposArchivosReportes = tiposArchivosReportes;
	}
	
	//TIPOS ARCHIVOS DINAMICOS
	public ArrayList<Reporte> gettiposArchivosReportesDinamico() {
		return this.tiposArchivosReportesDinamico;
	}
	
	public void settiposArchivosReportesDinamico(ArrayList<Reporte> tiposArchivosReportesDinamico) {
		this.tiposArchivosReportesDinamico = tiposArchivosReportesDinamico;
	}
	
	//TIPOS REPORTES
	public ArrayList<Reporte> gettiposReportes() {
		return this.tiposReportes;
	}
	
	public void settiposReportes(ArrayList<Reporte> tiposReportes) {
		this.tiposReportes = tiposReportes;
	}
	
	//TIPOS REPORTES
	public ArrayList<Reporte> gettiposReportesDinamico() {
		return this.tiposReportesDinamico;
	}
	
	public void settiposReportesDinamico(ArrayList<Reporte> tiposReportesDinamico) {
		this.tiposReportesDinamico = tiposReportesDinamico;
	}
	
	//TIPOS GRAFICOS REPORTES
	public ArrayList<Reporte> gettiposGraficosReportes() {
		return this.tiposGraficosReportes;
	}
	
	public void settiposGraficosReportes(ArrayList<Reporte> tiposGraficosReportes) {
		this.tiposGraficosReportes = tiposGraficosReportes;
	}
	
	public ArrayList<Reporte> gettiposPaginacion() {
		return this.tiposPaginacion;
	}
	
	public void settiposPaginacion(ArrayList<Reporte> tiposPaginacion) {
		this.tiposPaginacion = tiposPaginacion;
	}
	
	public ArrayList<Reporte> gettiposRelaciones() {
		return this.tiposRelaciones;
	}
	
	public void settiposRelaciones(ArrayList<Reporte> tiposRelaciones) {
		this.tiposRelaciones= tiposRelaciones;
	}
	
	public ArrayList<Reporte> gettiposAcciones() {
		return this.tiposAcciones;
	}
	
	public void settiposAcciones(ArrayList<Reporte> tiposAcciones) {
		this.tiposAcciones = tiposAcciones;
	}
	
	public ArrayList<Reporte> gettiposAccionesFormulario() {
		return this.tiposAccionesFormulario;
	}
	
	public void settiposAccionesFormulario(ArrayList<Reporte> tiposAccionesFormulario) {
		this.tiposAccionesFormulario = tiposAccionesFormulario;
	}
	
	public ArrayList<Reporte> gettiposSeleccionar() {
		return this.tiposSeleccionar;
	}
	
	public void settiposSeleccionar(ArrayList<Reporte> tiposSeleccionar) {
		this.tiposSeleccionar = tiposSeleccionar;
	}
	
	public ArrayList<Reporte> gettiposColumnasSelect() {
		return this.tiposColumnasSelect;
	}
	
	public void settiposColumnasSelect(ArrayList<Reporte> tiposColumnasSelect) {
		this.tiposColumnasSelect = tiposColumnasSelect;
	}
		
	public ArrayList<Reporte> gettiposRelacionesSelect() {
		return this.tiposRelacionesSelect;
	}
	
	public void settiposRelacionesSelect(ArrayList<Reporte> tiposRelacionesSelect) {
		this.tiposRelacionesSelect = tiposRelacionesSelect;
	}
	
	public Long getIIdUsuarioSesion() {
		return lIdUsuarioSesion;
	}

	public void setIIdUsuarioSesion(Long lIdUsuarioSesion) {
		this.lIdUsuarioSesion = lIdUsuarioSesion;
	}
	
	
	public List<Accion> getAccions() {
		return this.accions;
	}

	public void setAccions(List<Accion> accions) {
		this.accions = accions;
	}
	
	public List<Accion> getAccionsFormulario() {
		return this.accionsFormulario;
	}

	public void setAccionsFormulario(List<Accion> accionsFormulario) {
		this.accionsFormulario = accionsFormulario;
	}
	
	public String getsAccionMantenimiento() {
		return sAccionMantenimiento;
	}

	public void setsAccionMantenimiento(String sAccionMantenimiento) {
		this.sAccionMantenimiento = sAccionMantenimiento;
	}

	public String getsAccionBusqueda() {
		return sAccionBusqueda;
	}

	public void setsAccionBusqueda(String sAccionBusqueda) {
		this.sAccionBusqueda = sAccionBusqueda;
	}

	public String getsAccionAdicional() {
		return sAccionAdicional;
	}

	public void setsAccionAdicional(String sAccionAdicional) {
		this.sAccionAdicional = sAccionAdicional;
	}

	public String getsUltimaBusqueda() {
		return sUltimaBusqueda;
	}

	public void setsUltimaBusqueda(String sUltimaBusqueda) {
		this.sUltimaBusqueda = sUltimaBusqueda;
	}
	
	public String getsTipoArchivoReporte() {
		return sTipoArchivoReporte;
	}

	public void setsTipoArchivoReporte(String sTipoArchivoReporte) {
		this.sTipoArchivoReporte = sTipoArchivoReporte;
	}
	
	public String getsTipoArchivoReporteDinamico() {
		return sTipoArchivoReporteDinamico;
	}

	public void setsTipoArchivoReporteDinamico(String sTipoArchivoReporteDinamico) {
		this.sTipoArchivoReporteDinamico = sTipoArchivoReporteDinamico;
	}
	
	public String getsTipoReporte() {
		return sTipoReporte;
	}

	public void setsTipoReporte(String sTipoReporte) {
		this.sTipoReporte = sTipoReporte;
	}
	
	public String getsTipoReporteDinamico() {
		return sTipoReporteDinamico;
	}

	public void setsTipoReporteDinamico(String sTipoReporteDinamico) {
		this.sTipoReporteDinamico = sTipoReporteDinamico;
	}
	
	public String getsTipoGraficoReporte() {
		return sTipoGraficoReporte;
	}

	public void setsTipoGraficoReporte(String sTipoGraficoReporte) {
		this.sTipoGraficoReporte = sTipoGraficoReporte;
	}
	
	public String getsTipoPaginacion() {
		return sTipoPaginacion;
	}

	public void setsTipoPaginacion(String sTipoPaginacion) {
		this.sTipoPaginacion = sTipoPaginacion;
	}
	
	public String getsTipoRelacion() {
		return sTipoRelacion;
	}

	public void setsTipoRelacion(String sTipoRelacion) {
		this.sTipoRelacion = sTipoRelacion;
	}
	
	public String getsTipoAccion() {
		return sTipoAccion;
	}

	public void setsTipoAccion(String sTipoAccion) {
		this.sTipoAccion = sTipoAccion;
	}
	
	public String getsTipoAccionFormulario() {
		return sTipoAccionFormulario;
	}

	public void setsTipoAccionFormulario(String sTipoAccionFormulario) {
		this.sTipoAccionFormulario = sTipoAccionFormulario;
	}
	
	public String getsTipoSeleccionar() {
		return sTipoSeleccionar;
	}

	public void setsTipoSeleccionar(String sTipoSeleccionar) {
		this.sTipoSeleccionar = sTipoSeleccionar;
	}
	
	public String getsValorCampoGeneral() {
		return sValorCampoGeneral;
	}

	public void setsValorCampoGeneral(String sValorCampoGeneral) {
		this.sValorCampoGeneral = sValorCampoGeneral;
	}			

	public String getsDetalleReporte() {
		return sDetalleReporte;
	}

	public void setsDetalleReporte(String sDetalleReporte) {
		this.sDetalleReporte = sDetalleReporte;
	}
	
	
	public String getsTipoReporteExtra() {
		return sTipoReporteExtra;
	}

	public void setsTipoReporteExtra(String sTipoReporteExtra) {
		this.sTipoReporteExtra = sTipoReporteExtra;
	}
	
	public Boolean getesReporteDinamico() {
		return esReporteDinamico;
	}	
	
	public void setesReporteDinamico(Boolean esReporteDinamico) {
		this.esReporteDinamico = esReporteDinamico;
	}
	
	public Boolean getesRecargarFks() {
		return esRecargarFks;
	}	
	
	public void setesRecargarFks(Boolean esRecargarFks) {
		this.esRecargarFks = esRecargarFks;
	}
	
	public Boolean getesReporteAccionProceso() {
		return esReporteAccionProceso;
	}	
	
	public void setesReporteAccionProceso(Boolean esReporteAccionProceso) {
		this.esReporteAccionProceso= esReporteAccionProceso;
	}
		
	public TipoFormaPagoParameterReturnGeneral getTipoFormaPagoParameterGeneral() {
		return this.tipoformapagoParameterGeneral;
	}
	
	public void setTipoFormaPagoParameterGeneral(TipoFormaPagoParameterReturnGeneral tipoformapagoParameterGeneral) {
		this.tipoformapagoParameterGeneral = tipoformapagoParameterGeneral;
	}
	
	public String getsPathReporteDinamico() {
		return sPathReporteDinamico;
	}

	public void setsPathReporteDinamico(String sPathReporteDinamico) {
		this.sPathReporteDinamico = sPathReporteDinamico;
	}
		
	public Boolean getisMostrarNumeroPaginacion() {
		return isMostrarNumeroPaginacion;
	}

	public void setisMostrarNumeroPaginacion(Boolean isMostrarNumeroPaginacion) {
		this.isMostrarNumeroPaginacion = isMostrarNumeroPaginacion;
	}
	
	public Mensaje getMensaje() {
		return mensaje;
	}

	public void setMensaje(Mensaje mensaje) {
		this.mensaje = mensaje;
	}
	
	public Boolean getIsPermisoTodoTipoFormaPago() {
		return isPermisoTodoTipoFormaPago;
	}

	public void setIsPermisoTodoTipoFormaPago(Boolean isPermisoTodoTipoFormaPago) {
		this.isPermisoTodoTipoFormaPago = isPermisoTodoTipoFormaPago;
	}

	public Boolean getIsPermisoNuevoTipoFormaPago() {
		return isPermisoNuevoTipoFormaPago;
	}

	public void setIsPermisoNuevoTipoFormaPago(Boolean isPermisoNuevoTipoFormaPago) {
		this.isPermisoNuevoTipoFormaPago = isPermisoNuevoTipoFormaPago;
	}

	public Boolean getIsPermisoActualizarTipoFormaPago() {
		return isPermisoActualizarTipoFormaPago;
	}

	public void setIsPermisoActualizarTipoFormaPago(Boolean isPermisoActualizarTipoFormaPago) {
		this.isPermisoActualizarTipoFormaPago = isPermisoActualizarTipoFormaPago;
	}

	public Boolean getIsPermisoEliminarTipoFormaPago() {
		return isPermisoEliminarTipoFormaPago;
	}

	public void setIsPermisoEliminarTipoFormaPago(Boolean isPermisoEliminarTipoFormaPago) {
		this.isPermisoEliminarTipoFormaPago = isPermisoEliminarTipoFormaPago;
	}

	public Boolean getIsPermisoGuardarCambiosTipoFormaPago() {
		return isPermisoGuardarCambiosTipoFormaPago;
	}

	public void setIsPermisoGuardarCambiosTipoFormaPago(Boolean isPermisoGuardarCambiosTipoFormaPago) {
		this.isPermisoGuardarCambiosTipoFormaPago = isPermisoGuardarCambiosTipoFormaPago;
	}
	
	public Boolean getIsPermisoConsultaTipoFormaPago() {
		return isPermisoConsultaTipoFormaPago;
	}

	public void setIsPermisoConsultaTipoFormaPago(Boolean isPermisoConsultaTipoFormaPago) {
		this.isPermisoConsultaTipoFormaPago = isPermisoConsultaTipoFormaPago;
	}

	public Boolean getIsPermisoBusquedaTipoFormaPago() {
		return isPermisoBusquedaTipoFormaPago;
	}

	public void setIsPermisoBusquedaTipoFormaPago(Boolean isPermisoBusquedaTipoFormaPago) {
		this.isPermisoBusquedaTipoFormaPago = isPermisoBusquedaTipoFormaPago;
	}

	public Boolean getIsPermisoReporteTipoFormaPago() {
		return isPermisoReporteTipoFormaPago;
	}

	public void setIsPermisoReporteTipoFormaPago(Boolean isPermisoReporteTipoFormaPago) {
		this.isPermisoReporteTipoFormaPago = isPermisoReporteTipoFormaPago;
	}
	
	public Boolean getIsPermisoPaginacionMedioTipoFormaPago() {
		return isPermisoPaginacionMedioTipoFormaPago;
	}

	public void setIsPermisoPaginacionMedioTipoFormaPago(Boolean isPermisoPaginacionMedioTipoFormaPago) {
		this.isPermisoPaginacionMedioTipoFormaPago = isPermisoPaginacionMedioTipoFormaPago;
	}
	
	public Boolean getIsPermisoPaginacionTodoTipoFormaPago() {
		return isPermisoPaginacionTodoTipoFormaPago;
	}

	public void setIsPermisoPaginacionTodoTipoFormaPago(Boolean isPermisoPaginacionTodoTipoFormaPago) {
		this.isPermisoPaginacionTodoTipoFormaPago = isPermisoPaginacionTodoTipoFormaPago;
	}
	
	public Boolean getIsPermisoPaginacionAltoTipoFormaPago() {
		return isPermisoPaginacionAltoTipoFormaPago;
	}

	public void setIsPermisoPaginacionAltoTipoFormaPago(Boolean isPermisoPaginacionAltoTipoFormaPago) {
		this.isPermisoPaginacionAltoTipoFormaPago = isPermisoPaginacionAltoTipoFormaPago;
	}
	
	public Boolean getIsPermisoCopiarTipoFormaPago() {
		return isPermisoCopiarTipoFormaPago;
	}

	public void setIsPermisoCopiarTipoFormaPago(Boolean isPermisoCopiarTipoFormaPago) {
		this.isPermisoCopiarTipoFormaPago = isPermisoCopiarTipoFormaPago;
	}
	
	public Boolean getIsPermisoVerFormTipoFormaPago() {
		return isPermisoVerFormTipoFormaPago;
	}

	public void setIsPermisoVerFormTipoFormaPago(Boolean isPermisoVerFormTipoFormaPago) {
		this.isPermisoVerFormTipoFormaPago = isPermisoVerFormTipoFormaPago;
	}
	
	public Boolean getIsPermisoDuplicarTipoFormaPago() {
		return isPermisoDuplicarTipoFormaPago;
	}

	public void setIsPermisoDuplicarTipoFormaPago(Boolean isPermisoDuplicarTipoFormaPago) {
		this.isPermisoDuplicarTipoFormaPago = isPermisoDuplicarTipoFormaPago;
	}
	
	public Boolean getIsPermisoOrdenTipoFormaPago() {
		return isPermisoOrdenTipoFormaPago;
	}

	public void setIsPermisoOrdenTipoFormaPago(Boolean isPermisoOrdenTipoFormaPago) {
		this.isPermisoOrdenTipoFormaPago = isPermisoOrdenTipoFormaPago;
	}
	
	public String getsVisibilidadTablaBusquedas() {
		return sVisibilidadTablaBusquedas;
	}

	public void setsVisibilidadTablaBusquedas(String sVisibilidadTablaBusquedas) {
		this.sVisibilidadTablaBusquedas = sVisibilidadTablaBusquedas;
	}
	
	public String getsVisibilidadTablaElementos() {
		return sVisibilidadTablaElementos;
	}

	public void setsVisibilidadTablaElementos(String sVisibilidadTablaElementos) {
		this.sVisibilidadTablaElementos = sVisibilidadTablaElementos;
	}

	public String getsVisibilidadTablaAcciones() {
		return sVisibilidadTablaAcciones;
	}

	public void setsVisibilidadTablaAcciones(String sVisibilidadTablaAcciones) {
		this.sVisibilidadTablaAcciones = sVisibilidadTablaAcciones;
	}
	
	public Boolean getIsVisibilidadCeldaNuevoTipoFormaPago() {
		return isVisibilidadCeldaNuevoTipoFormaPago;
	}

	public void setIsVisibilidadCeldaNuevoTipoFormaPago(Boolean isVisibilidadCeldaNuevoTipoFormaPago) {
		this.isVisibilidadCeldaNuevoTipoFormaPago = isVisibilidadCeldaNuevoTipoFormaPago;
	}
	
	public Boolean getIsVisibilidadCeldaDuplicarTipoFormaPago() {
		return isVisibilidadCeldaDuplicarTipoFormaPago;
	}

	public void setIsVisibilidadCeldaDuplicarTipoFormaPago(Boolean isVisibilidadCeldaDuplicarTipoFormaPago) {
		this.isVisibilidadCeldaDuplicarTipoFormaPago = isVisibilidadCeldaDuplicarTipoFormaPago;
	}
	
	public Boolean getIsVisibilidadCeldaCopiarTipoFormaPago() {
		return isVisibilidadCeldaCopiarTipoFormaPago;
	}

	public void setIsVisibilidadCeldaCopiarTipoFormaPago(Boolean isVisibilidadCeldaCopiarTipoFormaPago) {
		this.isVisibilidadCeldaCopiarTipoFormaPago = isVisibilidadCeldaCopiarTipoFormaPago;
	}
	
	public Boolean getIsVisibilidadCeldaVerFormTipoFormaPago() {
		return isVisibilidadCeldaVerFormTipoFormaPago;
	}

	public void setIsVisibilidadCeldaVerFormTipoFormaPago(Boolean isVisibilidadCeldaVerFormTipoFormaPago) {
		this.isVisibilidadCeldaVerFormTipoFormaPago = isVisibilidadCeldaVerFormTipoFormaPago;
	}
	
	public Boolean getIsVisibilidadCeldaOrdenTipoFormaPago() {
		return isVisibilidadCeldaOrdenTipoFormaPago;
	}

	public void setIsVisibilidadCeldaOrdenTipoFormaPago(Boolean isVisibilidadCeldaOrdenTipoFormaPago) {
		this.isVisibilidadCeldaOrdenTipoFormaPago = isVisibilidadCeldaOrdenTipoFormaPago;
	}
	
	public Boolean getIsVisibilidadCeldaNuevoRelacionesTipoFormaPago() {
		return isVisibilidadCeldaNuevoRelacionesTipoFormaPago;
	}

	public void setIsVisibilidadCeldaNuevoRelacionesTipoFormaPago(Boolean isVisibilidadCeldaNuevoRelacionesTipoFormaPago) {
		this.isVisibilidadCeldaNuevoRelacionesTipoFormaPago = isVisibilidadCeldaNuevoRelacionesTipoFormaPago;
	}
	
	public Boolean getIsVisibilidadCeldaModificarTipoFormaPago() {
		return isVisibilidadCeldaModificarTipoFormaPago;
	}

	public void setIsVisibilidadCeldaModificarTipoFormaPago(Boolean isVisibilidadCeldaModificarTipoFormaPago) {
		this.isVisibilidadCeldaModificarTipoFormaPago = isVisibilidadCeldaModificarTipoFormaPago;
	}
	
	public Boolean getIsVisibilidadCeldaActualizarTipoFormaPago() {
		return isVisibilidadCeldaActualizarTipoFormaPago;
	}

	public void setIsVisibilidadCeldaActualizarTipoFormaPago(Boolean isVisibilidadCeldaActualizarTipoFormaPago) {
		this.isVisibilidadCeldaActualizarTipoFormaPago = isVisibilidadCeldaActualizarTipoFormaPago;
	}

	public Boolean getIsVisibilidadCeldaEliminarTipoFormaPago() {
		return isVisibilidadCeldaEliminarTipoFormaPago;
	}

	public void setIsVisibilidadCeldaEliminarTipoFormaPago(Boolean isVisibilidadCeldaEliminarTipoFormaPago) {
		this.isVisibilidadCeldaEliminarTipoFormaPago = isVisibilidadCeldaEliminarTipoFormaPago;
	}

	public Boolean getIsVisibilidadCeldaCancelarTipoFormaPago() {
		return isVisibilidadCeldaCancelarTipoFormaPago;
	}

	public void setIsVisibilidadCeldaCancelarTipoFormaPago(Boolean isVisibilidadCeldaCancelarTipoFormaPago) {
		this.isVisibilidadCeldaCancelarTipoFormaPago = isVisibilidadCeldaCancelarTipoFormaPago;
	}

	public Boolean getIsVisibilidadCeldaGuardarTipoFormaPago() {
		return isVisibilidadCeldaGuardarTipoFormaPago;
	}

	public void setIsVisibilidadCeldaGuardarTipoFormaPago(Boolean isVisibilidadCeldaGuardarTipoFormaPago) {
		this.isVisibilidadCeldaGuardarTipoFormaPago = isVisibilidadCeldaGuardarTipoFormaPago;
	}
	
	public Boolean getIsVisibilidadCeldaGuardarCambiosTipoFormaPago() {
		return isVisibilidadCeldaGuardarCambiosTipoFormaPago;
	}

	public void setIsVisibilidadCeldaGuardarCambiosTipoFormaPago(Boolean isVisibilidadCeldaGuardarCambiosTipoFormaPago) {
		this.isVisibilidadCeldaGuardarCambiosTipoFormaPago = isVisibilidadCeldaGuardarCambiosTipoFormaPago;
	}
		
	public TipoFormaPagoSessionBean gettipoformapagoSessionBean() {
		return this.tipoformapagoSessionBean;
	}
	
	public void settipoformapagoSessionBean(TipoFormaPagoSessionBean tipoformapagoSessionBean) {
		this.tipoformapagoSessionBean=tipoformapagoSessionBean;
	}
	
	
	public Boolean getisVisibilidadBusquedaPorNombre() {
		return this.isVisibilidadBusquedaPorNombre;
	}

	public void setisVisibilidadBusquedaPorNombre(Boolean isVisibilidadBusquedaPorNombre) {
		this.isVisibilidadBusquedaPorNombre=isVisibilidadBusquedaPorNombre;
	}

	public Boolean getisVisibilidadBusquedaPorSiglas() {
		return this.isVisibilidadBusquedaPorSiglas;
	}

	public void setisVisibilidadBusquedaPorSiglas(Boolean isVisibilidadBusquedaPorSiglas) {
		this.isVisibilidadBusquedaPorSiglas=isVisibilidadBusquedaPorSiglas;
	}

	public Boolean getisVisibilidadFK_IdEmpresa() {
		return this.isVisibilidadFK_IdEmpresa;
	}

	public void setisVisibilidadFK_IdEmpresa(Boolean isVisibilidadFK_IdEmpresa) {
		this.isVisibilidadFK_IdEmpresa=isVisibilidadFK_IdEmpresa;
	}

	public Boolean getisVisibilidadFK_IdModulo() {
		return this.isVisibilidadFK_IdModulo;
	}

	public void setisVisibilidadFK_IdModulo(Boolean isVisibilidadFK_IdModulo) {
		this.isVisibilidadFK_IdModulo=isVisibilidadFK_IdModulo;
	}

	public Boolean getisVisibilidadFK_IdSucursal() {
		return this.isVisibilidadFK_IdSucursal;
	}

	public void setisVisibilidadFK_IdSucursal(Boolean isVisibilidadFK_IdSucursal) {
		this.isVisibilidadFK_IdSucursal=isVisibilidadFK_IdSucursal;
	}

	public Boolean getisVisibilidadFK_IdTipoFormaPago() {
		return this.isVisibilidadFK_IdTipoFormaPago;
	}

	public void setisVisibilidadFK_IdTipoFormaPago(Boolean isVisibilidadFK_IdTipoFormaPago) {
		this.isVisibilidadFK_IdTipoFormaPago=isVisibilidadFK_IdTipoFormaPago;
	}

	public Boolean getisVisibilidadFK_IdTipoGrupoFormaPago() {
		return this.isVisibilidadFK_IdTipoGrupoFormaPago;
	}

	public void setisVisibilidadFK_IdTipoGrupoFormaPago(Boolean isVisibilidadFK_IdTipoGrupoFormaPago) {
		this.isVisibilidadFK_IdTipoGrupoFormaPago=isVisibilidadFK_IdTipoGrupoFormaPago;
	}

	public Boolean getisVisibilidadFK_IdTipoTransaccionModulo() {
		return this.isVisibilidadFK_IdTipoTransaccionModulo;
	}

	public void setisVisibilidadFK_IdTipoTransaccionModulo(Boolean isVisibilidadFK_IdTipoTransaccionModulo) {
		this.isVisibilidadFK_IdTipoTransaccionModulo=isVisibilidadFK_IdTipoTransaccionModulo;
	}

	public Boolean getisVisibilidadFK_IdTransaccion() {
		return this.isVisibilidadFK_IdTransaccion;
	}

	public void setisVisibilidadFK_IdTransaccion(Boolean isVisibilidadFK_IdTransaccion) {
		this.isVisibilidadFK_IdTransaccion=isVisibilidadFK_IdTransaccion;
	}

	
	
	public void setVariablesFormularioToObjetoActualForeignKeysTipoFormaPago(TipoFormaPago tipoformapago)throws Exception {
		try {
			
				this.setActualParaGuardarEmpresaForeignKey(tipoformapago,null);
				this.setActualParaGuardarSucursalForeignKey(tipoformapago,null);
				this.setActualParaGuardarModuloForeignKey(tipoformapago,null);
				this.setActualParaGuardarTipoGrupoFormaPagoForeignKey(tipoformapago,null);
				this.setActualParaGuardarTipoTransaccionModuloForeignKey(tipoformapago,null);
				this.setActualParaGuardarTransaccionForeignKey(tipoformapago,null);
				this.setActualParaGuardarCuentaContableForeignKey(tipoformapago,null);
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void cargarLicenciaCliente(DatosCliente datosCliente) throws Exception {
		Boolean existe=false;
			
		try {
				InputStream reportFile=null;
				
				String sPath=this.parametroGeneralUsuario.getpath_exportar()+"erp_bydan/license/license.xml";
				
				reportFile = new FileInputStream(sPath);
				
				Document documentBuilder=null;
				
				if(this.constantes2.DOCUMENT_BUILDER==null) {
					documentBuilder=Funciones2.parseXml(reportFile);
				} else {
					documentBuilder=this.constantes2.DOCUMENT_BUILDER;
				}
				
				//GlobalSeguridad.readXml(documentBuilder);
				
				String sNamePCServerLicencia="";
				String sClaveSistemaLicencia="";
				Date dFechaServerLicencia=null;
				
				//CARGAR ELEMENTOS DE LICENCIA
				NodeList nodeList = documentBuilder.getElementsByTagName("Licencia");
				
				for (int iIndice = 0; iIndice < nodeList.getLength(); iIndice++) {
					Node node = nodeList.item(iIndice);
				
					if (node.getNodeType() == Node.ELEMENT_NODE) {
						Element element = (Element) node;
						 
						sNamePCServerLicencia=element.getElementsByTagName("NombrePc").item(0).getTextContent();
						sClaveSistemaLicencia=element.getElementsByTagName("ClaveSistema").item(0).getTextContent();
						
						existe=true;
						break;
					}
				}														
			
				
			if(existe) {
				datosCliente.setsClaveSistema(sClaveSistemaLicencia);
				
				if(!datosCliente.getsNamePCServer().equals(sNamePCServerLicencia)
					&& !datosCliente.getsNamePCServer().equals("")) {
					
					datosCliente.setsNamePCServer(sNamePCServerLicencia);
				}
			} else {
				throw new Exception("NO EXISTE LICENCIA O NO ESTA BIEN FORMADO");
			}
		} catch(Exception e) {
			throw new Exception("NO EXISTE LICENCIA O NO ESTA BIEN FORMADO");
		}						
	}
	
	public void cargarDatosCliente() throws Exception {
		String sPrimerMacAddress="";		
		String sHostName="";		 
		String sHostIp="";		  
		String sHostUser="";
		
		
		sPrimerMacAddress=FuncionesNetwork.getPrimerMacAddress();		
		sHostName=FuncionesNetwork.getHostName();		 
		sHostIp=FuncionesNetwork.getHostIp();		  
		sHostUser=FuncionesNetwork.getHostUser();
		
		
		this.datosCliente=new DatosCliente();
		if(lIdUsuarioSesion!=null){datosCliente.setIdUsuario(this.lIdUsuarioSesion);}
		
		//SERVIDOR WEB Y TALVEZ SERVIDOR SWING WINDOWS
		this.datosCliente.setsUsuarioPCServer(sHostUser);
		this.datosCliente.setsNamePCServer(sHostName);
		this.datosCliente.setsIPPCServer(sHostIp);
		this.datosCliente.setsMacAddressPCServer(sPrimerMacAddress);
			
			//CLIENTE SWING WINDOWS
			this.datosCliente.setIsClienteWeb(false);
			
			this.datosCliente.setsUsuarioPC(sHostUser);
			this.datosCliente.setsNamePC(sHostName);
			this.datosCliente.setsIPPC(sHostIp);
			this.datosCliente.setsMacAddressPC(sPrimerMacAddress);	
			
			
			//this.cargarLicenciaCliente(this.datosCliente);
			
	}
	
	public void bugActualizarReferenciaActual(TipoFormaPago tipoformapago,TipoFormaPago tipoformapagoAux) throws Exception {
		//ARCHITECTURE		
		//EL ID NEGATIVO GUARDADO EN ORIGINAL SIRVE PARA VERIFICAR Y ACTUALIZAR EL REGISTRO NUEVO (ID,VERSIONROW)
		this.setCamposBaseDesdeOriginalTipoFormaPago(tipoformapago);
					
		//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
		tipoformapagoAux.setId(tipoformapago.getId());
		tipoformapagoAux.setVersionRow(tipoformapago.getVersionRow());					
	}
	
	public void ejecutarMantenimiento(MaintenanceType maintenanceType)throws Exception {	
		try	{								
			
			//this.startProcessTipoFormaPago();
		
			int intSelectedRow = this.jTableDatosTipoFormaPago.getSelectedRow();	       
			
			//PUEDE SER -1 CUANDO SE ELIMINA EN GUARDAR CAMBIOS
			if(intSelectedRow>=0 && maintenanceType!=MaintenanceType.GUARDARCAMBIOS) {
				//SE PIEDE INDICE SELECTED CON FILA TOTALES, ASEGURARSE QUE OBJETO ACTUAL ESTE EN FORMULARIO
					
				//ARCHITECTURE
				
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoformapago =(TipoFormaPago) this.tipoformapagoLogic.getTipoFormaPagos().toArray()[this.jTableDatosTipoFormaPago.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
					this.tipoformapago =(TipoFormaPago) this.tipoformapagos.toArray()[this.jTableDatosTipoFormaPago.convertRowIndexToModel(intSelectedRow)];
				}
				
				//ARCHITECTURE
				
				if(TipoFormaPagoJInternalFrame.ISBINDING_MANUAL_TABLA) {
					//this.setVariablesFormularioToObjetoActualTipoFormaPago(this.tipoformapago,true);
				}
				
				this.setVariablesFormularioToObjetoActualForeignKeysTipoFormaPago(this.tipoformapago);
			}
			
			//LUEGO DE TRAER DATOS CORRESPONDIENTES QUE COINCIDA LISTA TABLA QUITO FILA TOTALES
			if(this.conTotales) {
				//MEJOR LO DEJO, SI EXISTE EXCEPCION SE PIEDE FILA TOTALES Y ORDEN INDICE FILA ACTUAL
				//this.quitarFilaTotales();
			}
			
			this.cargarDatosCliente();
			
			this.datosDeep=new DatosDeep();
			
			//SE CAMBIA ESTADOS CON ERROR, ENTONCES SE EJECUTA ANTES
			//this.invalidValues = tipoformapagoValidator.getInvalidValues(this.tipoformapago);
			
			//if(this.invalidValues==null || this.invalidValues.length<=0) {
			
			tipoformapagoLogic.setDatosCliente(datosCliente);
			tipoformapagoLogic.setIsConDeep(false);
			
			if(maintenanceType==MaintenanceType.NUEVO) {
				tipoformapagoAux=new  TipoFormaPago();
				
				tipoformapagoAux.setIsNew(true);
				tipoformapagoAux.setIsChanged(true);
				
				tipoformapagoAux.setTipoFormaPagoOriginal(this.tipoformapago);
				
				tipoformapagoAux.setId(this.tipoformapago.getId());	
				tipoformapagoAux.setVersionRow(this.tipoformapago.getVersionRow());	
				tipoformapagoAux.setid_empresa(this.tipoformapago.getid_empresa());	
				tipoformapagoAux.setid_sucursal(this.tipoformapago.getid_sucursal());	
				tipoformapagoAux.setid_modulo(this.tipoformapago.getid_modulo());	
				tipoformapagoAux.setid_tipo_grupo_forma_pago(this.tipoformapago.getid_tipo_grupo_forma_pago());	
				tipoformapagoAux.setnombre(this.tipoformapago.getnombre());	
				tipoformapagoAux.setsiglas(this.tipoformapago.getsiglas());	
				tipoformapagoAux.setcon_detalle(this.tipoformapago.getcon_detalle());	
				tipoformapagoAux.setcon_cuotas(this.tipoformapago.getcon_cuotas());	
				tipoformapagoAux.setid_tipo_transaccion_modulo(this.tipoformapago.getid_tipo_transaccion_modulo());	
				tipoformapagoAux.setid_transaccion(this.tipoformapago.getid_transaccion());	
				tipoformapagoAux.setid_cuenta_contable(this.tipoformapago.getid_cuenta_contable());	
				tipoformapagoAux.setdescripcion(this.tipoformapago.getdescripcion());	
								
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//NO ENTENDIBLE PORQUE PONER
					//if(this.tipoformapagoSessionBean.getEstaModoGuardarRelaciones() 
					//	|| this.tipoformapagoSessionBean.getEsGuardarRelacionado())	{
						actualizarLista(tipoformapagoAux,tipoformapagoLogic.getTipoFormaPagos());
					//}
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(tipoformapagoAux,tipoformapagos);
				}
				//ARCHITECTURE
				
				if(!isGuardarCambiosEnLote  && !this.tipoformapagoSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.tipoformapagoSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						tipoformapagoLogic.saveTipoFormaPagos();//WithConnection
						//tipoformapagoLogic.getSetVersionRowTipoFormaPagos();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE		
					
					//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
					this.bugActualizarReferenciaActual(this.tipoformapago,tipoformapagoAux);
					
					this.refrescarForeignKeysDescripcionesTipoFormaPago();
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					if(this.tipoformapagoSessionBean.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							
							this.jInternalFrameDetalleFormTipoFormaPago.registroformapagobancoBeanSwingJInternalFrame.registroformapagobancoLogic.getRegistroFormaPagoBancos().addAll(this.jInternalFrameDetalleFormTipoFormaPago.registroformapagobancoBeanSwingJInternalFrame.registroformapagobancosEliminados);
							this.jInternalFrameDetalleFormTipoFormaPago.detaformapagofactuBeanSwingJInternalFrame.detaformapagofactuLogic.getDetaFormaPagoFactus().addAll(this.jInternalFrameDetalleFormTipoFormaPago.detaformapagofactuBeanSwingJInternalFrame.detaformapagofactusEliminados);
							this.jInternalFrameDetalleFormTipoFormaPago.grupoclienteformapagoBeanSwingJInternalFrame.grupoclienteformapagoLogic.getGrupoClienteFormaPagos().addAll(this.jInternalFrameDetalleFormTipoFormaPago.grupoclienteformapagoBeanSwingJInternalFrame.grupoclienteformapagosEliminados);
							this.jInternalFrameDetalleFormTipoFormaPago.detaformapagoBeanSwingJInternalFrame.detaformapagoLogic.getDetaFormaPagos().addAll(this.jInternalFrameDetalleFormTipoFormaPago.detaformapagoBeanSwingJInternalFrame.detaformapagosEliminados);
							this.jInternalFrameDetalleFormTipoFormaPago.formapagopuntoventaBeanSwingJInternalFrame.formapagopuntoventaLogic.getFormaPagoPuntoVentas().addAll(this.jInternalFrameDetalleFormTipoFormaPago.formapagopuntoventaBeanSwingJInternalFrame.formapagopuntoventasEliminados);
							this.jInternalFrameDetalleFormTipoFormaPago.formapagoBeanSwingJInternalFrame.formapagoLogic.getFormaPagos().addAll(this.jInternalFrameDetalleFormTipoFormaPago.formapagoBeanSwingJInternalFrame.formapagosEliminados);
							this.jInternalFrameDetalleFormTipoFormaPago.formapagoinvenBeanSwingJInternalFrame.formapagoinvenLogic.getFormaPagoInvens().addAll(this.jInternalFrameDetalleFormTipoFormaPago.formapagoinvenBeanSwingJInternalFrame.formapagoinvensEliminados);
							this.jInternalFrameDetalleFormTipoFormaPago.cierrecajaBeanSwingJInternalFrame.cierrecajaLogic.getCierreCajas().addAll(this.jInternalFrameDetalleFormTipoFormaPago.cierrecajaBeanSwingJInternalFrame.cierrecajasEliminados);
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
							this.jInternalFrameDetalleFormTipoFormaPago.registroformapagobancoBeanSwingJInternalFrame.registroformapagobancos.addAll(this.jInternalFrameDetalleFormTipoFormaPago.registroformapagobancoBeanSwingJInternalFrame.registroformapagobancosEliminados);
							this.jInternalFrameDetalleFormTipoFormaPago.detaformapagofactuBeanSwingJInternalFrame.detaformapagofactus.addAll(this.jInternalFrameDetalleFormTipoFormaPago.detaformapagofactuBeanSwingJInternalFrame.detaformapagofactusEliminados);
							this.jInternalFrameDetalleFormTipoFormaPago.grupoclienteformapagoBeanSwingJInternalFrame.grupoclienteformapagos.addAll(this.jInternalFrameDetalleFormTipoFormaPago.grupoclienteformapagoBeanSwingJInternalFrame.grupoclienteformapagosEliminados);
							this.jInternalFrameDetalleFormTipoFormaPago.detaformapagoBeanSwingJInternalFrame.detaformapagos.addAll(this.jInternalFrameDetalleFormTipoFormaPago.detaformapagoBeanSwingJInternalFrame.detaformapagosEliminados);
							this.jInternalFrameDetalleFormTipoFormaPago.formapagopuntoventaBeanSwingJInternalFrame.formapagopuntoventas.addAll(this.jInternalFrameDetalleFormTipoFormaPago.formapagopuntoventaBeanSwingJInternalFrame.formapagopuntoventasEliminados);
							this.jInternalFrameDetalleFormTipoFormaPago.formapagoBeanSwingJInternalFrame.formapagos.addAll(this.jInternalFrameDetalleFormTipoFormaPago.formapagoBeanSwingJInternalFrame.formapagosEliminados);
							this.jInternalFrameDetalleFormTipoFormaPago.formapagoinvenBeanSwingJInternalFrame.formapagoinvens.addAll(this.jInternalFrameDetalleFormTipoFormaPago.formapagoinvenBeanSwingJInternalFrame.formapagoinvensEliminados);
							this.jInternalFrameDetalleFormTipoFormaPago.cierrecajaBeanSwingJInternalFrame.cierrecajas.addAll(this.jInternalFrameDetalleFormTipoFormaPago.cierrecajaBeanSwingJInternalFrame.cierrecajasEliminados);
						}
						//ARCHITECTURE	
						
						if(!this.tipoformapagoSessionBean.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							
								if(this.jInternalFrameDetalleFormTipoFormaPago.registroformapagobancoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoFormaPago.registroformapagobancoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoFormaPago.registroformapagobancoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormTipoFormaPago.detaformapagofactuBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoFormaPago.detaformapagofactuBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoFormaPago.detaformapagofactuBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormTipoFormaPago.detaformapagofactuBeanSwingJInternalFrame.jInternalFrameDetalleFormDetaFormaPagoFactu.detaformapagoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoFormaPago.detaformapagofactuBeanSwingJInternalFrame.jInternalFrameDetalleFormDetaFormaPagoFactu.detaformapagoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoFormaPago.detaformapagofactuBeanSwingJInternalFrame.jInternalFrameDetalleFormDetaFormaPagoFactu.detaformapagoBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormTipoFormaPago.detaformapagofactuBeanSwingJInternalFrame.jInternalFrameDetalleFormDetaFormaPagoFactu.detaformapagoBeanSwingJInternalFrame.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoFormaPago.detaformapagofactuBeanSwingJInternalFrame.jInternalFrameDetalleFormDetaFormaPagoFactu.detaformapagoBeanSwingJInternalFrame.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoFormaPago.detaformapagofactuBeanSwingJInternalFrame.jInternalFrameDetalleFormDetaFormaPagoFactu.detaformapagoBeanSwingJInternalFrame.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormTipoFormaPago.grupoclienteformapagoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoFormaPago.grupoclienteformapagoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoFormaPago.grupoclienteformapagoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormTipoFormaPago.detaformapagoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoFormaPago.detaformapagoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoFormaPago.detaformapagoBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormTipoFormaPago.detaformapagoBeanSwingJInternalFrame.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoFormaPago.detaformapagoBeanSwingJInternalFrame.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoFormaPago.detaformapagoBeanSwingJInternalFrame.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormTipoFormaPago.formapagopuntoventaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoFormaPago.formapagopuntoventaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoFormaPago.formapagopuntoventaBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormTipoFormaPago.formapagoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoFormaPago.formapagoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoFormaPago.formapagoBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormTipoFormaPago.formapagoBeanSwingJInternalFrame.jInternalFrameDetalleFormFormaPago.formulariorentaextraBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoFormaPago.formapagoBeanSwingJInternalFrame.jInternalFrameDetalleFormFormaPago.formulariorentaextraBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoFormaPago.formapagoBeanSwingJInternalFrame.jInternalFrameDetalleFormFormaPago.formulariorentaextraBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormTipoFormaPago.formapagoinvenBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoFormaPago.formapagoinvenBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoFormaPago.formapagoinvenBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormTipoFormaPago.cierrecajaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoFormaPago.cierrecajaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoFormaPago.cierrecajaBeanSwingJInternalFrame.quitarFilaTotales();*/}
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
								if(this.jInternalFrameDetalleFormTipoFormaPago.registroformapagobancoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoFormaPago.registroformapagobancoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoFormaPago.registroformapagobancoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormTipoFormaPago.detaformapagofactuBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoFormaPago.detaformapagofactuBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoFormaPago.detaformapagofactuBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormTipoFormaPago.detaformapagofactuBeanSwingJInternalFrame.jInternalFrameDetalleFormDetaFormaPagoFactu.detaformapagoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoFormaPago.detaformapagofactuBeanSwingJInternalFrame.jInternalFrameDetalleFormDetaFormaPagoFactu.detaformapagoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoFormaPago.detaformapagofactuBeanSwingJInternalFrame.jInternalFrameDetalleFormDetaFormaPagoFactu.detaformapagoBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormTipoFormaPago.detaformapagofactuBeanSwingJInternalFrame.jInternalFrameDetalleFormDetaFormaPagoFactu.detaformapagoBeanSwingJInternalFrame.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoFormaPago.detaformapagofactuBeanSwingJInternalFrame.jInternalFrameDetalleFormDetaFormaPagoFactu.detaformapagoBeanSwingJInternalFrame.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoFormaPago.detaformapagofactuBeanSwingJInternalFrame.jInternalFrameDetalleFormDetaFormaPagoFactu.detaformapagoBeanSwingJInternalFrame.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormTipoFormaPago.grupoclienteformapagoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoFormaPago.grupoclienteformapagoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoFormaPago.grupoclienteformapagoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormTipoFormaPago.detaformapagoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoFormaPago.detaformapagoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoFormaPago.detaformapagoBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormTipoFormaPago.detaformapagoBeanSwingJInternalFrame.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoFormaPago.detaformapagoBeanSwingJInternalFrame.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoFormaPago.detaformapagoBeanSwingJInternalFrame.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormTipoFormaPago.formapagopuntoventaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoFormaPago.formapagopuntoventaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoFormaPago.formapagopuntoventaBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormTipoFormaPago.formapagoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoFormaPago.formapagoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoFormaPago.formapagoBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormTipoFormaPago.formapagoBeanSwingJInternalFrame.jInternalFrameDetalleFormFormaPago.formulariorentaextraBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoFormaPago.formapagoBeanSwingJInternalFrame.jInternalFrameDetalleFormFormaPago.formulariorentaextraBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoFormaPago.formapagoBeanSwingJInternalFrame.jInternalFrameDetalleFormFormaPago.formulariorentaextraBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormTipoFormaPago.formapagoinvenBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoFormaPago.formapagoinvenBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoFormaPago.formapagoinvenBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormTipoFormaPago.cierrecajaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoFormaPago.cierrecajaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoFormaPago.cierrecajaBeanSwingJInternalFrame.quitarFilaTotales();*/}	
							}
							//ARCHITECTURE
												
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								tipoformapagoLogic.saveTipoFormaPagoRelaciones(tipoformapagoAux,this.jInternalFrameDetalleFormTipoFormaPago.registroformapagobancoBeanSwingJInternalFrame.registroformapagobancoLogic.getRegistroFormaPagoBancos(),this.jInternalFrameDetalleFormTipoFormaPago.detaformapagofactuBeanSwingJInternalFrame.detaformapagofactuLogic.getDetaFormaPagoFactus(),this.jInternalFrameDetalleFormTipoFormaPago.grupoclienteformapagoBeanSwingJInternalFrame.grupoclienteformapagoLogic.getGrupoClienteFormaPagos(),this.jInternalFrameDetalleFormTipoFormaPago.detaformapagoBeanSwingJInternalFrame.detaformapagoLogic.getDetaFormaPagos(),this.jInternalFrameDetalleFormTipoFormaPago.formapagopuntoventaBeanSwingJInternalFrame.formapagopuntoventaLogic.getFormaPagoPuntoVentas(),this.jInternalFrameDetalleFormTipoFormaPago.formapagoBeanSwingJInternalFrame.formapagoLogic.getFormaPagos(),this.jInternalFrameDetalleFormTipoFormaPago.formapagoinvenBeanSwingJInternalFrame.formapagoinvenLogic.getFormaPagoInvens(),this.jInternalFrameDetalleFormTipoFormaPago.cierrecajaBeanSwingJInternalFrame.cierrecajaLogic.getCierreCajas());//WithConnection
								//tipoformapagoLogic.getSetVersionRowTipoFormaPagos();//WithConnection
							} else if(Constantes.ISUSAEJBREMOTE) {
							} else if(Constantes.ISUSAEJBHOME) {
							}
							//ARCHITECTURE
							
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							this.bugActualizarReferenciaActual(this.tipoformapago,tipoformapagoAux);
					
					
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								
							this.jInternalFrameDetalleFormTipoFormaPago.registroformapagobancoBeanSwingJInternalFrame.registroformapagobancoLogic.setRegistroFormaPagoBancos(new ArrayList<RegistroFormaPagoBanco>());
							this.jInternalFrameDetalleFormTipoFormaPago.detaformapagofactuBeanSwingJInternalFrame.detaformapagofactuLogic.setDetaFormaPagoFactus(new ArrayList<DetaFormaPagoFactu>());
							this.jInternalFrameDetalleFormTipoFormaPago.grupoclienteformapagoBeanSwingJInternalFrame.grupoclienteformapagoLogic.setGrupoClienteFormaPagos(new ArrayList<GrupoClienteFormaPago>());
							this.jInternalFrameDetalleFormTipoFormaPago.detaformapagoBeanSwingJInternalFrame.detaformapagoLogic.setDetaFormaPagos(new ArrayList<DetaFormaPago>());
							this.jInternalFrameDetalleFormTipoFormaPago.formapagopuntoventaBeanSwingJInternalFrame.formapagopuntoventaLogic.setFormaPagoPuntoVentas(new ArrayList<FormaPagoPuntoVenta>());
							this.jInternalFrameDetalleFormTipoFormaPago.formapagoBeanSwingJInternalFrame.formapagoLogic.setFormaPagos(new ArrayList<FormaPago>());
							this.jInternalFrameDetalleFormTipoFormaPago.formapagoinvenBeanSwingJInternalFrame.formapagoinvenLogic.setFormaPagoInvens(new ArrayList<FormaPagoInven>());
							this.jInternalFrameDetalleFormTipoFormaPago.cierrecajaBeanSwingJInternalFrame.cierrecajaLogic.setCierreCajas(new ArrayList<CierreCaja>());
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							this.jInternalFrameDetalleFormTipoFormaPago.registroformapagobancoBeanSwingJInternalFrame.registroformapagobancos= new ArrayList<RegistroFormaPagoBanco>();
							this.jInternalFrameDetalleFormTipoFormaPago.detaformapagofactuBeanSwingJInternalFrame.detaformapagofactus= new ArrayList<DetaFormaPagoFactu>();
							this.jInternalFrameDetalleFormTipoFormaPago.grupoclienteformapagoBeanSwingJInternalFrame.grupoclienteformapagos= new ArrayList<GrupoClienteFormaPago>();
							this.jInternalFrameDetalleFormTipoFormaPago.detaformapagoBeanSwingJInternalFrame.detaformapagos= new ArrayList<DetaFormaPago>();
							this.jInternalFrameDetalleFormTipoFormaPago.formapagopuntoventaBeanSwingJInternalFrame.formapagopuntoventas= new ArrayList<FormaPagoPuntoVenta>();
							this.jInternalFrameDetalleFormTipoFormaPago.formapagoBeanSwingJInternalFrame.formapagos= new ArrayList<FormaPago>();
							this.jInternalFrameDetalleFormTipoFormaPago.formapagoinvenBeanSwingJInternalFrame.formapagoinvens= new ArrayList<FormaPagoInven>();
							this.jInternalFrameDetalleFormTipoFormaPago.cierrecajaBeanSwingJInternalFrame.cierrecajas= new ArrayList<CierreCaja>();
							}
							//ARCHITECTURE	
						} else {
							
							

							if(this.jInternalFrameDetalleFormTipoFormaPago.registroformapagobancoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoFormaPago.registroformapagobancoBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormTipoFormaPago.registroformapagobancoBeanSwingJInternalFrame.quitarFilaTotales();}
							tipoformapagoAux.setRegistroFormaPagoBancos(this.jInternalFrameDetalleFormTipoFormaPago.registroformapagobancoBeanSwingJInternalFrame.registroformapagobancoLogic.getRegistroFormaPagoBancos());

							if(this.jInternalFrameDetalleFormTipoFormaPago.detaformapagofactuBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoFormaPago.detaformapagofactuBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormTipoFormaPago.detaformapagofactuBeanSwingJInternalFrame.quitarFilaTotales();}
							tipoformapagoAux.setDetaFormaPagoFactus(this.jInternalFrameDetalleFormTipoFormaPago.detaformapagofactuBeanSwingJInternalFrame.detaformapagofactuLogic.getDetaFormaPagoFactus());

							if(this.jInternalFrameDetalleFormTipoFormaPago.grupoclienteformapagoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoFormaPago.grupoclienteformapagoBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormTipoFormaPago.grupoclienteformapagoBeanSwingJInternalFrame.quitarFilaTotales();}
							tipoformapagoAux.setGrupoClienteFormaPagos(this.jInternalFrameDetalleFormTipoFormaPago.grupoclienteformapagoBeanSwingJInternalFrame.grupoclienteformapagoLogic.getGrupoClienteFormaPagos());

							if(this.jInternalFrameDetalleFormTipoFormaPago.detaformapagoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoFormaPago.detaformapagoBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormTipoFormaPago.detaformapagoBeanSwingJInternalFrame.quitarFilaTotales();}
							tipoformapagoAux.setDetaFormaPagos(this.jInternalFrameDetalleFormTipoFormaPago.detaformapagoBeanSwingJInternalFrame.detaformapagoLogic.getDetaFormaPagos());

							if(this.jInternalFrameDetalleFormTipoFormaPago.formapagopuntoventaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoFormaPago.formapagopuntoventaBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormTipoFormaPago.formapagopuntoventaBeanSwingJInternalFrame.quitarFilaTotales();}
							tipoformapagoAux.setFormaPagoPuntoVentas(this.jInternalFrameDetalleFormTipoFormaPago.formapagopuntoventaBeanSwingJInternalFrame.formapagopuntoventaLogic.getFormaPagoPuntoVentas());

							if(this.jInternalFrameDetalleFormTipoFormaPago.formapagoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoFormaPago.formapagoBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormTipoFormaPago.formapagoBeanSwingJInternalFrame.quitarFilaTotales();}
							tipoformapagoAux.setFormaPagos(this.jInternalFrameDetalleFormTipoFormaPago.formapagoBeanSwingJInternalFrame.formapagoLogic.getFormaPagos());

							if(this.jInternalFrameDetalleFormTipoFormaPago.formapagoinvenBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoFormaPago.formapagoinvenBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormTipoFormaPago.formapagoinvenBeanSwingJInternalFrame.quitarFilaTotales();}
							tipoformapagoAux.setFormaPagoInvens(this.jInternalFrameDetalleFormTipoFormaPago.formapagoinvenBeanSwingJInternalFrame.formapagoinvenLogic.getFormaPagoInvens());

							if(this.jInternalFrameDetalleFormTipoFormaPago.cierrecajaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoFormaPago.cierrecajaBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormTipoFormaPago.cierrecajaBeanSwingJInternalFrame.quitarFilaTotales();}
							tipoformapagoAux.setCierreCajas(this.jInternalFrameDetalleFormTipoFormaPago.cierrecajaBeanSwingJInternalFrame.cierrecajaLogic.getCierreCajas());
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								if(this.tipoformapagoSessionBean.getEstaModoGuardarRelaciones() 
									|| this.tipoformapagoSessionBean.getEsGuardarRelacionado())	{
									actualizarLista(tipoformapagoAux,tipoformapagoLogic.getTipoFormaPagos());
								}
							} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
								actualizarLista(tipoformapagoAux,tipoformapagos);
							}
							//ARCHITECTURE
							
							//AQUI EL ID NEGATIVO ES EL ID BUSCADO, YA QUE NO SE GENERA OTRO EN LA DB POR INGRESAR UNO NUEVO
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							//this.bugActualizarReferenciaActual(this.tipoformapago,tipoformapagoAux);												
						}
					}
				}
			} else if(maintenanceType==MaintenanceType.ACTUALIZAR) {
				tipoformapagoAux=new  TipoFormaPago();
				
				//PUEDE QUE SE ACTUALIZE ALGUN REGISTRO NUEVO
				if(!this.tipoformapagoSessionBean.getEsGuardarRelacionado() 
					|| (this.tipoformapagoSessionBean.getEsGuardarRelacionado() && this.tipoformapago.getId()>=0)) {
						
					tipoformapagoAux.setIsNew(false);
				}
				
				tipoformapagoAux.setIsDeleted(false);
			
				tipoformapagoAux.setId(this.tipoformapago.getId());	
				tipoformapagoAux.setVersionRow(this.tipoformapago.getVersionRow());	
				tipoformapagoAux.setid_empresa(this.tipoformapago.getid_empresa());	
				tipoformapagoAux.setid_sucursal(this.tipoformapago.getid_sucursal());	
				tipoformapagoAux.setid_modulo(this.tipoformapago.getid_modulo());	
				tipoformapagoAux.setid_tipo_grupo_forma_pago(this.tipoformapago.getid_tipo_grupo_forma_pago());	
				tipoformapagoAux.setnombre(this.tipoformapago.getnombre());	
				tipoformapagoAux.setsiglas(this.tipoformapago.getsiglas());	
				tipoformapagoAux.setcon_detalle(this.tipoformapago.getcon_detalle());	
				tipoformapagoAux.setcon_cuotas(this.tipoformapago.getcon_cuotas());	
				tipoformapagoAux.setid_tipo_transaccion_modulo(this.tipoformapago.getid_tipo_transaccion_modulo());	
				tipoformapagoAux.setid_transaccion(this.tipoformapago.getid_transaccion());	
				tipoformapagoAux.setid_cuenta_contable(this.tipoformapago.getid_cuenta_contable());	
				tipoformapagoAux.setdescripcion(this.tipoformapago.getdescripcion());	
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					actualizarLista(tipoformapagoAux,tipoformapagoLogic.getTipoFormaPagos());
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(tipoformapagoAux,tipoformapagos);
				}
				//ARCHITECTURE
				
				if(!isGuardarCambiosEnLote && !this.tipoformapagoSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.tipoformapagoSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						tipoformapagoLogic.saveTipoFormaPagos();//WithConnection
						//tipoformapagoLogic.getSetVersionRowTipoFormaPagos();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}	
					//ARCHITECTURE
					
					//TALVEZ ESTA DEMAS POR SER UPDATE
					//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
					this.bugActualizarReferenciaActual(this.tipoformapago,tipoformapagoAux);
					
					this.refrescarForeignKeysDescripcionesTipoFormaPago();
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					if(this.tipoformapagoSessionBean.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							
							this.jInternalFrameDetalleFormTipoFormaPago.registroformapagobancoBeanSwingJInternalFrame.registroformapagobancoLogic.getRegistroFormaPagoBancos().addAll(this.jInternalFrameDetalleFormTipoFormaPago.registroformapagobancoBeanSwingJInternalFrame.registroformapagobancosEliminados);
							this.jInternalFrameDetalleFormTipoFormaPago.detaformapagofactuBeanSwingJInternalFrame.detaformapagofactuLogic.getDetaFormaPagoFactus().addAll(this.jInternalFrameDetalleFormTipoFormaPago.detaformapagofactuBeanSwingJInternalFrame.detaformapagofactusEliminados);
							this.jInternalFrameDetalleFormTipoFormaPago.grupoclienteformapagoBeanSwingJInternalFrame.grupoclienteformapagoLogic.getGrupoClienteFormaPagos().addAll(this.jInternalFrameDetalleFormTipoFormaPago.grupoclienteformapagoBeanSwingJInternalFrame.grupoclienteformapagosEliminados);
							this.jInternalFrameDetalleFormTipoFormaPago.detaformapagoBeanSwingJInternalFrame.detaformapagoLogic.getDetaFormaPagos().addAll(this.jInternalFrameDetalleFormTipoFormaPago.detaformapagoBeanSwingJInternalFrame.detaformapagosEliminados);
							this.jInternalFrameDetalleFormTipoFormaPago.formapagopuntoventaBeanSwingJInternalFrame.formapagopuntoventaLogic.getFormaPagoPuntoVentas().addAll(this.jInternalFrameDetalleFormTipoFormaPago.formapagopuntoventaBeanSwingJInternalFrame.formapagopuntoventasEliminados);
							this.jInternalFrameDetalleFormTipoFormaPago.formapagoBeanSwingJInternalFrame.formapagoLogic.getFormaPagos().addAll(this.jInternalFrameDetalleFormTipoFormaPago.formapagoBeanSwingJInternalFrame.formapagosEliminados);
							this.jInternalFrameDetalleFormTipoFormaPago.formapagoinvenBeanSwingJInternalFrame.formapagoinvenLogic.getFormaPagoInvens().addAll(this.jInternalFrameDetalleFormTipoFormaPago.formapagoinvenBeanSwingJInternalFrame.formapagoinvensEliminados);
							this.jInternalFrameDetalleFormTipoFormaPago.cierrecajaBeanSwingJInternalFrame.cierrecajaLogic.getCierreCajas().addAll(this.jInternalFrameDetalleFormTipoFormaPago.cierrecajaBeanSwingJInternalFrame.cierrecajasEliminados);
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
							this.jInternalFrameDetalleFormTipoFormaPago.registroformapagobancoBeanSwingJInternalFrame.registroformapagobancos.addAll(this.jInternalFrameDetalleFormTipoFormaPago.registroformapagobancoBeanSwingJInternalFrame.registroformapagobancosEliminados);
							this.jInternalFrameDetalleFormTipoFormaPago.detaformapagofactuBeanSwingJInternalFrame.detaformapagofactus.addAll(this.jInternalFrameDetalleFormTipoFormaPago.detaformapagofactuBeanSwingJInternalFrame.detaformapagofactusEliminados);
							this.jInternalFrameDetalleFormTipoFormaPago.grupoclienteformapagoBeanSwingJInternalFrame.grupoclienteformapagos.addAll(this.jInternalFrameDetalleFormTipoFormaPago.grupoclienteformapagoBeanSwingJInternalFrame.grupoclienteformapagosEliminados);
							this.jInternalFrameDetalleFormTipoFormaPago.detaformapagoBeanSwingJInternalFrame.detaformapagos.addAll(this.jInternalFrameDetalleFormTipoFormaPago.detaformapagoBeanSwingJInternalFrame.detaformapagosEliminados);
							this.jInternalFrameDetalleFormTipoFormaPago.formapagopuntoventaBeanSwingJInternalFrame.formapagopuntoventas.addAll(this.jInternalFrameDetalleFormTipoFormaPago.formapagopuntoventaBeanSwingJInternalFrame.formapagopuntoventasEliminados);
							this.jInternalFrameDetalleFormTipoFormaPago.formapagoBeanSwingJInternalFrame.formapagos.addAll(this.jInternalFrameDetalleFormTipoFormaPago.formapagoBeanSwingJInternalFrame.formapagosEliminados);
							this.jInternalFrameDetalleFormTipoFormaPago.formapagoinvenBeanSwingJInternalFrame.formapagoinvens.addAll(this.jInternalFrameDetalleFormTipoFormaPago.formapagoinvenBeanSwingJInternalFrame.formapagoinvensEliminados);
							this.jInternalFrameDetalleFormTipoFormaPago.cierrecajaBeanSwingJInternalFrame.cierrecajas.addAll(this.jInternalFrameDetalleFormTipoFormaPago.cierrecajaBeanSwingJInternalFrame.cierrecajasEliminados);
						}
						//ARCHITECTURE
						
						if(!this.tipoformapagoSessionBean.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							
								if(this.jInternalFrameDetalleFormTipoFormaPago.registroformapagobancoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoFormaPago.registroformapagobancoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoFormaPago.registroformapagobancoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormTipoFormaPago.detaformapagofactuBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoFormaPago.detaformapagofactuBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoFormaPago.detaformapagofactuBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormTipoFormaPago.detaformapagofactuBeanSwingJInternalFrame.jInternalFrameDetalleFormDetaFormaPagoFactu.detaformapagoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoFormaPago.detaformapagofactuBeanSwingJInternalFrame.jInternalFrameDetalleFormDetaFormaPagoFactu.detaformapagoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoFormaPago.detaformapagofactuBeanSwingJInternalFrame.jInternalFrameDetalleFormDetaFormaPagoFactu.detaformapagoBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormTipoFormaPago.detaformapagofactuBeanSwingJInternalFrame.jInternalFrameDetalleFormDetaFormaPagoFactu.detaformapagoBeanSwingJInternalFrame.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoFormaPago.detaformapagofactuBeanSwingJInternalFrame.jInternalFrameDetalleFormDetaFormaPagoFactu.detaformapagoBeanSwingJInternalFrame.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoFormaPago.detaformapagofactuBeanSwingJInternalFrame.jInternalFrameDetalleFormDetaFormaPagoFactu.detaformapagoBeanSwingJInternalFrame.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormTipoFormaPago.grupoclienteformapagoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoFormaPago.grupoclienteformapagoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoFormaPago.grupoclienteformapagoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormTipoFormaPago.detaformapagoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoFormaPago.detaformapagoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoFormaPago.detaformapagoBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormTipoFormaPago.detaformapagoBeanSwingJInternalFrame.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoFormaPago.detaformapagoBeanSwingJInternalFrame.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoFormaPago.detaformapagoBeanSwingJInternalFrame.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormTipoFormaPago.formapagopuntoventaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoFormaPago.formapagopuntoventaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoFormaPago.formapagopuntoventaBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormTipoFormaPago.formapagoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoFormaPago.formapagoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoFormaPago.formapagoBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormTipoFormaPago.formapagoBeanSwingJInternalFrame.jInternalFrameDetalleFormFormaPago.formulariorentaextraBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoFormaPago.formapagoBeanSwingJInternalFrame.jInternalFrameDetalleFormFormaPago.formulariorentaextraBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoFormaPago.formapagoBeanSwingJInternalFrame.jInternalFrameDetalleFormFormaPago.formulariorentaextraBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormTipoFormaPago.formapagoinvenBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoFormaPago.formapagoinvenBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoFormaPago.formapagoinvenBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormTipoFormaPago.cierrecajaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoFormaPago.cierrecajaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoFormaPago.cierrecajaBeanSwingJInternalFrame.quitarFilaTotales();*/}
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
								if(this.jInternalFrameDetalleFormTipoFormaPago.registroformapagobancoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoFormaPago.registroformapagobancoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoFormaPago.registroformapagobancoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormTipoFormaPago.detaformapagofactuBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoFormaPago.detaformapagofactuBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoFormaPago.detaformapagofactuBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormTipoFormaPago.detaformapagofactuBeanSwingJInternalFrame.jInternalFrameDetalleFormDetaFormaPagoFactu.detaformapagoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoFormaPago.detaformapagofactuBeanSwingJInternalFrame.jInternalFrameDetalleFormDetaFormaPagoFactu.detaformapagoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoFormaPago.detaformapagofactuBeanSwingJInternalFrame.jInternalFrameDetalleFormDetaFormaPagoFactu.detaformapagoBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormTipoFormaPago.detaformapagofactuBeanSwingJInternalFrame.jInternalFrameDetalleFormDetaFormaPagoFactu.detaformapagoBeanSwingJInternalFrame.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoFormaPago.detaformapagofactuBeanSwingJInternalFrame.jInternalFrameDetalleFormDetaFormaPagoFactu.detaformapagoBeanSwingJInternalFrame.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoFormaPago.detaformapagofactuBeanSwingJInternalFrame.jInternalFrameDetalleFormDetaFormaPagoFactu.detaformapagoBeanSwingJInternalFrame.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormTipoFormaPago.grupoclienteformapagoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoFormaPago.grupoclienteformapagoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoFormaPago.grupoclienteformapagoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormTipoFormaPago.detaformapagoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoFormaPago.detaformapagoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoFormaPago.detaformapagoBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormTipoFormaPago.detaformapagoBeanSwingJInternalFrame.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoFormaPago.detaformapagoBeanSwingJInternalFrame.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoFormaPago.detaformapagoBeanSwingJInternalFrame.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormTipoFormaPago.formapagopuntoventaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoFormaPago.formapagopuntoventaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoFormaPago.formapagopuntoventaBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormTipoFormaPago.formapagoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoFormaPago.formapagoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoFormaPago.formapagoBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormTipoFormaPago.formapagoBeanSwingJInternalFrame.jInternalFrameDetalleFormFormaPago.formulariorentaextraBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoFormaPago.formapagoBeanSwingJInternalFrame.jInternalFrameDetalleFormFormaPago.formulariorentaextraBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoFormaPago.formapagoBeanSwingJInternalFrame.jInternalFrameDetalleFormFormaPago.formulariorentaextraBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormTipoFormaPago.formapagoinvenBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoFormaPago.formapagoinvenBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoFormaPago.formapagoinvenBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormTipoFormaPago.cierrecajaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoFormaPago.cierrecajaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoFormaPago.cierrecajaBeanSwingJInternalFrame.quitarFilaTotales();*/}	
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								tipoformapagoLogic.saveTipoFormaPagoRelaciones(tipoformapagoAux,this.jInternalFrameDetalleFormTipoFormaPago.registroformapagobancoBeanSwingJInternalFrame.registroformapagobancoLogic.getRegistroFormaPagoBancos(),this.jInternalFrameDetalleFormTipoFormaPago.detaformapagofactuBeanSwingJInternalFrame.detaformapagofactuLogic.getDetaFormaPagoFactus(),this.jInternalFrameDetalleFormTipoFormaPago.grupoclienteformapagoBeanSwingJInternalFrame.grupoclienteformapagoLogic.getGrupoClienteFormaPagos(),this.jInternalFrameDetalleFormTipoFormaPago.detaformapagoBeanSwingJInternalFrame.detaformapagoLogic.getDetaFormaPagos(),this.jInternalFrameDetalleFormTipoFormaPago.formapagopuntoventaBeanSwingJInternalFrame.formapagopuntoventaLogic.getFormaPagoPuntoVentas(),this.jInternalFrameDetalleFormTipoFormaPago.formapagoBeanSwingJInternalFrame.formapagoLogic.getFormaPagos(),this.jInternalFrameDetalleFormTipoFormaPago.formapagoinvenBeanSwingJInternalFrame.formapagoinvenLogic.getFormaPagoInvens(),this.jInternalFrameDetalleFormTipoFormaPago.cierrecajaBeanSwingJInternalFrame.cierrecajaLogic.getCierreCajas());//WithConnection
								//tipoformapagoLogic.getSetVersionRowTipoFormaPagos();//WithConnection
							} else if(Constantes.ISUSAEJBREMOTE) {
							} else if(Constantes.ISUSAEJBHOME) {
							}
							//ARCHITECTURE
							
							//TALVEZ ESTA DEMAS POR SER UPDATE
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							this.bugActualizarReferenciaActual(this.tipoformapago,tipoformapagoAux);
					
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								
							this.jInternalFrameDetalleFormTipoFormaPago.registroformapagobancoBeanSwingJInternalFrame.registroformapagobancoLogic.setRegistroFormaPagoBancos(new ArrayList<RegistroFormaPagoBanco>());
							this.jInternalFrameDetalleFormTipoFormaPago.detaformapagofactuBeanSwingJInternalFrame.detaformapagofactuLogic.setDetaFormaPagoFactus(new ArrayList<DetaFormaPagoFactu>());
							this.jInternalFrameDetalleFormTipoFormaPago.grupoclienteformapagoBeanSwingJInternalFrame.grupoclienteformapagoLogic.setGrupoClienteFormaPagos(new ArrayList<GrupoClienteFormaPago>());
							this.jInternalFrameDetalleFormTipoFormaPago.detaformapagoBeanSwingJInternalFrame.detaformapagoLogic.setDetaFormaPagos(new ArrayList<DetaFormaPago>());
							this.jInternalFrameDetalleFormTipoFormaPago.formapagopuntoventaBeanSwingJInternalFrame.formapagopuntoventaLogic.setFormaPagoPuntoVentas(new ArrayList<FormaPagoPuntoVenta>());
							this.jInternalFrameDetalleFormTipoFormaPago.formapagoBeanSwingJInternalFrame.formapagoLogic.setFormaPagos(new ArrayList<FormaPago>());
							this.jInternalFrameDetalleFormTipoFormaPago.formapagoinvenBeanSwingJInternalFrame.formapagoinvenLogic.setFormaPagoInvens(new ArrayList<FormaPagoInven>());
							this.jInternalFrameDetalleFormTipoFormaPago.cierrecajaBeanSwingJInternalFrame.cierrecajaLogic.setCierreCajas(new ArrayList<CierreCaja>());
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							this.jInternalFrameDetalleFormTipoFormaPago.registroformapagobancoBeanSwingJInternalFrame.registroformapagobancos= new ArrayList<RegistroFormaPagoBanco>();
							this.jInternalFrameDetalleFormTipoFormaPago.detaformapagofactuBeanSwingJInternalFrame.detaformapagofactus= new ArrayList<DetaFormaPagoFactu>();
							this.jInternalFrameDetalleFormTipoFormaPago.grupoclienteformapagoBeanSwingJInternalFrame.grupoclienteformapagos= new ArrayList<GrupoClienteFormaPago>();
							this.jInternalFrameDetalleFormTipoFormaPago.detaformapagoBeanSwingJInternalFrame.detaformapagos= new ArrayList<DetaFormaPago>();
							this.jInternalFrameDetalleFormTipoFormaPago.formapagopuntoventaBeanSwingJInternalFrame.formapagopuntoventas= new ArrayList<FormaPagoPuntoVenta>();
							this.jInternalFrameDetalleFormTipoFormaPago.formapagoBeanSwingJInternalFrame.formapagos= new ArrayList<FormaPago>();
							this.jInternalFrameDetalleFormTipoFormaPago.formapagoinvenBeanSwingJInternalFrame.formapagoinvens= new ArrayList<FormaPagoInven>();
							this.jInternalFrameDetalleFormTipoFormaPago.cierrecajaBeanSwingJInternalFrame.cierrecajas= new ArrayList<CierreCaja>();
							}
							//ARCHITECTURE
						} else {
							
							

							if(this.jInternalFrameDetalleFormTipoFormaPago.registroformapagobancoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoFormaPago.registroformapagobancoBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormTipoFormaPago.registroformapagobancoBeanSwingJInternalFrame.quitarFilaTotales();}
							tipoformapagoAux.setRegistroFormaPagoBancos(this.jInternalFrameDetalleFormTipoFormaPago.registroformapagobancoBeanSwingJInternalFrame.registroformapagobancoLogic.getRegistroFormaPagoBancos());

							if(this.jInternalFrameDetalleFormTipoFormaPago.detaformapagofactuBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoFormaPago.detaformapagofactuBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormTipoFormaPago.detaformapagofactuBeanSwingJInternalFrame.quitarFilaTotales();}
							tipoformapagoAux.setDetaFormaPagoFactus(this.jInternalFrameDetalleFormTipoFormaPago.detaformapagofactuBeanSwingJInternalFrame.detaformapagofactuLogic.getDetaFormaPagoFactus());

							if(this.jInternalFrameDetalleFormTipoFormaPago.grupoclienteformapagoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoFormaPago.grupoclienteformapagoBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormTipoFormaPago.grupoclienteformapagoBeanSwingJInternalFrame.quitarFilaTotales();}
							tipoformapagoAux.setGrupoClienteFormaPagos(this.jInternalFrameDetalleFormTipoFormaPago.grupoclienteformapagoBeanSwingJInternalFrame.grupoclienteformapagoLogic.getGrupoClienteFormaPagos());

							if(this.jInternalFrameDetalleFormTipoFormaPago.detaformapagoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoFormaPago.detaformapagoBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormTipoFormaPago.detaformapagoBeanSwingJInternalFrame.quitarFilaTotales();}
							tipoformapagoAux.setDetaFormaPagos(this.jInternalFrameDetalleFormTipoFormaPago.detaformapagoBeanSwingJInternalFrame.detaformapagoLogic.getDetaFormaPagos());

							if(this.jInternalFrameDetalleFormTipoFormaPago.formapagopuntoventaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoFormaPago.formapagopuntoventaBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormTipoFormaPago.formapagopuntoventaBeanSwingJInternalFrame.quitarFilaTotales();}
							tipoformapagoAux.setFormaPagoPuntoVentas(this.jInternalFrameDetalleFormTipoFormaPago.formapagopuntoventaBeanSwingJInternalFrame.formapagopuntoventaLogic.getFormaPagoPuntoVentas());

							if(this.jInternalFrameDetalleFormTipoFormaPago.formapagoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoFormaPago.formapagoBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormTipoFormaPago.formapagoBeanSwingJInternalFrame.quitarFilaTotales();}
							tipoformapagoAux.setFormaPagos(this.jInternalFrameDetalleFormTipoFormaPago.formapagoBeanSwingJInternalFrame.formapagoLogic.getFormaPagos());

							if(this.jInternalFrameDetalleFormTipoFormaPago.formapagoinvenBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoFormaPago.formapagoinvenBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormTipoFormaPago.formapagoinvenBeanSwingJInternalFrame.quitarFilaTotales();}
							tipoformapagoAux.setFormaPagoInvens(this.jInternalFrameDetalleFormTipoFormaPago.formapagoinvenBeanSwingJInternalFrame.formapagoinvenLogic.getFormaPagoInvens());

							if(this.jInternalFrameDetalleFormTipoFormaPago.cierrecajaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoFormaPago.cierrecajaBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormTipoFormaPago.cierrecajaBeanSwingJInternalFrame.quitarFilaTotales();}
							tipoformapagoAux.setCierreCajas(this.jInternalFrameDetalleFormTipoFormaPago.cierrecajaBeanSwingJInternalFrame.cierrecajaLogic.getCierreCajas());
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								if(this.tipoformapagoSessionBean.getEstaModoGuardarRelaciones() 
									|| this.tipoformapagoSessionBean.getEsGuardarRelacionado())	{
									actualizarLista(tipoformapagoAux,tipoformapagoLogic.getTipoFormaPagos());
								}
							} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
								actualizarLista(tipoformapagoAux,tipoformapagos);
							}
							//ARCHITECTURE
							
							//AQUI EL ID NEGATIVO ES EL ID BUSCADO, YA QUE NO SE GENERA OTRO EN LA DB POR INGRESAR UNO NUEVO							
							//TALVEZ ESTA DEMAS POR SER UPDATE
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							//this.bugActualizarReferenciaActual(this.tipoformapago,tipoformapagoAux);
					
						}
					}
				}				
			} else if(maintenanceType==MaintenanceType.ELIMINAR) {
				tipoformapagoAux=new  TipoFormaPago();
				
				tipoformapagoAux.setIsNew(false);
				tipoformapagoAux.setIsChanged(false);
				
				tipoformapagoAux.setIsDeleted(true);
				
				tipoformapagoAux.setId(this.tipoformapago.getId());	
				tipoformapagoAux.setVersionRow(this.tipoformapago.getVersionRow());	
				tipoformapagoAux.setid_empresa(this.tipoformapago.getid_empresa());	
				tipoformapagoAux.setid_sucursal(this.tipoformapago.getid_sucursal());	
				tipoformapagoAux.setid_modulo(this.tipoformapago.getid_modulo());	
				tipoformapagoAux.setid_tipo_grupo_forma_pago(this.tipoformapago.getid_tipo_grupo_forma_pago());	
				tipoformapagoAux.setnombre(this.tipoformapago.getnombre());	
				tipoformapagoAux.setsiglas(this.tipoformapago.getsiglas());	
				tipoformapagoAux.setcon_detalle(this.tipoformapago.getcon_detalle());	
				tipoformapagoAux.setcon_cuotas(this.tipoformapago.getcon_cuotas());	
				tipoformapagoAux.setid_tipo_transaccion_modulo(this.tipoformapago.getid_tipo_transaccion_modulo());	
				tipoformapagoAux.setid_transaccion(this.tipoformapago.getid_transaccion());	
				tipoformapagoAux.setid_cuenta_contable(this.tipoformapago.getid_cuenta_contable());	
				tipoformapagoAux.setdescripcion(this.tipoformapago.getdescripcion());	
				
				if(this.tipoformapagoSessionBean.getEsGuardarRelacionado()) {
					//ELEMENTO ACTUAL NO SE HA INGRESADO AL SISTEMA, NO SE PUEDE ELIMINAR ALGO QUE NO EXISTE
					if(this.tipoformapagoAux.getId()>=0) {	
						this.tipoformapagosEliminados.add(tipoformapagoAux);											
					}
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					actualizarLista(tipoformapagoAux,tipoformapagoLogic.getTipoFormaPagos());
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(tipoformapagoAux,tipoformapagos);
				}
				//ARCHITECTURE
				
				
				if(!isGuardarCambiosEnLote && !this.tipoformapagoSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.tipoformapagoSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						tipoformapagoLogic.saveTipoFormaPagos();//WithConnection
						//tipoformapagoLogic.getSetVersionRowTipoFormaPagos();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}	
					//ARCHITECTURE
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					if(this.tipoformapagoSessionBean.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							
							this.jInternalFrameDetalleFormTipoFormaPago.registroformapagobancoBeanSwingJInternalFrame.registroformapagobancoLogic.getRegistroFormaPagoBancos().addAll(this.jInternalFrameDetalleFormTipoFormaPago.registroformapagobancoBeanSwingJInternalFrame.registroformapagobancosEliminados);
							this.jInternalFrameDetalleFormTipoFormaPago.detaformapagofactuBeanSwingJInternalFrame.detaformapagofactuLogic.getDetaFormaPagoFactus().addAll(this.jInternalFrameDetalleFormTipoFormaPago.detaformapagofactuBeanSwingJInternalFrame.detaformapagofactusEliminados);
							this.jInternalFrameDetalleFormTipoFormaPago.grupoclienteformapagoBeanSwingJInternalFrame.grupoclienteformapagoLogic.getGrupoClienteFormaPagos().addAll(this.jInternalFrameDetalleFormTipoFormaPago.grupoclienteformapagoBeanSwingJInternalFrame.grupoclienteformapagosEliminados);
							this.jInternalFrameDetalleFormTipoFormaPago.detaformapagoBeanSwingJInternalFrame.detaformapagoLogic.getDetaFormaPagos().addAll(this.jInternalFrameDetalleFormTipoFormaPago.detaformapagoBeanSwingJInternalFrame.detaformapagosEliminados);
							this.jInternalFrameDetalleFormTipoFormaPago.formapagopuntoventaBeanSwingJInternalFrame.formapagopuntoventaLogic.getFormaPagoPuntoVentas().addAll(this.jInternalFrameDetalleFormTipoFormaPago.formapagopuntoventaBeanSwingJInternalFrame.formapagopuntoventasEliminados);
							this.jInternalFrameDetalleFormTipoFormaPago.formapagoBeanSwingJInternalFrame.formapagoLogic.getFormaPagos().addAll(this.jInternalFrameDetalleFormTipoFormaPago.formapagoBeanSwingJInternalFrame.formapagosEliminados);
							this.jInternalFrameDetalleFormTipoFormaPago.formapagoinvenBeanSwingJInternalFrame.formapagoinvenLogic.getFormaPagoInvens().addAll(this.jInternalFrameDetalleFormTipoFormaPago.formapagoinvenBeanSwingJInternalFrame.formapagoinvensEliminados);
							this.jInternalFrameDetalleFormTipoFormaPago.cierrecajaBeanSwingJInternalFrame.cierrecajaLogic.getCierreCajas().addAll(this.jInternalFrameDetalleFormTipoFormaPago.cierrecajaBeanSwingJInternalFrame.cierrecajasEliminados);
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
							this.jInternalFrameDetalleFormTipoFormaPago.registroformapagobancoBeanSwingJInternalFrame.registroformapagobancos.addAll(this.jInternalFrameDetalleFormTipoFormaPago.registroformapagobancoBeanSwingJInternalFrame.registroformapagobancosEliminados);
							this.jInternalFrameDetalleFormTipoFormaPago.detaformapagofactuBeanSwingJInternalFrame.detaformapagofactus.addAll(this.jInternalFrameDetalleFormTipoFormaPago.detaformapagofactuBeanSwingJInternalFrame.detaformapagofactusEliminados);
							this.jInternalFrameDetalleFormTipoFormaPago.grupoclienteformapagoBeanSwingJInternalFrame.grupoclienteformapagos.addAll(this.jInternalFrameDetalleFormTipoFormaPago.grupoclienteformapagoBeanSwingJInternalFrame.grupoclienteformapagosEliminados);
							this.jInternalFrameDetalleFormTipoFormaPago.detaformapagoBeanSwingJInternalFrame.detaformapagos.addAll(this.jInternalFrameDetalleFormTipoFormaPago.detaformapagoBeanSwingJInternalFrame.detaformapagosEliminados);
							this.jInternalFrameDetalleFormTipoFormaPago.formapagopuntoventaBeanSwingJInternalFrame.formapagopuntoventas.addAll(this.jInternalFrameDetalleFormTipoFormaPago.formapagopuntoventaBeanSwingJInternalFrame.formapagopuntoventasEliminados);
							this.jInternalFrameDetalleFormTipoFormaPago.formapagoBeanSwingJInternalFrame.formapagos.addAll(this.jInternalFrameDetalleFormTipoFormaPago.formapagoBeanSwingJInternalFrame.formapagosEliminados);
							this.jInternalFrameDetalleFormTipoFormaPago.formapagoinvenBeanSwingJInternalFrame.formapagoinvens.addAll(this.jInternalFrameDetalleFormTipoFormaPago.formapagoinvenBeanSwingJInternalFrame.formapagoinvensEliminados);
							this.jInternalFrameDetalleFormTipoFormaPago.cierrecajaBeanSwingJInternalFrame.cierrecajas.addAll(this.jInternalFrameDetalleFormTipoFormaPago.cierrecajaBeanSwingJInternalFrame.cierrecajasEliminados);
						}
						//ARCHITECTURE
						
						
						if(!this.tipoformapagoSessionBean.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							
								if(this.jInternalFrameDetalleFormTipoFormaPago.registroformapagobancoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoFormaPago.registroformapagobancoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoFormaPago.registroformapagobancoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormTipoFormaPago.detaformapagofactuBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoFormaPago.detaformapagofactuBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoFormaPago.detaformapagofactuBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormTipoFormaPago.detaformapagofactuBeanSwingJInternalFrame.jInternalFrameDetalleFormDetaFormaPagoFactu.detaformapagoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoFormaPago.detaformapagofactuBeanSwingJInternalFrame.jInternalFrameDetalleFormDetaFormaPagoFactu.detaformapagoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoFormaPago.detaformapagofactuBeanSwingJInternalFrame.jInternalFrameDetalleFormDetaFormaPagoFactu.detaformapagoBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormTipoFormaPago.detaformapagofactuBeanSwingJInternalFrame.jInternalFrameDetalleFormDetaFormaPagoFactu.detaformapagoBeanSwingJInternalFrame.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoFormaPago.detaformapagofactuBeanSwingJInternalFrame.jInternalFrameDetalleFormDetaFormaPagoFactu.detaformapagoBeanSwingJInternalFrame.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoFormaPago.detaformapagofactuBeanSwingJInternalFrame.jInternalFrameDetalleFormDetaFormaPagoFactu.detaformapagoBeanSwingJInternalFrame.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormTipoFormaPago.grupoclienteformapagoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoFormaPago.grupoclienteformapagoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoFormaPago.grupoclienteformapagoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormTipoFormaPago.detaformapagoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoFormaPago.detaformapagoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoFormaPago.detaformapagoBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormTipoFormaPago.detaformapagoBeanSwingJInternalFrame.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoFormaPago.detaformapagoBeanSwingJInternalFrame.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoFormaPago.detaformapagoBeanSwingJInternalFrame.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormTipoFormaPago.formapagopuntoventaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoFormaPago.formapagopuntoventaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoFormaPago.formapagopuntoventaBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormTipoFormaPago.formapagoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoFormaPago.formapagoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoFormaPago.formapagoBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormTipoFormaPago.formapagoBeanSwingJInternalFrame.jInternalFrameDetalleFormFormaPago.formulariorentaextraBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoFormaPago.formapagoBeanSwingJInternalFrame.jInternalFrameDetalleFormFormaPago.formulariorentaextraBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoFormaPago.formapagoBeanSwingJInternalFrame.jInternalFrameDetalleFormFormaPago.formulariorentaextraBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormTipoFormaPago.formapagoinvenBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoFormaPago.formapagoinvenBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoFormaPago.formapagoinvenBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormTipoFormaPago.cierrecajaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoFormaPago.cierrecajaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoFormaPago.cierrecajaBeanSwingJInternalFrame.quitarFilaTotales();*/}
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
								if(this.jInternalFrameDetalleFormTipoFormaPago.registroformapagobancoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoFormaPago.registroformapagobancoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoFormaPago.registroformapagobancoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormTipoFormaPago.detaformapagofactuBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoFormaPago.detaformapagofactuBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoFormaPago.detaformapagofactuBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormTipoFormaPago.detaformapagofactuBeanSwingJInternalFrame.jInternalFrameDetalleFormDetaFormaPagoFactu.detaformapagoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoFormaPago.detaformapagofactuBeanSwingJInternalFrame.jInternalFrameDetalleFormDetaFormaPagoFactu.detaformapagoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoFormaPago.detaformapagofactuBeanSwingJInternalFrame.jInternalFrameDetalleFormDetaFormaPagoFactu.detaformapagoBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormTipoFormaPago.detaformapagofactuBeanSwingJInternalFrame.jInternalFrameDetalleFormDetaFormaPagoFactu.detaformapagoBeanSwingJInternalFrame.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoFormaPago.detaformapagofactuBeanSwingJInternalFrame.jInternalFrameDetalleFormDetaFormaPagoFactu.detaformapagoBeanSwingJInternalFrame.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoFormaPago.detaformapagofactuBeanSwingJInternalFrame.jInternalFrameDetalleFormDetaFormaPagoFactu.detaformapagoBeanSwingJInternalFrame.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormTipoFormaPago.grupoclienteformapagoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoFormaPago.grupoclienteformapagoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoFormaPago.grupoclienteformapagoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormTipoFormaPago.detaformapagoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoFormaPago.detaformapagoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoFormaPago.detaformapagoBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormTipoFormaPago.detaformapagoBeanSwingJInternalFrame.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoFormaPago.detaformapagoBeanSwingJInternalFrame.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoFormaPago.detaformapagoBeanSwingJInternalFrame.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormTipoFormaPago.formapagopuntoventaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoFormaPago.formapagopuntoventaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoFormaPago.formapagopuntoventaBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormTipoFormaPago.formapagoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoFormaPago.formapagoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoFormaPago.formapagoBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormTipoFormaPago.formapagoBeanSwingJInternalFrame.jInternalFrameDetalleFormFormaPago.formulariorentaextraBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoFormaPago.formapagoBeanSwingJInternalFrame.jInternalFrameDetalleFormFormaPago.formulariorentaextraBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoFormaPago.formapagoBeanSwingJInternalFrame.jInternalFrameDetalleFormFormaPago.formulariorentaextraBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormTipoFormaPago.formapagoinvenBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoFormaPago.formapagoinvenBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoFormaPago.formapagoinvenBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormTipoFormaPago.cierrecajaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoFormaPago.cierrecajaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormTipoFormaPago.cierrecajaBeanSwingJInternalFrame.quitarFilaTotales();*/}	
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								tipoformapagoLogic.saveTipoFormaPagoRelaciones(tipoformapagoAux,this.jInternalFrameDetalleFormTipoFormaPago.registroformapagobancoBeanSwingJInternalFrame.registroformapagobancoLogic.getRegistroFormaPagoBancos(),this.jInternalFrameDetalleFormTipoFormaPago.detaformapagofactuBeanSwingJInternalFrame.detaformapagofactuLogic.getDetaFormaPagoFactus(),this.jInternalFrameDetalleFormTipoFormaPago.grupoclienteformapagoBeanSwingJInternalFrame.grupoclienteformapagoLogic.getGrupoClienteFormaPagos(),this.jInternalFrameDetalleFormTipoFormaPago.detaformapagoBeanSwingJInternalFrame.detaformapagoLogic.getDetaFormaPagos(),this.jInternalFrameDetalleFormTipoFormaPago.formapagopuntoventaBeanSwingJInternalFrame.formapagopuntoventaLogic.getFormaPagoPuntoVentas(),this.jInternalFrameDetalleFormTipoFormaPago.formapagoBeanSwingJInternalFrame.formapagoLogic.getFormaPagos(),this.jInternalFrameDetalleFormTipoFormaPago.formapagoinvenBeanSwingJInternalFrame.formapagoinvenLogic.getFormaPagoInvens(),this.jInternalFrameDetalleFormTipoFormaPago.cierrecajaBeanSwingJInternalFrame.cierrecajaLogic.getCierreCajas());//WithConnection
								//tipoformapagoLogic.getSetVersionRowTipoFormaPagos();//WithConnection
							} else if(Constantes.ISUSAEJBREMOTE) {
							} else if(Constantes.ISUSAEJBHOME) {
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								
							this.jInternalFrameDetalleFormTipoFormaPago.registroformapagobancoBeanSwingJInternalFrame.registroformapagobancoLogic.setRegistroFormaPagoBancos(new ArrayList<RegistroFormaPagoBanco>());
							this.jInternalFrameDetalleFormTipoFormaPago.detaformapagofactuBeanSwingJInternalFrame.detaformapagofactuLogic.setDetaFormaPagoFactus(new ArrayList<DetaFormaPagoFactu>());
							this.jInternalFrameDetalleFormTipoFormaPago.grupoclienteformapagoBeanSwingJInternalFrame.grupoclienteformapagoLogic.setGrupoClienteFormaPagos(new ArrayList<GrupoClienteFormaPago>());
							this.jInternalFrameDetalleFormTipoFormaPago.detaformapagoBeanSwingJInternalFrame.detaformapagoLogic.setDetaFormaPagos(new ArrayList<DetaFormaPago>());
							this.jInternalFrameDetalleFormTipoFormaPago.formapagopuntoventaBeanSwingJInternalFrame.formapagopuntoventaLogic.setFormaPagoPuntoVentas(new ArrayList<FormaPagoPuntoVenta>());
							this.jInternalFrameDetalleFormTipoFormaPago.formapagoBeanSwingJInternalFrame.formapagoLogic.setFormaPagos(new ArrayList<FormaPago>());
							this.jInternalFrameDetalleFormTipoFormaPago.formapagoinvenBeanSwingJInternalFrame.formapagoinvenLogic.setFormaPagoInvens(new ArrayList<FormaPagoInven>());
							this.jInternalFrameDetalleFormTipoFormaPago.cierrecajaBeanSwingJInternalFrame.cierrecajaLogic.setCierreCajas(new ArrayList<CierreCaja>());
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							this.jInternalFrameDetalleFormTipoFormaPago.registroformapagobancoBeanSwingJInternalFrame.registroformapagobancos= new ArrayList<RegistroFormaPagoBanco>();
							this.jInternalFrameDetalleFormTipoFormaPago.detaformapagofactuBeanSwingJInternalFrame.detaformapagofactus= new ArrayList<DetaFormaPagoFactu>();
							this.jInternalFrameDetalleFormTipoFormaPago.grupoclienteformapagoBeanSwingJInternalFrame.grupoclienteformapagos= new ArrayList<GrupoClienteFormaPago>();
							this.jInternalFrameDetalleFormTipoFormaPago.detaformapagoBeanSwingJInternalFrame.detaformapagos= new ArrayList<DetaFormaPago>();
							this.jInternalFrameDetalleFormTipoFormaPago.formapagopuntoventaBeanSwingJInternalFrame.formapagopuntoventas= new ArrayList<FormaPagoPuntoVenta>();
							this.jInternalFrameDetalleFormTipoFormaPago.formapagoBeanSwingJInternalFrame.formapagos= new ArrayList<FormaPago>();
							this.jInternalFrameDetalleFormTipoFormaPago.formapagoinvenBeanSwingJInternalFrame.formapagoinvens= new ArrayList<FormaPagoInven>();
							this.jInternalFrameDetalleFormTipoFormaPago.cierrecajaBeanSwingJInternalFrame.cierrecajas= new ArrayList<CierreCaja>();
							}
							//ARCHITECTURE
						}
					}  else {
							
						

							if(this.jInternalFrameDetalleFormTipoFormaPago.registroformapagobancoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoFormaPago.registroformapagobancoBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormTipoFormaPago.registroformapagobancoBeanSwingJInternalFrame.quitarFilaTotales();}
							tipoformapagoAux.setRegistroFormaPagoBancos(this.jInternalFrameDetalleFormTipoFormaPago.registroformapagobancoBeanSwingJInternalFrame.registroformapagobancoLogic.getRegistroFormaPagoBancos());

							if(this.jInternalFrameDetalleFormTipoFormaPago.detaformapagofactuBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoFormaPago.detaformapagofactuBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormTipoFormaPago.detaformapagofactuBeanSwingJInternalFrame.quitarFilaTotales();}
							tipoformapagoAux.setDetaFormaPagoFactus(this.jInternalFrameDetalleFormTipoFormaPago.detaformapagofactuBeanSwingJInternalFrame.detaformapagofactuLogic.getDetaFormaPagoFactus());

							if(this.jInternalFrameDetalleFormTipoFormaPago.grupoclienteformapagoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoFormaPago.grupoclienteformapagoBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormTipoFormaPago.grupoclienteformapagoBeanSwingJInternalFrame.quitarFilaTotales();}
							tipoformapagoAux.setGrupoClienteFormaPagos(this.jInternalFrameDetalleFormTipoFormaPago.grupoclienteformapagoBeanSwingJInternalFrame.grupoclienteformapagoLogic.getGrupoClienteFormaPagos());

							if(this.jInternalFrameDetalleFormTipoFormaPago.detaformapagoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoFormaPago.detaformapagoBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormTipoFormaPago.detaformapagoBeanSwingJInternalFrame.quitarFilaTotales();}
							tipoformapagoAux.setDetaFormaPagos(this.jInternalFrameDetalleFormTipoFormaPago.detaformapagoBeanSwingJInternalFrame.detaformapagoLogic.getDetaFormaPagos());

							if(this.jInternalFrameDetalleFormTipoFormaPago.formapagopuntoventaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoFormaPago.formapagopuntoventaBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormTipoFormaPago.formapagopuntoventaBeanSwingJInternalFrame.quitarFilaTotales();}
							tipoformapagoAux.setFormaPagoPuntoVentas(this.jInternalFrameDetalleFormTipoFormaPago.formapagopuntoventaBeanSwingJInternalFrame.formapagopuntoventaLogic.getFormaPagoPuntoVentas());

							if(this.jInternalFrameDetalleFormTipoFormaPago.formapagoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoFormaPago.formapagoBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormTipoFormaPago.formapagoBeanSwingJInternalFrame.quitarFilaTotales();}
							tipoformapagoAux.setFormaPagos(this.jInternalFrameDetalleFormTipoFormaPago.formapagoBeanSwingJInternalFrame.formapagoLogic.getFormaPagos());

							if(this.jInternalFrameDetalleFormTipoFormaPago.formapagoinvenBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoFormaPago.formapagoinvenBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormTipoFormaPago.formapagoinvenBeanSwingJInternalFrame.quitarFilaTotales();}
							tipoformapagoAux.setFormaPagoInvens(this.jInternalFrameDetalleFormTipoFormaPago.formapagoinvenBeanSwingJInternalFrame.formapagoinvenLogic.getFormaPagoInvens());

							if(this.jInternalFrameDetalleFormTipoFormaPago.cierrecajaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoFormaPago.cierrecajaBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormTipoFormaPago.cierrecajaBeanSwingJInternalFrame.quitarFilaTotales();}
							tipoformapagoAux.setCierreCajas(this.jInternalFrameDetalleFormTipoFormaPago.cierrecajaBeanSwingJInternalFrame.cierrecajaLogic.getCierreCajas());
								
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							if(this.tipoformapagoSessionBean.getEstaModoGuardarRelaciones() 
								|| this.tipoformapagoSessionBean.getEsGuardarRelacionado())	{
								actualizarLista(tipoformapagoAux,tipoformapagoLogic.getTipoFormaPagos());
							}
						} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
							actualizarLista(tipoformapagoAux,tipoformapagos);
						}
						//ARCHITECTURE
					}
				}				
			} else if(maintenanceType==MaintenanceType.GUARDARCAMBIOS) {		
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoformapagoLogic.getTipoFormaPagos().addAll(this.tipoformapagosEliminados);
					
					tipoformapagoLogic.saveTipoFormaPagos();//WithConnection
					//tipoformapagoLogic.getSetVersionRowTipoFormaPagos();//WithConnection
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}	
				//ARCHITECTURE
				this.refrescarForeignKeysDescripcionesTipoFormaPago();
				
				this.tipoformapagosEliminados= new ArrayList<TipoFormaPago>();		
			}
			
			if(this.tipoformapagoSessionBean.getEsGuardarRelacionado()) {
				 this.crearFilaTotales();
			}
			
			
									
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.tipoformapagoSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				if(!this.isPostAccionSinMensaje) {
					JOptionPane.showMessageDialog(this,"Tipo Forma Pago GUARDADO CORRECTAMENTE","MANTENIMIENTO DE Tipo Forma Pago",JOptionPane.INFORMATION_MESSAGE);
					if(maintenanceType==MaintenanceType.NUEVO || maintenanceType==MaintenanceType.ACTUALIZAR) {
						//CUANDO ES NUEVO SE PIERDE REFERENCIA NO SE PORQUE
						this.tipoformapago=tipoformapagoAux;
					}
				}
			}
			
			this.isErrorGuardar=false;
			
			this.inicializarInvalidValues();
		/*
		} else {
			this.mostrarInvalidValues();	
		}
		*/
			
		} catch(Exception e) {
			this.isErrorGuardar=true;
			
			this.crearFilaTotales();
			
			throw e;
		} finally {
      		//this.finishProcessTipoFormaPago();
      	}
		
	}	
	
	public void actualizarRelaciones(TipoFormaPago tipoformapagoLocal) throws Exception {
		
		if(this.tipoformapagoSessionBean.getConGuardarRelaciones()) {			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
			
				tipoformapagoLocal.setRegistroFormaPagoBancos(this.jInternalFrameDetalleFormTipoFormaPago.registroformapagobancoBeanSwingJInternalFrame.registroformapagobancoLogic.getRegistroFormaPagoBancos());
				tipoformapagoLocal.setDetaFormaPagoFactus(this.jInternalFrameDetalleFormTipoFormaPago.detaformapagofactuBeanSwingJInternalFrame.detaformapagofactuLogic.getDetaFormaPagoFactus());
				tipoformapagoLocal.setGrupoClienteFormaPagos(this.jInternalFrameDetalleFormTipoFormaPago.grupoclienteformapagoBeanSwingJInternalFrame.grupoclienteformapagoLogic.getGrupoClienteFormaPagos());
				tipoformapagoLocal.setDetaFormaPagos(this.jInternalFrameDetalleFormTipoFormaPago.detaformapagoBeanSwingJInternalFrame.detaformapagoLogic.getDetaFormaPagos());
				tipoformapagoLocal.setFormaPagoPuntoVentas(this.jInternalFrameDetalleFormTipoFormaPago.formapagopuntoventaBeanSwingJInternalFrame.formapagopuntoventaLogic.getFormaPagoPuntoVentas());
				tipoformapagoLocal.setFormaPagos(this.jInternalFrameDetalleFormTipoFormaPago.formapagoBeanSwingJInternalFrame.formapagoLogic.getFormaPagos());
				tipoformapagoLocal.setFormaPagoInvens(this.jInternalFrameDetalleFormTipoFormaPago.formapagoinvenBeanSwingJInternalFrame.formapagoinvenLogic.getFormaPagoInvens());
				tipoformapagoLocal.setCierreCajas(this.jInternalFrameDetalleFormTipoFormaPago.cierrecajaBeanSwingJInternalFrame.cierrecajaLogic.getCierreCajas());
			
			} else {
			
				tipoformapagoLocal.setRegistroFormaPagoBancos(this.jInternalFrameDetalleFormTipoFormaPago.registroformapagobancoBeanSwingJInternalFrame.registroformapagobancos);
				tipoformapagoLocal.setDetaFormaPagoFactus(this.jInternalFrameDetalleFormTipoFormaPago.detaformapagofactuBeanSwingJInternalFrame.detaformapagofactus);
				tipoformapagoLocal.setGrupoClienteFormaPagos(this.jInternalFrameDetalleFormTipoFormaPago.grupoclienteformapagoBeanSwingJInternalFrame.grupoclienteformapagos);
				tipoformapagoLocal.setDetaFormaPagos(this.jInternalFrameDetalleFormTipoFormaPago.detaformapagoBeanSwingJInternalFrame.detaformapagos);
				tipoformapagoLocal.setFormaPagoPuntoVentas(this.jInternalFrameDetalleFormTipoFormaPago.formapagopuntoventaBeanSwingJInternalFrame.formapagopuntoventas);
				tipoformapagoLocal.setFormaPagos(this.jInternalFrameDetalleFormTipoFormaPago.formapagoBeanSwingJInternalFrame.formapagos);
				tipoformapagoLocal.setFormaPagoInvens(this.jInternalFrameDetalleFormTipoFormaPago.formapagoinvenBeanSwingJInternalFrame.formapagoinvens);
				tipoformapagoLocal.setCierreCajas(this.jInternalFrameDetalleFormTipoFormaPago.cierrecajaBeanSwingJInternalFrame.cierrecajas);	
			}
		}
	}
	
	public void actualizarRelacionFkPadreActual(TipoFormaPago tipoformapagoLocal) throws Exception {	
		if(this.tipoformapagoSessionBean.getEsGuardarRelacionado()) {			
			
		
			if(this.jInternalFrameParent.getClass().equals(EmpresaDetalleFormJInternalFrame.class)) {
				EmpresaBeanSwingJInternalFrame empresaBeanSwingJInternalFrameLocal=(EmpresaBeanSwingJInternalFrame) ((EmpresaDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				empresaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoEmpresa(empresaBeanSwingJInternalFrameLocal.getempresa(),true);
				empresaBeanSwingJInternalFrameLocal.actualizarLista(empresaBeanSwingJInternalFrameLocal.empresa,this.empresasForeignKey);

				empresaBeanSwingJInternalFrameLocal.actualizarRelaciones(empresaBeanSwingJInternalFrameLocal.empresa);

				tipoformapagoLocal.setEmpresa(empresaBeanSwingJInternalFrameLocal.empresa);

				this.addItemDefectoCombosForeignKeyEmpresa();
				this.cargarCombosFrameEmpresasForeignKey("Formulario");
				this.setActualEmpresaForeignKey(empresaBeanSwingJInternalFrameLocal.empresa.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(SucursalDetalleFormJInternalFrame.class)) {
				SucursalBeanSwingJInternalFrame sucursalBeanSwingJInternalFrameLocal=(SucursalBeanSwingJInternalFrame) ((SucursalDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				sucursalBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoSucursal(sucursalBeanSwingJInternalFrameLocal.getsucursal(),true);
				sucursalBeanSwingJInternalFrameLocal.actualizarLista(sucursalBeanSwingJInternalFrameLocal.sucursal,this.sucursalsForeignKey);

				sucursalBeanSwingJInternalFrameLocal.actualizarRelaciones(sucursalBeanSwingJInternalFrameLocal.sucursal);

				tipoformapagoLocal.setSucursal(sucursalBeanSwingJInternalFrameLocal.sucursal);

				this.addItemDefectoCombosForeignKeySucursal();
				this.cargarCombosFrameSucursalsForeignKey("Formulario");
				this.setActualSucursalForeignKey(sucursalBeanSwingJInternalFrameLocal.sucursal.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(ModuloDetalleFormJInternalFrame.class)) {
				ModuloBeanSwingJInternalFrame moduloBeanSwingJInternalFrameLocal=(ModuloBeanSwingJInternalFrame) ((ModuloDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				moduloBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoModulo(moduloBeanSwingJInternalFrameLocal.getmodulo(),true);
				moduloBeanSwingJInternalFrameLocal.actualizarLista(moduloBeanSwingJInternalFrameLocal.modulo,this.modulosForeignKey);

				moduloBeanSwingJInternalFrameLocal.actualizarRelaciones(moduloBeanSwingJInternalFrameLocal.modulo);

				tipoformapagoLocal.setModulo(moduloBeanSwingJInternalFrameLocal.modulo);

				this.addItemDefectoCombosForeignKeyModulo();
				this.cargarCombosFrameModulosForeignKey("Formulario");
				this.setActualModuloForeignKey(moduloBeanSwingJInternalFrameLocal.modulo.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TipoGrupoFormaPagoDetalleFormJInternalFrame.class)) {
				TipoGrupoFormaPagoBeanSwingJInternalFrame tipogrupoformapagoBeanSwingJInternalFrameLocal=(TipoGrupoFormaPagoBeanSwingJInternalFrame) ((TipoGrupoFormaPagoDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				tipogrupoformapagoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTipoGrupoFormaPago(tipogrupoformapagoBeanSwingJInternalFrameLocal.gettipogrupoformapago(),true);
				tipogrupoformapagoBeanSwingJInternalFrameLocal.actualizarLista(tipogrupoformapagoBeanSwingJInternalFrameLocal.tipogrupoformapago,this.tipogrupoformapagosForeignKey);

				tipogrupoformapagoBeanSwingJInternalFrameLocal.actualizarRelaciones(tipogrupoformapagoBeanSwingJInternalFrameLocal.tipogrupoformapago);

				tipoformapagoLocal.setTipoGrupoFormaPago(tipogrupoformapagoBeanSwingJInternalFrameLocal.tipogrupoformapago);

				this.addItemDefectoCombosForeignKeyTipoGrupoFormaPago();
				this.cargarCombosFrameTipoGrupoFormaPagosForeignKey("Formulario");
				this.setActualTipoGrupoFormaPagoForeignKey(tipogrupoformapagoBeanSwingJInternalFrameLocal.tipogrupoformapago.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TipoTransaccionModuloDetalleFormJInternalFrame.class)) {
				TipoTransaccionModuloBeanSwingJInternalFrame tipotransaccionmoduloBeanSwingJInternalFrameLocal=(TipoTransaccionModuloBeanSwingJInternalFrame) ((TipoTransaccionModuloDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				tipotransaccionmoduloBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTipoTransaccionModulo(tipotransaccionmoduloBeanSwingJInternalFrameLocal.gettipotransaccionmodulo(),true);
				tipotransaccionmoduloBeanSwingJInternalFrameLocal.actualizarLista(tipotransaccionmoduloBeanSwingJInternalFrameLocal.tipotransaccionmodulo,this.tipotransaccionmodulosForeignKey);

				tipotransaccionmoduloBeanSwingJInternalFrameLocal.actualizarRelaciones(tipotransaccionmoduloBeanSwingJInternalFrameLocal.tipotransaccionmodulo);

				tipoformapagoLocal.setTipoTransaccionModulo(tipotransaccionmoduloBeanSwingJInternalFrameLocal.tipotransaccionmodulo);

				this.addItemDefectoCombosForeignKeyTipoTransaccionModulo();
				this.cargarCombosFrameTipoTransaccionModulosForeignKey("Formulario");
				this.setActualTipoTransaccionModuloForeignKey(tipotransaccionmoduloBeanSwingJInternalFrameLocal.tipotransaccionmodulo.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TransaccionDetalleFormJInternalFrame.class)) {
				TransaccionBeanSwingJInternalFrame transaccionBeanSwingJInternalFrameLocal=(TransaccionBeanSwingJInternalFrame) ((TransaccionDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				transaccionBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTransaccion(transaccionBeanSwingJInternalFrameLocal.gettransaccion(),true);
				transaccionBeanSwingJInternalFrameLocal.actualizarLista(transaccionBeanSwingJInternalFrameLocal.transaccion,this.transaccionsForeignKey);

				transaccionBeanSwingJInternalFrameLocal.actualizarRelaciones(transaccionBeanSwingJInternalFrameLocal.transaccion);

				tipoformapagoLocal.setTransaccion(transaccionBeanSwingJInternalFrameLocal.transaccion);

				this.addItemDefectoCombosForeignKeyTransaccion();
				this.cargarCombosFrameTransaccionsForeignKey("Formulario");
				this.setActualTransaccionForeignKey(transaccionBeanSwingJInternalFrameLocal.transaccion.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(CuentaContableDetalleFormJInternalFrame.class)) {
				CuentaContableBeanSwingJInternalFrame cuentacontableBeanSwingJInternalFrameLocal=(CuentaContableBeanSwingJInternalFrame) ((CuentaContableDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				cuentacontableBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoCuentaContable(cuentacontableBeanSwingJInternalFrameLocal.getcuentacontable(),true);
				cuentacontableBeanSwingJInternalFrameLocal.actualizarLista(cuentacontableBeanSwingJInternalFrameLocal.cuentacontable,this.cuentacontablesForeignKey);

				cuentacontableBeanSwingJInternalFrameLocal.actualizarRelaciones(cuentacontableBeanSwingJInternalFrameLocal.cuentacontable);

				tipoformapagoLocal.setCuentaContable(cuentacontableBeanSwingJInternalFrameLocal.cuentacontable);

				this.addItemDefectoCombosForeignKeyCuentaContable();
				this.cargarCombosFrameCuentaContablesForeignKey("Formulario");
				this.setActualCuentaContableForeignKey(cuentacontableBeanSwingJInternalFrameLocal.cuentacontable.getId(),false,"Formulario");
			}
		
		}
	}
	
	public Boolean validarTipoFormaPagoActual() throws Exception {
		Boolean estaValidado=false;
		this.inicializarInvalidValues();
		
		/*
		int intSelectedRow = this.jTableDatosTipoFormaPago.getSelectedRow();
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.tipoformapago =(TipoFormaPago) this.tipoformapagoLogic.getTipoFormaPagos().toArray()[this.jTableDatosTipoFormaPago.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
			this.tipoformapago =(TipoFormaPago) this.tipoformapagos.toArray()[this.jTableDatosTipoFormaPago.convertRowIndexToModel(intSelectedRow)];
		}
		//ARCHITECTURE
		*/
		
		this.invalidValues = tipoformapagoValidator.getInvalidValues(this.tipoformapago);
					
		if(this.invalidValues==null || this.invalidValues.length<=0) {
			estaValidado=true;
		} else {
			this.mostrarInvalidValues();	
		}
		
		return estaValidado;
	}
	
	public void actualizarLista(TipoFormaPago tipoformapago,List<TipoFormaPago> tipoformapagos) throws Exception {
		try	{		
			TipoFormaPagoConstantesFunciones.actualizarLista(tipoformapago,tipoformapagos,this.tipoformapagoSessionBean.getEsGuardarRelacionado());		
		} catch(Exception e) {
			throw e;
		}
	}		
	
	public void actualizarSelectedLista(TipoFormaPago tipoformapago,List<TipoFormaPago> tipoformapagos) throws Exception {
		try	{			
			TipoFormaPagoConstantesFunciones.actualizarSelectedLista(tipoformapago,tipoformapagos);
		} catch(Exception e) {
			throw e;
		}
	}	
	
	public Boolean tieneElementosSeleccionados() throws Exception {
		Boolean tiene=false;
		
		List<TipoFormaPago> tipoformapagosLocal=null;
		
		try	{			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				tipoformapagosLocal=this.tipoformapagoLogic.getTipoFormaPagos();
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
				tipoformapagosLocal=this.tipoformapagos;
			}
			//ARCHITECTURE
		
			for(TipoFormaPago tipoformapagoLocal:tipoformapagosLocal) {
				if(this.permiteMantenimiento(tipoformapagoLocal) && tipoformapagoLocal.getIsSelected()) {
					tiene=true;
					break;
				}
			}
		} catch(Exception e) {
			throw e;
		}
		
		return tiene;
	}			
	
	public void mostrarInvalidValues() throws Exception {
		String sMensaje="";
				
		for (InvalidValue invalidValue : this.invalidValues) {
			sMensaje+="\r\n"+TipoFormaPagoConstantesFunciones.getTipoFormaPagoLabelDesdeNombre(invalidValue.getPropertyName())+"->"+invalidValue.getMessage();
			
			//MOSTRAR CAMPOS INVALIDOS
			if(invalidValue.getPropertyName().equals(TipoFormaPagoConstantesFunciones.IDEMPRESA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormTipoFormaPago.jLabelid_empresaTipoFormaPago,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(TipoFormaPagoConstantesFunciones.IDSUCURSAL)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormTipoFormaPago.jLabelid_sucursalTipoFormaPago,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(TipoFormaPagoConstantesFunciones.IDMODULO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormTipoFormaPago.jLabelid_moduloTipoFormaPago,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(TipoFormaPagoConstantesFunciones.IDTIPOGRUPOFORMAPAGO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormTipoFormaPago.jLabelid_tipo_grupo_forma_pagoTipoFormaPago,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(TipoFormaPagoConstantesFunciones.NOMBRE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormTipoFormaPago.jLabelnombreTipoFormaPago,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(TipoFormaPagoConstantesFunciones.SIGLAS)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormTipoFormaPago.jLabelsiglasTipoFormaPago,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(TipoFormaPagoConstantesFunciones.CONDETALLE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormTipoFormaPago.jLabelcon_detalleTipoFormaPago,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(TipoFormaPagoConstantesFunciones.CONCUOTAS)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormTipoFormaPago.jLabelcon_cuotasTipoFormaPago,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(TipoFormaPagoConstantesFunciones.IDTIPOTRANSACCIONMODULO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormTipoFormaPago.jLabelid_tipo_transaccion_moduloTipoFormaPago,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(TipoFormaPagoConstantesFunciones.IDTRANSACCION)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormTipoFormaPago.jLabelid_transaccionTipoFormaPago,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(TipoFormaPagoConstantesFunciones.IDCUENTACONTABLE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormTipoFormaPago.jLabelid_cuenta_contableTipoFormaPago,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(TipoFormaPagoConstantesFunciones.DESCRIPCION)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormTipoFormaPago.jLabeldescripcionTipoFormaPago,invalidValue.getMessage());}
        }
		
		
		if(!sMensaje.equals("")) {
			//JOptionPane.showMessageDialog(this,sMensaje,"VALIDACION ",JOptionPane.ERROR_MESSAGE);
			throw new Exception(sMensaje);			
		}
		
		/*
		System.out.println(invalidValue);
        System.out.println("message=" + invalidValue.getMessage());
        System.out.println("propertyName=" + invalidValue.getPropertyName());
        System.out.println("propertyPath=" + invalidValue.getPropertyPath());
        System.out.println("value=" + invalidValue.getValue());
        */
	}		
	
	public void inicializarInvalidValues() throws Exception {
		String sMensaje="";	
		
		if(this.jInternalFrameDetalleFormTipoFormaPago!=null) {
		
		//MOSTRAR CAMPOS INVALIDOS
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormTipoFormaPago.jLabelid_empresaTipoFormaPago,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormTipoFormaPago.jLabelid_sucursalTipoFormaPago,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormTipoFormaPago.jLabelid_moduloTipoFormaPago,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormTipoFormaPago.jLabelid_tipo_grupo_forma_pagoTipoFormaPago,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormTipoFormaPago.jLabelnombreTipoFormaPago,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormTipoFormaPago.jLabelsiglasTipoFormaPago,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormTipoFormaPago.jLabelcon_detalleTipoFormaPago,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormTipoFormaPago.jLabelcon_cuotasTipoFormaPago,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormTipoFormaPago.jLabelid_tipo_transaccion_moduloTipoFormaPago,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormTipoFormaPago.jLabelid_transaccionTipoFormaPago,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormTipoFormaPago.jLabelid_cuenta_contableTipoFormaPago,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormTipoFormaPago.jLabeldescripcionTipoFormaPago,"");
		
		}
	}
	
	
	
	public void actualizarObjetoPadreFk(String sTipo)  throws Exception {
		if(sTipo.equals("XXXAuxiliar")) {
		
		}
		
		 else  if(sTipo.equals("RegistroFormaPagoBanco")) {
			if(this.tipoformapago==null) {
				this.tipoformapago= new TipoFormaPago();
			}

			if(this.tipoformapagoSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoTipoFormaPago
				this.setVariablesFormularioToObjetoActualTipoFormaPago(this.tipoformapago,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysTipoFormaPago(this.tipoformapago);

				this.jInternalFrameDetalleFormTipoFormaPago.registroformapagobancoBeanSwingJInternalFrame.getregistroformapagobanco().setTipoFormaPago(this.tipoformapago);
			}

			return;
		}
		 else  if(sTipo.equals("DetaFormaPagoFactu")) {
			if(this.tipoformapago==null) {
				this.tipoformapago= new TipoFormaPago();
			}

			if(this.tipoformapagoSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoTipoFormaPago
				this.setVariablesFormularioToObjetoActualTipoFormaPago(this.tipoformapago,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysTipoFormaPago(this.tipoformapago);

				this.jInternalFrameDetalleFormTipoFormaPago.detaformapagofactuBeanSwingJInternalFrame.getdetaformapagofactu().setTipoFormaPago(this.tipoformapago);
			}

			return;
		}
		 else  if(sTipo.equals("GrupoClienteFormaPago")) {
			if(this.tipoformapago==null) {
				this.tipoformapago= new TipoFormaPago();
			}

			if(this.tipoformapagoSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoTipoFormaPago
				this.setVariablesFormularioToObjetoActualTipoFormaPago(this.tipoformapago,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysTipoFormaPago(this.tipoformapago);

				this.jInternalFrameDetalleFormTipoFormaPago.grupoclienteformapagoBeanSwingJInternalFrame.getgrupoclienteformapago().setTipoFormaPago(this.tipoformapago);
			}

			return;
		}
		 else  if(sTipo.equals("DetaFormaPago")) {
			if(this.tipoformapago==null) {
				this.tipoformapago= new TipoFormaPago();
			}

			if(this.tipoformapagoSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoTipoFormaPago
				this.setVariablesFormularioToObjetoActualTipoFormaPago(this.tipoformapago,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysTipoFormaPago(this.tipoformapago);

				this.jInternalFrameDetalleFormTipoFormaPago.detaformapagoBeanSwingJInternalFrame.getdetaformapago().setTipoFormaPago(this.tipoformapago);
			}

			return;
		}
		 else  if(sTipo.equals("FormaPagoPuntoVenta")) {
			if(this.tipoformapago==null) {
				this.tipoformapago= new TipoFormaPago();
			}

			if(this.tipoformapagoSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoTipoFormaPago
				this.setVariablesFormularioToObjetoActualTipoFormaPago(this.tipoformapago,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysTipoFormaPago(this.tipoformapago);

				this.jInternalFrameDetalleFormTipoFormaPago.formapagopuntoventaBeanSwingJInternalFrame.getformapagopuntoventa().setTipoFormaPago(this.tipoformapago);
			}

			return;
		}
		 else  if(sTipo.equals("FormaPago")) {
			if(this.tipoformapago==null) {
				this.tipoformapago= new TipoFormaPago();
			}

			if(this.tipoformapagoSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoTipoFormaPago
				this.setVariablesFormularioToObjetoActualTipoFormaPago(this.tipoformapago,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysTipoFormaPago(this.tipoformapago);

				this.jInternalFrameDetalleFormTipoFormaPago.formapagoBeanSwingJInternalFrame.getformapago().setTipoFormaPago(this.tipoformapago);
			}

			return;
		}
		 else  if(sTipo.equals("FormaPagoInven")) {
			if(this.tipoformapago==null) {
				this.tipoformapago= new TipoFormaPago();
			}

			if(this.tipoformapagoSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoTipoFormaPago
				this.setVariablesFormularioToObjetoActualTipoFormaPago(this.tipoformapago,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysTipoFormaPago(this.tipoformapago);

				this.jInternalFrameDetalleFormTipoFormaPago.formapagoinvenBeanSwingJInternalFrame.getformapagoinven().setTipoFormaPago(this.tipoformapago);
			}

			return;
		}
		 else  if(sTipo.equals("CierreCaja")) {
			if(this.tipoformapago==null) {
				this.tipoformapago= new TipoFormaPago();
			}

			if(this.tipoformapagoSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoTipoFormaPago
				this.setVariablesFormularioToObjetoActualTipoFormaPago(this.tipoformapago,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysTipoFormaPago(this.tipoformapago);

				this.jInternalFrameDetalleFormTipoFormaPago.cierrecajaBeanSwingJInternalFrame.getcierrecaja().setTipoFormaPago(this.tipoformapago);
			}

			return;
		}
	}
	
	public void nuevoPreparar() throws Exception {
		this.nuevoPreparar(false);
	}
	
	public void nuevoPreparar(Boolean esNuevoGuardarCambios) throws Exception {
		this.iIdNuevoTipoFormaPago--;	
		
		
		this.tipoformapagoAux=new TipoFormaPago();
		
		this.tipoformapagoAux.setId(this.iIdNuevoTipoFormaPago);
		this.tipoformapagoAux.setIsChanged(true);
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.tipoformapagoLogic.getTipoFormaPagos().add(this.tipoformapagoAux);
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			this.tipoformapagos.add(this.tipoformapagoAux);
		}
		//ARCHITECTURE
		
		this.tipoformapago=this.tipoformapagoAux;
		
		if(TipoFormaPagoJInternalFrame.ISBINDING_MANUAL_TABLA) {
			this.setVariablesObjetoActualToFormularioTipoFormaPago(this.tipoformapago);
			this.setVariablesObjetoActualToFormularioForeignKeyTipoFormaPago(this.tipoformapago);
		}
				
		//this.setDefaultControlesTipoFormaPago();
		
		this.inicializarInvalidValues();
				
		//SELECCIONA ITEM DEFECTO-->SET O SELECTED INDEX
		this.setItemDefectoCombosForeignKeyTipoFormaPago();
		
		
		//INICIALIZA VARIABLES COMBOS GLOBALES A FORMULARIO(ParametroGeneralUsuario)
		this.setVariablesGlobalesCombosForeignKeyTipoFormaPago();
		
		//INICIALIZA VARIABLES COMBOS GLOBALES AUXILIARES A FORMULARIO(Anio,Mes)
		//this.setVariablesGlobalesAuxiliaresCombosForeignKeyTipoFormaPago();
		
		//SI TIENE FOREIGN KEY CON CAMPO esDefecto=true, SE ACTUALIZA A OBJETO ACTUAL
		this.setVariablesForeignKeyObjetoBeanDefectoActualToObjetoActualTipoFormaPago(this.tipoformapagoBean,this.tipoformapago,false,false);
		
		//ACTUALIZA VALORES PARA EL OBJETO ACTUAL ANTES DE ENVIARLO A ACTUALIZAR
		this.setVariablesFormularioToObjetoActualForeignKeysTipoFormaPago(this.tipoformapago);
				
		ArrayList<Classe> classes=new ArrayList<Classe>();
		
		if(this.jInternalFrameParent!=null) {
			this.jInternalFrameParent.actualizarObjetoPadreFk(TipoFormaPagoConstantesFunciones.CLASSNAME);
		}	
		
		
		if(this.tipoformapagoSessionBean.getConGuardarRelaciones()) {
			classes=TipoFormaPagoConstantesFunciones.getClassesRelationshipsOfTipoFormaPago(new ArrayList<Classe>(),DeepLoadType.NONE);
		}
		
		this.classesActual=new ArrayList<Classe>();
		this.classesActual.addAll(classes);
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {						
			this.tipoformapagoReturnGeneral=tipoformapagoLogic.procesarEventosTipoFormaPagosWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,EventoGlobalTipo.FORM_RECARGAR,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.tipoformapagoLogic.getTipoFormaPagos(),this.tipoformapago,this.tipoformapagoParameterGeneral,this.isEsNuevoTipoFormaPago,classes);//this.tipoformapagoLogic.getTipoFormaPago()
						
		} else if(Constantes.ISUSAEJBREMOTE) {
						
		} else if(Constantes.ISUSAEJBHOME) {
		}
		//ARCHITECTURE
		
		//ACTUALIZA VARIABLES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
		//this.setVariablesObjetoReturnGeneralToBeanTipoFormaPago(this.tipoformapagoReturnGeneral,this.tipoformapagoBean,false);
		
		if(this.tipoformapagoReturnGeneral.getConRecargarPropiedades()) {
			//INICIALIZA VARIABLES COMBOS NORMALES (FK)
			this.setVariablesObjetoActualToFormularioForeignKeyTipoFormaPago(this.tipoformapagoReturnGeneral.getTipoFormaPago());
			
			//INICIALIZA VARIABLES NORMALES A FORMULARIO(SIN FK)
			this.setVariablesObjetoActualToFormularioTipoFormaPago(this.tipoformapagoReturnGeneral.getTipoFormaPago());
		}
		
		if(this.tipoformapagoReturnGeneral.getConRecargarRelaciones()) {
			//INICIALIZA VARIABLES RELACIONES A FORMULARIO
			this.setVariablesRelacionesObjetoActualToFormularioTipoFormaPago(this.tipoformapagoReturnGeneral.getTipoFormaPago(),classes);//this.tipoformapagoBean);	
		}
			
		//ACTUALIZA VARIABLES FORMULARIO A OBJETO ACTUAL (PARA NUEVO TABLA O GUARDAR CAMBIOS
		if(esNuevoGuardarCambios) {
			this.setVariablesFormularioToObjetoActualTipoFormaPago(this.tipoformapago,false);
		}
		
		//INICIALIZA VARIABLES COMBOS DEFAULT DEL PROYECTO(|DEFAULT para FK)
		//this.setVariablesDefaultCombosForeignKeyTipoFormaPago();
		
		//INICIALIZA VARIABLES COMBOS PARAMETRO DEL PROYECTO(|VALORPARAM Era para ParametroModulo, ahora en logic)
		//this.setVariablesParametroCombosForeignKeyTipoFormaPago();						
		
		if(!esNuevoGuardarCambios) {
			//INICIALIZA VARIABLES POR OPCION MENU
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			TipoFormaPagoBeanSwingJInternalFrameAdditional.RecargarFormTipoFormaPago(this,"NUEVO_PREPARAR","",this.arrDatoGeneral);
		
			//NO FUNCIONA BINDINGS			
			this.inicializarActualizarBindingTipoFormaPago(false);
						
			if(tipoformapagoSessionBean.getConGuardarRelaciones()) {
				//DEBERIA YA ESTAR CARGADO LOS COMBOS Y SI SE NECESITA ALGO MAS SE DEBE CREAR FUNCION LIMITADA
				//SI DEBE TRAER Y RESETEAR TABLA
				

				if(this.jInternalFrameDetalleFormTipoFormaPago.registroformapagobancoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoFormaPago.registroformapagobancoBeanSwingJInternalFrame.registroformapagobancoSessionBean.getEsGuardarRelacionado() && RegistroFormaPagoBancoJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonRegistroFormaPagoBancoActionPerformed(null,-1,false,true,null);
				}

				if(this.jInternalFrameDetalleFormTipoFormaPago.detaformapagofactuBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoFormaPago.detaformapagofactuBeanSwingJInternalFrame.detaformapagofactuSessionBean.getEsGuardarRelacionado() && DetaFormaPagoFactuJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonDetaFormaPagoFactuActionPerformed(null,-1,false,true,null);
				}

				if(this.jInternalFrameDetalleFormTipoFormaPago.grupoclienteformapagoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoFormaPago.grupoclienteformapagoBeanSwingJInternalFrame.grupoclienteformapagoSessionBean.getEsGuardarRelacionado() && GrupoClienteFormaPagoJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonGrupoClienteFormaPagoActionPerformed(null,-1,false,true,null);
				}

				if(this.jInternalFrameDetalleFormTipoFormaPago.detaformapagoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoFormaPago.detaformapagoBeanSwingJInternalFrame.detaformapagoSessionBean.getEsGuardarRelacionado() && DetaFormaPagoJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonDetaFormaPagoActionPerformed(null,-1,false,true,null);
				}

				if(this.jInternalFrameDetalleFormTipoFormaPago.formapagopuntoventaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoFormaPago.formapagopuntoventaBeanSwingJInternalFrame.formapagopuntoventaSessionBean.getEsGuardarRelacionado() && FormaPagoPuntoVentaJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonFormaPagoPuntoVentaActionPerformed(null,-1,false,true,null);
				}

				if(this.jInternalFrameDetalleFormTipoFormaPago.formapagoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoFormaPago.formapagoBeanSwingJInternalFrame.formapagoSessionBean.getEsGuardarRelacionado() && FormaPagoJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonFormaPagoActionPerformed(null,-1,false,true,null);
				}

				if(this.jInternalFrameDetalleFormTipoFormaPago.formapagoinvenBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoFormaPago.formapagoinvenBeanSwingJInternalFrame.formapagoinvenSessionBean.getEsGuardarRelacionado() && FormaPagoInvenJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonFormaPagoInvenActionPerformed(null,-1,false,true,null);
				}

				if(this.jInternalFrameDetalleFormTipoFormaPago.cierrecajaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoFormaPago.cierrecajaBeanSwingJInternalFrame.cierrecajaSessionBean.getEsGuardarRelacionado() && CierreCajaJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonCierreCajaActionPerformed(null,-1,false,true,null);
				}				
			}
				
			//SI ES MANUAL
			if(TipoFormaPagoJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualTipoFormaPago();
			}
			
			this.actualizarVisualTableDatosTipoFormaPago();
			
			this.jTableDatosTipoFormaPago.setRowSelectionInterval(this.getIndiceNuevoTipoFormaPago(), this.getIndiceNuevoTipoFormaPago());
			
			this.seleccionarFilaTablaTipoFormaPagoActual();
						
			this.actualizarEstadoCeldasBotonesTipoFormaPago("a", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
		
		}		
	}
	
	public void habilitarDeshabilitarControlesTipoFormaPago(Boolean isHabilitar) throws Exception {
		
		this.jInternalFrameDetalleFormTipoFormaPago.jTextAreanombreTipoFormaPago.setEnabled(isHabilitar && this.tipoformapagoConstantesFunciones.activarnombreTipoFormaPago);
		this.jInternalFrameDetalleFormTipoFormaPago.jTextFieldsiglasTipoFormaPago.setEnabled(isHabilitar && this.tipoformapagoConstantesFunciones.activarsiglasTipoFormaPago);
		this.jInternalFrameDetalleFormTipoFormaPago.jCheckBoxcon_detalleTipoFormaPago.setEnabled(isHabilitar && this.tipoformapagoConstantesFunciones.activarcon_detalleTipoFormaPago);
		this.jInternalFrameDetalleFormTipoFormaPago.jCheckBoxcon_cuotasTipoFormaPago.setEnabled(isHabilitar && this.tipoformapagoConstantesFunciones.activarcon_cuotasTipoFormaPago);
		this.jInternalFrameDetalleFormTipoFormaPago.jTextAreadescripcionTipoFormaPago.setEnabled(isHabilitar && this.tipoformapagoConstantesFunciones.activardescripcionTipoFormaPago);	
		//
		this.jInternalFrameDetalleFormTipoFormaPago.jComboBoxid_empresaTipoFormaPago.setEnabled(isHabilitar && this.tipoformapagoConstantesFunciones.activarid_empresaTipoFormaPago);//
		this.jInternalFrameDetalleFormTipoFormaPago.jComboBoxid_sucursalTipoFormaPago.setEnabled(isHabilitar && this.tipoformapagoConstantesFunciones.activarid_sucursalTipoFormaPago);//
		this.jInternalFrameDetalleFormTipoFormaPago.jComboBoxid_moduloTipoFormaPago.setEnabled(isHabilitar && this.tipoformapagoConstantesFunciones.activarid_moduloTipoFormaPago);
		this.jInternalFrameDetalleFormTipoFormaPago.jComboBoxid_tipo_grupo_forma_pagoTipoFormaPago.setEnabled(isHabilitar && this.tipoformapagoConstantesFunciones.activarid_tipo_grupo_forma_pagoTipoFormaPago);//
		this.jInternalFrameDetalleFormTipoFormaPago.jComboBoxid_tipo_transaccion_moduloTipoFormaPago.setEnabled(isHabilitar && this.tipoformapagoConstantesFunciones.activarid_tipo_transaccion_moduloTipoFormaPago);
		this.jInternalFrameDetalleFormTipoFormaPago.jComboBoxid_transaccionTipoFormaPago.setEnabled(isHabilitar && this.tipoformapagoConstantesFunciones.activarid_transaccionTipoFormaPago);
		this.jInternalFrameDetalleFormTipoFormaPago.jComboBoxid_cuenta_contableTipoFormaPago.setEnabled(isHabilitar && this.tipoformapagoConstantesFunciones.activarid_cuenta_contableTipoFormaPago);
	};
	
	public void setDefaultControlesTipoFormaPago() throws Exception {
			
	};
	
	
	public void habilitarDeshabilitarTipoMantenimientoTipoFormaPago(Boolean esRelaciones) throws Exception {
		if(esRelaciones) {
			//this.tipoformapagoSessionBean.setConGuardarRelaciones(true);			
			this.tipoformapagoSessionBean.setEstaModoGuardarRelaciones(true);				
			this.jInternalFrameDetalleFormTipoFormaPago.jTabbedPaneRelacionesTipoFormaPago.setVisible(true);
			
			

			if(this.jInternalFrameDetalleFormTipoFormaPago.registroformapagobancoBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormTipoFormaPago.registroformapagobancoBeanSwingJInternalFrame.registroformapagobancoSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormTipoFormaPago.registroformapagobancoBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}

			if(this.jInternalFrameDetalleFormTipoFormaPago.detaformapagofactuBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormTipoFormaPago.detaformapagofactuBeanSwingJInternalFrame.detaformapagofactuSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormTipoFormaPago.detaformapagofactuBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}

			if(this.jInternalFrameDetalleFormTipoFormaPago.grupoclienteformapagoBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormTipoFormaPago.grupoclienteformapagoBeanSwingJInternalFrame.grupoclienteformapagoSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormTipoFormaPago.grupoclienteformapagoBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}

			if(this.jInternalFrameDetalleFormTipoFormaPago.detaformapagoBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormTipoFormaPago.detaformapagoBeanSwingJInternalFrame.detaformapagoSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormTipoFormaPago.detaformapagoBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}

			if(this.jInternalFrameDetalleFormTipoFormaPago.formapagopuntoventaBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormTipoFormaPago.formapagopuntoventaBeanSwingJInternalFrame.formapagopuntoventaSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormTipoFormaPago.formapagopuntoventaBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}

			if(this.jInternalFrameDetalleFormTipoFormaPago.formapagoBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormTipoFormaPago.formapagoBeanSwingJInternalFrame.formapagoSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormTipoFormaPago.formapagoBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}

			if(this.jInternalFrameDetalleFormTipoFormaPago.formapagoinvenBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormTipoFormaPago.formapagoinvenBeanSwingJInternalFrame.formapagoinvenSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormTipoFormaPago.formapagoinvenBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}

			if(this.jInternalFrameDetalleFormTipoFormaPago.cierrecajaBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormTipoFormaPago.cierrecajaBeanSwingJInternalFrame.cierrecajaSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormTipoFormaPago.cierrecajaBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}		
		} else {
			//this.tipoformapagoSessionBean.setConGuardarRelaciones(false);			
			this.tipoformapagoSessionBean.setEstaModoGuardarRelaciones(false);						
			this.jInternalFrameDetalleFormTipoFormaPago.jTabbedPaneRelacionesTipoFormaPago.setVisible(false);
			
			

			if(this.jInternalFrameDetalleFormTipoFormaPago.registroformapagobancoBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormTipoFormaPago.registroformapagobancoBeanSwingJInternalFrame.registroformapagobancoSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormTipoFormaPago.registroformapagobancoBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}

			if(this.jInternalFrameDetalleFormTipoFormaPago.detaformapagofactuBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormTipoFormaPago.detaformapagofactuBeanSwingJInternalFrame.detaformapagofactuSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormTipoFormaPago.detaformapagofactuBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}

			if(this.jInternalFrameDetalleFormTipoFormaPago.grupoclienteformapagoBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormTipoFormaPago.grupoclienteformapagoBeanSwingJInternalFrame.grupoclienteformapagoSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormTipoFormaPago.grupoclienteformapagoBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}

			if(this.jInternalFrameDetalleFormTipoFormaPago.detaformapagoBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormTipoFormaPago.detaformapagoBeanSwingJInternalFrame.detaformapagoSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormTipoFormaPago.detaformapagoBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}

			if(this.jInternalFrameDetalleFormTipoFormaPago.formapagopuntoventaBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormTipoFormaPago.formapagopuntoventaBeanSwingJInternalFrame.formapagopuntoventaSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormTipoFormaPago.formapagopuntoventaBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}

			if(this.jInternalFrameDetalleFormTipoFormaPago.formapagoBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormTipoFormaPago.formapagoBeanSwingJInternalFrame.formapagoSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormTipoFormaPago.formapagoBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}

			if(this.jInternalFrameDetalleFormTipoFormaPago.formapagoinvenBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormTipoFormaPago.formapagoinvenBeanSwingJInternalFrame.formapagoinvenSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormTipoFormaPago.formapagoinvenBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}

			if(this.jInternalFrameDetalleFormTipoFormaPago.cierrecajaBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormTipoFormaPago.cierrecajaBeanSwingJInternalFrame.cierrecajaSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormTipoFormaPago.cierrecajaBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}
		}
	};
	
	public int getIndiceNuevoTipoFormaPago() throws Exception {
		int iIndice=0;
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(TipoFormaPago tipoformapagoAux:this.tipoformapagoLogic.getTipoFormaPagos()) {
				if(tipoformapagoAux.getId().equals(this.iIdNuevoTipoFormaPago)) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(TipoFormaPago tipoformapagoAux:this.tipoformapagos) {
				if(tipoformapagoAux.getId().equals(this.iIdNuevoTipoFormaPago)) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
			iIndice=iIndice-1;
		}
		
		return iIndice;
	}
	
	public int getIndiceActualTipoFormaPago(TipoFormaPago tipoformapago,Integer iIndiceActual) throws Exception {
		Integer iIndice=0;
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(TipoFormaPago tipoformapagoAux:this.tipoformapagoLogic.getTipoFormaPagos()) {
				if(tipoformapagoAux.getId().equals(tipoformapago.getId())) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(TipoFormaPago tipoformapagoAux:this.tipoformapagos) {
				if(tipoformapagoAux.getId().equals(tipoformapago.getId())) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
			iIndice=iIndiceActual;
		}
		
		return iIndice;
	}
	
	public void setCamposBaseDesdeOriginalTipoFormaPago(TipoFormaPago tipoformapagoOriginal) throws Exception {
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(TipoFormaPago tipoformapagoAux:this.tipoformapagoLogic.getTipoFormaPagos()) {
				if(tipoformapagoAux.getTipoFormaPagoOriginal().getId().equals(tipoformapagoOriginal.getId())) {
					existe=true;
					tipoformapagoOriginal.setId(tipoformapagoAux.getId());
					tipoformapagoOriginal.setVersionRow(tipoformapagoAux.getVersionRow());
					break;
				}
				
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(TipoFormaPago tipoformapagoAux:this.tipoformapagos) {
				if(tipoformapagoAux.getTipoFormaPagoOriginal().getId().equals(tipoformapagoOriginal.getId())) {
					existe=true;
					tipoformapagoOriginal.setId(tipoformapagoAux.getId());
					tipoformapagoOriginal.setVersionRow(tipoformapagoAux.getVersionRow());
					break;
				}				
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
		}
	}
	
	public void cancelarNuevosTipoFormaPago(Boolean esParaCancelar) throws Exception {
		tipoformapagosAux=new ArrayList<TipoFormaPago>();
		tipoformapagoAux=new TipoFormaPago();
		
		if(!this.tipoformapagoSessionBean.getEsGuardarRelacionado()) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				for(TipoFormaPago tipoformapagoAux:this.tipoformapagoLogic.getTipoFormaPagos()) {
					if(tipoformapagoAux.getId()<0) {
						tipoformapagosAux.add(tipoformapagoAux);
					}		
				}
				this.iIdNuevoTipoFormaPago=0L;
				this.tipoformapagoLogic.getTipoFormaPagos().removeAll(tipoformapagosAux);
					
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(TipoFormaPago tipoformapagoAux:this.tipoformapagos) {
					if(tipoformapagoAux.getId()<0) {
						tipoformapagosAux.add(tipoformapagoAux);
					}		
				}
				this.iIdNuevoTipoFormaPago=0L;
				this.tipoformapagos.removeAll(tipoformapagosAux);
			}	
		} else {			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				if(esParaCancelar && this.isEsNuevoTipoFormaPago 
					&& this.tipoformapagoLogic.getTipoFormaPagos().size()>0
					) {
					tipoformapagoAux=this.tipoformapagoLogic.getTipoFormaPagos().get(this.tipoformapagoLogic.getTipoFormaPagos().size() - 1);
				
					if(tipoformapagoAux.getId()<0) {
						this.tipoformapagoLogic.getTipoFormaPagos().remove(tipoformapagoAux);
					}
				}
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				if(esParaCancelar && this.isEsNuevoTipoFormaPago && this.tipoformapagos.size()>0) {
					tipoformapagoAux=this.tipoformapagos.get(this.tipoformapagos.size() - 1);
				
					if(tipoformapagoAux.getId()<0) {
						this.tipoformapagos.remove(tipoformapagoAux);
					}
				}
			}	
		}
	}
	
	public void cancelarNuevoTipoFormaPago(Boolean esParaCancelar) throws Exception {
		if(Constantes.ISUSAEJBLOGICLAYER) {
			if(tipoformapago.getId()<0) {
				this.tipoformapagoLogic.getTipoFormaPagos().remove(this.tipoformapago);
			}					
		} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
			if(tipoformapago.getId()<0) {
				this.tipoformapagos.remove(this.tipoformapago);
			}
		}			
	}
	
	public void setEstadosInicialesTipoFormaPago(List<TipoFormaPago> tipoformapagosAux) throws Exception {
		TipoFormaPagoConstantesFunciones.setEstadosInicialesTipoFormaPago(tipoformapagosAux);
	}
	
	public void setEstadosInicialesTipoFormaPago(TipoFormaPago tipoformapagoAux) throws Exception {
		TipoFormaPagoConstantesFunciones.setEstadosInicialesTipoFormaPago(tipoformapagoAux);		
	}
	
	public void nuevo() throws Exception {
		try	{
			//ESTA VALIDADO EN FUNCION ACTUALIZAR
			//if(this.validarTipoFormaPagoActual()) {
				this.ejecutarMantenimiento(MaintenanceType.NUEVO);
				
				this.actualizarEstadoCeldasBotonesTipoFormaPago("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
				
			//}
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,TipoFormaPagoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void actualizar() throws Exception {
		try	{
			if(this.validarTipoFormaPagoActual()) {
				if(!this.isEsNuevoTipoFormaPago) {
					this.ejecutarMantenimiento(MaintenanceType.ACTUALIZAR);
					
					this.actualizarEstadoCeldasBotonesTipoFormaPago("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
					
				} else {					
					this.nuevo();
					this.isEsNuevoTipoFormaPago=false;
				}
				
				//SE CANCELA AL FINAL DEL PROCESO JBUTTONACTUALIZAR
				//this.cancelar(false);
			}		
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,TipoFormaPagoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void eliminar() throws Exception {
		try	{	
			if(this.validarTipoFormaPagoActual()) {
				if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE ELIMINAR EL/LA Tipo Forma Pago ?", "MANTENIMIENTO DE Tipo Forma Pago", JOptionPane.OK_CANCEL_OPTION) == 0) {
					this.ejecutarMantenimiento(MaintenanceType.ELIMINAR);			
					this.actualizarEstadoCeldasBotonesTipoFormaPago("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
				}
			
			}
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,TipoFormaPagoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void guardarCambios() throws Exception {
		try	{
			this.ejecutarMantenimiento(MaintenanceType.GUARDARCAMBIOS);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,TipoFormaPagoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarAsignar(TipoFormaPago tipoformapago) throws Exception {
		TipoFormaPagoConstantesFunciones.seleccionarAsignar(this.tipoformapago,tipoformapago);
	}
	
	public void seleccionar() throws Exception {
		try	{
			//ACTUALIZO EL PERMISO ACTUALIZAR CON EL PERMISO ACTUALIZAR ORIGINAL ESTE PERMISO SE UTILIZA PARA EL NUEVO TAMBIEN
			this.isPermisoActualizarTipoFormaPago=this.isPermisoActualizarOriginalTipoFormaPago;
			
			
			this.seleccionarAsignar(tipoformapago);
			
			

			idCuentaContableActual=tipoformapago.getid_cuenta_contable();
			this.seleccionarCuentaContableActual();
			
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			TipoFormaPagoConstantesFunciones.quitarEspaciosTipoFormaPago(this.tipoformapago,this.arrDatoGeneral);
			
			
			this.actualizarEstadoCeldasBotonesTipoFormaPago("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,TipoFormaPagoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarBusqueda(Long id) throws Exception {
		try	{
			this.tipoformapagoSessionBean.setsFuncionBusquedaRapida(this.tipoformapagoSessionBean.getsFuncionBusquedaRapida().replace("TO_REPLACE", id.toString()));
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,TipoFormaPagoConstantesFunciones.CLASSNAME);
		}
	}
	
	
	//BUSQUEDA INTERNA FK
	public void seleccionarCuentaContableActual() throws Exception {
		try	{
			CuentaContable cuentacontableAux=new CuentaContable();

			if(this.idCuentaContableActual != null && this.idCuentaContableActual>0) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					cuentacontableLogic.getEntityWithConnection(this.idCuentaContableActual);
					cuentacontableAux= cuentacontableLogic.getCuentaContable();
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE

				cuentacontablesForeignKey=new ArrayList<CuentaContable>();
				cuentacontablesForeignKey.add(cuentacontableAux);
			}

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}
	
	public void cancelar() throws Exception {
		this.cancelar(true);
	}
	
	public void cancelar(Boolean esParaCancelar) throws Exception {
		try {
														
			
			//SE UTILIZA COLUMNA ELIMINAR EN TABLA
			if(this.isEsNuevoTipoFormaPago) {
				//NO CANCELA TODOS NUEVOS POR FUNCIONALIDAD GUARDAR CAMBIOS
				//this.cancelarNuevosTipoFormaPago(esParaCancelar);				
				this.cancelarNuevoTipoFormaPago(esParaCancelar);								
			}
			
			this.tipoformapago=new TipoFormaPago();
			
			this.inicializarTipoFormaPago();
			
			this.actualizarEstadoCeldasBotonesTipoFormaPago("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,TipoFormaPagoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void inicializarTipoFormaPago() throws Exception {
		try {
			TipoFormaPagoConstantesFunciones.inicializarTipoFormaPago(this.tipoformapago);
			
			} catch(Exception e) {
			throw e;
		}
	}
	
	public void anteriores()throws Exception {
		try	{
			//this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina-this.iNumeroPaginacion;
			
			if(this.iNumeroPaginacionPagina-this.iNumeroPaginacion<this.iNumeroPaginacion) {
				this.iNumeroPaginacionPagina=0;		
			} else {
				this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina-this.iNumeroPaginacion;
			}
			
			this.procesarBusqueda(this.sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,TipoFormaPagoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void siguientes()throws Exception {
		try	{			
			if(this.tipoformapagoLogic.getTipoFormaPagos().size()>0) {
					
				this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina+this.iNumeroPaginacion;
			}
				
			this.procesarBusqueda(this.sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,TipoFormaPagoConstantesFunciones.CLASSNAME);
		}
	}		
	
	public void generarReporteTipoFormaPagos(String sAccionBusqueda,List<TipoFormaPago> tipoformapagosParaReportes) throws Exception {
		//HttpSession httpSession = httpServletRequest.getSession();
		Long iIdUsuarioSesion=0L;	
		
		
		if(usuarioActual==null) {
			this.usuarioActual=new Usuario();
		}
		
		iIdUsuarioSesion=usuarioActual.getId();
		
		String sPathReportes="";
		
		InputStream reportFile=null;
		InputStream imageFile=null;
			
		imageFile=AuxiliarImagenes.class.getResourceAsStream("LogoReporte.jpg");			
				
		
		String sPathReporteFinal="";
		
		if(!esReporteAccionProceso) {
			if(!this.sTipoReporte.equals("RELACIONES")) {//!isEsReporteRelaciones
				if(!this.esReporteDinamico) {
					sPathReporteFinal="TipoFormaPago"+this.sTipoReporteExtra+"Design.jasper";
					reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);	
				} else {
					sPathReporteFinal=this.sPathReporteDinamico;
					reportFile = new FileInputStream(sPathReporteFinal);
				}
			} else {
				sPathReporteFinal="TipoFormaPagoMasterRelaciones"+this.sTipoReporteExtra+"Design.jasper";
				reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);
				//sPathReportes=reportFile.getPath().replace("TipoFormaPagoMasterRelacionesDesign.jasper", "");
			}
		} else {
				sPathReporteFinal="TipoFormaPago"+this.sTipoReporteExtra+"Design.jasper";
				reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);	
		}
		
		if(reportFile==null) {
			throw new JRRuntimeException(sPathReporteFinal+" no existe");
		}
		
		String sUsuario="";
		
		if(usuarioActual!=null) {
			sUsuario=usuarioActual.getuser_name();
		}
		
		Map<String, Object> parameters = new HashMap<String, Object>();
		parameters.put("usuario", sUsuario);
		
		parameters.put("titulo", Funciones.GetTituloSistemaReporte(this.parametroGeneralSg,this.moduloActual,this.usuarioActual));
		parameters.put("subtitulo", "Reporte De  Tipo Forma Pagos");		
		parameters.put("busquedapor", TipoFormaPagoConstantesFunciones.getNombreIndice(sAccionBusqueda)+sDetalleReporte);
		
		
		if(this.sTipoReporte.equals("RELACIONES")) {//isEsReporteRelaciones
			parameters.put("SUBREPORT_DIR", sPathReportes);
		}
		
		parameters.put("con_grafico", this.conGraficoReporte);
		
		JasperReport jasperReport = (JasperReport)JRLoader.loadObject(reportFile);
				
		this.cargarDatosCliente();
		
		ArrayList<Classe> classes=new ArrayList<Classe>();		
		
		if(this.sTipoReporte.equals("RELACIONES")) {//isEsReporteRelaciones
			
			classes.add(new Classe(RegistroFormaPagoBanco.class));
			classes.add(new Classe(DetaFormaPagoFactu.class));
			classes.add(new Classe(GrupoClienteFormaPago.class));
			classes.add(new Classe(DetaFormaPago.class));
			classes.add(new Classe(FormaPagoPuntoVenta.class));
			classes.add(new Classe(FormaPago.class));
			classes.add(new Classe(FormaPagoInven.class));
			classes.add(new Classe(CierreCaja.class));
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {		
				try	{
					
					TipoFormaPagoLogic tipoformapagoLogicAuxiliar=new TipoFormaPagoLogic();
					tipoformapagoLogicAuxiliar.setDatosCliente(tipoformapagoLogic.getDatosCliente());				
					tipoformapagoLogicAuxiliar.setTipoFormaPagos(tipoformapagosParaReportes);
					
					tipoformapagoLogicAuxiliar.cargarRelacionesLoteForeignKeyTipoFormaPagoWithConnection(); //deepLoadsWithConnection(false, DeepLoadType.INCLUDE, classes, "");
					
					tipoformapagosParaReportes=tipoformapagoLogicAuxiliar.getTipoFormaPagos();
					
					//tipoformapagoLogic.getNewConnexionToDeep();
					
					//for (TipoFormaPago tipoformapago:tipoformapagosParaReportes) {
					//	tipoformapagoLogic.deepLoad(tipoformapago, false, DeepLoadType.INCLUDE, classes);
					//}						
					//tipoformapagoLogic.commitNewConnexionToDeep();
					
						
				} catch(Exception e) {
					throw e;
					
				} finally {
					//tipoformapagoLogic.closeNewConnexionToDeep();
				}
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}
			//ARCHITECTURE		
			
		
			
			

			InputStream reportFileRegistroFormaPagoBanco = AuxiliarReportes.class.getResourceAsStream("RegistroFormaPagoBancoDetalleRelacionesDesign.jasper");
			parameters.put("subreport_registroformapagobanco", reportFileRegistroFormaPagoBanco);

			InputStream reportFileDetaFormaPagoFactu = AuxiliarReportes.class.getResourceAsStream("DetaFormaPagoFactuDetalleRelacionesDesign.jasper");
			parameters.put("subreport_detaformapagofactu", reportFileDetaFormaPagoFactu);

			InputStream reportFileGrupoClienteFormaPago = AuxiliarReportes.class.getResourceAsStream("GrupoClienteFormaPagoDetalleRelacionesDesign.jasper");
			parameters.put("subreport_grupoclienteformapago", reportFileGrupoClienteFormaPago);

			InputStream reportFileDetaFormaPago = AuxiliarReportes.class.getResourceAsStream("DetaFormaPagoDetalleRelacionesDesign.jasper");
			parameters.put("subreport_detaformapago", reportFileDetaFormaPago);

			InputStream reportFileFormaPagoPuntoVenta = AuxiliarReportes.class.getResourceAsStream("FormaPagoPuntoVentaDetalleRelacionesDesign.jasper");
			parameters.put("subreport_formapagopuntoventa", reportFileFormaPagoPuntoVenta);

			InputStream reportFileFormaPago = AuxiliarReportes.class.getResourceAsStream("FormaPagoDetalleRelacionesDesign.jasper");
			parameters.put("subreport_formapago", reportFileFormaPago);

			InputStream reportFileFormaPagoInven = AuxiliarReportes.class.getResourceAsStream("FormaPagoInvenDetalleRelacionesDesign.jasper");
			parameters.put("subreport_formapagoinven", reportFileFormaPagoInven);

			InputStream reportFileCierreCaja = AuxiliarReportes.class.getResourceAsStream("CierreCajaDetalleRelacionesDesign.jasper");
			parameters.put("subreport_cierrecaja", reportFileCierreCaja);
		} else {
			//FK DEBERIA TRAERSE DE ANTEMANO
			
		}
								
		
		//CLASSES PARA REPORTES OBJETOS RELACIONADOS
		if(!this.sTipoReporte.equals("RELACIONES")) {//!isEsReporteRelaciones
			classes=new ArrayList<Classe>();
		}
		
		JRBeanArrayDataSource jrbeanArrayDataSourceTipoFormaPago=null;
		
		if(this.sTipoReporteExtra!=null && !this.sTipoReporteExtra.equals("")) {
			TipoFormaPagoConstantesFunciones.S_TIPOREPORTE_EXTRA=this.sTipoReporteExtra;
		} else {
			TipoFormaPagoConstantesFunciones.S_TIPOREPORTE_EXTRA="";
		}
		
		jrbeanArrayDataSourceTipoFormaPago=new JRBeanArrayDataSource(TipoFormaPagoJInternalFrame.TraerTipoFormaPagoBeans(tipoformapagosParaReportes,classes).toArray());
		
		jasperPrint = JasperFillManager.fillReport(jasperReport,parameters,jrbeanArrayDataSourceTipoFormaPago);
				
		
		String sPathDest=Constantes.SUNIDAD_ARCHIVOS+":/"+Constantes.SCONTEXTSERVER+"/"+TipoFormaPagoConstantesFunciones.SCHEMA+"/reportes";
		
		File filePathDest = new File(sPathDest);
		
		if(!filePathDest.exists()) {
			filePathDest.mkdirs();				
		}
				
		String sDestFileName=sPathDest+"/"+TipoFormaPagoConstantesFunciones.CLASSNAME;
				
		if(this.sTipoArchivoReporte=="VISUALIZAR") {
			JasperViewer jasperViewer = new JasperViewer(jasperPrint,false) ;
			jasperViewer.setVisible(true) ; 

		} else if(this.sTipoArchivoReporte=="HTML"||this.sTipoArchivoReporte=="PDF"||this.sTipoArchivoReporte=="XML") {	
			//JasperFillManager.fillReportToFile(reportFile.getAbsolutePath(),parameters, new JRBeanArrayDataSource(TipoFormaPagoBean.TraerTipoFormaPagoBeans(tipoformapagosParaReportes).toArray()));
							
			if(this.sTipoArchivoReporte=="HTML") {
				sDestFileName+=".html";
				JasperExportManager.exportReportToHtmlFile(jasperPrint,sDestFileName);
					
			} else if(this.sTipoArchivoReporte=="PDF") {
				sDestFileName+=".pdf";
				JasperExportManager.exportReportToPdfFile(jasperPrint,sDestFileName);
			} else {
				sDestFileName+=".xml";
				JasperExportManager.exportReportToXmlFile(jasperPrint,sDestFileName, false);
			}	
			
		} else if(this.sTipoArchivoReporte=="WORD"||this.sTipoArchivoReporte=="EXCEL") {
				
			if(this.sTipoArchivoReporte=="WORD") {
				sDestFileName+=".rtf";
					
				JRRtfExporter exporter = new JRRtfExporter();
		
				exporter.setParameter(JRExporterParameter.JASPER_PRINT, jasperPrint);
				exporter.setParameter(JRExporterParameter.OUTPUT_FILE_NAME, sDestFileName);
		
				exporter.exportReport();
				
			} else	{
				sDestFileName+=".xls";
					
				JRXlsExporter exporterXls = new JRXlsExporter();
		
				exporterXls.setParameter(JRExporterParameter.JASPER_PRINT, jasperPrint);
				exporterXls.setParameter(JRExporterParameter.OUTPUT_FILE_NAME, sDestFileName);
				exporterXls.setParameter(JRXlsExporterParameter.IS_ONE_PAGE_PER_SHEET, Boolean.TRUE);
		
				exporterXls.exportReport();
			}
			
		} else if(this.sTipoArchivoReporte=="EXCEL2"||this.sTipoArchivoReporte=="EXCEL2_2") {
			//sDestFileName+=".xlsx";
			
			if(this.sTipoReporte.equals("NORMAL")) {
				this.generarExcelReporteTipoFormaPagos(sAccionBusqueda,sTipoArchivoReporte,tipoformapagosParaReportes);
			
			} else if(this.sTipoReporte.equals("FORMULARIO")){
				this.generarExcelReporteVerticalTipoFormaPagos(sAccionBusqueda,sTipoArchivoReporte,tipoformapagosParaReportes,false);
			
			} else if(this.sTipoReporte.equals("DINAMICO")){
				
				if(this.sTipoReporteDinamico.equals("NORMAL")) {
					
					this.jButtonGenerarExcelReporteDinamicoTipoFormaPagoActionPerformed(null);
					//this.generarExcelReporteTipoFormaPagos(sAccionBusqueda,sTipoArchivoReporte,tipoformapagosParaReportes);
					
				
				} else if(this.sTipoReporteDinamico.equals("FORMULARIO")){
					this.generarExcelReporteVerticalTipoFormaPagos(sAccionBusqueda,sTipoArchivoReporte,tipoformapagosParaReportes,true);
				
				} else if(this.sTipoReporteDinamico.equals("RELACIONES")){
					this.generarExcelReporteRelacionesTipoFormaPagos(sAccionBusqueda,sTipoArchivoReporte,tipoformapagosParaReportes,true);
				}
				
			} else if(this.sTipoReporte.equals("RELACIONES")){
				this.generarExcelReporteRelacionesTipoFormaPagos(sAccionBusqueda,sTipoArchivoReporte,tipoformapagosParaReportes,false);
			}
		}
		
		if(this.sTipoArchivoReporte=="HTML"||this.sTipoArchivoReporte=="PDF"||this.sTipoArchivoReporte=="XML"||this.sTipoArchivoReporte=="WORD"||this.sTipoArchivoReporte=="EXCEL") {				
			JOptionPane.showMessageDialog(this,"REPORTE "+sDestFileName+" GENERADO SATISFACTORIAMENTE","REPORTES ",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReporteTipoFormaPagos(String sAccionBusqueda,String sTipoArchivoReporte,List<TipoFormaPago> tipoformapagosParaReportes) throws Exception {
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"tipoformapago";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("TipoFormaPagos");
         
        int iRow = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		this.generarExcelReporteHeaderTipoFormaPago("NORMAL",row,workbook);
		
		CellStyle cellStyleData = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataAux=null;
		
		int i=0;
		
      	for(TipoFormaPago tipoformapago : tipoformapagosParaReportes) {            
			row = sheet.createRow(iRow++);
			iCell = 0;
			
			cellStyleDataAux=null;
			
			if(i%2==0) {
				cellStyleDataAux=cellStyleData;
			}
			
			TipoFormaPagoConstantesFunciones.generarExcelReporteDataTipoFormaPago("NORMAL",row,workbook,tipoformapago,cellStyleDataAux);
		
			
			/*
            Cell cell0 = row.createCell(0);
            cell0.setCellValue(country.getName());
            Cell cell1 = row.createCell(1);
            cell1.setCellValue(country.getShortCode());
			*/
			
			i++;
        }
        
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.tipoformapagoSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Tipo Forma Pago",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReporteHeaderTipoFormaPago(String sTipo,Row row,Workbook workbook) {
		
		TipoFormaPagoConstantesFunciones.generarExcelReporteHeaderTipoFormaPago(sTipo,row,workbook);
		
		/*
		Cell cell=null;
		int iCell=0;
		
		CellStyle cellStyle = workbook.createCellStyle();
		cellStyle.setFillBackgroundColor(IndexedColors.GREEN.getIndex());
		cellStyle.setFillPattern(CellStyle.ALIGN_FILL);
		*/
		
	}
	
	public void generarExcelReporteVerticalTipoFormaPagos(String sAccionBusqueda,String sTipoArchivoReporte,List<TipoFormaPago> tipoformapagosParaReportes,Boolean paraDinamico) throws Exception {
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"tipoformapago_vertical";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("TipoFormaPagos");
         
        int iRow = 0;
		int iRowLast = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		CellStyle cellStyle = Funciones2.getStyleTitulo(workbook,"ZEBRA");;
		
		CellStyle cellStyleTitulo = Funciones2.getStyleTitulo(workbook,"PRINCIPAL_VERTICAL");
		
		
		for(TipoFormaPago tipoformapago : tipoformapagosParaReportes) {
			row = sheet.createRow(iRow++);
			iRowLast=iRow - 1;
			
			cell = row.createCell(0);
			cell.setCellValue(TipoFormaPagoConstantesFunciones.getTipoFormaPagoDescripcion(tipoformapago));
			cell.setCellStyle(cellStyleTitulo);
			
			sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,0,2));			
	
			


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(TipoFormaPagoConstantesFunciones.LABEL_IDEMPRESA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(TipoFormaPagoConstantesFunciones.LABEL_IDEMPRESA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(tipoformapago.getempresa_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(TipoFormaPagoConstantesFunciones.LABEL_IDSUCURSAL))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(TipoFormaPagoConstantesFunciones.LABEL_IDSUCURSAL);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(tipoformapago.getsucursal_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(TipoFormaPagoConstantesFunciones.LABEL_IDMODULO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(TipoFormaPagoConstantesFunciones.LABEL_IDMODULO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(tipoformapago.getmodulo_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(TipoFormaPagoConstantesFunciones.LABEL_IDTIPOGRUPOFORMAPAGO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(TipoFormaPagoConstantesFunciones.LABEL_IDTIPOGRUPOFORMAPAGO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(tipoformapago.gettipogrupoformapago_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(TipoFormaPagoConstantesFunciones.LABEL_NOMBRE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(TipoFormaPagoConstantesFunciones.LABEL_NOMBRE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(tipoformapago.getnombre());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(TipoFormaPagoConstantesFunciones.LABEL_SIGLAS))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(TipoFormaPagoConstantesFunciones.LABEL_SIGLAS);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(tipoformapago.getsiglas());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(TipoFormaPagoConstantesFunciones.LABEL_CONDETALLE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(TipoFormaPagoConstantesFunciones.LABEL_CONDETALLE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(Funciones2.getDescripcionBoolean(tipoformapago.getcon_detalle()));


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(TipoFormaPagoConstantesFunciones.LABEL_CONCUOTAS))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(TipoFormaPagoConstantesFunciones.LABEL_CONCUOTAS);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(Funciones2.getDescripcionBoolean(tipoformapago.getcon_cuotas()));


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(TipoFormaPagoConstantesFunciones.LABEL_IDTIPOTRANSACCIONMODULO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(TipoFormaPagoConstantesFunciones.LABEL_IDTIPOTRANSACCIONMODULO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(tipoformapago.gettipotransaccionmodulo_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(TipoFormaPagoConstantesFunciones.LABEL_IDTRANSACCION))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(TipoFormaPagoConstantesFunciones.LABEL_IDTRANSACCION);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(tipoformapago.gettransaccion_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(TipoFormaPagoConstantesFunciones.LABEL_IDCUENTACONTABLE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(TipoFormaPagoConstantesFunciones.LABEL_IDCUENTACONTABLE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(tipoformapago.getcuentacontable_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(TipoFormaPagoConstantesFunciones.LABEL_DESCRIPCION))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(TipoFormaPagoConstantesFunciones.LABEL_DESCRIPCION);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(tipoformapago.getdescripcion());


			}						
        }
        
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.tipoformapagoSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Tipo Forma Pago",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReporteRelacionesTipoFormaPagos(String sAccionBusqueda,String sTipoArchivoReporte,List<TipoFormaPago> tipoformapagosParaReportes,Boolean paraDinamico) throws Exception {
		
		ArrayList<Classe> classes=new ArrayList<Classe>();
		List<TipoFormaPago> tipoformapagosRespaldo=null;
		
		classes=TipoFormaPagoConstantesFunciones.getClassesRelationshipsOfTipoFormaPago(new ArrayList<Classe>(),DeepLoadType.NONE,false);
					
		this.datosDeep=new DatosDeep();
		
		this.datosDeep.setIsDeep(false);
		this.datosDeep.setDeepLoadType(DeepLoadType.INCLUDE);
		this.datosDeep.setClases(classes);
			
		this.datosCliente.setDatosDeepParametros(false, DeepLoadType.INCLUDE, classes, "");
		this.datosCliente.setIsConDeep(true);	
		this.datosCliente.setIsConExportar(false);
		
						
		this.tipoformapagoLogic.setDatosCliente(this.datosCliente);
		this.tipoformapagoLogic.setDatosDeep(this.datosDeep);
		this.tipoformapagoLogic.setIsConDeep(true);
		
		tipoformapagosRespaldo=this.tipoformapagoLogic.getTipoFormaPagos();
		
		this.tipoformapagoLogic.setTipoFormaPagos(tipoformapagosParaReportes);	
		this.tipoformapagoLogic.deepLoadsWithConnection(false, DeepLoadType.INCLUDE, classes,"");
		
		tipoformapagosParaReportes=this.tipoformapagoLogic.getTipoFormaPagos();
		this.tipoformapagoLogic.setTipoFormaPagos(tipoformapagosRespaldo);
		
		
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"tipoformapago_relacion";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("TipoFormaPagos");
         
        int iRow = 0;
		int iRowLast = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		this.generarExcelReporteHeaderTipoFormaPago("NORMAL",row,workbook);
		
		int i=0;
		int i2=0;
		
		CellStyle cellStyleData = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataTitulo = Funciones2.getStyleTitulo(workbook,"PRINCIPAL");
		CellStyle cellStyleDataZebra = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataAux =null;
		CellStyle cellStyleDataAuxHijo =null;
		
		for(TipoFormaPago tipoformapago : tipoformapagosParaReportes) {			
			if(i!=0) {
				row = sheet.createRow(iRow++);				
				this.generarExcelReporteHeaderTipoFormaPago("NORMAL",row,workbook);
			}
			
			cellStyleDataAux=null;
			
			if(i%2==0) {
				//cellStyleDataAux=cellStyleData;
			}
			
			row = sheet.createRow(iRow++);						
			TipoFormaPagoConstantesFunciones.generarExcelReporteDataTipoFormaPago("NORMAL",row,workbook,tipoformapago,cellStyleDataAux);
		
			
			


				//RegistroFormaPagoBanco
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(RegistroFormaPagoBancoConstantesFunciones.SCLASSWEBTITULO))) {

				if(tipoformapago.getRegistroFormaPagoBancos()!=null && tipoformapago.getRegistroFormaPagoBancos().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(RegistroFormaPagoBancoConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					RegistroFormaPagoBancoConstantesFunciones.generarExcelReporteHeaderRegistroFormaPagoBanco("RELACIONADO",row,workbook);
				}

				if(tipoformapago.getRegistroFormaPagoBancos()!=null) {
					i2=0;
					for(RegistroFormaPagoBanco registroformapagobanco : tipoformapago.getRegistroFormaPagoBancos()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						RegistroFormaPagoBancoConstantesFunciones.generarExcelReporteDataRegistroFormaPagoBanco("RELACIONADO",row,workbook,registroformapagobanco,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}


				//DetaFormaPagoFactu
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(DetaFormaPagoFactuConstantesFunciones.SCLASSWEBTITULO))) {

				if(tipoformapago.getDetaFormaPagoFactus()!=null && tipoformapago.getDetaFormaPagoFactus().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(DetaFormaPagoFactuConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					DetaFormaPagoFactuConstantesFunciones.generarExcelReporteHeaderDetaFormaPagoFactu("RELACIONADO",row,workbook);
				}

				if(tipoformapago.getDetaFormaPagoFactus()!=null) {
					i2=0;
					for(DetaFormaPagoFactu detaformapagofactu : tipoformapago.getDetaFormaPagoFactus()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						DetaFormaPagoFactuConstantesFunciones.generarExcelReporteDataDetaFormaPagoFactu("RELACIONADO",row,workbook,detaformapagofactu,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}


				//GrupoClienteFormaPago
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(GrupoClienteFormaPagoConstantesFunciones.SCLASSWEBTITULO))) {

				if(tipoformapago.getGrupoClienteFormaPagos()!=null && tipoformapago.getGrupoClienteFormaPagos().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(GrupoClienteFormaPagoConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					GrupoClienteFormaPagoConstantesFunciones.generarExcelReporteHeaderGrupoClienteFormaPago("RELACIONADO",row,workbook);
				}

				if(tipoformapago.getGrupoClienteFormaPagos()!=null) {
					i2=0;
					for(GrupoClienteFormaPago grupoclienteformapago : tipoformapago.getGrupoClienteFormaPagos()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						GrupoClienteFormaPagoConstantesFunciones.generarExcelReporteDataGrupoClienteFormaPago("RELACIONADO",row,workbook,grupoclienteformapago,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}


				//DetaFormaPago
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(DetaFormaPagoConstantesFunciones.SCLASSWEBTITULO))) {

				if(tipoformapago.getDetaFormaPagos()!=null && tipoformapago.getDetaFormaPagos().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(DetaFormaPagoConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					DetaFormaPagoConstantesFunciones.generarExcelReporteHeaderDetaFormaPago("RELACIONADO",row,workbook);
				}

				if(tipoformapago.getDetaFormaPagos()!=null) {
					i2=0;
					for(DetaFormaPago detaformapago : tipoformapago.getDetaFormaPagos()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						DetaFormaPagoConstantesFunciones.generarExcelReporteDataDetaFormaPago("RELACIONADO",row,workbook,detaformapago,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}


				//FormaPagoPuntoVenta
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(FormaPagoPuntoVentaConstantesFunciones.SCLASSWEBTITULO))) {

				if(tipoformapago.getFormaPagoPuntoVentas()!=null && tipoformapago.getFormaPagoPuntoVentas().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(FormaPagoPuntoVentaConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					FormaPagoPuntoVentaConstantesFunciones.generarExcelReporteHeaderFormaPagoPuntoVenta("RELACIONADO",row,workbook);
				}

				if(tipoformapago.getFormaPagoPuntoVentas()!=null) {
					i2=0;
					for(FormaPagoPuntoVenta formapagopuntoventa : tipoformapago.getFormaPagoPuntoVentas()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						FormaPagoPuntoVentaConstantesFunciones.generarExcelReporteDataFormaPagoPuntoVenta("RELACIONADO",row,workbook,formapagopuntoventa,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}


				//FormaPago
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(FormaPagoConstantesFunciones.SCLASSWEBTITULO))) {

				if(tipoformapago.getFormaPagos()!=null && tipoformapago.getFormaPagos().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(FormaPagoConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					FormaPagoConstantesFunciones.generarExcelReporteHeaderFormaPago("RELACIONADO",row,workbook);
				}

				if(tipoformapago.getFormaPagos()!=null) {
					i2=0;
					for(FormaPago formapago : tipoformapago.getFormaPagos()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						FormaPagoConstantesFunciones.generarExcelReporteDataFormaPago("RELACIONADO",row,workbook,formapago,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}


				//FormaPagoInven
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(FormaPagoInvenConstantesFunciones.SCLASSWEBTITULO))) {

				if(tipoformapago.getFormaPagoInvens()!=null && tipoformapago.getFormaPagoInvens().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(FormaPagoInvenConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					FormaPagoInvenConstantesFunciones.generarExcelReporteHeaderFormaPagoInven("RELACIONADO",row,workbook);
				}

				if(tipoformapago.getFormaPagoInvens()!=null) {
					i2=0;
					for(FormaPagoInven formapagoinven : tipoformapago.getFormaPagoInvens()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						FormaPagoInvenConstantesFunciones.generarExcelReporteDataFormaPagoInven("RELACIONADO",row,workbook,formapagoinven,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}


				//CierreCaja
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(CierreCajaConstantesFunciones.SCLASSWEBTITULO))) {

				if(tipoformapago.getCierreCajas()!=null && tipoformapago.getCierreCajas().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(CierreCajaConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					CierreCajaConstantesFunciones.generarExcelReporteHeaderCierreCaja("RELACIONADO",row,workbook);
				}

				if(tipoformapago.getCierreCajas()!=null) {
					i2=0;
					for(CierreCaja cierrecaja : tipoformapago.getCierreCajas()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						CierreCajaConstantesFunciones.generarExcelReporteDataCierreCaja("RELACIONADO",row,workbook,cierrecaja,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}
			
			i++;
        }
        
		/*
		row = sheet.createRow(iRow++);
		iRowLast=iRow - 1;
			
		cell = row.createCell(0);
		cell.setCellValue(TipoFormaPagoConstantesFunciones.getTipoFormaPagoDescripcion(tipoformapago));
		cell.setCellStyle(cellStyleTitulo);
			
		sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,0,2));			
		*/
		
			
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.tipoformapagoSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Tipo Forma Pago",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	
	public Boolean existeColumnaReporteDinamico(String sColumna) {
		Boolean existe=false;
		
		Reporte reporte=new Reporte();
		
		
		for(int index:this.jInternalFrameReporteDinamicoTipoFormaPago.getjListColumnasSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoTipoFormaPago.getjListColumnasSelectReporte().getModel().getElementAt(index);
			
			if(sColumna.equals(reporte.getsCodigo())) {
				existe=true;
				break;
			}
		
		}
		
		
		return existe;
	}
	
	public Boolean existeRelacionReporteDinamico(String sColumna) {
		Boolean existe=false;
		
		Reporte reporte=new Reporte();
		
		
		for(int index:this.jInternalFrameReporteDinamicoTipoFormaPago.getjListRelacionesSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoTipoFormaPago.getjListRelacionesSelectReporte().getModel().getElementAt(index);
			
			if(sColumna.equals(reporte.getsCodigo())) {
				existe=true;
				break;
			}
		
		}
		
		
		return existe;
	}
	
	public void startProcessTipoFormaPago() throws Exception {		
		this.startProcessTipoFormaPago(true);
	}
	
	public void startProcessTipoFormaPago(Boolean conSplash) throws Exception {		
		//FuncionesSwing.enableDisablePanels(false,this.jTabbedPaneBusquedasTipoFormaPago ,this.jPanelParametrosReportesTipoFormaPago, this.jScrollPanelDatosTipoFormaPago,this.jPanelPaginacionTipoFormaPago, this.jScrollPanelDatosEdicionTipoFormaPago, this.jPanelAccionesTipoFormaPago,this.jPanelAccionesFormularioTipoFormaPago,this.jmenuBarTipoFormaPago,this.jmenuBarDetalleTipoFormaPago,this.jTtoolBarTipoFormaPago,this.jTtoolBarDetalleTipoFormaPago);		
		
		final JTabbedPane jTabbedPaneBusquedasTipoFormaPago=this.jTabbedPaneBusquedasTipoFormaPago; 
		
		final JPanel jPanelParametrosReportesTipoFormaPago=this.jPanelParametrosReportesTipoFormaPago;
		//final JScrollPane jScrollPanelDatosTipoFormaPago=this.jScrollPanelDatosTipoFormaPago;
		final JTable jTableDatosTipoFormaPago=this.jTableDatosTipoFormaPago;		
		final JPanel jPanelPaginacionTipoFormaPago=this.jPanelPaginacionTipoFormaPago;
		//final JScrollPane jScrollPanelDatosEdicionTipoFormaPago=this.jScrollPanelDatosEdicionTipoFormaPago;
		final JPanel jPanelAccionesTipoFormaPago=this.jPanelAccionesTipoFormaPago;
		
		JPanel jPanelCamposAuxiliarTipoFormaPago=new JPanelMe();
		JPanel jPanelAccionesFormularioAuxiliarTipoFormaPago=new JPanelMe();
		
		if(this.jInternalFrameDetalleFormTipoFormaPago!=null) {
			jPanelCamposAuxiliarTipoFormaPago=this.jInternalFrameDetalleFormTipoFormaPago.jPanelCamposTipoFormaPago;
			jPanelAccionesFormularioAuxiliarTipoFormaPago=this.jInternalFrameDetalleFormTipoFormaPago.jPanelAccionesFormularioTipoFormaPago;
		}
		
		final JPanel jPanelCamposTipoFormaPago=jPanelCamposAuxiliarTipoFormaPago;
		final JPanel jPanelAccionesFormularioTipoFormaPago=jPanelAccionesFormularioAuxiliarTipoFormaPago;
		
		
		final JMenuBar jmenuBarTipoFormaPago=this.jmenuBarTipoFormaPago;
		final JToolBar jTtoolBarTipoFormaPago=this.jTtoolBarTipoFormaPago;		
		
		
		JMenuBar jmenuBarDetalleAuxiliarTipoFormaPago=new JMenuBar();
		JToolBar jTtoolBarDetalleAuxiliarTipoFormaPago=new JToolBar();		
		
		if(this.jInternalFrameDetalleFormTipoFormaPago!=null) {
			jmenuBarDetalleAuxiliarTipoFormaPago=this.jInternalFrameDetalleFormTipoFormaPago.jmenuBarDetalleTipoFormaPago;
			jTtoolBarDetalleAuxiliarTipoFormaPago=this.jInternalFrameDetalleFormTipoFormaPago.jTtoolBarDetalleTipoFormaPago;
		}
		
		final JMenuBar jmenuBarDetalleTipoFormaPago=jmenuBarDetalleAuxiliarTipoFormaPago;
		final JToolBar jTtoolBarDetalleTipoFormaPago=jTtoolBarDetalleAuxiliarTipoFormaPago;		
		
		
		
		
		
		if(Constantes2.CON_PROCESO_HILO) {
			Thread threadRunnableProcess;
			ProcessRunnable processRunnable;
			
			processRunnable=new ProcessRunnable();
			
			processRunnable.setsTipo("START");
			processRunnable.setDesktop(jDesktopPane);
			processRunnable.setModuloActual(moduloActual);
			processRunnable.setModuloUsuarioSeleccionado(moduloActual);
			processRunnable.setOpcionActual(opcionActual);
			processRunnable.setParametroGeneralSg(parametroGeneralSg);
			processRunnable.setParametroGeneralUsuario(parametroGeneralUsuario);
			processRunnable.setResumenUsuarioActual(resumenUsuarioActual);
			processRunnable.setUsuarioActual(usuarioActual);
			
			processRunnable.jTabbedPaneBusquedas=jTabbedPaneBusquedasTipoFormaPago;
			processRunnable.jPanelParametrosReportes=jPanelParametrosReportesTipoFormaPago;
			processRunnable.jTableDatos=jTableDatosTipoFormaPago;
			processRunnable.jPanelCampos=jPanelCamposTipoFormaPago;
			processRunnable.jPanelPaginacion=jPanelPaginacionTipoFormaPago;
			processRunnable.jPanelAcciones=jPanelAccionesTipoFormaPago;
			processRunnable.jPanelAccionesFormulario=jPanelAccionesFormularioTipoFormaPago;
			
			
			processRunnable.jmenuBar=jmenuBarTipoFormaPago;
			processRunnable.jmenuBarDetalle=jmenuBarDetalleTipoFormaPago;
			processRunnable.jTtoolBar=jTtoolBarTipoFormaPago;
			processRunnable.jTtoolBarDetalle=jTtoolBarDetalleTipoFormaPago;
			processRunnable.jInternalFrameBase=this;
			
			//processRunnable.CargarObjetosRendimientoCriticoModuloInventario();
			
			
			threadRunnableProcess=new Thread(processRunnable);//.start();
					
			threadRunnableProcess.start();
			
		} else {
			FuncionesSwing.enableDisablePanels(false,jTabbedPaneBusquedasTipoFormaPago ,jPanelParametrosReportesTipoFormaPago,jTableDatosTipoFormaPago, /*jScrollPanelDatosTipoFormaPago,*/jPanelCamposTipoFormaPago,jPanelPaginacionTipoFormaPago, /*jScrollPanelDatosEdicionTipoFormaPago,*/ jPanelAccionesTipoFormaPago,jPanelAccionesFormularioTipoFormaPago,jmenuBarTipoFormaPago,jmenuBarDetalleTipoFormaPago,jTtoolBarTipoFormaPago,jTtoolBarDetalleTipoFormaPago);
		
			startProcess();//this.
		}
						
		/*
		if(conSplash) {
			SwingUtilities.invokeLater(new Runnable() {
			      public void run() {
			    	  try {
							FuncionesSwing.enableDisablePanels(false,jTabbedPaneBusquedasTipoFormaPago ,jPanelParametrosReportesTipoFormaPago, jScrollPanelDatosTipoFormaPago,jPanelPaginacionTipoFormaPago, jScrollPanelDatosEdicionTipoFormaPago, jPanelAccionesTipoFormaPago,jPanelAccionesFormularioTipoFormaPago,jmenuBarTipoFormaPago,jmenuBarDetalleTipoFormaPago,jTtoolBarTipoFormaPago,jTtoolBarDetalleTipoFormaPago);
						
							startProcess();//this.
							
						} catch (Exception e) {
							// TODO Auto-generated catch block
							e.printStackTrace();
						}
			      }
			});
		}
		*/
	}
	
	public void finishProcessTipoFormaPago() {// throws Exception 
		this.finishProcessTipoFormaPago(true);
	}
	
	public void finishProcessTipoFormaPago(Boolean conSplash) {// throws Exception 
		//FuncionesSwing.enableDisablePanels(true,this.jTabbedPaneBusquedasTipoFormaPago ,this.jPanelParametrosReportesTipoFormaPago, this.jScrollPanelDatosTipoFormaPago,this.jPanelPaginacionTipoFormaPago, this.jScrollPanelDatosEdicionTipoFormaPago, this.jPanelAccionesTipoFormaPago,this.jPanelAccionesFormularioTipoFormaPago,this.jmenuBarTipoFormaPago,this.jmenuBarDetalleTipoFormaPago,this.jTtoolBarTipoFormaPago,this.jTtoolBarDetalleTipoFormaPago);		
		
		final JTabbedPane jTabbedPaneBusquedasTipoFormaPago=this.jTabbedPaneBusquedasTipoFormaPago; 
		
		final JPanel jPanelParametrosReportesTipoFormaPago=this.jPanelParametrosReportesTipoFormaPago;
		//final JScrollPane jScrollPanelDatosTipoFormaPago=this.jScrollPanelDatosTipoFormaPago;
		final JTable jTableDatosTipoFormaPago=this.jTableDatosTipoFormaPago;		
		final JPanel jPanelPaginacionTipoFormaPago=this.jPanelPaginacionTipoFormaPago;
		//final JScrollPane jScrollPanelDatosEdicionTipoFormaPago=this.jScrollPanelDatosEdicionTipoFormaPago;
		final JPanel jPanelAccionesTipoFormaPago=this.jPanelAccionesTipoFormaPago;
		
		JPanel jPanelCamposAuxiliarTipoFormaPago=new JPanel();
		JPanel jPanelAccionesFormularioAuxiliarTipoFormaPago=new JPanel();
		
		if(this.jInternalFrameDetalleFormTipoFormaPago!=null) {
			jPanelCamposAuxiliarTipoFormaPago=this.jInternalFrameDetalleFormTipoFormaPago.jPanelCamposTipoFormaPago;
			jPanelAccionesFormularioAuxiliarTipoFormaPago=this.jInternalFrameDetalleFormTipoFormaPago.jPanelAccionesFormularioTipoFormaPago;
		}
		
		final JPanel jPanelCamposTipoFormaPago=jPanelCamposAuxiliarTipoFormaPago;
		final JPanel jPanelAccionesFormularioTipoFormaPago=jPanelAccionesFormularioAuxiliarTipoFormaPago;
		
		
		final JMenuBar jmenuBarTipoFormaPago=this.jmenuBarTipoFormaPago;		
		final JToolBar jTtoolBarTipoFormaPago=this.jTtoolBarTipoFormaPago;
				
		JMenuBar jmenuBarDetalleAuxiliarTipoFormaPago=new JMenuBar();
		JToolBar jTtoolBarDetalleAuxiliarTipoFormaPago=new JToolBar();
		
		if(this.jInternalFrameDetalleFormTipoFormaPago!=null) {
			jmenuBarDetalleAuxiliarTipoFormaPago=this.jInternalFrameDetalleFormTipoFormaPago.jmenuBarDetalleTipoFormaPago;
			jTtoolBarDetalleAuxiliarTipoFormaPago=this.jInternalFrameDetalleFormTipoFormaPago.jTtoolBarDetalleTipoFormaPago;		
		}
		
		final JMenuBar jmenuBarDetalleTipoFormaPago=jmenuBarDetalleAuxiliarTipoFormaPago;
		final JToolBar jTtoolBarDetalleTipoFormaPago=jTtoolBarDetalleAuxiliarTipoFormaPago;
		
		
		
		if(Constantes2.CON_PROCESO_HILO) {
			Thread threadRunnableProcess;
			ProcessRunnable processRunnable;
			
			processRunnable=new ProcessRunnable();
			
			processRunnable.setsTipo("END");
			processRunnable.setDesktop(jDesktopPane);
			processRunnable.setModuloActual(moduloActual);
			processRunnable.setModuloUsuarioSeleccionado(moduloActual);
			processRunnable.setOpcionActual(opcionActual);
			processRunnable.setParametroGeneralSg(parametroGeneralSg);
			processRunnable.setParametroGeneralUsuario(parametroGeneralUsuario);
			processRunnable.setResumenUsuarioActual(resumenUsuarioActual);
			processRunnable.setUsuarioActual(usuarioActual);
			
			processRunnable.jTabbedPaneBusquedas=jTabbedPaneBusquedasTipoFormaPago;
			processRunnable.jPanelParametrosReportes=jPanelParametrosReportesTipoFormaPago;
			processRunnable.jTableDatos=jTableDatosTipoFormaPago;
			processRunnable.jPanelCampos=jPanelCamposTipoFormaPago;
			processRunnable.jPanelPaginacion=jPanelPaginacionTipoFormaPago;
			processRunnable.jPanelAcciones=jPanelAccionesTipoFormaPago;
			processRunnable.jPanelAccionesFormulario=jPanelAccionesFormularioTipoFormaPago;
			
			
			processRunnable.jmenuBar=jmenuBarTipoFormaPago;
			processRunnable.jmenuBarDetalle=jmenuBarDetalleTipoFormaPago;
			processRunnable.jTtoolBar=jTtoolBarTipoFormaPago;
			processRunnable.jTtoolBarDetalle=jTtoolBarDetalleTipoFormaPago;
			processRunnable.jInternalFrameBase=this;
			
			//processRunnable.CargarObjetosRendimientoCriticoModuloInventario();
			
			
			threadRunnableProcess=new Thread(processRunnable);//.start();
					
			threadRunnableProcess.start();
			
		} else {
			if(conSplash) {
				SwingUtilities.invokeLater(new RunnableProceso(true,this,jTabbedPaneBusquedasTipoFormaPago ,jPanelParametrosReportesTipoFormaPago, jTableDatosTipoFormaPago,/*jScrollPanelDatosTipoFormaPago,*/jPanelCamposTipoFormaPago,jPanelPaginacionTipoFormaPago, /*jScrollPanelDatosEdicionTipoFormaPago,*/ jPanelAccionesTipoFormaPago,jPanelAccionesFormularioTipoFormaPago,jmenuBarTipoFormaPago,jmenuBarDetalleTipoFormaPago,jTtoolBarTipoFormaPago,jTtoolBarDetalleTipoFormaPago));
			}
		}						
	}
	
	/*
	public void habilitarDeshabilitarControlesTipoFormaPago(Boolean esHabilitar,Boolean conDetalle) {
		this.habilitarDeshabilitarToolBarTipoFormaPago(esHabilitar,conDetalle);
		this.habilitarDeshabilitarMenuTipoFormaPago(esHabilitar,conDetalle);
	}
	
	public void habilitarDeshabilitarToolBarTipoFormaPago(Boolean esHabilitar,Boolean conDetalle) {
		FuncionesSwing.enableDisableComponents(this.jTtoolBarTipoFormaPago,esHabilitar,1,1);
		
		if(conDetalle) {
			FuncionesSwing.enableDisableComponents(this.jTtoolBarDetalleTipoFormaPago,esHabilitar,1,1);
		}
	}
	
	public void habilitarDeshabilitarMenuTipoFormaPago(Boolean esHabilitar,Boolean conDetalle) {
		FuncionesSwing.enableDisableComponents(this.jmenuBarTipoFormaPago,esHabilitar,1,1);
		
		if(conDetalle) {
			FuncionesSwing.enableDisableComponents(this.jmenuBarDetalleTipoFormaPago,esHabilitar,1,1);
		}
	}
	*/
	
	
	
	public void procesarBusqueda(String sAccionBusqueda) throws Exception {		
		String  finalQueryPaginacion=this.tipoformapagoConstantesFunciones.getsFinalQueryTipoFormaPago();
		String  finalQueryPaginacionTodos=this.tipoformapagoConstantesFunciones.getsFinalQueryTipoFormaPago();
		
		Boolean esBusqueda=false;
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		if(!sAccionBusqueda.equals("Todos"))	{
			esBusqueda=true;
		}
		
		this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
		this.arrDatoGeneralNo= new  ArrayList<String>();
		
		ArrayList<String> arrColumnasGlobalesNo=TipoFormaPagoConstantesFunciones.getArrayColumnasGlobalesNoTipoFormaPago(this.arrDatoGeneral);
		ArrayList<String> arrColumnasGlobales=TipoFormaPagoConstantesFunciones.getArrayColumnasGlobalesTipoFormaPago(this.arrDatoGeneral,arrColumnasGlobalesNo);
		
			
		String  finalQueryGlobal="";
		
		finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,!esBusqueda,esBusqueda,arrColumnasGlobales,TipoFormaPagoConstantesFunciones.TABLENAME);
		
		String sOrderBy="";
		
		
		sOrderBy=Funciones2.getFinalQueryOrderBy(this.arrOrderBy);
		
		
		if(!sOrderBy.equals("")) {			
			finalQueryPaginacion=sOrderBy;
			finalQueryPaginacionTodos=sOrderBy;
		}
		
		
		//INICIALIZA ELIMINADOS
		this.tipoformapagosEliminados= new ArrayList<TipoFormaPago>();
		
		if(!this.isEntroOnLoad) {
			this.onLoad();
		}/* else {
			this.isEntroOnLoad=false;
		}*/
		
		
		
				
		try	{		
			
			//this.startProcessTipoFormaPago();
		
				///*TipoFormaPagoSessionBean*/this.tipoformapagoSessionBean=new TipoFormaPagoSessionBean();
			
			if(this.tipoformapagoSessionBean==null) {
				this.tipoformapagoSessionBean=new TipoFormaPagoSessionBean();
			}
			
			//ACTUALIZA EL TAMANIO DE PAGINACION DESDE EL COMBO
			if(this.sTipoPaginacion!=null && !this.sTipoPaginacion.equals("")) {
				if(!this.sTipoPaginacion.equals("TODOS")) {
					this.iNumeroPaginacion=Integer.parseInt(this.sTipoPaginacion);
				} else {
					this.iNumeroPaginacion=-1;
					this.iNumeroPaginacionPagina=-1;
				}
			} else {
				if(this.iNumeroPaginacion==null || (this.iNumeroPaginacion!=null && this.iNumeroPaginacion<=0)) {
					this.iNumeroPaginacion=TipoFormaPagoConstantesFunciones.INUMEROPAGINACION;
				}
			}
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);
			
			this.cargarDatosCliente();
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			classes=TipoFormaPagoConstantesFunciones.getClassesForeignKeysOfTipoFormaPago(new ArrayList<Classe>(),DeepLoadType.NONE);
			
		
			this.datosDeep=new DatosDeep();
			this.datosDeep.setIsDeep(false);
			this.datosDeep.setDeepLoadType(DeepLoadType.INCLUDE);
			this.datosDeep.setClases(classes);
			
			this.datosCliente.setDatosDeepParametros(false, DeepLoadType.INCLUDE, classes, "");
			this.datosCliente.setIsConDeep(true);
			
			if(false) {//this.conExportar
				this.datosCliente.setIsConExportar(true);
				this.datosCliente.setDatosExportarParametros(Funciones2.getTipoExportar(this.parametroGeneralUsuario),this.parametroGeneralUsuario.getcon_exportar_cabecera(),Funciones2.getTipoDelimiter(this.parametroGeneralUsuario),this.parametroGeneralUsuario.getpath_exportar()+"/tipoformapago."+Funciones2.getTipoExtensionArchivoExportar(this.parametroGeneralUsuario));
			} else {
				this.datosCliente.setIsConExportar(false);
			}
			
			tipoformapagosAux= new ArrayList<TipoFormaPago>();
			
				
			tipoformapagoLogic.setDatosCliente(this.datosCliente);
			tipoformapagoLogic.setDatosDeep(this.datosDeep);
			tipoformapagoLogic.setIsConDeep(true);
			
			
			tipoformapagoLogic.getTipoFormaPagoDataAccess().setIsForForeingsKeysDataRelationships(true);
			
			if(sAccionBusqueda.equals("Todos") || sAccionBusqueda.equals("Query"))	{	
				if(sAccionBusqueda.equals("Todos")) {
					//FALTA:PARA BUSQUEDAS POR CAMPO EN FORMULARIO
					//this.sFinalQueryGeneral="";
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacionTodos );
					
					tipoformapagoLogic.getTodosTipoFormaPagos(finalQueryGlobal,pagination);
					
					//tipoformapagoLogic.getTodosTipoFormaPagosWithConnection(finalQueryGlobal,pagination);										
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
				
				if(tipoformapagoLogic.getTipoFormaPagos()==null|| tipoformapagoLogic.getTipoFormaPagos().size()==0)	{
					
				
				}
				
				if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(-1);
						this.pagination.setiMaxResults(-1);
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							tipoformapagosAux= new ArrayList<TipoFormaPago>();
							tipoformapagosAux.addAll(tipoformapagoLogic.getTipoFormaPagos());						
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							tipoformapagosAux= new ArrayList<TipoFormaPago>();
							tipoformapagosAux.addAll(tipoformapagos);
						}
						//ARCHITECTURE
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							tipoformapagoLogic.getTodosTipoFormaPagos(finalQueryGlobal+"",this.pagination);												
							
							//tipoformapagoLogic.getTodosTipoFormaPagosWithConnection(finalQueryGlobal+"",this.pagination);												
						} else if(Constantes.ISUSAEJBREMOTE) {
						} else if(Constantes.ISUSAEJBHOME) {
						}
						//ARCHITECTURE
						
					}
					
					this.generarReporteTipoFormaPagos("Todos",tipoformapagoLogic.getTipoFormaPagos() );
					
					if(false) {//isMostrarTodosResultadosReporte						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							tipoformapagoLogic.setTipoFormaPagos(new ArrayList<TipoFormaPago>());					
							tipoformapagoLogic.getTipoFormaPagos().addAll(tipoformapagosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							tipoformapagos=new ArrayList<TipoFormaPago>();
							tipoformapagos.addAll(tipoformapagosAux);
						}
						//ARCHITECTURE
						
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);														
					}
				}
			}
			else if(sAccionBusqueda.equals("PorId")) {
				Long idTipoFormaPago=0L;
				
				if(this.idActual!=null && this.idActual!=0L) {
					idTipoFormaPago=this.idActual;
				
				} else if(this.idTipoFormaPagoActual!=null && this.idTipoFormaPagoActual!=0L) {
					idTipoFormaPago=idTipoFormaPagoActual;
				}
				
					
				this.sDetalleReporte=TipoFormaPagoConstantesFunciones.getDetalleIndicePorId(idTipoFormaPago);
				
				this.tipoformapagos=new ArrayList<TipoFormaPago>();
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {					
					tipoformapagoLogic.getEntity(idTipoFormaPago);
					
					//tipoformapagoLogic.getEntityWithConnection(idTipoFormaPago);
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
								
				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipoformapagoLogic.setTipoFormaPagos(new ArrayList<TipoFormaPago>());
					tipoformapagoLogic.getTipoFormaPagos().add(tipoformapagoLogic.getTipoFormaPago());
				
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.tipoformapagos=new ArrayList<TipoFormaPago>();
					this.tipoformapagos.add(tipoformapago);
				}
				
				if(tipoformapagoLogic.getTipoFormaPago()==null)	{
					
				
				}			
			}
			
		
			else if(sAccionBusqueda.equals("BusquedaPorNombre")) {
				this.sDetalleReporte=TipoFormaPagoConstantesFunciones.getDetalleIndiceBusquedaPorNombre(nombreBusquedaPorNombre);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					tipoformapagoLogic.getTipoFormaPagosBusquedaPorNombre(finalQueryGlobal,pagination,nombreBusquedaPorNombre);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=TipoFormaPagoConstantesFunciones.getDetalleIndiceBusquedaPorNombre(nombreBusquedaPorNombre);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=TipoFormaPagoConstantesFunciones.getDetalleIndiceBusquedaPorNombre(nombreBusquedaPorNombre);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=tipoformapagoLogic.getTipoFormaPagos()==null||tipoformapagoLogic.getTipoFormaPagos().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=tipoformapagos==null|| tipoformapagos.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						tipoformapagosAux=new ArrayList<TipoFormaPago>();
						tipoformapagosAux.addAll(tipoformapagoLogic.getTipoFormaPagos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							tipoformapagosAux=new ArrayList<TipoFormaPago>();
							tipoformapagosAux.addAll(tipoformapagos);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							tipoformapagoLogic.getTipoFormaPagosBusquedaPorNombre(finalQueryGlobal,pagination,nombreBusquedaPorNombre);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=TipoFormaPagoConstantesFunciones.getDetalleIndiceBusquedaPorNombre(nombreBusquedaPorNombre);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=TipoFormaPagoConstantesFunciones.getDetalleIndiceBusquedaPorNombre(nombreBusquedaPorNombre);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteTipoFormaPagos("BusquedaPorNombre",tipoformapagoLogic.getTipoFormaPagos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteTipoFormaPagos("BusquedaPorNombre",tipoformapagos);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						tipoformapagoLogic.setTipoFormaPagos(new ArrayList<TipoFormaPago>());
						tipoformapagoLogic.getTipoFormaPagos().addAll(tipoformapagosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							tipoformapagos=new ArrayList<TipoFormaPago>();
							tipoformapagos.addAll(tipoformapagosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("BusquedaPorSiglas")) {
				this.sDetalleReporte=TipoFormaPagoConstantesFunciones.getDetalleIndiceBusquedaPorSiglas(siglasBusquedaPorSiglas);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					tipoformapagoLogic.getTipoFormaPagosBusquedaPorSiglas(finalQueryGlobal,pagination,siglasBusquedaPorSiglas);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=TipoFormaPagoConstantesFunciones.getDetalleIndiceBusquedaPorSiglas(siglasBusquedaPorSiglas);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=TipoFormaPagoConstantesFunciones.getDetalleIndiceBusquedaPorSiglas(siglasBusquedaPorSiglas);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=tipoformapagoLogic.getTipoFormaPagos()==null||tipoformapagoLogic.getTipoFormaPagos().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=tipoformapagos==null|| tipoformapagos.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						tipoformapagosAux=new ArrayList<TipoFormaPago>();
						tipoformapagosAux.addAll(tipoformapagoLogic.getTipoFormaPagos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							tipoformapagosAux=new ArrayList<TipoFormaPago>();
							tipoformapagosAux.addAll(tipoformapagos);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							tipoformapagoLogic.getTipoFormaPagosBusquedaPorSiglas(finalQueryGlobal,pagination,siglasBusquedaPorSiglas);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=TipoFormaPagoConstantesFunciones.getDetalleIndiceBusquedaPorSiglas(siglasBusquedaPorSiglas);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=TipoFormaPagoConstantesFunciones.getDetalleIndiceBusquedaPorSiglas(siglasBusquedaPorSiglas);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteTipoFormaPagos("BusquedaPorSiglas",tipoformapagoLogic.getTipoFormaPagos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteTipoFormaPagos("BusquedaPorSiglas",tipoformapagos);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						tipoformapagoLogic.setTipoFormaPagos(new ArrayList<TipoFormaPago>());
						tipoformapagoLogic.getTipoFormaPagos().addAll(tipoformapagosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							tipoformapagos=new ArrayList<TipoFormaPago>();
							tipoformapagos.addAll(tipoformapagosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdEmpresa")) {
				this.sDetalleReporte=TipoFormaPagoConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					tipoformapagoLogic.getTipoFormaPagosFK_IdEmpresa(finalQueryGlobal,pagination,id_empresaFK_IdEmpresa);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=TipoFormaPagoConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=TipoFormaPagoConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=tipoformapagoLogic.getTipoFormaPagos()==null||tipoformapagoLogic.getTipoFormaPagos().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=tipoformapagos==null|| tipoformapagos.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						tipoformapagosAux=new ArrayList<TipoFormaPago>();
						tipoformapagosAux.addAll(tipoformapagoLogic.getTipoFormaPagos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							tipoformapagosAux=new ArrayList<TipoFormaPago>();
							tipoformapagosAux.addAll(tipoformapagos);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							tipoformapagoLogic.getTipoFormaPagosFK_IdEmpresa(finalQueryGlobal,pagination,id_empresaFK_IdEmpresa);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=TipoFormaPagoConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=TipoFormaPagoConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteTipoFormaPagos("FK_IdEmpresa",tipoformapagoLogic.getTipoFormaPagos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteTipoFormaPagos("FK_IdEmpresa",tipoformapagos);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						tipoformapagoLogic.setTipoFormaPagos(new ArrayList<TipoFormaPago>());
						tipoformapagoLogic.getTipoFormaPagos().addAll(tipoformapagosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							tipoformapagos=new ArrayList<TipoFormaPago>();
							tipoformapagos.addAll(tipoformapagosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdModulo")) {
				this.sDetalleReporte=TipoFormaPagoConstantesFunciones.getDetalleIndiceFK_IdModulo(id_moduloFK_IdModulo);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					tipoformapagoLogic.getTipoFormaPagosFK_IdModulo(finalQueryGlobal,pagination,id_moduloFK_IdModulo);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=TipoFormaPagoConstantesFunciones.getDetalleIndiceFK_IdModulo(id_moduloFK_IdModulo);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=TipoFormaPagoConstantesFunciones.getDetalleIndiceFK_IdModulo(id_moduloFK_IdModulo);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=tipoformapagoLogic.getTipoFormaPagos()==null||tipoformapagoLogic.getTipoFormaPagos().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=tipoformapagos==null|| tipoformapagos.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						tipoformapagosAux=new ArrayList<TipoFormaPago>();
						tipoformapagosAux.addAll(tipoformapagoLogic.getTipoFormaPagos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							tipoformapagosAux=new ArrayList<TipoFormaPago>();
							tipoformapagosAux.addAll(tipoformapagos);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							tipoformapagoLogic.getTipoFormaPagosFK_IdModulo(finalQueryGlobal,pagination,id_moduloFK_IdModulo);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=TipoFormaPagoConstantesFunciones.getDetalleIndiceFK_IdModulo(id_moduloFK_IdModulo);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=TipoFormaPagoConstantesFunciones.getDetalleIndiceFK_IdModulo(id_moduloFK_IdModulo);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteTipoFormaPagos("FK_IdModulo",tipoformapagoLogic.getTipoFormaPagos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteTipoFormaPagos("FK_IdModulo",tipoformapagos);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						tipoformapagoLogic.setTipoFormaPagos(new ArrayList<TipoFormaPago>());
						tipoformapagoLogic.getTipoFormaPagos().addAll(tipoformapagosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							tipoformapagos=new ArrayList<TipoFormaPago>();
							tipoformapagos.addAll(tipoformapagosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdSucursal")) {
				this.sDetalleReporte=TipoFormaPagoConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					tipoformapagoLogic.getTipoFormaPagosFK_IdSucursal(finalQueryGlobal,pagination,id_sucursalFK_IdSucursal);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=TipoFormaPagoConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=TipoFormaPagoConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=tipoformapagoLogic.getTipoFormaPagos()==null||tipoformapagoLogic.getTipoFormaPagos().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=tipoformapagos==null|| tipoformapagos.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						tipoformapagosAux=new ArrayList<TipoFormaPago>();
						tipoformapagosAux.addAll(tipoformapagoLogic.getTipoFormaPagos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							tipoformapagosAux=new ArrayList<TipoFormaPago>();
							tipoformapagosAux.addAll(tipoformapagos);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							tipoformapagoLogic.getTipoFormaPagosFK_IdSucursal(finalQueryGlobal,pagination,id_sucursalFK_IdSucursal);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=TipoFormaPagoConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=TipoFormaPagoConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteTipoFormaPagos("FK_IdSucursal",tipoformapagoLogic.getTipoFormaPagos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteTipoFormaPagos("FK_IdSucursal",tipoformapagos);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						tipoformapagoLogic.setTipoFormaPagos(new ArrayList<TipoFormaPago>());
						tipoformapagoLogic.getTipoFormaPagos().addAll(tipoformapagosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							tipoformapagos=new ArrayList<TipoFormaPago>();
							tipoformapagos.addAll(tipoformapagosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdTipoFormaPago")) {
				this.sDetalleReporte=TipoFormaPagoConstantesFunciones.getDetalleIndiceFK_IdTipoFormaPago(id_cuenta_contableFK_IdTipoFormaPago);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					tipoformapagoLogic.getTipoFormaPagosFK_IdTipoFormaPago(finalQueryGlobal,pagination,id_cuenta_contableFK_IdTipoFormaPago);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=TipoFormaPagoConstantesFunciones.getDetalleIndiceFK_IdTipoFormaPago(id_cuenta_contableFK_IdTipoFormaPago);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=TipoFormaPagoConstantesFunciones.getDetalleIndiceFK_IdTipoFormaPago(id_cuenta_contableFK_IdTipoFormaPago);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=tipoformapagoLogic.getTipoFormaPagos()==null||tipoformapagoLogic.getTipoFormaPagos().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=tipoformapagos==null|| tipoformapagos.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						tipoformapagosAux=new ArrayList<TipoFormaPago>();
						tipoformapagosAux.addAll(tipoformapagoLogic.getTipoFormaPagos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							tipoformapagosAux=new ArrayList<TipoFormaPago>();
							tipoformapagosAux.addAll(tipoformapagos);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							tipoformapagoLogic.getTipoFormaPagosFK_IdTipoFormaPago(finalQueryGlobal,pagination,id_cuenta_contableFK_IdTipoFormaPago);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=TipoFormaPagoConstantesFunciones.getDetalleIndiceFK_IdTipoFormaPago(id_cuenta_contableFK_IdTipoFormaPago);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=TipoFormaPagoConstantesFunciones.getDetalleIndiceFK_IdTipoFormaPago(id_cuenta_contableFK_IdTipoFormaPago);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteTipoFormaPagos("FK_IdTipoFormaPago",tipoformapagoLogic.getTipoFormaPagos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteTipoFormaPagos("FK_IdTipoFormaPago",tipoformapagos);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						tipoformapagoLogic.setTipoFormaPagos(new ArrayList<TipoFormaPago>());
						tipoformapagoLogic.getTipoFormaPagos().addAll(tipoformapagosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							tipoformapagos=new ArrayList<TipoFormaPago>();
							tipoformapagos.addAll(tipoformapagosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdTipoGrupoFormaPago")) {
				this.sDetalleReporte=TipoFormaPagoConstantesFunciones.getDetalleIndiceFK_IdTipoGrupoFormaPago(id_tipo_grupo_forma_pagoFK_IdTipoGrupoFormaPago);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					tipoformapagoLogic.getTipoFormaPagosFK_IdTipoGrupoFormaPago(finalQueryGlobal,pagination,id_tipo_grupo_forma_pagoFK_IdTipoGrupoFormaPago);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=TipoFormaPagoConstantesFunciones.getDetalleIndiceFK_IdTipoGrupoFormaPago(id_tipo_grupo_forma_pagoFK_IdTipoGrupoFormaPago);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=TipoFormaPagoConstantesFunciones.getDetalleIndiceFK_IdTipoGrupoFormaPago(id_tipo_grupo_forma_pagoFK_IdTipoGrupoFormaPago);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=tipoformapagoLogic.getTipoFormaPagos()==null||tipoformapagoLogic.getTipoFormaPagos().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=tipoformapagos==null|| tipoformapagos.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						tipoformapagosAux=new ArrayList<TipoFormaPago>();
						tipoformapagosAux.addAll(tipoformapagoLogic.getTipoFormaPagos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							tipoformapagosAux=new ArrayList<TipoFormaPago>();
							tipoformapagosAux.addAll(tipoformapagos);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							tipoformapagoLogic.getTipoFormaPagosFK_IdTipoGrupoFormaPago(finalQueryGlobal,pagination,id_tipo_grupo_forma_pagoFK_IdTipoGrupoFormaPago);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=TipoFormaPagoConstantesFunciones.getDetalleIndiceFK_IdTipoGrupoFormaPago(id_tipo_grupo_forma_pagoFK_IdTipoGrupoFormaPago);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=TipoFormaPagoConstantesFunciones.getDetalleIndiceFK_IdTipoGrupoFormaPago(id_tipo_grupo_forma_pagoFK_IdTipoGrupoFormaPago);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteTipoFormaPagos("FK_IdTipoGrupoFormaPago",tipoformapagoLogic.getTipoFormaPagos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteTipoFormaPagos("FK_IdTipoGrupoFormaPago",tipoformapagos);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						tipoformapagoLogic.setTipoFormaPagos(new ArrayList<TipoFormaPago>());
						tipoformapagoLogic.getTipoFormaPagos().addAll(tipoformapagosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							tipoformapagos=new ArrayList<TipoFormaPago>();
							tipoformapagos.addAll(tipoformapagosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdTipoTransaccionModulo")) {
				this.sDetalleReporte=TipoFormaPagoConstantesFunciones.getDetalleIndiceFK_IdTipoTransaccionModulo(id_tipo_transaccion_moduloFK_IdTipoTransaccionModulo);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					tipoformapagoLogic.getTipoFormaPagosFK_IdTipoTransaccionModulo(finalQueryGlobal,pagination,id_tipo_transaccion_moduloFK_IdTipoTransaccionModulo);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=TipoFormaPagoConstantesFunciones.getDetalleIndiceFK_IdTipoTransaccionModulo(id_tipo_transaccion_moduloFK_IdTipoTransaccionModulo);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=TipoFormaPagoConstantesFunciones.getDetalleIndiceFK_IdTipoTransaccionModulo(id_tipo_transaccion_moduloFK_IdTipoTransaccionModulo);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=tipoformapagoLogic.getTipoFormaPagos()==null||tipoformapagoLogic.getTipoFormaPagos().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=tipoformapagos==null|| tipoformapagos.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						tipoformapagosAux=new ArrayList<TipoFormaPago>();
						tipoformapagosAux.addAll(tipoformapagoLogic.getTipoFormaPagos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							tipoformapagosAux=new ArrayList<TipoFormaPago>();
							tipoformapagosAux.addAll(tipoformapagos);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							tipoformapagoLogic.getTipoFormaPagosFK_IdTipoTransaccionModulo(finalQueryGlobal,pagination,id_tipo_transaccion_moduloFK_IdTipoTransaccionModulo);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=TipoFormaPagoConstantesFunciones.getDetalleIndiceFK_IdTipoTransaccionModulo(id_tipo_transaccion_moduloFK_IdTipoTransaccionModulo);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=TipoFormaPagoConstantesFunciones.getDetalleIndiceFK_IdTipoTransaccionModulo(id_tipo_transaccion_moduloFK_IdTipoTransaccionModulo);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteTipoFormaPagos("FK_IdTipoTransaccionModulo",tipoformapagoLogic.getTipoFormaPagos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteTipoFormaPagos("FK_IdTipoTransaccionModulo",tipoformapagos);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						tipoformapagoLogic.setTipoFormaPagos(new ArrayList<TipoFormaPago>());
						tipoformapagoLogic.getTipoFormaPagos().addAll(tipoformapagosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							tipoformapagos=new ArrayList<TipoFormaPago>();
							tipoformapagos.addAll(tipoformapagosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdTransaccion")) {
				this.sDetalleReporte=TipoFormaPagoConstantesFunciones.getDetalleIndiceFK_IdTransaccion(id_transaccionFK_IdTransaccion);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					tipoformapagoLogic.getTipoFormaPagosFK_IdTransaccion(finalQueryGlobal,pagination,id_transaccionFK_IdTransaccion);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=TipoFormaPagoConstantesFunciones.getDetalleIndiceFK_IdTransaccion(id_transaccionFK_IdTransaccion);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=TipoFormaPagoConstantesFunciones.getDetalleIndiceFK_IdTransaccion(id_transaccionFK_IdTransaccion);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=tipoformapagoLogic.getTipoFormaPagos()==null||tipoformapagoLogic.getTipoFormaPagos().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=tipoformapagos==null|| tipoformapagos.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						tipoformapagosAux=new ArrayList<TipoFormaPago>();
						tipoformapagosAux.addAll(tipoformapagoLogic.getTipoFormaPagos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							tipoformapagosAux=new ArrayList<TipoFormaPago>();
							tipoformapagosAux.addAll(tipoformapagos);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							tipoformapagoLogic.getTipoFormaPagosFK_IdTransaccion(finalQueryGlobal,pagination,id_transaccionFK_IdTransaccion);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=TipoFormaPagoConstantesFunciones.getDetalleIndiceFK_IdTransaccion(id_transaccionFK_IdTransaccion);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=TipoFormaPagoConstantesFunciones.getDetalleIndiceFK_IdTransaccion(id_transaccionFK_IdTransaccion);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteTipoFormaPagos("FK_IdTransaccion",tipoformapagoLogic.getTipoFormaPagos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteTipoFormaPagos("FK_IdTransaccion",tipoformapagos);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						tipoformapagoLogic.setTipoFormaPagos(new ArrayList<TipoFormaPago>());
						tipoformapagoLogic.getTipoFormaPagos().addAll(tipoformapagosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							tipoformapagos=new ArrayList<TipoFormaPago>();
							tipoformapagos.addAll(tipoformapagosAux);
						}
						//ARCHITECTURE
					}
				}

			} 
		
		
		
		this.redimensionarTablaDatos();
		//this.refrescarForeignKeysDescripcionesTipoFormaPago();
		
		
		if(this.conTotales) {
			this.crearFilaTotales();
		}		
		} catch (JRException e) {
			throw e;
		} catch(Exception e) {
			throw e;
      	} finally {
      		//this.finishProcessTipoFormaPago();
      	}
		
	}				
	
	public void redimensionarTablaDatos() throws Exception {
		int iSizeTabla=0;
				
		iSizeTabla=this.getSizeTablaDatos();
		
		//ARCHITECTURE
		/*
		if(Constantes.ISUSAEJBLOGICLAYER) {	
			iSizeTabla=tipoformapagoLogic.getTipoFormaPagos().size();
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			iSizeTabla=tipoformapagos.size();
		}
		*/
		//ARCHITECTURE
											
		this.redimensionarTablaDatos(iSizeTabla);		
	}
	
	public Integer getSizeTablaDatos() throws Exception {
		Integer iSizeTabla=0;
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {	
			iSizeTabla=tipoformapagoLogic.getTipoFormaPagos().size();
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			iSizeTabla=tipoformapagos.size();
		}
		//ARCHITECTURE
											
		return iSizeTabla;		
	}
	
			
	public Boolean permiteMantenimiento(TipoFormaPago tipoformapago) {
		Boolean permite=true;
		
		if(this.tipoformapago.getsType().equals(Constantes2.S_TOTALES)) {
			permite=false;
		}
		
		return permite;
	}
	
	public void traerValoresTablaTotales() throws Exception {
	}
	
	
	public void traerValoresTablaOrderBy() throws Exception {
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.arrOrderBy=TipoFormaPagoConstantesFunciones.getOrderByListaTipoFormaPago();							
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			this.arrOrderBy=TipoFormaPagoConstantesFunciones.getOrderByListaTipoFormaPago();
		}		
	}
	
	
	public Boolean existeFilaTotales() throws Exception {
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(TipoFormaPago tipoformapago:tipoformapagoLogic.getTipoFormaPagos()) {
				if(tipoformapago.getsType().equals(Constantes2.S_TOTALES)) {
					tipoformapagoTotales=tipoformapago;
					existe=true;
					break;
				}
			}
								
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(TipoFormaPago tipoformapago:this.tipoformapagos) {
				if(tipoformapago.getsType().equals(Constantes2.S_TOTALES)) {
					tipoformapagoTotales=tipoformapago;
					existe=true;
					break;
				}
			}
		}
		
		return existe;
	}
	
	public void crearFilaTotales() throws Exception {
		Boolean existe=false;
		
		existe=this.existeFilaTotales();
		
		if(!existe) {
			//SI NO ES UNO A UNO SE CREA FILA TOTALES
			this.tipoformapagoAux=new TipoFormaPago();
			this.tipoformapagoAux.setsType(Constantes2.S_TOTALES);
			this.tipoformapagoAux.setIsNew(false);
			this.tipoformapagoAux.setIsChanged(false);
			this.tipoformapagoAux.setIsDeleted(false);
				
			if(Constantes.ISUSAEJBLOGICLAYER) {
				TipoFormaPagoConstantesFunciones.TotalizarValoresFilaTipoFormaPago(this.tipoformapagoLogic.getTipoFormaPagos(),this.tipoformapagoAux);
				
				this.tipoformapagoLogic.getTipoFormaPagos().add(this.tipoformapagoAux);
				
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
				TipoFormaPagoConstantesFunciones.TotalizarValoresFilaTipoFormaPago(this.tipoformapagos,this.tipoformapagoAux);
				
				this.tipoformapagos.add(this.tipoformapagoAux);
			}
		}
	}
	
	public void quitarFilaTotales() throws Exception {
		tipoformapagoTotales=new TipoFormaPago();
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			existe=this.existeFilaTotales();
			
			if(existe) {
				this.tipoformapagoLogic.getTipoFormaPagos().remove(tipoformapagoTotales);
			}			
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			existe=this.existeFilaTotales();
			
			if(existe) {
				this.tipoformapagos.remove(tipoformapagoTotales);
			}
		}
	}
	
	public void actualizarFilaTotales() throws Exception {
		tipoformapagoTotales=new TipoFormaPago();
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(TipoFormaPago tipoformapago:tipoformapagoLogic.getTipoFormaPagos()) {
				if(tipoformapago.getsType().equals(Constantes2.S_TOTALES)) {
					tipoformapagoTotales=tipoformapago;
					existe=true;
					break;
				}
			}
			
			if(existe) {
				TipoFormaPagoConstantesFunciones.TotalizarValoresFilaTipoFormaPago(this.tipoformapagoLogic.getTipoFormaPagos(),tipoformapagoTotales);
			}			
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(TipoFormaPago tipoformapago:this.tipoformapagos) {
				if(tipoformapago.getsType().equals(Constantes2.S_TOTALES)) {
					tipoformapagoTotales=tipoformapago;
					existe=true;
					break;
				}
			}
			
			if(existe) {
				TipoFormaPagoConstantesFunciones.TotalizarValoresFilaTipoFormaPago(this.tipoformapagos,tipoformapagoTotales);
			}
		}
	}		
	
	public void recargarInformacion()throws Exception {
		try {
			sAccionBusqueda="Todos";
			this.iNumeroPaginacionPagina=0;
			
			this.procesarBusqueda(sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,TipoFormaPagoConstantesFunciones.CLASSNAME);
		}	
	}		
	
	
	public void getTipoFormaPagosBusquedaPorNombre()throws Exception {
		try {
			sAccionBusqueda="BusquedaPorNombre";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getTipoFormaPagosBusquedaPorSiglas()throws Exception {
		try {
			sAccionBusqueda="BusquedaPorSiglas";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getTipoFormaPagosFK_IdEmpresa()throws Exception {
		try {
			sAccionBusqueda="FK_IdEmpresa";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getTipoFormaPagosFK_IdModulo()throws Exception {
		try {
			sAccionBusqueda="FK_IdModulo";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getTipoFormaPagosFK_IdSucursal()throws Exception {
		try {
			sAccionBusqueda="FK_IdSucursal";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getTipoFormaPagosFK_IdTipoFormaPago()throws Exception {
		try {
			sAccionBusqueda="FK_IdTipoFormaPago";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getTipoFormaPagosFK_IdTipoGrupoFormaPago()throws Exception {
		try {
			sAccionBusqueda="FK_IdTipoGrupoFormaPago";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getTipoFormaPagosFK_IdTipoTransaccionModulo()throws Exception {
		try {
			sAccionBusqueda="FK_IdTipoTransaccionModulo";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getTipoFormaPagosFK_IdTransaccion()throws Exception {
		try {
			sAccionBusqueda="FK_IdTransaccion";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	
	
	public void getTipoFormaPagosBusquedaPorNombre(String sFinalQuery,String nombre)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipoformapagoLogic.getTipoFormaPagosBusquedaPorNombre(sFinalQuery,this.pagination,nombre);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getTipoFormaPagosBusquedaPorSiglas(String sFinalQuery,String siglas)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipoformapagoLogic.getTipoFormaPagosBusquedaPorSiglas(sFinalQuery,this.pagination,siglas);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getTipoFormaPagosFK_IdEmpresa(String sFinalQuery,Long id_empresa)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipoformapagoLogic.getTipoFormaPagosFK_IdEmpresa(sFinalQuery,this.pagination,id_empresa);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getTipoFormaPagosFK_IdModulo(String sFinalQuery,Long id_modulo)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipoformapagoLogic.getTipoFormaPagosFK_IdModulo(sFinalQuery,this.pagination,id_modulo);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getTipoFormaPagosFK_IdSucursal(String sFinalQuery,Long id_sucursal)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipoformapagoLogic.getTipoFormaPagosFK_IdSucursal(sFinalQuery,this.pagination,id_sucursal);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getTipoFormaPagosFK_IdTipoFormaPago(String sFinalQuery,Long id_cuenta_contable)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipoformapagoLogic.getTipoFormaPagosFK_IdTipoFormaPago(sFinalQuery,this.pagination,id_cuenta_contable);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getTipoFormaPagosFK_IdTipoGrupoFormaPago(String sFinalQuery,Long id_tipo_grupo_forma_pago)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipoformapagoLogic.getTipoFormaPagosFK_IdTipoGrupoFormaPago(sFinalQuery,this.pagination,id_tipo_grupo_forma_pago);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getTipoFormaPagosFK_IdTipoTransaccionModulo(String sFinalQuery,Long id_tipo_transaccion_modulo)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipoformapagoLogic.getTipoFormaPagosFK_IdTipoTransaccionModulo(sFinalQuery,this.pagination,id_tipo_transaccion_modulo);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getTipoFormaPagosFK_IdTransaccion(String sFinalQuery,Long id_transaccion)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipoformapagoLogic.getTipoFormaPagosFK_IdTransaccion(sFinalQuery,this.pagination,id_transaccion);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	
	public void onLoad()throws Exception {		
		try {		
			isEntroOnLoad=true;
			//INTENTA TRAER DATOS DE BUSQUEDA ANTERIOR
			this.traerDatosBusquedaDesdeSession();
					
			//SINO SE CUMPLE VIENE DE PADRE FOREIGN O BUSQUEDA ANTIGUA
			if(this.sAccionBusqueda.equals("")) {
				this.sAccionBusqueda="Todos";
			}
								
			this.procesarBusqueda(sAccionBusqueda);
			
		} catch (Exception e) {
			throw e;
		}
	}		
	
	public void inicializarPermisosTipoFormaPago() {
		this.isPermisoTodoTipoFormaPago=false;
		this.isPermisoNuevoTipoFormaPago=false;
		this.isPermisoActualizarTipoFormaPago=false;
		this.isPermisoActualizarOriginalTipoFormaPago=false;
		this.isPermisoEliminarTipoFormaPago=false;
		this.isPermisoGuardarCambiosTipoFormaPago=false;
		this.isPermisoConsultaTipoFormaPago=false;
		this.isPermisoBusquedaTipoFormaPago=false;
		this.isPermisoReporteTipoFormaPago=false;		
		this.isPermisoOrdenTipoFormaPago=false;		
		this.isPermisoPaginacionMedioTipoFormaPago=false;		
		this.isPermisoPaginacionAltoTipoFormaPago=false;
		this.isPermisoPaginacionTodoTipoFormaPago=false;
		this.isPermisoCopiarTipoFormaPago=false;		
		this.isPermisoVerFormTipoFormaPago=false;		
		this.isPermisoDuplicarTipoFormaPago=false;		
		this.isPermisoOrdenTipoFormaPago=false;		
	}
	
	public void setPermisosUsuarioTipoFormaPago(Boolean isPermiso) {
		this.isPermisoTodoTipoFormaPago=isPermiso;
		this.isPermisoNuevoTipoFormaPago=isPermiso;
		this.isPermisoActualizarTipoFormaPago=isPermiso;
		this.isPermisoActualizarOriginalTipoFormaPago=isPermiso;
		this.isPermisoEliminarTipoFormaPago=isPermiso;
		this.isPermisoGuardarCambiosTipoFormaPago=isPermiso;
		this.isPermisoConsultaTipoFormaPago=isPermiso;
		this.isPermisoBusquedaTipoFormaPago=isPermiso;
		this.isPermisoReporteTipoFormaPago=isPermiso;
		this.isPermisoOrdenTipoFormaPago=isPermiso;		
		this.isPermisoPaginacionMedioTipoFormaPago=isPermiso;		
		this.isPermisoPaginacionAltoTipoFormaPago=isPermiso;		
		this.isPermisoPaginacionTodoTipoFormaPago=isPermiso;		
		this.isPermisoCopiarTipoFormaPago=isPermiso;		
		this.isPermisoVerFormTipoFormaPago=isPermiso;		
		this.isPermisoDuplicarTipoFormaPago=isPermiso;
		this.isPermisoOrdenTipoFormaPago=isPermiso;
	}
	
	public void setPermisosMantenimientoUsuarioTipoFormaPago(Boolean isPermiso) {
		//this.isPermisoTodoTipoFormaPago=isPermiso;
		this.isPermisoNuevoTipoFormaPago=isPermiso;
		this.isPermisoActualizarTipoFormaPago=isPermiso;
		this.isPermisoActualizarOriginalTipoFormaPago=isPermiso;
		this.isPermisoEliminarTipoFormaPago=isPermiso;
		this.isPermisoGuardarCambiosTipoFormaPago=isPermiso;
		//this.isPermisoConsultaTipoFormaPago=isPermiso;
		//this.isPermisoBusquedaTipoFormaPago=isPermiso;
		//this.isPermisoReporteTipoFormaPago=isPermiso;
		//this.isPermisoOrdenTipoFormaPago=isPermiso;		
		//this.isPermisoPaginacionMedioTipoFormaPago=isPermiso;		
		//this.isPermisoPaginacionAltoTipoFormaPago=isPermiso;		
		//this.isPermisoPaginacionTodoTipoFormaPago=isPermiso;		
		//this.isPermisoCopiarTipoFormaPago=isPermiso;		
		//this.isPermisoDuplicarTipoFormaPago=isPermiso;
		//this.isPermisoOrdenTipoFormaPago=isPermiso;
	}
	
	public void inicializarSetPermisosUsuarioTipoFormaPagoClasesRelacionadas() throws Exception {
		ArrayList<String> arrPaginas=new ArrayList<String>();		
		ArrayList<Opcion> opcionsFinal=new ArrayList<Opcion>();	
		
		arrPaginas.add(RegistroFormaPagoBancoConstantesFunciones.SNOMBREOPCION);
		arrPaginas.add(DetaFormaPagoFactuConstantesFunciones.SNOMBREOPCION);
		arrPaginas.add(GrupoClienteFormaPagoConstantesFunciones.SNOMBREOPCION);
		arrPaginas.add(DetaFormaPagoConstantesFunciones.SNOMBREOPCION);
		arrPaginas.add(FormaPagoPuntoVentaConstantesFunciones.SNOMBREOPCION);
		arrPaginas.add(FormaPagoConstantesFunciones.SNOMBREOPCION);
		arrPaginas.add(FormaPagoInvenConstantesFunciones.SNOMBREOPCION);
		arrPaginas.add(CierreCajaConstantesFunciones.SNOMBREOPCION);
		
		if(TipoFormaPagoJInternalFrame.CON_LLAMADA_SIMPLE) {
			this.opcionsRelacionadas.addAll(this.sistemaReturnGeneral.getOpcionsRelacionadas());
			
		} else {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				opcionsFinal=sistemaLogicAdditional.tienePermisosOpcionesEnPaginaWeb(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, arrPaginas);
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}
			
			this.opcionsRelacionadas.addAll(opcionsFinal);
		}
		
		

		this.isTienePermisosRegistroFormaPagoBanco=false;
		this.isTienePermisosRegistroFormaPagoBanco=this.verificarGetPermisosUsuarioOpcionTipoFormaPagoClaseRelacionada(this.opcionsRelacionadas,RegistroFormaPagoBancoConstantesFunciones.SNOMBREOPCION);

		this.isTienePermisosDetaFormaPagoFactu=false;
		this.isTienePermisosDetaFormaPagoFactu=this.verificarGetPermisosUsuarioOpcionTipoFormaPagoClaseRelacionada(this.opcionsRelacionadas,DetaFormaPagoFactuConstantesFunciones.SNOMBREOPCION);

		this.isTienePermisosGrupoClienteFormaPago=false;
		this.isTienePermisosGrupoClienteFormaPago=this.verificarGetPermisosUsuarioOpcionTipoFormaPagoClaseRelacionada(this.opcionsRelacionadas,GrupoClienteFormaPagoConstantesFunciones.SNOMBREOPCION);

		this.isTienePermisosDetaFormaPago=false;
		this.isTienePermisosDetaFormaPago=this.verificarGetPermisosUsuarioOpcionTipoFormaPagoClaseRelacionada(this.opcionsRelacionadas,DetaFormaPagoConstantesFunciones.SNOMBREOPCION);

		this.isTienePermisosFormaPagoPuntoVenta=false;
		this.isTienePermisosFormaPagoPuntoVenta=this.verificarGetPermisosUsuarioOpcionTipoFormaPagoClaseRelacionada(this.opcionsRelacionadas,FormaPagoPuntoVentaConstantesFunciones.SNOMBREOPCION);

		this.isTienePermisosFormaPago=false;
		this.isTienePermisosFormaPago=this.verificarGetPermisosUsuarioOpcionTipoFormaPagoClaseRelacionada(this.opcionsRelacionadas,FormaPagoConstantesFunciones.SNOMBREOPCION);

		this.isTienePermisosFormaPagoInven=false;
		this.isTienePermisosFormaPagoInven=this.verificarGetPermisosUsuarioOpcionTipoFormaPagoClaseRelacionada(this.opcionsRelacionadas,FormaPagoInvenConstantesFunciones.SNOMBREOPCION);

		this.isTienePermisosCierreCaja=false;
		this.isTienePermisosCierreCaja=this.verificarGetPermisosUsuarioOpcionTipoFormaPagoClaseRelacionada(this.opcionsRelacionadas,CierreCajaConstantesFunciones.SNOMBREOPCION);
		
	}
	
	public Boolean tienePermisosUsuarioEnPaginaWebTipoFormaPago(String sPagina) throws Exception {
		Boolean tienePermisos=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			tienePermisos=sistemaLogicAdditional.tienePermisosEnPaginaWeb(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, sPagina);
		} else if(Constantes.ISUSAEJBREMOTE) {
		} else if(Constantes.ISUSAEJBHOME) {
		}
		
		return tienePermisos;
	}
	
	public void inicializarSetPermisosUsuarioTipoFormaPagoClasesRelacionadas(Boolean conPermiso) throws Exception {
		
		this.isTienePermisosRegistroFormaPagoBanco=conPermiso;
		this.isTienePermisosDetaFormaPagoFactu=conPermiso;
		this.isTienePermisosGrupoClienteFormaPago=conPermiso;
		this.isTienePermisosDetaFormaPago=conPermiso;
		this.isTienePermisosFormaPagoPuntoVenta=conPermiso;
		this.isTienePermisosFormaPago=conPermiso;
		this.isTienePermisosFormaPagoInven=conPermiso;
		this.isTienePermisosCierreCaja=conPermiso;
	}
	
	public Boolean verificarGetPermisosUsuarioTipoFormaPagoClaseRelacionada(ArrayList<String> arrPaginasFinal,String sPaginaActual) throws Exception {
		Boolean verificado=false;
		
		verificado=Funciones2.verificarGetPermisosUsuarioClaseRelacionada(arrPaginasFinal,sPaginaActual);				
		
		return verificado;
	}
	
	public Boolean verificarGetPermisosUsuarioOpcionTipoFormaPagoClaseRelacionada(List<Opcion> opcionsFinal,String sPaginaActual) throws Exception {
		Boolean verificado=false;
		
		verificado=Funciones2.verificarGetPermisosUsuarioOpcionClaseRelacionada(opcionsFinal,sPaginaActual);				
		
		return verificado;
	}
	
	public void actualizarTabsSetPermisosUsuarioTipoFormaPagoClasesRelacionadas() throws Exception {
		

		if(!this.isTienePermisosRegistroFormaPagoBanco && this.jInternalFrameDetalleFormTipoFormaPago!=null && this.jInternalFrameDetalleFormTipoFormaPago.registroformapagobancoBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormTipoFormaPago.jTabbedPaneRelacionesTipoFormaPago.remove(this.jInternalFrameDetalleFormTipoFormaPago.registroformapagobancoBeanSwingJInternalFrame.getContentPane());
		}

		if(!this.isTienePermisosDetaFormaPagoFactu && this.jInternalFrameDetalleFormTipoFormaPago!=null && this.jInternalFrameDetalleFormTipoFormaPago.detaformapagofactuBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormTipoFormaPago.jTabbedPaneRelacionesTipoFormaPago.remove(this.jInternalFrameDetalleFormTipoFormaPago.detaformapagofactuBeanSwingJInternalFrame.getContentPane());
		}

		if(!this.isTienePermisosGrupoClienteFormaPago && this.jInternalFrameDetalleFormTipoFormaPago!=null && this.jInternalFrameDetalleFormTipoFormaPago.grupoclienteformapagoBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormTipoFormaPago.jTabbedPaneRelacionesTipoFormaPago.remove(this.jInternalFrameDetalleFormTipoFormaPago.grupoclienteformapagoBeanSwingJInternalFrame.getContentPane());
		}

		if(!this.isTienePermisosDetaFormaPago && this.jInternalFrameDetalleFormTipoFormaPago!=null && this.jInternalFrameDetalleFormTipoFormaPago.detaformapagoBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormTipoFormaPago.jTabbedPaneRelacionesTipoFormaPago.remove(this.jInternalFrameDetalleFormTipoFormaPago.detaformapagoBeanSwingJInternalFrame.getContentPane());
		}

		if(!this.isTienePermisosFormaPagoPuntoVenta && this.jInternalFrameDetalleFormTipoFormaPago!=null && this.jInternalFrameDetalleFormTipoFormaPago.formapagopuntoventaBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormTipoFormaPago.jTabbedPaneRelacionesTipoFormaPago.remove(this.jInternalFrameDetalleFormTipoFormaPago.formapagopuntoventaBeanSwingJInternalFrame.getContentPane());
		}

		if(!this.isTienePermisosFormaPago && this.jInternalFrameDetalleFormTipoFormaPago!=null && this.jInternalFrameDetalleFormTipoFormaPago.formapagoBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormTipoFormaPago.jTabbedPaneRelacionesTipoFormaPago.remove(this.jInternalFrameDetalleFormTipoFormaPago.formapagoBeanSwingJInternalFrame.getContentPane());
		}

		if(!this.isTienePermisosFormaPagoInven && this.jInternalFrameDetalleFormTipoFormaPago!=null && this.jInternalFrameDetalleFormTipoFormaPago.formapagoinvenBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormTipoFormaPago.jTabbedPaneRelacionesTipoFormaPago.remove(this.jInternalFrameDetalleFormTipoFormaPago.formapagoinvenBeanSwingJInternalFrame.getContentPane());
		}

		if(!this.isTienePermisosCierreCaja && this.jInternalFrameDetalleFormTipoFormaPago!=null && this.jInternalFrameDetalleFormTipoFormaPago.cierrecajaBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormTipoFormaPago.jTabbedPaneRelacionesTipoFormaPago.remove(this.jInternalFrameDetalleFormTipoFormaPago.cierrecajaBeanSwingJInternalFrame.getContentPane());
		}
	}
	
	public void setPermisosUsuarioTipoFormaPago() throws Exception {
		
		PerfilOpcion perfilOpcionUsuario=new PerfilOpcion();		
		Long idOpcion=this.opcionActual.getId();
		
		if(TipoFormaPagoJInternalFrame.CON_LLAMADA_SIMPLE) {
			perfilOpcionUsuario=this.sistemaReturnGeneral.getPerfilOpcion();
			
		} else {
			if(this.tipoformapagoSessionBean.getEsGuardarRelacionado()) {
				idOpcion=0L;
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				perfilOpcionUsuario=sistemaLogicAdditional.traerPermisosPaginaWebPerfilOpcion(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, TipoFormaPagoConstantesFunciones.SNOMBREOPCION,idOpcion);				
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}
		}
		
		if(perfilOpcionUsuario!=null && perfilOpcionUsuario.getId()>0) {
			this.isPermisoNuevoTipoFormaPago=perfilOpcionUsuario.getingreso()||perfilOpcionUsuario.gettodo();
			this.isPermisoActualizarTipoFormaPago=perfilOpcionUsuario.getmodificacion()||perfilOpcionUsuario.gettodo();
			this.isPermisoActualizarOriginalTipoFormaPago=this.isPermisoActualizarTipoFormaPago;
			this.isPermisoEliminarTipoFormaPago=perfilOpcionUsuario.geteliminacion()||perfilOpcionUsuario.gettodo();
			this.isPermisoGuardarCambiosTipoFormaPago=perfilOpcionUsuario.getguardar_cambios()||perfilOpcionUsuario.gettodo();
			this.isPermisoConsultaTipoFormaPago=perfilOpcionUsuario.getconsulta()||perfilOpcionUsuario.gettodo();
			this.isPermisoBusquedaTipoFormaPago=perfilOpcionUsuario.getbusqueda()||perfilOpcionUsuario.gettodo();
			this.isPermisoTodoTipoFormaPago=perfilOpcionUsuario.gettodo()||perfilOpcionUsuario.gettodo();
			this.isPermisoReporteTipoFormaPago=perfilOpcionUsuario.getreporte()||perfilOpcionUsuario.gettodo();
			this.isPermisoOrdenTipoFormaPago=perfilOpcionUsuario.getorden()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionMedioTipoFormaPago=perfilOpcionUsuario.getpaginacion_medio()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionAltoTipoFormaPago=perfilOpcionUsuario.getpaginacion_alto()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionTodoTipoFormaPago=perfilOpcionUsuario.getpaginacion_todo()||perfilOpcionUsuario.gettodo();
			this.isPermisoCopiarTipoFormaPago=perfilOpcionUsuario.getcopiar()||perfilOpcionUsuario.gettodo();
			this.isPermisoVerFormTipoFormaPago=true;//perfilOpcionUsuario.getver_form()||perfilOpcionUsuario.gettodo();
			this.isPermisoDuplicarTipoFormaPago=perfilOpcionUsuario.getduplicar()||perfilOpcionUsuario.gettodo();
			this.isPermisoOrdenTipoFormaPago=perfilOpcionUsuario.getorden()||perfilOpcionUsuario.gettodo();
			
			if(this.tipoformapagoSessionBean.getEsGuardarRelacionado()) {
				this.opcionActual.setId(perfilOpcionUsuario.getid_opcion());
				
				this.jTableDatosTipoFormaPago.setToolTipText(this.jTableDatosTipoFormaPago.getToolTipText()+"_"+perfilOpcionUsuario.getid_opcion());		
			}
		} else {
			this.setPermisosUsuarioTipoFormaPago(false);
		}
		
		//SI SE NECESITA PONER TODOS LOS PERMISOS POR DEFECTO
		//
		
	}
	
	public void setAccionesUsuarioTipoFormaPago(Boolean esParaAccionesFormulario) throws Exception {		
		Reporte reporte=null;
		
		if(!esParaAccionesFormulario) {
			this.accions=new ArrayList<Accion>();
			
			if(TipoFormaPagoJInternalFrame.CON_LLAMADA_SIMPLE) {
				this.accions=this.sistemaReturnGeneral.getAccions();
				
				
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.accions=sistemaLogicAdditional.getAccionesUsuario(this.usuarioActual,this.opcionActual,false);				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}
			
			if(this.accions.size()>0) {			
				for(Accion accion:this.accions) {
					reporte=new Reporte();
					reporte.setsCodigo(accion.getcodigo());
					reporte.setsDescripcion(accion.getnombre());
		
		
					this.tiposAcciones.add(reporte);
				}
			}	
			
			

			reporte=new Reporte();
			reporte.setsCodigo("");
			reporte.setsDescripcion("");

			this.tiposAcciones.add(reporte);
			
		} else {
			//ACCIONES FORMULARIO
			this.accionsFormulario=new ArrayList<Accion>();
			
			if(TipoFormaPagoJInternalFrame.CON_LLAMADA_SIMPLE) {
				this.accionsFormulario=this.sistemaReturnGeneral.getAccionsFormulario();
			
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.accionsFormulario=sistemaLogicAdditional.getAccionesUsuario(this.usuarioActual,this.opcionActual,true);				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}
			
			if(this.accionsFormulario.size()>0) {			
				for(Accion accion:this.accionsFormulario) {
					reporte=new Reporte();
					reporte.setsCodigo(accion.getcodigo());
					reporte.setsDescripcion(accion.getnombre());
					
					this.tiposAccionesFormulario.add(reporte);
				}
			}	
			
			

			reporte=new Reporte();
			reporte.setsCodigo("");
			reporte.setsDescripcion("");

			this.tiposAccionesFormulario.add(reporte);
		}				
	}	 	
	
	public void setRelacionesUsuarioTipoFormaPago() throws Exception {
		Reporte reporte=null;
		
		

		if(this.isTienePermisosRegistroFormaPagoBanco && this.tipoformapagoConstantesFunciones.mostrarRegistroFormaPagoBancoTipoFormaPago && !TipoFormaPagoConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Registro Forma Pago Banco");
			reporte.setsDescripcion("Registro Forma Pago Banco");
			this.tiposRelaciones.add(reporte);
		}

		if(this.isTienePermisosDetaFormaPagoFactu && this.tipoformapagoConstantesFunciones.mostrarDetaFormaPagoFactuTipoFormaPago && !TipoFormaPagoConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Deta Forma Pago Factu");
			reporte.setsDescripcion("Deta Forma Pago Factu");
			this.tiposRelaciones.add(reporte);
		}

		if(this.isTienePermisosGrupoClienteFormaPago && this.tipoformapagoConstantesFunciones.mostrarGrupoClienteFormaPagoTipoFormaPago && !TipoFormaPagoConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Grupo Cliente Forma Pago");
			reporte.setsDescripcion("Grupo Cliente Forma Pago");
			this.tiposRelaciones.add(reporte);
		}

		if(this.isTienePermisosDetaFormaPago && this.tipoformapagoConstantesFunciones.mostrarDetaFormaPagoTipoFormaPago && !TipoFormaPagoConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Deta Forma Pago");
			reporte.setsDescripcion("Deta Forma Pago");
			this.tiposRelaciones.add(reporte);
		}

		if(this.isTienePermisosFormaPagoPuntoVenta && this.tipoformapagoConstantesFunciones.mostrarFormaPagoPuntoVentaTipoFormaPago && !TipoFormaPagoConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Forma Pago");
			reporte.setsDescripcion("Forma Pago");
			this.tiposRelaciones.add(reporte);
		}

		if(this.isTienePermisosFormaPago && this.tipoformapagoConstantesFunciones.mostrarFormaPagoTipoFormaPago && !TipoFormaPagoConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Forma Pago");
			reporte.setsDescripcion("Forma Pago");
			this.tiposRelaciones.add(reporte);
		}

		if(this.isTienePermisosFormaPagoInven && this.tipoformapagoConstantesFunciones.mostrarFormaPagoInvenTipoFormaPago && !TipoFormaPagoConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Forma Pago");
			reporte.setsDescripcion("Forma Pago");
			this.tiposRelaciones.add(reporte);
		}

		if(this.isTienePermisosCierreCaja && this.tipoformapagoConstantesFunciones.mostrarCierreCajaTipoFormaPago && !TipoFormaPagoConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Cierre Caja");
			reporte.setsDescripcion("Cierre Caja");
			this.tiposRelaciones.add(reporte);
		}
		
		
		//ORDENAR ALFABETICAMENTE
		Collections.sort(this.tiposRelaciones, new ReporteComparator());
		/*
		reporte=new Reporte();
		reporte.setsCodigo(accion.getcodigo());
		reporte.setsDescripcion(accion.getnombre());
			
		this.tiposRelaciones.add(reporte);
		*/
	}	
	
		
	@SuppressWarnings({ "unchecked", "rawtypes" } )
	public void inicializarCombosForeignKeyTipoFormaPagoListas()throws Exception {
		try	{						
			
				this.empresasForeignKey=new ArrayList();
				this.sucursalsForeignKey=new ArrayList();
				this.modulosForeignKey=new ArrayList();
				this.tipogrupoformapagosForeignKey=new ArrayList();
				this.tipotransaccionmodulosForeignKey=new ArrayList();
				this.transaccionsForeignKey=new ArrayList();
				this.cuentacontablesForeignKey=new ArrayList();
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void cargarCombosTodosForeignKeyTipoFormaPagoListas(Boolean cargarCombosDependencia)throws Exception {
		try	{
			
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			String sFinalQueryCombo="";
			
			Modulo  moduloActualAux=new Modulo();
			
			if(TipoFormaPagoJInternalFrame.ISLOAD_FKLOTE) {
				this.cargarCombosLoteForeignKeyTipoFormaPagoListas(false);
			} else {
			
				this.cargarCombosForeignKeyEmpresaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeySucursalListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyModuloListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTipoGrupoFormaPagoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTipoTransaccionModuloListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTransaccionListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyCuentaContableListas(cargarCombosDependencia,sFinalQueryCombo);
			}
		} catch(Exception e) {
			throw e;
		}		
	}		
	
	

	public void cargarCombosForeignKeyEmpresaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.empresasForeignKey==null||this.empresasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=EmpresaConstantesFunciones.getArrayColumnasGlobalesEmpresa(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EmpresaConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=EmpresaConstantesFunciones.SFINALQUERY;

				this.cargarCombosEmpresasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeySucursalListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.sucursalsForeignKey==null||this.sucursalsForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=SucursalConstantesFunciones.getArrayColumnasGlobalesSucursal(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,SucursalConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=SucursalConstantesFunciones.SFINALQUERY;

				this.cargarCombosSucursalsForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyModuloListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.modulosForeignKey==null||this.modulosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=ModuloConstantesFunciones.getArrayColumnasGlobalesModulo(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,ModuloConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=ModuloConstantesFunciones.SFINALQUERY;

				this.cargarCombosModulosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoGrupoFormaPagoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.tipogrupoformapagosForeignKey==null||this.tipogrupoformapagosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TipoGrupoFormaPagoConstantesFunciones.getArrayColumnasGlobalesTipoGrupoFormaPago(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoGrupoFormaPagoConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TipoGrupoFormaPagoConstantesFunciones.SFINALQUERY;

				this.cargarCombosTipoGrupoFormaPagosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoTransaccionModuloListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.tipotransaccionmodulosForeignKey==null||this.tipotransaccionmodulosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TipoTransaccionModuloConstantesFunciones.getArrayColumnasGlobalesTipoTransaccionModulo(this.arrDatoGeneral,this.arrDatoGeneralNo);
				moduloActualAux.setId(ModuloConstantesFuncionesAdditional.LID_MODULO_CUENTAS_POR_PAGAR);

				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,moduloActualAux,true,false,arrColumnasGlobales,TipoTransaccionModuloConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TipoTransaccionModuloConstantesFunciones.SFINALQUERY;

				this.cargarCombosTipoTransaccionModulosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTransaccionListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if(cargarCombosDependencia && (this.transaccionsForeignKey==null||this.transaccionsForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TransaccionConstantesFunciones.getArrayColumnasGlobalesTransaccion(this.arrDatoGeneral,this.arrDatoGeneralNo);
				moduloActualAux.setId(ModuloConstantesFuncionesAdditional.LID_MODULO_CUENTAS_POR_PAGAR);

				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,moduloActualAux,true,false,arrColumnasGlobales,TransaccionConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TransaccionConstantesFunciones.SFINALQUERY;

				this.cargarCombosTransaccionsForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCuentaContableListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.cuentacontablesForeignKey==null||this.cuentacontablesForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=CuentaContableConstantesFunciones.getArrayColumnasGlobalesCuentaContable(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CuentaContableConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=CuentaContableConstantesFunciones.SFINALQUERY;

				this.cargarCombosCuentaContablesForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}
	
	public void cargarCombosLoteForeignKeyTipoFormaPagoListas(Boolean cargarCombosDependencia)throws Exception {
		try	{
			
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			
			Modulo  moduloActualAux=new Modulo();
			
			
			TipoFormaPagoParameterReturnGeneral tipoformapagoReturnGeneral=new TipoFormaPagoParameterReturnGeneral();
						
			


				String finalQueryGlobalEmpresa="";

				if(((this.empresasForeignKey==null||this.empresasForeignKey.size()<=0) && this.tipoformapagoConstantesFunciones.cargarid_empresaTipoFormaPago)
					 || (this.esRecargarFks && this.tipoformapagoConstantesFunciones.cargarid_empresaTipoFormaPago)) {

					if(!this.tipoformapagoSessionBean.getisBusquedaDesdeForeignKeySesionEmpresa()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=EmpresaConstantesFunciones.getArrayColumnasGlobalesEmpresa(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalEmpresa=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EmpresaConstantesFunciones.TABLENAME);

						finalQueryGlobalEmpresa=Funciones.GetFinalQueryAppend(finalQueryGlobalEmpresa, "");
						finalQueryGlobalEmpresa+=EmpresaConstantesFunciones.SFINALQUERY;

						//this.cargarCombosEmpresasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalEmpresa=" WHERE " + ConstantesSql.ID + "="+tipoformapagoSessionBean.getlidEmpresaActual();
					}
				} else {
					finalQueryGlobalEmpresa="NONE";
				}


				String finalQueryGlobalSucursal="";

				if(((this.sucursalsForeignKey==null||this.sucursalsForeignKey.size()<=0) && this.tipoformapagoConstantesFunciones.cargarid_sucursalTipoFormaPago)
					 || (this.esRecargarFks && this.tipoformapagoConstantesFunciones.cargarid_sucursalTipoFormaPago)) {

					if(!this.tipoformapagoSessionBean.getisBusquedaDesdeForeignKeySesionSucursal()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=SucursalConstantesFunciones.getArrayColumnasGlobalesSucursal(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalSucursal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,SucursalConstantesFunciones.TABLENAME);

						finalQueryGlobalSucursal=Funciones.GetFinalQueryAppend(finalQueryGlobalSucursal, "");
						finalQueryGlobalSucursal+=SucursalConstantesFunciones.SFINALQUERY;

						//this.cargarCombosSucursalsForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalSucursal=" WHERE " + ConstantesSql.ID + "="+tipoformapagoSessionBean.getlidSucursalActual();
					}
				} else {
					finalQueryGlobalSucursal="NONE";
				}


				String finalQueryGlobalModulo="";

				if(((this.modulosForeignKey==null||this.modulosForeignKey.size()<=0) && this.tipoformapagoConstantesFunciones.cargarid_moduloTipoFormaPago)
					 || (this.esRecargarFks && this.tipoformapagoConstantesFunciones.cargarid_moduloTipoFormaPago)) {

					if(!this.tipoformapagoSessionBean.getisBusquedaDesdeForeignKeySesionModulo()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=ModuloConstantesFunciones.getArrayColumnasGlobalesModulo(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalModulo=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,ModuloConstantesFunciones.TABLENAME);

						finalQueryGlobalModulo=Funciones.GetFinalQueryAppend(finalQueryGlobalModulo, "");
						finalQueryGlobalModulo+=ModuloConstantesFunciones.SFINALQUERY;

						//this.cargarCombosModulosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalModulo=" WHERE " + ConstantesSql.ID + "="+tipoformapagoSessionBean.getlidModuloActual();
					}
				} else {
					finalQueryGlobalModulo="NONE";
				}


				String finalQueryGlobalTipoGrupoFormaPago="";

				if(((this.tipogrupoformapagosForeignKey==null||this.tipogrupoformapagosForeignKey.size()<=0) && this.tipoformapagoConstantesFunciones.cargarid_tipo_grupo_forma_pagoTipoFormaPago)
					 || (this.esRecargarFks && this.tipoformapagoConstantesFunciones.cargarid_tipo_grupo_forma_pagoTipoFormaPago)) {

					if(!this.tipoformapagoSessionBean.getisBusquedaDesdeForeignKeySesionTipoGrupoFormaPago()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TipoGrupoFormaPagoConstantesFunciones.getArrayColumnasGlobalesTipoGrupoFormaPago(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalTipoGrupoFormaPago=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoGrupoFormaPagoConstantesFunciones.TABLENAME);

						finalQueryGlobalTipoGrupoFormaPago=Funciones.GetFinalQueryAppend(finalQueryGlobalTipoGrupoFormaPago, "");
						finalQueryGlobalTipoGrupoFormaPago+=TipoGrupoFormaPagoConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTipoGrupoFormaPagosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTipoGrupoFormaPago=" WHERE " + ConstantesSql.ID + "="+tipoformapagoSessionBean.getlidTipoGrupoFormaPagoActual();
					}
				} else {
					finalQueryGlobalTipoGrupoFormaPago="NONE";
				}


				String finalQueryGlobalTipoTransaccionModulo="";

				if(((this.tipotransaccionmodulosForeignKey==null||this.tipotransaccionmodulosForeignKey.size()<=0) && this.tipoformapagoConstantesFunciones.cargarid_tipo_transaccion_moduloTipoFormaPago)
					 || (this.esRecargarFks && this.tipoformapagoConstantesFunciones.cargarid_tipo_transaccion_moduloTipoFormaPago)) {

					if(!this.tipoformapagoSessionBean.getisBusquedaDesdeForeignKeySesionTipoTransaccionModulo()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TipoTransaccionModuloConstantesFunciones.getArrayColumnasGlobalesTipoTransaccionModulo(this.arrDatoGeneral,this.arrDatoGeneralNo);
						moduloActualAux.setId(ModuloConstantesFuncionesAdditional.LID_MODULO_CUENTAS_POR_PAGAR);

						finalQueryGlobalTipoTransaccionModulo=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,moduloActualAux,true,false,arrColumnasGlobales,TipoTransaccionModuloConstantesFunciones.TABLENAME);

						finalQueryGlobalTipoTransaccionModulo=Funciones.GetFinalQueryAppend(finalQueryGlobalTipoTransaccionModulo, "");
						finalQueryGlobalTipoTransaccionModulo+=TipoTransaccionModuloConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTipoTransaccionModulosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTipoTransaccionModulo=" WHERE " + ConstantesSql.ID + "="+tipoformapagoSessionBean.getlidTipoTransaccionModuloActual();
					}
				} else {
					finalQueryGlobalTipoTransaccionModulo="NONE";
				}


				String finalQueryGlobalTransaccion="";

				if(cargarCombosDependencia && ((this.transaccionsForeignKey==null||this.transaccionsForeignKey.size()<=0) && this.tipoformapagoConstantesFunciones.cargarid_transaccionTipoFormaPago)
					 || (this.esRecargarFks && this.tipoformapagoConstantesFunciones.cargarid_transaccionTipoFormaPago)) {

					if(!this.tipoformapagoSessionBean.getisBusquedaDesdeForeignKeySesionTransaccion()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TransaccionConstantesFunciones.getArrayColumnasGlobalesTransaccion(this.arrDatoGeneral,this.arrDatoGeneralNo);
						moduloActualAux.setId(ModuloConstantesFuncionesAdditional.LID_MODULO_CUENTAS_POR_PAGAR);

						finalQueryGlobalTransaccion=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,moduloActualAux,true,false,arrColumnasGlobales,TransaccionConstantesFunciones.TABLENAME);

						finalQueryGlobalTransaccion=Funciones.GetFinalQueryAppend(finalQueryGlobalTransaccion, "");
						finalQueryGlobalTransaccion+=TransaccionConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTransaccionsForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTransaccion=" WHERE " + ConstantesSql.ID + "="+tipoformapagoSessionBean.getlidTransaccionActual();
					}
				} else {
					finalQueryGlobalTransaccion="NONE";
				}


				String finalQueryGlobalCuentaContable="";

				if(((this.cuentacontablesForeignKey==null||this.cuentacontablesForeignKey.size()<=0) && this.tipoformapagoConstantesFunciones.cargarid_cuenta_contableTipoFormaPago)
					 || (this.esRecargarFks && this.tipoformapagoConstantesFunciones.cargarid_cuenta_contableTipoFormaPago)) {

					if(!this.tipoformapagoSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContable()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();

						this.arrDatoGeneralNo.add("id_modulo");

						arrColumnasGlobales=CuentaContableConstantesFunciones.getArrayColumnasGlobalesCuentaContable(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalCuentaContable=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CuentaContableConstantesFunciones.TABLENAME);

						finalQueryGlobalCuentaContable=Funciones.GetFinalQueryAppend(finalQueryGlobalCuentaContable, "");
						finalQueryGlobalCuentaContable+=CuentaContableConstantesFunciones.SFINALQUERY;

						//this.cargarCombosCuentaContablesForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalCuentaContable=" WHERE " + ConstantesSql.ID + "="+tipoformapagoSessionBean.getlidCuentaContableActual();
					}
				} else {
					finalQueryGlobalCuentaContable="NONE";
				}
			
			//ARCHITECTURE			
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				tipoformapagoReturnGeneral=tipoformapagoLogic.cargarCombosLoteForeignKeyTipoFormaPago(finalQueryGlobalEmpresa,finalQueryGlobalSucursal,finalQueryGlobalModulo,finalQueryGlobalTipoGrupoFormaPago,finalQueryGlobalTipoTransaccionModulo,finalQueryGlobalTransaccion,finalQueryGlobalCuentaContable);//WithConnection
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}			
			//ARCHITECTURE
			
			

			if(!finalQueryGlobalEmpresa.equals("NONE")) {
				this.empresasForeignKey=tipoformapagoReturnGeneral.getempresasForeignKey();
			}

			if(!finalQueryGlobalSucursal.equals("NONE")) {
				this.sucursalsForeignKey=tipoformapagoReturnGeneral.getsucursalsForeignKey();
			}

			if(!finalQueryGlobalModulo.equals("NONE")) {
				this.modulosForeignKey=tipoformapagoReturnGeneral.getmodulosForeignKey();
			}

			if(!finalQueryGlobalTipoGrupoFormaPago.equals("NONE")) {
				this.tipogrupoformapagosForeignKey=tipoformapagoReturnGeneral.gettipogrupoformapagosForeignKey();
			}

			if(!finalQueryGlobalTipoTransaccionModulo.equals("NONE")) {
				this.tipotransaccionmodulosForeignKey=tipoformapagoReturnGeneral.gettipotransaccionmodulosForeignKey();
			}

			if(!finalQueryGlobalTransaccion.equals("NONE")) {
				this.transaccionsForeignKey=tipoformapagoReturnGeneral.gettransaccionsForeignKey();
			}

			if(!finalQueryGlobalCuentaContable.equals("NONE")) {
				this.cuentacontablesForeignKey=tipoformapagoReturnGeneral.getcuentacontablesForeignKey();
			}
			
			
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void addItemDefectoCombosTodosForeignKeyTipoFormaPago()throws Exception {
		try {
			
			this.addItemDefectoCombosForeignKeyEmpresa();
			this.addItemDefectoCombosForeignKeySucursal();
			this.addItemDefectoCombosForeignKeyModulo();
			this.addItemDefectoCombosForeignKeyTipoGrupoFormaPago();
			this.addItemDefectoCombosForeignKeyTipoTransaccionModulo();
			this.addItemDefectoCombosForeignKeyTransaccion();
			this.addItemDefectoCombosForeignKeyCuentaContable();
		} catch(Exception e) {
			throw e;
		}		
	}
	
	



	public void addItemDefectoCombosForeignKeyEmpresa()throws Exception {
		try {
			if(this.tipoformapagoSessionBean==null) {
				this.tipoformapagoSessionBean=new TipoFormaPagoSessionBean();
			}

			if(!this.tipoformapagoSessionBean.getisBusquedaDesdeForeignKeySesionEmpresa()) {
				Empresa empresa=new Empresa();
				EmpresaConstantesFunciones.setEmpresaDescripcion(empresa,Constantes.SMENSAJE_ESCOJA_OPCION);
				empresa.setId(null);

				if(!EmpresaConstantesFunciones.ExisteEnLista(this.empresasForeignKey,empresa,true)) {

					this.empresasForeignKey.add(0,empresa);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeySucursal()throws Exception {
		try {

			if(!this.tipoformapagoSessionBean.getisBusquedaDesdeForeignKeySesionSucursal()) {
				Sucursal sucursal=new Sucursal();
				SucursalConstantesFunciones.setSucursalDescripcion(sucursal,Constantes.SMENSAJE_ESCOJA_OPCION);
				sucursal.setId(null);

				if(!SucursalConstantesFunciones.ExisteEnLista(this.sucursalsForeignKey,sucursal,true)) {

					this.sucursalsForeignKey.add(0,sucursal);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyModulo()throws Exception {
		try {

			if(!this.tipoformapagoSessionBean.getisBusquedaDesdeForeignKeySesionModulo()) {
				Modulo modulo=new Modulo();
				ModuloConstantesFunciones.setModuloDescripcion(modulo,Constantes.SMENSAJE_ESCOJA_OPCION);
				modulo.setId(null);

				if(!ModuloConstantesFunciones.ExisteEnLista(this.modulosForeignKey,modulo,true)) {

					this.modulosForeignKey.add(0,modulo);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTipoGrupoFormaPago()throws Exception {
		try {

			if(!this.tipoformapagoSessionBean.getisBusquedaDesdeForeignKeySesionTipoGrupoFormaPago()) {
				TipoGrupoFormaPago tipogrupoformapago=new TipoGrupoFormaPago();
				TipoGrupoFormaPagoConstantesFunciones.setTipoGrupoFormaPagoDescripcion(tipogrupoformapago,Constantes.SMENSAJE_ESCOJA_OPCION);
				tipogrupoformapago.setId(null);

				if(!TipoGrupoFormaPagoConstantesFunciones.ExisteEnLista(this.tipogrupoformapagosForeignKey,tipogrupoformapago,true)) {

					this.tipogrupoformapagosForeignKey.add(0,tipogrupoformapago);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTipoTransaccionModulo()throws Exception {
		try {

			if(!this.tipoformapagoSessionBean.getisBusquedaDesdeForeignKeySesionTipoTransaccionModulo()) {
				TipoTransaccionModulo tipotransaccionmodulo=new TipoTransaccionModulo();
				TipoTransaccionModuloConstantesFunciones.setTipoTransaccionModuloDescripcion(tipotransaccionmodulo,Constantes.SMENSAJE_ESCOJA_OPCION);
				tipotransaccionmodulo.setId(null);

				if(!TipoTransaccionModuloConstantesFunciones.ExisteEnLista(this.tipotransaccionmodulosForeignKey,tipotransaccionmodulo,true)) {

					this.tipotransaccionmodulosForeignKey.add(0,tipotransaccionmodulo);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTransaccion()throws Exception {
		try {

			if(!this.tipoformapagoSessionBean.getisBusquedaDesdeForeignKeySesionTransaccion()) {
				Transaccion transaccion=new Transaccion();
				TransaccionConstantesFunciones.setTransaccionDescripcion(transaccion,Constantes.SMENSAJE_ESCOJA_OPCION);
				transaccion.setId(null);

				if(!TransaccionConstantesFunciones.ExisteEnLista(this.transaccionsForeignKey,transaccion,true)) {

					this.transaccionsForeignKey.add(0,transaccion);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyCuentaContable()throws Exception {
		try {

			if(!this.tipoformapagoSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContable()) {
				CuentaContable cuentacontable=new CuentaContable();
				CuentaContableConstantesFunciones.setCuentaContableDescripcion(cuentacontable,Constantes.SMENSAJE_ESCOJA_OPCION);
				cuentacontable.setId(null);

				if(!CuentaContableConstantesFunciones.ExisteEnLista(this.cuentacontablesForeignKey,cuentacontable,true)) {

					this.cuentacontablesForeignKey.add(0,cuentacontable);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void initActionsCombosTodosForeignKeyTipoFormaPago()throws Exception {
		try {
			
			this.initActionsCombosForeignKeyTipoTransaccionModulo("Todos");
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void initActionsCombosTodosForeignKeyTipoFormaPago(String sFormularioTipoBusqueda)throws Exception {
		try {
			
			this.initActionsCombosForeignKeyTipoTransaccionModulo(sFormularioTipoBusqueda);
		} catch(Exception e) {
			throw e;
		}		
	}
	
	



	@SuppressWarnings("rawtypes")
	public void procesarActionsCombosForeignKeyTipoTransaccionModulo(JComboBox jComboBoxTipoTransaccionModuloGenerico,String sFormularioTipoBusqueda)throws Exception {
		try {
			String sFinalQueryCombo="";
			TipoTransaccionModulo tipotransaccionmoduloLocal=(TipoTransaccionModulo)jComboBoxTipoTransaccionModuloGenerico.getSelectedItem();

			if(tipotransaccionmoduloLocal!=null  && tipotransaccionmoduloLocal.getId()!=null  && tipotransaccionmoduloLocal.getId()>0) {
				sFinalQueryCombo="  WHERE  id_tipo_transaccion_modulo="+tipotransaccionmoduloLocal.getId();
			}
			//REDEFINE

			//COPIA PARA VENTANA BUSQUEDA
			this.sFinalQueryComboTransaccion=sFinalQueryCombo;

			this.transaccionsForeignKey=new ArrayList<Transaccion>();
			this.cargarCombosForeignKeyTransaccion(true,false,false,sFinalQueryCombo,sFormularioTipoBusqueda);
		} catch(Exception e) {
			throw e;
		}
	}
	
	



	public void initActionsCombosForeignKeyTipoTransaccionModulo(String sFormularioTipoBusqueda)throws Exception {
		try {
			if(sFormularioTipoBusqueda.equals("Todos") || sFormularioTipoBusqueda.equals("Formulario")) {
				if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
					if(this.jInternalFrameDetalleFormTipoFormaPago!=null) {
						this.jInternalFrameDetalleFormTipoFormaPago.jComboBoxid_tipo_transaccion_moduloTipoFormaPago.addItemListener(new ComboBoxItemListener(this,"id_tipo_transaccion_moduloTipoFormaPago"));
						this.jInternalFrameDetalleFormTipoFormaPago.jComboBoxid_tipo_transaccion_moduloTipoFormaPago.addFocusListener(new ComboBoxFocusListener(this,"id_tipo_transaccion_moduloTipoFormaPago"));
					}
				} else {
					if(this.jInternalFrameDetalleFormTipoFormaPago!=null) {
						this.jInternalFrameDetalleFormTipoFormaPago.jComboBoxid_tipo_transaccion_moduloTipoFormaPago.addActionListener(new ComboBoxActionListener(this,"id_tipo_transaccion_moduloTipoFormaPago"));
						this.jInternalFrameDetalleFormTipoFormaPago.jComboBoxid_tipo_transaccion_moduloTipoFormaPago.addFocusListener(new ComboBoxFocusListener(this,"id_tipo_transaccion_moduloTipoFormaPago"));
					}
				}
			}

			if(sFormularioTipoBusqueda.equals("Todos")) {

				if(!this.conCargarMinimo) {
				
					if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
						this.jComboBoxid_tipo_transaccion_moduloFK_IdTipoTransaccionModuloTipoFormaPago.addItemListener(new ComboBoxItemListener(this,"jComboBoxid_tipo_transaccion_moduloFK_IdTipoTransaccionModuloTipoFormaPago"));

						this.jComboBoxid_tipo_transaccion_moduloFK_IdTipoTransaccionModuloTipoFormaPago.addFocusListener(new ComboBoxFocusListener(this,"jComboBoxid_tipo_transaccion_moduloFK_IdTipoTransaccionModuloTipoFormaPago"));

					} else {
						this.jComboBoxid_tipo_transaccion_moduloFK_IdTipoTransaccionModuloTipoFormaPago.addActionListener(new ComboBoxActionListener(this,"jComboBoxid_tipo_transaccion_moduloFK_IdTipoTransaccionModuloTipoFormaPago"));

						this.jComboBoxid_tipo_transaccion_moduloFK_IdTipoTransaccionModuloTipoFormaPago.addFocusListener(new ComboBoxFocusListener(this,"jComboBoxid_tipo_transaccion_moduloFK_IdTipoTransaccionModuloTipoFormaPago"));

					}
			
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesGlobalesCombosForeignKeyTipoFormaPago()throws Exception {	
		try {
			if(this.parametroGeneralUsuario!=null && this.parametroGeneralUsuario.getId()>0) {
			
				this.setActualEmpresaForeignKey(this.parametroGeneralUsuario.getid_empresa(),false,"Formulario");
				this.setActualSucursalForeignKey(this.parametroGeneralUsuario.getid_sucursal(),false,"Formulario");
				this.setActualModuloForeignKey(this.moduloActual.getId(),false,"Formulario");
			
			
			}
			
			//INICIALIZA VARIABLES COMBOS GLOBALES AUXILIARES A FORMULARIO(Anio,Mes)
			this.setVariablesGlobalesAuxiliaresCombosForeignKeyTipoFormaPago();
		
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesObjetoActualToFormularioForeignKeyTipoFormaPago(TipoFormaPago tipoformapago)throws Exception {	
		try {
			
			this.setActualTipoGrupoFormaPagoForeignKey(tipoformapago.getid_tipo_grupo_forma_pago(),false,"Formulario");
			this.setActualTipoTransaccionModuloForeignKey(tipoformapago.getid_tipo_transaccion_modulo(),false,"Formulario");
			this.setActualTransaccionForeignKey(tipoformapago.getid_transaccion(),false,"Formulario");
			this.setActualCuentaContableForeignKey(tipoformapago.getid_cuenta_contable(),false,"Formulario");			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesObjetoActualToListasForeignKeyTipoFormaPago(TipoFormaPago tipoformapago,String sTipoEvento)throws Exception {	
		try {
			
			

				if(tipoformapago.getCuentaContable()!=null && !sTipoEvento.equals("id_cuenta_contableTipoFormaPago")) { //sTipoEvento Evita Bucle Infinito

					this.cuentacontablesForeignKey=new ArrayList<CuentaContable>();
					this.cuentacontablesForeignKey.add(tipoformapago.getCuentaContable());

					this.addItemDefectoCombosForeignKeyCuentaContable();
					this.cargarCombosFrameCuentaContablesForeignKey("Todos");
				}
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	/*
	public void setVariablesCombosFromBeanForeignKeyTipoFormaPago()throws Exception {	
		try {
			
			this.setActualTipoGrupoFormaPagoForeignKey(this.tipoformapagoConstantesFunciones.getid_tipo_grupo_forma_pago(),false,"Formulario");
			this.setActualTipoTransaccionModuloForeignKey(this.tipoformapagoConstantesFunciones.getid_tipo_transaccion_modulo(),false,"Formulario");
			this.setActualTransaccionForeignKey(this.tipoformapagoConstantesFunciones.getid_transaccion(),false,"Formulario");
			this.setActualCuentaContableForeignKey(this.tipoformapagoConstantesFunciones.getid_cuenta_contable(),false,"Formulario");			
		} catch(Exception e) {
			throw e;
		}
	}
	*/
	
	public void setVariablesGlobalesAuxiliaresCombosForeignKeyTipoFormaPago()throws Exception {	
		try {
			
		
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesDefaultCombosForeignKeyTipoFormaPago()throws Exception {	
		try {
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesParametroCombosForeignKeyTipoFormaPago()throws Exception {	
		try {
			
		} catch(Exception e) {
			throw e;
		}
	}		
	
	public void cargarCombosParametroTipoFormaPago()throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			
			//this.cargarDatosCliente();
			
			
			
		} catch(Exception e) {
			throw e;
		}		
	}
		
	public void cargarCombosFrameForeignKeyTipoFormaPago()throws Exception {
		try {
			

			this.cargarCombosFrameEmpresasForeignKey("Todos");
			this.cargarCombosFrameSucursalsForeignKey("Todos");
			this.cargarCombosFrameModulosForeignKey("Todos");
			this.cargarCombosFrameTipoGrupoFormaPagosForeignKey("Todos");
			this.cargarCombosFrameTipoTransaccionModulosForeignKey("Todos");
			this.cargarCombosFrameTransaccionsForeignKey("Todos");
			this.cargarCombosFrameCuentaContablesForeignKey("Todos");

		} catch(Exception e) {
			throw e;
		}		
	}		
	
	public void cargarCombosFrameForeignKeyTipoFormaPago(String sFormularioTipoBusqueda)throws Exception {
		try {
			

			this.cargarCombosFrameEmpresasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameSucursalsForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameModulosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTipoGrupoFormaPagosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTipoTransaccionModulosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTransaccionsForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameCuentaContablesForeignKey(sFormularioTipoBusqueda);

		} catch(Exception e) {
			throw e;
		}		
	}	
	
	public void setItemDefectoCombosForeignKeyTipoFormaPago()throws Exception {
		try {
			



			if(this.jInternalFrameDetalleFormTipoFormaPago.jComboBoxid_empresaTipoFormaPago!=null && this.jInternalFrameDetalleFormTipoFormaPago.jComboBoxid_empresaTipoFormaPago.getItemCount()>0) {
				this.jInternalFrameDetalleFormTipoFormaPago.jComboBoxid_empresaTipoFormaPago.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormTipoFormaPago.jComboBoxid_sucursalTipoFormaPago!=null && this.jInternalFrameDetalleFormTipoFormaPago.jComboBoxid_sucursalTipoFormaPago.getItemCount()>0) {
				this.jInternalFrameDetalleFormTipoFormaPago.jComboBoxid_sucursalTipoFormaPago.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormTipoFormaPago.jComboBoxid_moduloTipoFormaPago!=null && this.jInternalFrameDetalleFormTipoFormaPago.jComboBoxid_moduloTipoFormaPago.getItemCount()>0) {
				this.jInternalFrameDetalleFormTipoFormaPago.jComboBoxid_moduloTipoFormaPago.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormTipoFormaPago.jComboBoxid_tipo_grupo_forma_pagoTipoFormaPago!=null && this.jInternalFrameDetalleFormTipoFormaPago.jComboBoxid_tipo_grupo_forma_pagoTipoFormaPago.getItemCount()>0) {
				this.jInternalFrameDetalleFormTipoFormaPago.jComboBoxid_tipo_grupo_forma_pagoTipoFormaPago.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormTipoFormaPago.jComboBoxid_tipo_transaccion_moduloTipoFormaPago!=null && this.jInternalFrameDetalleFormTipoFormaPago.jComboBoxid_tipo_transaccion_moduloTipoFormaPago.getItemCount()>0) {
				this.jInternalFrameDetalleFormTipoFormaPago.jComboBoxid_tipo_transaccion_moduloTipoFormaPago.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormTipoFormaPago.jComboBoxid_transaccionTipoFormaPago!=null && this.jInternalFrameDetalleFormTipoFormaPago.jComboBoxid_transaccionTipoFormaPago.getItemCount()>0) {
				this.jInternalFrameDetalleFormTipoFormaPago.jComboBoxid_transaccionTipoFormaPago.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormTipoFormaPago.jComboBoxid_cuenta_contableTipoFormaPago!=null && this.jInternalFrameDetalleFormTipoFormaPago.jComboBoxid_cuenta_contableTipoFormaPago.getItemCount()>0) {
				this.jInternalFrameDetalleFormTipoFormaPago.jComboBoxid_cuenta_contableTipoFormaPago.setSelectedIndex(0);
			}
		} catch(Exception e) {
			throw e;
		}		
	}		
	
	









	public void recargarFormTipoFormaPagoTipoTransaccionModulo(JComboBox<?> jComboBoxGenericoTipoTransaccionModulo,String sFormularioTipoBusqueda) throws Exception {

		this.recargarFormTipoFormaPagoid_transaccion(jComboBoxGenericoTipoTransaccionModulo,sFormularioTipoBusqueda,"TipoTransaccionModulo",false);
	}




	
	



	public void recargarFormTipoFormaPagoid_transaccion(JComboBox<?> jComboBoxGenericoTransaccion,String sFormularioTipoBusqueda,String sTipoComboOrigen,Boolean conIrServidorAplicacion) throws Exception {
		try {

			String sFinalQuery="";

			if(sTipoComboOrigen.equals("TipoTransaccionModulo")){
				this.setActualParaGuardarTipoTransaccionModuloForeignKey(this.tipoformapago,jComboBoxGenericoTransaccion);
			}

			if(this.tipoformapago.getid_tipo_transaccion_modulo()!=null && this.tipoformapago.getid_tipo_transaccion_modulo()!=0L) {
				sFinalQuery+="  WHERE  id_tipo_transaccion_modulo="+this.tipoformapago.getid_tipo_transaccion_modulo();
			} else {
				sFinalQuery+="  WHERE  id_tipo_transaccion_modulo=-1";
			}



			//BUCLE RECURSIVO
			this.setActualTransaccionForeignKey(this.tipoformapago.getid_tipo_transaccion_modulo(),true,sFormularioTipoBusqueda);

			this.cargarCombosTransaccionsForeignKeyLista(sFinalQuery);

			this.cargarCombosFrameTransaccionsForeignKey(sFormularioTipoBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public TipoFormaPagoBeanSwingJInternalFrame() throws Exception {
		super(false,PaginaTipo.PRINCIPAL);
	}
	
	public TipoFormaPagoBeanSwingJInternalFrame(Boolean cargarRelaciones,PaginaTipo paginaTipo) throws Exception {
		super(cargarRelaciones,paginaTipo);
	}
	
	public TipoFormaPagoBeanSwingJInternalFrame(Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,PaginaTipo paginaTipo) throws Exception {
		super(cargarRelaciones,paginaTipo);
		
		this.tipoformapagoSessionBean=new TipoFormaPagoSessionBean(); 
		this.tipoformapagoConstantesFunciones=new TipoFormaPagoConstantesFunciones(); 
		this.tipoformapagoBean=new TipoFormaPago();//(this.tipoformapagoConstantesFunciones); 		
		this.tipoformapagoReturnGeneral=new TipoFormaPagoParameterReturnGeneral(); 
		
		this.tipoformapagoSessionBean.setConGuardarRelaciones(conGuardarRelaciones);
		this.tipoformapagoSessionBean.setEsGuardarRelacionado(esGuardarRelacionado);
				
	}
	
	public TipoFormaPagoBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,Boolean cargarTodosDatos,PaginaTipo paginaTipo) throws Exception {
		this(blncargarCombostrForeignKey,blnCargarInformacionInicial,jdesktopPane,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo,conGuardarRelaciones,esGuardarRelacionado,cargarRelaciones,cargarTodosDatos);
	}
		
	public TipoFormaPagoBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,Boolean cargarRelaciones,Boolean cargarTodosDatos,PaginaTipo paginaTipo) throws Exception {
		this(blncargarCombostrForeignKey,blnCargarInformacionInicial,jdesktopPane,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo,false,false,cargarRelaciones,cargarTodosDatos);
	}	
	
	public TipoFormaPagoBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,PaginaTipo paginaTipo,Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,Boolean cargarTodosDatos) throws Exception //Boolean esParaBusquedaForeignKey
    {
		super(jdesktopPane,conGuardarRelaciones,esGuardarRelacionado,cargarRelaciones,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo);
		
		try {
			
			this.permiteRecargarForm=false;
			
			this.startProcessTipoFormaPago(true);
			
			Boolean esParaBusquedaForeignKey=false;//ANTES USADO COMO PARAMETRO DEL CONSTRUCTOR
			
			if(paginaTipo.equals(PaginaTipo.BUSQUEDA)) {
				esParaBusquedaForeignKey=true;
			}
			
			
			
			//SE ASIGNA EN CLASE PADRE
			/*
			this.parametroGeneralSg=parametroGeneralSg;		
			this.parametroGeneralUsuario=parametroGeneralUsuario;	
			this.usuarioActual=usuarioActual;
			this.moduloActual=moduloActual;
			*/						
			
			long start_time=0;
			long end_time=0;
			
			if(Constantes2.ISDEVELOPING2) {
				start_time = System.currentTimeMillis();
			}
			
			if(!cargarTodosDatos) {
				this.sAccionBusqueda="NINGUNO";
			}
			
			this.tipoformapagoConstantesFunciones=new TipoFormaPagoConstantesFunciones(); 
			this.tipoformapagoBean=new TipoFormaPago();//this.tipoformapagoConstantesFunciones); 			
			this.tipoformapagoReturnGeneral=new TipoFormaPagoParameterReturnGeneral(); 
		
			TipoFormaPagoBeanSwingJInternalFrameAdditional.CargaInicialInicio(this, "NORMAL", null);
			
			this.setTitle(Funciones.GetTituloSistema(this.parametroGeneralSg,this.moduloActual,this.usuarioActual,"Tipo Forma Pago Mantenimiento",paginaTipo));			
			
			this.conTotales=false;
			
			
			
			this.tipoformapago=new TipoFormaPago();
			this.tipoformapagos = new ArrayList<TipoFormaPago>();
			this.tipoformapagosAux = new ArrayList<TipoFormaPago>();
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipoformapagoLogic=new TipoFormaPagoLogic();
				this.tipoformapagoLogic.getNewConnexionToDeep("");
			}
			
			//this.tipoformapagoSessionBean.setConGuardarRelaciones(conGuardarRelaciones);
			//this.tipoformapagoSessionBean.setEsGuardarRelacionado(esGuardarRelacionado);
			
			this.jDesktopPane=jdesktopPane;
			
			if(this.jDesktopPane.getClass().equals(JDesktopPaneMe.class)) {
				this.constantes2=((JDesktopPaneMe)this.jDesktopPane).constantes2;
			}
			
			if(!Constantes.CON_VARIAS_VENTANAS) {
    			MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameDetalleFormTipoFormaPago);
				
				if(!this.conCargarMinimo) {
					
					if(this.jInternalFrameReporteDinamicoTipoFormaPago!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameReporteDinamicoTipoFormaPago);	
					}
					
					if(this.jInternalFrameImportacionTipoFormaPago!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameImportacionTipoFormaPago);							
					}
					
				}
				
				
				if(!this.conCargarMinimo) {
					
					if(this.jInternalFrameOrderByTipoFormaPago!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameOrderByTipoFormaPago);					
					}
					
				}
			}
			
			//DETALLE DATOS
			if(this.jInternalFrameDetalleFormTipoFormaPago!=null) { //this.conCargarFormDetalle) {
				this.jDesktopPane.add(this.jInternalFrameDetalleFormTipoFormaPago);
				this.jInternalFrameDetalleFormTipoFormaPago.setVisible(false);
				this.jInternalFrameDetalleFormTipoFormaPago.setSelected(false);						
			}
			
			if(!this.conCargarMinimo) {
				
				//REPORTE DINAMICO
				if(this.jInternalFrameReporteDinamicoTipoFormaPago!=null) {
					this.jDesktopPane.add(this.jInternalFrameReporteDinamicoTipoFormaPago);
					this.jInternalFrameReporteDinamicoTipoFormaPago.setVisible(false);
					this.jInternalFrameReporteDinamicoTipoFormaPago.setSelected(false);
				}
				
				//IMPORTACION
				if(this.jInternalFrameImportacionTipoFormaPago!=null) {
					this.jDesktopPane.add(this.jInternalFrameImportacionTipoFormaPago);
					this.jInternalFrameImportacionTipoFormaPago.setVisible(false);
					this.jInternalFrameImportacionTipoFormaPago.setSelected(false);
				}
				
				
			}
			
			
			if(!this.conCargarMinimo) {
				
				if(this.jInternalFrameOrderByTipoFormaPago!=null) {
					this.jDesktopPane.add(this.jInternalFrameOrderByTipoFormaPago);
					this.jInternalFrameOrderByTipoFormaPago.setVisible(false);
					this.jInternalFrameOrderByTipoFormaPago.setSelected(false);				
				}
				
			}
			
			
			//this.esParaBusquedaForeignKey=false;
			this.esParaBusquedaForeignKey=esParaBusquedaForeignKey;
			
			this.invalidValues=new InvalidValue[0];
			
			
			
			this.idTipoFormaPagoActual=0L;
			this.rowIndexActual=0;
			
			
			this.iNumeroPaginacionPagina=0;
			this.iNumeroPaginacion=TipoFormaPagoConstantesFunciones.INUMEROPAGINACION;
			this.pagination=new Pagination();
			this.datosCliente=new DatosCliente();
			this.lIdUsuarioSesion=0L;	
			this.sTipoArchivoReporte="";
			this.sTipoArchivoReporteDinamico="";
			this.sTipoReporte="";
			this.sTipoReporteDinamico="";
			this.sTipoPaginacion="";
			this.sTipoRelacion="";
			this.sTipoAccion="";
			this.sTipoAccionFormulario="";
			this.sTipoSeleccionar="";			
			this.sDetalleReporte="";
			this.sTipoReporteExtra="";
			this.sValorCampoGeneral="";
			this.sPathReporteDinamico="";			
			
			this.isMostrarNumeroPaginacion=false;
			this.isSeleccionarTodos=false;
			this.isSeleccionados=false;
			this.conGraficoReporte=false;
			this.isPostAccionNuevo=false;
			this.isPostAccionSinCerrar=false;
			this.isPostAccionSinMensaje=false;
			this.esReporteDinamico=false;
			this.esRecargarFks=false;
			this.esReporteAccionProceso=false;
			
			this.tipoformapagoReturnGeneral=new TipoFormaPagoParameterReturnGeneral();
			
			this.tipoformapagoParameterGeneral=new TipoFormaPagoParameterReturnGeneral();
			
			
			
			this.sistemaLogicAdditional=new SistemaLogicAdditional();
			
			this.sistemaLogicAdditional.setConnexion(this.tipoformapagoLogic.getConnexion());			
			
			
			
			
			
			
			
			//VERIFICAR GLOBAL
			this.cargarDatosCliente();			
			
			
			if(!this.tipoformapagoSessionBean.getEsGuardarRelacionado()) {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					if(!sistemaLogicAdditional.validarLicenciaCliente(this.datosCliente,this.moduloActual,this.usuarioActual)) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_CONTROLGLOBAL);
					}
					
				} else if(Constantes.ISUSAEJBREMOTE) {
					
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}			
			
			//VERIFICAR GLOBAL
			
			//VERIFICAR SESSION ACTUAL
			//this.cargarDatosCliente();
			
			this.sistemaReturnGeneral=new SistemaParameterReturnGeneral();
			
			SistemaParameterReturnGeneralAdditional.inicializarSinSeguridad(this.sistemaReturnGeneral);
			
			if(TipoFormaPagoJInternalFrame.CON_LLAMADA_SIMPLE) {
				if(this.tipoformapagoSessionBean.getEsGuardarRelacionado()) {
					this.opcionActual.setId(0L);
					
					//idOpcion=0L;					
				}
				
				ArrayList<String> arrPaginas=new ArrayList<String>();		
				ArrayList<Opcion> opcionsFinal=new ArrayList<Opcion>();	
				
				arrPaginas.add(RegistroFormaPagoBancoConstantesFunciones.SNOMBREOPCION);
				arrPaginas.add(DetaFormaPagoFactuConstantesFunciones.SNOMBREOPCION);
				arrPaginas.add(GrupoClienteFormaPagoConstantesFunciones.SNOMBREOPCION);
				arrPaginas.add(DetaFormaPagoConstantesFunciones.SNOMBREOPCION);
				arrPaginas.add(FormaPagoPuntoVentaConstantesFunciones.SNOMBREOPCION);
				arrPaginas.add(FormaPagoConstantesFunciones.SNOMBREOPCION);
				arrPaginas.add(FormaPagoInvenConstantesFunciones.SNOMBREOPCION);
				arrPaginas.add(CierreCajaConstantesFunciones.SNOMBREOPCION);
		
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					//this.sistemaReturnGeneral=sistemaLogicAdditional.validarCargarSesionUsuarioActualWithConnection(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual,Constantes.LIDSISTEMAACTUAL,TipoFormaPagoConstantesFunciones.SNOMBREOPCION,this.opcionActual,this.tipoformapagoSessionBean.getEsGuardarRelacionado(),this.tipoformapagoSessionBean.getConGuardarRelaciones(),arrPaginas);
					
					this.sistemaReturnGeneral=sistemaLogicAdditional.validarCargarSesionUsuarioActual(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual,Constantes.LIDSISTEMAACTUAL,TipoFormaPagoConstantesFunciones.SNOMBREOPCION,this.opcionActual,this.tipoformapagoSessionBean.getEsGuardarRelacionado(),this.tipoformapagoSessionBean.getConGuardarRelaciones(),arrPaginas);
					
					if(!this.sistemaReturnGeneral.getEsValidado()) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_SESIONACTUAL);
					}
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
					//FALTA
				}
			} else { 
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					if(!sistemaLogicAdditional.validarSesionUsuarioActual(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual)) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_SESIONACTUAL);
					}
				
				} else if(Constantes.ISUSAEJBREMOTE) {
					
				} else if(Constantes.ISUSAEJBHOME) {
				}
			} 
			//VERIFICAR SESSION ACTUAL
			
			
			this.sVisibilidadTablaBusquedas="table-row";
			this.sVisibilidadTablaElementos="none";
			this.sVisibilidadTablaAcciones="none";
			
			this.isVisibilidadCeldaNuevoTipoFormaPago=false;
			this.isVisibilidadCeldaDuplicarTipoFormaPago=true;
			this.isVisibilidadCeldaCopiarTipoFormaPago=true;
			this.isVisibilidadCeldaVerFormTipoFormaPago=true;
			this.isVisibilidadCeldaOrdenTipoFormaPago=true;
			this.isVisibilidadCeldaNuevoRelacionesTipoFormaPago=false;
			this.isVisibilidadCeldaModificarTipoFormaPago=false;
			this.isVisibilidadCeldaActualizarTipoFormaPago=false;
			this.isVisibilidadCeldaEliminarTipoFormaPago=false;
			this.isVisibilidadCeldaCancelarTipoFormaPago=false;
			this.isVisibilidadCeldaGuardarTipoFormaPago=false;
			this.isVisibilidadCeldaGuardarCambiosTipoFormaPago=false;
			
			
			this.isVisibilidadBusquedaPorNombre=true;
			this.isVisibilidadBusquedaPorSiglas=true;
			this.isVisibilidadFK_IdEmpresa=true;
			this.isVisibilidadFK_IdModulo=true;
			this.isVisibilidadFK_IdSucursal=true;
			this.isVisibilidadFK_IdTipoFormaPago=true;
			this.isVisibilidadFK_IdTipoGrupoFormaPago=true;
			this.isVisibilidadFK_IdTipoTransaccionModulo=true;
			this.isVisibilidadFK_IdTransaccion=true;
			
			//ELEMENTOS TABLAS PARAMETOS
			
			
			
			//ELEMENTOS TABLAS PARAMETOS_FIN
			
			//this.actualizarEstadoCeldasBotonesTipoFormaPago("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
						
			
			
			this.inicializarPermisosTipoFormaPago();
			
			//INICIALIZAR FALSE, TALVEZ COMENTAR
			this.setPermisosUsuarioTipoFormaPago(false);
			
			this.setPermisosUsuarioTipoFormaPago();
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.tipoformapagoSessionBean.getEsGuardarRelacionado() 
				|| (this.tipoformapagoSessionBean.getEsGuardarRelacionado() && this.tipoformapagoSessionBean.getConGuardarRelaciones())) {
				
				this.inicializarSetPermisosUsuarioTipoFormaPagoClasesRelacionadas();
			}
			
			if(this.tipoformapagoSessionBean.getConGuardarRelaciones()) {
				this.actualizarTabsSetPermisosUsuarioTipoFormaPagoClasesRelacionadas();
			}
			
			
			
			//SOLO SE EJECUTA LA PRIMERA VEZ, BINDINGS SI FUNCIONA
			if(!TipoFormaPagoJInternalFrame.ISBINDING_MANUAL) {
				this.inicializarActualizarBindingBotonesPermisosTipoFormaPago();
			} else {
				this.inicializarActualizarBindingBotonesPermisosManualTipoFormaPago();
			}
			
			if(!this.isPermisoBusquedaTipoFormaPago) {
				//BYDAN_BUSQUEDAS
				
				this.jTabbedPaneBusquedasTipoFormaPago.setVisible(false);				
				
			}
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.tipoformapagoSessionBean.getEsGuardarRelacionado()) {				
				this.tiposArchivosReportes=Funciones.getListTiposArchivosReportes();
				this.tiposArchivosReportesDinamico=Funciones.getListTiposArchivosReportes();
				this.tiposReportes=Funciones.getListTiposReportes(false);
				this.tiposReportesDinamico=Funciones.getListTiposReportesDinamico(false);
				
				
				this.tiposReportes.add(new Reporte("RELACIONES","RELACIONES"));
				this.tiposReportesDinamico.add(new Reporte("RELACIONES","RELACIONES"));
				
				this.tiposGraficosReportes=Funciones2.getListTiposGraficosReportes();
				this.tiposPaginacion=Funciones2.getListTiposPaginacion(this.isPermisoPaginacionMedioTipoFormaPago,this.isPermisoPaginacionMedioTipoFormaPago,this.isPermisoPaginacionTodoTipoFormaPago);
				this.tiposSeleccionar=Funciones2.getListTiposSeleccionar();
				this.tiposSeleccionar.addAll(TipoFormaPagoConstantesFunciones.getTiposSeleccionarTipoFormaPago());
				
				this.tiposColumnasSelect=TipoFormaPagoConstantesFunciones.getTiposSeleccionarTipoFormaPago(true);
				
				this.tiposRelacionesSelect=new ArrayList<Reporte>();								
				
				this.cargarTiposRelacionesSelectTipoFormaPago();				
				//this.tiposRelacionesSelect=TipoFormaPagoConstantesFunciones.getTiposRelacionesTipoFormaPago(true);
				
			} else {
				this.tiposArchivosReportes=new ArrayList<Reporte>();
				this.tiposArchivosReportesDinamico=new ArrayList<Reporte>();
				this.tiposReportes=new ArrayList<Reporte>();
				this.tiposReportesDinamico=new ArrayList<Reporte>();
				this.tiposGraficosReportes=new ArrayList<Reporte>();
				this.tiposPaginacion=new ArrayList<Reporte>();
				this.tiposSeleccionar=new ArrayList<Reporte>();			
				this.tiposColumnasSelect=new ArrayList<Reporte>();	
				this.tiposRelacionesSelect=new ArrayList<Reporte>();	
			}
						
			
			//FUNCIONALIDAD_RELACIONADO
			//if(!this.tipoformapagoSessionBean.getEsGuardarRelacionado()) {
				//SE ENCUENTRA MAS ADELANTE CON ACCIONES POR USUARIO
				//ACCIONES GENERALES Y POR USUARIO
				this.tiposRelaciones=Funciones2.getListTiposRelaciones();
				this.setRelacionesUsuarioTipoFormaPago();
				
				this.tiposAcciones=Funciones2.getListTiposAcciones(false,false,true);
				this.setAccionesUsuarioTipoFormaPago(false);	
				
				this.tiposAccionesFormulario=Funciones2.getListTiposAccionesFormulario(false,false,true);							
				this.setAccionesUsuarioTipoFormaPago(true);	
				
				this.inicializarActualizarBindingtiposArchivosReportesAccionesTipoFormaPago() ;
			
			/*
			} else {
				this.tiposAcciones=new ArrayList<Reporte>();
				this.tiposAccionesFormulario=new ArrayList<Reporte>();
			}
			*/						
			
			this.inicializarInvalidValues();
						
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			
			
			this.arrOrderBy= new  ArrayList<OrderBy>();
			
			
			this.arrDatoGeneralMinimos= new  ArrayList<DatoGeneralMinimo>();
			
			
			this.traerValoresTablaOrderBy();			
			
			
			this.isGuardarCambiosEnLote=false;
			this.isCargarCombosDependencia=false;
			
			
			this.registroformapagobancoLogic=new RegistroFormaPagoBancoLogic();
			this.detaformapagofactuLogic=new DetaFormaPagoFactuLogic();
			this.grupoclienteformapagoLogic=new GrupoClienteFormaPagoLogic();
			this.detaformapagoLogic=new DetaFormaPagoLogic();
			this.formapagopuntoventaLogic=new FormaPagoPuntoVentaLogic();
			this.formapagoLogic=new FormaPagoLogic();
			this.formapagoinvenLogic=new FormaPagoInvenLogic();
			this.cierrecajaLogic=new CierreCajaLogic(); 
			jasperPrint = null;												
			
			//FK
			
			this.empresaLogic=new EmpresaLogic();
			this.sucursalLogic=new SucursalLogic();
			this.moduloLogic=new ModuloLogic();
			this.tipogrupoformapagoLogic=new TipoGrupoFormaPagoLogic();
			this.tipotransaccionmoduloLogic=new TipoTransaccionModuloLogic();
			this.transaccionLogic=new TransaccionLogic();
			this.cuentacontableLogic=new CuentaContableLogic();
			
			//PARAMETROS
			
			
			/*
			if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {		
				hashtableEnv =  Funciones.getHashtableEnv();		
				initialContext = new InitialContext(hashtableEnv);	
			}
			*/
			/*
			if(Constantes.ISUSAEJBREMOTE) {
				tipoformapagoImplementable= (TipoFormaPagoImplementable) initialContext.lookup(Constantes.SEJBPACKAGE+Constantes.SEJBSEPARATOR+TipoFormaPagoConstantesFunciones.SEJBNAME+Constantes.SEJBSEPARATOR+Constantes.SEJBREMOTE);
			} else if(Constantes.ISUSAEJBHOME) {
				tipoformapagoImplementableHome= (TipoFormaPagoImplementableHome) initialContext.lookup(Constantes.SEJBPACKAGE+Constantes.SEJBSEPARATOR+TipoFormaPagoConstantesFunciones.SEJBNAME+Constantes.SEJBSEPARATOR+Constantes.SEJBLOCAL);
			}			
			*/
			
			
			this.tipoformapagos= new ArrayList<TipoFormaPago>();
			this.tipoformapagosEliminados= new ArrayList<TipoFormaPago>();
						
			this.isEsNuevoTipoFormaPago=false;
			this.esParaAccionDesdeFormularioTipoFormaPago=false;
			this.isEsMantenimientoRelacionesRelacionadoUnico=false;
			this.isEsMantenimientoRelaciones=false;
			this.isEsMantenimientoRelacionado=false;
			this.isContieneImagenes=false;
			
			
			
			
			//BUSQUEDA INTERNA FK
			this.idCuentaContableActual=0L;
			
			//INICIALIZAR LISTAS FK
			
			this.empresasForeignKey=new ArrayList<Empresa>() ;
			this.sucursalsForeignKey=new ArrayList<Sucursal>() ;
			this.modulosForeignKey=new ArrayList<Modulo>() ;
			this.tipogrupoformapagosForeignKey=new ArrayList<TipoGrupoFormaPago>() ;
			this.tipotransaccionmodulosForeignKey=new ArrayList<TipoTransaccionModulo>() ;
			this.transaccionsForeignKey=new ArrayList<Transaccion>() ;
			this.cuentacontablesForeignKey=new ArrayList<CuentaContable>() ;
			
			
			
			
			if(blncargarCombostrForeignKey) {
				this.cargarCombosForeignKeyTipoFormaPago(this.isCargarCombosDependencia);
			}
			
			this.cargarCombosParametroTipoFormaPago();
			
			
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.tipoformapagoSessionBean.getEsGuardarRelacionado()) {
				this.onLoad();
			}
						
			TipoFormaPagoBeanSwingJInternalFrameAdditional.RecargarVentanaSegunOpcion(this,opcionActual);
			
			/*
			if(blnCargarInformacionInicial) {
				this.recargarInformacion();
			}
			*/
			//this.iNumeroPaginacionPagina=0;
			//this.iNumeroPaginacion=TipoFormaPagoConstantesFunciones.INUMEROPAGINACION;
			
			this.actualizarEstadoCeldasBotonesTipoFormaPago("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			//SOLO LA PRIMERA VEZ HACE LOS BINDINGS, SOLO AHI FUNCIONA
			this.inicializarActualizarBindingTipoFormaPago(true); 
			
			//SE REDIMENSIONA SINO NO SE ACTUALIZA
			this.redimensionarTablaDatos();
			
			
			this.initActions();
			
			;
						
			if(this.jInternalFrameDetalleFormTipoFormaPago!=null) {//if(this.conCargarFormDetalle) {
				this.cargarMenuRelaciones();
			}
			
			//OBLIGA CARGAR DETALLE, MEJOR DESHABILITAR, FALTA TALVEZ PONER EN SELECCIONAR
			//MAYBE
			//this.updateControlesFormularioTipoFormaPago();
			
			if(!this.conCargarMinimo) {
				this.updateBusquedasFormularioTipoFormaPago();
			}
			
			TipoFormaPagoBeanSwingJInternalFrameAdditional.CargaInicial(this, "NORMAL", null);
			
			
			//SE REALIZA ESTO PARA QUE SE PUEDA RECORRER TAB SIN IMPORTAR ORDEN
			Boolean existeTabBusqueda=false;
			
			if(!this.conCargarMinimo) {
				//BYDAN_BUSQUEDAS
				
				
				for(int i=0; i<this.jTabbedPaneBusquedasTipoFormaPago.getTabCount(); i++) {
					this.jTabbedPaneBusquedasTipoFormaPago.setSelectedIndex(i);
						
					if(!existeTabBusqueda) {
						existeTabBusqueda=true;
					}
				}
					
				if(existeTabBusqueda) {
					this.jTabbedPaneBusquedasTipoFormaPago.setSelectedIndex(0);
				}	
				
				
			}
			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipoformapagoLogic.commitNewConnexionToDeep();
			}
			
			
			if(Constantes2.ISDEVELOPING2) {
				end_time = System.currentTimeMillis();			
				String sTipo="Load Ventana";
				Funciones2.getMensajeTiempoEjecucion(start_time, end_time, sTipo,false);
			}  
			
			this.finishProcessTipoFormaPago(true);
			
			this.dEnd=(double)System.currentTimeMillis();
			
			this.dDif=this.dEnd - this.dStart;
			
			if(Constantes.ISDEVELOPING) {
				System.out.println("Tiempo(ms) Carga TipoFormaPago: " + this.dDif); 
			}
			
			this.permiteRecargarForm=true;
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipoformapagoLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,TipoFormaPagoConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipoformapagoLogic.closeNewConnexionToDeep();
			}
		}	 
    }
	
	public void cargarTiposRelacionesSelectTipoFormaPago() {
		Reporte reporte=new Reporte();
		
	

		reporte=new Reporte();
		reporte.setsCodigo(RegistroFormaPagoBancoConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(RegistroFormaPagoBancoConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);

		reporte=new Reporte();
		reporte.setsCodigo(DetaFormaPagoFactuConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(DetaFormaPagoFactuConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);

		reporte=new Reporte();
		reporte.setsCodigo(GrupoClienteFormaPagoConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(GrupoClienteFormaPagoConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);

		reporte=new Reporte();
		reporte.setsCodigo(DetaFormaPagoConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(DetaFormaPagoConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);

		reporte=new Reporte();
		reporte.setsCodigo(FormaPagoPuntoVentaConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(FormaPagoPuntoVentaConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);

		reporte=new Reporte();
		reporte.setsCodigo(FormaPagoConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(FormaPagoConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);

		reporte=new Reporte();
		reporte.setsCodigo(FormaPagoInvenConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(FormaPagoInvenConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);

		reporte=new Reporte();
		reporte.setsCodigo(CierreCajaConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(CierreCajaConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);
	}
	
	
	
	public void jTabbedPaneChangeListenerGeneral(String sTipo,ChangeEvent evt) { 	  
		Boolean procesaCargarParteTab=false;
			
		try {
			int iIndex=0;		    			
			String sTitle="";
			
			//TABBED PANE RELACIONES
			if(sTipo.equals("RelacionesTipoFormaPago")) {
				iIndex=this.jInternalFrameDetalleFormTipoFormaPago.jTabbedPaneRelacionesTipoFormaPago.getSelectedIndex();		    
			
				sTitle=this.jInternalFrameDetalleFormTipoFormaPago.jTabbedPaneRelacionesTipoFormaPago.getTitleAt(iIndex);
				
				Integer intSelectedRow = 0;	
			
				intSelectedRow = this.jTableDatosTipoFormaPago.getSelectedRow();	
				
				

				if(sTitle.equals("Cierre Cajas")) {
					if(!CierreCajaJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessTipoFormaPago();

						this.cargarParteTabPanelRelacionadaCierreCaja(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Deta Forma Pagos")) {
					if(!DetaFormaPagoJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessTipoFormaPago();

						this.cargarParteTabPanelRelacionadaDetaFormaPago(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Deta Forma Pago Factus")) {
					if(!DetaFormaPagoFactuJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessTipoFormaPago();

						this.cargarParteTabPanelRelacionadaDetaFormaPagoFactu(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Forma Pagos")) {
					if(!FormaPagoJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessTipoFormaPago();

						this.cargarParteTabPanelRelacionadaFormaPago(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Forma Pagoes")) {
					if(!FormaPagoInvenJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessTipoFormaPago();

						this.cargarParteTabPanelRelacionadaFormaPagoInven(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Forma Pagoes")) {
					if(!FormaPagoPuntoVentaJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessTipoFormaPago();

						this.cargarParteTabPanelRelacionadaFormaPagoPuntoVenta(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Grupo Cliente Forma Pagos")) {
					if(!GrupoClienteFormaPagoJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessTipoFormaPago();

						this.cargarParteTabPanelRelacionadaGrupoClienteFormaPago(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Registro Forma Pago Bancos")) {
					if(!RegistroFormaPagoBancoJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessTipoFormaPago();

						this.cargarParteTabPanelRelacionadaRegistroFormaPagoBanco(iIndex,intSelectedRow);
					}
					
				}
				
			}
			
			//TABBED PANE RELACIONES FIN(EXTRA TAB)
			;
			
  		} catch(Exception e) {
  			e.printStackTrace();
  		} finally {
			if(procesaCargarParteTab) {				
				this.finishProcessTipoFormaPago();	
			}
		}
    }
	
	

	public void cargarParteTabPanelRelacionadaCierreCaja(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormTipoFormaPago.cargarSessionConBeanSwingJInternalFrameCierreCaja(false,true,iIndex);
		this.jButtonCierreCajaActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaCierreCaja();

		//this.jTabbedPaneRelacionesTipoFormaPago.updateUI();
		//this.jTabbedPaneRelacionesTipoFormaPago.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesTipoFormaPago.setSelectedIndex(iIndex);


	}

	public void cargarParteTabPanelRelacionadaDetaFormaPago(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormTipoFormaPago.cargarSessionConBeanSwingJInternalFrameDetaFormaPago(false,true,iIndex);
		this.jButtonDetaFormaPagoActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaDetaFormaPago();

		//this.jTabbedPaneRelacionesTipoFormaPago.updateUI();
		//this.jTabbedPaneRelacionesTipoFormaPago.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesTipoFormaPago.setSelectedIndex(iIndex);


	}

	public void cargarParteTabPanelRelacionadaDetaFormaPagoFactu(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormTipoFormaPago.cargarSessionConBeanSwingJInternalFrameDetaFormaPagoFactu(false,true,iIndex);
		this.jButtonDetaFormaPagoFactuActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaDetaFormaPagoFactu();

		//this.jTabbedPaneRelacionesTipoFormaPago.updateUI();
		//this.jTabbedPaneRelacionesTipoFormaPago.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesTipoFormaPago.setSelectedIndex(iIndex);


	}

	public void cargarParteTabPanelRelacionadaFormaPago(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormTipoFormaPago.cargarSessionConBeanSwingJInternalFrameFormaPago(false,true,iIndex);
		this.jButtonFormaPagoActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaFormaPago();

		//this.jTabbedPaneRelacionesTipoFormaPago.updateUI();
		//this.jTabbedPaneRelacionesTipoFormaPago.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesTipoFormaPago.setSelectedIndex(iIndex);


	}

	public void cargarParteTabPanelRelacionadaFormaPagoInven(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormTipoFormaPago.cargarSessionConBeanSwingJInternalFrameFormaPagoInven(false,true,iIndex);
		this.jButtonFormaPagoInvenActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaFormaPagoInven();

		//this.jTabbedPaneRelacionesTipoFormaPago.updateUI();
		//this.jTabbedPaneRelacionesTipoFormaPago.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesTipoFormaPago.setSelectedIndex(iIndex);


	}

	public void cargarParteTabPanelRelacionadaFormaPagoPuntoVenta(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormTipoFormaPago.cargarSessionConBeanSwingJInternalFrameFormaPagoPuntoVenta(false,true,iIndex);
		this.jButtonFormaPagoPuntoVentaActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaFormaPagoPuntoVenta();

		//this.jTabbedPaneRelacionesTipoFormaPago.updateUI();
		//this.jTabbedPaneRelacionesTipoFormaPago.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesTipoFormaPago.setSelectedIndex(iIndex);


	}

	public void cargarParteTabPanelRelacionadaGrupoClienteFormaPago(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormTipoFormaPago.cargarSessionConBeanSwingJInternalFrameGrupoClienteFormaPago(false,true,iIndex);
		this.jButtonGrupoClienteFormaPagoActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaGrupoClienteFormaPago();

		//this.jTabbedPaneRelacionesTipoFormaPago.updateUI();
		//this.jTabbedPaneRelacionesTipoFormaPago.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesTipoFormaPago.setSelectedIndex(iIndex);


	}

	public void cargarParteTabPanelRelacionadaRegistroFormaPagoBanco(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormTipoFormaPago.cargarSessionConBeanSwingJInternalFrameRegistroFormaPagoBanco(false,true,iIndex);
		this.jButtonRegistroFormaPagoBancoActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaRegistroFormaPagoBanco();

		//this.jTabbedPaneRelacionesTipoFormaPago.updateUI();
		//this.jTabbedPaneRelacionesTipoFormaPago.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesTipoFormaPago.setSelectedIndex(iIndex);


	}
	
	public void jButtonRelacionActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
				 if(sTipo.equals("RegistroFormaPagoBanco")) {
				int row=this.jTableDatosTipoFormaPago.getSelectedRow();
				jButtonRegistroFormaPagoBancoActionPerformed(evt,row,true,false,null);
				}
				 else  if(sTipo.equals("DetaFormaPagoFactu")) {
				int row=this.jTableDatosTipoFormaPago.getSelectedRow();
				jButtonDetaFormaPagoFactuActionPerformed(evt,row,true,false,null);
				}
				 else  if(sTipo.equals("GrupoClienteFormaPago")) {
				int row=this.jTableDatosTipoFormaPago.getSelectedRow();
				jButtonGrupoClienteFormaPagoActionPerformed(evt,row,true,false,null);
				}
				 else  if(sTipo.equals("DetaFormaPago")) {
				int row=this.jTableDatosTipoFormaPago.getSelectedRow();
				jButtonDetaFormaPagoActionPerformed(evt,row,true,false,null);
				}
				 else  if(sTipo.equals("FormaPagoPuntoVenta")) {
				int row=this.jTableDatosTipoFormaPago.getSelectedRow();
				jButtonFormaPagoPuntoVentaActionPerformed(evt,row,true,false,null);
				}
				 else  if(sTipo.equals("FormaPago")) {
				int row=this.jTableDatosTipoFormaPago.getSelectedRow();
				jButtonFormaPagoActionPerformed(evt,row,true,false,null);
				}
				 else  if(sTipo.equals("FormaPagoInven")) {
				int row=this.jTableDatosTipoFormaPago.getSelectedRow();
				jButtonFormaPagoInvenActionPerformed(evt,row,true,false,null);
				}
				 else  if(sTipo.equals("CierreCaja")) {
				int row=this.jTableDatosTipoFormaPago.getSelectedRow();
				jButtonCierreCajaActionPerformed(evt,row,true,false,null);
				}
  		} catch(Exception e) {
  			e.printStackTrace();
  		}
    }
	
	public void cargarMenuRelaciones() {	
		JMenuItem jmenuItem= new JMenuItem("General");
		String sLabelMenu="";
		
		if(!this.tipoformapagoSessionBean.getEsGuardarRelacionado()) {
			for(Reporte reporte:this.tiposRelaciones) {
			

				if(reporte.getsCodigo().equals("Registro Forma Pago Banco")) {

					if(this.isTienePermisosRegistroFormaPagoBanco && this.tipoformapagoConstantesFunciones.mostrarRegistroFormaPagoBancoTipoFormaPago && !TipoFormaPagoConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Registro Forma Pago Bancos"+"("+RegistroFormaPagoBancoConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Registro Forma Pago Bancos");

						if(tipoformapagoConstantesFunciones.resaltarRegistroFormaPagoBancoTipoFormaPago!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(tipoformapagoConstantesFunciones.resaltarRegistroFormaPagoBancoTipoFormaPago);
						}

						jmenuItem.setEnabled(this.tipoformapagoConstantesFunciones.activarRegistroFormaPagoBancoTipoFormaPago);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"RegistroFormaPagoBanco"));

						

						this.jInternalFrameDetalleFormTipoFormaPago.jmenuDetalleTipoFormaPago.add(jmenuItem);

						
					}

					continue;
				}

				if(reporte.getsCodigo().equals("Deta Forma Pago Factu")) {

					if(this.isTienePermisosDetaFormaPagoFactu && this.tipoformapagoConstantesFunciones.mostrarDetaFormaPagoFactuTipoFormaPago && !TipoFormaPagoConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Deta Forma Pago Factus"+"("+DetaFormaPagoFactuConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Deta Forma Pago Factus");

						if(tipoformapagoConstantesFunciones.resaltarDetaFormaPagoFactuTipoFormaPago!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(tipoformapagoConstantesFunciones.resaltarDetaFormaPagoFactuTipoFormaPago);
						}

						jmenuItem.setEnabled(this.tipoformapagoConstantesFunciones.activarDetaFormaPagoFactuTipoFormaPago);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"DetaFormaPagoFactu"));

						

						this.jInternalFrameDetalleFormTipoFormaPago.jmenuDetalleTipoFormaPago.add(jmenuItem);

						
					}

					continue;
				}

				if(reporte.getsCodigo().equals("Grupo Cliente Forma Pago")) {

					if(this.isTienePermisosGrupoClienteFormaPago && this.tipoformapagoConstantesFunciones.mostrarGrupoClienteFormaPagoTipoFormaPago && !TipoFormaPagoConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Grupo Cliente Forma Pagos"+"("+GrupoClienteFormaPagoConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Grupo Cliente Forma Pagos");

						if(tipoformapagoConstantesFunciones.resaltarGrupoClienteFormaPagoTipoFormaPago!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(tipoformapagoConstantesFunciones.resaltarGrupoClienteFormaPagoTipoFormaPago);
						}

						jmenuItem.setEnabled(this.tipoformapagoConstantesFunciones.activarGrupoClienteFormaPagoTipoFormaPago);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"GrupoClienteFormaPago"));

						

						this.jInternalFrameDetalleFormTipoFormaPago.jmenuDetalleTipoFormaPago.add(jmenuItem);

						
					}

					continue;
				}

				if(reporte.getsCodigo().equals("Deta Forma Pago")) {

					if(this.isTienePermisosDetaFormaPago && this.tipoformapagoConstantesFunciones.mostrarDetaFormaPagoTipoFormaPago && !TipoFormaPagoConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Deta Forma Pagos"+"("+DetaFormaPagoConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Deta Forma Pagos");

						if(tipoformapagoConstantesFunciones.resaltarDetaFormaPagoTipoFormaPago!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(tipoformapagoConstantesFunciones.resaltarDetaFormaPagoTipoFormaPago);
						}

						jmenuItem.setEnabled(this.tipoformapagoConstantesFunciones.activarDetaFormaPagoTipoFormaPago);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"DetaFormaPago"));

						

						this.jInternalFrameDetalleFormTipoFormaPago.jmenuDetalleTipoFormaPago.add(jmenuItem);

						
					}

					continue;
				}

				if(reporte.getsCodigo().equals("Forma Pago")) {

					if(this.isTienePermisosFormaPagoPuntoVenta && this.tipoformapagoConstantesFunciones.mostrarFormaPagoPuntoVentaTipoFormaPago && !TipoFormaPagoConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Forma Pagoes"+"("+FormaPagoPuntoVentaConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Forma Pagoes");

						if(tipoformapagoConstantesFunciones.resaltarFormaPagoPuntoVentaTipoFormaPago!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(tipoformapagoConstantesFunciones.resaltarFormaPagoPuntoVentaTipoFormaPago);
						}

						jmenuItem.setEnabled(this.tipoformapagoConstantesFunciones.activarFormaPagoPuntoVentaTipoFormaPago);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"FormaPagoPuntoVenta"));

						

						this.jInternalFrameDetalleFormTipoFormaPago.jmenuDetalleTipoFormaPago.add(jmenuItem);

						
					}

					continue;
				}

				if(reporte.getsCodigo().equals("Forma Pago")) {

					if(this.isTienePermisosFormaPago && this.tipoformapagoConstantesFunciones.mostrarFormaPagoTipoFormaPago && !TipoFormaPagoConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Forma Pagos"+"("+FormaPagoConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Forma Pagos");

						if(tipoformapagoConstantesFunciones.resaltarFormaPagoTipoFormaPago!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(tipoformapagoConstantesFunciones.resaltarFormaPagoTipoFormaPago);
						}

						jmenuItem.setEnabled(this.tipoformapagoConstantesFunciones.activarFormaPagoTipoFormaPago);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"FormaPago"));

						

						this.jInternalFrameDetalleFormTipoFormaPago.jmenuDetalleTipoFormaPago.add(jmenuItem);

						
					}

					continue;
				}

				if(reporte.getsCodigo().equals("Forma Pago")) {

					if(this.isTienePermisosFormaPagoInven && this.tipoformapagoConstantesFunciones.mostrarFormaPagoInvenTipoFormaPago && !TipoFormaPagoConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Forma Pagoes"+"("+FormaPagoInvenConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Forma Pagoes");

						if(tipoformapagoConstantesFunciones.resaltarFormaPagoInvenTipoFormaPago!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(tipoformapagoConstantesFunciones.resaltarFormaPagoInvenTipoFormaPago);
						}

						jmenuItem.setEnabled(this.tipoformapagoConstantesFunciones.activarFormaPagoInvenTipoFormaPago);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"FormaPagoInven"));

						

						this.jInternalFrameDetalleFormTipoFormaPago.jmenuDetalleTipoFormaPago.add(jmenuItem);

						
					}

					continue;
				}

				if(reporte.getsCodigo().equals("Cierre Caja")) {

					if(this.isTienePermisosCierreCaja && this.tipoformapagoConstantesFunciones.mostrarCierreCajaTipoFormaPago && !TipoFormaPagoConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Cierre Cajas"+"("+CierreCajaConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Cierre Cajas");

						if(tipoformapagoConstantesFunciones.resaltarCierreCajaTipoFormaPago!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(tipoformapagoConstantesFunciones.resaltarCierreCajaTipoFormaPago);
						}

						jmenuItem.setEnabled(this.tipoformapagoConstantesFunciones.activarCierreCajaTipoFormaPago);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"CierreCaja"));

						

						this.jInternalFrameDetalleFormTipoFormaPago.jmenuDetalleTipoFormaPago.add(jmenuItem);

						
					}

					continue;
				}
			}
		}
	}		
	
	public void cargarCombosForeignKeyTipoFormaPago(Boolean cargarCombosDependencia) throws Exception {   
		this.cargarCombosForeignKeyTipoFormaPago(cargarCombosDependencia,true,true);
	}
	
	//CARGAR COMBOS EN LOTE
	public void cargarCombosForeignKeyTipoFormaPago(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales) throws Exception {   
		this.cargarCombosTodosForeignKeyTipoFormaPagoListas(cargarCombosDependencia);
				
		this.addItemDefectoCombosTodosForeignKeyTipoFormaPago();
		
		this.cargarCombosFrameForeignKeyTipoFormaPago();						
		
		if(conInitActions) {
			this.initActionsCombosTodosForeignKeyTipoFormaPago();
		}
		
		if(conSetVariablesGlobales) {
			this.setVariablesGlobalesCombosForeignKeyTipoFormaPago();
		}
	}
	
	

	public void cargarCombosForeignKeyTipoGrupoFormaPago(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTipoGrupoFormaPagoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTipoGrupoFormaPago();
				this.cargarCombosFrameTipoGrupoFormaPagosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaTipoGrupoFormaPago(this.tipogrupoformapagosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoTransaccionModulo(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTipoTransaccionModuloListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTipoTransaccionModulo();
				this.cargarCombosFrameTipoTransaccionModulosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyTipoTransaccionModulo("Todos");
				}

			this.recargarComboTablaTipoTransaccionModulo(this.tipotransaccionmodulosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTransaccion(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTransaccionListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTransaccion();
				this.cargarCombosFrameTransaccionsForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyTipoTransaccionModulo("Todos");
				}

			this.recargarComboTablaTransaccion(this.transaccionsForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCuentaContable(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyCuentaContableListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyCuentaContable();
				this.cargarCombosFrameCuentaContablesForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyTipoTransaccionModulo("Todos");
				}

			this.recargarComboTablaCuentaContable(this.cuentacontablesForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}
	
	public void jButtonNuevoTipoFormaPagoActionPerformed(ActionEvent evt,Boolean esRelaciones) throws Exception {   
		try {
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.FORM_RECARGAR;
			String sTipo="NUEVO_NORMAL";
			
			this.estaModoNuevo=true;
			
			if(this.tipoformapagoSessionBean.getConGuardarRelaciones()) {
				this.dStart=(double)System.currentTimeMillis();
			}
				
			//if(this.esUsoDesdeHijo) {
			//	eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			//}
											
			if(this.jInternalFrameDetalleFormTipoFormaPago==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}			
				
			TipoFormaPagoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.tipoformapago,new Object(),this.tipoformapagoParameterGeneral,this.tipoformapagoReturnGeneral);
			
			
			if(jTableDatosTipoFormaPago.getRowCount()>=1) {
				jTableDatosTipoFormaPago.removeRowSelectionInterval(0, jTableDatosTipoFormaPago.getRowCount()-1);						
			}
			
			this.isEsNuevoTipoFormaPago=true;
			
			//ESTABLECE SI ES RELACIONADO O NO 
			this.habilitarDeshabilitarTipoMantenimientoTipoFormaPago(esRelaciones);
			
			this.nuevoPreparar(false); 
			this.habilitarDeshabilitarControlesTipoFormaPago(true);			
			//this.tipoformapago=new TipoFormaPago();
			//this.tipoformapago.setIsChanged(true);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesTipoFormaPago(false) ;						
			 
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualTipoFormaPago() ;
			
			if(TipoFormaPagoJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetalleTipoFormaPago(esRelaciones);
			}
					
			//Se Duplica, sin sentido
			//this.actualizarInformacion("EVENTO_NUEVO",false,this.tipoformapago);	
			this.actualizarInformacion("INFO_PADRE",false,this.tipoformapago);				
			
			TipoFormaPagoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.tipoformapago,new Object(),this.tipoformapagoParameterGeneral,this.tipoformapagoReturnGeneral);
			
			if(this.tipoformapagoSessionBean.getConGuardarRelaciones()) {
				this.dEnd=(double)System.currentTimeMillis();					
				this.dDif=this.dEnd - this.dStart;
					
				if(Constantes.ISDEVELOPING) {
					System.out.println("Tiempo(ms) Nuevo Preparar TipoFormaPago: " + this.dDif); 
				}
			}
			
			//false para que pueda generar eventos
			this.estaModoNuevo=false;
							
			//Con this.estaModoNuevo=false;, se permite actualizar y usar eventos control al mismo tiempo (FuncionTipo.LAST)			
			TipoFormaPagoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.LAST,ControlTipo.FORM,EventoTipo.CLIC,EventoSubTipo.NEW,sTipo,this.tipoformapago,new Object(),this.tipoformapagoParameterGeneral,this.tipoformapagoReturnGeneral);
			
		} catch(Exception e) {									
			FuncionesSwing.manageException(this, e,logger,TipoFormaPagoConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoNuevo=false;			
		}
	}
	
	public void jButtonDuplicarTipoFormaPagoActionPerformed(ActionEvent evt,Boolean esRelaciones) throws Exception {   
		try {
			Boolean soloDuplicarUno=false;
			Boolean conSeleccionarFilaTabla=false;
			
			this.estaModoNuevo=true;
			this.estaModoDuplicar=true;
			
			ArrayList<TipoFormaPago> tipoformapagosSeleccionados=new ArrayList<TipoFormaPago>();
			int intSelectedRow =-1;
			Integer iNumRowsSeleccionados=0;
			int[] arrNumRowsSeleccionados=null;
			
			//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
			if(conSeleccionarFilaTabla) {
				arrNumRowsSeleccionados=this.jTableDatosTipoFormaPago.getSelectedRows();
				iNumRowsSeleccionados=this.jTableDatosTipoFormaPago.getSelectedRows().length;			
			}
			
			tipoformapagosSeleccionados=this.getTipoFormaPagosSeleccionados(false);
				
			if((soloDuplicarUno && iNumRowsSeleccionados.equals(1)) || !soloDuplicarUno) {
				//LO HACE NUEVOPREPARAR
				//this.iIdNuevoTipoFormaPago--;			
				//TipoFormaPago tipoformapagoAux= new TipoFormaPago();			
				//tipoformapagoAux.setId(this.iIdNuevoTipoFormaPago);																
				
				//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
				//TipoFormaPago tipoformapagoOrigen=new TipoFormaPago();
				//for(Integer iNumRowSeleccionado:arrNumRowsSeleccionados) {				
				
				for(TipoFormaPago tipoformapagoOrigen : tipoformapagosSeleccionados) {
					if(conSeleccionarFilaTabla) {
						if(!soloDuplicarUno) {
							//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
							//intSelectedRow =iNumRowSeleccionado;
						} else {
							intSelectedRow = this.jTableDatosTipoFormaPago.getSelectedRow();
						}
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							tipoformapagoOrigen =(TipoFormaPago) this.tipoformapagoLogic.getTipoFormaPagos().toArray()[this.jTableDatosTipoFormaPago.convertRowIndexToModel(intSelectedRow)];
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							tipoformapagoOrigen =(TipoFormaPago) this.tipoformapagos.toArray()[this.jTableDatosTipoFormaPago.convertRowIndexToModel(intSelectedRow)];
						}
					}
					
					this.aumentarTamanioFilaNuevaTablaTipoFormaPago();
					
					if(this.conTotales) {
						this.quitarFilaTotales();
					}
					
					this.nuevoPreparar(true);
					
					this.tipoformapago.setsType("DUPLICADO");
					
					this.setCopiarVariablesObjetosTipoFormaPago(tipoformapagoOrigen,this.tipoformapago,true,true);
					
					this.setVariablesFormularioToObjetoActualForeignKeysTipoFormaPago(this.tipoformapago);
					
					//LO HACE NUEVOPREPARAR
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						this.tipoformapagoLogic.getTipoFormaPagos().add(this.tipoformapagoAux);
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						this.tipoformapagos.add(this.tipoformapagoAux);				
					}
					*/
				}
				
				this.inicializarActualizarBindingTablaTipoFormaPago(false);
				
				this.jTableDatosTipoFormaPago.setRowSelectionInterval(this.getIndiceNuevoTipoFormaPago(), this.getIndiceNuevoTipoFormaPago());
				
				int iLastRow =  this.jTableDatosTipoFormaPago.getRowCount () - 1;
				Rectangle rectangle = this.jTableDatosTipoFormaPago.getCellRect(iLastRow, 0, true);
				
				this.jTableDatosTipoFormaPago.scrollRectToVisible(rectangle);
				
				//FILA TOTALES
				if(this.conTotales) {
					this.crearFilaTotales();
					
					this.inicializarActualizarBindingTablaTipoFormaPago(false);
				}
			} else {
				throw new Exception("DEBE ESTAR SELECCIONADO 1 REGISTRO");
			}
			
		} catch(Exception e) {			
			FuncionesSwing.manageException(this, e,logger,TipoFormaPagoConstantesFunciones.CLASSNAME);
		
		} finally {
			this.estaModoNuevo=false;
			this.estaModoDuplicar=false;
		}
	}
	
	public void jButtonCopiarTipoFormaPagoActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			Boolean conSeleccionarFilaTabla=false;
			Integer iNumRowsSeleccionados=0;
			int[] intSelectedRows =null;
			int intSelectedRow =0;
			
			this.estaModoCopiar=true;
			
			ArrayList<TipoFormaPago> tipoformapagosSeleccionados=new ArrayList<TipoFormaPago>();									
		
			TipoFormaPago tipoformapagoOrigen=new TipoFormaPago();
			TipoFormaPago tipoformapagoDestino=new TipoFormaPago();
				
			tipoformapagosSeleccionados=this.getTipoFormaPagosSeleccionados(false);
			
			if(conSeleccionarFilaTabla) {
				iNumRowsSeleccionados=this.jTableDatosTipoFormaPago.getSelectedRows().length;	
			}
			
			if(iNumRowsSeleccionados.equals(2) || tipoformapagosSeleccionados.size()==2) {
				if(conSeleccionarFilaTabla) {
					intSelectedRows =this.jTableDatosTipoFormaPago.getSelectedRows();
					intSelectedRow = intSelectedRows[0];	
									
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						tipoformapagoOrigen =(TipoFormaPago) this.tipoformapagoLogic.getTipoFormaPagos().toArray()[this.jTableDatosTipoFormaPago.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						tipoformapagoOrigen =(TipoFormaPago) this.tipoformapagos.toArray()[this.jTableDatosTipoFormaPago.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					intSelectedRow = intSelectedRows[1];
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						tipoformapagoDestino =(TipoFormaPago) this.tipoformapagoLogic.getTipoFormaPagos().toArray()[this.jTableDatosTipoFormaPago.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						tipoformapagoDestino =(TipoFormaPago) this.tipoformapagos.toArray()[this.jTableDatosTipoFormaPago.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				}
				
				tipoformapagoOrigen =tipoformapagosSeleccionados.get(0);
				tipoformapagoDestino =tipoformapagosSeleccionados.get(1);
				
				this.setCopiarVariablesObjetosTipoFormaPago(tipoformapagoOrigen,tipoformapagoDestino,true,false);
				
				tipoformapagoDestino.setsType("DUPLICADO");
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					actualizarLista(tipoformapagoDestino,tipoformapagoLogic.getTipoFormaPagos());					
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(tipoformapagoDestino,tipoformapagos);
				}
				//ARCHITECTURE
				
				this.inicializarActualizarBindingTablaTipoFormaPago(false);
				
				//this.jTableDatosTipoFormaPago.setRowSelectionInterval(this.getIndiceNuevoTipoFormaPago(), this.getIndiceNuevoTipoFormaPago());
				
				int iLastRow =  this.jTableDatosTipoFormaPago.getRowCount () - 1;
				Rectangle rectangle = this.jTableDatosTipoFormaPago.getCellRect(iLastRow, 0, true);
				
				this.jTableDatosTipoFormaPago.scrollRectToVisible(rectangle);
				
				//FILA TOTALES
				if(this.conTotales) {
					//this.crearFilaTotales();
					
					this.inicializarActualizarBindingTablaTipoFormaPago(false);
				}
			} else {
				throw new Exception("DEBEN ESTAR SELECCIONADOS 2 REGISTROS");
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,TipoFormaPagoConstantesFunciones.CLASSNAME);
		
		}  finally {
			this.estaModoCopiar=false;
		}
	}
	
	public void jButtonVerFormTipoFormaPagoActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			if(this.jInternalFrameDetalleFormTipoFormaPago==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			this.jInternalFrameDetalleFormTipoFormaPago.setSelected(true);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,TipoFormaPagoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonMostrarOcultarTipoFormaPagoActionPerformed(ActionEvent evt) throws Exception {   
		try {
			Boolean isVisible=this.jPanelParametrosReportesTipoFormaPago.isVisible();
			
			//BYDAN_BUSQUEDAS
			
			this.jTabbedPaneBusquedasTipoFormaPago.setVisible(!isVisible);			
			
			
			this.jPanelParametrosReportesTipoFormaPago.setVisible(!isVisible);
			this.jPanelPaginacionTipoFormaPago.setVisible(!isVisible);
			this.jPanelAccionesTipoFormaPago.setVisible(!isVisible);
							
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,TipoFormaPagoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarTipoFormaPagoActionPerformed(ActionEvent evt) throws Exception {   
		try {
			this.closingInternalFrameTipoFormaPago();
			
			//if(this.jInternalFrameParent==null) {
				//this.dispose();
			/*} else {
				this.setVisible(false);
	        	this.setSelected(false);	
			}*/			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,TipoFormaPagoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarReporteDinamicoTipoFormaPagoActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.cerrarFrameReporteDinamicoTipoFormaPago();
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,TipoFormaPagoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarImportacionTipoFormaPagoActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.cerrarFrameImportacionTipoFormaPago();
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,TipoFormaPagoConstantesFunciones.CLASSNAME);
		}
	}
	
	
	public void jButtonAbrirOrderByTipoFormaPagoActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			
			this.abrirInicializarFrameOrderByTipoFormaPago();
			
			this.abrirFrameOrderByTipoFormaPago();
			
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,TipoFormaPagoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarOrderByTipoFormaPagoActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.cerrarFrameOrderByTipoFormaPago();
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,TipoFormaPagoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void abrirFrameDetalleTipoFormaPago(Boolean esRelaciones) throws Exception {	    	        
	    try {
			//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false
			//this.jDesktopPane.add(jInternalFrameDetalleFormTipoFormaPago);
			
			if(!esRelaciones) {
				if(this.jInternalFrameDetalleFormTipoFormaPago.isMaximum()) {
					this.jInternalFrameDetalleFormTipoFormaPago.setMaximum(false);
				}								
				
	    		this.jInternalFrameDetalleFormTipoFormaPago.setSize(this.jInternalFrameDetalleFormTipoFormaPago.iWidthFormulario,this.jInternalFrameDetalleFormTipoFormaPago.iHeightFormulario);
	    	} else {
				if(this.iWidthScroll<this.jInternalFrameDetalleFormTipoFormaPago.iWidthFormularioMaximo) {
	    			this.jInternalFrameDetalleFormTipoFormaPago.setSize(this.iWidthScroll,this.iHeightScroll);
				} else {
					if(!this.jInternalFrameDetalleFormTipoFormaPago.isMaximum()) {
						this.jInternalFrameDetalleFormTipoFormaPago.setMaximum(true);
					}
				}
				
				if(this.jInternalFrameDetalleFormTipoFormaPago.jContentPaneDetalleTipoFormaPago.getWidth() > this.getWidth()) {
					this.jInternalFrameDetalleFormTipoFormaPago.jTabbedPaneRelacionesTipoFormaPago.setMinimumSize(new Dimension(this.jInternalFrameDetalleFormTipoFormaPago.jContentPaneDetalleTipoFormaPago.getWidth(),TipoFormaPagoConstantesFunciones.ALTO_TABPANE_RELACIONES));
					this.jInternalFrameDetalleFormTipoFormaPago.jTabbedPaneRelacionesTipoFormaPago.setMaximumSize(new Dimension(this.jInternalFrameDetalleFormTipoFormaPago.jContentPaneDetalleTipoFormaPago.getWidth(),TipoFormaPagoConstantesFunciones.ALTO_TABPANE_RELACIONES));
					this.jInternalFrameDetalleFormTipoFormaPago.jTabbedPaneRelacionesTipoFormaPago.setPreferredSize(new Dimension(this.jInternalFrameDetalleFormTipoFormaPago.jContentPaneDetalleTipoFormaPago.getWidth(),TipoFormaPagoConstantesFunciones.ALTO_TABPANE_RELACIONES));
					
					Dimension dimension=new Dimension(); 
					
					

					if(CierreCajaJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaCierreCaja();
					}

					if(DetaFormaPagoJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaDetaFormaPago();
					}

					if(DetaFormaPagoFactuJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaDetaFormaPagoFactu();
					}

					if(FormaPagoJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaFormaPago();
					}

					if(FormaPagoInvenJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaFormaPagoInven();
					}

					if(FormaPagoPuntoVentaJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaFormaPagoPuntoVenta();
					}

					if(GrupoClienteFormaPagoJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaGrupoClienteFormaPago();
					}

					if(RegistroFormaPagoBancoJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaRegistroFormaPagoBanco();
					}
					
				}
	    	}
			
		
	       	this.jInternalFrameDetalleFormTipoFormaPago.setVisible(true);
	        this.jInternalFrameDetalleFormTipoFormaPago.setSelected(true);
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,TipoFormaPagoConstantesFunciones.CLASSNAME);
	    }
	}
	
	
	public void abrirInicializarFrameOrderByTipoFormaPago() throws Exception {	    	        
	    try {
			if(this.jInternalFrameOrderByTipoFormaPago==null) {
				
				if(!this.conCargarMinimo) {
					this.jInternalFrameOrderByTipoFormaPago=new OrderByJInternalFrame(STIPO_TAMANIO_GENERAL,this.jButtonAbrirOrderByTipoFormaPago,false,this);
				} else {
					this.jInternalFrameOrderByTipoFormaPago=new OrderByJInternalFrame(STIPO_TAMANIO_GENERAL,this.jButtonAbrirOrderByTipoFormaPago,true,this);
				}
				
				this.jDesktopPane.add(this.jInternalFrameOrderByTipoFormaPago);
				this.jInternalFrameOrderByTipoFormaPago.setVisible(false);
				this.jInternalFrameOrderByTipoFormaPago.setSelected(false);
				
				this.jInternalFrameOrderByTipoFormaPago.getjButtonCerrarOrderBy().addActionListener (new ButtonActionListener(this,"CerrarOrderByTipoFormaPago"));
				
				this.inicializarActualizarBindingTablaOrderByTipoFormaPago();
			}
		} catch (final Exception e) {
			
		}
	}
	
	
	
	public void abrirInicializarFrameImportacionTipoFormaPago() throws Exception {	    	        
	    try {
			if(this.jInternalFrameImportacionTipoFormaPago==null) {
				
				this.jInternalFrameImportacionTipoFormaPago=new ImportacionJInternalFrame(TipoFormaPagoConstantesFunciones.SCLASSWEBTITULO,this);			
				
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameImportacionTipoFormaPago);							
				
				this.jDesktopPane.add(this.jInternalFrameImportacionTipoFormaPago);
				this.jInternalFrameImportacionTipoFormaPago.setVisible(false);
				this.jInternalFrameImportacionTipoFormaPago.setSelected(false);


				this.jInternalFrameImportacionTipoFormaPago.getjButtonCerrarImportacion().addActionListener (new ButtonActionListener(this,"CerrarImportacionTipoFormaPago"));
				this.jInternalFrameImportacionTipoFormaPago.getjButtonGenerarImportacion().addActionListener (new ButtonActionListener(this,"GenerarImportacionTipoFormaPago"));
				this.jInternalFrameImportacionTipoFormaPago.getjButtonAbrirImportacion().addActionListener (new ButtonActionListener(this,"AbrirImportacionTipoFormaPago"));


			}
		} catch (final Exception e) {
			
		}
	}		
	
	
	
	public void abrirInicializarFrameReporteDinamicoTipoFormaPago() throws Exception {	    	        
	    try {
			
			if(this.jInternalFrameReporteDinamicoTipoFormaPago==null) {
				this.jInternalFrameReporteDinamicoTipoFormaPago=new ReporteDinamicoJInternalFrame(TipoFormaPagoConstantesFunciones.SCLASSWEBTITULO,this);	
				
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameReporteDinamicoTipoFormaPago);	
	
	
				this.jDesktopPane.add(this.jInternalFrameReporteDinamicoTipoFormaPago);
				this.jInternalFrameReporteDinamicoTipoFormaPago.setVisible(false);
				this.jInternalFrameReporteDinamicoTipoFormaPago.setSelected(false);
	
	
	
				this.jInternalFrameReporteDinamicoTipoFormaPago.getjButtonCerrarReporteDinamico().addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoTipoFormaPago"));
				this.jInternalFrameReporteDinamicoTipoFormaPago.getjButtonGenerarReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoTipoFormaPago"));
				this.jInternalFrameReporteDinamicoTipoFormaPago.getjButtonGenerarExcelReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoTipoFormaPago"));
	
				this.inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualTipoFormaPago();
			}

		} catch (final Exception e) {
			
		}
	}	
	
	
	
		

	public void redimensionarTablaPanelRelacionadaCierreCaja() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormTipoFormaPago.cierrecajaBeanSwingJInternalFrame.jScrollPanelDatosCierreCaja.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormTipoFormaPago.jContentPaneDetalleTipoFormaPago.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormTipoFormaPago.cierrecajaBeanSwingJInternalFrame.jScrollPanelDatosCierreCaja.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormTipoFormaPago.cierrecajaBeanSwingJInternalFrame.jScrollPanelDatosCierreCaja.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormTipoFormaPago.cierrecajaBeanSwingJInternalFrame.jScrollPanelDatosCierreCaja.setPreferredSize(dimension);


	}

	public void redimensionarTablaPanelRelacionadaDetaFormaPago() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormTipoFormaPago.detaformapagoBeanSwingJInternalFrame.jScrollPanelDatosDetaFormaPago.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormTipoFormaPago.jContentPaneDetalleTipoFormaPago.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormTipoFormaPago.detaformapagoBeanSwingJInternalFrame.jScrollPanelDatosDetaFormaPago.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormTipoFormaPago.detaformapagoBeanSwingJInternalFrame.jScrollPanelDatosDetaFormaPago.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormTipoFormaPago.detaformapagoBeanSwingJInternalFrame.jScrollPanelDatosDetaFormaPago.setPreferredSize(dimension);


	}

	public void redimensionarTablaPanelRelacionadaDetaFormaPagoFactu() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormTipoFormaPago.detaformapagofactuBeanSwingJInternalFrame.jScrollPanelDatosDetaFormaPagoFactu.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormTipoFormaPago.jContentPaneDetalleTipoFormaPago.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormTipoFormaPago.detaformapagofactuBeanSwingJInternalFrame.jScrollPanelDatosDetaFormaPagoFactu.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormTipoFormaPago.detaformapagofactuBeanSwingJInternalFrame.jScrollPanelDatosDetaFormaPagoFactu.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormTipoFormaPago.detaformapagofactuBeanSwingJInternalFrame.jScrollPanelDatosDetaFormaPagoFactu.setPreferredSize(dimension);


	}

	public void redimensionarTablaPanelRelacionadaFormaPago() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormTipoFormaPago.formapagoBeanSwingJInternalFrame.jScrollPanelDatosFormaPago.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormTipoFormaPago.jContentPaneDetalleTipoFormaPago.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormTipoFormaPago.formapagoBeanSwingJInternalFrame.jScrollPanelDatosFormaPago.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormTipoFormaPago.formapagoBeanSwingJInternalFrame.jScrollPanelDatosFormaPago.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormTipoFormaPago.formapagoBeanSwingJInternalFrame.jScrollPanelDatosFormaPago.setPreferredSize(dimension);


	}

	public void redimensionarTablaPanelRelacionadaFormaPagoInven() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormTipoFormaPago.formapagoinvenBeanSwingJInternalFrame.jScrollPanelDatosFormaPagoInven.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormTipoFormaPago.jContentPaneDetalleTipoFormaPago.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormTipoFormaPago.formapagoinvenBeanSwingJInternalFrame.jScrollPanelDatosFormaPagoInven.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormTipoFormaPago.formapagoinvenBeanSwingJInternalFrame.jScrollPanelDatosFormaPagoInven.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormTipoFormaPago.formapagoinvenBeanSwingJInternalFrame.jScrollPanelDatosFormaPagoInven.setPreferredSize(dimension);


	}

	public void redimensionarTablaPanelRelacionadaFormaPagoPuntoVenta() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormTipoFormaPago.formapagopuntoventaBeanSwingJInternalFrame.jScrollPanelDatosFormaPagoPuntoVenta.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormTipoFormaPago.jContentPaneDetalleTipoFormaPago.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormTipoFormaPago.formapagopuntoventaBeanSwingJInternalFrame.jScrollPanelDatosFormaPagoPuntoVenta.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormTipoFormaPago.formapagopuntoventaBeanSwingJInternalFrame.jScrollPanelDatosFormaPagoPuntoVenta.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormTipoFormaPago.formapagopuntoventaBeanSwingJInternalFrame.jScrollPanelDatosFormaPagoPuntoVenta.setPreferredSize(dimension);


	}

	public void redimensionarTablaPanelRelacionadaGrupoClienteFormaPago() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormTipoFormaPago.grupoclienteformapagoBeanSwingJInternalFrame.jScrollPanelDatosGrupoClienteFormaPago.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormTipoFormaPago.jContentPaneDetalleTipoFormaPago.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormTipoFormaPago.grupoclienteformapagoBeanSwingJInternalFrame.jScrollPanelDatosGrupoClienteFormaPago.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormTipoFormaPago.grupoclienteformapagoBeanSwingJInternalFrame.jScrollPanelDatosGrupoClienteFormaPago.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormTipoFormaPago.grupoclienteformapagoBeanSwingJInternalFrame.jScrollPanelDatosGrupoClienteFormaPago.setPreferredSize(dimension);


	}

	public void redimensionarTablaPanelRelacionadaRegistroFormaPagoBanco() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormTipoFormaPago.registroformapagobancoBeanSwingJInternalFrame.jScrollPanelDatosRegistroFormaPagoBanco.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormTipoFormaPago.jContentPaneDetalleTipoFormaPago.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormTipoFormaPago.registroformapagobancoBeanSwingJInternalFrame.jScrollPanelDatosRegistroFormaPagoBanco.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormTipoFormaPago.registroformapagobancoBeanSwingJInternalFrame.jScrollPanelDatosRegistroFormaPagoBanco.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormTipoFormaPago.registroformapagobancoBeanSwingJInternalFrame.jScrollPanelDatosRegistroFormaPagoBanco.setPreferredSize(dimension);


	}
					
	public void cerrarFrameDetalleTipoFormaPago() throws Exception {	    	        
	    try {
			//this.jDesktopPane.add(jInternalFrameDetalleFormTipoFormaPago);
			
	       	this.jInternalFrameDetalleFormTipoFormaPago.setVisible(false);
	        this.jInternalFrameDetalleFormTipoFormaPago.setSelected(false);
			
			//this.jInternalFrameDetalleFormTipoFormaPago.dispose();
			//this.jInternalFrameDetalleFormTipoFormaPago=null;
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,TipoFormaPagoConstantesFunciones.CLASSNAME);
	    }
	}
	
	
	public void abrirFrameReporteDinamicoTipoFormaPago() throws Exception {	    	        
	    try {
			
			this.jInternalFrameReporteDinamicoTipoFormaPago.setVisible(true);
	        this.jInternalFrameReporteDinamicoTipoFormaPago.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,TipoFormaPagoConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void abrirFrameImportacionTipoFormaPago() throws Exception {	    	        		
	    try {			
			this.jInternalFrameImportacionTipoFormaPago.setVisible(true);
	        this.jInternalFrameImportacionTipoFormaPago.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,TipoFormaPagoConstantesFunciones.CLASSNAME);
	    }		
	}	
	
	
	
	
	
	public void abrirFrameOrderByTipoFormaPago() throws Exception {	    	        		
	    try {
			this.jInternalFrameOrderByTipoFormaPago.setVisible(true);
	        this.jInternalFrameOrderByTipoFormaPago.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,TipoFormaPagoConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void cerrarFrameOrderByTipoFormaPago() throws Exception {	    	        		
	    try {			
			this.jInternalFrameOrderByTipoFormaPago.setVisible(false);
	        this.jInternalFrameOrderByTipoFormaPago.setSelected(false);			
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,TipoFormaPagoConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void cerrarFrameReporteDinamicoTipoFormaPago() throws Exception {			
	    try {
			this.jInternalFrameReporteDinamicoTipoFormaPago.setVisible(false);
	        this.jInternalFrameReporteDinamicoTipoFormaPago.setSelected(false);			
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,TipoFormaPagoConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void cerrarFrameImportacionTipoFormaPago() throws Exception {	    	        		
	    try {
			this.jInternalFrameImportacionTipoFormaPago.setVisible(false);
	        this.jInternalFrameImportacionTipoFormaPago.setSelected(false);
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,TipoFormaPagoConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	

				public void abrirFrameTreeCuentaContable(String sTipoProceso) { //throws Exception
					try {
						//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false
						//this.jDesktopPane.add(jInternalFrameTreeCuentaContable);
						CuentaContableBeanSwingJInternalFrame cuentacontableBeanSwingJInternalFrame=new CuentaContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
						cuentacontableBeanSwingJInternalFrame.setJInternalFrameParent(this);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setsTipoProceso(sTipoProceso);

						if(sTipoProceso.equals("BUSQUEDA_FK")) {
							cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.sTipoBusqueda="CuentaContable";
						}

						cuentacontableBeanSwingJInternalFrame.getTodosCuentaContableArbol();
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setCuentaContables(cuentacontableBeanSwingJInternalFrame.cuentacontablesArbol);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.CargarTreeCuentaContable();
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setVisible(true);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setSelected(true);

						//SE CAMBIA PARENT ORIGINAL PARA QUE RETORNE EN ESTE FORMULARIO
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.jInternalFrameParent=this;
						TitledBorder titledBorderTipoFormaPago=(TitledBorder)this.jScrollPanelDatosTipoFormaPago.getBorder();
						TitledBorder titledBorderCuentaContable=(TitledBorder)cuentacontableBeanSwingJInternalFrame.jScrollPanelDatosCuentaContable.getBorder();

						titledBorderCuentaContable.setTitle(titledBorderTipoFormaPago.getTitle() + " -> Cuenta Contable");


						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,cuentacontableBeanSwingJInternalFrame);
						}
						this.jDesktopPane.add(cuentacontableBeanSwingJInternalFrame);

					} catch (Exception e) {
						e.getStackTrace();
						//Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
					}
				}

				public void cerrarFrameTreeCuentaContable(CuentaContableBeanSwingJInternalFrame jInternalFrameTreeCuentaContable) throws Exception {
					try {
						//jDesktopPane.add(jInternalFrameTreeCuentaContable);
						jInternalFrameTreeCuentaContable.setVisible(false);
						jInternalFrameTreeCuentaContable.setSelected(false);
						//jInternalFrameTreeCuentaContable.dispose();
						//jInternalFrameTreeCuentaContable=null;
					} catch (final java.beans.PropertyVetoException e) {
						FuncionesSwing.manageException(this, e,logger);
					}
				}
	
	public void jButtonModificarTipoFormaPagoActionPerformed(ActionEvent evt) throws Exception {   
		try {
			this.modificarTipoFormaPago(evt,-1,false);
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,TipoFormaPagoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void modificarTipoFormaPago(ActionEvent evt,int rowIndex,Boolean esRelaciones) throws Exception {   
		try {
			int intSelectedRow = 0;	
			
			if(rowIndex>=0) {
				intSelectedRow=rowIndex;
			} else {
				intSelectedRow = this.jTableDatosTipoFormaPago.getSelectedRow();
			}
			
			this.habilitarDeshabilitarControlesTipoFormaPago(true);
			//this.isEsNuevoTipoFormaPago=false;
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipoformapago =(TipoFormaPago) this.tipoformapagoLogic.getTipoFormaPagos().toArray()[this.jTableDatosTipoFormaPago.convertRowIndexToModel(intSelectedRow)];
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.tipoformapago =(TipoFormaPago) this.tipoformapagos.toArray()[this.jTableDatosTipoFormaPago.convertRowIndexToModel(intSelectedRow)];
			}
			//ARCHITECTURE
			
			this.actualizarEstadoCeldasBotonesTipoFormaPago("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesTipoFormaPago(false) ;
			
			if(tipoformapagoSessionBean.getConGuardarRelaciones()) {
			

				if(this.jInternalFrameDetalleFormTipoFormaPago.registroformapagobancoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoFormaPago.registroformapagobancoBeanSwingJInternalFrame.registroformapagobancoSessionBean.getEsGuardarRelacionado() && RegistroFormaPagoBancoJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonRegistroFormaPagoBancoActionPerformed(null,intSelectedRow,false,true,null);
				}

				if(this.jInternalFrameDetalleFormTipoFormaPago.detaformapagofactuBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoFormaPago.detaformapagofactuBeanSwingJInternalFrame.detaformapagofactuSessionBean.getEsGuardarRelacionado() && DetaFormaPagoFactuJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonDetaFormaPagoFactuActionPerformed(null,intSelectedRow,false,true,null);
				}

				if(this.jInternalFrameDetalleFormTipoFormaPago.grupoclienteformapagoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoFormaPago.grupoclienteformapagoBeanSwingJInternalFrame.grupoclienteformapagoSessionBean.getEsGuardarRelacionado() && GrupoClienteFormaPagoJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonGrupoClienteFormaPagoActionPerformed(null,intSelectedRow,false,true,null);
				}

				if(this.jInternalFrameDetalleFormTipoFormaPago.detaformapagoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoFormaPago.detaformapagoBeanSwingJInternalFrame.detaformapagoSessionBean.getEsGuardarRelacionado() && DetaFormaPagoJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonDetaFormaPagoActionPerformed(null,intSelectedRow,false,true,null);
				}

				if(this.jInternalFrameDetalleFormTipoFormaPago.formapagopuntoventaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoFormaPago.formapagopuntoventaBeanSwingJInternalFrame.formapagopuntoventaSessionBean.getEsGuardarRelacionado() && FormaPagoPuntoVentaJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonFormaPagoPuntoVentaActionPerformed(null,intSelectedRow,false,true,null);
				}

				if(this.jInternalFrameDetalleFormTipoFormaPago.formapagoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoFormaPago.formapagoBeanSwingJInternalFrame.formapagoSessionBean.getEsGuardarRelacionado() && FormaPagoJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonFormaPagoActionPerformed(null,intSelectedRow,false,true,null);
				}

				if(this.jInternalFrameDetalleFormTipoFormaPago.formapagoinvenBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoFormaPago.formapagoinvenBeanSwingJInternalFrame.formapagoinvenSessionBean.getEsGuardarRelacionado() && FormaPagoInvenJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonFormaPagoInvenActionPerformed(null,intSelectedRow,false,true,null);
				}

				if(this.jInternalFrameDetalleFormTipoFormaPago.cierrecajaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormTipoFormaPago.cierrecajaBeanSwingJInternalFrame.cierrecajaSessionBean.getEsGuardarRelacionado() && CierreCajaJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonCierreCajaActionPerformed(null,intSelectedRow,false,true,null);
				}
			}
			
			if(TipoFormaPagoJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetalleTipoFormaPago(esRelaciones);
			}
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualTipoFormaPago(false) ;
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,TipoFormaPagoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarFilaTablaTipoFormaPagoActual() { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL
			Integer intSelectedRow = this.jTableDatosTipoFormaPago.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoformapago =(TipoFormaPago) this.tipoformapagoLogic.getTipoFormaPagos().toArray()[this.jTableDatosTipoFormaPago.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.tipoformapago =(TipoFormaPago) this.tipoformapagos.toArray()[this.jTableDatosTipoFormaPago.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,TipoFormaPagoConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void seleccionarTipoFormaPago(ActionEvent evt,int rowIndex) throws Exception {   
		try {
			
			if(this.jInternalFrameDetalleFormTipoFormaPago==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			int intSelectedRow = 0;	
			
			if(rowIndex>=0) {
				intSelectedRow=rowIndex;
			} else {
				intSelectedRow = this.jTableDatosTipoFormaPago.getSelectedRow();
			}
			
			//this.habilitarDeshabilitarControlesTipoFormaPago(true);
			//this.isEsNuevoTipoFormaPago=false;
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipoformapago =(TipoFormaPago) this.tipoformapagoLogic.getTipoFormaPagos().toArray()[this.jTableDatosTipoFormaPago.convertRowIndexToModel(intSelectedRow)];
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.tipoformapago =(TipoFormaPago) this.tipoformapagos.toArray()[this.jTableDatosTipoFormaPago.convertRowIndexToModel(intSelectedRow)];
			}
			//ARCHITECTURE
			
			this.jInternalFrameParent.setIdCombosCodigoDesdeBusquedaForeignKey(this.tipoformapago.getId(),this.sTipoBusqueda);
			
			this.dispose();
			
			//this.actualizarEstadoCeldasBotonesTipoFormaPago("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
			//NO FUNCIONA BINDINGS
			/*
			this.inicializarActualizarBindingBotonesTipoFormaPago(false) ;
			
			if(TipoFormaPagoJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetalleTipoFormaPago(esRelaciones);
			}
			*/
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualTipoFormaPago(false) ;
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,TipoFormaPagoConstantesFunciones.CLASSNAME);
		}
	}		
	
	public void setIdCombosCodigoDesdeBusquedaForeignKey(Long id,String sType)throws Exception{
		
		try {
			
			if(sType.equals("CuentaContable")) {
				if(!this.tipoformapagoConstantesFunciones.cargarid_cuenta_contableTipoFormaPago) {
					this.cargarCombosCuentaContablesForeignKeyLista(" where id="+id);
					//this.inicializarActualizarBindingTipoFormaPago(false,false);
					this.cargarCombosFrameCuentaContablesForeignKey("Todos");
				}

				this.setCombosCodigoDesdeBusquedaid_cuenta_contable (id);

				this.recargarComboTablaCuentaContable(this.cuentacontablesForeignKey);

			}
		} catch(Exception e) {
			throw e;
		}
	}
	
				
	
	public void recargarComboTablaTipoGrupoFormaPago(List<TipoGrupoFormaPago> tipogrupoformapagosForeignKey)throws Exception{
		TableColumn tableColumnTipoGrupoFormaPago=this.jTableDatosTipoFormaPago.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosTipoFormaPago,TipoFormaPagoConstantesFunciones.LABEL_IDTIPOGRUPOFORMAPAGO));
		TableCellEditor tableCellEditorTipoGrupoFormaPago =tableColumnTipoGrupoFormaPago.getCellEditor();

		TipoGrupoFormaPagoTableCell tipogrupoformapagoTableCellFk=(TipoGrupoFormaPagoTableCell)tableCellEditorTipoGrupoFormaPago;

		if(tipogrupoformapagoTableCellFk!=null) {
			tipogrupoformapagoTableCellFk.settipogrupoformapagosForeignKey(tipogrupoformapagosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosTipoFormaPago.getSelectedRow();

		//if(intSelectedRow<=0) {
			//tipogrupoformapagoTableCellFk.setRowActual(intSelectedRow);
			//tipogrupoformapagoTableCellFk.settipogrupoformapagosForeignKeyActual(tipogrupoformapagosForeignKey);
		//}


		if(tipogrupoformapagoTableCellFk!=null) {
			tipogrupoformapagoTableCellFk.RecargarTipoGrupoFormaPagosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaTipoTransaccionModulo(List<TipoTransaccionModulo> tipotransaccionmodulosForeignKey)throws Exception{
		TableColumn tableColumnTipoTransaccionModulo=this.jTableDatosTipoFormaPago.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosTipoFormaPago,TipoFormaPagoConstantesFunciones.LABEL_IDTIPOTRANSACCIONMODULO));
		TableCellEditor tableCellEditorTipoTransaccionModulo =tableColumnTipoTransaccionModulo.getCellEditor();

		TipoTransaccionModuloTableCell tipotransaccionmoduloTableCellFk=(TipoTransaccionModuloTableCell)tableCellEditorTipoTransaccionModulo;

		if(tipotransaccionmoduloTableCellFk!=null) {
			tipotransaccionmoduloTableCellFk.settipotransaccionmodulosForeignKey(tipotransaccionmodulosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosTipoFormaPago.getSelectedRow();

		//if(intSelectedRow<=0) {
			//tipotransaccionmoduloTableCellFk.setRowActual(intSelectedRow);
			//tipotransaccionmoduloTableCellFk.settipotransaccionmodulosForeignKeyActual(tipotransaccionmodulosForeignKey);
		//}


		if(tipotransaccionmoduloTableCellFk!=null) {
			tipotransaccionmoduloTableCellFk.RecargarTipoTransaccionModulosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaTransaccion(List<Transaccion> transaccionsForeignKey)throws Exception{
		TableColumn tableColumnTransaccion=this.jTableDatosTipoFormaPago.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosTipoFormaPago,TipoFormaPagoConstantesFunciones.LABEL_IDTRANSACCION));
		TableCellEditor tableCellEditorTransaccion =tableColumnTransaccion.getCellEditor();

		TransaccionTableCell transaccionTableCellFk=(TransaccionTableCell)tableCellEditorTransaccion;

		if(transaccionTableCellFk!=null) {
			transaccionTableCellFk.settransaccionsForeignKey(transaccionsForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosTipoFormaPago.getSelectedRow();

		//if(intSelectedRow<=0) {
			//transaccionTableCellFk.setRowActual(intSelectedRow);
			//transaccionTableCellFk.settransaccionsForeignKeyActual(transaccionsForeignKey);
		//}


		if(transaccionTableCellFk!=null) {
			transaccionTableCellFk.RecargarTransaccionsForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaCuentaContable(List<CuentaContable> cuentacontablesForeignKey)throws Exception{
		TableColumn tableColumnCuentaContable=this.jTableDatosTipoFormaPago.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosTipoFormaPago,TipoFormaPagoConstantesFunciones.LABEL_IDCUENTACONTABLE));
		TableCellEditor tableCellEditorCuentaContable =tableColumnCuentaContable.getCellEditor();

		CuentaContableTableCell cuentacontableTableCellFk=(CuentaContableTableCell)tableCellEditorCuentaContable;

		if(cuentacontableTableCellFk!=null) {
			cuentacontableTableCellFk.setcuentacontablesForeignKey(cuentacontablesForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosTipoFormaPago.getSelectedRow();

		//if(intSelectedRow<=0) {
			//cuentacontableTableCellFk.setRowActual(intSelectedRow);
			//cuentacontableTableCellFk.setcuentacontablesForeignKeyActual(cuentacontablesForeignKey);
		//}


		if(cuentacontableTableCellFk!=null) {
			cuentacontableTableCellFk.RecargarCuentaContablesForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	

	public void setCombosCodigoDesdeBusquedaid_cuenta_contable (Long id) throws Exception {
		this.setActualCuentaContableForeignKey(id,true,"Todos");

	};
	
	public void jButtonActualizarTipoFormaPagoActionPerformed(ActionEvent evt) throws Exception {   
		try	{
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipoformapagoLogic.getNewConnexionToDeep("");
			}
			
			this.inicializarActualizarBindingParametrosReportesTipoFormaPago(false);
			
			//if(!this.isEsNuevoTipoFormaPago) {								
				int intSelectedRow = this.jTableDatosTipoFormaPago.getSelectedRow();	
				
				//SE PIEDE INDICE SELECTED CON FILA TOTALES, ASEGURARSE QUE OBJETO ACTUAL ESTE EN FORMULARIO
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoformapago =(TipoFormaPago) this.tipoformapagoLogic.getTipoFormaPagos().toArray()[this.jTableDatosTipoFormaPago.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.tipoformapago =(TipoFormaPago) this.tipoformapagos.toArray()[this.jTableDatosTipoFormaPago.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
			//}
				
			if(TipoFormaPagoJInternalFrame.ISBINDING_MANUAL_TABLA) {
				this.setVariablesFormularioToObjetoActualTipoFormaPago(this.tipoformapago,true);
				this.setVariablesFormularioToObjetoActualForeignKeysTipoFormaPago(this.tipoformapago);
				
			}
			
			if(this.permiteMantenimiento(this.tipoformapago)) {	
				this.actualizar();
				
				if(!this.isGuardarCambiosEnLote && !this.tipoformapagoSessionBean.getEsGuardarRelacionado()) {
					this.procesarBusqueda(sAccionBusqueda);
					
					this.isEsNuevoTipoFormaPago=true;
					this.inicializarActualizarBindingTablaTipoFormaPago(false);
					this.isEsNuevoTipoFormaPago=false;
				
				} else {					
					
					//PARA RELACIONADO ACTUALIZAR FILA TOTALES
					this.isEsNuevoTipoFormaPago=true;
					this.procesoActualizarFilaTotales(false,"MANTENIMIENTO");
					this.isEsNuevoTipoFormaPago=false;
				}
						
								
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingBotonesTipoFormaPago(false);
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualTipoFormaPago(false);
				
				this.habilitarDeshabilitarControlesTipoFormaPago(false);
			
												
				
				if(TipoFormaPagoJInternalFrame.CON_DATOS_FRAME) {
					if(!this.isPostAccionSinCerrar) {
						this.cerrarFrameDetalleTipoFormaPago();
					}
				}
				
				if(this.isPostAccionNuevo) {
					this.jButtonNuevoTipoFormaPagoActionPerformed(evt,tipoformapagoSessionBean.getConGuardarRelaciones());
				} else {
					if(this.isPostAccionSinCerrar) {
						Integer intSelectedRowActual=this.getIndiceActualTipoFormaPago(this.tipoformapago,intSelectedRow);
						
						if(intSelectedRow>-1) {
							this.jTableDatosTipoFormaPago.setRowSelectionInterval(intSelectedRowActual, intSelectedRowActual);
							this.jButtonIdActionPerformed(evt,intSelectedRowActual,tipoformapagoSessionBean.getConGuardarRelaciones(),false);
						}
					}
				}
				
				this.cancelar(false);
				
			} else {
				JOptionPane.showMessageDialog(this,"ESTE REGISTRO NO PUEDE ACTUALIZARSE","EDITAR",JOptionPane.ERROR_MESSAGE);
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipoformapagoLogic.commitNewConnexionToDeep();
			}
			
			
			if(this.jInternalFrameParent!=null) { //&& this.isEsMantenimientoRelacionado) {
				Boolean esUsoDesdeHijoLocal=true;
				String sTipo="Formulario";
				Boolean conIrServidorAplicacionParent=false;
				Long id=this.tipoformapago.getId();
				ArrayList<String> arrClasses=new ArrayList<String>();
				
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();
				
				generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
				generalEntityParameterGeneral.setsDominio("Formulario");
				generalEntityParameterGeneral.setsDominioTipo(TipoFormaPago.class.getName());
				
				this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",TipoFormaPago.class.getName(),sTipo,"FORMULARIO",esControlTabla,conIrServidorAplicacionParent,
					id,this, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.FORM,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
					evt,generalEntityParameterGeneral,this);
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipoformapagoLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,TipoFormaPagoConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipoformapagoLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonEliminarTipoFormaPagoActionPerformed(ActionEvent evt) throws Exception {   
		try	{
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipoformapagoLogic.getNewConnexionToDeep("");
			}
			
			int intSelectedRow = this.jTableDatosTipoFormaPago.getSelectedRow();	       
							
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipoformapago =(TipoFormaPago) this.tipoformapagoLogic.getTipoFormaPagos().toArray()[this.jTableDatosTipoFormaPago.convertRowIndexToModel(intSelectedRow)];
				this.tipoformapago.setIsDeleted(true);
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.tipoformapago =(TipoFormaPago) this.tipoformapagos.toArray()[this.jTableDatosTipoFormaPago.convertRowIndexToModel(intSelectedRow)];
				this.tipoformapago.setIsDeleted(true);
			}
			//ARCHITECTURE
			
			if(this.permiteMantenimiento(this.tipoformapago)) {
				this.eliminar();
				
				if(!this.isGuardarCambiosEnLote && !this.tipoformapagoSessionBean.getEsGuardarRelacionado()) {
					this.procesarBusqueda(sAccionBusqueda);
				}
				
				((TipoFormaPagoModel) this.jTableDatosTipoFormaPago.getModel()).fireTableRowsDeleted(intSelectedRow,intSelectedRow);
				
				this.isEsNuevoTipoFormaPago=true;
				this.inicializarActualizarBindingTablaTipoFormaPago(false);
				this.isEsNuevoTipoFormaPago=false;									
					
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingBotonesTipoFormaPago(false);
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualTipoFormaPago(false);
				
				this.habilitarDeshabilitarControlesTipoFormaPago(false);
				
				
				
				if(TipoFormaPagoJInternalFrame.CON_DATOS_FRAME) {
					this.cerrarFrameDetalleTipoFormaPago();
				}
			} else {
				JOptionPane.showMessageDialog(this,"ESTE REGISTRO NO PUEDE ACTUALIZARSE","EDITAR",JOptionPane.ERROR_MESSAGE);
			}	
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipoformapagoLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipoformapagoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,TipoFormaPagoConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipoformapagoLogic.closeNewConnexionToDeep();
			}
		}		
	}
		
	public void jButtonCancelarTipoFormaPagoActionPerformed(ActionEvent evt) throws Exception {                                         	   	       
	  	try {
			if(jTableDatosTipoFormaPago.getRowCount()>=1) {
				jTableDatosTipoFormaPago.removeRowSelectionInterval(0, jTableDatosTipoFormaPago.getRowCount()-1);						
			}
						
			this.invalidValues=new InvalidValue[0];
			this.habilitarDeshabilitarControlesTipoFormaPago(false);
			this.cancelar(true);			
			this.inicializarActualizarBindingTablaTipoFormaPago(false);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesTipoFormaPago(false) ;
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualTipoFormaPago(false) ;
			
			this.isEsNuevoTipoFormaPago=false;
			
			if(TipoFormaPagoJInternalFrame.CON_DATOS_FRAME) {
				this.cerrarFrameDetalleTipoFormaPago();
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,TipoFormaPagoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonGuardarCambiosTipoFormaPagoActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipoformapagoLogic.getNewConnexionToDeep("");
			}
			
			//this.estaModoGuardarCambios=true;
			
	    	this.guardarCambios();
			
			if(!this.isErrorGuardar) {
				this.procesarBusqueda(this.sAccionBusqueda);
				
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingTipoFormaPago(false);
				
				//SI ES MANUAL
				if(TipoFormaPagoJInternalFrame.ISBINDING_MANUAL) {				
					//this.inicializarActualizarBindingManualTipoFormaPago();				
				}
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipoformapagoLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipoformapagoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,TipoFormaPagoConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipoformapagoLogic.closeNewConnexionToDeep();
			}
			
			//this.estaModoGuardarCambios=false;
		}
	}
	
	public void jButtonNuevoGuardarCambiosTipoFormaPagoActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			
			this.estaModoNuevo=true;
			this.estaModoNuevoGuardarCambios=true;
			
			//LO HACE NUEVOPREPARAR
			//this.iIdNuevoTipoFormaPago--;			
			//TipoFormaPago tipoformapagoAux= new TipoFormaPago();			
			//tipoformapagoAux.setId(this.iIdNuevoTipoFormaPago);
			
			if(this.jInternalFrameDetalleFormTipoFormaPago==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			this.aumentarTamanioFilaNuevaTablaTipoFormaPago();
			
			if(this.conTotales) {
				this.quitarFilaTotales();
			}
			
			this.nuevoPreparar(true);
			
			this.setVariablesFormularioToObjetoActualForeignKeysTipoFormaPago(this.tipoformapago);
			
			this.tipoformapago.setsType("NUEVO_GUARDAR_CAMBIOS");
			
			//LO HACE NUEVOPREPARAR
			/*
			if(Constantes.ISUSAEJBLOGICLAYER) {				
				this.tipoformapagoLogic.getTipoFormaPagos().add(this.tipoformapagoAux);
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				this.tipoformapagos.add(this.tipoformapagoAux);				
			}
			*/
			
			this.inicializarActualizarBindingTablaTipoFormaPago(false);
			
			this.jTableDatosTipoFormaPago.setRowSelectionInterval(this.getIndiceNuevoTipoFormaPago(), this.getIndiceNuevoTipoFormaPago());
			
			int iLastRow =  this.jTableDatosTipoFormaPago.getRowCount () - 1;
			Rectangle rectangle = this.jTableDatosTipoFormaPago.getCellRect(iLastRow, 0, true);
			
			this.jTableDatosTipoFormaPago.scrollRectToVisible(rectangle);
			
			//FILA TOTALES
			if(this.conTotales) {
				this.crearFilaTotales();
				
				this.inicializarActualizarBindingTablaTipoFormaPago(false);
			}

		} catch(Exception e) {									
			FuncionesSwing.manageException(this, e,logger,TipoFormaPagoConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoNuevo=false;
			this.estaModoNuevoGuardarCambios=false;
		}
	}		
	
	public void jButtonRecargarInformacionTipoFormaPagoActionPerformed(ActionEvent evt) throws Exception {    		
		try {
			this.iNumeroPaginacionPagina=0;
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipoformapagoLogic.getNewConnexionToDeep("");
			}
			
			this.inicializarActualizarBindingTipoFormaPago(false,false);
			
	    	this.recargarInformacion();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingTipoFormaPago(false);
			
			//SI ES MANUAL
			if(TipoFormaPagoJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualTipoFormaPago();
			}
			
			//this.abrirFrameTreeTipoFormaPago();
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipoformapagoLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipoformapagoLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,TipoFormaPagoConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipoformapagoLogic.closeNewConnexionToDeep();
			}
		}	
	}
	
	
	public void jButtonGenerarImportacionTipoFormaPagoActionPerformed(ActionEvent evt) throws Exception {    				
		BufferedReader bufferedReader = null;
		String sXmlStringFile="";
		String sPath="";
		this.arrDatoGeneralMinimos= new  ArrayList<DatoGeneralMinimo>();
		DatoGeneralMinimo datoGeneralMinimo=new DatoGeneralMinimo();
		String sLine="";
		
		try {			
			if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE PROCESAR IMPORTACION DE Tipo Forma PagoS ?", "MANTENIMIENTO DE Tipo Forma Pago", JOptionPane.OK_CANCEL_OPTION) == 0) {
				bufferedReader = new BufferedReader(new FileReader(this.jInternalFrameImportacionTipoFormaPago.getFileImportacion().getAbsolutePath()));
								
				while ((sLine = bufferedReader.readLine()) != null) {
					datoGeneralMinimo=new DatoGeneralMinimo();
					datoGeneralMinimo.setsDescripcion(sLine);
					
					this.arrDatoGeneralMinimos.add(datoGeneralMinimo);
				}
				
				this.actualizarParametrosGeneralTipoFormaPago();
						
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {						
					this.tipoformapagoReturnGeneral=tipoformapagoLogic.procesarImportacionTipoFormaPagosWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this.arrDatoGeneralMinimos,this.tipoformapagoParameterGeneral);
						
				} else if(Constantes.ISUSAEJBREMOTE) {
						
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
						
				this.procesarTipoFormaPagoReturnGeneral();
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,TipoFormaPagoConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedReader != null) {
				bufferedReader.close();
			}	
		}				
	}
	
	
	
	public void jButtonAbrirImportacionTipoFormaPagoActionPerformed(ActionEvent evt) throws Exception {    				
		BufferedWriter bufferedWriter = null;
		String sXmlStringFile="";
		String sPath="";
		
		try {
			int iReturnArchivo = this.jInternalFrameImportacionTipoFormaPago.getjFileChooserImportacion().showOpenDialog(this);
 
            if (iReturnArchivo == JFileChooser.APPROVE_OPTION) {
            	this.jInternalFrameImportacionTipoFormaPago.setFileImportacion(this.jInternalFrameImportacionTipoFormaPago.getjFileChooserImportacion().getSelectedFile());
            	
				this.jInternalFrameImportacionTipoFormaPago.getjTextFieldPathArchivoImportacion().setText(this.jInternalFrameImportacionTipoFormaPago.getFileImportacion().getName());
				
				//System.out.println("ARCHIVO ESCOGIDO: "+this.fileImportacionTipoFormaPago.getName());
				
            } else {
                //System.out.println("CANCELAR SELECCION");
				this.jInternalFrameImportacionTipoFormaPago.getjTextFieldPathArchivoImportacion().setText("SELECCION CANCELADA");
            }			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,TipoFormaPagoConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedWriter != null) {
				bufferedWriter.close();
			}	
		}		
	}
	
	
	public void jButtonGenerarReporteDinamicoTipoFormaPagoActionPerformed(ActionEvent evt) throws Exception {    		
		BufferedWriter bufferedWriter = null;
		String sXmlStringFile="";
		String sPath="";
		
		try {	
		
		ArrayList<TipoFormaPago> tipoformapagosSeleccionados=new ArrayList<TipoFormaPago>();		

		tipoformapagosSeleccionados=this.getTipoFormaPagosSeleccionados(true);
		
		
		this.sTipoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoTipoFormaPago.getjComboBoxTiposReportesDinamico().getSelectedItem()).getsCodigo();
		
		this.sTipoArchivoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoTipoFormaPago.getjComboBoxTiposArchivosReportesDinamico().getSelectedItem()).getsCodigo();			
		
		
		this.sTipoArchivoReporte=this.sTipoArchivoReporteDinamico;
		
		//this.sTipoReporteExtra="Base";
		
			InputStream reportFile=null;
			InputStream imageFile=null;
			
			imageFile=AuxiliarImagenes.class.getResourceAsStream("LogoReporte.jpg");			
				
		
		
			reportFile = AuxiliarReportes.class.getResourceAsStream("TipoFormaPagoBaseDesign.jrxml");	
			
			sPath=this.parametroGeneralUsuario.getpath_exportar()+"TipoFormaPagoBaseDesign.jrxml";
			
			sXmlStringFile=Funciones2.getStringFromInputStream(reportFile);
						
			bufferedWriter = new BufferedWriter(new FileWriter(sPath));
			
			
			sXmlStringFile=this.actualizarReporteDinamico(sXmlStringFile);
			
			
			bufferedWriter.write(sXmlStringFile);
			
			bufferedWriter.close();
			
			try{JasperCompileManager.compileReportToFile(sPath);}catch(Exception e){e.printStackTrace();}
			
			this.actualizarVariablesTipoReporte(false,true,false,sPath);
			
			/*
			this.esReporteDinamico=true;
			this.sPathReporteDinamico=sPath.replace(".jrxml",".jasper");
			this.sTipoReporteExtra="";
			*/
			
			this.generarReporteTipoFormaPagos("Todos",tipoformapagosSeleccionados );

			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.tipoformapagoSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				//DEBE APARECER EL REPORTE DIRECTAMENTE
				//JOptionPane.showMessageDialog(this,"GENERADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Tipo Forma Pago",JOptionPane.INFORMATION_MESSAGE);
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,TipoFormaPagoConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedWriter != null) {
				bufferedWriter.close();
			}	
		}
	}		
	
	
	public String actualizarReporteDinamico(String sXmlStringFile) {				
		Reporte reporte=new Reporte();
		Integer iAnchoMaximoVertical=535;//781,782
		Integer iAnchoMaximoHorizontal=782;
		Integer iAnchoSum=0;
		Integer iAnchoColumna=0;
		
		Integer iAnchoMargenes=60;
		String sWidthGrafico="535";
		
		for(int index:this.jInternalFrameReporteDinamicoTipoFormaPago.getjListColumnasSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoTipoFormaPago.getjListColumnasSelectReporte().getModel().getElementAt(index);
			
			switch(reporte.getsCodigo()) {
				
				case TipoFormaPagoConstantesFunciones.LABEL_IDEMPRESA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Empresa_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Empresa_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Empresa_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Empresa_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case TipoFormaPagoConstantesFunciones.LABEL_IDSUCURSAL:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Sucursal_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Sucursal_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Sucursal_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Sucursal_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case TipoFormaPagoConstantesFunciones.LABEL_IDMODULO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Modulo_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Modulo_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Modulo_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Modulo_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case TipoFormaPagoConstantesFunciones.LABEL_IDTIPOGRUPOFORMAPAGO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_TipoGrupoFormaPago_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_TipoGrupoFormaPago_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_TipoGrupoFormaPago_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_TipoGrupoFormaPago_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case TipoFormaPagoConstantesFunciones.LABEL_NOMBRE:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_mbre_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_mbre_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_mbre_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_mbre_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case TipoFormaPagoConstantesFunciones.LABEL_SIGLAS:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_glas_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_glas_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_glas_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_glas_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case TipoFormaPagoConstantesFunciones.LABEL_CONDETALLE:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_nDetalle_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_nDetalle_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_nDetalle_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_nDetalle_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case TipoFormaPagoConstantesFunciones.LABEL_CONCUOTAS:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_nCuotas_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_nCuotas_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_nCuotas_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_nCuotas_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case TipoFormaPagoConstantesFunciones.LABEL_IDTIPOTRANSACCIONMODULO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_TipoTransaccionModulo_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_TipoTransaccionModulo_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_TipoTransaccionModulo_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_TipoTransaccionModulo_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case TipoFormaPagoConstantesFunciones.LABEL_IDTRANSACCION:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Transaccion_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Transaccion_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Transaccion_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Transaccion_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case TipoFormaPagoConstantesFunciones.LABEL_IDCUENTACONTABLE:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_CuentaContable_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_CuentaContable_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_CuentaContable_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_CuentaContable_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case TipoFormaPagoConstantesFunciones.LABEL_DESCRIPCION:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_scripcion_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_scripcion_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_scripcion_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_scripcion_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;
					
				default :
					break;
			}
		}
		
		iAnchoSum+=iAnchoMargenes;
		
		if(iAnchoSum>iAnchoMaximoVertical) {
			sXmlStringFile=sXmlStringFile.replace("595", "842");
			//sXmlStringFile=sXmlStringFile.replace("842", "595");
			sXmlStringFile=sXmlStringFile.replace("535", "782");
			sXmlStringFile=sXmlStringFile.replace("Portrait", "Landscape");			
			sWidthGrafico="782";
		
		} else {
			sXmlStringFile=sXmlStringFile.replace("842", "595");
			//sXmlStringFile=sXmlStringFile.replace("595", "842");
			sXmlStringFile=sXmlStringFile.replace("782", "535");
			sXmlStringFile=sXmlStringFile.replace("Landscape", "Portrait");
			sWidthGrafico="535";
		}
		
		if(this.jInternalFrameReporteDinamicoTipoFormaPago.getjCheckBoxConGraficoDinamico().isSelected()) {
			sXmlStringFile=this.actualizarGraficoReporteDinamico(sXmlStringFile,sWidthGrafico);
		} else {
			sXmlStringFile=sXmlStringFile.replace("colancho_summary_colancho", "30");
		}
		
		return sXmlStringFile;
	}
	
	
	
	public String actualizarGraficoReporteDinamico(String sXmlStringFile,String sWidthGrafico) {		
		String strGrafico="";		
		String sTipo="NORMAL";
		String strCategorySeries="";
		String sNombreCampoCategoria="";
		String sNombreCampoCategoriaValor="";
		Reporte reporte=new Reporte();
		Reporte reporteCategoriaValor=new Reporte();
		Reporte reporteTipoGraficoReporte=new Reporte();
		Boolean existe=false;
		
		sXmlStringFile=sXmlStringFile.replace("colancho_summary_colancho", "280");
		
		//CATEGORIA GRAFICO				
		reporte=((Reporte)this.jInternalFrameReporteDinamicoTipoFormaPago.getjComboBoxColumnaCategoriaGrafico().getSelectedItem());
				
		//TIPO GRAFICO REPORTE
		reporteTipoGraficoReporte=((Reporte)this.jInternalFrameReporteDinamicoTipoFormaPago.getjComboBoxTiposGraficosReportesDinamico().getSelectedItem());
		
		String sTipoGraficoReporte=reporteTipoGraficoReporte.getsCodigo();
		
		switch(reporte.getsCodigo()) {
			
				case TipoFormaPagoConstantesFunciones.LABEL_IDEMPRESA:
					sNombreCampoCategoria="id_empresa";
					break;

				case TipoFormaPagoConstantesFunciones.LABEL_IDSUCURSAL:
					sNombreCampoCategoria="id_sucursal";
					break;

				case TipoFormaPagoConstantesFunciones.LABEL_IDMODULO:
					sNombreCampoCategoria="id_modulo";
					break;

				case TipoFormaPagoConstantesFunciones.LABEL_IDTIPOGRUPOFORMAPAGO:
					sNombreCampoCategoria="id_tipo_grupo_forma_pago";
					break;

				case TipoFormaPagoConstantesFunciones.LABEL_NOMBRE:
					sNombreCampoCategoria="nombre";
					break;

				case TipoFormaPagoConstantesFunciones.LABEL_SIGLAS:
					sNombreCampoCategoria="siglas";
					break;

				case TipoFormaPagoConstantesFunciones.LABEL_CONDETALLE:
					sNombreCampoCategoria="con_detalle";
					break;

				case TipoFormaPagoConstantesFunciones.LABEL_CONCUOTAS:
					sNombreCampoCategoria="con_cuotas";
					break;

				case TipoFormaPagoConstantesFunciones.LABEL_IDTIPOTRANSACCIONMODULO:
					sNombreCampoCategoria="id_tipo_transaccion_modulo";
					break;

				case TipoFormaPagoConstantesFunciones.LABEL_IDTRANSACCION:
					sNombreCampoCategoria="id_transaccion";
					break;

				case TipoFormaPagoConstantesFunciones.LABEL_IDCUENTACONTABLE:
					sNombreCampoCategoria="id_cuenta_contable";
					break;

				case TipoFormaPagoConstantesFunciones.LABEL_DESCRIPCION:
					sNombreCampoCategoria="descripcion";
					break;
					
			default :
				break;
		}		
		//CATEGORIA GRAFICO
		
		//CATEGORIA VALOR				
		reporteCategoriaValor=((Reporte)this.jInternalFrameReporteDinamicoTipoFormaPago.getjComboBoxColumnaCategoriaValor().getSelectedItem());
		
		switch(reporteCategoriaValor.getsCodigo()) {
			
				case TipoFormaPagoConstantesFunciones.LABEL_IDEMPRESA:
					sNombreCampoCategoriaValor="id_empresa";
					break;

				case TipoFormaPagoConstantesFunciones.LABEL_IDSUCURSAL:
					sNombreCampoCategoriaValor="id_sucursal";
					break;

				case TipoFormaPagoConstantesFunciones.LABEL_IDMODULO:
					sNombreCampoCategoriaValor="id_modulo";
					break;

				case TipoFormaPagoConstantesFunciones.LABEL_IDTIPOGRUPOFORMAPAGO:
					sNombreCampoCategoriaValor="id_tipo_grupo_forma_pago";
					break;

				case TipoFormaPagoConstantesFunciones.LABEL_NOMBRE:
					sNombreCampoCategoriaValor="nombre";
					break;

				case TipoFormaPagoConstantesFunciones.LABEL_SIGLAS:
					sNombreCampoCategoriaValor="siglas";
					break;

				case TipoFormaPagoConstantesFunciones.LABEL_CONDETALLE:
					sNombreCampoCategoriaValor="con_detalle";
					break;

				case TipoFormaPagoConstantesFunciones.LABEL_CONCUOTAS:
					sNombreCampoCategoriaValor="con_cuotas";
					break;

				case TipoFormaPagoConstantesFunciones.LABEL_IDTIPOTRANSACCIONMODULO:
					sNombreCampoCategoriaValor="id_tipo_transaccion_modulo";
					break;

				case TipoFormaPagoConstantesFunciones.LABEL_IDTRANSACCION:
					sNombreCampoCategoriaValor="id_transaccion";
					break;

				case TipoFormaPagoConstantesFunciones.LABEL_IDCUENTACONTABLE:
					sNombreCampoCategoriaValor="id_cuenta_contable";
					break;

				case TipoFormaPagoConstantesFunciones.LABEL_DESCRIPCION:
					sNombreCampoCategoriaValor="descripcion";
					break;
					
			default :
				break;
		}	
		//CATEGORIA VALOR
		
		//VALORES GRAFICO
		for(int index:this.jInternalFrameReporteDinamicoTipoFormaPago.getjListColumnasValoresGrafico().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoTipoFormaPago.getjListColumnasValoresGrafico().getModel().getElementAt(index);
			
			switch(reporte.getsCodigo()) {
				
				case TipoFormaPagoConstantesFunciones.LABEL_IDEMPRESA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Empresa",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_empresa");
					break;

				case TipoFormaPagoConstantesFunciones.LABEL_IDSUCURSAL:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Sucursal",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_sucursal");
					break;

				case TipoFormaPagoConstantesFunciones.LABEL_IDMODULO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Modulo",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_modulo");
					break;

				case TipoFormaPagoConstantesFunciones.LABEL_IDTIPOGRUPOFORMAPAGO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"T. Forma Pago",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_tipo_grupo_forma_pago");
					break;

				case TipoFormaPagoConstantesFunciones.LABEL_NOMBRE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Nombre",sNombreCampoCategoria,sNombreCampoCategoriaValor,"nombre");
					break;

				case TipoFormaPagoConstantesFunciones.LABEL_SIGLAS:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Siglas",sNombreCampoCategoria,sNombreCampoCategoriaValor,"siglas");
					break;

				case TipoFormaPagoConstantesFunciones.LABEL_CONDETALLE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Con Detalle",sNombreCampoCategoria,sNombreCampoCategoriaValor,"con_detalle");
					break;

				case TipoFormaPagoConstantesFunciones.LABEL_CONCUOTAS:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Con Cuotas",sNombreCampoCategoria,sNombreCampoCategoriaValor,"con_cuotas");
					break;

				case TipoFormaPagoConstantesFunciones.LABEL_IDTIPOTRANSACCIONMODULO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Tipo Transaccion Modulo",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_tipo_transaccion_modulo");
					break;

				case TipoFormaPagoConstantesFunciones.LABEL_IDTRANSACCION:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Transaccion",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_transaccion");
					break;

				case TipoFormaPagoConstantesFunciones.LABEL_IDCUENTACONTABLE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Cuenta Contable",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_cuenta_contable");
					break;

				case TipoFormaPagoConstantesFunciones.LABEL_DESCRIPCION:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Descripcion",sNombreCampoCategoria,sNombreCampoCategoriaValor,"descripcion");
					break;
					
				default :
					break;
			}
		}
		//VALORES GRAFICO
		//if(sTipoGraficoReporte.equals("BARRAS") || sTipoGraficoReporte.equals("BARRAS_3D") || sTipoGraficoReporte.equals("BARRAS_XY") ||
		//   sTipoGraficoReporte.equals("PASTEL") || sTipoGraficoReporte.equals("PASTEL_3D") || sTipoGraficoReporte.equals("APILADO")) {
			
			existe=true;
			strGrafico=FuncionesReporte.getStringGraficoReporte(sTipoGraficoReporte,sWidthGrafico,strCategorySeries);			
		//}
		
		if(existe) {
			sXmlStringFile=sXmlStringFile.replace("<!--GRAFICO-->", strGrafico);
		}												
		
		return sXmlStringFile;
	}
	
	
	//@SuppressWarnings("deprecation")
	
	public void jButtonGenerarExcelReporteDinamicoTipoFormaPagoActionPerformed(ActionEvent evt) throws Exception {		
		ArrayList<TipoFormaPago> tipoformapagosSeleccionados=new ArrayList<TipoFormaPago>();		
		
		tipoformapagosSeleccionados=this.getTipoFormaPagosSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"tipoformapago";//.xls";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		Boolean existeFilas=false;
		
		Workbook workbook = null;
		FileOutputStream fileOutputStream=null;
		Reporte reporte=new Reporte();
		
		try {
			
			if(sTipoArchivoReporte=="EXCEL2") {
				workbook = new HSSFWorkbook();
				sPath+=".xls";
			
			} else if(sTipoArchivoReporte=="EXCEL2_2") {
				workbook = new XSSFWorkbook();
				sPath+=".xlsx";			
			}
		
			Sheet sheet = workbook.createSheet("TipoFormaPagos");
						
		    			
			Integer iRow=0;
			Integer iCell=0;
			
			Row row = sheet.createRow(iRow);
			Cell cell = row.createCell(iCell);
			//cell.setCellValue("Blahblah");
			
			for(int index:this.jInternalFrameReporteDinamicoTipoFormaPago.getjListColumnasSelectReporte().getSelectedIndices()) {
				reporte=(Reporte)this.jInternalFrameReporteDinamicoTipoFormaPago.getjListColumnasSelectReporte().getModel().getElementAt(index);
				
				switch(reporte.getsCodigo()) {
					
				case TipoFormaPagoConstantesFunciones.LABEL_IDEMPRESA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(TipoFormaPagoConstantesFunciones.LABEL_IDEMPRESA);
					iRow++;

					for(TipoFormaPago tipoformapago:tipoformapagosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(tipoformapago.getempresa_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case TipoFormaPagoConstantesFunciones.LABEL_IDSUCURSAL:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(TipoFormaPagoConstantesFunciones.LABEL_IDSUCURSAL);
					iRow++;

					for(TipoFormaPago tipoformapago:tipoformapagosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(tipoformapago.getsucursal_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case TipoFormaPagoConstantesFunciones.LABEL_IDMODULO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(TipoFormaPagoConstantesFunciones.LABEL_IDMODULO);
					iRow++;

					for(TipoFormaPago tipoformapago:tipoformapagosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(tipoformapago.getmodulo_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case TipoFormaPagoConstantesFunciones.LABEL_IDTIPOGRUPOFORMAPAGO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(TipoFormaPagoConstantesFunciones.LABEL_IDTIPOGRUPOFORMAPAGO);
					iRow++;

					for(TipoFormaPago tipoformapago:tipoformapagosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(tipoformapago.gettipogrupoformapago_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case TipoFormaPagoConstantesFunciones.LABEL_NOMBRE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(TipoFormaPagoConstantesFunciones.LABEL_NOMBRE);
					iRow++;

					for(TipoFormaPago tipoformapago:tipoformapagosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(tipoformapago.getnombre());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case TipoFormaPagoConstantesFunciones.LABEL_SIGLAS:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(TipoFormaPagoConstantesFunciones.LABEL_SIGLAS);
					iRow++;

					for(TipoFormaPago tipoformapago:tipoformapagosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(tipoformapago.getsiglas());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case TipoFormaPagoConstantesFunciones.LABEL_CONDETALLE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(TipoFormaPagoConstantesFunciones.LABEL_CONDETALLE);
					iRow++;

					for(TipoFormaPago tipoformapago:tipoformapagosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(tipoformapago.getcon_detalle());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case TipoFormaPagoConstantesFunciones.LABEL_CONCUOTAS:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(TipoFormaPagoConstantesFunciones.LABEL_CONCUOTAS);
					iRow++;

					for(TipoFormaPago tipoformapago:tipoformapagosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(tipoformapago.getcon_cuotas());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case TipoFormaPagoConstantesFunciones.LABEL_IDTIPOTRANSACCIONMODULO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(TipoFormaPagoConstantesFunciones.LABEL_IDTIPOTRANSACCIONMODULO);
					iRow++;

					for(TipoFormaPago tipoformapago:tipoformapagosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(tipoformapago.gettipotransaccionmodulo_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case TipoFormaPagoConstantesFunciones.LABEL_IDTRANSACCION:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(TipoFormaPagoConstantesFunciones.LABEL_IDTRANSACCION);
					iRow++;

					for(TipoFormaPago tipoformapago:tipoformapagosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(tipoformapago.gettransaccion_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case TipoFormaPagoConstantesFunciones.LABEL_IDCUENTACONTABLE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(TipoFormaPagoConstantesFunciones.LABEL_IDCUENTACONTABLE);
					iRow++;

					for(TipoFormaPago tipoformapago:tipoformapagosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(tipoformapago.getcuentacontable_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case TipoFormaPagoConstantesFunciones.LABEL_DESCRIPCION:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(TipoFormaPagoConstantesFunciones.LABEL_DESCRIPCION);
					iRow++;

					for(TipoFormaPago tipoformapago:tipoformapagosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(tipoformapago.getdescripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;
					
					default :
						break;
				}
			}
			
			
			//if(conCabecera) {
			//	this.getFilaCabeceraExportarExcelTipoFormaPago(row);				
			//	iRow++;
			//}				
			
			//for(TipoFormaPago tipoformapagoAux:tipoformapagosSeleccionados) {
			//	row = sheet.createRow(iRow);
				
			//	this.getFilaDatosExportarExcelTipoFormaPago(tipoformapagoAux,row);
				
			//	iRow++;
			//}
			
			
			
			fileOutputStream = new FileOutputStream(new File(sPath));
		    
			workbook.write(fileOutputStream);
			
			//fileOutputStream.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.tipoformapagoSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Tipo Forma Pago",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			
       		if (fileOutputStream != null) {
				fileOutputStream.close();
			}			
		}				
	}	
	
	
	
	
	public void buscarPorId(Long idActual) throws Exception {    		
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipoformapagoLogic.getNewConnexionToDeep("");
			}
			
			this.idActual=idActual;
			this.iNumeroPaginacionPagina=0;
			
			this.procesarBusqueda("PorId");
				    	
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingTipoFormaPago(false);
			
			//SI ES MANUAL
			if(TipoFormaPagoJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualTipoFormaPago();
			}	
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipoformapagoLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipoformapagoLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger);
			
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipoformapagoLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonAnterioresTipoFormaPagoActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			//this.iNumeroPaginacion-=this.iNumeroPaginacion;
			/*
			if(this.iNumeroPaginacion<0) {
				this.iNumeroPaginacion=0;
			}
			*/
			//this.iNumeroPaginacionPagina=10;			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipoformapagoLogic.getNewConnexionToDeep("");
			}
			
			this.anteriores();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingTipoFormaPago(false);
			
			//SI ES MANUAL
			if(TipoFormaPagoJInternalFrame.ISBINDING_MANUAL) {
	    		//this.inicializarActualizarBindingManualTipoFormaPago();
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipoformapagoLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipoformapagoLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,TipoFormaPagoConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipoformapagoLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonSiguientesTipoFormaPagoActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			//this.iNumeroPaginacion+=this.iNumeroPaginacion;
			//this.iNumeroPaginacionPagina=10;			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipoformapagoLogic.getNewConnexionToDeep("");
			}
			
			this.siguientes();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingTipoFormaPago(false);
			
			//SI ES MANUAL
			if(TipoFormaPagoJInternalFrame.ISBINDING_MANUAL) {
	    		//this.inicializarActualizarBindingManualTipoFormaPago();
			}		
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipoformapagoLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipoformapagoLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,TipoFormaPagoConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipoformapagoLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void aumentarTamanioFilaNuevaTablaTipoFormaPago() throws Exception {		
		Dimension dimensionMinimum=this.jTableDatosTipoFormaPago.getMinimumSize();
		Dimension dimensionMaximum=this.jTableDatosTipoFormaPago.getMaximumSize();
		Dimension dimensionPreferred=this.jTableDatosTipoFormaPago.getPreferredSize();
	
		double iHeightConFilaNueva=dimensionPreferred.getHeight();
		
		iHeightConFilaNueva+=this.jTableDatosTipoFormaPago.getRowHeight();
		
		dimensionMinimum.setSize(dimensionMinimum.getWidth(),iHeightConFilaNueva);
		dimensionMaximum.setSize(dimensionMaximum.getWidth(),iHeightConFilaNueva);
		dimensionPreferred.setSize(dimensionPreferred.getWidth(),iHeightConFilaNueva);
		
		this.jTableDatosTipoFormaPago.setMinimumSize(dimensionMinimum);
		this.jTableDatosTipoFormaPago.setMaximumSize(dimensionMaximum);
		this.jTableDatosTipoFormaPago.setPreferredSize(dimensionPreferred);	
	}
	
	public void inicializarActualizarBindingTipoFormaPago(Boolean esInicializar) throws Exception {
		this.inicializarActualizarBindingTipoFormaPago(esInicializar,true);
	}
	
	public void inicializarActualizarBindingTipoFormaPago(Boolean esInicializar,Boolean conTabla) throws Exception {		
		if(conTabla) {
			this.inicializarActualizarBindingTablaTipoFormaPago(esInicializar);
		}
		
		this.inicializarActualizarBindingBotonesTipoFormaPago(esInicializar);
		
		//FUNCIONALIDAD_RELACIONADO
		if(!this.tipoformapagoSessionBean.getEsGuardarRelacionado()) {
			try{this.inicializarActualizarBindingBusquedasTipoFormaPago(esInicializar);}catch(Exception e){e.printStackTrace();}
			
			//this.inicializarActualizarBindingtiposArchivosReportesAccionesTipoFormaPago(esInicializar) ;
			
			this.inicializarActualizarBindingParametrosReportesTipoFormaPago(esInicializar) ;
		}
		
		if(esInicializar) {
			if( !TipoFormaPagoJInternalFrame.ISBINDING_MANUAL_TABLA ||
			   	!TipoFormaPagoJInternalFrame.ISBINDING_MANUAL) {
			   	
			}
		}
	}
	
	public void inicializarActualizarBindingManualTipoFormaPago() throws Exception {		
		//NO SE NECESITA HACER BINDING OTRA VEZ
		//this.inicializarActualizarBindingTablaTipoFormaPago();
		
		this.inicializarActualizarBindingBotonesManualTipoFormaPago(true);
		
		//FUNCIONALIDAD_RELACIONADO
		if(!this.tipoformapagoSessionBean.getEsGuardarRelacionado()) {
			
			this.inicializarActualizarBindingBusquedasManualTipoFormaPago();			
			
			
			//this.inicializarActualizarBindingtiposArchivosReportesAccionesTipoFormaPago() ;
			
			this.inicializarActualizarBindingParametrosReportesPostAccionesManualTipoFormaPago(false) ;			
			
		}
	}
	
	public void inicializarActualizarBindingParametrosReportesPostAccionesManualTipoFormaPago(Boolean esSetControles) throws Exception {
		try	{					
			if(!esSetControles) {
				this.isSeleccionarTodos=this.jCheckBoxSeleccionarTodosTipoFormaPago.isSelected();
				this.isSeleccionados=this.jCheckBoxSeleccionadosTipoFormaPago.isSelected();
				
				
				this.conGraficoReporte=this.jCheckBoxConGraficoReporteTipoFormaPago.isSelected();															
				
				
				if(this.jInternalFrameDetalleFormTipoFormaPago!=null) {
				this.isPostAccionNuevo=this.jInternalFrameDetalleFormTipoFormaPago.jCheckBoxPostAccionNuevoTipoFormaPago.isSelected();
				this.isPostAccionSinCerrar=this.jInternalFrameDetalleFormTipoFormaPago.jCheckBoxPostAccionSinCerrarTipoFormaPago.isSelected();
				this.isPostAccionSinMensaje=this.jInternalFrameDetalleFormTipoFormaPago.jCheckBoxPostAccionSinMensajeTipoFormaPago.isSelected();
				}
			
			} else {
				this.jCheckBoxSeleccionarTodosTipoFormaPago.setSelected(this.isSeleccionarTodos);
				this.jCheckBoxSeleccionadosTipoFormaPago.setSelected(this.isSeleccionados);
				
				
				this.jCheckBoxConGraficoReporteTipoFormaPago.setSelected(this.conGraficoReporte);				
				
				
				if(this.jInternalFrameDetalleFormTipoFormaPago!=null) {
				this.jInternalFrameDetalleFormTipoFormaPago.jCheckBoxPostAccionNuevoTipoFormaPago.setSelected(this.isPostAccionNuevo);
				this.jInternalFrameDetalleFormTipoFormaPago.jCheckBoxPostAccionSinCerrarTipoFormaPago.setSelected(this.isPostAccionSinCerrar);
				this.jInternalFrameDetalleFormTipoFormaPago.jCheckBoxPostAccionSinMensajeTipoFormaPago.setSelected(this.isPostAccionSinMensaje);
				}
			}
			
			
			if(this.jComboBoxTiposPaginacionTipoFormaPago.getSelectedItem()!=null) {
				this.sTipoPaginacion=((Reporte)this.jComboBoxTiposPaginacionTipoFormaPago.getSelectedItem()).getsCodigo();			
			}
			
			
			
			if(this.jInternalFrameDetalleFormTipoFormaPago!=null) {
			this.sTipoAccionFormulario=((Reporte)this.jInternalFrameDetalleFormTipoFormaPago.jComboBoxTiposAccionesFormularioTipoFormaPago.getSelectedItem()).getsCodigo();
			}
			
			
			
			if(!this.conCargarMinimo) {
				this.sTipoArchivoReporte=((Reporte)this.jComboBoxTiposArchivosReportesTipoFormaPago.getSelectedItem()).getsCodigo();			
				
				if(this.jInternalFrameReporteDinamicoTipoFormaPago!=null) {
					this.sTipoArchivoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoTipoFormaPago.getjComboBoxTiposArchivosReportesDinamico().getSelectedItem()).getsCodigo();			
				}
				
				this.sTipoRelacion=((Reporte)this.jComboBoxTiposRelacionesTipoFormaPago.getSelectedItem()).getsCodigo();
									
				this.sTipoAccion=((Reporte)this.jComboBoxTiposAccionesTipoFormaPago.getSelectedItem()).getsCodigo();
													
				this.sTipoSeleccionar=((Reporte)this.jComboBoxTiposSeleccionarTipoFormaPago.getSelectedItem()).getsCodigo();
									
				this.sTipoReporte=((Reporte)this.jComboBoxTiposReportesTipoFormaPago.getSelectedItem()).getsCodigo();							
					
				if(this.jInternalFrameReporteDinamicoTipoFormaPago!=null) {
					this.sTipoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoTipoFormaPago.getjComboBoxTiposReportesDinamico().getSelectedItem()).getsCodigo();							
				}
				
				this.sTipoGraficoReporte=((Reporte)this.jComboBoxTiposGraficosReportesTipoFormaPago.getSelectedItem()).getsCodigo();											
			}			
			
			this.sValorCampoGeneral=this.jTextFieldValorCampoGeneralTipoFormaPago.getText();						
			
			
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void inicializarActualizarBindingParametrosReportesTipoFormaPago(Boolean esInicializar) throws Exception {
		try	{	
			if(TipoFormaPagoJInternalFrame.ISBINDING_MANUAL) {
				this. inicializarActualizarBindingParametrosReportesPostAccionesManualTipoFormaPago(false);
			} else {
			}
		} catch(Exception e) {
			throw e;
		}
	}	
	
	public void inicializarActualizarBindingtiposArchivosReportesAccionesTipoFormaPago() throws Exception {
		try	{
			if(TipoFormaPagoJInternalFrame.ISBINDING_MANUAL) {
				this.inicializarActualizarBindingtiposArchivosReportesAccionesManualTipoFormaPago();
			} else {
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesAccionesManualFormDetalleTipoFormaPago() throws Exception {
		//TIPOS ACCIONES FORMULARIO	
		this.jInternalFrameDetalleFormTipoFormaPago.jComboBoxTiposAccionesFormularioTipoFormaPago.removeAllItems();
				
		for(Reporte reporte:this.tiposAccionesFormulario) {
			this.jInternalFrameDetalleFormTipoFormaPago.jComboBoxTiposAccionesFormularioTipoFormaPago.addItem(reporte);
		}
		
		//TIPOS ACCIONES FORMULARIO
	}
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesAccionesManualTipoFormaPago() throws Exception {
		try	{
			
			//TIPOS ARCHIVOS REPORTES
			this.jComboBoxTiposArchivosReportesTipoFormaPago.removeAllItems();
				
			for(Reporte reporte:this.tiposArchivosReportes) {
				this.jComboBoxTiposArchivosReportesTipoFormaPago.addItem(reporte);
			}
			
			
				
			//TIPOS REPORTES
			this.jComboBoxTiposReportesTipoFormaPago.removeAllItems();
				
			for(Reporte reporte:this.tiposReportes) {
				this.jComboBoxTiposReportesTipoFormaPago.addItem(reporte);
			}
			
			
			//TIPOS GRAFICOS REPORTES
			this.jComboBoxTiposGraficosReportesTipoFormaPago.removeAllItems();
				
			for(Reporte reporte:this.tiposGraficosReportes) {
				this.jComboBoxTiposGraficosReportesTipoFormaPago.addItem(reporte);
			}
			
			
			//TIPOS PAGINACION
			this.jComboBoxTiposPaginacionTipoFormaPago.removeAllItems();
				
			for(Reporte reporte:this.tiposPaginacion) {
				this.jComboBoxTiposPaginacionTipoFormaPago.addItem(reporte);
			}
			
			
			if(!this.tipoformapagoSessionBean.getEsGuardarRelacionado()) {
				this.jComboBoxTiposPaginacionTipoFormaPago.setSelectedItem(Funciones2.getTipoPaginacionDefecto("NORMAL",this.tiposPaginacion));
			} else {
				this.jComboBoxTiposPaginacionTipoFormaPago.setSelectedItem(Funciones2.getTipoPaginacionDefecto("RELACIONADO",this.tiposPaginacion));
			}
				
				
			//TIPOS ACCIONES	
			this.jComboBoxTiposRelacionesTipoFormaPago.removeAllItems();
				
			for(Reporte reporte:this.tiposRelaciones) {
				this.jComboBoxTiposRelacionesTipoFormaPago.addItem(reporte);
			}
			
			//TIPOS ACCIONES
				
				
			//TIPOS ACCIONES	
			this.jComboBoxTiposAccionesTipoFormaPago.removeAllItems();
				
			for(Reporte reporte:this.tiposAcciones) {
				this.jComboBoxTiposAccionesTipoFormaPago.addItem(reporte);
			}
			
			//TIPOS ACCIONES			
			
			
			
			//TIPOS ACCIONES FORMULARIO	
			if(this.jInternalFrameDetalleFormTipoFormaPago!=null) { //if(this.conCargarFormDetalle) {
				this.jInternalFrameDetalleFormTipoFormaPago.jComboBoxTiposAccionesFormularioTipoFormaPago.removeAllItems();
				
				for(Reporte reporte:this.tiposAccionesFormulario) {
					this.jInternalFrameDetalleFormTipoFormaPago.jComboBoxTiposAccionesFormularioTipoFormaPago.addItem(reporte);
				}
				
			}
			//TIPOS ACCIONES FORMULARIO
			
			
			
			//TIPOS SELECCIONAR
			this.jComboBoxTiposSeleccionarTipoFormaPago.removeAllItems();
				
			for(Reporte reporte:this.tiposSeleccionar) {
				this.jComboBoxTiposSeleccionarTipoFormaPago.addItem(reporte);
			}
			
			
			if(this.tiposSeleccionar!=null && this.tiposSeleccionar.size()>1) {
				this.jComboBoxTiposSeleccionarTipoFormaPago.setSelectedIndex(1);
			}
				
			//REPORTE DINAMICO
			this.inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualTipoFormaPago();
							
			//TIPOS COLUMNAS SELECT
			//TIPOS SELECCIONAR
			
			
		} catch(Exception e) {
			throw e;
		}
	}		
	
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualTipoFormaPago() throws Exception {
		try	{
			DefaultListModel<Reporte> defaultListModel=new DefaultListModel<Reporte>();
			
			
			//TIPOS ARCHIVOS REPORTES DINAMICO
			if(this.jInternalFrameReporteDinamicoTipoFormaPago!=null) {
				this.jInternalFrameReporteDinamicoTipoFormaPago.getjComboBoxTiposArchivosReportesDinamico().removeAllItems();
					
				for(Reporte reporte:this.tiposArchivosReportesDinamico) {
					this.jInternalFrameReporteDinamicoTipoFormaPago.getjComboBoxTiposArchivosReportesDinamico().addItem(reporte);
				}
				
			}
			
			//TIPOS REPORTES DINAMICO
			if(this.jInternalFrameReporteDinamicoTipoFormaPago!=null) {
				this.jInternalFrameReporteDinamicoTipoFormaPago.getjComboBoxTiposReportesDinamico().removeAllItems();
					
				for(Reporte reporte:this.tiposReportesDinamico) {
					this.jInternalFrameReporteDinamicoTipoFormaPago.getjComboBoxTiposReportesDinamico().addItem(reporte);
				}
				
			}
			
			defaultListModel=new DefaultListModel<Reporte>();
			
			if(this.jInternalFrameReporteDinamicoTipoFormaPago!=null) {
				
				if(this.jInternalFrameReporteDinamicoTipoFormaPago.getjListColumnasSelectReporte()!=null) {
					this.jInternalFrameReporteDinamicoTipoFormaPago.getjListColumnasSelectReporte().removeAll();
						
					for(Reporte reporte:this.tiposColumnasSelect) {
						defaultListModel.addElement(reporte);
					}						
						
					this.jInternalFrameReporteDinamicoTipoFormaPago.getjListColumnasSelectReporte().setModel(defaultListModel);									
						
				}	
					
				//TIPOS RELACIONES SELECT
				//TIPOS SELECCIONAR
				defaultListModel=new DefaultListModel<Reporte>();
				if(this.jInternalFrameReporteDinamicoTipoFormaPago.getjListRelacionesSelectReporte()!=null) {
					this.jInternalFrameReporteDinamicoTipoFormaPago.getjListRelacionesSelectReporte().removeAll();
						
					for(Reporte reporte:this.tiposRelacionesSelect) {
						defaultListModel.addElement(reporte);
					}						
						
					this.jInternalFrameReporteDinamicoTipoFormaPago.getjListRelacionesSelectReporte().setModel(defaultListModel);									
						
				}	
				
			}
		} catch(Exception e) {
			throw e;
		}
	}	
	
	
	
	public void inicializarActualizarBindingBusquedasManualTipoFormaPago()  throws Exception {				
		//BYDAN_BUSQUEDAS		
		
		this.nombreBusquedaPorNombre=this.jTextAreanombreBusquedaPorNombreTipoFormaPago.getText();
		this.siglasBusquedaPorSiglas=this.jTextFieldsiglasBusquedaPorSiglasTipoFormaPago.getText();
		if(this.jComboBoxid_cuenta_contableFK_IdTipoFormaPagoTipoFormaPago.getSelectedItem()!=null){this.id_cuenta_contableFK_IdTipoFormaPago=((CuentaContable)this.jComboBoxid_cuenta_contableFK_IdTipoFormaPagoTipoFormaPago.getSelectedItem()).getId();}
		if(this.jComboBoxid_tipo_grupo_forma_pagoFK_IdTipoGrupoFormaPagoTipoFormaPago.getSelectedItem()!=null){this.id_tipo_grupo_forma_pagoFK_IdTipoGrupoFormaPago=((TipoGrupoFormaPago)this.jComboBoxid_tipo_grupo_forma_pagoFK_IdTipoGrupoFormaPagoTipoFormaPago.getSelectedItem()).getId();}
		if(this.jComboBoxid_tipo_transaccion_moduloFK_IdTipoTransaccionModuloTipoFormaPago.getSelectedItem()!=null){this.id_tipo_transaccion_moduloFK_IdTipoTransaccionModulo=((TipoTransaccionModulo)this.jComboBoxid_tipo_transaccion_moduloFK_IdTipoTransaccionModuloTipoFormaPago.getSelectedItem()).getId();}
		if(this.jComboBoxid_transaccionFK_IdTransaccionTipoFormaPago.getSelectedItem()!=null){this.id_transaccionFK_IdTransaccion=((Transaccion)this.jComboBoxid_transaccionFK_IdTransaccionTipoFormaPago.getSelectedItem()).getId();}
		
	}
	
	
	
	
	public void inicializarActualizarBindingBusquedasTipoFormaPago(Boolean esInicializar) throws Exception {				
		if(TipoFormaPagoJInternalFrame.ISBINDING_MANUAL) {
			
			this.inicializarActualizarBindingBusquedasManualTipoFormaPago();			
			
		} else {
		}
	}		
		
	public void inicializarActualizarBindingTablaTipoFormaPago() throws Exception {
		this.inicializarActualizarBindingTablaTipoFormaPago(false);
	}
	
	
	public void inicializarActualizarBindingTablaOrderByTipoFormaPago() {
		//TABLA OrderBy	
		TableColumn tableColumn=new TableColumn();
		Integer iWidthTableDefinicionOrderBy=0;			
			
		this.jInternalFrameOrderByTipoFormaPago.getjTableDatosOrderBy().setModel(new TablaGeneralOrderByModel(this.arrOrderBy));
					
		//DEFINIR RENDERERS OrderBy
		tableColumn=this.jInternalFrameOrderByTipoFormaPago.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderByTipoFormaPago.getjTableDatosOrderBy(),OrderBy.ISSELECTED));			
		//tableColumn.addPropertyChangeListener(new TipoFormaPagoPropertyChangeListener());
					
		tableColumn.setPreferredWidth(50); 	 
		tableColumn.setWidth(50); 	 
		tableColumn.setMinWidth(50);
		tableColumn.setMaxWidth(50);
				
		iWidthTableDefinicionOrderBy+=50;
					
		tableColumn=this.jInternalFrameOrderByTipoFormaPago.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderByTipoFormaPago.getjTableDatosOrderBy(),OrderBy.NOMBRE));
		//tableColumn.addPropertyChangeListener(new TipoFormaPagoPropertyChangeListener());
					
		tableColumn.setPreferredWidth(150); 	 
		tableColumn.setWidth(150); 	 
		tableColumn.setMinWidth(150);
		tableColumn.setMaxWidth(150);
				
		iWidthTableDefinicionOrderBy+=150;
					
		//tableColumn=this.jTableDatosTipoFormaPagoOrderBy.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosTipoFormaPagoOrderBy,OrderBy.NOMBREDB));			
		////tableColumn.addPropertyChangeListener(new TipoFormaPagoPropertyChangeListener());
								
		tableColumn=this.jInternalFrameOrderByTipoFormaPago.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderByTipoFormaPago.getjTableDatosOrderBy(),OrderBy.ESDESC));
		//tableColumn.addPropertyChangeListener(new TipoFormaPagoPropertyChangeListener());
												
		tableColumn.setPreferredWidth(50); 	 
		tableColumn.setWidth(50); 	 
		tableColumn.setMinWidth(50);
		tableColumn.setMaxWidth(50);
				
		((AbstractTableModel) this.jInternalFrameOrderByTipoFormaPago.getjTableDatosOrderBy().getModel()).fireTableDataChanged();
				
		iWidthTableDefinicionOrderBy+=50;
	}
	
	
	
	public void inicializarActualizarBindingTablaTipoFormaPago(Boolean esInicializar) throws Exception {
		Boolean isNoExiste=false;
		Integer iCountNumeroColumnasNormal=0;
		Integer iCountNumeroColumnasFk=0;
		
		this.iWidthTableDefinicion=0;
		
		int iSizeTabla=0;
		
		iSizeTabla=this.getSizeTablaDatos();
		
	if(esInicializar || ConstantesSwing.FORZAR_INICIALIZAR_TABLA) {//esInicializar
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			isNoExiste=tipoformapagoLogic.getTipoFormaPagos().size()==0;
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			isNoExiste=tipoformapagos.size()==0;
		}
		//ARCHITECTURE
			
		if(isNoExiste) {
			if(this.iNumeroPaginacion-this.iNumeroPaginacion>0) {
				this.iNumeroPaginacion-=this.iNumeroPaginacion;
			}
		}
		
		TableColumn tableColumn=new TableColumn();
		
		if(TipoFormaPagoJInternalFrame.ISBINDING_MANUAL_TABLA) {
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.jTableDatosTipoFormaPago.setModel(new TipoFormaPagoModel(this.tipoformapagoLogic.getTipoFormaPagos(),this));
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.jTableDatosTipoFormaPago.setModel(new TipoFormaPagoModel(this.tipoformapagos,this));
			}
			//ARCHITECTURE
			
							
			
			
			if(this.jInternalFrameOrderByTipoFormaPago!=null && this.jInternalFrameOrderByTipoFormaPago.getjTableDatosOrderBy()!=null) {
				this.inicializarActualizarBindingTablaOrderByTipoFormaPago();
			}
			
								
			//DEFINIR RENDERERS
			tableColumn=this.jTableDatosTipoFormaPago.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosTipoFormaPago,Constantes2.S_SELECCIONAR));
			//tableColumn.addPropertyChangeListener(new TipoFormaPagoPropertyChangeListener());
			tableColumn.setCellRenderer(new BooleanRenderer(true,"Seleccionar "+TipoFormaPagoConstantesFunciones.SCLASSWEBTITULO,tipoformapagoConstantesFunciones.resaltarSeleccionarTipoFormaPago,true,false,"","",this));
			tableColumn.setCellEditor(new BooleanEditorRenderer(true,"Seleccionar "+TipoFormaPagoConstantesFunciones.SCLASSWEBTITULO,tipoformapagoConstantesFunciones.resaltarSeleccionarTipoFormaPago,false,"","",this));			
			
			tableColumn.setPreferredWidth(50); 	 
			tableColumn.setWidth(50); 	 
			tableColumn.setMinWidth(50); 
			tableColumn.setMaxWidth(50); 
			
			this.iWidthTableDefinicion+=50;
			
			


			tableColumn=this.jTableDatosTipoFormaPago.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosTipoFormaPago,TipoFormaPagoConstantesFunciones.LABEL_ID));

		if(this.tipoformapagoConstantesFunciones.mostraridTipoFormaPago && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,TipoFormaPagoConstantesFunciones.LABEL_ID,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.tipoformapagoConstantesFunciones.resaltaridTipoFormaPago,this.tipoformapagoConstantesFunciones.activaridTipoFormaPago,this,true,"idTipoFormaPago","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.tipoformapagoConstantesFunciones.resaltaridTipoFormaPago,this.tipoformapagoConstantesFunciones.activaridTipoFormaPago,this,true,"idTipoFormaPago","BASICO",false));

			tableColumn.setPreferredWidth(50);
			tableColumn.setWidth(50);
			tableColumn.setMinWidth(50);
			tableColumn.setMaxWidth(50);

			this.iWidthTableDefinicion+=50;
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosTipoFormaPago.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosTipoFormaPago,TipoFormaPagoConstantesFunciones.LABEL_IDEMPRESA));

		if(this.tipoformapagoConstantesFunciones.mostrarid_empresaTipoFormaPago && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,TipoFormaPagoConstantesFunciones.LABEL_IDEMPRESA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new EmpresaTableCell(this.empresasForeignKey,this.tipoformapagoConstantesFunciones.resaltarid_empresaTipoFormaPago,this,this.tipoformapagoConstantesFunciones.activarid_empresaTipoFormaPago));
			tableColumn.setCellEditor(new EmpresaTableCell(this.empresasForeignKey,this.tipoformapagoConstantesFunciones.resaltarid_empresaTipoFormaPago,this,this.tipoformapagoConstantesFunciones.activarid_empresaTipoFormaPago,false,"id_empresaTipoFormaPago","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new TipoFormaPagoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosTipoFormaPago.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosTipoFormaPago,TipoFormaPagoConstantesFunciones.LABEL_IDSUCURSAL));

		if(this.tipoformapagoConstantesFunciones.mostrarid_sucursalTipoFormaPago && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,TipoFormaPagoConstantesFunciones.LABEL_IDSUCURSAL,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new SucursalTableCell(this.sucursalsForeignKey,this.tipoformapagoConstantesFunciones.resaltarid_sucursalTipoFormaPago,this,this.tipoformapagoConstantesFunciones.activarid_sucursalTipoFormaPago));
			tableColumn.setCellEditor(new SucursalTableCell(this.sucursalsForeignKey,this.tipoformapagoConstantesFunciones.resaltarid_sucursalTipoFormaPago,this,this.tipoformapagoConstantesFunciones.activarid_sucursalTipoFormaPago,false,"id_sucursalTipoFormaPago","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new TipoFormaPagoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosTipoFormaPago.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosTipoFormaPago,TipoFormaPagoConstantesFunciones.LABEL_IDMODULO));

		if(this.tipoformapagoConstantesFunciones.mostrarid_moduloTipoFormaPago && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,TipoFormaPagoConstantesFunciones.LABEL_IDMODULO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new ModuloTableCell(this.modulosForeignKey,this.tipoformapagoConstantesFunciones.resaltarid_moduloTipoFormaPago,this,this.tipoformapagoConstantesFunciones.activarid_moduloTipoFormaPago));
			tableColumn.setCellEditor(new ModuloTableCell(this.modulosForeignKey,this.tipoformapagoConstantesFunciones.resaltarid_moduloTipoFormaPago,this,this.tipoformapagoConstantesFunciones.activarid_moduloTipoFormaPago,false,"id_moduloTipoFormaPago","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new TipoFormaPagoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosTipoFormaPago.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosTipoFormaPago,TipoFormaPagoConstantesFunciones.LABEL_IDTIPOGRUPOFORMAPAGO));

		if(this.tipoformapagoConstantesFunciones.mostrarid_tipo_grupo_forma_pagoTipoFormaPago && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,TipoFormaPagoConstantesFunciones.LABEL_IDTIPOGRUPOFORMAPAGO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new TipoGrupoFormaPagoTableCell(this.tipogrupoformapagosForeignKey,this.tipoformapagoConstantesFunciones.resaltarid_tipo_grupo_forma_pagoTipoFormaPago,this,this.tipoformapagoConstantesFunciones.activarid_tipo_grupo_forma_pagoTipoFormaPago));
			tableColumn.setCellEditor(new TipoGrupoFormaPagoTableCell(this.tipogrupoformapagosForeignKey,this.tipoformapagoConstantesFunciones.resaltarid_tipo_grupo_forma_pagoTipoFormaPago,this,this.tipoformapagoConstantesFunciones.activarid_tipo_grupo_forma_pagoTipoFormaPago,true,"id_tipo_grupo_forma_pagoTipoFormaPago","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new TipoFormaPagoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosTipoFormaPago.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosTipoFormaPago,TipoFormaPagoConstantesFunciones.LABEL_NOMBRE));

		if(this.tipoformapagoConstantesFunciones.mostrarnombreTipoFormaPago && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,TipoFormaPagoConstantesFunciones.LABEL_NOMBRE,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.tipoformapagoConstantesFunciones.resaltarnombreTipoFormaPago,this.tipoformapagoConstantesFunciones.activarnombreTipoFormaPago,this,true,"nombreTipoFormaPago","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.tipoformapagoConstantesFunciones.resaltarnombreTipoFormaPago,this.tipoformapagoConstantesFunciones.activarnombreTipoFormaPago,this,true,"nombreTipoFormaPago","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new TipoFormaPagoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosTipoFormaPago.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosTipoFormaPago,TipoFormaPagoConstantesFunciones.LABEL_SIGLAS));

		if(this.tipoformapagoConstantesFunciones.mostrarsiglasTipoFormaPago && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,TipoFormaPagoConstantesFunciones.LABEL_SIGLAS,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.tipoformapagoConstantesFunciones.resaltarsiglasTipoFormaPago,this.tipoformapagoConstantesFunciones.activarsiglasTipoFormaPago,this,true,"siglasTipoFormaPago","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.tipoformapagoConstantesFunciones.resaltarsiglasTipoFormaPago,this.tipoformapagoConstantesFunciones.activarsiglasTipoFormaPago,this,true,"siglasTipoFormaPago","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new TipoFormaPagoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosTipoFormaPago.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosTipoFormaPago,TipoFormaPagoConstantesFunciones.LABEL_CONDETALLE));

		if(this.tipoformapagoConstantesFunciones.mostrarcon_detalleTipoFormaPago && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,TipoFormaPagoConstantesFunciones.LABEL_CONDETALLE,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new BooleanRenderer(this.tipoformapagoConstantesFunciones.resaltarcon_detalleTipoFormaPago,this.tipoformapagoConstantesFunciones.activarcon_detalleTipoFormaPago));
			tableColumn.setCellEditor(new BooleanEditorRenderer(this.tipoformapagoConstantesFunciones.resaltarcon_detalleTipoFormaPago,this.tipoformapagoConstantesFunciones.activarcon_detalleTipoFormaPago,this,true,"con_detalleTipoFormaPago","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new TipoFormaPagoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosTipoFormaPago.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosTipoFormaPago,TipoFormaPagoConstantesFunciones.LABEL_CONCUOTAS));

		if(this.tipoformapagoConstantesFunciones.mostrarcon_cuotasTipoFormaPago && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,TipoFormaPagoConstantesFunciones.LABEL_CONCUOTAS,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new BooleanRenderer(this.tipoformapagoConstantesFunciones.resaltarcon_cuotasTipoFormaPago,this.tipoformapagoConstantesFunciones.activarcon_cuotasTipoFormaPago));
			tableColumn.setCellEditor(new BooleanEditorRenderer(this.tipoformapagoConstantesFunciones.resaltarcon_cuotasTipoFormaPago,this.tipoformapagoConstantesFunciones.activarcon_cuotasTipoFormaPago,this,true,"con_cuotasTipoFormaPago","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new TipoFormaPagoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosTipoFormaPago.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosTipoFormaPago,TipoFormaPagoConstantesFunciones.LABEL_IDTRANSACCION));

		if(this.tipoformapagoConstantesFunciones.mostrarid_transaccionTipoFormaPago && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,TipoFormaPagoConstantesFunciones.LABEL_IDTRANSACCION,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new TransaccionTableCell(this.transaccionsForeignKey,this.tipoformapagoConstantesFunciones.resaltarid_transaccionTipoFormaPago,this,this.tipoformapagoConstantesFunciones.activarid_transaccionTipoFormaPago));
			tableColumn.setCellEditor(new TransaccionTableCell(this.transaccionsForeignKey,this.tipoformapagoConstantesFunciones.resaltarid_transaccionTipoFormaPago,this,this.tipoformapagoConstantesFunciones.activarid_transaccionTipoFormaPago,true,"id_transaccionTipoFormaPago","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50);
			//tableColumn.addPropertyChangeListener(new TipoFormaPagoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosTipoFormaPago.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosTipoFormaPago,TipoFormaPagoConstantesFunciones.LABEL_IDCUENTACONTABLE));

		if(this.tipoformapagoConstantesFunciones.mostrarid_cuenta_contableTipoFormaPago && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,TipoFormaPagoConstantesFunciones.LABEL_IDCUENTACONTABLE,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new CuentaContableTableCell(this.cuentacontablesForeignKey,this.tipoformapagoConstantesFunciones.resaltarid_cuenta_contableTipoFormaPago,this,this.tipoformapagoConstantesFunciones.activarid_cuenta_contableTipoFormaPago));
			tableColumn.setCellEditor(new CuentaContableTableCell(this.cuentacontablesForeignKey,this.tipoformapagoConstantesFunciones.resaltarid_cuenta_contableTipoFormaPago,this,this.tipoformapagoConstantesFunciones.activarid_cuenta_contableTipoFormaPago,true,"id_cuenta_contableTipoFormaPago","CON_BUSQUEDA"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70);
			//tableColumn.addPropertyChangeListener(new TipoFormaPagoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosTipoFormaPago.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosTipoFormaPago,TipoFormaPagoConstantesFunciones.LABEL_DESCRIPCION));

		if(this.tipoformapagoConstantesFunciones.mostrardescripcionTipoFormaPago && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,TipoFormaPagoConstantesFunciones.LABEL_DESCRIPCION,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.tipoformapagoConstantesFunciones.resaltardescripcionTipoFormaPago,this.tipoformapagoConstantesFunciones.activardescripcionTipoFormaPago,this,true,"descripcionTipoFormaPago","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.tipoformapagoConstantesFunciones.resaltardescripcionTipoFormaPago,this.tipoformapagoConstantesFunciones.activardescripcionTipoFormaPago,this,true,"descripcionTipoFormaPago","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new TipoFormaPagoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}
			
		} else {
		}			
					
		if(!this.tipoformapagoSessionBean.getEsGuardarRelacionado()
			&& !this.esParaBusquedaForeignKey) {
			

			if(this.isTienePermisosRegistroFormaPagoBanco && this.tipoformapagoConstantesFunciones.mostrarRegistroFormaPagoBancoTipoFormaPago && !TipoFormaPagoConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Registro Forma Pago Bancos");
				tableColumn.setHeaderValue("Registro Forma Pago Bancos");
				tableColumn.setCellRenderer(new RegistroFormaPagoBancoTableCell(tipoformapagoConstantesFunciones.resaltarRegistroFormaPagoBancoTipoFormaPago,this,this.tipoformapagoConstantesFunciones.activarRegistroFormaPagoBancoTipoFormaPago));
				tableColumn.setCellEditor(new RegistroFormaPagoBancoTableCell(tipoformapagoConstantesFunciones.resaltarRegistroFormaPagoBancoTipoFormaPago,this,this.tipoformapagoConstantesFunciones.activarRegistroFormaPagoBancoTipoFormaPago));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosTipoFormaPago.addColumn(tableColumn);
			}

			if(this.isTienePermisosDetaFormaPagoFactu && this.tipoformapagoConstantesFunciones.mostrarDetaFormaPagoFactuTipoFormaPago && !TipoFormaPagoConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Deta Forma Pago Factus");
				tableColumn.setHeaderValue("Deta Forma Pago Factus");
				tableColumn.setCellRenderer(new DetaFormaPagoFactuTableCell(tipoformapagoConstantesFunciones.resaltarDetaFormaPagoFactuTipoFormaPago,this,this.tipoformapagoConstantesFunciones.activarDetaFormaPagoFactuTipoFormaPago));
				tableColumn.setCellEditor(new DetaFormaPagoFactuTableCell(tipoformapagoConstantesFunciones.resaltarDetaFormaPagoFactuTipoFormaPago,this,this.tipoformapagoConstantesFunciones.activarDetaFormaPagoFactuTipoFormaPago));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosTipoFormaPago.addColumn(tableColumn);
			}

			if(this.isTienePermisosGrupoClienteFormaPago && this.tipoformapagoConstantesFunciones.mostrarGrupoClienteFormaPagoTipoFormaPago && !TipoFormaPagoConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Grupo Cliente Forma Pagos");
				tableColumn.setHeaderValue("Grupo Cliente Forma Pagos");
				tableColumn.setCellRenderer(new GrupoClienteFormaPagoTableCell(tipoformapagoConstantesFunciones.resaltarGrupoClienteFormaPagoTipoFormaPago,this,this.tipoformapagoConstantesFunciones.activarGrupoClienteFormaPagoTipoFormaPago));
				tableColumn.setCellEditor(new GrupoClienteFormaPagoTableCell(tipoformapagoConstantesFunciones.resaltarGrupoClienteFormaPagoTipoFormaPago,this,this.tipoformapagoConstantesFunciones.activarGrupoClienteFormaPagoTipoFormaPago));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosTipoFormaPago.addColumn(tableColumn);
			}

			if(this.isTienePermisosDetaFormaPago && this.tipoformapagoConstantesFunciones.mostrarDetaFormaPagoTipoFormaPago && !TipoFormaPagoConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Deta Forma Pagos");
				tableColumn.setHeaderValue("Deta Forma Pagos");
				tableColumn.setCellRenderer(new DetaFormaPagoTableCell(tipoformapagoConstantesFunciones.resaltarDetaFormaPagoTipoFormaPago,this,this.tipoformapagoConstantesFunciones.activarDetaFormaPagoTipoFormaPago));
				tableColumn.setCellEditor(new DetaFormaPagoTableCell(tipoformapagoConstantesFunciones.resaltarDetaFormaPagoTipoFormaPago,this,this.tipoformapagoConstantesFunciones.activarDetaFormaPagoTipoFormaPago));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosTipoFormaPago.addColumn(tableColumn);
			}

			if(this.isTienePermisosFormaPagoPuntoVenta && this.tipoformapagoConstantesFunciones.mostrarFormaPagoPuntoVentaTipoFormaPago && !TipoFormaPagoConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Forma Pagoes");
				tableColumn.setHeaderValue("Forma Pagoes");
				tableColumn.setCellRenderer(new FormaPagoPuntoVentaTableCell(tipoformapagoConstantesFunciones.resaltarFormaPagoPuntoVentaTipoFormaPago,this,this.tipoformapagoConstantesFunciones.activarFormaPagoPuntoVentaTipoFormaPago));
				tableColumn.setCellEditor(new FormaPagoPuntoVentaTableCell(tipoformapagoConstantesFunciones.resaltarFormaPagoPuntoVentaTipoFormaPago,this,this.tipoformapagoConstantesFunciones.activarFormaPagoPuntoVentaTipoFormaPago));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosTipoFormaPago.addColumn(tableColumn);
			}

			if(this.isTienePermisosFormaPago && this.tipoformapagoConstantesFunciones.mostrarFormaPagoTipoFormaPago && !TipoFormaPagoConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Forma Pagos");
				tableColumn.setHeaderValue("Forma Pagos");
				tableColumn.setCellRenderer(new FormaPagoTableCell(tipoformapagoConstantesFunciones.resaltarFormaPagoTipoFormaPago,this,this.tipoformapagoConstantesFunciones.activarFormaPagoTipoFormaPago));
				tableColumn.setCellEditor(new FormaPagoTableCell(tipoformapagoConstantesFunciones.resaltarFormaPagoTipoFormaPago,this,this.tipoformapagoConstantesFunciones.activarFormaPagoTipoFormaPago));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosTipoFormaPago.addColumn(tableColumn);
			}

			if(this.isTienePermisosFormaPagoInven && this.tipoformapagoConstantesFunciones.mostrarFormaPagoInvenTipoFormaPago && !TipoFormaPagoConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Forma Pagoes");
				tableColumn.setHeaderValue("Forma Pagoes");
				tableColumn.setCellRenderer(new FormaPagoInvenTableCell(tipoformapagoConstantesFunciones.resaltarFormaPagoInvenTipoFormaPago,this,this.tipoformapagoConstantesFunciones.activarFormaPagoInvenTipoFormaPago));
				tableColumn.setCellEditor(new FormaPagoInvenTableCell(tipoformapagoConstantesFunciones.resaltarFormaPagoInvenTipoFormaPago,this,this.tipoformapagoConstantesFunciones.activarFormaPagoInvenTipoFormaPago));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosTipoFormaPago.addColumn(tableColumn);
			}

			if(this.isTienePermisosCierreCaja && this.tipoformapagoConstantesFunciones.mostrarCierreCajaTipoFormaPago && !TipoFormaPagoConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Cierre Cajas");
				tableColumn.setHeaderValue("Cierre Cajas");
				tableColumn.setCellRenderer(new CierreCajaTableCell(tipoformapagoConstantesFunciones.resaltarCierreCajaTipoFormaPago,this,this.tipoformapagoConstantesFunciones.activarCierreCajaTipoFormaPago));
				tableColumn.setCellEditor(new CierreCajaTableCell(tipoformapagoConstantesFunciones.resaltarCierreCajaTipoFormaPago,this,this.tipoformapagoConstantesFunciones.activarCierreCajaTipoFormaPago));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosTipoFormaPago.addColumn(tableColumn);
			}
		}
		
		if(true) {
			String sLabelColumnAccion="Editar";
			String sLabelColumnAccionEli="Eli";
			
			if(this.esParaBusquedaForeignKey)  {
				sLabelColumnAccion="Seleccionar";
				
				//LO MISMO QUE ELSE
				tableColumn= new TableColumn();
				tableColumn.setIdentifier(sLabelColumnAccion);
				tableColumn.setHeaderValue(sLabelColumnAccion);
				tableColumn.setCellRenderer(new IdTableCell(this,false,false,this.tipoformapagoSessionBean.getEsGuardarRelacionado()));
				tableColumn.setCellEditor(new IdTableCell(this,false,false,this.tipoformapagoSessionBean.getEsGuardarRelacionado()));
	
				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				
				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
				
				this.jTableDatosTipoFormaPago.addColumn(tableColumn);
			
			} else {				
				
				//LO MISMO QUE IF
				
				tableColumn= new TableColumn();
				tableColumn.setIdentifier(sLabelColumnAccion);
				tableColumn.setHeaderValue(sLabelColumnAccion);
				tableColumn.setCellRenderer(new IdTableCell(this,false,false,this.tipoformapagoSessionBean.getEsGuardarRelacionado()));
				tableColumn.setCellEditor(new IdTableCell(this,false,false,this.tipoformapagoSessionBean.getEsGuardarRelacionado()));
		
				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				
				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
				
				this.jTableDatosTipoFormaPago.addColumn(tableColumn);				
					
				//ELIMINAR
				if(this.isPermisoEliminarTipoFormaPago && this.isPermisoGuardarCambiosTipoFormaPago) {
					tableColumn= new TableColumn();
					tableColumn.setIdentifier(Constantes2.S_ELI);
					tableColumn.setHeaderValue(sLabelColumnAccionEli);
					tableColumn.setCellRenderer(new IdTableCell(this,false,true,this.tipoformapagoSessionBean.getEsGuardarRelacionado()));
					tableColumn.setCellEditor(new IdTableCell(this,false,true,this.tipoformapagoSessionBean.getEsGuardarRelacionado()));
			
					tableColumn.setPreferredWidth(65); 	 
					tableColumn.setWidth(65); 	 
					tableColumn.setMinWidth(65); 
					tableColumn.setMaxWidth(65);
					
					this.iWidthTableDefinicion+=65;
						
					this.jTableDatosTipoFormaPago.addColumn(tableColumn);
				}
			}			
						
			if(this.conMaximoRelaciones && this.tipoformapagoSessionBean.getConGuardarRelaciones()) {
				if(this.conFuncionalidadRelaciones) {
					tableColumn= new TableColumn();
					tableColumn.setIdentifier("Editar Rel");
					tableColumn.setHeaderValue("Editar Rel");
					tableColumn.setCellRenderer(new IdTableCell(this,true,false));
					tableColumn.setCellEditor(new IdTableCell(this,true,false));
		
					tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
					tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
					tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 
					tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 
					
					this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
				
					this.jTableDatosTipoFormaPago.addColumn(tableColumn);
				}
			}
			
			/*
			tableColumn= new TableColumn();
			tableColumn.setIdentifier(Constantes2.S_SELECCIONAR);
			tableColumn.setHeaderValue(Constantes2.S_SELECCIONAR);
			tableColumn.setCellRenderer(new IdSeleccionarTableCell(this));
			tableColumn.setCellEditor(new IdSeleccionarTableCell(this));
			
			tableColumn.setPreferredWidth(30); 	 
			tableColumn.setWidth(30); 	 
			tableColumn.setMinWidth(30); 
			
			this.iWidthTableDefinicion+=30;
			
			this.jTableDatosTipoFormaPago.addColumn(tableColumn);
			*/
		}
		
		Integer iUltimaColumna=0;//1
		Integer iNuevaPosicionColumna=0;
		
		
		//PERMITE ELIMINAR SIMPLE
		if(!this.esParaBusquedaForeignKey)  {
			if(this.isPermisoEliminarTipoFormaPago && this.isPermisoGuardarCambiosTipoFormaPago) {
				iUltimaColumna++;
			}	
		}
		
		//PERMITE EDITAR SIMPLE
		iUltimaColumna++;	
		
				
		if(this.conFuncionalidadRelaciones) {
			if(this.conMaximoRelaciones && this.tipoformapagoSessionBean.getConGuardarRelaciones()) {			
				//PERMITE EDITAR RELACIONES
				iUltimaColumna++;//2
			}
		}
		
		//MOVIA SELECCIONAR
		//iUltimaColumna++;
		
		if(!this.esParaBusquedaForeignKey)  {
			if(this.isPermisoEliminarTipoFormaPago && this.isPermisoGuardarCambiosTipoFormaPago) {
				//REUBICA ELIMINAR SIMPLE
				jTableDatosTipoFormaPago.moveColumn(this.jTableDatosTipoFormaPago.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1,-2 o -3
					
				iUltimaColumna--;
			}
		}
		//REUBICA EDITAR SIMPLE
		jTableDatosTipoFormaPago.moveColumn(this.jTableDatosTipoFormaPago.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1,-2 o -3				
		
		
		if(this.conFuncionalidadRelaciones) {
			if(this.conMaximoRelaciones && this.tipoformapagoSessionBean.getConGuardarRelaciones()) {	
				if(iUltimaColumna>1) {
					iUltimaColumna--;
				}
				
				//iNuevaPosicionColumna++;
				
				//REUBICA EDITAR RELACIONES
				jTableDatosTipoFormaPago.moveColumn(this.jTableDatosTipoFormaPago.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1
			}
		}
		
		
		//REUBICABA SELECCIONAR
		/*
		if(iUltimaColumna>1) {
			iUltimaColumna--;
		}
		
		//iNuevaPosicionColumna++;
			
		//REUBICA SELECCIONAR FILA CHECK
		jTableDatosTipoFormaPago.moveColumn(this.jTableDatosTipoFormaPago.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1		
		*/
		
		//DEFINEN HEADERS
		final TableCellRenderer tableHeaderDefaultCellRenderer = this.jTableDatosTipoFormaPago.getTableHeader().getDefaultRenderer();
		
		this.jTableDatosTipoFormaPago.getTableHeader().setDefaultRenderer(new TableCellRendererHeader(this.jTableDatosTipoFormaPago,tableHeaderDefaultCellRenderer));
	    
		TableColumn column=null;
		
		if(!TipoFormaPagoJInternalFrame.ISBINDING_MANUAL_TABLA) {
			for(int i = 0; i < this.jTableDatosTipoFormaPago.getColumnModel().getColumnCount(); i++) { 
				column = this.jTableDatosTipoFormaPago.getColumnModel().getColumn(i); 
				
				if(column.getIdentifier()!=null) {
					//SI SE UTILIZA UN HEADER ES GENERICO
					//column.setHeaderRenderer(new HeaderRenderer(column.getIdentifier().toString()));
				}
				
				if(column.getIdentifier()!=null && column.getIdentifier().equals(Constantes2.S_ELI)) {
					continue;
				}
				
				if(column.getIdentifier()!=null && column.getIdentifier().equals(Constantes2.S_SELECCIONAR)) {
					if(!TipoFormaPagoJInternalFrame.ISBINDING_MANUAL_TABLA) {
						column.setPreferredWidth(50); 	 
						column.setWidth(50); 	 
						column.setMinWidth(50); 	
						column.setMaxWidth(50); 
						
						this.iWidthTableDefinicion+=50;
					}
					
				} else {
					if(!TipoFormaPagoJInternalFrame.ISBINDING_MANUAL_TABLA) {
						column.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
						column.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
						column.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 	
						column.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 	
						
						this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
					}
				}
			}
		}
		
		this.jTableDatosTipoFormaPago.setSelectionBackground(FuncionesSwing.getColorSelectedBackground());
		this.jTableDatosTipoFormaPago.setSelectionForeground(FuncionesSwing.getColorSelectedForeground());
		
		/*
		this.jTableDatosTipoFormaPago.setDefaultRenderer(Object.class, new DefaultTableCellRenderer() {
			private static final long serialVersionUID = 1L;
			
		    @Override
		    public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
		        final Component component= super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
		        //POR DEFECTO ES MEJOR, SE PIERDE DATOS AL SELECCIONAR BLANCO LETRAS BLANCAS
				component.setBackground(row % 2 == 0 ? FuncionesSwing.getColorTextFields(Constantes2.S_FONDOCONTROL_COLOR) : Funciones2.getColorFilaTabla2()); //FuncionesSwing.getColorTextFields(Constantes2.S_FONDOCONTROL_COLOR)
				component.setForeground(Funciones2.getColorTextoFilaTabla1());
				
				try {
		        	int iSize=-999;
		        	
		        	if(conTotales) {
						//FILA TOTALES OTRO COLOR, SI TABLA NO ES UNO A UNO
			        	if(Constantes.ISUSAEJBLOGICLAYER) {
							iSize=tipoformapagoLogic.getTipoFormaPagos().size()-1;
								
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							iSize=tipoformapagos.size()-1;
						}
						
						if(iSize==row) {
							component.setBackground(Funciones2.getColorFilaTablaTotales());
						}
		        	}
					
					//POR EFICIENCIA NO UTILIZAR					
					//if (component instanceof JComponent) {
		            //    JComponent jcomponent = (JComponent) component;		                 		                
		        	//}				
					
				} catch (Exception e) {
					e.printStackTrace();
				}
				
		        return component;
		    }
		});
		*/
		
		//ESTA EN LA DEFINICION DE LA TABLA
		//this.jTableDatosTipoFormaPago.setRowHeight(Constantes.ISWING_ALTO_FILA_TABLA);
		
		/*
		column=this.jTableDatosTipoFormaPago.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSistema,Constantes2.S_SELECCIONAR));
		
		if(column!=null) {
			column.setPreferredWidth(25); 	 
			column.setWidth(25); 	 
			column.setMinWidth(25); 	
		}
		*/
			
			//CopyTableToTableTotal();
		} else {
			
			this.actualizarVisualTableDatosTipoFormaPago();
			
		}
	}
	
	/*
	//COPY_TABLES
	/* FALTARIA RESOLVER:
	   1 SOLO SCROLL PARA 2 TABLAS
	   COPIA EXACTA DE COLUMNAS DE UNA TABLA A OTRA, SI SE MODIFICA TAMANIO TAMBIEN LA OTRA
	*/
	
	public void jButtonIdActionPerformed(ActionEvent evt,int rowIndex,Boolean esRelaciones,Boolean esEliminar) { 
		try {
			if(!esEliminar) {
				this.estaModoSeleccionar=true;
				
				//this.isEsNuevoTipoFormaPago=false;
					
				TipoFormaPagoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.SELECTED,"FORM",this.tipoformapago,new Object(),this.tipoformapagoParameterGeneral,this.tipoformapagoReturnGeneral);
			
				if(this.tipoformapagoSessionBean.getConGuardarRelaciones()) {
					this.dStart=(double)System.currentTimeMillis();
				}
				
				if(this.jInternalFrameDetalleFormTipoFormaPago==null) {
					this.inicializarFormDetalle();
				}
				
				this.inicializarInvalidValues();
				
				int intSelectedRow = 0;
				
				if(rowIndex>=0) {
					intSelectedRow=rowIndex;
					this.jTableDatosTipoFormaPago.getSelectionModel().setSelectionInterval(intSelectedRow, intSelectedRow);
				} else {	
					intSelectedRow=this.jTableDatosTipoFormaPago.getSelectedRow();	       
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoformapago =(TipoFormaPago) this.tipoformapagoLogic.getTipoFormaPagos().toArray()[this.jTableDatosTipoFormaPago.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.tipoformapago =(TipoFormaPago) this.tipoformapagos.toArray()[this.jTableDatosTipoFormaPago.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//PUEDE SER PARA DUPLICADO O NUEVO TABLA
				
				if(this.tipoformapago.getsType().equals("DUPLICADO")
				   || this.tipoformapago.getsType().equals("NUEVO_GUARDAR_CAMBIOS")) {
					
					this.isEsNuevoTipoFormaPago=true;
				
				} else {
					this.isEsNuevoTipoFormaPago=false;	
				}
				
				//CONTROL VERSION ANTERIOR
				/*
				if(!this.tipoformapagoSessionBean.getEsGuardarRelacionado()) {
					if(this.tipoformapago.getId()>=0 && !this.tipoformapago.getIsNew()) {						
						this.isEsNuevoTipoFormaPago=false;
						
					} else {
						this.isEsNuevoTipoFormaPago=true;
					}
					
				} else {
					//CONTROLAR PARA RELACIONADO
				}
				*/
				
				//ESTABLECE SI ES RELACIONADO O NO 
				this.habilitarDeshabilitarTipoMantenimientoTipoFormaPago(esRelaciones);						
				
				this.seleccionarTipoFormaPago(evt,null,rowIndex);
				
				//SELECCIONA ACTUAL PERO AUN NO SE HA INGRESADO AL SISTEMA
				//SE DESHABILITA POR GUARDAR CAMBIOS
				/*
				if(this.tipoformapago.getId()<0) {
					this.isEsNuevoTipoFormaPago=true;
				}
				*/
				
				if(!this.esParaBusquedaForeignKey) {
					this.modificarTipoFormaPago(evt,rowIndex,esRelaciones);
				} else {
					this.seleccionarTipoFormaPago(evt,rowIndex);
				}	
				
				if(this.tipoformapagoSessionBean.getConGuardarRelaciones()) {
					this.dEnd=(double)System.currentTimeMillis();					
					this.dDif=this.dEnd - this.dStart;
					
					if(Constantes.ISDEVELOPING) {
						System.out.println("Tiempo(ms) Seleccion TipoFormaPago: " + this.dDif); 
					}
				}								
				
				TipoFormaPagoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.SELECTED,"FORM",this.tipoformapago,new Object(),this.tipoformapagoParameterGeneral,this.tipoformapagoReturnGeneral);
				
			} else {
				this.estaModoEliminarGuardarCambios=true;
				
				this.seleccionarTipoFormaPago(evt,null,rowIndex);
				
				if(this.permiteMantenimiento(this.tipoformapago)) {
					if(this.tipoformapago.getId()>0) {
						this.tipoformapago.setIsDeleted(true);
						
						this.tipoformapagosEliminados.add(this.tipoformapago);
					}
					
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						this.tipoformapagoLogic.getTipoFormaPagos().remove(this.tipoformapago);
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						this.tipoformapagos.remove(this.tipoformapago);				
					}
					
					
					((TipoFormaPagoModel) this.jTableDatosTipoFormaPago.getModel()).fireTableRowsDeleted(rowIndex,rowIndex);
					
					this.actualizarFilaTotales();
					
					this.inicializarActualizarBindingTablaTipoFormaPago(false);					
				}								
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException2(this, e,logger,TipoFormaPagoConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoSeleccionar=false;				
			this.estaModoEliminarGuardarCambios=false;
		}
	}
	
	
	public void seleccionarTipoFormaPago(ActionEvent evt,javax.swing.event.ListSelectionEvent evt2,int rowIndex) throws Exception { 
		try {
			//SI PUEDE SER NUEVO Y SELECCIONAR (PARA DUPLICAR Y NUEVO TABLA)
			//if(!this.isEsNuevoTipoFormaPago) {
			
			if(this.jInternalFrameDetalleFormTipoFormaPago==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
				int intSelectedRow = 0;
				
				if(rowIndex>=0) {
					intSelectedRow=rowIndex;
					this.jTableDatosTipoFormaPago.getSelectionModel().setSelectionInterval(intSelectedRow, intSelectedRow);
				} else {	
					intSelectedRow=this.jTableDatosTipoFormaPago.getSelectedRow();	       
				}
				
				//CUANDO SE RECARGA TABLA TAMBIEN SE SELECCIONA PERO CON -1 POR LO QUE SE NECESITA VALIDAR ANTES
				if(intSelectedRow<0) {
					return;
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoformapago =(TipoFormaPago) this.tipoformapagoLogic.getTipoFormaPagos().toArray()[this.jTableDatosTipoFormaPago.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.tipoformapago =(TipoFormaPago) this.tipoformapagos.toArray()[this.jTableDatosTipoFormaPago.convertRowIndexToModel(intSelectedRow)];
				}
				
				if(TipoFormaPagoJInternalFrame.ISBINDING_MANUAL_TABLA) {
					this.setVariablesObjetoActualToFormularioTipoFormaPago(this.tipoformapago);
				}
				
				//ARCHITECTURE
				try {
					

					//Empresa
					if(!this.tipoformapagoConstantesFunciones.cargarid_empresaTipoFormaPago || this.tipoformapagoConstantesFunciones.event_dependid_empresaTipoFormaPago) {
						//this.cargarCombosEmpresasForeignKeyLista(" where id="+this.tipoformapago.getid_empresa());
									//this.inicializarActualizarBindingTipoFormaPago(false,false);
						this.empresasForeignKey=new ArrayList<Empresa>();

						if(tipoformapago.getEmpresa()!=null) {
							this.empresasForeignKey.add(tipoformapago.getEmpresa());
						}

						this.addItemDefectoCombosForeignKeyEmpresa();
						this.cargarCombosFrameEmpresasForeignKey("Todos");
					}
					this.setActualEmpresaForeignKey(this.tipoformapago.getid_empresa(),false,"Formulario");

					//Sucursal
					if(!this.tipoformapagoConstantesFunciones.cargarid_sucursalTipoFormaPago || this.tipoformapagoConstantesFunciones.event_dependid_sucursalTipoFormaPago) {
						//this.cargarCombosSucursalsForeignKeyLista(" where id="+this.tipoformapago.getid_sucursal());
									//this.inicializarActualizarBindingTipoFormaPago(false,false);
						this.sucursalsForeignKey=new ArrayList<Sucursal>();

						if(tipoformapago.getSucursal()!=null) {
							this.sucursalsForeignKey.add(tipoformapago.getSucursal());
						}

						this.addItemDefectoCombosForeignKeySucursal();
						this.cargarCombosFrameSucursalsForeignKey("Todos");
					}
					this.setActualSucursalForeignKey(this.tipoformapago.getid_sucursal(),false,"Formulario");

					//Modulo
					if(!this.tipoformapagoConstantesFunciones.cargarid_moduloTipoFormaPago || this.tipoformapagoConstantesFunciones.event_dependid_moduloTipoFormaPago) {
						//this.cargarCombosModulosForeignKeyLista(" where id="+this.tipoformapago.getid_modulo());
									//this.inicializarActualizarBindingTipoFormaPago(false,false);
						this.modulosForeignKey=new ArrayList<Modulo>();

						if(tipoformapago.getModulo()!=null) {
							this.modulosForeignKey.add(tipoformapago.getModulo());
						}

						this.addItemDefectoCombosForeignKeyModulo();
						this.cargarCombosFrameModulosForeignKey("Todos");
					}
					this.setActualModuloForeignKey(this.tipoformapago.getid_modulo(),false,"Formulario");

					//TipoGrupoFormaPago
					if(!this.tipoformapagoConstantesFunciones.cargarid_tipo_grupo_forma_pagoTipoFormaPago || this.tipoformapagoConstantesFunciones.event_dependid_tipo_grupo_forma_pagoTipoFormaPago) {
						//this.cargarCombosTipoGrupoFormaPagosForeignKeyLista(" where id="+this.tipoformapago.getid_tipo_grupo_forma_pago());
									//this.inicializarActualizarBindingTipoFormaPago(false,false);
						this.tipogrupoformapagosForeignKey=new ArrayList<TipoGrupoFormaPago>();

						if(tipoformapago.getTipoGrupoFormaPago()!=null) {
							this.tipogrupoformapagosForeignKey.add(tipoformapago.getTipoGrupoFormaPago());
						}

						this.addItemDefectoCombosForeignKeyTipoGrupoFormaPago();
						this.cargarCombosFrameTipoGrupoFormaPagosForeignKey("Todos");
					}
					this.setActualTipoGrupoFormaPagoForeignKey(this.tipoformapago.getid_tipo_grupo_forma_pago(),false,"Formulario");

					//TipoTransaccionModulo
					if(!this.tipoformapagoConstantesFunciones.cargarid_tipo_transaccion_moduloTipoFormaPago || this.tipoformapagoConstantesFunciones.event_dependid_tipo_transaccion_moduloTipoFormaPago) {
						//this.cargarCombosTipoTransaccionModulosForeignKeyLista(" where id="+this.tipoformapago.getid_tipo_transaccion_modulo());
									//this.inicializarActualizarBindingTipoFormaPago(false,false);
						this.tipotransaccionmodulosForeignKey=new ArrayList<TipoTransaccionModulo>();

						if(tipoformapago.getTipoTransaccionModulo()!=null) {
							this.tipotransaccionmodulosForeignKey.add(tipoformapago.getTipoTransaccionModulo());
						}

						this.addItemDefectoCombosForeignKeyTipoTransaccionModulo();
						this.cargarCombosFrameTipoTransaccionModulosForeignKey("Todos");
					}
					this.setActualTipoTransaccionModuloForeignKey(this.tipoformapago.getid_tipo_transaccion_modulo(),false,"Formulario");

					//Transaccion
					if(!this.tipoformapagoConstantesFunciones.cargarid_transaccionTipoFormaPago || this.tipoformapagoConstantesFunciones.event_dependid_transaccionTipoFormaPago) {
						//this.cargarCombosTransaccionsForeignKeyLista(" where id="+this.tipoformapago.getid_transaccion());
									//this.inicializarActualizarBindingTipoFormaPago(false,false);
						this.transaccionsForeignKey=new ArrayList<Transaccion>();

						if(tipoformapago.getTransaccion()!=null) {
							this.transaccionsForeignKey.add(tipoformapago.getTransaccion());
						}

						this.addItemDefectoCombosForeignKeyTransaccion();
						this.cargarCombosFrameTransaccionsForeignKey("Todos");
					}
					this.setActualTransaccionForeignKey(this.tipoformapago.getid_transaccion(),false,"Formulario");

					//CuentaContable
					if(!this.tipoformapagoConstantesFunciones.cargarid_cuenta_contableTipoFormaPago || this.tipoformapagoConstantesFunciones.event_dependid_cuenta_contableTipoFormaPago) {
						//this.cargarCombosCuentaContablesForeignKeyLista(" where id="+this.tipoformapago.getid_cuenta_contable());
									//this.inicializarActualizarBindingTipoFormaPago(false,false);
						this.cuentacontablesForeignKey=new ArrayList<CuentaContable>();

						if(tipoformapago.getCuentaContable()!=null) {
							this.cuentacontablesForeignKey.add(tipoformapago.getCuentaContable());
						}

						this.addItemDefectoCombosForeignKeyCuentaContable();
						this.cargarCombosFrameCuentaContablesForeignKey("Todos");
					}
					this.setActualCuentaContableForeignKey(this.tipoformapago.getid_cuenta_contable(),false,"Formulario");
				} catch(Exception e) {
					throw e;
				}
				
				this.actualizarEstadoCeldasBotonesTipoFormaPago("s", this.isGuardarCambiosEnLote, this.isEsMantenimientoRelacionado);
				
				//NO FUNCIONA BINDING PERO SE MANTIENE
				this.inicializarActualizarBindingBotonesTipoFormaPago(false) ;
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualTipoFormaPago() ;
			//}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,TipoFormaPagoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setVariablesObjetoActualToFormularioTodoTipoFormaPago(TipoFormaPago tipoformapago) throws Exception { 
		this.setVariablesObjetoActualToFormularioTodoTipoFormaPago(tipoformapago,false,"NINGUNO");
	}
	
	public void setVariablesObjetoActualToFormularioTodoTipoFormaPago(TipoFormaPago tipoformapago,Boolean conCargarListasDesdeObjetoActual,String sTipoEvento) throws Exception { 
		this.setVariablesObjetoActualToFormularioTipoFormaPago(tipoformapago);
		
		if(conCargarListasDesdeObjetoActual) {
			this.setVariablesObjetoActualToListasForeignKeyTipoFormaPago(tipoformapago,sTipoEvento);
		}
		
		this.setVariablesObjetoActualToFormularioForeignKeyTipoFormaPago(tipoformapago);
	}
	
	public void setVariablesObjetoActualToFormularioTipoFormaPago(TipoFormaPago tipoformapago) throws Exception { 
		try {			
			Image imageActual=null;
			ImageIcon imageIcon = null;
			
			if(this.jInternalFrameDetalleFormTipoFormaPago==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			
			this.jInternalFrameDetalleFormTipoFormaPago.jLabelidTipoFormaPago.setText(tipoformapago.getId().toString());
			this.jInternalFrameDetalleFormTipoFormaPago.jTextAreanombreTipoFormaPago.setText(tipoformapago.getnombre());
			this.jInternalFrameDetalleFormTipoFormaPago.jTextFieldsiglasTipoFormaPago.setText(tipoformapago.getsiglas());
			this.jInternalFrameDetalleFormTipoFormaPago.jCheckBoxcon_detalleTipoFormaPago.setSelected(tipoformapago.getcon_detalle());
			this.jInternalFrameDetalleFormTipoFormaPago.jCheckBoxcon_cuotasTipoFormaPago.setSelected(tipoformapago.getcon_cuotas());
			this.jInternalFrameDetalleFormTipoFormaPago.jTextAreadescripcionTipoFormaPago.setText(tipoformapago.getdescripcion());
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,TipoFormaPagoConstantesFunciones.CLASSNAME);
		}
	}
		
	public void actualizarInformacion(String sTipo,TipoFormaPago tipoformapagoLocal) throws Exception {
		this.actualizarInformacion(sTipo,false,tipoformapagoLocal);
	}	
	
	public void actualizarInformacion(String sTipo,Boolean conParametroObjeto,TipoFormaPago tipoformapagoLocal) throws Exception {
		
		if(!conParametroObjeto) {
			if(!this.getEsControlTabla()) {
				tipoformapagoLocal=this.tipoformapago;
			} else {
				tipoformapagoLocal=this.tipoformapagoAnterior;
			}
		}
		
		if(this.permiteMantenimiento(tipoformapagoLocal)) {
			if(sTipo.equals("EVENTO_CONTROL")) { // || sTipo.equals("EVENTO_NUEVO")
				if(!this.esControlTabla) {
					this.setVariablesFormularioToObjetoActualTodoTipoFormaPago(tipoformapagoLocal,true);
					
					if(tipoformapagoSessionBean.getConGuardarRelaciones()) {
						this.actualizarRelaciones(tipoformapagoLocal);
					}
				}
			
			} else if(sTipo.equals("INFO_PADRE")) {
				
				if(this.tipoformapagoSessionBean.getEsGuardarRelacionado()) {
					this.actualizarRelacionFkPadreActual(tipoformapagoLocal);
				}
			}
		}
	}
	
	public void setVariablesFormularioToObjetoActualTodoTipoFormaPago(TipoFormaPago tipoformapago,Boolean conColumnasBase) throws Exception { 
		this.setVariablesFormularioToObjetoActualTipoFormaPago(tipoformapago,conColumnasBase);
		this.setVariablesFormularioToObjetoActualForeignKeysTipoFormaPago(tipoformapago);
	}
	
	public void setVariablesFormularioToObjetoActualTipoFormaPago(TipoFormaPago tipoformapago,Boolean conColumnasBase) throws Exception { 
		this.setVariablesFormularioToObjetoActualTipoFormaPago(tipoformapago,conColumnasBase,true);
	}
	
	public void setVariablesFormularioToObjetoActualTipoFormaPago(TipoFormaPago tipoformapago,Boolean conColumnasBase,Boolean conInicializarInvalidValues) throws Exception { 
		String sMensajeCampoActual="";
		Boolean estaValidado=true;
		try {
			
			if(this.jInternalFrameDetalleFormTipoFormaPago==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			if(conInicializarInvalidValues) {
				this.inicializarInvalidValues();
			}
			
			

		try {
			if(this.jInternalFrameDetalleFormTipoFormaPago.jLabelidTipoFormaPago.getText()==null || this.jInternalFrameDetalleFormTipoFormaPago.jLabelidTipoFormaPago.getText()=="" || this.jInternalFrameDetalleFormTipoFormaPago.jLabelidTipoFormaPago.getText()=="Id") {
				this.jInternalFrameDetalleFormTipoFormaPago.jLabelidTipoFormaPago.setText("0");
			}

			if(conColumnasBase) {tipoformapago.setId(Long.parseLong(this.jInternalFrameDetalleFormTipoFormaPago.jLabelidTipoFormaPago.getText()));}
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+TipoFormaPagoConstantesFunciones.LABEL_ID+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormTipoFormaPago.jLabelIdTipoFormaPago,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			tipoformapago.setnombre(this.jInternalFrameDetalleFormTipoFormaPago.jTextAreanombreTipoFormaPago.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+TipoFormaPagoConstantesFunciones.LABEL_NOMBRE+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormTipoFormaPago.jLabelnombreTipoFormaPago,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			tipoformapago.setsiglas(this.jInternalFrameDetalleFormTipoFormaPago.jTextFieldsiglasTipoFormaPago.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+TipoFormaPagoConstantesFunciones.LABEL_SIGLAS+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormTipoFormaPago.jLabelsiglasTipoFormaPago,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			tipoformapago.setcon_detalle(this.jInternalFrameDetalleFormTipoFormaPago.jCheckBoxcon_detalleTipoFormaPago.isSelected());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+TipoFormaPagoConstantesFunciones.LABEL_CONDETALLE+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormTipoFormaPago.jLabelcon_detalleTipoFormaPago,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			tipoformapago.setcon_cuotas(this.jInternalFrameDetalleFormTipoFormaPago.jCheckBoxcon_cuotasTipoFormaPago.isSelected());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+TipoFormaPagoConstantesFunciones.LABEL_CONCUOTAS+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormTipoFormaPago.jLabelcon_cuotasTipoFormaPago,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			tipoformapago.setdescripcion(this.jInternalFrameDetalleFormTipoFormaPago.jTextAreadescripcionTipoFormaPago.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+TipoFormaPagoConstantesFunciones.LABEL_DESCRIPCION+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormTipoFormaPago.jLabeldescripcionTipoFormaPago,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}
			
			if(!estaValidado) {
				throw new Exception(sMensajeCampoActual);
			}
		} catch(NumberFormatException e) {
			throw new Exception(sMensajeCampoActual);
			//FuncionesSwing.manageException(this, e,logger,MovimientoInventarioConstantesFunciones.CLASSNAME);
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,TipoFormaPagoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setVariablesForeignKeyObjetoBeanDefectoActualToObjetoActualTipoFormaPago(TipoFormaPago tipoformapagoBean,TipoFormaPago tipoformapago,Boolean conDefault,Boolean conColumnasBase) throws Exception { 
		try {
			
			if(conDefault || (!conDefault && tipoformapagoBean.getid_tipo_grupo_forma_pago()!=null && !tipoformapagoBean.getid_tipo_grupo_forma_pago().equals(-1L))) {tipoformapago.setid_tipo_grupo_forma_pago(tipoformapagoBean.getid_tipo_grupo_forma_pago());}
			if(conDefault || (!conDefault && tipoformapagoBean.getid_transaccion()!=null && !tipoformapagoBean.getid_transaccion().equals(null))) {tipoformapago.setid_transaccion(tipoformapagoBean.getid_transaccion());}
			if(conDefault || (!conDefault && tipoformapagoBean.getid_cuenta_contable()!=null && !tipoformapagoBean.getid_cuenta_contable().equals(null))) {tipoformapago.setid_cuenta_contable(tipoformapagoBean.getid_cuenta_contable());}
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,TipoFormaPagoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setCopiarVariablesObjetosTipoFormaPago(TipoFormaPago tipoformapagoOrigen,TipoFormaPago tipoformapago,Boolean conDefault,Boolean conColumnasBase) throws Exception { 
		try {
			
			if(conColumnasBase) {if(conDefault || (!conDefault && tipoformapagoOrigen.getId()!=null && !tipoformapagoOrigen.getId().equals(0L))) {tipoformapago.setId(tipoformapagoOrigen.getId());}}
			if(conDefault || (!conDefault && tipoformapagoOrigen.getid_tipo_grupo_forma_pago()!=null && !tipoformapagoOrigen.getid_tipo_grupo_forma_pago().equals(-1L))) {tipoformapago.setid_tipo_grupo_forma_pago(tipoformapagoOrigen.getid_tipo_grupo_forma_pago());}
			if(conDefault || (!conDefault && tipoformapagoOrigen.getnombre()!=null && !tipoformapagoOrigen.getnombre().equals(""))) {tipoformapago.setnombre(tipoformapagoOrigen.getnombre());}
			if(conDefault || (!conDefault && tipoformapagoOrigen.getsiglas()!=null && !tipoformapagoOrigen.getsiglas().equals(""))) {tipoformapago.setsiglas(tipoformapagoOrigen.getsiglas());}
			if(conDefault || (!conDefault && tipoformapagoOrigen.getcon_detalle()!=null && !tipoformapagoOrigen.getcon_detalle().equals(false))) {tipoformapago.setcon_detalle(tipoformapagoOrigen.getcon_detalle());}
			if(conDefault || (!conDefault && tipoformapagoOrigen.getcon_cuotas()!=null && !tipoformapagoOrigen.getcon_cuotas().equals(false))) {tipoformapago.setcon_cuotas(tipoformapagoOrigen.getcon_cuotas());}
			if(conDefault || (!conDefault && tipoformapagoOrigen.getid_tipo_transaccion_modulo()!=null && !tipoformapagoOrigen.getid_tipo_transaccion_modulo().equals(null))) {tipoformapago.setid_tipo_transaccion_modulo(tipoformapagoOrigen.getid_tipo_transaccion_modulo());}
			if(conDefault || (!conDefault && tipoformapagoOrigen.getid_transaccion()!=null && !tipoformapagoOrigen.getid_transaccion().equals(null))) {tipoformapago.setid_transaccion(tipoformapagoOrigen.getid_transaccion());}
			if(conDefault || (!conDefault && tipoformapagoOrigen.getid_cuenta_contable()!=null && !tipoformapagoOrigen.getid_cuenta_contable().equals(null))) {tipoformapago.setid_cuenta_contable(tipoformapagoOrigen.getid_cuenta_contable());}
			if(conDefault || (!conDefault && tipoformapagoOrigen.getdescripcion()!=null && !tipoformapagoOrigen.getdescripcion().equals(""))) {tipoformapago.setdescripcion(tipoformapagoOrigen.getdescripcion());}
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,TipoFormaPagoConstantesFunciones.CLASSNAME);
		}
	}
	
	/*
	public void setVariablesObjetoBeanActualToFormularioTipoFormaPago(TipoFormaPago tipoformapago) throws Exception { 
		try {
			
			this.jInternalFrameDetalleFormTipoFormaPago.jLabelidTipoFormaPago.setText(tipoformapago.getId().toString());
			this.jInternalFrameDetalleFormTipoFormaPago.jTextAreanombreTipoFormaPago.setText(tipoformapago.getnombre());
			this.jInternalFrameDetalleFormTipoFormaPago.jTextFieldsiglasTipoFormaPago.setText(tipoformapago.getsiglas());
			this.jInternalFrameDetalleFormTipoFormaPago.jCheckBoxcon_detalleTipoFormaPago.setSelected(tipoformapago.getcon_detalle());
			this.jInternalFrameDetalleFormTipoFormaPago.jCheckBoxcon_cuotasTipoFormaPago.setSelected(tipoformapago.getcon_cuotas());
			this.jInternalFrameDetalleFormTipoFormaPago.jTextAreadescripcionTipoFormaPago.setText(tipoformapago.getdescripcion());
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,TipoFormaPagoConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesObjetoBeanActualToFormularioTipoFormaPago(TipoFormaPagoBean tipoformapagoBean) throws Exception { 
		try {
			
			this.jInternalFrameDetalleFormTipoFormaPago.jLabelidTipoFormaPago.setText(tipoformapagoBean.getId().toString());
			this.jInternalFrameDetalleFormTipoFormaPago.jTextAreanombreTipoFormaPago.setText(tipoformapagoBean.getnombre());
			this.jInternalFrameDetalleFormTipoFormaPago.jTextFieldsiglasTipoFormaPago.setText(tipoformapagoBean.getsiglas());
			this.jInternalFrameDetalleFormTipoFormaPago.jCheckBoxcon_detalleTipoFormaPago.setSelected(tipoformapagoBean.getcon_detalle());
			this.jInternalFrameDetalleFormTipoFormaPago.jCheckBoxcon_cuotasTipoFormaPago.setSelected(tipoformapagoBean.getcon_cuotas());
			this.jInternalFrameDetalleFormTipoFormaPago.jTextAreadescripcionTipoFormaPago.setText(tipoformapagoBean.getdescripcion());
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,TipoFormaPagoConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesObjetoReturnGeneralToBeanTipoFormaPago(TipoFormaPagoParameterReturnGeneral tipoformapagoReturnGeneral,TipoFormaPagoBean tipoformapagoBean,Boolean conDefault) throws Exception { 
		try {
			TipoFormaPago tipoformapagoLocal=new TipoFormaPago();
			
			tipoformapagoLocal=tipoformapagoReturnGeneral.getTipoFormaPago();
			
			
			if(conColumnasBase) {if(conDefault || (!conDefault && tipoformapagoLocal.getId()!=null && !tipoformapagoLocal.getId().equals(0L))) {tipoformapagoBean.setId(tipoformapagoLocal.getId());}}
			if(conDefault || (!conDefault && tipoformapagoLocal.getid_tipo_grupo_forma_pago()!=null && !tipoformapagoLocal.getid_tipo_grupo_forma_pago().equals(-1L))) {tipoformapagoBean.setid_tipo_grupo_forma_pago(tipoformapagoLocal.getid_tipo_grupo_forma_pago());}
			if(conDefault || (!conDefault && tipoformapagoLocal.getnombre()!=null && !tipoformapagoLocal.getnombre().equals(""))) {tipoformapagoBean.setnombre(tipoformapagoLocal.getnombre());}
			if(conDefault || (!conDefault && tipoformapagoLocal.getsiglas()!=null && !tipoformapagoLocal.getsiglas().equals(""))) {tipoformapagoBean.setsiglas(tipoformapagoLocal.getsiglas());}
			if(conDefault || (!conDefault && tipoformapagoLocal.getcon_detalle()!=null && !tipoformapagoLocal.getcon_detalle().equals(false))) {tipoformapagoBean.setcon_detalle(tipoformapagoLocal.getcon_detalle());}
			if(conDefault || (!conDefault && tipoformapagoLocal.getcon_cuotas()!=null && !tipoformapagoLocal.getcon_cuotas().equals(false))) {tipoformapagoBean.setcon_cuotas(tipoformapagoLocal.getcon_cuotas());}
			if(conDefault || (!conDefault && tipoformapagoLocal.getid_transaccion()!=null && !tipoformapagoLocal.getid_transaccion().equals(null))) {tipoformapagoBean.setid_transaccion(tipoformapagoLocal.getid_transaccion());}
			if(conDefault || (!conDefault && tipoformapagoLocal.getid_cuenta_contable()!=null && !tipoformapagoLocal.getid_cuenta_contable().equals(null))) {tipoformapagoBean.setid_cuenta_contable(tipoformapagoLocal.getid_cuenta_contable());}
			if(conDefault || (!conDefault && tipoformapagoLocal.getdescripcion()!=null && !tipoformapagoLocal.getdescripcion().equals(""))) {tipoformapagoBean.setdescripcion(tipoformapagoLocal.getdescripcion());}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,TipoFormaPagoConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	@SuppressWarnings("rawtypes")
	public static void setActualComboBoxTipoFormaPagoGenerico(Long idTipoFormaPagoSeleccionado,JComboBox jComboBoxTipoFormaPago,List<TipoFormaPago> tipoformapagosLocal)throws Exception {
		try {
			TipoFormaPago  tipoformapagoTemp=null;

			for(TipoFormaPago tipoformapagoAux:tipoformapagosLocal) {
				if(tipoformapagoAux.getId()!=null && tipoformapagoAux.getId().equals(idTipoFormaPagoSeleccionado)) {
					tipoformapagoTemp=tipoformapagoAux;
					break;
				}
			}

			jComboBoxTipoFormaPago.setSelectedItem(tipoformapagoTemp);

		} catch(Exception e) {
			throw e;
		}
	}
	
	@SuppressWarnings("rawtypes")
	public static void setHotKeysComboBoxTipoFormaPagoGenerico(JComboBox jComboBoxTipoFormaPago,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda)throws Exception {
		try {
			//GLOBAL(id_empresa,id_sucursal,id_ejercicio)
			//BASICO(normal)
			//CON_BUSQUEDA(Permite buscar Fk)
			
			String sKeyStrokeName="";
			KeyStroke keyStrokeControl=null;
			
			if(!sTipoBusqueda.equals("GLOBAL")) {
				
				//BUSCAR
				sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_BUSCAR");
				keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_BUSCAR");
				
				jComboBoxTipoFormaPago.getInputMap().put(keyStrokeControl, sKeyStrokeName);
				jComboBoxTipoFormaPago.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction+"Busqueda"));
				//BUSCAR
				
				
				//ACTUALIZAR
				sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_ACTUALIZAR");
				keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_ACTUALIZAR");
				
				jComboBoxTipoFormaPago.getInputMap().put(keyStrokeControl, sKeyStrokeName);
				jComboBoxTipoFormaPago.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction+"Update"));
				//ACTUALIZAR
				
				if(sTipoBusqueda.contains("CON_EVENT_CHANGE")) {
					if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
						jComboBoxTipoFormaPago.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
						jComboBoxTipoFormaPago.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));						
					}
					
					/*
					if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
						jComboBoxTipoFormaPago.addItemListener(new ComboBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
					} else {
						jComboBoxTipoFormaPago.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
					}
					*/
				}								
				
				//CON_BUSQUEDA								
				if(sTipoBusqueda.contains("CON_BUSQUEDA")) {
					sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_BUSQUEDA");
					keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_BUSQUEDA");
							
					jComboBoxTipoFormaPago.getInputMap().put(keyStrokeControl, sKeyStrokeName);
					jComboBoxTipoFormaPago.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction));
				}
				//CON_BUSQUEDA
				
				
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	@SuppressWarnings("rawtypes")
	public void setHotKeysComboBoxGenerico(JComboBox jComboBox,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		if(sTipoBusqueda.contains("CON_EVENT_CHANGE")) {
			if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
				jComboBox.addItemListener(new ComboBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
				jComboBox.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
			} else {
				jComboBox.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
				jComboBox.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
			}
		}
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJTextFieldGenerico(JTextField jTextField,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jTextField.addFocusListener(new TextFieldFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		jTextField.addActionListener(new TextFieldActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJTextAreaGenerico(JTextArea jTextArea,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jTextArea.addFocusListener(new TextAreaFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//NO EXISTE
		//jTextArea.addActionListener(new TextAreaActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJLabelGenerico(JLabel jLabel,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jLabel.addFocusListener(new LabelFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//NO EXISTE
		//jLabel.addActionListener(new LabelActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJCheckBoxGenerico(JCheckBox jCheckBox,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jCheckBox.addFocusListener(new CheckBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//SI SE DEFINE AL CAMBIAR VALOR, ESTE NUEVO VALOR NO SE ENVIA AL EVENTO
		//jCheckBox.addItemListener(new CheckBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJDateChooserGenerico(JDateChooser jDateChooser,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		FuncionesSwing.addDateListener(jDateChooser, jInternalFrameBase, sNombreHotKeyAbstractAction);
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJButtonGenerico(JButton jButton,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jButton.addActionListener(new ButtonActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	public void jButtonRelacionActionPerformed(String sTipo,ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado) {
		//ABRIR RELACIONES
		try {
			
		if(sTipo.equals("RegistroFormaPagoBanco")) {
			jButtonRegistroFormaPagoBancoActionPerformed(evt,rowIndex,true,false,null);
		}
		 else if(sTipo.equals("DetaFormaPagoFactu")) {
			jButtonDetaFormaPagoFactuActionPerformed(evt,rowIndex,true,false,null);
		}
		 else if(sTipo.equals("GrupoClienteFormaPago")) {
			jButtonGrupoClienteFormaPagoActionPerformed(evt,rowIndex,true,false,null);
		}
		 else if(sTipo.equals("DetaFormaPago")) {
			jButtonDetaFormaPagoActionPerformed(evt,rowIndex,true,false,null);
		}
		 else if(sTipo.equals("FormaPagoPuntoVenta")) {
			jButtonFormaPagoPuntoVentaActionPerformed(evt,rowIndex,true,false,null);
		}
		 else if(sTipo.equals("FormaPago")) {
			jButtonFormaPagoActionPerformed(evt,rowIndex,true,false,null);
		}
		 else if(sTipo.equals("FormaPagoInven")) {
			jButtonFormaPagoInvenActionPerformed(evt,rowIndex,true,false,null);
		}
		 else if(sTipo.equals("CierreCaja")) {
			jButtonCierreCajaActionPerformed(evt,rowIndex,true,false,null);
		}
		} catch (Exception e) {
			FuncionesSwing.manageException2(this, e,logger,TipoFormaPagoConstantesFunciones.CLASSNAME);
		}
	}
	
	public String getDescripcionFk(String sTipo,JTable table,Object value,int intSelectedRow) throws Exception {
		//DESCRIPCIONES FK		
		String sDescripcion="";
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			tipoformapago=(TipoFormaPago) tipoformapagoLogic.getTipoFormaPagos().toArray()[table.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE) {
			tipoformapago =(TipoFormaPago) tipoformapagos.toArray()[table.convertRowIndexToModel(intSelectedRow)];
		}
					
		
		if(sTipo.equals("Empresa")) {
			//sDescripcion=this.getActualEmpresaForeignKeyDescripcion((Long)value);
			if(!tipoformapago.getIsNew() && !tipoformapago.getIsChanged() && !tipoformapago.getIsDeleted()) {
				sDescripcion=tipoformapago.getempresa_descripcion();
			} else {
				//sDescripcion=this.getActualEmpresaForeignKeyDescripcion((Long)value);
				sDescripcion=tipoformapago.getempresa_descripcion();
			}
		}

		if(sTipo.equals("Sucursal")) {
			//sDescripcion=this.getActualSucursalForeignKeyDescripcion((Long)value);
			if(!tipoformapago.getIsNew() && !tipoformapago.getIsChanged() && !tipoformapago.getIsDeleted()) {
				sDescripcion=tipoformapago.getsucursal_descripcion();
			} else {
				//sDescripcion=this.getActualSucursalForeignKeyDescripcion((Long)value);
				sDescripcion=tipoformapago.getsucursal_descripcion();
			}
		}

		if(sTipo.equals("Modulo")) {
			//sDescripcion=this.getActualModuloForeignKeyDescripcion((Long)value);
			if(!tipoformapago.getIsNew() && !tipoformapago.getIsChanged() && !tipoformapago.getIsDeleted()) {
				sDescripcion=tipoformapago.getmodulo_descripcion();
			} else {
				//sDescripcion=this.getActualModuloForeignKeyDescripcion((Long)value);
				sDescripcion=tipoformapago.getmodulo_descripcion();
			}
		}

		if(sTipo.equals("TipoGrupoFormaPago")) {
			//sDescripcion=this.getActualTipoGrupoFormaPagoForeignKeyDescripcion((Long)value);
			if(!tipoformapago.getIsNew() && !tipoformapago.getIsChanged() && !tipoformapago.getIsDeleted()) {
				sDescripcion=tipoformapago.gettipogrupoformapago_descripcion();
			} else {
				//sDescripcion=this.getActualTipoGrupoFormaPagoForeignKeyDescripcion((Long)value);
				sDescripcion=tipoformapago.gettipogrupoformapago_descripcion();
			}
		}

		if(sTipo.equals("TipoTransaccionModulo")) {
			//sDescripcion=this.getActualTipoTransaccionModuloForeignKeyDescripcion((Long)value);
			if(!tipoformapago.getIsNew() && !tipoformapago.getIsChanged() && !tipoformapago.getIsDeleted()) {
				sDescripcion=tipoformapago.gettipotransaccionmodulo_descripcion();
			} else {
				//sDescripcion=this.getActualTipoTransaccionModuloForeignKeyDescripcion((Long)value);
				sDescripcion=tipoformapago.gettipotransaccionmodulo_descripcion();
			}
		}

		if(sTipo.equals("Transaccion")) {
			//sDescripcion=this.getActualTransaccionForeignKeyDescripcion((Long)value);
			if(!tipoformapago.getIsNew() && !tipoformapago.getIsChanged() && !tipoformapago.getIsDeleted()) {
				sDescripcion=tipoformapago.gettransaccion_descripcion();
			} else {
				//ES DEPENDIENTE, SE FORZA DESDE DESCRIPCION
				sDescripcion=tipoformapago.gettransaccion_descripcion();
			}
		}

		if(sTipo.equals("CuentaContable")) {
			//sDescripcion=this.getActualCuentaContableForeignKeyDescripcion((Long)value);
			if(!tipoformapago.getIsNew() && !tipoformapago.getIsChanged() && !tipoformapago.getIsDeleted()) {
				sDescripcion=tipoformapago.getcuentacontable_descripcion();
			} else {
				//sDescripcion=this.getActualCuentaContableForeignKeyDescripcion((Long)value);
				sDescripcion=tipoformapago.getcuentacontable_descripcion();
			}
		}

		
		return sDescripcion;
	}
	
	public Color getColorFk(String sTipo,JTable table,Object value,int intSelectedRow) throws Exception {
		//DESCRIPCIONES FK		
		Color color=Color.WHITE;
		
		TipoFormaPago tipoformapagoRow=new TipoFormaPago();
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			tipoformapagoRow=(TipoFormaPago) tipoformapagoLogic.getTipoFormaPagos().toArray()[table.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE) {
			tipoformapagoRow=(TipoFormaPago) tipoformapagos.toArray()[table.convertRowIndexToModel(intSelectedRow)];
		}
					
		
		
		return color;
	}
	
	
	
	
	public void jButtonRegistroFormaPagoBancoActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,TipoFormaPago tipoformapago) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormTipoFormaPago==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoformapagoLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.tipoformapago = (TipoFormaPago)this.tipoformapagoLogic.getTipoFormaPagos().toArray()[this.jTableDatosTipoFormaPago.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.tipoformapago = (TipoFormaPago)this.tipoformapagos.toArray()[this.jTableDatosTipoFormaPago.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(tipoformapago!=null) {
						this.tipoformapago = tipoformapago;
					} else {
						this.tipoformapago = new TipoFormaPago();
					}
				}

				if(this.isTienePermisosRegistroFormaPagoBanco && this.permiteMantenimiento(this.tipoformapago)) {
					RegistroFormaPagoBancoBeanSwingJInternalFrame registroformapagobancoBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormTipoFormaPago.registroformapagobancoBeanSwingJInternalFramePopup=new RegistroFormaPagoBancoBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormTipoFormaPago.registroformapagobancoBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						registroformapagobancoBeanSwingJInternalFrame=this.jInternalFrameDetalleFormTipoFormaPago.registroformapagobancoBeanSwingJInternalFramePopup;
					} else {
						registroformapagobancoBeanSwingJInternalFrame=this.jInternalFrameDetalleFormTipoFormaPago.registroformapagobancoBeanSwingJInternalFrame;
					}

					List<TipoFormaPago> tipoformapagos=new ArrayList<TipoFormaPago>();
					tipoformapagos.add(this.tipoformapago);
					if(!esRelacionado) {
						//registroformapagobancoBeanSwingJInternalFrame.registroformapagobancoSessionBean.setConGuardarRelaciones(false);
						//registroformapagobancoBeanSwingJInternalFrame.registroformapagobancoSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					registroformapagobancoBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormTipoFormaPago.cargarRegistroFormaPagoBancoBeanSwingJInternalFrame(tipoformapagos,this.tipoformapago,registroformapagobancoBeanSwingJInternalFrame,/*conInicializar,*/registroformapagobancoBeanSwingJInternalFrame.registroformapagobancoSessionBean.getConGuardarRelaciones(),registroformapagobancoBeanSwingJInternalFrame.registroformapagobancoSessionBean.getEsGuardarRelacionado());
					registroformapagobancoBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						registroformapagobancoBeanSwingJInternalFrame.actualizarEstadoPanelsRegistroFormaPagoBanco("no_relacionado");

						registroformapagobancoBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(RegistroFormaPagoBancoConstantesFunciones.ITAMANIOFILATABLA + (RegistroFormaPagoBancoConstantesFunciones.ITAMANIOFILATABLA/2));

						registroformapagobancoBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderTipoFormaPago=(TitledBorder)this.jScrollPanelDatosTipoFormaPago.getBorder();
						TitledBorder titledBorderRegistroFormaPagoBanco=(TitledBorder)registroformapagobancoBeanSwingJInternalFrame.jScrollPanelDatosRegistroFormaPagoBanco.getBorder();

						titledBorderRegistroFormaPagoBanco.setTitle(titledBorderTipoFormaPago.getTitle() + " -> Registro Forma Pago Banco");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,registroformapagobancoBeanSwingJInternalFrame);
						}

						registroformapagobancoBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(registroformapagobancoBeanSwingJInternalFrame);

						registroformapagobancoBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.tipoformapagoSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Registro Forma Pago Banco",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoformapagoLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoformapagoLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,TipoFormaPagoConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoformapagoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonDetaFormaPagoFactuActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,TipoFormaPago tipoformapago) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormTipoFormaPago==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoformapagoLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.tipoformapago = (TipoFormaPago)this.tipoformapagoLogic.getTipoFormaPagos().toArray()[this.jTableDatosTipoFormaPago.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.tipoformapago = (TipoFormaPago)this.tipoformapagos.toArray()[this.jTableDatosTipoFormaPago.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(tipoformapago!=null) {
						this.tipoformapago = tipoformapago;
					} else {
						this.tipoformapago = new TipoFormaPago();
					}
				}

				if(this.isTienePermisosDetaFormaPagoFactu && this.permiteMantenimiento(this.tipoformapago)) {
					DetaFormaPagoFactuBeanSwingJInternalFrame detaformapagofactuBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormTipoFormaPago.detaformapagofactuBeanSwingJInternalFramePopup=new DetaFormaPagoFactuBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormTipoFormaPago.detaformapagofactuBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						detaformapagofactuBeanSwingJInternalFrame=this.jInternalFrameDetalleFormTipoFormaPago.detaformapagofactuBeanSwingJInternalFramePopup;
					} else {
						detaformapagofactuBeanSwingJInternalFrame=this.jInternalFrameDetalleFormTipoFormaPago.detaformapagofactuBeanSwingJInternalFrame;
					}

					List<TipoFormaPago> tipoformapagos=new ArrayList<TipoFormaPago>();
					tipoformapagos.add(this.tipoformapago);
					if(!esRelacionado) {
						//detaformapagofactuBeanSwingJInternalFrame.detaformapagofactuSessionBean.setConGuardarRelaciones(false);
						//detaformapagofactuBeanSwingJInternalFrame.detaformapagofactuSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					detaformapagofactuBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormTipoFormaPago.cargarDetaFormaPagoFactuBeanSwingJInternalFrame(tipoformapagos,this.tipoformapago,detaformapagofactuBeanSwingJInternalFrame,/*conInicializar,*/detaformapagofactuBeanSwingJInternalFrame.detaformapagofactuSessionBean.getConGuardarRelaciones(),detaformapagofactuBeanSwingJInternalFrame.detaformapagofactuSessionBean.getEsGuardarRelacionado());
					detaformapagofactuBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						detaformapagofactuBeanSwingJInternalFrame.actualizarEstadoPanelsDetaFormaPagoFactu("no_relacionado");

						detaformapagofactuBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(DetaFormaPagoFactuConstantesFunciones.ITAMANIOFILATABLA + (DetaFormaPagoFactuConstantesFunciones.ITAMANIOFILATABLA/2));

						detaformapagofactuBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderTipoFormaPago=(TitledBorder)this.jScrollPanelDatosTipoFormaPago.getBorder();
						TitledBorder titledBorderDetaFormaPagoFactu=(TitledBorder)detaformapagofactuBeanSwingJInternalFrame.jScrollPanelDatosDetaFormaPagoFactu.getBorder();

						titledBorderDetaFormaPagoFactu.setTitle(titledBorderTipoFormaPago.getTitle() + " -> Deta Forma Pago Factu");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,detaformapagofactuBeanSwingJInternalFrame);
						}

						detaformapagofactuBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(detaformapagofactuBeanSwingJInternalFrame);

						detaformapagofactuBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.tipoformapagoSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Deta Forma Pago Factu",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoformapagoLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoformapagoLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,TipoFormaPagoConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoformapagoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonGrupoClienteFormaPagoActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,TipoFormaPago tipoformapago) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormTipoFormaPago==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoformapagoLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.tipoformapago = (TipoFormaPago)this.tipoformapagoLogic.getTipoFormaPagos().toArray()[this.jTableDatosTipoFormaPago.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.tipoformapago = (TipoFormaPago)this.tipoformapagos.toArray()[this.jTableDatosTipoFormaPago.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(tipoformapago!=null) {
						this.tipoformapago = tipoformapago;
					} else {
						this.tipoformapago = new TipoFormaPago();
					}
				}

				if(this.isTienePermisosGrupoClienteFormaPago && this.permiteMantenimiento(this.tipoformapago)) {
					GrupoClienteFormaPagoBeanSwingJInternalFrame grupoclienteformapagoBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormTipoFormaPago.grupoclienteformapagoBeanSwingJInternalFramePopup=new GrupoClienteFormaPagoBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormTipoFormaPago.grupoclienteformapagoBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						grupoclienteformapagoBeanSwingJInternalFrame=this.jInternalFrameDetalleFormTipoFormaPago.grupoclienteformapagoBeanSwingJInternalFramePopup;
					} else {
						grupoclienteformapagoBeanSwingJInternalFrame=this.jInternalFrameDetalleFormTipoFormaPago.grupoclienteformapagoBeanSwingJInternalFrame;
					}

					List<TipoFormaPago> tipoformapagos=new ArrayList<TipoFormaPago>();
					tipoformapagos.add(this.tipoformapago);
					if(!esRelacionado) {
						//grupoclienteformapagoBeanSwingJInternalFrame.grupoclienteformapagoSessionBean.setConGuardarRelaciones(false);
						//grupoclienteformapagoBeanSwingJInternalFrame.grupoclienteformapagoSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					grupoclienteformapagoBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormTipoFormaPago.cargarGrupoClienteFormaPagoBeanSwingJInternalFrame(tipoformapagos,this.tipoformapago,grupoclienteformapagoBeanSwingJInternalFrame,/*conInicializar,*/grupoclienteformapagoBeanSwingJInternalFrame.grupoclienteformapagoSessionBean.getConGuardarRelaciones(),grupoclienteformapagoBeanSwingJInternalFrame.grupoclienteformapagoSessionBean.getEsGuardarRelacionado());
					grupoclienteformapagoBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						grupoclienteformapagoBeanSwingJInternalFrame.actualizarEstadoPanelsGrupoClienteFormaPago("no_relacionado");

						grupoclienteformapagoBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(GrupoClienteFormaPagoConstantesFunciones.ITAMANIOFILATABLA + (GrupoClienteFormaPagoConstantesFunciones.ITAMANIOFILATABLA/2));

						grupoclienteformapagoBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderTipoFormaPago=(TitledBorder)this.jScrollPanelDatosTipoFormaPago.getBorder();
						TitledBorder titledBorderGrupoClienteFormaPago=(TitledBorder)grupoclienteformapagoBeanSwingJInternalFrame.jScrollPanelDatosGrupoClienteFormaPago.getBorder();

						titledBorderGrupoClienteFormaPago.setTitle(titledBorderTipoFormaPago.getTitle() + " -> Grupo Cliente Forma Pago");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,grupoclienteformapagoBeanSwingJInternalFrame);
						}

						grupoclienteformapagoBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(grupoclienteformapagoBeanSwingJInternalFrame);

						grupoclienteformapagoBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.tipoformapagoSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Grupo Cliente Forma Pago",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoformapagoLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoformapagoLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,TipoFormaPagoConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoformapagoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonDetaFormaPagoActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,TipoFormaPago tipoformapago) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormTipoFormaPago==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoformapagoLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.tipoformapago = (TipoFormaPago)this.tipoformapagoLogic.getTipoFormaPagos().toArray()[this.jTableDatosTipoFormaPago.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.tipoformapago = (TipoFormaPago)this.tipoformapagos.toArray()[this.jTableDatosTipoFormaPago.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(tipoformapago!=null) {
						this.tipoformapago = tipoformapago;
					} else {
						this.tipoformapago = new TipoFormaPago();
					}
				}

				if(this.isTienePermisosDetaFormaPago && this.permiteMantenimiento(this.tipoformapago)) {
					DetaFormaPagoBeanSwingJInternalFrame detaformapagoBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormTipoFormaPago.detaformapagoBeanSwingJInternalFramePopup=new DetaFormaPagoBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormTipoFormaPago.detaformapagoBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						detaformapagoBeanSwingJInternalFrame=this.jInternalFrameDetalleFormTipoFormaPago.detaformapagoBeanSwingJInternalFramePopup;
					} else {
						detaformapagoBeanSwingJInternalFrame=this.jInternalFrameDetalleFormTipoFormaPago.detaformapagoBeanSwingJInternalFrame;
					}

					List<TipoFormaPago> tipoformapagos=new ArrayList<TipoFormaPago>();
					tipoformapagos.add(this.tipoformapago);
					if(!esRelacionado) {
						//detaformapagoBeanSwingJInternalFrame.detaformapagoSessionBean.setConGuardarRelaciones(false);
						//detaformapagoBeanSwingJInternalFrame.detaformapagoSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					detaformapagoBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormTipoFormaPago.cargarDetaFormaPagoBeanSwingJInternalFrame(tipoformapagos,this.tipoformapago,detaformapagoBeanSwingJInternalFrame,/*conInicializar,*/detaformapagoBeanSwingJInternalFrame.detaformapagoSessionBean.getConGuardarRelaciones(),detaformapagoBeanSwingJInternalFrame.detaformapagoSessionBean.getEsGuardarRelacionado());
					detaformapagoBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						detaformapagoBeanSwingJInternalFrame.actualizarEstadoPanelsDetaFormaPago("no_relacionado");

						detaformapagoBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(DetaFormaPagoConstantesFunciones.ITAMANIOFILATABLA + (DetaFormaPagoConstantesFunciones.ITAMANIOFILATABLA/2));

						detaformapagoBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderTipoFormaPago=(TitledBorder)this.jScrollPanelDatosTipoFormaPago.getBorder();
						TitledBorder titledBorderDetaFormaPago=(TitledBorder)detaformapagoBeanSwingJInternalFrame.jScrollPanelDatosDetaFormaPago.getBorder();

						titledBorderDetaFormaPago.setTitle(titledBorderTipoFormaPago.getTitle() + " -> Deta Forma Pago");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,detaformapagoBeanSwingJInternalFrame);
						}

						detaformapagoBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(detaformapagoBeanSwingJInternalFrame);

						detaformapagoBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.tipoformapagoSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Deta Forma Pago",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoformapagoLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoformapagoLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,TipoFormaPagoConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoformapagoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonFormaPagoPuntoVentaActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,TipoFormaPago tipoformapago) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormTipoFormaPago==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoformapagoLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.tipoformapago = (TipoFormaPago)this.tipoformapagoLogic.getTipoFormaPagos().toArray()[this.jTableDatosTipoFormaPago.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.tipoformapago = (TipoFormaPago)this.tipoformapagos.toArray()[this.jTableDatosTipoFormaPago.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(tipoformapago!=null) {
						this.tipoformapago = tipoformapago;
					} else {
						this.tipoformapago = new TipoFormaPago();
					}
				}

				if(this.isTienePermisosFormaPagoPuntoVenta && this.permiteMantenimiento(this.tipoformapago)) {
					FormaPagoPuntoVentaBeanSwingJInternalFrame formapagopuntoventaBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormTipoFormaPago.formapagopuntoventaBeanSwingJInternalFramePopup=new FormaPagoPuntoVentaBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormTipoFormaPago.formapagopuntoventaBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						formapagopuntoventaBeanSwingJInternalFrame=this.jInternalFrameDetalleFormTipoFormaPago.formapagopuntoventaBeanSwingJInternalFramePopup;
					} else {
						formapagopuntoventaBeanSwingJInternalFrame=this.jInternalFrameDetalleFormTipoFormaPago.formapagopuntoventaBeanSwingJInternalFrame;
					}

					List<TipoFormaPago> tipoformapagos=new ArrayList<TipoFormaPago>();
					tipoformapagos.add(this.tipoformapago);
					if(!esRelacionado) {
						//formapagopuntoventaBeanSwingJInternalFrame.formapagopuntoventaSessionBean.setConGuardarRelaciones(false);
						//formapagopuntoventaBeanSwingJInternalFrame.formapagopuntoventaSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					formapagopuntoventaBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormTipoFormaPago.cargarFormaPagoPuntoVentaBeanSwingJInternalFrame(tipoformapagos,this.tipoformapago,formapagopuntoventaBeanSwingJInternalFrame,/*conInicializar,*/formapagopuntoventaBeanSwingJInternalFrame.formapagopuntoventaSessionBean.getConGuardarRelaciones(),formapagopuntoventaBeanSwingJInternalFrame.formapagopuntoventaSessionBean.getEsGuardarRelacionado());
					formapagopuntoventaBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						formapagopuntoventaBeanSwingJInternalFrame.actualizarEstadoPanelsFormaPagoPuntoVenta("no_relacionado");

						formapagopuntoventaBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(FormaPagoPuntoVentaConstantesFunciones.ITAMANIOFILATABLA + (FormaPagoPuntoVentaConstantesFunciones.ITAMANIOFILATABLA/2));

						formapagopuntoventaBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderTipoFormaPago=(TitledBorder)this.jScrollPanelDatosTipoFormaPago.getBorder();
						TitledBorder titledBorderFormaPagoPuntoVenta=(TitledBorder)formapagopuntoventaBeanSwingJInternalFrame.jScrollPanelDatosFormaPagoPuntoVenta.getBorder();

						titledBorderFormaPagoPuntoVenta.setTitle(titledBorderTipoFormaPago.getTitle() + " -> Forma Pago");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,formapagopuntoventaBeanSwingJInternalFrame);
						}

						formapagopuntoventaBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(formapagopuntoventaBeanSwingJInternalFrame);

						formapagopuntoventaBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.tipoformapagoSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Forma Pago",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoformapagoLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoformapagoLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,TipoFormaPagoConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoformapagoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonFormaPagoActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,TipoFormaPago tipoformapago) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormTipoFormaPago==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoformapagoLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.tipoformapago = (TipoFormaPago)this.tipoformapagoLogic.getTipoFormaPagos().toArray()[this.jTableDatosTipoFormaPago.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.tipoformapago = (TipoFormaPago)this.tipoformapagos.toArray()[this.jTableDatosTipoFormaPago.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(tipoformapago!=null) {
						this.tipoformapago = tipoformapago;
					} else {
						this.tipoformapago = new TipoFormaPago();
					}
				}

				if(this.isTienePermisosFormaPago && this.permiteMantenimiento(this.tipoformapago)) {
					FormaPagoBeanSwingJInternalFrame formapagoBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormTipoFormaPago.formapagoBeanSwingJInternalFramePopup=new FormaPagoBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormTipoFormaPago.formapagoBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						formapagoBeanSwingJInternalFrame=this.jInternalFrameDetalleFormTipoFormaPago.formapagoBeanSwingJInternalFramePopup;
					} else {
						formapagoBeanSwingJInternalFrame=this.jInternalFrameDetalleFormTipoFormaPago.formapagoBeanSwingJInternalFrame;
					}

					List<TipoFormaPago> tipoformapagos=new ArrayList<TipoFormaPago>();
					tipoformapagos.add(this.tipoformapago);
					if(!esRelacionado) {
						//formapagoBeanSwingJInternalFrame.formapagoSessionBean.setConGuardarRelaciones(false);
						//formapagoBeanSwingJInternalFrame.formapagoSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					formapagoBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormTipoFormaPago.cargarFormaPagoBeanSwingJInternalFrame(tipoformapagos,this.tipoformapago,formapagoBeanSwingJInternalFrame,/*conInicializar,*/formapagoBeanSwingJInternalFrame.formapagoSessionBean.getConGuardarRelaciones(),formapagoBeanSwingJInternalFrame.formapagoSessionBean.getEsGuardarRelacionado());
					formapagoBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						formapagoBeanSwingJInternalFrame.actualizarEstadoPanelsFormaPago("no_relacionado");

						formapagoBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(FormaPagoConstantesFunciones.ITAMANIOFILATABLA + (FormaPagoConstantesFunciones.ITAMANIOFILATABLA/2));

						formapagoBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderTipoFormaPago=(TitledBorder)this.jScrollPanelDatosTipoFormaPago.getBorder();
						TitledBorder titledBorderFormaPago=(TitledBorder)formapagoBeanSwingJInternalFrame.jScrollPanelDatosFormaPago.getBorder();

						titledBorderFormaPago.setTitle(titledBorderTipoFormaPago.getTitle() + " -> Forma Pago");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,formapagoBeanSwingJInternalFrame);
						}

						formapagoBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(formapagoBeanSwingJInternalFrame);

						formapagoBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.tipoformapagoSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Forma Pago",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoformapagoLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoformapagoLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,TipoFormaPagoConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoformapagoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonFormaPagoInvenActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,TipoFormaPago tipoformapago) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormTipoFormaPago==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoformapagoLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.tipoformapago = (TipoFormaPago)this.tipoformapagoLogic.getTipoFormaPagos().toArray()[this.jTableDatosTipoFormaPago.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.tipoformapago = (TipoFormaPago)this.tipoformapagos.toArray()[this.jTableDatosTipoFormaPago.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(tipoformapago!=null) {
						this.tipoformapago = tipoformapago;
					} else {
						this.tipoformapago = new TipoFormaPago();
					}
				}

				if(this.isTienePermisosFormaPagoInven && this.permiteMantenimiento(this.tipoformapago)) {
					FormaPagoInvenBeanSwingJInternalFrame formapagoinvenBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormTipoFormaPago.formapagoinvenBeanSwingJInternalFramePopup=new FormaPagoInvenBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormTipoFormaPago.formapagoinvenBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						formapagoinvenBeanSwingJInternalFrame=this.jInternalFrameDetalleFormTipoFormaPago.formapagoinvenBeanSwingJInternalFramePopup;
					} else {
						formapagoinvenBeanSwingJInternalFrame=this.jInternalFrameDetalleFormTipoFormaPago.formapagoinvenBeanSwingJInternalFrame;
					}

					List<TipoFormaPago> tipoformapagos=new ArrayList<TipoFormaPago>();
					tipoformapagos.add(this.tipoformapago);
					if(!esRelacionado) {
						//formapagoinvenBeanSwingJInternalFrame.formapagoinvenSessionBean.setConGuardarRelaciones(false);
						//formapagoinvenBeanSwingJInternalFrame.formapagoinvenSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					formapagoinvenBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormTipoFormaPago.cargarFormaPagoInvenBeanSwingJInternalFrame(tipoformapagos,this.tipoformapago,formapagoinvenBeanSwingJInternalFrame,/*conInicializar,*/formapagoinvenBeanSwingJInternalFrame.formapagoinvenSessionBean.getConGuardarRelaciones(),formapagoinvenBeanSwingJInternalFrame.formapagoinvenSessionBean.getEsGuardarRelacionado());
					formapagoinvenBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						formapagoinvenBeanSwingJInternalFrame.actualizarEstadoPanelsFormaPagoInven("no_relacionado");

						formapagoinvenBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(FormaPagoInvenConstantesFunciones.ITAMANIOFILATABLA + (FormaPagoInvenConstantesFunciones.ITAMANIOFILATABLA/2));

						formapagoinvenBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderTipoFormaPago=(TitledBorder)this.jScrollPanelDatosTipoFormaPago.getBorder();
						TitledBorder titledBorderFormaPagoInven=(TitledBorder)formapagoinvenBeanSwingJInternalFrame.jScrollPanelDatosFormaPagoInven.getBorder();

						titledBorderFormaPagoInven.setTitle(titledBorderTipoFormaPago.getTitle() + " -> Forma Pago");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,formapagoinvenBeanSwingJInternalFrame);
						}

						formapagoinvenBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(formapagoinvenBeanSwingJInternalFrame);

						formapagoinvenBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.tipoformapagoSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Forma Pago",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoformapagoLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoformapagoLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,TipoFormaPagoConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoformapagoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonCierreCajaActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,TipoFormaPago tipoformapago) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormTipoFormaPago==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoformapagoLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.tipoformapago = (TipoFormaPago)this.tipoformapagoLogic.getTipoFormaPagos().toArray()[this.jTableDatosTipoFormaPago.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.tipoformapago = (TipoFormaPago)this.tipoformapagos.toArray()[this.jTableDatosTipoFormaPago.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(tipoformapago!=null) {
						this.tipoformapago = tipoformapago;
					} else {
						this.tipoformapago = new TipoFormaPago();
					}
				}

				if(this.isTienePermisosCierreCaja && this.permiteMantenimiento(this.tipoformapago)) {
					CierreCajaBeanSwingJInternalFrame cierrecajaBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormTipoFormaPago.cierrecajaBeanSwingJInternalFramePopup=new CierreCajaBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormTipoFormaPago.cierrecajaBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						cierrecajaBeanSwingJInternalFrame=this.jInternalFrameDetalleFormTipoFormaPago.cierrecajaBeanSwingJInternalFramePopup;
					} else {
						cierrecajaBeanSwingJInternalFrame=this.jInternalFrameDetalleFormTipoFormaPago.cierrecajaBeanSwingJInternalFrame;
					}

					List<TipoFormaPago> tipoformapagos=new ArrayList<TipoFormaPago>();
					tipoformapagos.add(this.tipoformapago);
					if(!esRelacionado) {
						//cierrecajaBeanSwingJInternalFrame.cierrecajaSessionBean.setConGuardarRelaciones(false);
						//cierrecajaBeanSwingJInternalFrame.cierrecajaSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					cierrecajaBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormTipoFormaPago.cargarCierreCajaBeanSwingJInternalFrame(tipoformapagos,this.tipoformapago,cierrecajaBeanSwingJInternalFrame,/*conInicializar,*/cierrecajaBeanSwingJInternalFrame.cierrecajaSessionBean.getConGuardarRelaciones(),cierrecajaBeanSwingJInternalFrame.cierrecajaSessionBean.getEsGuardarRelacionado());
					cierrecajaBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						cierrecajaBeanSwingJInternalFrame.actualizarEstadoPanelsCierreCaja("no_relacionado");

						cierrecajaBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(CierreCajaConstantesFunciones.ITAMANIOFILATABLA + (CierreCajaConstantesFunciones.ITAMANIOFILATABLA/2));

						cierrecajaBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderTipoFormaPago=(TitledBorder)this.jScrollPanelDatosTipoFormaPago.getBorder();
						TitledBorder titledBorderCierreCaja=(TitledBorder)cierrecajaBeanSwingJInternalFrame.jScrollPanelDatosCierreCaja.getBorder();

						titledBorderCierreCaja.setTitle(titledBorderTipoFormaPago.getTitle() + " -> Cierre Caja");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,cierrecajaBeanSwingJInternalFrame);
						}

						cierrecajaBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(cierrecajaBeanSwingJInternalFrame);

						cierrecajaBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.tipoformapagoSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Cierre Caja",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoformapagoLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoformapagoLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,TipoFormaPagoConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoformapagoLogic.closeNewConnexionToDeep();
				}

			}
		}

	
	
	
	public void refrescarBindingTabla(Boolean blnSoloTabla) {
	}
	
	public void inicializarActualizarBindingBotonesManualTipoFormaPago(Boolean esSetControles) {						
		if(esSetControles) {
			this.jButtonNuevoTipoFormaPago.setVisible((this.isVisibilidadCeldaNuevoTipoFormaPago && this.isPermisoNuevoTipoFormaPago));			
			this.jButtonDuplicarTipoFormaPago.setVisible((this.isVisibilidadCeldaDuplicarTipoFormaPago && this.isPermisoDuplicarTipoFormaPago));			
			this.jButtonCopiarTipoFormaPago.setVisible((this.isVisibilidadCeldaCopiarTipoFormaPago && this.isPermisoCopiarTipoFormaPago));
			this.jButtonVerFormTipoFormaPago.setVisible((this.isVisibilidadCeldaVerFormTipoFormaPago && this.isPermisoVerFormTipoFormaPago));
			
			this.jButtonAbrirOrderByTipoFormaPago.setVisible((this.isVisibilidadCeldaOrdenTipoFormaPago && this.isPermisoOrdenTipoFormaPago));			
			
			this.jButtonNuevoRelacionesTipoFormaPago.setVisible((this.isVisibilidadCeldaNuevoRelacionesTipoFormaPago && this.isPermisoNuevoTipoFormaPago));			
			this.jButtonNuevoGuardarCambiosTipoFormaPago.setVisible((this.isVisibilidadCeldaNuevoTipoFormaPago && this.isPermisoNuevoTipoFormaPago && this.isPermisoGuardarCambiosTipoFormaPago));
			
			if(this.jInternalFrameDetalleFormTipoFormaPago!=null) {
			this.jInternalFrameDetalleFormTipoFormaPago.jButtonModificarTipoFormaPago.setVisible((this.isVisibilidadCeldaModificarTipoFormaPago && this.isPermisoActualizarTipoFormaPago));	
			this.jInternalFrameDetalleFormTipoFormaPago.jButtonActualizarTipoFormaPago.setVisible((this.isVisibilidadCeldaActualizarTipoFormaPago && this.isPermisoActualizarTipoFormaPago));	
			this.jInternalFrameDetalleFormTipoFormaPago.jButtonEliminarTipoFormaPago.setVisible((this.isVisibilidadCeldaEliminarTipoFormaPago && this.isPermisoEliminarTipoFormaPago));
			this.jInternalFrameDetalleFormTipoFormaPago.jButtonCancelarTipoFormaPago.setVisible(this.isVisibilidadCeldaCancelarTipoFormaPago);							
			this.jInternalFrameDetalleFormTipoFormaPago.jButtonGuardarCambiosTipoFormaPago.setVisible((this.isVisibilidadCeldaGuardarTipoFormaPago && this.isPermisoGuardarCambiosTipoFormaPago));			
			
			}
						
			this.jButtonGuardarCambiosTablaTipoFormaPago.setVisible((this.isVisibilidadCeldaGuardarCambiosTipoFormaPago && this.isPermisoGuardarCambiosTipoFormaPago));							
			
			//TOOLBAR
			
			this.jButtonNuevoToolBarTipoFormaPago.setVisible((this.isVisibilidadCeldaNuevoTipoFormaPago && this.isPermisoNuevoTipoFormaPago));						
			this.jButtonDuplicarToolBarTipoFormaPago.setVisible((this.isVisibilidadCeldaDuplicarTipoFormaPago && this.isPermisoDuplicarTipoFormaPago));						
			this.jButtonCopiarToolBarTipoFormaPago.setVisible((this.isVisibilidadCeldaCopiarTipoFormaPago && this.isPermisoCopiarTipoFormaPago));			
			this.jButtonVerFormToolBarTipoFormaPago.setVisible((this.isVisibilidadCeldaVerFormTipoFormaPago && this.isPermisoVerFormTipoFormaPago));			
			this.jButtonAbrirOrderByToolBarTipoFormaPago.setVisible((this.isVisibilidadCeldaOrdenTipoFormaPago && this.isPermisoOrdenTipoFormaPago));
			this.jButtonNuevoRelacionesToolBarTipoFormaPago.setVisible((this.isVisibilidadCeldaNuevoRelacionesTipoFormaPago && this.isPermisoNuevoTipoFormaPago));			
			this.jButtonNuevoGuardarCambiosToolBarTipoFormaPago.setVisible((this.isVisibilidadCeldaNuevoTipoFormaPago && this.isPermisoNuevoTipoFormaPago && this.isPermisoGuardarCambiosTipoFormaPago));			
			
			if(this.jInternalFrameDetalleFormTipoFormaPago!=null) {
			this.jInternalFrameDetalleFormTipoFormaPago.jButtonModificarToolBarTipoFormaPago.setVisible((this.isVisibilidadCeldaModificarTipoFormaPago && this.isPermisoActualizarTipoFormaPago));	
			this.jInternalFrameDetalleFormTipoFormaPago.jButtonActualizarToolBarTipoFormaPago.setVisible((this.isVisibilidadCeldaActualizarTipoFormaPago  && this.isPermisoActualizarTipoFormaPago));	
			this.jInternalFrameDetalleFormTipoFormaPago.jButtonEliminarToolBarTipoFormaPago.setVisible((this.isVisibilidadCeldaEliminarTipoFormaPago && this.isPermisoEliminarTipoFormaPago));
			this.jInternalFrameDetalleFormTipoFormaPago.jButtonCancelarToolBarTipoFormaPago.setVisible(this.isVisibilidadCeldaCancelarTipoFormaPago);				
			this.jInternalFrameDetalleFormTipoFormaPago.jButtonGuardarCambiosToolBarTipoFormaPago.setVisible((this.isVisibilidadCeldaGuardarTipoFormaPago && this.isPermisoGuardarCambiosTipoFormaPago));									
			}
			
			this.jButtonGuardarCambiosTablaToolBarTipoFormaPago.setVisible((this.isVisibilidadCeldaGuardarCambiosTipoFormaPago && this.isPermisoGuardarCambiosTipoFormaPago));									
			
			//TOOLBAR
			
			//MENUS
			
			this.jMenuItemNuevoTipoFormaPago.setVisible((this.isVisibilidadCeldaNuevoTipoFormaPago && this.isPermisoNuevoTipoFormaPago));			
			this.jMenuItemDuplicarTipoFormaPago.setVisible((this.isVisibilidadCeldaDuplicarTipoFormaPago && this.isPermisoDuplicarTipoFormaPago));			
			this.jMenuItemCopiarTipoFormaPago.setVisible((this.isVisibilidadCeldaCopiarTipoFormaPago && this.isPermisoCopiarTipoFormaPago));			
			this.jMenuItemVerFormTipoFormaPago.setVisible((this.isVisibilidadCeldaVerFormTipoFormaPago && this.isPermisoVerFormTipoFormaPago));			
			this.jMenuItemAbrirOrderByTipoFormaPago.setVisible((this.isVisibilidadCeldaOrdenTipoFormaPago && this.isPermisoOrdenTipoFormaPago));			
			//this.jMenuItemMostrarOcultarTipoFormaPago.setVisible((this.isVisibilidadCeldaOrdenTipoFormaPago && this.isPermisoOrdenTipoFormaPago));
			this.jMenuItemDetalleAbrirOrderByTipoFormaPago.setVisible((this.isVisibilidadCeldaOrdenTipoFormaPago && this.isPermisoOrdenTipoFormaPago));			
			//this.jMenuItemDetalleMostrarOcultarTipoFormaPago.setVisible((this.isVisibilidadCeldaOrdenTipoFormaPago && this.isPermisoOrdenTipoFormaPago));			
			this.jMenuItemNuevoRelacionesTipoFormaPago.setVisible((this.isVisibilidadCeldaNuevoRelacionesTipoFormaPago && this.isPermisoNuevoTipoFormaPago));			
			this.jMenuItemNuevoGuardarCambiosTipoFormaPago.setVisible((this.isVisibilidadCeldaNuevoTipoFormaPago && this.isPermisoNuevoTipoFormaPago && this.isPermisoGuardarCambiosTipoFormaPago));									
			
			if(this.jInternalFrameDetalleFormTipoFormaPago!=null) {
			this.jInternalFrameDetalleFormTipoFormaPago.jMenuItemModificarTipoFormaPago.setVisible((this.isVisibilidadCeldaModificarTipoFormaPago && this.isPermisoActualizarTipoFormaPago));	
			this.jInternalFrameDetalleFormTipoFormaPago.jMenuItemActualizarTipoFormaPago.setVisible((this.isVisibilidadCeldaActualizarTipoFormaPago && this.isPermisoActualizarTipoFormaPago));	
			this.jInternalFrameDetalleFormTipoFormaPago.jMenuItemEliminarTipoFormaPago.setVisible((this.isVisibilidadCeldaEliminarTipoFormaPago && this.isPermisoEliminarTipoFormaPago));
			this.jInternalFrameDetalleFormTipoFormaPago.jMenuItemCancelarTipoFormaPago.setVisible(this.isVisibilidadCeldaCancelarTipoFormaPago);				
			}
			
			this.jMenuItemGuardarCambiosTipoFormaPago.setVisible((this.isVisibilidadCeldaGuardarTipoFormaPago && this.isPermisoGuardarCambiosTipoFormaPago));						
			this.jMenuItemGuardarCambiosTablaTipoFormaPago.setVisible((this.isVisibilidadCeldaGuardarCambiosTipoFormaPago && this.isPermisoGuardarCambiosTipoFormaPago));						
			
			//MENUS
			
		} else {
			this.isVisibilidadCeldaNuevoTipoFormaPago=this.jButtonNuevoTipoFormaPago.isVisible();
			this.isVisibilidadCeldaDuplicarTipoFormaPago=this.jButtonDuplicarTipoFormaPago.isVisible();
			this.isVisibilidadCeldaCopiarTipoFormaPago=this.jButtonCopiarTipoFormaPago.isVisible();
			this.isVisibilidadCeldaVerFormTipoFormaPago=this.jButtonVerFormTipoFormaPago.isVisible();
			
			this.isVisibilidadCeldaOrdenTipoFormaPago=this.jButtonAbrirOrderByTipoFormaPago.isVisible();			
			
			this.isVisibilidadCeldaNuevoRelacionesTipoFormaPago=this.jButtonNuevoRelacionesTipoFormaPago.isVisible();
			this.isVisibilidadCeldaModificarTipoFormaPago=this.jButtonModificarTipoFormaPago.isVisible();
			
			if(this.jInternalFrameDetalleFormTipoFormaPago!=null) {
			this.isVisibilidadCeldaActualizarTipoFormaPago=this.jInternalFrameDetalleFormTipoFormaPago.jButtonActualizarTipoFormaPago.isVisible();
			this.isVisibilidadCeldaEliminarTipoFormaPago=this.jInternalFrameDetalleFormTipoFormaPago.jButtonEliminarTipoFormaPago.isVisible();
			this.isVisibilidadCeldaCancelarTipoFormaPago=this.jInternalFrameDetalleFormTipoFormaPago.jButtonCancelarTipoFormaPago.isVisible();
			this.isVisibilidadCeldaGuardarTipoFormaPago=this.jInternalFrameDetalleFormTipoFormaPago.jButtonGuardarCambiosTipoFormaPago.isVisible();			
			}
			
			this.isVisibilidadCeldaGuardarCambiosTipoFormaPago=this.jButtonGuardarCambiosTablaTipoFormaPago.isVisible();
			
			//TOOLBAR
			
			this.isVisibilidadCeldaNuevoTipoFormaPago=this.jButtonNuevoToolBarTipoFormaPago.isVisible();
			this.isVisibilidadCeldaNuevoRelacionesTipoFormaPago=this.jButtonNuevoRelacionesToolBarTipoFormaPago.isVisible();
			
			if(this.jInternalFrameDetalleFormTipoFormaPago!=null) {
			this.isVisibilidadCeldaModificarTipoFormaPago=this.jInternalFrameDetalleFormTipoFormaPago.jButtonModificarToolBarTipoFormaPago.isVisible();
			this.isVisibilidadCeldaActualizarTipoFormaPago=this.jInternalFrameDetalleFormTipoFormaPago.jButtonActualizarToolBarTipoFormaPago.isVisible();
			this.isVisibilidadCeldaEliminarTipoFormaPago=this.jInternalFrameDetalleFormTipoFormaPago.jButtonEliminarToolBarTipoFormaPago.isVisible();
			this.isVisibilidadCeldaCancelarTipoFormaPago=this.jInternalFrameDetalleFormTipoFormaPago.jButtonCancelarToolBarTipoFormaPago.isVisible();
			}
			
			this.isVisibilidadCeldaGuardarTipoFormaPago=this.jButtonGuardarCambiosToolBarTipoFormaPago.isVisible();
			this.isVisibilidadCeldaGuardarCambiosTipoFormaPago=this.jButtonGuardarCambiosTablaToolBarTipoFormaPago.isVisible();						
			
			//TOOLBAR
			
			//MENUS
			
			this.isVisibilidadCeldaNuevoTipoFormaPago=this.jMenuItemNuevoTipoFormaPago.isVisible();
			this.isVisibilidadCeldaNuevoRelacionesTipoFormaPago=this.jMenuItemNuevoRelacionesTipoFormaPago.isVisible();
			
			if(this.jInternalFrameDetalleFormTipoFormaPago!=null) {
			this.isVisibilidadCeldaModificarTipoFormaPago=this.jInternalFrameDetalleFormTipoFormaPago.jMenuItemModificarTipoFormaPago.isVisible();
			this.isVisibilidadCeldaActualizarTipoFormaPago=this.jInternalFrameDetalleFormTipoFormaPago.jMenuItemActualizarTipoFormaPago.isVisible();
			this.isVisibilidadCeldaEliminarTipoFormaPago=this.jInternalFrameDetalleFormTipoFormaPago.jMenuItemEliminarTipoFormaPago.isVisible();
			this.isVisibilidadCeldaCancelarTipoFormaPago=this.jInternalFrameDetalleFormTipoFormaPago.jMenuItemCancelarTipoFormaPago.isVisible();
			}
			
			this.isVisibilidadCeldaGuardarTipoFormaPago=this.jMenuItemGuardarCambiosTipoFormaPago.isVisible();
			this.isVisibilidadCeldaGuardarCambiosTipoFormaPago=this.jMenuItemGuardarCambiosTablaTipoFormaPago.isVisible();						
			
			//MENUS
		}
	}
	
	public void inicializarActualizarBindingBotonesTipoFormaPago(Boolean esInicializar) {
		if(TipoFormaPagoJInternalFrame.ISBINDING_MANUAL) {			
			if(this.tipoformapagoSessionBean.getConGuardarRelaciones()) {
				//if(this.tipoformapagoSessionBean.getEsGuardarRelacionado()) {
				
				this.actualizarEstadoCeldasBotonesConGuardarRelacionesTipoFormaPago();
			}
			
			this.inicializarActualizarBindingBotonesManualTipoFormaPago(true);
			
		} else {	
		}
	}		
	
	public void inicializarActualizarBindingBotonesPermisosManualTipoFormaPago() {
		this.jButtonNuevoTipoFormaPago.setVisible(this.isPermisoNuevoTipoFormaPago);			
		this.jButtonDuplicarTipoFormaPago.setVisible(this.isPermisoDuplicarTipoFormaPago);			
		this.jButtonCopiarTipoFormaPago.setVisible(this.isPermisoCopiarTipoFormaPago);			
		this.jButtonVerFormTipoFormaPago.setVisible(this.isPermisoVerFormTipoFormaPago);			
		
		this.jButtonAbrirOrderByTipoFormaPago.setVisible(this.isPermisoOrdenTipoFormaPago);					
		
		this.jButtonNuevoRelacionesTipoFormaPago.setVisible(this.isPermisoNuevoTipoFormaPago);			
		
		if(this.jInternalFrameDetalleFormTipoFormaPago!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormTipoFormaPago.jButtonModificarTipoFormaPago.setVisible(this.isPermisoActualizarTipoFormaPago);	
			this.jInternalFrameDetalleFormTipoFormaPago.jButtonActualizarTipoFormaPago.setVisible(this.isPermisoActualizarTipoFormaPago);	
			this.jInternalFrameDetalleFormTipoFormaPago.jButtonEliminarTipoFormaPago.setVisible(this.isPermisoEliminarTipoFormaPago);
			this.jInternalFrameDetalleFormTipoFormaPago.jButtonCancelarTipoFormaPago.setVisible(this.isVisibilidadCeldaCancelarTipoFormaPago);						
			this.jInternalFrameDetalleFormTipoFormaPago.jButtonGuardarCambiosTipoFormaPago.setVisible(this.isPermisoGuardarCambiosTipoFormaPago);							
		}
		
		this.jButtonGuardarCambiosTablaTipoFormaPago.setVisible(this.isPermisoActualizarTipoFormaPago);
	}
	
	public void inicializarActualizarBindingBotonesPermisosManualFormDetalleTipoFormaPago() {
		this.jInternalFrameDetalleFormTipoFormaPago.jButtonModificarTipoFormaPago.setVisible(this.isPermisoActualizarTipoFormaPago);	
		this.jInternalFrameDetalleFormTipoFormaPago.jButtonActualizarTipoFormaPago.setVisible(this.isPermisoActualizarTipoFormaPago);	
		this.jInternalFrameDetalleFormTipoFormaPago.jButtonEliminarTipoFormaPago.setVisible(this.isPermisoEliminarTipoFormaPago);
		this.jInternalFrameDetalleFormTipoFormaPago.jButtonCancelarTipoFormaPago.setVisible(this.isVisibilidadCeldaCancelarTipoFormaPago);							
		this.jInternalFrameDetalleFormTipoFormaPago.jButtonGuardarCambiosTipoFormaPago.setVisible((this.isVisibilidadCeldaGuardarTipoFormaPago && this.isPermisoGuardarCambiosTipoFormaPago));			
	}
	
	public void inicializarActualizarBindingBotonesPermisosTipoFormaPago() {
		if(TipoFormaPagoJInternalFrame.ISBINDING_MANUAL) {
			this.inicializarActualizarBindingBotonesPermisosManualTipoFormaPago();
		} else {
		}
	}
	
	
	public void refrescarBindingBotonesTipoFormaPago() {
	}
	
	public void jTableDatosTipoFormaPagoListSelectionListener(javax.swing.event.ListSelectionEvent evt) throws Exception { 
		try {
			this.seleccionarTipoFormaPago(null,evt,-1);
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,TipoFormaPagoConstantesFunciones.CLASSNAME);
		}
	}
	
	
	public void jButtonidTipoFormaPagoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoformapagoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosTipoFormaPago.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualTipoFormaPago(this.gettipoformapago(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysTipoFormaPago(this.tipoformapago);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.tipoformapago =(TipoFormaPago) this.tipoformapagoLogic.getTipoFormaPagos().toArray()[this.jTableDatosTipoFormaPago.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.tipoformapago =(TipoFormaPago) this.tipoformapagos.toArray()[this.jTableDatosTipoFormaPago.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.tipoformapago==null) {
						this.tipoformapago = new TipoFormaPago();
					}

					this.setVariablesFormularioToObjetoActualTipoFormaPago(this.tipoformapago,true);
					this.setVariablesFormularioToObjetoActualForeignKeysTipoFormaPago(this.tipoformapago);
				}

				if(this.tipoformapago.getId()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id = "+this.tipoformapago.getId().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingTipoFormaPago(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoformapagoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoformapagoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,TipoFormaPagoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoformapagoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_empresaTipoFormaPagoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipoformapagoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoempresa=true;

			idTienePermisoempresa=this.tienePermisosUsuarioEnPaginaWebTipoFormaPago(EmpresaConstantesFunciones.CLASSNAME);

			if(idTienePermisoempresa) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosTipoFormaPago.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosTipoFormaPago.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosTipoFormaPago.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoformapago =(TipoFormaPago) this.tipoformapagoLogic.getTipoFormaPagos().toArray()[this.jTableDatosTipoFormaPago.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.tipoformapago =(TipoFormaPago) this.tipoformapagos.toArray()[this.jTableDatosTipoFormaPago.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualTipoFormaPago(this.gettipoformapago(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysTipoFormaPago(this.tipoformapago);

				this.empresaBeanSwingJInternalFrame=new EmpresaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.empresaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.empresaBeanSwingJInternalFrame.getEmpresaLogic().setConnexion(this.tipoformapagoLogic.getConnexion());

				if(this.tipoformapago.getid_empresa()!=null) {
					this.empresaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.empresaBeanSwingJInternalFrame.setIdActual(this.tipoformapago.getid_empresa());
					this.empresaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.empresaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.empresaBeanSwingJInternalFrame.inicializarActualizarBindingTablaEmpresa();
				}

				JInternalFrameBase jinternalFrame =this.empresaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderTipoFormaPago=(TitledBorder)this.jScrollPanelDatosTipoFormaPago.getBorder();
				TitledBorder titledBorderempresa=(TitledBorder)this.empresaBeanSwingJInternalFrame.jScrollPanelDatosEmpresa.getBorder();

				titledBorderempresa.setTitle(titledBorderTipoFormaPago.getTitle() + " -> Empresa");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipoformapagoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipoformapagoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,TipoFormaPagoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipoformapagoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_empresaTipoFormaPagoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoformapagoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosTipoFormaPago.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualTipoFormaPago(this.gettipoformapago(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysTipoFormaPago(this.tipoformapago);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.tipoformapago =(TipoFormaPago) this.tipoformapagoLogic.getTipoFormaPagos().toArray()[this.jTableDatosTipoFormaPago.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.tipoformapago =(TipoFormaPago) this.tipoformapagos.toArray()[this.jTableDatosTipoFormaPago.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.tipoformapago==null) {
						this.tipoformapago = new TipoFormaPago();
					}

					this.setVariablesFormularioToObjetoActualTipoFormaPago(this.tipoformapago,true);
					this.setVariablesFormularioToObjetoActualForeignKeysTipoFormaPago(this.tipoformapago);
				}

				if(this.tipoformapago.getid_empresa()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_empresa = "+this.tipoformapago.getid_empresa().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingTipoFormaPago(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoformapagoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoformapagoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,TipoFormaPagoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoformapagoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_sucursalTipoFormaPagoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipoformapagoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisosucursal=true;

			idTienePermisosucursal=this.tienePermisosUsuarioEnPaginaWebTipoFormaPago(SucursalConstantesFunciones.CLASSNAME);

			if(idTienePermisosucursal) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosTipoFormaPago.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosTipoFormaPago.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosTipoFormaPago.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoformapago =(TipoFormaPago) this.tipoformapagoLogic.getTipoFormaPagos().toArray()[this.jTableDatosTipoFormaPago.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.tipoformapago =(TipoFormaPago) this.tipoformapagos.toArray()[this.jTableDatosTipoFormaPago.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualTipoFormaPago(this.gettipoformapago(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysTipoFormaPago(this.tipoformapago);

				this.sucursalBeanSwingJInternalFrame=new SucursalBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.sucursalBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.sucursalBeanSwingJInternalFrame.getSucursalLogic().setConnexion(this.tipoformapagoLogic.getConnexion());

				if(this.tipoformapago.getid_sucursal()!=null) {
					this.sucursalBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.sucursalBeanSwingJInternalFrame.setIdActual(this.tipoformapago.getid_sucursal());
					this.sucursalBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.sucursalBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.sucursalBeanSwingJInternalFrame.inicializarActualizarBindingTablaSucursal();
				}

				JInternalFrameBase jinternalFrame =this.sucursalBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderTipoFormaPago=(TitledBorder)this.jScrollPanelDatosTipoFormaPago.getBorder();
				TitledBorder titledBordersucursal=(TitledBorder)this.sucursalBeanSwingJInternalFrame.jScrollPanelDatosSucursal.getBorder();

				titledBordersucursal.setTitle(titledBorderTipoFormaPago.getTitle() + " -> Sucursal");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipoformapagoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipoformapagoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,TipoFormaPagoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipoformapagoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_sucursalTipoFormaPagoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoformapagoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosTipoFormaPago.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualTipoFormaPago(this.gettipoformapago(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysTipoFormaPago(this.tipoformapago);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.tipoformapago =(TipoFormaPago) this.tipoformapagoLogic.getTipoFormaPagos().toArray()[this.jTableDatosTipoFormaPago.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.tipoformapago =(TipoFormaPago) this.tipoformapagos.toArray()[this.jTableDatosTipoFormaPago.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.tipoformapago==null) {
						this.tipoformapago = new TipoFormaPago();
					}

					this.setVariablesFormularioToObjetoActualTipoFormaPago(this.tipoformapago,true);
					this.setVariablesFormularioToObjetoActualForeignKeysTipoFormaPago(this.tipoformapago);
				}

				if(this.tipoformapago.getid_sucursal()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_sucursal = "+this.tipoformapago.getid_sucursal().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingTipoFormaPago(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoformapagoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoformapagoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,TipoFormaPagoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoformapagoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_moduloTipoFormaPagoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipoformapagoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisomodulo=true;

			idTienePermisomodulo=this.tienePermisosUsuarioEnPaginaWebTipoFormaPago(ModuloConstantesFunciones.CLASSNAME);

			if(idTienePermisomodulo) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosTipoFormaPago.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosTipoFormaPago.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosTipoFormaPago.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoformapago =(TipoFormaPago) this.tipoformapagoLogic.getTipoFormaPagos().toArray()[this.jTableDatosTipoFormaPago.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.tipoformapago =(TipoFormaPago) this.tipoformapagos.toArray()[this.jTableDatosTipoFormaPago.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualTipoFormaPago(this.gettipoformapago(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysTipoFormaPago(this.tipoformapago);

				this.moduloBeanSwingJInternalFrame=new ModuloBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.moduloBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.moduloBeanSwingJInternalFrame.getModuloLogic().setConnexion(this.tipoformapagoLogic.getConnexion());

				if(this.tipoformapago.getid_modulo()!=null) {
					this.moduloBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.moduloBeanSwingJInternalFrame.setIdActual(this.tipoformapago.getid_modulo());
					this.moduloBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.moduloBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.moduloBeanSwingJInternalFrame.inicializarActualizarBindingTablaModulo();
				}

				JInternalFrameBase jinternalFrame =this.moduloBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderTipoFormaPago=(TitledBorder)this.jScrollPanelDatosTipoFormaPago.getBorder();
				TitledBorder titledBordermodulo=(TitledBorder)this.moduloBeanSwingJInternalFrame.jScrollPanelDatosModulo.getBorder();

				titledBordermodulo.setTitle(titledBorderTipoFormaPago.getTitle() + " -> Modulo");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipoformapagoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipoformapagoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,TipoFormaPagoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipoformapagoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_moduloTipoFormaPagoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoformapagoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosTipoFormaPago.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualTipoFormaPago(this.gettipoformapago(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysTipoFormaPago(this.tipoformapago);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.tipoformapago =(TipoFormaPago) this.tipoformapagoLogic.getTipoFormaPagos().toArray()[this.jTableDatosTipoFormaPago.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.tipoformapago =(TipoFormaPago) this.tipoformapagos.toArray()[this.jTableDatosTipoFormaPago.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.tipoformapago==null) {
						this.tipoformapago = new TipoFormaPago();
					}

					this.setVariablesFormularioToObjetoActualTipoFormaPago(this.tipoformapago,true);
					this.setVariablesFormularioToObjetoActualForeignKeysTipoFormaPago(this.tipoformapago);
				}

				if(this.tipoformapago.getid_modulo()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_modulo = "+this.tipoformapago.getid_modulo().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingTipoFormaPago(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoformapagoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoformapagoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,TipoFormaPagoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoformapagoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_tipo_grupo_forma_pagoTipoFormaPagoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipoformapagoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotipogrupoformapago=true;

			idTienePermisotipogrupoformapago=this.tienePermisosUsuarioEnPaginaWebTipoFormaPago(TipoGrupoFormaPagoConstantesFunciones.CLASSNAME);

			if(idTienePermisotipogrupoformapago) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosTipoFormaPago.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosTipoFormaPago.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosTipoFormaPago.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoformapago =(TipoFormaPago) this.tipoformapagoLogic.getTipoFormaPagos().toArray()[this.jTableDatosTipoFormaPago.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.tipoformapago =(TipoFormaPago) this.tipoformapagos.toArray()[this.jTableDatosTipoFormaPago.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualTipoFormaPago(this.gettipoformapago(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysTipoFormaPago(this.tipoformapago);

				this.tipogrupoformapagoBeanSwingJInternalFrame=new TipoGrupoFormaPagoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.tipogrupoformapagoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.tipogrupoformapagoBeanSwingJInternalFrame.getTipoGrupoFormaPagoLogic().setConnexion(this.tipoformapagoLogic.getConnexion());

				if(this.tipoformapago.getid_tipo_grupo_forma_pago()!=null) {
					this.tipogrupoformapagoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.tipogrupoformapagoBeanSwingJInternalFrame.setIdActual(this.tipoformapago.getid_tipo_grupo_forma_pago());
					this.tipogrupoformapagoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.tipogrupoformapagoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.tipogrupoformapagoBeanSwingJInternalFrame.inicializarActualizarBindingTablaTipoGrupoFormaPago();
				}

				JInternalFrameBase jinternalFrame =this.tipogrupoformapagoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderTipoFormaPago=(TitledBorder)this.jScrollPanelDatosTipoFormaPago.getBorder();
				TitledBorder titledBordertipogrupoformapago=(TitledBorder)this.tipogrupoformapagoBeanSwingJInternalFrame.jScrollPanelDatosTipoGrupoFormaPago.getBorder();

				titledBordertipogrupoformapago.setTitle(titledBorderTipoFormaPago.getTitle() + " -> Tipo Grupo Forma Pago");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipoformapagoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipoformapagoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,TipoFormaPagoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipoformapagoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_tipo_grupo_forma_pagoTipoFormaPagoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoformapagoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosTipoFormaPago.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualTipoFormaPago(this.gettipoformapago(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysTipoFormaPago(this.tipoformapago);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.tipoformapago =(TipoFormaPago) this.tipoformapagoLogic.getTipoFormaPagos().toArray()[this.jTableDatosTipoFormaPago.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.tipoformapago =(TipoFormaPago) this.tipoformapagos.toArray()[this.jTableDatosTipoFormaPago.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.tipoformapago==null) {
						this.tipoformapago = new TipoFormaPago();
					}

					this.setVariablesFormularioToObjetoActualTipoFormaPago(this.tipoformapago,true);
					this.setVariablesFormularioToObjetoActualForeignKeysTipoFormaPago(this.tipoformapago);
				}

				if(this.tipoformapago.getid_tipo_grupo_forma_pago()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_tipo_grupo_forma_pago = "+this.tipoformapago.getid_tipo_grupo_forma_pago().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingTipoFormaPago(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoformapagoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoformapagoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,TipoFormaPagoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoformapagoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonnombreTipoFormaPagoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoformapagoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosTipoFormaPago.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualTipoFormaPago(this.gettipoformapago(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysTipoFormaPago(this.tipoformapago);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.tipoformapago =(TipoFormaPago) this.tipoformapagoLogic.getTipoFormaPagos().toArray()[this.jTableDatosTipoFormaPago.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.tipoformapago =(TipoFormaPago) this.tipoformapagos.toArray()[this.jTableDatosTipoFormaPago.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.tipoformapago==null) {
						this.tipoformapago = new TipoFormaPago();
					}

					this.setVariablesFormularioToObjetoActualTipoFormaPago(this.tipoformapago,true);
					this.setVariablesFormularioToObjetoActualForeignKeysTipoFormaPago(this.tipoformapago);
				}

				if(this.tipoformapago.getnombre()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where nombre like '%"+this.tipoformapago.getnombre()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingTipoFormaPago(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoformapagoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoformapagoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,TipoFormaPagoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoformapagoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonsiglasTipoFormaPagoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoformapagoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosTipoFormaPago.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualTipoFormaPago(this.gettipoformapago(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysTipoFormaPago(this.tipoformapago);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.tipoformapago =(TipoFormaPago) this.tipoformapagoLogic.getTipoFormaPagos().toArray()[this.jTableDatosTipoFormaPago.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.tipoformapago =(TipoFormaPago) this.tipoformapagos.toArray()[this.jTableDatosTipoFormaPago.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.tipoformapago==null) {
						this.tipoformapago = new TipoFormaPago();
					}

					this.setVariablesFormularioToObjetoActualTipoFormaPago(this.tipoformapago,true);
					this.setVariablesFormularioToObjetoActualForeignKeysTipoFormaPago(this.tipoformapago);
				}

				if(this.tipoformapago.getsiglas()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where siglas like '%"+this.tipoformapago.getsiglas()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingTipoFormaPago(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoformapagoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoformapagoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,TipoFormaPagoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoformapagoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtoncon_detalleTipoFormaPagoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoformapagoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosTipoFormaPago.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualTipoFormaPago(this.gettipoformapago(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysTipoFormaPago(this.tipoformapago);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.tipoformapago =(TipoFormaPago) this.tipoformapagoLogic.getTipoFormaPagos().toArray()[this.jTableDatosTipoFormaPago.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.tipoformapago =(TipoFormaPago) this.tipoformapagos.toArray()[this.jTableDatosTipoFormaPago.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.tipoformapago==null) {
						this.tipoformapago = new TipoFormaPago();
					}

					this.setVariablesFormularioToObjetoActualTipoFormaPago(this.tipoformapago,true);
					this.setVariablesFormularioToObjetoActualForeignKeysTipoFormaPago(this.tipoformapago);
				}

				if(this.tipoformapago.getcon_detalle()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where con_detalle = "+this.tipoformapago.getcon_detalle().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingTipoFormaPago(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoformapagoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoformapagoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,TipoFormaPagoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoformapagoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtoncon_cuotasTipoFormaPagoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoformapagoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosTipoFormaPago.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualTipoFormaPago(this.gettipoformapago(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysTipoFormaPago(this.tipoformapago);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.tipoformapago =(TipoFormaPago) this.tipoformapagoLogic.getTipoFormaPagos().toArray()[this.jTableDatosTipoFormaPago.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.tipoformapago =(TipoFormaPago) this.tipoformapagos.toArray()[this.jTableDatosTipoFormaPago.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.tipoformapago==null) {
						this.tipoformapago = new TipoFormaPago();
					}

					this.setVariablesFormularioToObjetoActualTipoFormaPago(this.tipoformapago,true);
					this.setVariablesFormularioToObjetoActualForeignKeysTipoFormaPago(this.tipoformapago);
				}

				if(this.tipoformapago.getcon_cuotas()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where con_cuotas = "+this.tipoformapago.getcon_cuotas().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingTipoFormaPago(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoformapagoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoformapagoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,TipoFormaPagoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoformapagoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_tipo_transaccion_moduloTipoFormaPagoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipoformapagoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotipotransaccionmodulo=true;

			idTienePermisotipotransaccionmodulo=this.tienePermisosUsuarioEnPaginaWebTipoFormaPago(TipoTransaccionModuloConstantesFunciones.CLASSNAME);

			if(idTienePermisotipotransaccionmodulo) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosTipoFormaPago.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosTipoFormaPago.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosTipoFormaPago.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoformapago =(TipoFormaPago) this.tipoformapagoLogic.getTipoFormaPagos().toArray()[this.jTableDatosTipoFormaPago.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.tipoformapago =(TipoFormaPago) this.tipoformapagos.toArray()[this.jTableDatosTipoFormaPago.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualTipoFormaPago(this.gettipoformapago(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysTipoFormaPago(this.tipoformapago);

				this.tipotransaccionmoduloBeanSwingJInternalFrame=new TipoTransaccionModuloBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.tipotransaccionmoduloBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.tipotransaccionmoduloBeanSwingJInternalFrame.getTipoTransaccionModuloLogic().setConnexion(this.tipoformapagoLogic.getConnexion());

				if(this.tipoformapago.getid_tipo_transaccion_modulo()!=null) {
					this.tipotransaccionmoduloBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.tipotransaccionmoduloBeanSwingJInternalFrame.setIdActual(this.tipoformapago.getid_tipo_transaccion_modulo());
					this.tipotransaccionmoduloBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.tipotransaccionmoduloBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.tipotransaccionmoduloBeanSwingJInternalFrame.inicializarActualizarBindingTablaTipoTransaccionModulo();
				}

				JInternalFrameBase jinternalFrame =this.tipotransaccionmoduloBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderTipoFormaPago=(TitledBorder)this.jScrollPanelDatosTipoFormaPago.getBorder();
				TitledBorder titledBordertipotransaccionmodulo=(TitledBorder)this.tipotransaccionmoduloBeanSwingJInternalFrame.jScrollPanelDatosTipoTransaccionModulo.getBorder();

				titledBordertipotransaccionmodulo.setTitle(titledBorderTipoFormaPago.getTitle() + " -> Tipo Transaccion Modulo");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipoformapagoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipoformapagoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,TipoFormaPagoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipoformapagoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_tipo_transaccion_moduloTipoFormaPagoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoformapagoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosTipoFormaPago.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualTipoFormaPago(this.gettipoformapago(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysTipoFormaPago(this.tipoformapago);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.tipoformapago =(TipoFormaPago) this.tipoformapagoLogic.getTipoFormaPagos().toArray()[this.jTableDatosTipoFormaPago.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.tipoformapago =(TipoFormaPago) this.tipoformapagos.toArray()[this.jTableDatosTipoFormaPago.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.tipoformapago==null) {
						this.tipoformapago = new TipoFormaPago();
					}

					this.setVariablesFormularioToObjetoActualTipoFormaPago(this.tipoformapago,true);
					this.setVariablesFormularioToObjetoActualForeignKeysTipoFormaPago(this.tipoformapago);
				}

				if(this.tipoformapago.getid_tipo_transaccion_modulo()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_tipo_transaccion_modulo = "+this.tipoformapago.getid_tipo_transaccion_modulo().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingTipoFormaPago(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoformapagoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoformapagoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,TipoFormaPagoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoformapagoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_transaccionTipoFormaPagoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipoformapagoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotransaccion=true;

			idTienePermisotransaccion=this.tienePermisosUsuarioEnPaginaWebTipoFormaPago(TransaccionConstantesFunciones.CLASSNAME);

			if(idTienePermisotransaccion) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosTipoFormaPago.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosTipoFormaPago.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosTipoFormaPago.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoformapago =(TipoFormaPago) this.tipoformapagoLogic.getTipoFormaPagos().toArray()[this.jTableDatosTipoFormaPago.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.tipoformapago =(TipoFormaPago) this.tipoformapagos.toArray()[this.jTableDatosTipoFormaPago.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualTipoFormaPago(this.gettipoformapago(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysTipoFormaPago(this.tipoformapago);

				this.transaccionBeanSwingJInternalFrame=new TransaccionBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.transaccionBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.transaccionBeanSwingJInternalFrame.getTransaccionLogic().setConnexion(this.tipoformapagoLogic.getConnexion());

				if(this.tipoformapago.getid_transaccion()!=null) {
					this.transaccionBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.transaccionBeanSwingJInternalFrame.setIdActual(this.tipoformapago.getid_transaccion());
					this.transaccionBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.transaccionBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.transaccionBeanSwingJInternalFrame.inicializarActualizarBindingTablaTransaccion();
				}

				JInternalFrameBase jinternalFrame =this.transaccionBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderTipoFormaPago=(TitledBorder)this.jScrollPanelDatosTipoFormaPago.getBorder();
				TitledBorder titledBordertransaccion=(TitledBorder)this.transaccionBeanSwingJInternalFrame.jScrollPanelDatosTransaccion.getBorder();

				titledBordertransaccion.setTitle(titledBorderTipoFormaPago.getTitle() + " -> Transaccion");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipoformapagoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipoformapagoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,TipoFormaPagoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipoformapagoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_transaccionTipoFormaPagoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoformapagoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosTipoFormaPago.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualTipoFormaPago(this.gettipoformapago(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysTipoFormaPago(this.tipoformapago);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.tipoformapago =(TipoFormaPago) this.tipoformapagoLogic.getTipoFormaPagos().toArray()[this.jTableDatosTipoFormaPago.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.tipoformapago =(TipoFormaPago) this.tipoformapagos.toArray()[this.jTableDatosTipoFormaPago.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.tipoformapago==null) {
						this.tipoformapago = new TipoFormaPago();
					}

					this.setVariablesFormularioToObjetoActualTipoFormaPago(this.tipoformapago,true);
					this.setVariablesFormularioToObjetoActualForeignKeysTipoFormaPago(this.tipoformapago);
				}

				if(this.tipoformapago.getid_transaccion()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_transaccion = "+this.tipoformapago.getid_transaccion().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingTipoFormaPago(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoformapagoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoformapagoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,TipoFormaPagoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoformapagoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_cuenta_contableTipoFormaPagoActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {
			this.cuentacontableBeanSwingJInternalFrame=new CuentaContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
			this.cuentacontableBeanSwingJInternalFrame.setJInternalFrameParent(this);
			this.cuentacontableBeanSwingJInternalFrame.sTipoBusqueda="CuentaContable";

			if(!this.sFinalQueryGeneral_cuentacontable.equals("")) {
				this.cuentacontableBeanSwingJInternalFrame.setsFinalQueryGeneral(this.sFinalQueryGeneral_cuentacontable);
				this.cuentacontableBeanSwingJInternalFrame.sAccionBusqueda="Query";


				this.cuentacontableBeanSwingJInternalFrame.procesarBusqueda(this.cuentacontableBeanSwingJInternalFrame.sAccionBusqueda);
				this.cuentacontableBeanSwingJInternalFrame.inicializarActualizarBindingCuentaContable(false);
			}

			if(!this.sFinalQueryComboCuentaContable.equals("") && false) {
			}


			JInternalFrameBase jinternalFrame =this.cuentacontableBeanSwingJInternalFrame;
			jinternalFrame.setAutoscrolls(true);
			//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
			jinternalFrame.setVisible(true); 


			TitledBorder titledBorderTipoFormaPago=null;
			TitledBorder titledBordercuentacontable=null;

			if(!this.jScrollPanelDatosTipoFormaPago.getBorder().getClass().equals(EmptyBorder.class)) {
				titledBorderTipoFormaPago=(TitledBorder)this.jScrollPanelDatosTipoFormaPago.getBorder();
				titledBordercuentacontable=(TitledBorder)this.cuentacontableBeanSwingJInternalFrame.jScrollPanelDatosCuentaContable.getBorder();

				titledBordercuentacontable.setTitle(titledBorderTipoFormaPago.getTitle() + " -> Cuenta Contable");
			}

			if(!Constantes.CON_VARIAS_VENTANAS) {
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
			}

			this.jDesktopPane.add(jinternalFrame);

			jinternalFrame.setSelected(true);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,TipoFormaPagoConstantesFunciones.CLASSNAME);
		}
	}

	public void jButtonid_cuenta_contableTipoFormaPagoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipoformapagoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisocuentacontable=true;

			idTienePermisocuentacontable=this.tienePermisosUsuarioEnPaginaWebTipoFormaPago(CuentaContableConstantesFunciones.CLASSNAME);

			if(idTienePermisocuentacontable) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosTipoFormaPago.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosTipoFormaPago.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosTipoFormaPago.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoformapago =(TipoFormaPago) this.tipoformapagoLogic.getTipoFormaPagos().toArray()[this.jTableDatosTipoFormaPago.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.tipoformapago =(TipoFormaPago) this.tipoformapagos.toArray()[this.jTableDatosTipoFormaPago.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualTipoFormaPago(this.gettipoformapago(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysTipoFormaPago(this.tipoformapago);

				this.cuentacontableBeanSwingJInternalFrame=new CuentaContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.cuentacontableBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.cuentacontableBeanSwingJInternalFrame.getCuentaContableLogic().setConnexion(this.tipoformapagoLogic.getConnexion());

				if(this.tipoformapago.getid_cuenta_contable()!=null) {
					this.cuentacontableBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.cuentacontableBeanSwingJInternalFrame.setIdActual(this.tipoformapago.getid_cuenta_contable());
					this.cuentacontableBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.cuentacontableBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.cuentacontableBeanSwingJInternalFrame.inicializarActualizarBindingTablaCuentaContable();
				}

				JInternalFrameBase jinternalFrame =this.cuentacontableBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderTipoFormaPago=(TitledBorder)this.jScrollPanelDatosTipoFormaPago.getBorder();
				TitledBorder titledBordercuentacontable=(TitledBorder)this.cuentacontableBeanSwingJInternalFrame.jScrollPanelDatosCuentaContable.getBorder();

				titledBordercuentacontable.setTitle(titledBorderTipoFormaPago.getTitle() + " -> Cuenta Contable");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipoformapagoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipoformapagoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,TipoFormaPagoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipoformapagoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_cuenta_contableTipoFormaPagoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoformapagoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosTipoFormaPago.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualTipoFormaPago(this.gettipoformapago(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysTipoFormaPago(this.tipoformapago);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.tipoformapago =(TipoFormaPago) this.tipoformapagoLogic.getTipoFormaPagos().toArray()[this.jTableDatosTipoFormaPago.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.tipoformapago =(TipoFormaPago) this.tipoformapagos.toArray()[this.jTableDatosTipoFormaPago.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.tipoformapago==null) {
						this.tipoformapago = new TipoFormaPago();
					}

					this.setVariablesFormularioToObjetoActualTipoFormaPago(this.tipoformapago,true);
					this.setVariablesFormularioToObjetoActualForeignKeysTipoFormaPago(this.tipoformapago);
				}

				if(this.tipoformapago.getid_cuenta_contable()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_cuenta_contable = "+this.tipoformapago.getid_cuenta_contable().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingTipoFormaPago(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoformapagoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoformapagoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,TipoFormaPagoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoformapagoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtondescripcionTipoFormaPagoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoformapagoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosTipoFormaPago.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualTipoFormaPago(this.gettipoformapago(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysTipoFormaPago(this.tipoformapago);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.tipoformapago =(TipoFormaPago) this.tipoformapagoLogic.getTipoFormaPagos().toArray()[this.jTableDatosTipoFormaPago.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.tipoformapago =(TipoFormaPago) this.tipoformapagos.toArray()[this.jTableDatosTipoFormaPago.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.tipoformapago==null) {
						this.tipoformapago = new TipoFormaPago();
					}

					this.setVariablesFormularioToObjetoActualTipoFormaPago(this.tipoformapago,true);
					this.setVariablesFormularioToObjetoActualForeignKeysTipoFormaPago(this.tipoformapago);
				}

				if(this.tipoformapago.getdescripcion()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where descripcion like '%"+this.tipoformapago.getdescripcion()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingTipoFormaPago(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoformapagoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoformapagoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,TipoFormaPagoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoformapagoLogic.closeNewConnexionToDeep();
				}

			}
		}

	
	
	public void jButtonBusquedaPorNombreTipoFormaPagoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipoformapagoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingTipoFormaPago(false,false);

			this.getTipoFormaPagosBusquedaPorNombre();

			this.inicializarActualizarBindingTipoFormaPago(false);

			//if(TipoFormaPagoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingTipoFormaPago(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipoformapagoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipoformapagoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,TipoFormaPagoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipoformapagoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonBusquedaPorSiglasTipoFormaPagoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipoformapagoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingTipoFormaPago(false,false);

			this.getTipoFormaPagosBusquedaPorSiglas();

			this.inicializarActualizarBindingTipoFormaPago(false);

			//if(TipoFormaPagoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingTipoFormaPago(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipoformapagoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipoformapagoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,TipoFormaPagoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipoformapagoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdEmpresaTipoFormaPagoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipoformapagoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingTipoFormaPago(false,false);

			this.getTipoFormaPagosFK_IdEmpresa();

			this.inicializarActualizarBindingTipoFormaPago(false);

			//if(TipoFormaPagoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingTipoFormaPago(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipoformapagoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipoformapagoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,TipoFormaPagoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipoformapagoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdModuloTipoFormaPagoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipoformapagoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingTipoFormaPago(false,false);

			this.getTipoFormaPagosFK_IdModulo();

			this.inicializarActualizarBindingTipoFormaPago(false);

			//if(TipoFormaPagoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingTipoFormaPago(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipoformapagoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipoformapagoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,TipoFormaPagoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipoformapagoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdSucursalTipoFormaPagoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipoformapagoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingTipoFormaPago(false,false);

			this.getTipoFormaPagosFK_IdSucursal();

			this.inicializarActualizarBindingTipoFormaPago(false);

			//if(TipoFormaPagoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingTipoFormaPago(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipoformapagoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipoformapagoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,TipoFormaPagoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipoformapagoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdTipoFormaPagoTipoFormaPagoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipoformapagoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingTipoFormaPago(false,false);

			this.getTipoFormaPagosFK_IdTipoFormaPago();

			this.inicializarActualizarBindingTipoFormaPago(false);

			//if(TipoFormaPagoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingTipoFormaPago(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipoformapagoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipoformapagoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,TipoFormaPagoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipoformapagoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdTipoGrupoFormaPagoTipoFormaPagoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipoformapagoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingTipoFormaPago(false,false);

			this.getTipoFormaPagosFK_IdTipoGrupoFormaPago();

			this.inicializarActualizarBindingTipoFormaPago(false);

			//if(TipoFormaPagoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingTipoFormaPago(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipoformapagoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipoformapagoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,TipoFormaPagoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipoformapagoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdTipoTransaccionModuloTipoFormaPagoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipoformapagoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingTipoFormaPago(false,false);

			this.getTipoFormaPagosFK_IdTipoTransaccionModulo();

			this.inicializarActualizarBindingTipoFormaPago(false);

			//if(TipoFormaPagoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingTipoFormaPago(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipoformapagoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipoformapagoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,TipoFormaPagoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipoformapagoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdTransaccionTipoFormaPagoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipoformapagoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingTipoFormaPago(false,false);

			this.getTipoFormaPagosFK_IdTransaccion();

			this.inicializarActualizarBindingTipoFormaPago(false);

			//if(TipoFormaPagoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingTipoFormaPago(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipoformapagoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipoformapagoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,TipoFormaPagoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipoformapagoLogic.closeNewConnexionToDeep();
			}
		}
	}

	
	public void closingInternalFrameTipoFormaPago() {
		if(this.jInternalFrameDetalleFormTipoFormaPago!=null) {
		

		if(this.jInternalFrameDetalleFormTipoFormaPago.registroformapagobancoBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormTipoFormaPago.registroformapagobancoBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormTipoFormaPago.registroformapagobancoBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormTipoFormaPago.registroformapagobancoBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormTipoFormaPago.registroformapagobancoBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormTipoFormaPago.registroformapagobancoBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormTipoFormaPago.registroformapagobancoBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormTipoFormaPago.registroformapagobancoBeanSwingJInternalFramePopup=null;
		}

		if(this.jInternalFrameDetalleFormTipoFormaPago.detaformapagofactuBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormTipoFormaPago.detaformapagofactuBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormTipoFormaPago.detaformapagofactuBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormTipoFormaPago.detaformapagofactuBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormTipoFormaPago.detaformapagofactuBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormTipoFormaPago.detaformapagofactuBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormTipoFormaPago.detaformapagofactuBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormTipoFormaPago.detaformapagofactuBeanSwingJInternalFramePopup=null;
		}

		if(this.jInternalFrameDetalleFormTipoFormaPago.grupoclienteformapagoBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormTipoFormaPago.grupoclienteformapagoBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormTipoFormaPago.grupoclienteformapagoBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormTipoFormaPago.grupoclienteformapagoBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormTipoFormaPago.grupoclienteformapagoBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormTipoFormaPago.grupoclienteformapagoBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormTipoFormaPago.grupoclienteformapagoBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormTipoFormaPago.grupoclienteformapagoBeanSwingJInternalFramePopup=null;
		}

		if(this.jInternalFrameDetalleFormTipoFormaPago.detaformapagoBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormTipoFormaPago.detaformapagoBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormTipoFormaPago.detaformapagoBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormTipoFormaPago.detaformapagoBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormTipoFormaPago.detaformapagoBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormTipoFormaPago.detaformapagoBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormTipoFormaPago.detaformapagoBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormTipoFormaPago.detaformapagoBeanSwingJInternalFramePopup=null;
		}

		if(this.jInternalFrameDetalleFormTipoFormaPago.formapagopuntoventaBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormTipoFormaPago.formapagopuntoventaBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormTipoFormaPago.formapagopuntoventaBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormTipoFormaPago.formapagopuntoventaBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormTipoFormaPago.formapagopuntoventaBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormTipoFormaPago.formapagopuntoventaBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormTipoFormaPago.formapagopuntoventaBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormTipoFormaPago.formapagopuntoventaBeanSwingJInternalFramePopup=null;
		}

		if(this.jInternalFrameDetalleFormTipoFormaPago.formapagoBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormTipoFormaPago.formapagoBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormTipoFormaPago.formapagoBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormTipoFormaPago.formapagoBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormTipoFormaPago.formapagoBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormTipoFormaPago.formapagoBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormTipoFormaPago.formapagoBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormTipoFormaPago.formapagoBeanSwingJInternalFramePopup=null;
		}

		if(this.jInternalFrameDetalleFormTipoFormaPago.formapagoinvenBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormTipoFormaPago.formapagoinvenBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormTipoFormaPago.formapagoinvenBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormTipoFormaPago.formapagoinvenBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormTipoFormaPago.formapagoinvenBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormTipoFormaPago.formapagoinvenBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormTipoFormaPago.formapagoinvenBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormTipoFormaPago.formapagoinvenBeanSwingJInternalFramePopup=null;
		}

		if(this.jInternalFrameDetalleFormTipoFormaPago.cierrecajaBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormTipoFormaPago.cierrecajaBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormTipoFormaPago.cierrecajaBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormTipoFormaPago.cierrecajaBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormTipoFormaPago.cierrecajaBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormTipoFormaPago.cierrecajaBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormTipoFormaPago.cierrecajaBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormTipoFormaPago.cierrecajaBeanSwingJInternalFramePopup=null;
		}	
		
		
		}
		
		if(this.jInternalFrameDetalleFormTipoFormaPago!=null) {
			this.jInternalFrameDetalleFormTipoFormaPago.setVisible(false);	    			
			this.jInternalFrameDetalleFormTipoFormaPago.dispose();
			this.jInternalFrameDetalleFormTipoFormaPago=null;
		}
		
		
		if(this.jInternalFrameReporteDinamicoTipoFormaPago!=null) {
			this.jInternalFrameReporteDinamicoTipoFormaPago.setVisible(false);	    			
			this.jInternalFrameReporteDinamicoTipoFormaPago.dispose();
			this.jInternalFrameReporteDinamicoTipoFormaPago=null;
		}
		
		if(this.jInternalFrameImportacionTipoFormaPago!=null) {
			this.jInternalFrameImportacionTipoFormaPago.setVisible(false);	    			
			this.jInternalFrameImportacionTipoFormaPago.dispose();
			this.jInternalFrameImportacionTipoFormaPago=null;
		}		
		
		
		this.setVisible(false);
		this.dispose();
		//this=null;
	}
	
	
	
	public void jButtonActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {			
			this.startProcessTipoFormaPago();
			
			TipoFormaPagoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.BUTTON,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.tipoformapago,new Object(),this.tipoformapagoParameterGeneral,this.tipoformapagoReturnGeneral);
			
			
			if(sTipo.equals("NuevoTipoFormaPago")) {
				jButtonNuevoTipoFormaPagoActionPerformed(evt,false);
			} else if(sTipo.equals("DuplicarTipoFormaPago")) {
				jButtonDuplicarTipoFormaPagoActionPerformed(evt,false);
			} else if(sTipo.equals("CopiarTipoFormaPago")) {
				jButtonCopiarTipoFormaPagoActionPerformed(evt);
			} else if(sTipo.equals("VerFormTipoFormaPago")) {
				jButtonVerFormTipoFormaPagoActionPerformed(evt);
			} else if(sTipo.equals("NuevoToolBarTipoFormaPago")) {
				jButtonNuevoTipoFormaPagoActionPerformed(evt,false);
			} else if(sTipo.equals("DuplicarToolBarTipoFormaPago")) {
				jButtonDuplicarTipoFormaPagoActionPerformed(evt,false);
			} else if(sTipo.equals("MenuItemNuevoTipoFormaPago")) {
				jButtonNuevoTipoFormaPagoActionPerformed(evt,false);
			} else if(sTipo.equals("MenuItemDuplicarTipoFormaPago")) {
				jButtonDuplicarTipoFormaPagoActionPerformed(evt,false);
			} else if(sTipo.equals("NuevoRelacionesTipoFormaPago")) {
				jButtonNuevoTipoFormaPagoActionPerformed(evt,true);
			} else if(sTipo.equals("NuevoRelacionesToolBarTipoFormaPago")) {
				jButtonNuevoTipoFormaPagoActionPerformed(evt,true);
			} else if(sTipo.equals("MenuItemNuevoRelacionesTipoFormaPago")) {
				jButtonNuevoTipoFormaPagoActionPerformed(evt,true);
			} else if(sTipo.equals("ModificarTipoFormaPago")) {
				jButtonModificarTipoFormaPagoActionPerformed(evt);
			} else if(sTipo.equals("ModificarToolBarTipoFormaPago")) {
				jButtonModificarTipoFormaPagoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemModificarTipoFormaPago")) {
				jButtonModificarTipoFormaPagoActionPerformed(evt);
			} else if(sTipo.equals("ActualizarTipoFormaPago")) {
				jButtonActualizarTipoFormaPagoActionPerformed(evt);
			} else if(sTipo.equals("ActualizarToolBarTipoFormaPago")) {
				jButtonActualizarTipoFormaPagoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemActualizarTipoFormaPago")) {
				jButtonActualizarTipoFormaPagoActionPerformed(evt);
			} else if(sTipo.equals("EliminarTipoFormaPago")) {
				jButtonEliminarTipoFormaPagoActionPerformed(evt);
			} else if(sTipo.equals("EliminarToolBarTipoFormaPago")) {
				jButtonEliminarTipoFormaPagoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemEliminarTipoFormaPago")) {
				jButtonEliminarTipoFormaPagoActionPerformed(evt);
			} else if(sTipo.equals("CancelarTipoFormaPago")) {
				jButtonCancelarTipoFormaPagoActionPerformed(evt);
			} else if(sTipo.equals("CancelarToolBarTipoFormaPago")) {
				jButtonCancelarTipoFormaPagoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCancelarTipoFormaPago")) {
				jButtonCancelarTipoFormaPagoActionPerformed(evt);
			} else if(sTipo.equals("CerrarTipoFormaPago")) {
				jButtonCerrarTipoFormaPagoActionPerformed(evt);
			} else if(sTipo.equals("CerrarToolBarTipoFormaPago")) {
				jButtonCerrarTipoFormaPagoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCerrarTipoFormaPago")) {
				jButtonCerrarTipoFormaPagoActionPerformed(evt);
			} else if(sTipo.equals("MostrarOcultarToolBarTipoFormaPago")) {
				jButtonMostrarOcultarTipoFormaPagoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemDetalleCerrarTipoFormaPago")) {
				jButtonCancelarTipoFormaPagoActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosTipoFormaPago")) {
				jButtonGuardarCambiosTipoFormaPagoActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosToolBarTipoFormaPago")) {
				jButtonGuardarCambiosTipoFormaPagoActionPerformed(evt);
			} else if(sTipo.equals("CopiarToolBarTipoFormaPago")) {
				jButtonCopiarTipoFormaPagoActionPerformed(evt);
			} else if(sTipo.equals("VerFormToolBarTipoFormaPago")) {
				jButtonVerFormTipoFormaPagoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemGuardarCambiosTipoFormaPago")) {
				jButtonGuardarCambiosTipoFormaPagoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCopiarTipoFormaPago")) {
				jButtonCopiarTipoFormaPagoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemVerFormTipoFormaPago")) {
				jButtonVerFormTipoFormaPagoActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosTablaTipoFormaPago")) {
				jButtonGuardarCambiosTipoFormaPagoActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosTablaToolBarTipoFormaPago")) {
				jButtonGuardarCambiosTipoFormaPagoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemGuardarCambiosTablaTipoFormaPago")) {
				jButtonGuardarCambiosTipoFormaPagoActionPerformed(evt);
			} else if(sTipo.equals("RecargarInformacionTipoFormaPago")) {
				jButtonRecargarInformacionTipoFormaPagoActionPerformed(evt);
			} else if(sTipo.equals("RecargarInformacionToolBarTipoFormaPago")) {
				jButtonRecargarInformacionTipoFormaPagoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemRecargarInformacionTipoFormaPago")) {
				jButtonRecargarInformacionTipoFormaPagoActionPerformed(evt);
			}
			else if(sTipo.equals("AnterioresTipoFormaPago")) {
				jButtonAnterioresTipoFormaPagoActionPerformed(evt);
			} else if(sTipo.equals("AnterioresToolBarTipoFormaPago")) {
				jButtonAnterioresTipoFormaPagoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemAnterioreTipoFormaPago")) {
				jButtonAnterioresTipoFormaPagoActionPerformed(evt);
			} else if(sTipo.equals("SiguientesTipoFormaPago")) {
				jButtonSiguientesTipoFormaPagoActionPerformed(evt);
			} else if(sTipo.equals("SiguientesToolBarTipoFormaPago")) {
				jButtonSiguientesTipoFormaPagoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemSiguientesTipoFormaPago")) {
				jButtonSiguientesTipoFormaPagoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemAbrirOrderByTipoFormaPago") || sTipo.equals("MenuItemDetalleAbrirOrderByTipoFormaPago")) {
				jButtonAbrirOrderByTipoFormaPagoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemMostrarOcultarTipoFormaPago") || sTipo.equals("MenuItemDetalleMostrarOcultarTipoFormaPago")) {
				jButtonMostrarOcultarTipoFormaPagoActionPerformed(evt);
			} else if(sTipo.equals("NuevoGuardarCambiosTipoFormaPago")) {
				jButtonNuevoGuardarCambiosTipoFormaPagoActionPerformed(evt);
			} else if(sTipo.equals("NuevoGuardarCambiosToolBarTipoFormaPago")) {
				jButtonNuevoGuardarCambiosTipoFormaPagoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemNuevoGuardarCambiosTipoFormaPago")) {
				jButtonNuevoGuardarCambiosTipoFormaPagoActionPerformed(evt);
			} 
			else if(sTipo.equals("CerrarReporteDinamicoTipoFormaPago")) {
				jButtonCerrarReporteDinamicoTipoFormaPagoActionPerformed(evt);
			} else if(sTipo.equals("GenerarReporteDinamicoTipoFormaPago")) {
				jButtonGenerarReporteDinamicoTipoFormaPagoActionPerformed(evt);
			} else if(sTipo.equals("GenerarExcelReporteDinamicoTipoFormaPago")) {
				
				jButtonGenerarExcelReporteDinamicoTipoFormaPagoActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarImportacionTipoFormaPago")) {
				jButtonCerrarImportacionTipoFormaPagoActionPerformed(evt);
			} else if(sTipo.equals("GenerarImportacionTipoFormaPago")) {
				
				jButtonGenerarImportacionTipoFormaPagoActionPerformed(evt);
				
			} else if(sTipo.equals("AbrirImportacionTipoFormaPago")) {
				
				jButtonAbrirImportacionTipoFormaPagoActionPerformed(evt);
				
			} else if(sTipo.equals("TiposAccionesTipoFormaPago")) {
				jComboBoxTiposAccionesTipoFormaPagoActionListener(evt,false);
			} else if(sTipo.equals("TiposRelacionesTipoFormaPago")) {
				jComboBoxTiposRelacionesTipoFormaPagoActionListener(evt);
			} else if(sTipo.equals("TiposAccionesFormularioTipoFormaPago")) {
				jComboBoxTiposAccionesTipoFormaPagoActionListener(evt,true);
			} else if(sTipo.equals("TiposSeleccionarTipoFormaPago")) {
				
				jComboBoxTiposSeleccionarTipoFormaPagoActionListener(evt);
				
			} else if(sTipo.equals("ValorCampoGeneralTipoFormaPago")) {
				jTextFieldValorCampoGeneralTipoFormaPagoActionListener(evt);
			}
			
			
			else if(sTipo.equals("AbrirOrderByTipoFormaPago")) {
				jButtonAbrirOrderByTipoFormaPagoActionPerformed(evt);
				
			} else if(sTipo.equals("AbrirOrderByToolBarTipoFormaPago")) {
				jButtonAbrirOrderByTipoFormaPagoActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarOrderByTipoFormaPago")) {
				jButtonCerrarOrderByTipoFormaPagoActionPerformed(evt);
			} 
						
			
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("idTipoFormaPagoBusqueda")) {
				this.jButtonidTipoFormaPagoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_empresaTipoFormaPagoUpdate")) {
				this.jButtonid_empresaTipoFormaPagoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_empresaTipoFormaPagoBusqueda")) {
				this.jButtonid_empresaTipoFormaPagoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_sucursalTipoFormaPagoUpdate")) {
				this.jButtonid_sucursalTipoFormaPagoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_sucursalTipoFormaPagoBusqueda")) {
				this.jButtonid_sucursalTipoFormaPagoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_moduloTipoFormaPagoUpdate")) {
				this.jButtonid_moduloTipoFormaPagoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_moduloTipoFormaPagoBusqueda")) {
				this.jButtonid_moduloTipoFormaPagoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_grupo_forma_pagoTipoFormaPagoUpdate")) {
				this.jButtonid_tipo_grupo_forma_pagoTipoFormaPagoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_grupo_forma_pagoTipoFormaPagoBusqueda")) {
				this.jButtonid_tipo_grupo_forma_pagoTipoFormaPagoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("nombreTipoFormaPagoBusqueda")) {
				this.jButtonnombreTipoFormaPagoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("siglasTipoFormaPagoBusqueda")) {
				this.jButtonsiglasTipoFormaPagoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("con_detalleTipoFormaPagoBusqueda")) {
				this.jButtoncon_detalleTipoFormaPagoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("con_cuotasTipoFormaPagoBusqueda")) {
				this.jButtoncon_cuotasTipoFormaPagoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_transaccion_moduloTipoFormaPagoUpdate")) {
				this.jButtonid_tipo_transaccion_moduloTipoFormaPagoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_transaccion_moduloTipoFormaPagoBusqueda")) {
				this.jButtonid_tipo_transaccion_moduloTipoFormaPagoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_transaccionTipoFormaPagoUpdate")) {
				this.jButtonid_transaccionTipoFormaPagoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_transaccionTipoFormaPagoBusqueda")) {
				this.jButtonid_transaccionTipoFormaPagoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_cuenta_contableTipoFormaPago")) {
				this.jButtonid_cuenta_contableTipoFormaPagoActionPerformed(evt);
			}
			//BUSQUEDA ARBOL CAMPO
			else if(sTipo.equals("id_cuenta_contableTipoFormaPagoArbol")) {
				this.abrirFrameTreeCuentaContable("BUSQUEDA_FK");
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_cuenta_contableTipoFormaPagoUpdate")) {
				this.jButtonid_cuenta_contableTipoFormaPagoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_cuenta_contableTipoFormaPagoBusqueda")) {
				this.jButtonid_cuenta_contableTipoFormaPagoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("descripcionTipoFormaPagoBusqueda")) {
				this.jButtondescripcionTipoFormaPagoBusquedaActionPerformed(evt);
			}
			
			
			else if(sTipo.equals("id_cuenta_contableTipoFormaPago")) {
				this.jButtonid_cuenta_contableTipoFormaPagoActionPerformed(evt);
			}
			
			
			else if(sTipo.equals("BusquedaPorNombreTipoFormaPago")) {
				this.jButtonBusquedaPorNombreTipoFormaPagoActionPerformed(evt);
			}
			else if(sTipo.equals("BusquedaPorSiglasTipoFormaPago")) {
				this.jButtonBusquedaPorSiglasTipoFormaPagoActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdTipoFormaPagoTipoFormaPago")) {
				this.jButtonFK_IdTipoFormaPagoTipoFormaPagoActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdTipoGrupoFormaPagoTipoFormaPago")) {
				this.jButtonFK_IdTipoGrupoFormaPagoTipoFormaPagoActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdTipoTransaccionModuloTipoFormaPago")) {
				this.jButtonFK_IdTipoTransaccionModuloTipoFormaPagoActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdTransaccionTipoFormaPago")) {
				this.jButtonFK_IdTransaccionTipoFormaPagoActionPerformed(evt);
			}
			
			;
			
			
			TipoFormaPagoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.BUTTON,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.tipoformapago,new Object(),this.tipoformapagoParameterGeneral,this.tipoformapagoReturnGeneral);
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,TipoFormaPagoConstantesFunciones.CLASSNAME);
			
  		} finally {
      		this.finishProcessTipoFormaPago();
      	}
    }
	
	//FUNCIONA AL APLASTAR ENTER
	public void jTextFieldActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaTipoFormaPagoActual();
			
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				Container containerParent=null;
				JTextField jTextField=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParent=jTextField.getParent();
						
				if(containerParent!=null && containerParent.getClass().equals(JTableMe.class)) {
					esControlTabla=true;
				}
						
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.tipoformapago);
				
				this.actualizarInformacion("INFO_PADRE",false,this.tipoformapago);
				
				TipoFormaPagoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.tipoformapago,new Object(),this.tipoformapagoParameterGeneral,this.tipoformapagoReturnGeneral);
				
				


				
				TipoFormaPagoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.tipoformapago,new Object(),this.tipoformapagoParameterGeneral,this.tipoformapagoReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(TipoFormaPago.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",TipoFormaPago.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
				}
				
			} catch(Exception e) {
  				FuncionesSwing.manageException2(this, e,logger,TipoFormaPagoConstantesFunciones.CLASSNAME);
  			}
    }
	
	public Boolean existeCambioValor(ControlTipo controlTipo,String sTipo) throws Exception {
		Boolean existeCambio=true;
		
		try {
			TipoFormaPago tipoformapagoLocal=null;
			
			if(!this.getEsControlTabla()) {
				tipoformapagoLocal=this.tipoformapago;
			} else {
				tipoformapagoLocal=this.tipoformapagoAnterior;
			}
			
			if(controlTipo.equals(ControlTipo.TEXTBOX)) {
				


			}
		
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,TipoFormaPagoConstantesFunciones.CLASSNAME);
  		}
		
		return existeCambio;
	}
	
	public void jTextFieldFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTBOX,sTipo)) {
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextField jTextField=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParent=jTextField.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.tipoformapago);
				
				this.actualizarInformacion("INFO_PADRE",false,this.tipoformapago);
				
				TipoFormaPagoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.tipoformapago,new Object(),this.tipoformapagoParameterGeneral,this.tipoformapagoReturnGeneral);
							
				
				


				
				TipoFormaPagoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.tipoformapago,new Object(),this.tipoformapagoParameterGeneral,this.tipoformapagoReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(TipoFormaPago.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",TipoFormaPago.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,TipoFormaPagoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextFieldFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaTipoFormaPagoActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosTipoFormaPago.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoformapagoAnterior =(TipoFormaPago) this.tipoformapagoLogic.getTipoFormaPagos().toArray()[this.jTableDatosTipoFormaPago.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.tipoformapagoAnterior =(TipoFormaPago) this.tipoformapagos.toArray()[this.jTableDatosTipoFormaPago.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,TipoFormaPagoConstantesFunciones.CLASSNAME);
  		}
    }	
	
	//CUANDO SE CAMBIA ALGUN FORMATO(TIPO DE LETRA,NEGRILLA,ETC)
	public void jTextFieldChangedUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			/*
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			//System.out.println("UPDATE");
			
			Boolean esControlTabla=false;
			//JTextField jTextField=null;
			Container containerParent=null;
			Component componentOpposite=null;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			TipoFormaPagoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.tipoformapago,new Object(),this.tipoformapagoParameterGeneral,this.tipoformapagoReturnGeneral);
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			//jTextField=(JTextField)evt.getSource();
			
			containerParent=jTextField.getParent();
					
			componentOpposite=null;//evt.getOppositeComponent();
			
			if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
				|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
			) {					
				esControlTabla=true;
			}
			
			this.esControlTabla=esControlTabla;
			
			


			
			TipoFormaPagoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.tipoformapago,new Object(),this.tipoformapagoParameterGeneral,this.tipoformapagoReturnGeneral);
			*/
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,TipoFormaPagoConstantesFunciones.CLASSNAME);
  		}
    }
	
	//CUANDO SE QUITA ALGUN CARACTER
	public void jTextFieldRemoveUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			//System.out.println("REMOVE");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,TipoFormaPagoConstantesFunciones.CLASSNAME);
  		}
    }
	
	//CUANDO SE INGRESA ALGUN CARACTER
	public void jTextFieldInsertUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			//System.out.println("INSERT");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,TipoFormaPagoConstantesFunciones.CLASSNAME);
  		}
    }
	
	//FUNCIONA AL APLASTAR ENTER
	public void jFormattedTextFieldActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaTipoFormaPagoActual();
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				Container containerParent=null;
				Container containerParentAux=null;
				JFormattedTextField JFormattedTextField=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				JFormattedTextField=(JFormattedTextField)evt.getSource();
				
				containerParentAux=JFormattedTextField.getParent();
				
				if(containerParentAux!=null && containerParentAux.getClass().equals(JDateChooser.class)) {
					containerParent=containerParentAux.getParent();
				}
				
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.tipoformapago);
				
				this.actualizarInformacion("INFO_PADRE",false,this.tipoformapago);
				
				TipoFormaPagoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.tipoformapago,new Object(),this.tipoformapagoParameterGeneral,this.tipoformapagoReturnGeneral);
								
						
				


				
				TipoFormaPagoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.tipoformapago,new Object(),this.tipoformapagoParameterGeneral,this.tipoformapagoReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(TipoFormaPago.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",TipoFormaPago.class.getName(),sTipo,"DATE",esControlTabla,conIrServidorAplicacionParent,
							id,JFormattedTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,TipoFormaPagoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jFormattedTextFieldFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTBOX,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextField jTextField=null;
				Container containerParent=null;
				Container containerParentAux=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParentAux=jTextField.getParent();
						
				if(containerParentAux!=null && containerParentAux.getClass().equals(JDateChooser.class)) {
					containerParent=containerParentAux.getParent();
				}
				
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.tipoformapago);
				
				this.actualizarInformacion("INFO_PADRE",false,this.tipoformapago);
				
				TipoFormaPagoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.tipoformapago,new Object(),this.tipoformapagoParameterGeneral,this.tipoformapagoReturnGeneral);
								
				
				


				
				TipoFormaPagoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.tipoformapago,new Object(),this.tipoformapagoParameterGeneral,this.tipoformapagoReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(TipoFormaPago.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",TipoFormaPago.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,TipoFormaPagoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jFormattedTextFieldFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaTipoFormaPagoActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosTipoFormaPago.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoformapagoAnterior =(TipoFormaPago) this.tipoformapagoLogic.getTipoFormaPagos().toArray()[this.jTableDatosTipoFormaPago.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.tipoformapagoAnterior =(TipoFormaPago) this.tipoformapagos.toArray()[this.jTableDatosTipoFormaPago.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,TipoFormaPagoConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.DATE,sTipo)) {
				this.actualizarInformacion("EVENTO_CONTROL",false,this.tipoformapago);
				
				this.actualizarInformacion("INFO_PADRE",false,this.tipoformapago);
			}	
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,TipoFormaPagoConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaTipoFormaPagoActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosTipoFormaPago.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoformapagoAnterior =(TipoFormaPago) this.tipoformapagoLogic.getTipoFormaPagos().toArray()[this.jTableDatosTipoFormaPago.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.tipoformapagoAnterior =(TipoFormaPago) this.tipoformapagos.toArray()[this.jTableDatosTipoFormaPago.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,TipoFormaPagoConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaTipoFormaPagoActual();
				
			this.actualizarInformacion("EVENTO_CONTROL",false,this.tipoformapago);
			
			this.actualizarInformacion("INFO_PADRE",false,this.tipoformapago);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,TipoFormaPagoConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jTextAreaFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTAREA,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextArea jTextArea=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextArea=(JTextArea)evt.getSource();
				
				containerParent=jTextArea.getParent();
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.tipoformapago);
				
				this.actualizarInformacion("INFO_PADRE",false,this.tipoformapago);
				
				TipoFormaPagoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.tipoformapago,new Object(),this.tipoformapagoParameterGeneral,this.tipoformapagoReturnGeneral);
							
				
				


				
				TipoFormaPagoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.tipoformapago,new Object(),this.tipoformapagoParameterGeneral,this.tipoformapagoReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(TipoFormaPago.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",TipoFormaPago.class.getName(),sTipo,"TEXTAREA",esControlTabla,conIrServidorAplicacionParent,
							id,jTextArea, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,TipoFormaPagoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaTipoFormaPagoActual();
			
				//SELECCIONA FILA A OBJETO ANTERIOR
				Integer intSelectedRow = this.jTableDatosTipoFormaPago.getSelectedRow();
						
				if(intSelectedRow!=null && intSelectedRow>-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.tipoformapagoAnterior =(TipoFormaPago) this.tipoformapagoLogic.getTipoFormaPagos().toArray()[this.jTableDatosTipoFormaPago.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
						this.tipoformapagoAnterior =(TipoFormaPago) this.tipoformapagos.toArray()[this.jTableDatosTipoFormaPago.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					//System.out.println(this.banco);
				}
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,TipoFormaPagoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaChangedUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			/*
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			//System.out.println("UPDATE");
			
			Boolean esControlTabla=false;
			//JTextArea jTextArea=null;
			Container containerParent=null;
			Component componentOpposite=null;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			TipoFormaPagoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.tipoformapago,new Object(),this.tipoformapagoParameterGeneral,this.tipoformapagoReturnGeneral);
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			//jTextArea=(JTextArea)evt.getSource();
			
			containerParent=jTextArea.getParent();
			componentOpposite=null;//evt.getOppositeComponent();
			
			if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
				|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
			) {
				esControlTabla=true;
			}
			
			this.esControlTabla=esControlTabla;
			
			


			
			TipoFormaPagoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.tipoformapago,new Object(),this.tipoformapagoParameterGeneral,this.tipoformapagoReturnGeneral);
			
			*/
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,TipoFormaPagoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaRemoveUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			//System.out.println("REMOVE");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,TipoFormaPagoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaInsertUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			
			//System.out.println("INSERT");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,TipoFormaPagoConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO EXISTE O NO ES APLICABLE
	public void jTextAreaActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaTipoFormaPagoActual();
			
			this.actualizarInformacion("EVENTO_CONTROL",false,this.tipoformapago);
			
			this.actualizarInformacion("INFO_PADRE",false,this.tipoformapago);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,TipoFormaPagoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jLabelFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JLabel jLabel=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jLabel=(JLabel)evt.getSource();
				
				containerParent=jLabel.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.tipoformapago);
				
				this.actualizarInformacion("INFO_PADRE",false,this.tipoformapago);
				
				TipoFormaPagoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.tipoformapago,new Object(),this.tipoformapagoParameterGeneral,this.tipoformapagoReturnGeneral);
								
				
				


				
				TipoFormaPagoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.tipoformapago,new Object(),this.tipoformapagoParameterGeneral,this.tipoformapagoReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(TipoFormaPago.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",TipoFormaPago.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jLabel, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}	
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,TipoFormaPagoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jLabelFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaTipoFormaPagoActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosTipoFormaPago.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoformapagoAnterior =(TipoFormaPago) this.tipoformapagoLogic.getTipoFormaPagos().toArray()[this.jTableDatosTipoFormaPago.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.tipoformapagoAnterior =(TipoFormaPago) this.tipoformapagos.toArray()[this.jTableDatosTipoFormaPago.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,TipoFormaPagoConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO EXISTE O NO ES APLICABLE
	public void jLabelActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaTipoFormaPagoActual();
				
			this.actualizarInformacion("EVENTO_CONTROL",false,this.tipoformapago);
			
			this.actualizarInformacion("INFO_PADRE",false,this.tipoformapago);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,TipoFormaPagoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxItemListenerGeneral(String sTipo,ItemEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaTipoFormaPagoActual();
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JCheckBox jCheckBox=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
							
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jCheckBox=(JCheckBox)evt.getSource();
				
				containerParent=jCheckBox.getParent();
						
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.tipoformapago);
				
				this.actualizarInformacion("INFO_PADRE",false,this.tipoformapago);
				
				TipoFormaPagoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.tipoformapago,new Object(),this.tipoformapagoParameterGeneral,this.tipoformapagoReturnGeneral);
												
				
				if(sTipo.equals("SeleccionarTodosTipoFormaPago")) {
					jCheckBoxSeleccionarTodosTipoFormaPagoItemListener(evt);
				
				} else if(sTipo.equals("SeleccionadosTipoFormaPago")) {
					jCheckBoxSeleccionadosTipoFormaPagoItemListener(evt);
				
				} else if(sTipo.equals("NuevoToolBarTipoFormaPago")) {
					
				}
				
				


				
				
				TipoFormaPagoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.tipoformapago,new Object(),this.tipoformapagoParameterGeneral,this.tipoformapagoReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(TipoFormaPago.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",TipoFormaPago.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jCheckBox, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}	
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,TipoFormaPagoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.CHECKBOX,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JCheckBox jCheckBox=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jCheckBox=(JCheckBox)evt.getSource();
				
				containerParent=jCheckBox.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				//this.actualizarInformacion("EVENTO_CONTROL",false,this.tipoformapago);
				
				//this.actualizarInformacion("INFO_PADRE",false,this.tipoformapago);
				
				TipoFormaPagoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.tipoformapago,new Object(),this.tipoformapagoParameterGeneral,this.tipoformapagoReturnGeneral);
												
				
				


				
				
				TipoFormaPagoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.tipoformapago,new Object(),this.tipoformapagoParameterGeneral,this.tipoformapagoReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
				
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(TipoFormaPago.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",TipoFormaPago.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jCheckBox, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,TipoFormaPagoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaTipoFormaPagoActual();
			
				//SELECCIONA FILA A OBJETO ANTERIOR
				Integer intSelectedRow = this.jTableDatosTipoFormaPago.getSelectedRow();
						
				if(intSelectedRow!=null && intSelectedRow>-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.tipoformapagoAnterior =(TipoFormaPago) this.tipoformapagoLogic.getTipoFormaPagos().toArray()[this.jTableDatosTipoFormaPago.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
						this.tipoformapagoAnterior =(TipoFormaPago) this.tipoformapagos.toArray()[this.jTableDatosTipoFormaPago.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					//System.out.println(this.banco);
				}
			}
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,TipoFormaPagoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaTipoFormaPagoActual();
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.tipoformapago);
				
				this.actualizarInformacion("INFO_PADRE",false,this.tipoformapago);
				
				TipoFormaPagoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.tipoformapago,new Object(),this.tipoformapagoParameterGeneral,this.tipoformapagoReturnGeneral);
				
				
				TipoFormaPagoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.tipoformapago,new Object(),this.tipoformapagoParameterGeneral,this.tipoformapagoReturnGeneral);
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,TipoFormaPagoConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO SE UTILIZA, SE USA EL DE ABAJO, IGUAL SE DEJA EL CODIGO COMO RESPALDO Y ES CASI IGUAL
	//ERROR:SI SE USA,AL HACER CLIC EN EL MISMO ELEMENTO O EJECUTAR SELECTEDITEM, SIEMPRE SE EJECUTA COMO SI ESCOGIERA OTRO ELEMENTO(NO DEBERIA)
	//@SuppressWarnings("rawtypes")
	public void jComboBoxActionPerformedGeneral(String sTipo,ActionEvent evt) {		
		try {
			/*		
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			Container containerParent=null;
			Component componentOpposite=null;
			Boolean esControlTabla=false;
				
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			TipoFormaPagoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.tipoformapago,new Object(),this.tipoformapagoParameterGeneral,this.tipoformapagoReturnGeneral);
			JComboBox jComboBoxGenerico=null;						
			
			if(evt.getSource().getClass().equals(JComboBox.class)
				|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
					
				jComboBoxGenerico=(JComboBox)evt.getSource();
				
				containerParent=jComboBoxGenerico.getParent();
				
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
			}
			
			String sFinalQueryCombo="";
			
			


			if(sTipo.equals("id_tipo_transaccion_moduloTipoFormaPago")) {
				if(jComboBoxGenerico==null) {
					jComboBoxGenerico=this.jInternalFrameDetalleFormTipoFormaPago.jComboBoxid_tipo_transaccion_moduloTipoFormaPago;
				}

				if(this.tipoformapagoSessionBean.getConGuardarRelaciones()) {
					//classes=TipoFormaPagoConstantesFunciones.getClassesRelationshipsOfTipoFormaPago(new ArrayList<Classe>(),DeepLoadType.NONE);
				}


				this.procesarActionsCombosForeignKeyTipoTransaccionModulo(jComboBoxGenerico,"Formulario");

				this.recargarFormTipoFormaPago(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"COMBOBOX",classes,false,esControlTabla);
			}
			 else if(sTipo.equals("jComboBoxid_tipo_transaccion_moduloFK_IdTipoTransaccionModuloTipoFormaPago")) {
				this.procesarActionsCombosForeignKeyTipoTransaccionModulo(jComboBoxid_tipo_transaccion_moduloFK_IdTipoTransaccionModuloTipoFormaPago,"FK_IdTipoTransaccionModulo");
				//recargarFormTipoFormaPagoTipoTransaccionModulo(jComboBoxid_tipo_transaccion_moduloFK_IdTipoTransaccionModuloTipoFormaPago,"FK_IdTipoTransaccionModulo");
			}
			
			TipoFormaPagoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.tipoformapago,new Object(),this.tipoformapagoParameterGeneral,this.tipoformapagoReturnGeneral);
			*/						
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,TipoFormaPagoConstantesFunciones.CLASSNAME);
  		}		
    }
	
	@SuppressWarnings("rawtypes")
	public void jComboBoxItemStateChangedGeneral(String sTipo,ItemEvent evt) { 	  
		try {
			if (evt.getStateChange() == ItemEvent.SELECTED && this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaTipoFormaPagoActual();
			
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
			
			
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				Container containerParent=null;
				Component componentOpposite=null;
				Boolean esControlTabla=false;
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				JComboBox jComboBoxGenerico=null;						
				
				if(evt.getSource().getClass().equals(JComboBox.class)
					|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
						
					jComboBoxGenerico=(JComboBox)evt.getSource();
					
					containerParent=jComboBoxGenerico.getParent();
					
					componentOpposite=null;//evt.getOppositeComponent();
					
					if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
					) {					
						esControlTabla=true;
					}		
					
					this.esControlTabla=esControlTabla;
				}
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.tipoformapago);
				
				this.actualizarInformacion("INFO_PADRE",false,this.tipoformapago);
				
				TipoFormaPagoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.tipoformapago,new Object(),this.tipoformapagoParameterGeneral,this.tipoformapagoReturnGeneral);
				
				
				String sFinalQueryCombo="";
				
				


			if(sTipo.equals("id_tipo_transaccion_moduloTipoFormaPago")) {
				if(jComboBoxGenerico==null) {
					jComboBoxGenerico=this.jInternalFrameDetalleFormTipoFormaPago.jComboBoxid_tipo_transaccion_moduloTipoFormaPago;
				}

				if(this.tipoformapagoSessionBean.getConGuardarRelaciones()) {
					//classes=TipoFormaPagoConstantesFunciones.getClassesRelationshipsOfTipoFormaPago(new ArrayList<Classe>(),DeepLoadType.NONE);
				}


				this.procesarActionsCombosForeignKeyTipoTransaccionModulo(jComboBoxGenerico,"Formulario");

				this.recargarFormTipoFormaPago(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"COMBOBOX",classes,false,esControlTabla);
			}
			 else if(sTipo.equals("jComboBoxid_tipo_transaccion_moduloFK_IdTipoTransaccionModuloTipoFormaPago")) {
				this.procesarActionsCombosForeignKeyTipoTransaccionModulo(jComboBoxid_tipo_transaccion_moduloFK_IdTipoTransaccionModuloTipoFormaPago,"FK_IdTipoTransaccionModulo");
				//recargarFormTipoFormaPagoTipoTransaccionModulo(jComboBoxid_tipo_transaccion_moduloFK_IdTipoTransaccionModuloTipoFormaPago,"FK_IdTipoTransaccionModulo");
			}
				
				TipoFormaPagoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.tipoformapago,new Object(),this.tipoformapagoParameterGeneral,this.tipoformapagoReturnGeneral);
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
				
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(TipoFormaPago.class.getName());
								
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",TipoFormaPago.class.getName(),sTipo,"COMBOBOX",esControlTabla,conIrServidorAplicacionParent,
							id,jComboBoxGenerico, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,TipoFormaPagoConstantesFunciones.CLASSNAME);
  		}
    }
	
	//@SuppressWarnings("rawtypes")
	public void jComboBoxFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		//MANEJADO EN ITEMLISTENER
		/*
		try {
			if(this.permiteManejarEventosControl()) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				
				//if(this.esUsoDesdeHijo) {
				//	eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				//}
				
				
				Container containerParent=null;
				Component componentOpposite=null;
				Boolean esControlTabla=false;
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
			
				this.actualizarInformacion("EVENTO_CONTROL",false,this.tipoformapago);
				
				this.actualizarInformacion("INFO_PADRE",false,this.tipoformapago);
				
				TipoFormaPagoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.tipoformapago,new Object(),this.tipoformapagoParameterGeneral,this.tipoformapagoReturnGeneral);
				JComboBox jComboBoxGenerico=null;						
				
				if(evt.getSource().getClass().equals(JComboBox.class)
					|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
						
					jComboBoxGenerico=(JComboBox)evt.getSource();
					
					containerParent=jComboBoxGenerico.getParent();
					
					componentOpposite=evt.getOppositeComponent();
					
					if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
					) {					
						esControlTabla=true;
					}
					
					this.esControlTabla=esControlTabla;
				}
				
				String sFinalQueryCombo="";
				
				


			if(sTipo.equals("id_tipo_transaccion_moduloTipoFormaPago")) {
				if(jComboBoxGenerico==null) {
					jComboBoxGenerico=this.jInternalFrameDetalleFormTipoFormaPago.jComboBoxid_tipo_transaccion_moduloTipoFormaPago;
				}

				if(this.tipoformapagoSessionBean.getConGuardarRelaciones()) {
					//classes=TipoFormaPagoConstantesFunciones.getClassesRelationshipsOfTipoFormaPago(new ArrayList<Classe>(),DeepLoadType.NONE);
				}


				this.procesarActionsCombosForeignKeyTipoTransaccionModulo(jComboBoxGenerico,"Formulario");

				this.recargarFormTipoFormaPago(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"COMBOBOX",classes,false,esControlTabla);
			}
			 else if(sTipo.equals("jComboBoxid_tipo_transaccion_moduloFK_IdTipoTransaccionModuloTipoFormaPago")) {
				this.procesarActionsCombosForeignKeyTipoTransaccionModulo(jComboBoxid_tipo_transaccion_moduloFK_IdTipoTransaccionModuloTipoFormaPago,"FK_IdTipoTransaccionModulo");
				//recargarFormTipoFormaPagoTipoTransaccionModulo(jComboBoxid_tipo_transaccion_moduloFK_IdTipoTransaccionModuloTipoFormaPago,"FK_IdTipoTransaccionModulo");
			}
				
				TipoFormaPagoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.tipoformapago,new Object(),this.tipoformapagoParameterGeneral,this.tipoformapagoReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(TipoFormaPago.class.getName());
				
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",TipoFormaPago.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jComboBoxGenerico, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,TipoFormaPagoConstantesFunciones.CLASSNAME);
  		}
		
		*/
    }
	
	public void jComboBoxFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaTipoFormaPagoActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosTipoFormaPago.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipoformapagoAnterior =(TipoFormaPago) this.tipoformapagoLogic.getTipoFormaPagos().toArray()[this.jTableDatosTipoFormaPago.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.tipoformapagoAnterior =(TipoFormaPago) this.tipoformapagos.toArray()[this.jTableDatosTipoFormaPago.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,TipoFormaPagoConstantesFunciones.CLASSNAME);
  		}
    }		
	
	public void tableValueChangedGeneral(String sTipo,ListSelectionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				TipoFormaPagoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TABLE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.tipoformapago,new Object(),this.tipoformapagoParameterGeneral,this.tipoformapagoReturnGeneral);
				
				if(sTipo.equals("TableDatosSeleccionarTipoFormaPago")) {
					//BYDAN_DESHABILITADO
					//try {jTableDatosTipoFormaPagoListSelectionListener(e);}catch(Exception e1){e1.printStackTrace();}
					
					//SOLO CUANDO MOUSE ES SOLTADO
					if (!evt.getValueIsAdjusting()) {
						//SELECCIONA FILA A OBJETO ACTUAL
						Integer intSelectedRow = this.jTableDatosTipoFormaPago.getSelectedRow();
						
						if(intSelectedRow!=null && intSelectedRow>-1) {
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								this.tipoformapago =(TipoFormaPago) this.tipoformapagoLogic.getTipoFormaPagos().toArray()[this.jTableDatosTipoFormaPago.convertRowIndexToModel(intSelectedRow)];
							} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
								this.tipoformapago =(TipoFormaPago) this.tipoformapagos.toArray()[this.jTableDatosTipoFormaPago.convertRowIndexToModel(intSelectedRow)];
							}
							//ARCHITECTURE
							
							//System.out.println(this.tipoformapago);
						}
					}
					
				} else if(sTipo.equals("jButtonCancelarTipoFormaPago")) {
				
				}
				
				TipoFormaPagoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TABLE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.tipoformapago,new Object(),this.tipoformapagoParameterGeneral,this.tipoformapagoReturnGeneral);
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,TipoFormaPagoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void tableMouseAdapterGeneral(String sTipo,MouseEvent evt) { 	  
		try {
			TipoFormaPagoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TABLE,EventoTipo.MOUSE,EventoSubTipo.CLICKED,sTipo,this.tipoformapago,new Object(),this.tipoformapagoParameterGeneral,this.tipoformapagoReturnGeneral);
			
			if(sTipo.equals("DatosSeleccionarTipoFormaPago")) {
				if (evt.getClickCount() == 2) {
					jButtonIdActionPerformed(null,jTableDatosTipoFormaPago.getSelectedRow(),false,false);
				}	
			} else if(sTipo.equals("jButtonCancelarTipoFormaPago")) {
			
			}
			
			TipoFormaPagoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TABLE,EventoTipo.MOUSE,EventoSubTipo.CLICKED,sTipo,this.tipoformapago,new Object(),this.tipoformapagoParameterGeneral,this.tipoformapagoReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,TipoFormaPagoConstantesFunciones.CLASSNAME);
  		}
    }
	
	;
	
	public void jButtonActionPerformedTecladoGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			this.startProcessTipoFormaPago();
			
			TipoFormaPagoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.KEY,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.tipoformapago,new Object(),this.tipoformapagoParameterGeneral,this.tipoformapagoReturnGeneral);
			
			if(sTipo.equals("NuevoTipoFormaPago")) {
				jButtonNuevoTipoFormaPagoActionPerformed(evt,false);
				
			} else if(sTipo.equals("DuplicarTipoFormaPago")) {
				jButtonDuplicarTipoFormaPagoActionPerformed(evt,false);
				
			} else if(sTipo.equals("CopiarTipoFormaPago")) {
				jButtonCopiarTipoFormaPagoActionPerformed(evt);
				
			} else if(sTipo.equals("VerFormTipoFormaPago")) {
				jButtonVerFormTipoFormaPagoActionPerformed(evt);
				
			} else if(sTipo.equals("NuevoRelacionesTipoFormaPago")) {
				jButtonNuevoTipoFormaPagoActionPerformed(evt,true);
				
			} else if(sTipo.equals("ModificarTipoFormaPago")) {
				jButtonModificarTipoFormaPagoActionPerformed(evt);
				
			} else if(sTipo.equals("ActualizarTipoFormaPago")) {
				jButtonActualizarTipoFormaPagoActionPerformed(evt);
				
			} else if(sTipo.equals("EliminarTipoFormaPago")) {
				jButtonEliminarTipoFormaPagoActionPerformed(evt);
				
			} else if(sTipo.equals("GuardarCambiosTablaTipoFormaPago")) {
				jButtonGuardarCambiosTipoFormaPagoActionPerformed(evt);
				
			} else if(sTipo.equals("CancelarTipoFormaPago")) {
				jButtonCancelarTipoFormaPagoActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarTipoFormaPago")) {
				jButtonCerrarTipoFormaPagoActionPerformed(evt);
				
			} else if(sTipo.equals("GuardarCambiosTipoFormaPago")) {
				jButtonGuardarCambiosTipoFormaPagoActionPerformed(evt);
			
			} else if(sTipo.equals("NuevoGuardarCambiosTipoFormaPago")) {
				jButtonNuevoGuardarCambiosTipoFormaPagoActionPerformed(evt);
			
			} else if(sTipo.equals("AbrirOrderByTipoFormaPago")) {
				jButtonAbrirOrderByTipoFormaPagoActionPerformed(evt);
			
			} else if(sTipo.equals("RecargarInformacionTipoFormaPago")) {
				jButtonRecargarInformacionTipoFormaPagoActionPerformed(evt);
			
			} else if(sTipo.equals("AnterioresTipoFormaPago")) {
				jButtonAnterioresTipoFormaPagoActionPerformed(evt);			
			
			}  else if(sTipo.equals("SiguientesTipoFormaPago")) {
				jButtonSiguientesTipoFormaPagoActionPerformed(evt);			
			} 
			
			
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("idTipoFormaPagoBusqueda")) {
				this.jButtonidTipoFormaPagoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_empresaTipoFormaPagoUpdate")) {
				this.jButtonid_empresaTipoFormaPagoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_empresaTipoFormaPagoBusqueda")) {
				this.jButtonid_empresaTipoFormaPagoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_sucursalTipoFormaPagoUpdate")) {
				this.jButtonid_sucursalTipoFormaPagoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_sucursalTipoFormaPagoBusqueda")) {
				this.jButtonid_sucursalTipoFormaPagoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_moduloTipoFormaPagoUpdate")) {
				this.jButtonid_moduloTipoFormaPagoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_moduloTipoFormaPagoBusqueda")) {
				this.jButtonid_moduloTipoFormaPagoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_grupo_forma_pagoTipoFormaPagoUpdate")) {
				this.jButtonid_tipo_grupo_forma_pagoTipoFormaPagoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_grupo_forma_pagoTipoFormaPagoBusqueda")) {
				this.jButtonid_tipo_grupo_forma_pagoTipoFormaPagoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("nombreTipoFormaPagoBusqueda")) {
				this.jButtonnombreTipoFormaPagoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("siglasTipoFormaPagoBusqueda")) {
				this.jButtonsiglasTipoFormaPagoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("con_detalleTipoFormaPagoBusqueda")) {
				this.jButtoncon_detalleTipoFormaPagoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("con_cuotasTipoFormaPagoBusqueda")) {
				this.jButtoncon_cuotasTipoFormaPagoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_transaccion_moduloTipoFormaPagoUpdate")) {
				this.jButtonid_tipo_transaccion_moduloTipoFormaPagoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_transaccion_moduloTipoFormaPagoBusqueda")) {
				this.jButtonid_tipo_transaccion_moduloTipoFormaPagoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_transaccionTipoFormaPagoUpdate")) {
				this.jButtonid_transaccionTipoFormaPagoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_transaccionTipoFormaPagoBusqueda")) {
				this.jButtonid_transaccionTipoFormaPagoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_cuenta_contableTipoFormaPago")) {
				this.jButtonid_cuenta_contableTipoFormaPagoActionPerformed(evt);
			}
			//BUSQUEDA ARBOL CAMPO
			else if(sTipo.equals("id_cuenta_contableTipoFormaPagoArbol")) {
				this.abrirFrameTreeCuentaContable("BUSQUEDA_FK");
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_cuenta_contableTipoFormaPagoUpdate")) {
				this.jButtonid_cuenta_contableTipoFormaPagoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_cuenta_contableTipoFormaPagoBusqueda")) {
				this.jButtonid_cuenta_contableTipoFormaPagoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("descripcionTipoFormaPagoBusqueda")) {
				this.jButtondescripcionTipoFormaPagoBusquedaActionPerformed(evt);
			}
			
			TipoFormaPagoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.KEY,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.tipoformapago,new Object(),this.tipoformapagoParameterGeneral,this.tipoformapagoReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,TipoFormaPagoConstantesFunciones.CLASSNAME);
			
  		}  finally {
      		this.finishProcessTipoFormaPago();
      	}
    }
	
	public void internalFrameClosingInternalFrameGeneral(String sTipo,InternalFrameEvent evt) { 	  
		try {
			TipoFormaPagoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.WINDOW,EventoTipo.CLIC,EventoSubTipo.CLOSING,sTipo,this.tipoformapago,new Object(),this.tipoformapagoParameterGeneral,this.tipoformapagoReturnGeneral);
			
			if(sTipo.equals("CloseInternalFrameTipoFormaPago")) {
				closingInternalFrameTipoFormaPago();
				
			} else if(sTipo.equals("jButtonCancelarTipoFormaPago")) {
				JInternalFrameBase jInternalFrameDetalleFormTipoFormaPago = (JInternalFrameBase)evt.getSource();
	            	
	            TipoFormaPagoBeanSwingJInternalFrame jInternalFrameParent=(TipoFormaPagoBeanSwingJInternalFrame)jInternalFrameDetalleFormTipoFormaPago.getjInternalFrameParent();
	            
				jInternalFrameParent.jButtonCancelarTipoFormaPagoActionPerformed(null);
			}
			
			TipoFormaPagoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.WINDOW,EventoTipo.CLIC,EventoSubTipo.CLOSING,sTipo,this.tipoformapago,new Object(),this.tipoformapagoParameterGeneral,this.tipoformapagoReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,TipoFormaPagoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void recargarFormTipoFormaPago(String sTipo,String sDominio,EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,String sTipoGeneral,ArrayList<Classe> classes,Boolean conIrServidorAplicacion) throws Exception {
		this.recargarFormTipoFormaPago(sTipo,sDominio,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipoGeneral,classes,conIrServidorAplicacion,false);
	}
	
	public void recargarFormTipoFormaPago(String sTipo,String sDominio,EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,String sTipoGeneral,ArrayList<Classe> classes,Boolean conIrServidorAplicacion,Boolean esControlTabla) throws Exception {
		if(this.permiteRecargarForm && this.permiteMantenimiento(this.tipoformapago)) {
			if(!esControlTabla) {
				if(TipoFormaPagoJInternalFrame.ISBINDING_MANUAL_TABLA) {			
					this.setVariablesFormularioToObjetoActualTipoFormaPago(this.tipoformapago,true,false);
					this.setVariablesFormularioToObjetoActualForeignKeysTipoFormaPago(this.tipoformapago);			
				}
				
				if(this.tipoformapagoSessionBean.getEstaModoGuardarRelaciones()) {
					this.setVariablesFormularioRelacionesToObjetoActualTipoFormaPago(this.tipoformapago,classes);				
				}
			
				if(conIrServidorAplicacion) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {						
						this.tipoformapagoReturnGeneral=tipoformapagoLogic.procesarEventosTipoFormaPagosWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.tipoformapagoLogic.getTipoFormaPagos(),this.tipoformapago,this.tipoformapagoParameterGeneral,this.isEsNuevoTipoFormaPago,classes);//this.tipoformapagoLogic.getTipoFormaPago()//sTipoGeneral
									
					} else if(Constantes.ISUSAEJBREMOTE) {
									
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE
					
					//ACTUALIZA VARIABLES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
					//this.setVariablesObjetoReturnGeneralToBeanTipoFormaPago(this.tipoformapagoReturnGeneral,this.tipoformapagoBean,false);
						
					//ACTUALIZA VARIABLES RELACIONES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
					if(this.tipoformapagoSessionBean.getEstaModoGuardarRelaciones()) {
						//this.setVariablesRelacionesObjetoReturnGeneralToBeanTipoFormaPago(classes,this.tipoformapagoReturnGeneral,this.tipoformapagoBean,false);
					}
						
					if(this.tipoformapagoReturnGeneral.getConRecargarPropiedades()) {
						//INICIALIZA VARIABLES COMBOS NORMALES (FK)
						this.setVariablesObjetoActualToFormularioForeignKeyTipoFormaPago(this.tipoformapagoReturnGeneral.getTipoFormaPago());
							
						//INICIALIZA VARIABLES NORMALES A FORMULARIO(SIN FK)
						this.setVariablesObjetoActualToFormularioTipoFormaPago(this.tipoformapagoReturnGeneral.getTipoFormaPago());	
					}
						
					if(this.tipoformapagoReturnGeneral.getConRecargarRelaciones()) {
						//INICIALIZA VARIABLES RELACIONES A FORMULARIO
						this.setVariablesRelacionesObjetoActualToFormularioTipoFormaPago(this.tipoformapagoReturnGeneral.getTipoFormaPago(),classes);//this.tipoformapagoBean);	
					}									
					
				} else {				
					//INICIALIZA VARIABLES RELACIONES A FORMULARIO
					this.setVariablesRelacionesObjetoActualToFormularioTipoFormaPago(this.tipoformapago,classes);//this.tipoformapagoBean);									
				}
			
				if(TipoFormaPagoJInternalFrame.ISBINDING_MANUAL_TABLA) {
					this.setVariablesFormularioToObjetoActualTipoFormaPago(this.tipoformapago,true,false);
					this.setVariablesFormularioToObjetoActualForeignKeysTipoFormaPago(this.tipoformapago);				
				}
				
			} else {
				
				if(((controlTipo.equals(ControlTipo.TEXTBOX) || controlTipo.equals(ControlTipo.DATE)
					|| controlTipo.equals(ControlTipo.TEXTAREA) || controlTipo.equals(ControlTipo.COMBOBOX)
					)				
					&& eventoTipo.equals(EventoTipo.CHANGE)
					)
					
					|| (controlTipo.equals(ControlTipo.CHECKBOX) && eventoTipo.equals(EventoTipo.CLIC))
					
				) { // && sTipoGeneral.equals("TEXTBOX")
					
					if(this.tipoformapagoAnterior!=null) {
						this.tipoformapago=this.tipoformapagoAnterior;
					}
				}
				
				if(conIrServidorAplicacion) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {						
						this.tipoformapagoReturnGeneral=tipoformapagoLogic.procesarEventosTipoFormaPagosWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.tipoformapagoLogic.getTipoFormaPagos(),this.tipoformapago,this.tipoformapagoParameterGeneral,this.isEsNuevoTipoFormaPago,classes);//this.tipoformapagoLogic.getTipoFormaPago()//sTipoGeneral
									
					} else if(Constantes.ISUSAEJBREMOTE) {
									
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//NO ENTENDIBLE PORQUE PONER
					//if(this.tipoformapagoSessionBean.getEstaModoGuardarRelaciones() 
					//	|| this.tipoformapagoSessionBean.getEsGuardarRelacionado())	{
						actualizarLista(this.tipoformapagoReturnGeneral.getTipoFormaPago(),tipoformapagoLogic.getTipoFormaPagos());
					//}
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(this.tipoformapagoReturnGeneral.getTipoFormaPago(),this.tipoformapagos);
				}
				//ARCHITECTURE
				
				//this.jTableDatosTipoFormaPago.repaint();
				
				//((AbstractTableModel) this.jTableDatosTipoFormaPago.getModel()).fireTableDataChanged();
				
				this.actualizarVisualTableDatosTipoFormaPago();
			}
		}
	}
	
	public void actualizarVisualTableDatosTipoFormaPago() throws Exception {
		
		TipoFormaPagoModel tipoformapagoModel=(TipoFormaPagoModel)this.jTableDatosTipoFormaPago.getModel();
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			tipoformapagoModel.tipoformapagos=this.tipoformapagoLogic.getTipoFormaPagos();
		
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
			tipoformapagoModel.tipoformapagos=this.tipoformapagos;
		}
		
		
		((TipoFormaPagoModel) this.jTableDatosTipoFormaPago.getModel()).fireTableDataChanged();
	}
	
	public void actualizarVisualTableDatosEventosVistaTipoFormaPago() throws Exception {
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.actualizarLista(this.gettipoformapagoAnterior(),this.tipoformapagoLogic.getTipoFormaPagos());
					
		} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
			this.actualizarLista(this.gettipoformapagoAnterior(),this.tipoformapagos);
		}
		//ARCHITECTURE
						
		this.actualizarFilaTotales();
						
		this.actualizarVisualTableDatosTipoFormaPago();	
	}
	
	public void setVariablesRelacionesObjetoActualToFormularioTipoFormaPago(TipoFormaPago tipoformapago,ArrayList<Classe> classes) throws Exception { 
		try {
			
			for(Classe clas:classes) {
				if(clas.clas.equals(RegistroFormaPagoBanco.class)) {
					this.jInternalFrameDetalleFormTipoFormaPago.registroformapagobancoBeanSwingJInternalFrame.registroformapagobancoLogic.setRegistroFormaPagoBancos(tipoformapago.getRegistroFormaPagoBancos());
					this.jInternalFrameDetalleFormTipoFormaPago.registroformapagobancoBeanSwingJInternalFrame.inicializarActualizarBindingTablaRegistroFormaPagoBanco(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(DetaFormaPagoFactu.class)) {
					this.jInternalFrameDetalleFormTipoFormaPago.detaformapagofactuBeanSwingJInternalFrame.detaformapagofactuLogic.setDetaFormaPagoFactus(tipoformapago.getDetaFormaPagoFactus());
					this.jInternalFrameDetalleFormTipoFormaPago.detaformapagofactuBeanSwingJInternalFrame.inicializarActualizarBindingTablaDetaFormaPagoFactu(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(GrupoClienteFormaPago.class)) {
					this.jInternalFrameDetalleFormTipoFormaPago.grupoclienteformapagoBeanSwingJInternalFrame.grupoclienteformapagoLogic.setGrupoClienteFormaPagos(tipoformapago.getGrupoClienteFormaPagos());
					this.jInternalFrameDetalleFormTipoFormaPago.grupoclienteformapagoBeanSwingJInternalFrame.inicializarActualizarBindingTablaGrupoClienteFormaPago(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(DetaFormaPago.class)) {
					this.jInternalFrameDetalleFormTipoFormaPago.detaformapagoBeanSwingJInternalFrame.detaformapagoLogic.setDetaFormaPagos(tipoformapago.getDetaFormaPagos());
					this.jInternalFrameDetalleFormTipoFormaPago.detaformapagoBeanSwingJInternalFrame.inicializarActualizarBindingTablaDetaFormaPago(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(FormaPagoPuntoVenta.class)) {
					this.jInternalFrameDetalleFormTipoFormaPago.formapagopuntoventaBeanSwingJInternalFrame.formapagopuntoventaLogic.setFormaPagoPuntoVentas(tipoformapago.getFormaPagoPuntoVentas());
					this.jInternalFrameDetalleFormTipoFormaPago.formapagopuntoventaBeanSwingJInternalFrame.inicializarActualizarBindingTablaFormaPagoPuntoVenta(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(FormaPago.class)) {
					this.jInternalFrameDetalleFormTipoFormaPago.formapagoBeanSwingJInternalFrame.formapagoLogic.setFormaPagos(tipoformapago.getFormaPagos());
					this.jInternalFrameDetalleFormTipoFormaPago.formapagoBeanSwingJInternalFrame.inicializarActualizarBindingTablaFormaPago(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(FormaPagoInven.class)) {
					this.jInternalFrameDetalleFormTipoFormaPago.formapagoinvenBeanSwingJInternalFrame.formapagoinvenLogic.setFormaPagoInvens(tipoformapago.getFormaPagoInvens());
					this.jInternalFrameDetalleFormTipoFormaPago.formapagoinvenBeanSwingJInternalFrame.inicializarActualizarBindingTablaFormaPagoInven(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(CierreCaja.class)) {
					this.jInternalFrameDetalleFormTipoFormaPago.cierrecajaBeanSwingJInternalFrame.cierrecajaLogic.setCierreCajas(tipoformapago.getCierreCajas());
					this.jInternalFrameDetalleFormTipoFormaPago.cierrecajaBeanSwingJInternalFrame.inicializarActualizarBindingTablaCierreCaja(false);
					break;
				}
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,TipoFormaPagoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setEventoParentGeneral(Boolean esUsoDesdeHijo,String sDominio,String sDominioTipo,String sTipo,String sTipoGeneral,Boolean esControlTabla,Boolean conIrServidorAplicacion,
						Long id,Component control, EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,ArrayList<String> arrClasses,
						Object evt,GeneralEntityParameterReturnGeneral generalEntityParameterGeneral,Object otro) { 	  
		try {
			
			if(this.permiteManejarEventosControl()) {
				
				//BASE COPIADO DESDE TEXTFIELLOSTFOCUS
				
				//EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				Boolean conTodasRelaciones=false;
				
				this.esUsoDesdeHijo=esUsoDesdeHijo;
										
				TipoFormaPagoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.tipoformapago,new Object(),generalEntityParameterGeneral,this.tipoformapagoReturnGeneral);
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				for(String sClasse:arrClasses) {
					if(sClasse.equals("TODOS")) {
						conTodasRelaciones=true;
						break;
					}
				}
				
				if(this.tipoformapagoSessionBean.getConGuardarRelaciones()) {
					if(conTodasRelaciones) {
						classes=TipoFormaPagoConstantesFunciones.getClassesRelationshipsOfTipoFormaPago(new ArrayList<Classe>(),DeepLoadType.NONE);
					} else {
						classes=TipoFormaPagoConstantesFunciones.getClassesRelationshipsFromStringsOfTipoFormaPago(arrClasses,DeepLoadType.NONE);
					}
				}
	
				this.classesActual=new ArrayList<Classe>();
				this.classesActual.addAll(classes);
	
				this.recargarFormTipoFormaPago(sTipo,sDominio,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipoGeneral,classes,conIrServidorAplicacion,esControlTabla);
										
				TipoFormaPagoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.tipoformapago,new Object(),generalEntityParameterGeneral,this.tipoformapagoReturnGeneral);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,TipoFormaPagoConstantesFunciones.CLASSNAME);
  		}
    }
	
	/*
	public void setVariablesRelacionesObjetoBeanActualToFormularioTipoFormaPago(TipoFormaPagoBean tipoformapagoBean) throws Exception { 
		try {
			
			for(Classe clas:classes) {
				if(clas.clas.equals(RegistroFormaPagoBanco.class)) {
					this.jInternalFrameDetalleFormTipoFormaPago.registroformapagobancoBeanSwingJInternalFrame.registroformapagobancoLogic.setRegistroFormaPagoBancos(tipoformapago.getRegistroFormaPagoBancos());
					this.jInternalFrameDetalleFormTipoFormaPago.registroformapagobancoBeanSwingJInternalFrame.inicializarActualizarBindingTablaRegistroFormaPagoBanco(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(DetaFormaPagoFactu.class)) {
					this.jInternalFrameDetalleFormTipoFormaPago.detaformapagofactuBeanSwingJInternalFrame.detaformapagofactuLogic.setDetaFormaPagoFactus(tipoformapago.getDetaFormaPagoFactus());
					this.jInternalFrameDetalleFormTipoFormaPago.detaformapagofactuBeanSwingJInternalFrame.inicializarActualizarBindingTablaDetaFormaPagoFactu(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(GrupoClienteFormaPago.class)) {
					this.jInternalFrameDetalleFormTipoFormaPago.grupoclienteformapagoBeanSwingJInternalFrame.grupoclienteformapagoLogic.setGrupoClienteFormaPagos(tipoformapago.getGrupoClienteFormaPagos());
					this.jInternalFrameDetalleFormTipoFormaPago.grupoclienteformapagoBeanSwingJInternalFrame.inicializarActualizarBindingTablaGrupoClienteFormaPago(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(DetaFormaPago.class)) {
					this.jInternalFrameDetalleFormTipoFormaPago.detaformapagoBeanSwingJInternalFrame.detaformapagoLogic.setDetaFormaPagos(tipoformapago.getDetaFormaPagos());
					this.jInternalFrameDetalleFormTipoFormaPago.detaformapagoBeanSwingJInternalFrame.inicializarActualizarBindingTablaDetaFormaPago(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(FormaPagoPuntoVenta.class)) {
					this.jInternalFrameDetalleFormTipoFormaPago.formapagopuntoventaBeanSwingJInternalFrame.formapagopuntoventaLogic.setFormaPagoPuntoVentas(tipoformapago.getFormaPagoPuntoVentas());
					this.jInternalFrameDetalleFormTipoFormaPago.formapagopuntoventaBeanSwingJInternalFrame.inicializarActualizarBindingTablaFormaPagoPuntoVenta(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(FormaPago.class)) {
					this.jInternalFrameDetalleFormTipoFormaPago.formapagoBeanSwingJInternalFrame.formapagoLogic.setFormaPagos(tipoformapago.getFormaPagos());
					this.jInternalFrameDetalleFormTipoFormaPago.formapagoBeanSwingJInternalFrame.inicializarActualizarBindingTablaFormaPago(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(FormaPagoInven.class)) {
					this.jInternalFrameDetalleFormTipoFormaPago.formapagoinvenBeanSwingJInternalFrame.formapagoinvenLogic.setFormaPagoInvens(tipoformapago.getFormaPagoInvens());
					this.jInternalFrameDetalleFormTipoFormaPago.formapagoinvenBeanSwingJInternalFrame.inicializarActualizarBindingTablaFormaPagoInven(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(CierreCaja.class)) {
					this.jInternalFrameDetalleFormTipoFormaPago.cierrecajaBeanSwingJInternalFrame.cierrecajaLogic.setCierreCajas(tipoformapago.getCierreCajas());
					this.jInternalFrameDetalleFormTipoFormaPago.cierrecajaBeanSwingJInternalFrame.inicializarActualizarBindingTablaCierreCaja(false);
					break;
				}
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,TipoFormaPagoConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesRelacionesObjetoReturnGeneralToBeanTipoFormaPago(ArrayList<Classe> classes,TipoFormaPagoReturnGeneral tipoformapagoReturnGeneral,TipoFormaPagoBean tipoformapagoBean,Boolean conDefault) throws Exception {
		
			this.tipoformapagoBean.setRegistroFormaPagoBancos(tipoformapagoReturnGeneral.getTipoFormaPago().getRegistroFormaPagoBancos());
			this.tipoformapagoBean.setDetaFormaPagoFactus(tipoformapagoReturnGeneral.getTipoFormaPago().getDetaFormaPagoFactus());
			this.tipoformapagoBean.setGrupoClienteFormaPagos(tipoformapagoReturnGeneral.getTipoFormaPago().getGrupoClienteFormaPagos());
			this.tipoformapagoBean.setDetaFormaPagos(tipoformapagoReturnGeneral.getTipoFormaPago().getDetaFormaPagos());
			this.tipoformapagoBean.setFormaPagoPuntoVentas(tipoformapagoReturnGeneral.getTipoFormaPago().getFormaPagoPuntoVentas());
			this.tipoformapagoBean.setFormaPagos(tipoformapagoReturnGeneral.getTipoFormaPago().getFormaPagos());
			this.tipoformapagoBean.setFormaPagoInvens(tipoformapagoReturnGeneral.getTipoFormaPago().getFormaPagoInvens());
			this.tipoformapagoBean.setCierreCajas(tipoformapagoReturnGeneral.getTipoFormaPago().getCierreCajas());
	}
	*/
	
	public void setVariablesFormularioRelacionesToObjetoActualTipoFormaPago(TipoFormaPago tipoformapago,ArrayList<Classe> classes) throws Exception {
		
			for(Classe clas:classes) {
				if(clas.clas.equals(RegistroFormaPagoBanco.class)) {
					tipoformapago.setRegistroFormaPagoBancos(this.jInternalFrameDetalleFormTipoFormaPago.registroformapagobancoBeanSwingJInternalFrame.registroformapagobancoLogic.getRegistroFormaPagoBancos());
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(DetaFormaPagoFactu.class)) {
					tipoformapago.setDetaFormaPagoFactus(this.jInternalFrameDetalleFormTipoFormaPago.detaformapagofactuBeanSwingJInternalFrame.detaformapagofactuLogic.getDetaFormaPagoFactus());
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(GrupoClienteFormaPago.class)) {
					tipoformapago.setGrupoClienteFormaPagos(this.jInternalFrameDetalleFormTipoFormaPago.grupoclienteformapagoBeanSwingJInternalFrame.grupoclienteformapagoLogic.getGrupoClienteFormaPagos());
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(DetaFormaPago.class)) {
					tipoformapago.setDetaFormaPagos(this.jInternalFrameDetalleFormTipoFormaPago.detaformapagoBeanSwingJInternalFrame.detaformapagoLogic.getDetaFormaPagos());
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(FormaPagoPuntoVenta.class)) {
					tipoformapago.setFormaPagoPuntoVentas(this.jInternalFrameDetalleFormTipoFormaPago.formapagopuntoventaBeanSwingJInternalFrame.formapagopuntoventaLogic.getFormaPagoPuntoVentas());
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(FormaPago.class)) {
					tipoformapago.setFormaPagos(this.jInternalFrameDetalleFormTipoFormaPago.formapagoBeanSwingJInternalFrame.formapagoLogic.getFormaPagos());
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(FormaPagoInven.class)) {
					tipoformapago.setFormaPagoInvens(this.jInternalFrameDetalleFormTipoFormaPago.formapagoinvenBeanSwingJInternalFrame.formapagoinvenLogic.getFormaPagoInvens());
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(CierreCaja.class)) {
					tipoformapago.setCierreCajas(this.jInternalFrameDetalleFormTipoFormaPago.cierrecajaBeanSwingJInternalFrame.cierrecajaLogic.getCierreCajas());
					break;
				}
			}
	}
	
	public Boolean permiteManejarEventosControl() {
		Boolean permite=true;				
		
		if(this.estaModoNuevo || this.estaModoSeleccionar || this.estaModoEliminarGuardarCambios) {
			permite=false;
			
		} 
		
		//NO DEBE MEZCLARSE CONCEPTOS
		/*	
		if(!paraTabla && !this.permiteMantenimiento(this.tipoformapago)) {
			System.out.println("ERROR:EL OBJETO ACTUAL NO PUEDE SER FILA TOTALES");
				
			//JOptionPane.showMessageDialog(this,"EL OBJETO ACTUAL NO PUEDE SER FILA TOTALES","EVENTO",JOptionPane.ERROR_MESSAGE);			
		}
		*/
		
		return permite;
	}
	
	public void inicializarFormDetalle() throws Exception {
		
		this.jInternalFrameDetalleFormTipoFormaPago = new TipoFormaPagoDetalleFormJInternalFrame(jDesktopPane,this.tipoformapagoSessionBean.getConGuardarRelaciones(),this.tipoformapagoSessionBean.getEsGuardarRelacionado(),this.cargarRelaciones,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo);
		
		this.jDesktopPane.add(this.jInternalFrameDetalleFormTipoFormaPago);
		this.jInternalFrameDetalleFormTipoFormaPago.setVisible(false);
		this.jInternalFrameDetalleFormTipoFormaPago.setSelected(false);						
		
		this.jInternalFrameDetalleFormTipoFormaPago.setJInternalFrameParent(this);
		
		this.jInternalFrameDetalleFormTipoFormaPago.tipoformapagoLogic=this.tipoformapagoLogic;
		
		this.cargarCombosFrameForeignKeyTipoFormaPago("Formulario");
		
		this.inicializarActualizarBindingBotonesPermisosManualFormDetalleTipoFormaPago();
		this.inicializarActualizarBindingtiposArchivosReportesAccionesManualFormDetalleTipoFormaPago();
		
		this.initActionsFormDetalle();		
		
		this.initActionsCombosTodosForeignKeyTipoFormaPago("Formulario");
		
		//TALVEZ conSetVariablesGlobales COMO if() 
		this.setVariablesGlobalesCombosForeignKeyTipoFormaPago();
		
		this.cargarMenuRelaciones();
		
	}
	
	public void initActionsFormDetalle() {	
		
		this.jInternalFrameDetalleFormTipoFormaPago.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"jButtonCancelarTipoFormaPago"));
		
		this.jInternalFrameDetalleFormTipoFormaPago.jButtonModificarTipoFormaPago.addActionListener(new ButtonActionListener(this,"ModificarTipoFormaPago"));

		
		this.jInternalFrameDetalleFormTipoFormaPago.jButtonModificarToolBarTipoFormaPago.addActionListener(new ButtonActionListener(this,"ModificarToolBarTipoFormaPago"));
					
		this.jInternalFrameDetalleFormTipoFormaPago.jMenuItemModificarTipoFormaPago.addActionListener(new ButtonActionListener(this,"MenuItemModificarTipoFormaPago"));		
		
		
		
		this.jInternalFrameDetalleFormTipoFormaPago.jButtonActualizarTipoFormaPago.addActionListener (new ButtonActionListener(this,"ActualizarTipoFormaPago"));
		
		
		this.jInternalFrameDetalleFormTipoFormaPago.jButtonActualizarToolBarTipoFormaPago.addActionListener(new ButtonActionListener(this,"ActualizarToolBarTipoFormaPago"));
						
		this.jInternalFrameDetalleFormTipoFormaPago.jMenuItemActualizarTipoFormaPago.addActionListener (new ButtonActionListener(this,"MenuItemActualizarTipoFormaPago"));		
		
		
		
		this.jInternalFrameDetalleFormTipoFormaPago.jButtonEliminarTipoFormaPago.addActionListener (new ButtonActionListener(this,"EliminarTipoFormaPago"));
		
		
		this.jInternalFrameDetalleFormTipoFormaPago.jButtonEliminarToolBarTipoFormaPago.addActionListener (new ButtonActionListener(this,"EliminarToolBarTipoFormaPago"));
								
		this.jInternalFrameDetalleFormTipoFormaPago.jMenuItemEliminarTipoFormaPago.addActionListener (new ButtonActionListener(this,"MenuItemEliminarTipoFormaPago"));		
		
		
		
		this.jInternalFrameDetalleFormTipoFormaPago.jButtonCancelarTipoFormaPago.addActionListener (new ButtonActionListener(this,"CancelarTipoFormaPago"));
		
		
		this.jInternalFrameDetalleFormTipoFormaPago.jButtonCancelarToolBarTipoFormaPago.addActionListener (new ButtonActionListener(this,"CancelarToolBarTipoFormaPago"));
					
		this.jInternalFrameDetalleFormTipoFormaPago.jMenuItemCancelarTipoFormaPago.addActionListener (new ButtonActionListener(this,"MenuItemCancelarTipoFormaPago"));		
		
		
		
		
		
		this.jInternalFrameDetalleFormTipoFormaPago.jMenuItemDetalleCerrarTipoFormaPago.addActionListener (new ButtonActionListener(this,"MenuItemDetalleCerrarTipoFormaPago"));		
		
		
		
		this.jInternalFrameDetalleFormTipoFormaPago.jButtonGuardarCambiosToolBarTipoFormaPago.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarTipoFormaPago"));
		
		
		
		this.jInternalFrameDetalleFormTipoFormaPago.jButtonGuardarCambiosToolBarTipoFormaPago.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarTipoFormaPago"));
		
		
		
		this.jInternalFrameDetalleFormTipoFormaPago.jComboBoxTiposAccionesFormularioTipoFormaPago.addActionListener (new ButtonActionListener(this,"TiposAccionesFormularioTipoFormaPago"));
		
		
				
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTipoFormaPago.jButtonidTipoFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"idTipoFormaPagoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormTipoFormaPago.jButtonid_empresaTipoFormaPagoUpdate.addActionListener(new ButtonActionListener(this,"id_empresaTipoFormaPagoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTipoFormaPago.jButtonid_empresaTipoFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"id_empresaTipoFormaPagoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormTipoFormaPago.jButtonid_sucursalTipoFormaPagoUpdate.addActionListener(new ButtonActionListener(this,"id_sucursalTipoFormaPagoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTipoFormaPago.jButtonid_sucursalTipoFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"id_sucursalTipoFormaPagoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormTipoFormaPago.jButtonid_moduloTipoFormaPagoUpdate.addActionListener(new ButtonActionListener(this,"id_moduloTipoFormaPagoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTipoFormaPago.jButtonid_moduloTipoFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"id_moduloTipoFormaPagoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormTipoFormaPago.jButtonid_tipo_grupo_forma_pagoTipoFormaPagoUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_grupo_forma_pagoTipoFormaPagoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTipoFormaPago.jButtonid_tipo_grupo_forma_pagoTipoFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_grupo_forma_pagoTipoFormaPagoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTipoFormaPago.jButtonnombreTipoFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"nombreTipoFormaPagoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTipoFormaPago.jButtonsiglasTipoFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"siglasTipoFormaPagoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTipoFormaPago.jButtoncon_detalleTipoFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"con_detalleTipoFormaPagoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTipoFormaPago.jButtoncon_cuotasTipoFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"con_cuotasTipoFormaPagoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormTipoFormaPago.jButtonid_tipo_transaccion_moduloTipoFormaPagoUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_transaccion_moduloTipoFormaPagoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTipoFormaPago.jButtonid_tipo_transaccion_moduloTipoFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_transaccion_moduloTipoFormaPagoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormTipoFormaPago.jButtonid_transaccionTipoFormaPagoUpdate.addActionListener(new ButtonActionListener(this,"id_transaccionTipoFormaPagoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTipoFormaPago.jButtonid_transaccionTipoFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"id_transaccionTipoFormaPagoBusqueda"));
		//jButtonid_cuenta_contableTipoFormaPago.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_cuenta_contableTipoFormaPagoActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormTipoFormaPago.jButtonid_cuenta_contableTipoFormaPago.addActionListener(new ButtonActionListener(this,"id_cuenta_contableTipoFormaPago"));
		//jButtonid_cuenta_contableTipoFormaPagoArbol.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			abrirFrameTreeCuentaContable("BUSQUEDA_FK");
		//		}
		//	}
		//);

		//BUSQUEDA ARBOL CAMPO
		this.jInternalFrameDetalleFormTipoFormaPago.jButtonid_cuenta_contableTipoFormaPagoArbol.addActionListener(new ButtonActionListener(this,"id_cuenta_contableTipoFormaPagoArbol"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormTipoFormaPago.jButtonid_cuenta_contableTipoFormaPagoUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contableTipoFormaPagoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTipoFormaPago.jButtonid_cuenta_contableTipoFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contableTipoFormaPagoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTipoFormaPago.jButtondescripcionTipoFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"descripcionTipoFormaPagoBusqueda"));
		
		
		;

		//TABBED PANE RELACIONES
		this.jInternalFrameDetalleFormTipoFormaPago.jTabbedPaneRelacionesTipoFormaPago.addChangeListener(new TabbedPaneChangeListener(this,"RelacionesTipoFormaPago"));
		
		;		
		//TABBED PANE RELACIONES FIN(EXTRA TAB)	
	}
	
	public void initActions() {				
		this.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"CloseInternalFrameTipoFormaPago"));
		
		if(this.jInternalFrameDetalleFormTipoFormaPago!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormTipoFormaPago.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"jButtonCancelarTipoFormaPago"));
		}
		
		this.jTableDatosTipoFormaPago.getSelectionModel().addListSelectionListener(new TableListSelectionListener(this,"TableDatosSeleccionarTipoFormaPago"));
		
		this.jTableDatosTipoFormaPago.addMouseListener(new TableMouseAdapter(this,"DatosSeleccionarTipoFormaPago"));
		
		this.jButtonNuevoTipoFormaPago.addActionListener(new ButtonActionListener(this,"NuevoTipoFormaPago"));
		
		this.jButtonDuplicarTipoFormaPago.addActionListener(new ButtonActionListener(this,"DuplicarTipoFormaPago"));
		
		this.jButtonCopiarTipoFormaPago.addActionListener(new ButtonActionListener(this,"CopiarTipoFormaPago"));
		
		this.jButtonVerFormTipoFormaPago.addActionListener(new ButtonActionListener(this,"VerFormTipoFormaPago"));
		
		
		this.jButtonNuevoToolBarTipoFormaPago.addActionListener(new ButtonActionListener(this,"NuevoToolBarTipoFormaPago"));
			
		this.jButtonDuplicarToolBarTipoFormaPago.addActionListener(new ButtonActionListener(this,"DuplicarToolBarTipoFormaPago"));
			
		this.jMenuItemNuevoTipoFormaPago.addActionListener (new ButtonActionListener(this,"MenuItemNuevoTipoFormaPago"));
			
		this.jMenuItemDuplicarTipoFormaPago.addActionListener (new ButtonActionListener(this,"MenuItemDuplicarTipoFormaPago"));		
		
		
		this.jButtonNuevoRelacionesTipoFormaPago.addActionListener (new ButtonActionListener(this,"NuevoRelacionesTipoFormaPago"));
		
		
		this.jButtonNuevoRelacionesToolBarTipoFormaPago.addActionListener(new ButtonActionListener(this,"NuevoRelacionesToolBarTipoFormaPago"));
			
		this.jMenuItemNuevoRelacionesTipoFormaPago.addActionListener(new ButtonActionListener(this,"MenuItemNuevoRelacionesTipoFormaPago"));		
		
		
		if(this.jInternalFrameDetalleFormTipoFormaPago!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormTipoFormaPago.jButtonModificarTipoFormaPago.addActionListener(new ButtonActionListener(this,"ModificarTipoFormaPago"));
		}
		
		
		if(this.jInternalFrameDetalleFormTipoFormaPago!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormTipoFormaPago.jButtonModificarToolBarTipoFormaPago.addActionListener(new ButtonActionListener(this,"ModificarToolBarTipoFormaPago"));
			
			this.jInternalFrameDetalleFormTipoFormaPago.jMenuItemModificarTipoFormaPago.addActionListener(new ButtonActionListener(this,"MenuItemModificarTipoFormaPago"));		
		}
		
		
		if(this.jInternalFrameDetalleFormTipoFormaPago!=null) { //if(this.conCargarFormDetalle) {			
			this.jInternalFrameDetalleFormTipoFormaPago.jButtonActualizarTipoFormaPago.addActionListener (new ButtonActionListener(this,"ActualizarTipoFormaPago"));
		}
		
		
		if(this.jInternalFrameDetalleFormTipoFormaPago!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormTipoFormaPago.jButtonActualizarToolBarTipoFormaPago.addActionListener(new ButtonActionListener(this,"ActualizarToolBarTipoFormaPago"));
				
			this.jInternalFrameDetalleFormTipoFormaPago.jMenuItemActualizarTipoFormaPago.addActionListener (new ButtonActionListener(this,"MenuItemActualizarTipoFormaPago"));		
		}
		
		
		if(this.jInternalFrameDetalleFormTipoFormaPago!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormTipoFormaPago.jButtonEliminarTipoFormaPago.addActionListener (new ButtonActionListener(this,"EliminarTipoFormaPago"));
		}
		
		
		if(this.jInternalFrameDetalleFormTipoFormaPago!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormTipoFormaPago.jButtonEliminarToolBarTipoFormaPago.addActionListener (new ButtonActionListener(this,"EliminarToolBarTipoFormaPago"));
						
			this.jInternalFrameDetalleFormTipoFormaPago.jMenuItemEliminarTipoFormaPago.addActionListener (new ButtonActionListener(this,"MenuItemEliminarTipoFormaPago"));		
		}
		
		
		if(this.jInternalFrameDetalleFormTipoFormaPago!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormTipoFormaPago.jButtonCancelarTipoFormaPago.addActionListener (new ButtonActionListener(this,"CancelarTipoFormaPago"));
		}
		
		
		if(this.jInternalFrameDetalleFormTipoFormaPago!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormTipoFormaPago.jButtonCancelarToolBarTipoFormaPago.addActionListener (new ButtonActionListener(this,"CancelarToolBarTipoFormaPago"));
			
			this.jInternalFrameDetalleFormTipoFormaPago.jMenuItemCancelarTipoFormaPago.addActionListener (new ButtonActionListener(this,"MenuItemCancelarTipoFormaPago"));		
		}
		
		this.jButtonMostrarOcultarTablaToolBarTipoFormaPago.addActionListener (new ButtonActionListener(this,"MostrarOcultarToolBarTipoFormaPago"));		
		
		
		this.jButtonCerrarTipoFormaPago.addActionListener (new ButtonActionListener(this,"CerrarTipoFormaPago"));
		
		
		this.jButtonCerrarToolBarTipoFormaPago.addActionListener (new ButtonActionListener(this,"CerrarToolBarTipoFormaPago"));
			
		this.jMenuItemCerrarTipoFormaPago.addActionListener (new ButtonActionListener(this,"MenuItemCerrarTipoFormaPago"));
			
		if(this.jInternalFrameDetalleFormTipoFormaPago!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormTipoFormaPago.jMenuItemDetalleCerrarTipoFormaPago.addActionListener (new ButtonActionListener(this,"MenuItemDetalleCerrarTipoFormaPago"));		
		}
		
		
		if(this.jInternalFrameDetalleFormTipoFormaPago!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormTipoFormaPago.jButtonGuardarCambiosTipoFormaPago.addActionListener (new ButtonActionListener(this,"GuardarCambiosTipoFormaPago"));
		}
		
		
		if(this.jInternalFrameDetalleFormTipoFormaPago!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormTipoFormaPago.jButtonGuardarCambiosToolBarTipoFormaPago.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarTipoFormaPago"));
		}
		
		this.jButtonCopiarToolBarTipoFormaPago.addActionListener (new ButtonActionListener(this,"CopiarToolBarTipoFormaPago"));
			
		this.jButtonVerFormToolBarTipoFormaPago.addActionListener (new ButtonActionListener(this,"VerFormToolBarTipoFormaPago"));
		
		this.jMenuItemGuardarCambiosTipoFormaPago.addActionListener (new ButtonActionListener(this,"MenuItemGuardarCambiosTipoFormaPago"));
			
		this.jMenuItemCopiarTipoFormaPago.addActionListener (new ButtonActionListener(this,"MenuItemCopiarTipoFormaPago"));		
		
		this.jMenuItemVerFormTipoFormaPago.addActionListener (new ButtonActionListener(this,"MenuItemVerFormTipoFormaPago"));		
		
		
		this.jButtonGuardarCambiosTablaTipoFormaPago.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaTipoFormaPago"));
		
		
		this.jButtonGuardarCambiosTablaToolBarTipoFormaPago.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaToolBarTipoFormaPago"));
			
		this.jMenuItemGuardarCambiosTablaTipoFormaPago.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaTipoFormaPago"));		
		
		
		
		this.jButtonRecargarInformacionTipoFormaPago.addActionListener (new ButtonActionListener(this,"RecargarInformacionTipoFormaPago"));
					
		this.jButtonRecargarInformacionToolBarTipoFormaPago.addActionListener (new ButtonActionListener(this,"RecargarInformacionToolBarTipoFormaPago"));
		
		this.jMenuItemRecargarInformacionTipoFormaPago.addActionListener (new ButtonActionListener(this,"MenuItemRecargarInformacionTipoFormaPago"));		
		
		
		
		this.jButtonAnterioresTipoFormaPago.addActionListener (new ButtonActionListener(this,"AnterioresTipoFormaPago"));
		
		
		this.jButtonAnterioresToolBarTipoFormaPago.addActionListener (new ButtonActionListener(this,"AnterioresToolBarTipoFormaPago"));
		
		this.jMenuItemAnterioresTipoFormaPago.addActionListener (new ButtonActionListener(this,"MenuItemAnterioresTipoFormaPago"));		
		
		
		this.jButtonSiguientesTipoFormaPago.addActionListener (new ButtonActionListener(this,"SiguientesTipoFormaPago"));
		
		
		this.jButtonSiguientesToolBarTipoFormaPago.addActionListener (new ButtonActionListener(this,"SiguientesToolBarTipoFormaPago"));
			
		this.jMenuItemSiguientesTipoFormaPago.addActionListener (new ButtonActionListener(this,"MenuItemSiguientesTipoFormaPago"));
			
		this.jMenuItemAbrirOrderByTipoFormaPago.addActionListener (new ButtonActionListener(this,"MenuItemAbrirOrderByTipoFormaPago"));
			
		this.jMenuItemMostrarOcultarTipoFormaPago.addActionListener (new ButtonActionListener(this,"MenuItemMostrarOcultarTipoFormaPago"));
			
		this.jMenuItemDetalleAbrirOrderByTipoFormaPago.addActionListener (new ButtonActionListener(this,"MenuItemDetalleAbrirOrderByTipoFormaPago"));
			
		this.jMenuItemDetalleMostarOcultarTipoFormaPago.addActionListener (new ButtonActionListener(this,"MenuItemDetalleMostrarOcultarTipoFormaPago"));		
		
		
		this.jButtonNuevoGuardarCambiosTipoFormaPago.addActionListener (new ButtonActionListener(this,"NuevoGuardarCambiosTipoFormaPago"));
		
		
		this.jButtonNuevoGuardarCambiosToolBarTipoFormaPago.addActionListener (new ButtonActionListener(this,"NuevoGuardarCambiosToolBarTipoFormaPago"));
			
		this.jMenuItemNuevoGuardarCambiosTipoFormaPago.addActionListener (new ButtonActionListener(this,"MenuItemNuevoGuardarCambiosTipoFormaPago"));		
		
		
		
		//SELECCIONAR TODOS
		
		this.jCheckBoxSeleccionarTodosTipoFormaPago.addItemListener(new CheckBoxItemListener(this,"SeleccionarTodosTipoFormaPago"));

		this.jCheckBoxSeleccionadosTipoFormaPago.addItemListener(new CheckBoxItemListener(this,"SeleccionadosTipoFormaPago"));
		
		if(this.jInternalFrameDetalleFormTipoFormaPago!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormTipoFormaPago.jComboBoxTiposAccionesFormularioTipoFormaPago.addActionListener (new ButtonActionListener(this,"TiposAccionesFormularioTipoFormaPago"));
		}
		
		
		this.jComboBoxTiposRelacionesTipoFormaPago.addActionListener (new ButtonActionListener(this,"TiposRelacionesTipoFormaPago"));
			
		this.jComboBoxTiposAccionesTipoFormaPago.addActionListener (new ButtonActionListener(this,"TiposAccionesTipoFormaPago"));
					
		this.jComboBoxTiposSeleccionarTipoFormaPago.addActionListener (new ButtonActionListener(this,"TiposSeleccionarTipoFormaPago"));
			
		this.jTextFieldValorCampoGeneralTipoFormaPago.addActionListener (new ButtonActionListener(this,"ValorCampoGeneralTipoFormaPago"));		
		
		
		if(this.jInternalFrameDetalleFormTipoFormaPago!=null) { //if(this.conCargarFormDetalle) {
		
		
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTipoFormaPago.jButtonidTipoFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"idTipoFormaPagoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormTipoFormaPago.jButtonid_empresaTipoFormaPagoUpdate.addActionListener(new ButtonActionListener(this,"id_empresaTipoFormaPagoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTipoFormaPago.jButtonid_empresaTipoFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"id_empresaTipoFormaPagoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormTipoFormaPago.jButtonid_sucursalTipoFormaPagoUpdate.addActionListener(new ButtonActionListener(this,"id_sucursalTipoFormaPagoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTipoFormaPago.jButtonid_sucursalTipoFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"id_sucursalTipoFormaPagoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormTipoFormaPago.jButtonid_moduloTipoFormaPagoUpdate.addActionListener(new ButtonActionListener(this,"id_moduloTipoFormaPagoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTipoFormaPago.jButtonid_moduloTipoFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"id_moduloTipoFormaPagoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormTipoFormaPago.jButtonid_tipo_grupo_forma_pagoTipoFormaPagoUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_grupo_forma_pagoTipoFormaPagoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTipoFormaPago.jButtonid_tipo_grupo_forma_pagoTipoFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_grupo_forma_pagoTipoFormaPagoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTipoFormaPago.jButtonnombreTipoFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"nombreTipoFormaPagoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTipoFormaPago.jButtonsiglasTipoFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"siglasTipoFormaPagoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTipoFormaPago.jButtoncon_detalleTipoFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"con_detalleTipoFormaPagoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTipoFormaPago.jButtoncon_cuotasTipoFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"con_cuotasTipoFormaPagoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormTipoFormaPago.jButtonid_tipo_transaccion_moduloTipoFormaPagoUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_transaccion_moduloTipoFormaPagoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTipoFormaPago.jButtonid_tipo_transaccion_moduloTipoFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_transaccion_moduloTipoFormaPagoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormTipoFormaPago.jButtonid_transaccionTipoFormaPagoUpdate.addActionListener(new ButtonActionListener(this,"id_transaccionTipoFormaPagoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTipoFormaPago.jButtonid_transaccionTipoFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"id_transaccionTipoFormaPagoBusqueda"));
		//jButtonid_cuenta_contableTipoFormaPago.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_cuenta_contableTipoFormaPagoActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormTipoFormaPago.jButtonid_cuenta_contableTipoFormaPago.addActionListener(new ButtonActionListener(this,"id_cuenta_contableTipoFormaPago"));
		//jButtonid_cuenta_contableTipoFormaPagoArbol.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			abrirFrameTreeCuentaContable("BUSQUEDA_FK");
		//		}
		//	}
		//);

		//BUSQUEDA ARBOL CAMPO
		this.jInternalFrameDetalleFormTipoFormaPago.jButtonid_cuenta_contableTipoFormaPagoArbol.addActionListener(new ButtonActionListener(this,"id_cuenta_contableTipoFormaPagoArbol"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormTipoFormaPago.jButtonid_cuenta_contableTipoFormaPagoUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contableTipoFormaPagoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTipoFormaPago.jButtonid_cuenta_contableTipoFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contableTipoFormaPagoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTipoFormaPago.jButtondescripcionTipoFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"descripcionTipoFormaPagoBusqueda"));
		}
		
		if(!this.conCargarMinimo) {
		//BYDAN_BUSQUEDAS
		
		
			this.jButtonBusquedaPorNombreTipoFormaPago.addActionListener(new ButtonActionListener(this,"BusquedaPorNombreTipoFormaPago"));

			this.jButtonBusquedaPorSiglasTipoFormaPago.addActionListener(new ButtonActionListener(this,"BusquedaPorSiglasTipoFormaPago"));

			this.jButtonFK_IdTipoFormaPagoTipoFormaPago.addActionListener(new ButtonActionListener(this,"FK_IdTipoFormaPagoTipoFormaPago"));

			this.jButtonBuscarFK_IdTipoFormaPagoid_cuenta_contableTipoFormaPago.addActionListener(new ButtonActionListener(this,"id_cuenta_contableTipoFormaPago"));

			this.jButtonFK_IdTipoGrupoFormaPagoTipoFormaPago.addActionListener(new ButtonActionListener(this,"FK_IdTipoGrupoFormaPagoTipoFormaPago"));

			this.jButtonFK_IdTipoTransaccionModuloTipoFormaPago.addActionListener(new ButtonActionListener(this,"FK_IdTipoTransaccionModuloTipoFormaPago"));

			this.jButtonFK_IdTransaccionTipoFormaPago.addActionListener(new ButtonActionListener(this,"FK_IdTransaccionTipoFormaPago"));
		
		
		
			//REPORTE DINAMICO
			
			if(this.jInternalFrameReporteDinamicoTipoFormaPago!=null) {
				this.jInternalFrameReporteDinamicoTipoFormaPago.getjButtonCerrarReporteDinamico().addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoTipoFormaPago"));
				this.jInternalFrameReporteDinamicoTipoFormaPago.getjButtonGenerarReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoTipoFormaPago"));
				this.jInternalFrameReporteDinamicoTipoFormaPago.getjButtonGenerarExcelReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoTipoFormaPago"));
			}
			
			//this.jButtonCerrarReporteDinamicoTipoFormaPago.addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoTipoFormaPago"));				
			//this.jButtonGenerarReporteDinamicoTipoFormaPago.addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoTipoFormaPago"));
			//this.jButtonGenerarExcelReporteDinamicoTipoFormaPago.addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoTipoFormaPago"));
				
				
			//IMPORTACION			
			if(this.jInternalFrameImportacionTipoFormaPago!=null) {
				this.jInternalFrameImportacionTipoFormaPago.getjButtonCerrarImportacion().addActionListener (new ButtonActionListener(this,"CerrarImportacionTipoFormaPago"));
				this.jInternalFrameImportacionTipoFormaPago.getjButtonGenerarImportacion().addActionListener (new ButtonActionListener(this,"GenerarImportacionTipoFormaPago"));
				this.jInternalFrameImportacionTipoFormaPago.getjButtonAbrirImportacion().addActionListener (new ButtonActionListener(this,"AbrirImportacionTipoFormaPago"));
			}
			
			//ORDER BY
			this.jButtonAbrirOrderByTipoFormaPago.addActionListener (new ButtonActionListener(this,"AbrirOrderByTipoFormaPago"));
			
			this.jButtonAbrirOrderByToolBarTipoFormaPago.addActionListener (new ButtonActionListener(this,"AbrirOrderByToolBarTipoFormaPago"));			
			
			if(this.jInternalFrameOrderByTipoFormaPago!=null) {
				this.jInternalFrameOrderByTipoFormaPago.getjButtonCerrarOrderBy().addActionListener (new ButtonActionListener(this,"CerrarOrderByTipoFormaPago"));				
			}
			
			
		}
		
		
		
		if(!this.conCargarMinimo) {
			if(this.jInternalFrameDetalleFormTipoFormaPago!=null) { //if(this.conCargarFormDetalle) {
			;
			}
		}
		
		
		//TABBED PANE RELACIONES
		if(this.jInternalFrameDetalleFormTipoFormaPago!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormTipoFormaPago.jTabbedPaneRelacionesTipoFormaPago.addChangeListener(new TabbedPaneChangeListener(this,"RelacionesTipoFormaPago"));
		
		;
		}
		//TABBED PANE RELACIONES FIN(EXTRA TAB)		
	}
	
	/*
	public void initActions() {
		String sMapKey = "";
		InputMap inputMap =null;
		
		this.addInternalFrameListener(new javax.swing.event.InternalFrameAdapter() {
            public void internalFrameClosing(InternalFrameEvent event) {          	
            	try {
            		closingInternalFrameTipoFormaPago();
				} catch (Exception e) {
					e.printStackTrace();
				}
            }
        });
		
		this.jInternalFrameDetalleFormTipoFormaPago.addInternalFrameListener(new javax.swing.event.InternalFrameAdapter() {
	        public void internalFrameClosing(InternalFrameEvent event) {
	            JInternalFrameBase jInternalFrameDetalleFormTipoFormaPago = (JInternalFrameBase)event.getSource();
	            	
	            TipoFormaPagoBeanSwingJInternalFrame jInternalFrameParent=(TipoFormaPagoBeanSwingJInternalFrame)jInternalFrameDetalleFormTipoFormaPago.getjInternalFrameParent();
	                
	            try {
					jInternalFrameParent.jButtonCancelarTipoFormaPagoActionPerformed(null);
					
					//jInternalFrameParent.dispose();
					//jInternalFrameParent=null;
					
				} catch (Exception e) {
					e.printStackTrace();
				}
	        }
	    });
			
		this.jTableDatosTipoFormaPago.getSelectionModel().addListSelectionListener (
	                new ListSelectionListener() {
	                    public void valueChanged(ListSelectionEvent e) {
							//BYDAN_DESHABILITADO
	                    	//try {jTableDatosTipoFormaPagoListSelectionListener(e);}catch(Exception e1){e1.printStackTrace();}
	                    }
	                }
	     );
		
		this.jTableDatosTipoFormaPago.addMouseListener(new MouseAdapter() {
			   public void mouseClicked(MouseEvent evt) {
				      if (evt.getClickCount() == 2) {
				    	  jButtonIdActionPerformed(null,jTableDatosTipoFormaPago.getSelectedRow(),false,false);
				      }
				   }
		});
		
		this.jButtonNuevoTipoFormaPago.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoTipoFormaPagoActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoToolBarTipoFormaPago.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoTipoFormaPagoActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoTipoFormaPago.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoTipoFormaPagoActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "NuevoTipoFormaPago";
		inputMap = this.jButtonNuevoTipoFormaPago.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_N , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonNuevoTipoFormaPago.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonNuevoTipoFormaPagoActionPerformed(evt,false);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonNuevoRelacionesTipoFormaPago.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoTipoFormaPagoActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoRelacionesToolBarTipoFormaPago.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoTipoFormaPagoActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoRelacionesTipoFormaPago.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoTipoFormaPagoActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "NuevoRelacionesTipoFormaPago";
		inputMap = this.jButtonNuevoRelacionesTipoFormaPago.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_R , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonNuevoRelacionesTipoFormaPago.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonNuevoTipoFormaPagoActionPerformed(evt,true);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonModificarTipoFormaPago.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarTipoFormaPagoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonModificarToolBarTipoFormaPago.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarTipoFormaPagoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemModificarTipoFormaPago.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarTipoFormaPagoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "ModificarTipoFormaPago";
		inputMap = this.jButtonModificarTipoFormaPago.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_M , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonModificarTipoFormaPago.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonModificarTipoFormaPagoActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonActualizarTipoFormaPago.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarTipoFormaPagoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonActualizarToolBarTipoFormaPago.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarTipoFormaPagoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemActualizarTipoFormaPago.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarTipoFormaPagoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "ActualizarTipoFormaPago";
		inputMap = this.jButtonActualizarTipoFormaPago.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_G , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonActualizarTipoFormaPago.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonActualizarTipoFormaPagoActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonEliminarTipoFormaPago.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarTipoFormaPagoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonEliminarToolBarTipoFormaPago.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarTipoFormaPagoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
				
		this.jMenuItemEliminarTipoFormaPago.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarTipoFormaPagoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "EliminarTipoFormaPago";
		inputMap = this.jButtonEliminarTipoFormaPago.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_E , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonEliminarTipoFormaPago.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonEliminarTipoFormaPagoActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonCancelarTipoFormaPago.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarTipoFormaPagoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonCancelarToolBarTipoFormaPago.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarTipoFormaPagoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemCancelarTipoFormaPago.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarTipoFormaPagoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "CancelarTipoFormaPago";
		inputMap = this.jButtonCancelarTipoFormaPago.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_Q , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonCancelarTipoFormaPago.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonCancelarTipoFormaPagoActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonCerrarTipoFormaPago.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarTipoFormaPagoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonCerrarToolBarTipoFormaPago.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarTipoFormaPagoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemCerrarTipoFormaPago.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarTipoFormaPagoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemDetalleCerrarTipoFormaPago.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  //try {jButtonCerrarTipoFormaPagoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
					try {jButtonCancelarTipoFormaPagoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "CerrarTipoFormaPago";
		inputMap = this.jButtonCerrarTipoFormaPago.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_C , KeyEvent.ALT_MASK), sMapKey);
			
		this.jButtonCerrarTipoFormaPago.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonCerrarTipoFormaPagoActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jInternalFrameDetalleFormTipoFormaPago.jButtonGuardarCambiosTipoFormaPago.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosTipoFormaPagoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosToolBarTipoFormaPago.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosTipoFormaPagoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemGuardarCambiosTipoFormaPago.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosTipoFormaPagoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosTablaTipoFormaPago.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosTipoFormaPagoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosTablaToolBarTipoFormaPago.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosTipoFormaPagoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemGuardarCambiosTablaTipoFormaPago.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosTipoFormaPagoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "GuardarCambiosTipoFormaPago";
		inputMap = this.jInternalFrameDetalleFormTipoFormaPago.jButtonGuardarCambiosTipoFormaPago.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_G , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jInternalFrameDetalleFormTipoFormaPago.jButtonGuardarCambiosTipoFormaPago.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonGuardarCambiosTipoFormaPagoActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonRecargarInformacionTipoFormaPago.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionTipoFormaPagoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonRecargarInformacionToolBarTipoFormaPago.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionTipoFormaPagoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemRecargarInformacionTipoFormaPago.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionTipoFormaPagoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		
		this.jButtonAnterioresTipoFormaPago.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresTipoFormaPagoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonAnterioresToolBarTipoFormaPago.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresTipoFormaPagoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemAnterioresTipoFormaPago.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresTipoFormaPagoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonSiguientesTipoFormaPago.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesTipoFormaPagoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonSiguientesToolBarTipoFormaPago.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesTipoFormaPagoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemSiguientesTipoFormaPago.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesTipoFormaPagoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoGuardarCambiosTipoFormaPago.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosTipoFormaPagoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoGuardarCambiosToolBarTipoFormaPago.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosTipoFormaPagoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoGuardarCambiosTipoFormaPago.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosTipoFormaPagoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		
		//SELECCIONAR TODOS
		this.jCheckBoxSeleccionarTodosTipoFormaPago.addItemListener(new ItemListener() {		
			public void itemStateChanged(ItemEvent evt) {
				try {jCheckBoxSeleccionarTodosTipoFormaPagoItemListener(evt);}catch(Exception e){e.printStackTrace();}
			}
		});

		this.jComboBoxTiposAccionesTipoFormaPago.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jComboBoxTiposAccionesTipoFormaPagoActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		this.jComboBoxTiposSeleccionarTipoFormaPago.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jComboBoxTiposSeleccionarTipoFormaPagoActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		this.jTextFieldValorCampoGeneralTipoFormaPago.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jTextFieldValorCampoGeneralTipoFormaPagoActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTipoFormaPago.jButtonidTipoFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"idTipoFormaPagoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormTipoFormaPago.jButtonid_empresaTipoFormaPagoUpdate.addActionListener(new ButtonActionListener(this,"id_empresaTipoFormaPagoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTipoFormaPago.jButtonid_empresaTipoFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"id_empresaTipoFormaPagoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormTipoFormaPago.jButtonid_sucursalTipoFormaPagoUpdate.addActionListener(new ButtonActionListener(this,"id_sucursalTipoFormaPagoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTipoFormaPago.jButtonid_sucursalTipoFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"id_sucursalTipoFormaPagoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormTipoFormaPago.jButtonid_moduloTipoFormaPagoUpdate.addActionListener(new ButtonActionListener(this,"id_moduloTipoFormaPagoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTipoFormaPago.jButtonid_moduloTipoFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"id_moduloTipoFormaPagoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormTipoFormaPago.jButtonid_tipo_grupo_forma_pagoTipoFormaPagoUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_grupo_forma_pagoTipoFormaPagoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTipoFormaPago.jButtonid_tipo_grupo_forma_pagoTipoFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_grupo_forma_pagoTipoFormaPagoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTipoFormaPago.jButtonnombreTipoFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"nombreTipoFormaPagoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTipoFormaPago.jButtonsiglasTipoFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"siglasTipoFormaPagoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTipoFormaPago.jButtoncon_detalleTipoFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"con_detalleTipoFormaPagoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTipoFormaPago.jButtoncon_cuotasTipoFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"con_cuotasTipoFormaPagoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormTipoFormaPago.jButtonid_tipo_transaccion_moduloTipoFormaPagoUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_transaccion_moduloTipoFormaPagoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTipoFormaPago.jButtonid_tipo_transaccion_moduloTipoFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_transaccion_moduloTipoFormaPagoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormTipoFormaPago.jButtonid_transaccionTipoFormaPagoUpdate.addActionListener(new ButtonActionListener(this,"id_transaccionTipoFormaPagoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTipoFormaPago.jButtonid_transaccionTipoFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"id_transaccionTipoFormaPagoBusqueda"));
		//jButtonid_cuenta_contableTipoFormaPago.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_cuenta_contableTipoFormaPagoActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormTipoFormaPago.jButtonid_cuenta_contableTipoFormaPago.addActionListener(new ButtonActionListener(this,"id_cuenta_contableTipoFormaPago"));
		//jButtonid_cuenta_contableTipoFormaPagoArbol.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			abrirFrameTreeCuentaContable("BUSQUEDA_FK");
		//		}
		//	}
		//);

		//BUSQUEDA ARBOL CAMPO
		this.jInternalFrameDetalleFormTipoFormaPago.jButtonid_cuenta_contableTipoFormaPagoArbol.addActionListener(new ButtonActionListener(this,"id_cuenta_contableTipoFormaPagoArbol"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormTipoFormaPago.jButtonid_cuenta_contableTipoFormaPagoUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contableTipoFormaPagoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTipoFormaPago.jButtonid_cuenta_contableTipoFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contableTipoFormaPagoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTipoFormaPago.jButtondescripcionTipoFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"descripcionTipoFormaPagoBusqueda"));
		
		
		this.jButtonBusquedaPorNombreTipoFormaPago.addActionListener(new ButtonActionListener(this,"BusquedaPorNombreTipoFormaPago"));

		this.jButtonBusquedaPorSiglasTipoFormaPago.addActionListener(new ButtonActionListener(this,"BusquedaPorSiglasTipoFormaPago"));

		this.jButtonFK_IdTipoFormaPagoTipoFormaPago.addActionListener(new ButtonActionListener(this,"FK_IdTipoFormaPagoTipoFormaPago"));

		this.jButtonBuscarFK_IdTipoFormaPagoid_cuenta_contableTipoFormaPago.addActionListener(new ButtonActionListener(this,"id_cuenta_contableTipoFormaPago"));

		this.jButtonFK_IdTipoGrupoFormaPagoTipoFormaPago.addActionListener(new ButtonActionListener(this,"FK_IdTipoGrupoFormaPagoTipoFormaPago"));

		this.jButtonFK_IdTipoTransaccionModuloTipoFormaPago.addActionListener(new ButtonActionListener(this,"FK_IdTipoTransaccionModuloTipoFormaPago"));

		this.jButtonFK_IdTransaccionTipoFormaPago.addActionListener(new ButtonActionListener(this,"FK_IdTransaccionTipoFormaPago"));

		
		//REPORTE DINAMICO
		this.jButtonCerrarReporteDinamicoTipoFormaPago.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarReporteDinamicoTipoFormaPagoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarReporteDinamicoTipoFormaPago.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarReporteDinamicoTipoFormaPagoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarExcelReporteDinamicoTipoFormaPago.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarExcelReporteDinamicoTipoFormaPagoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		//IMPORTACION
		this.jButtonCerrarImportacionTipoFormaPago.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarImportacionTipoFormaPagoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarImportacionTipoFormaPago.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarImportacionTipoFormaPagoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonAbrirImportacionTipoFormaPago.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAbrirImportacionTipoFormaPagoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
	}
	*/
	
	
	public void jComboBoxTiposSeleccionarTipoFormaPagoActionListener(ActionEvent evt) throws Exception {    		
		try {			
			Reporte reporte=(Reporte)this.jComboBoxTiposSeleccionarTipoFormaPago.getSelectedItem();
			
			//if(reporte.getsCodigo().equals("SELECCIONAR")) {
			//}					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,TipoFormaPagoConstantesFunciones.CLASSNAME);
		}
	}	
	
	
	
	public void seleccionarTodosTipoFormaPago(Boolean conSeleccionarTodos) throws Exception {    		
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {				
				for(TipoFormaPago tipoformapagoAux:this.tipoformapagoLogic.getTipoFormaPagos()) {
					tipoformapagoAux.setIsSelected(conSeleccionarTodos);
				}			
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(TipoFormaPago tipoformapagoAux:tipoformapagos) {
					tipoformapagoAux.setIsSelected(conSeleccionarTodos);
				}
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,TipoFormaPagoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionarTodosTipoFormaPagoItemListener(ItemEvent evt) throws Exception {    		
		try {			
			this.inicializarActualizarBindingTipoFormaPago(false,false);
			
			//JCheckBox jCheckBox=(JCheckBox)evt.getSource();			
			//System.out.println("ok");		
			
			Boolean existe=false;
			
			if(sTipoSeleccionar.equals("COLUMNAS")) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					for(TipoFormaPago tipoformapagoAux:this.tipoformapagoLogic.getTipoFormaPagos()) {
						tipoformapagoAux.setIsSelected(this.isSeleccionarTodos);
					}			
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(TipoFormaPago tipoformapagoAux:tipoformapagos) {
						tipoformapagoAux.setIsSelected(this.isSeleccionarTodos);
					}
				}
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					for(TipoFormaPago tipoformapagoAux:this.tipoformapagoLogic.getTipoFormaPagos()) {
					
						if(sTipoSeleccionar.equals(TipoFormaPagoConstantesFunciones.LABEL_CONDETALLE)) {
							existe=true;
							tipoformapagoAux.setcon_detalle(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(TipoFormaPagoConstantesFunciones.LABEL_CONCUOTAS)) {
							existe=true;
							tipoformapagoAux.setcon_cuotas(this.isSeleccionarTodos);
						}
					}	
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(TipoFormaPago tipoformapagoAux:tipoformapagos) {
						
						if(sTipoSeleccionar.equals(TipoFormaPagoConstantesFunciones.LABEL_CONDETALLE)) {
							existe=true;
							tipoformapagoAux.setcon_detalle(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(TipoFormaPagoConstantesFunciones.LABEL_CONCUOTAS)) {
							existe=true;
							tipoformapagoAux.setcon_cuotas(this.isSeleccionarTodos);
						}
					}
				}
			}
					
			if(existe) {
				this.inicializarActualizarBindingTablaTipoFormaPago(false);
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}	
			
			//TableCellRenderer tableCellRenderer=null;			
			
			//TableCellEditor tableCellEditor=null;						
						
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			/*
			for(int i = 0; i < this.jTableDatosTipoFormaPago.getRowCount(); i++) {				
				tableCellRenderer=this.jTableDatosSistema.getCellRenderer(i, 2);
				tableCellEditor=this.jTableDatosSistema.getCellEditor(i, 2);
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellRenderer;				
				idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellEditor;
				
				if(idSeleccionarTableCell.jCheckBoxId!=null) {
					idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				}
				
				//System.out.println(idSeleccionarTableCell.valor);
				
				//this.jTableDatosTipoFormaPago.getModel().setValueAt(jCheckBox.isSelected(), i, Funciones2.getColumnIndexByName(this.jTableDatosTipoFormaPago,Constantes2.S_SELECCIONAR));
		    } 
			*/
					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,TipoFormaPagoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionadosTipoFormaPagoItemListener(ItemEvent evt) throws Exception {    		
		try {			
			this.inicializarActualizarBindingTipoFormaPago(false,false);
			
			//JCheckBox jCheckBox=(JCheckBox)evt.getSource();			
			//System.out.println("ok");		
			
			Boolean existe=false;
			int[] arrNumRowsSeleccionados=null;
			
			arrNumRowsSeleccionados=this.jTableDatosTipoFormaPago.getSelectedRows();
			
			TipoFormaPago tipoformapagoLocal=new TipoFormaPago();
			
			//this.seleccionarTodosTipoFormaPago(false);
			
			for(Integer iNumRowSeleccionado:arrNumRowsSeleccionados) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipoformapagoLocal =(TipoFormaPago) this.tipoformapagoLogic.getTipoFormaPagos().toArray()[this.jTableDatosTipoFormaPago.convertRowIndexToModel(iNumRowSeleccionado)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					tipoformapagoLocal =(TipoFormaPago) this.tipoformapagos.toArray()[this.jTableDatosTipoFormaPago.convertRowIndexToModel(iNumRowSeleccionado)];
				}
				
				tipoformapagoLocal.setIsSelected(this.isSeleccionados);
			}
			
			/*
			if(sTipoSeleccionar.equals("SELECCIONAR")) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					for(TipoFormaPago tipoformapagoAux:this.tipoformapagoLogic.getTipoFormaPagos()) {
						tipoformapagoAux.setIsSelected(this.isSeleccionados);
					}			
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(TipoFormaPago tipoformapagoAux:tipoformapagos) {
						tipoformapagoAux.setIsSelected(this.isSeleccionados);
					}
				}
			}
			*/
			
			//if(existe) {
				this.inicializarActualizarBindingTablaTipoFormaPago(false);
			/*
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}	
			*/
			
			
			//TableCellRenderer tableCellRenderer=null;			
			
			//TableCellEditor tableCellEditor=null;						
						
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			/*
			for(int i = 0; i < this.jTableDatosTipoFormaPago.getRowCount(); i++) {				
				tableCellRenderer=this.jTableDatosSistema.getCellRenderer(i, 2);
				tableCellEditor=this.jTableDatosSistema.getCellEditor(i, 2);
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellRenderer;				
				idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellEditor;
				
				if(idSeleccionarTableCell.jCheckBoxId!=null) {
					idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				}
				
				//System.out.println(idSeleccionarTableCell.valor);
				
				//this.jTableDatosTipoFormaPago.getModel().setValueAt(jCheckBox.isSelected(), i, Funciones2.getColumnIndexByName(this.jTableDatosTipoFormaPago,Constantes2.S_SELECCIONAR));
		    } 
			*/
					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,TipoFormaPagoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionarActualTipoFormaPagoItemListener(ItemEvent evt,Long idActual) throws Exception {    		
		try {
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,TipoFormaPagoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void ejecutarAuxiliarTipoFormaPagoParaAjaxPostBack() throws Exception {    		
		try {
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,TipoFormaPagoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jTextFieldValorCampoGeneralTipoFormaPagoActionListener(ActionEvent evt) throws Exception {    		
		try {
			this.inicializarActualizarBindingTipoFormaPago(false,false);
			
			//System.out.println(this.jTextFieldValorCampoGeneralTipoFormaPago.getText());		
			
			Boolean existe=false;
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				for(TipoFormaPago tipoformapagoAux:this.tipoformapagoLogic.getTipoFormaPagos()) {
				
						if(sTipoSeleccionar.equals(TipoFormaPagoConstantesFunciones.LABEL_NOMBRE)) {
							existe=true;
							tipoformapagoAux.setnombre(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(TipoFormaPagoConstantesFunciones.LABEL_SIGLAS)) {
							existe=true;
							tipoformapagoAux.setsiglas(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(TipoFormaPagoConstantesFunciones.LABEL_DESCRIPCION)) {
							existe=true;
							tipoformapagoAux.setdescripcion(this.sValorCampoGeneral);
						}
				}	
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(TipoFormaPago tipoformapagoAux:tipoformapagos) {
					
						if(sTipoSeleccionar.equals(TipoFormaPagoConstantesFunciones.LABEL_NOMBRE)) {
							existe=true;
							tipoformapagoAux.setnombre(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(TipoFormaPagoConstantesFunciones.LABEL_SIGLAS)) {
							existe=true;
							tipoformapagoAux.setsiglas(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(TipoFormaPagoConstantesFunciones.LABEL_DESCRIPCION)) {
							existe=true;
							tipoformapagoAux.setdescripcion(this.sValorCampoGeneral);
						}
				}
			}
								
			if(existe) {
				this.inicializarActualizarBindingTablaTipoFormaPago(false);
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,TipoFormaPagoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jComboBoxTiposAccionesTipoFormaPagoActionListener(ActionEvent evt,Boolean esParaAccionDesdeFormulario) throws Exception {    				
		Boolean conSplash=true;
		
		try {							
		
			this.inicializarActualizarBindingTipoFormaPago(false,false);
			
			Reporte reporte=new Reporte();
			
			this.esParaAccionDesdeFormularioTipoFormaPago=esParaAccionDesdeFormulario;
			
			if(!esParaAccionDesdeFormulario) {
				
				reporte=(Reporte)this.jComboBoxTiposAccionesTipoFormaPago.getSelectedItem();
				
			} else {
				reporte=(Reporte)this.jInternalFrameDetalleFormTipoFormaPago.jComboBoxTiposAccionesFormularioTipoFormaPago.getSelectedItem();
			}
			String sTipoAccionLocal=this.sTipoAccion;
			
			if(!esParaAccionDesdeFormulario) {
				sTipoAccionLocal=this.sTipoAccion;
			} else {
				sTipoAccionLocal=this.sTipoAccionFormulario;
			}
			
			if(sTipoAccionLocal.equals("GENERAR REPORTE")) {//reporte.getsCodigo().equals("GENERAR REPORTE")) {
				if(this.isPermisoReporteTipoFormaPago) {				
					conSplash=true;//false;										
					
					//this.startProcessTipoFormaPago(conSplash);
				
					this.generarReporteTipoFormaPagosSeleccionados();
				} else {
					JOptionPane.showMessageDialog(this,"NO TIENE PERMISO PARA GENERAR REPORTES","REPORTE",JOptionPane.ERROR_MESSAGE);					
				}
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesTipoFormaPago.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormTipoFormaPago.jComboBoxTiposAccionesFormularioTipoFormaPago.setSelectedIndex(0);					
				}
			} else if(sTipoAccionLocal.equals("GENERAR REPORTE DINAMICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.mostrarReporteDinamicoTipoFormaPagosSeleccionados();
				//this.jComboBoxTiposAccionesTipoFormaPago.setSelectedIndex(0);					
			}  else if(sTipoAccionLocal.equals("GENERAR_REPORTE_GROUP_GENERICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.generarReporteGroupGenericoTipoFormaPagosSeleccionados(false);
				//this.jComboBoxTiposAccionesTipoFormaPago.setSelectedIndex(0);					
			} else if(sTipoAccionLocal.equals("GENERAR_REPORTE_TOTALES_GROUP_GENERICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.generarReporteGroupGenericoTipoFormaPagosSeleccionados(true);
				//this.jComboBoxTiposAccionesTipoFormaPago.setSelectedIndex(0);					
			} else if(sTipoAccionLocal.equals("EXPORTAR_DATOS")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//this.startProcessTipoFormaPago();
				
				this.exportarTipoFormaPagosSeleccionados();
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesTipoFormaPago.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormTipoFormaPago.jComboBoxTiposAccionesFormularioTipoFormaPago.setSelectedIndex(0);					
				}					
			} else if(sTipoAccionLocal.equals("IMPORTAR_DATOS")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				this.mostrarImportacionTipoFormaPagos();
				//this.importarTipoFormaPagos();
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesTipoFormaPago.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormTipoFormaPago.jComboBoxTiposAccionesFormularioTipoFormaPago.setSelectedIndex(0);					
				}					
			} else if(sTipoAccionLocal.equals("EXPORTAR_DATOS_EXCEL")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//this.startProcessTipoFormaPago();
				//SE EXPORTA SEGUN TIPO ARCHIVO SELECCIONADO
				//this.exportarExcelTipoFormaPagosSeleccionados();
				//this.jComboBoxTiposAccionesTipoFormaPago.setSelectedIndex(0);					
			}  else if(sTipoAccionLocal.equals("RECARGAR_FK")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {								
				if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE RECARGAR REFERENCIAS ?", "MANTENIMIENTO DE Tipo Forma Pago", JOptionPane.OK_CANCEL_OPTION) == 0) {
				
				//this.startProcessTipoFormaPago();
				
					if(!esParaAccionDesdeFormulario || (esParaAccionDesdeFormulario && this.isEsNuevoTipoFormaPago)) {
						this.esRecargarFks=true;
						this.cargarCombosForeignKeyTipoFormaPago(false,false,false);
						this.esRecargarFks=false;
						
						JOptionPane.showMessageDialog(this,"PROCESO EJECUTADO CORRECTAMENTE","MANTENIMIENTO DE Tipo Forma Pago",JOptionPane.INFORMATION_MESSAGE);
					} else {
						JOptionPane.showMessageDialog(this,"ESTE PROCESO SOLO FUNCIONA AL INGRESAR UN NUEVO ELEMENTO","MANTENIMIENTO",JOptionPane.ERROR_MESSAGE);	
					}
					
					
				}
				
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesTipoFormaPago.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormTipoFormaPago.jComboBoxTiposAccionesFormularioTipoFormaPago.setSelectedIndex(0);					
				}	
			} 			
			else if(TipoFormaPagoBeanSwingJInternalFrame.EsProcesoReporte(reporte.getsCodigo())){
				if(this.isPermisoReporteTipoFormaPago) {				
					if(this.tieneElementosSeleccionados()) {
						this.quitarFilaTotales();
						
						conSplash=false;
						
						//this.startProcessTipoFormaPago(conSplash);
					
						//this.actualizarParametrosGeneralTipoFormaPago();
						
						this.generarReporteProcesoAccionTipoFormaPagosSeleccionados(reporte.getsCodigo());
						
						if(!esParaAccionDesdeFormulario) {
							
							this.jComboBoxTiposAccionesTipoFormaPago.setSelectedIndex(0);					
							
						} else {
							this.jInternalFrameDetalleFormTipoFormaPago.jComboBoxTiposAccionesFormularioTipoFormaPago.setSelectedIndex(0);					
						}
					} else {
						JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO TIENE PERMISO PARA GENERAR REPORTES","REPORTE",JOptionPane.ERROR_MESSAGE);					
				}
			} 
			else if(TipoFormaPagoBeanSwingJInternalFrameAdditional.EsProcesoAccionNormal(reporte.getsCodigo())){
				if(this.tieneElementosSeleccionados()) {
					this.quitarFilaTotales();
					
					if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE PROCESAR "+reporte.getsDescripcion()+" EN PROCESO Tipo Forma PagoS SELECCIONADOS?", "MANTENIMIENTO DE Tipo Forma Pago", JOptionPane.OK_CANCEL_OPTION) == 0) {
						//this.startProcessTipoFormaPago();
				
						this.actualizarParametrosGeneralTipoFormaPago();
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {						
							this.tipoformapagoReturnGeneral=tipoformapagoLogic.procesarAccionTipoFormaPagosWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,sTipoAccionLocal,this.tipoformapagoLogic.getTipoFormaPagos(),this.tipoformapagoParameterGeneral);
						
						} else if(Constantes.ISUSAEJBREMOTE) {
						
						} else if(Constantes.ISUSAEJBHOME) {
						}
						//ARCHITECTURE
						
						this.procesarTipoFormaPagoReturnGeneral();
					
					if(!esParaAccionDesdeFormulario) {
						
						this.jComboBoxTiposAccionesTipoFormaPago.setSelectedIndex(0);					
						
					} else {
						this.jInternalFrameDetalleFormTipoFormaPago.jComboBoxTiposAccionesFormularioTipoFormaPago.setSelectedIndex(0);					
					}
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
				}				
			} 
			else {
				if(this.tieneElementosSeleccionados()) {
					this.quitarFilaTotales();
					
					this.actualizarParametrosGeneralTipoFormaPago();
					
					TipoFormaPagoBeanSwingJInternalFrameAdditional.ProcesarAccion(reporte.getsCodigo(),reporte.getsDescripcion(),this);
					
					this.procesarTipoFormaPagoReturnGeneral();
					
					if(!esParaAccionDesdeFormulario) {
						
						this.jComboBoxTiposAccionesTipoFormaPago.setSelectedIndex(0);					
						
					} else {
						this.jInternalFrameDetalleFormTipoFormaPago.jComboBoxTiposAccionesFormularioTipoFormaPago.setSelectedIndex(0);					
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
				}
			}
		} catch(Exception e) {
			this.esRecargarFks=false;
			
			FuncionesSwing.manageException(this, e,logger,TipoFormaPagoConstantesFunciones.CLASSNAME);
		
		}  finally {
      		//this.finishProcessTipoFormaPago(conSplash);
      	}
	}
	
	public void jComboBoxTiposRelacionesTipoFormaPagoActionListener(ActionEvent evt) throws Exception {    				
		Boolean conSplash=true;
		
		try {			
			this.startProcessTipoFormaPago();
			
			if(this.jInternalFrameDetalleFormTipoFormaPago==null) { //if(!this.conCargarFormDetalle) {			
				this.inicializarFormDetalle();
			}
			
			ArrayList<TipoFormaPago> tipoformapagosSeleccionados=new ArrayList<TipoFormaPago>();		
			TipoFormaPago tipoformapago=new TipoFormaPago();
			
			int rowIndex=-1;//CON ESTO SE DESHABILITA SELECCION POR INDICE
			
			this.inicializarActualizarBindingTipoFormaPago(false,false);
			
			Reporte reporte=new Reporte();
			
			
			reporte=(Reporte)this.jComboBoxTiposRelacionesTipoFormaPago.getSelectedItem();
			
			
			
			
			tipoformapagosSeleccionados=this.getTipoFormaPagosSeleccionados(true);
			//this.sTipoAccion;
			
			if(tipoformapagosSeleccionados.size()==1) {
				for(TipoFormaPago tipoformapagoAux:tipoformapagosSeleccionados) {
					tipoformapago=tipoformapagoAux;
				}
				
				if(this.sTipoAccion.equals("NONE")) {
				
				}
				
				else if(this.sTipoRelacion.equals("Registro Forma Pago Banco")) {
					jButtonRegistroFormaPagoBancoActionPerformed(null,rowIndex,true,false,tipoformapago);
				}
				else if(this.sTipoRelacion.equals("Deta Forma Pago Factu")) {
					jButtonDetaFormaPagoFactuActionPerformed(null,rowIndex,true,false,tipoformapago);
				}
				else if(this.sTipoRelacion.equals("Grupo Cliente Forma Pago")) {
					jButtonGrupoClienteFormaPagoActionPerformed(null,rowIndex,true,false,tipoformapago);
				}
				else if(this.sTipoRelacion.equals("Deta Forma Pago")) {
					jButtonDetaFormaPagoActionPerformed(null,rowIndex,true,false,tipoformapago);
				}
				else if(this.sTipoRelacion.equals("Forma Pago")) {
					jButtonFormaPagoPuntoVentaActionPerformed(null,rowIndex,true,false,tipoformapago);
				}
				else if(this.sTipoRelacion.equals("Forma Pago")) {
					jButtonFormaPagoActionPerformed(null,rowIndex,true,false,tipoformapago);
				}
				else if(this.sTipoRelacion.equals("Forma Pago")) {
					jButtonFormaPagoInvenActionPerformed(null,rowIndex,true,false,tipoformapago);
				}
				else if(this.sTipoRelacion.equals("Cierre Caja")) {
					jButtonCierreCajaActionPerformed(null,rowIndex,true,false,tipoformapago);
				}
			} else {
				JOptionPane.showMessageDialog(this,"SELECCIONE SOLO UN REGISTRO","RELACIONES",JOptionPane.ERROR_MESSAGE);
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,TipoFormaPagoConstantesFunciones.CLASSNAME);
		
		}  finally {
			this.finishProcessTipoFormaPago();
			
      		//this.finishProcessTipoFormaPago(conSplash);
      	}
	}
			
	public static Boolean EsProcesoReporte(String sTipoProceso) throws Exception {
		Boolean esProcesoAccionRepoorte=false;

		if(sTipoProceso.contains("REPORTE_")) {
			 esProcesoAccionRepoorte=true;
		}

		return esProcesoAccionRepoorte;
	}
	
	public void procesarTipoFormaPagoReturnGeneral() throws Exception {
		if(this.tipoformapagoReturnGeneral.getConRetornoEstaProcesado()) {
			JOptionPane.showMessageDialog(this,this.tipoformapagoReturnGeneral.getsMensajeProceso(),"PROCESO",JOptionPane.INFORMATION_MESSAGE);
		}
		
		if(this.tipoformapagoReturnGeneral.getConMostrarMensaje()) {
			JOptionPane.showMessageDialog(this,this.tipoformapagoReturnGeneral.getsMensajeProceso(),"PROCESO",FuncionesSwing.getColorSelectedBackground(this.tipoformapagoReturnGeneral.getsTipoMensaje()));
		}
		
		if(this.tipoformapagoReturnGeneral.getConRecargarInformacion()) {
			this.procesarBusqueda(this.sAccionBusqueda);
			
			this.inicializarActualizarBindingTipoFormaPago(false);
		}
		
		if(this.tipoformapagoReturnGeneral.getConRetornoLista() || this.tipoformapagoReturnGeneral.getConRetornoObjeto()) {
			if(this.tipoformapagoReturnGeneral.getConRetornoLista()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.tipoformapagoLogic.setTipoFormaPagos(this.tipoformapagoReturnGeneral.getTipoFormaPagos());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
			
			if(this.tipoformapagoReturnGeneral.getConRetornoObjeto()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.tipoformapagoLogic.setTipoFormaPago(this.tipoformapagoReturnGeneral.getTipoFormaPago());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
			
			this.inicializarActualizarBindingTipoFormaPago(false);
		}
	}
	
	public void actualizarParametrosGeneralTipoFormaPago() throws Exception {
		
		
	}
	
	public ArrayList<TipoFormaPago> getTipoFormaPagosSeleccionados(Boolean conSeleccionarTodosAutomatico) throws Exception {
		ArrayList<TipoFormaPago> tipoformapagosSeleccionados=new ArrayList<TipoFormaPago>();
		Boolean existe=false;
		
		if(!this.esParaAccionDesdeFormularioTipoFormaPago) {
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				
				for(TipoFormaPago tipoformapagoAux:tipoformapagoLogic.getTipoFormaPagos()) {
					if(tipoformapagoAux.getIsSelected()) {
						tipoformapagosSeleccionados.add(tipoformapagoAux);				
					}
				}
				
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(TipoFormaPago tipoformapagoAux:this.tipoformapagos) {
					if(tipoformapagoAux.getIsSelected()) {
						tipoformapagosSeleccionados.add(tipoformapagoAux);				
					}
				}
			}
			
			if(tipoformapagosSeleccionados.size()>0) {
				existe=true;
			}
			
			//SI NO ESTA NINGUNO SELECCIONADO SE SELECCIONA TODOS
			if(!existe) {
				if(conSeleccionarTodosAutomatico) {
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						tipoformapagosSeleccionados.addAll(this.tipoformapagoLogic.getTipoFormaPagos());
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						tipoformapagosSeleccionados.addAll(this.tipoformapagos);				
					}
				}
			}
		} else {
			tipoformapagosSeleccionados.add(this.tipoformapago);
		}
		
		return tipoformapagosSeleccionados;
	}
	
	public void actualizarVariablesTipoReporte(Boolean esReporteNormal,Boolean esReporteDinamico,Boolean esReporteAccionProceso,String sPath) {
		if(esReporteNormal) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=false;
			this.sPathReporteDinamico="";
			this.esReporteAccionProceso=false;
			
		} else if(esReporteAccionProceso) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=false;
			this.sPathReporteDinamico="";
			this.esReporteAccionProceso=true;
			
		} else if(esReporteDinamico) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=true;
			this.esReporteAccionProceso=false;
			this.sPathReporteDinamico=sPath.replace(".jrxml",".jasper");			
		}
	}
	
	public void generarReporteTipoFormaPagosSeleccionados() throws Exception {
		Boolean existe=false;
		
		if(this.sTipoReporte.equals("NORMAL") || this.sTipoReporte.equals("FORMULARIO")) {
			existe=true;								
			this.generarReporteNormalTipoFormaPagosSeleccionados();
			
		} else if(this.sTipoReporte.equals("DINAMICO")) {
			existe=true;
			this.mostrarReporteDinamicoTipoFormaPagosSeleccionados();
			
		} else if(this.sTipoReporte.equals("GRUPO_GENERICO")) {
			existe=true;
			this.generarReporteGroupGenericoTipoFormaPagosSeleccionados(false);
			
		} else if(this.sTipoReporte.equals("TOTALES_GRUPO_GENERICO")) {
			existe=true;
			this.generarReporteGroupGenericoTipoFormaPagosSeleccionados(true);
		}
		else if(this.sTipoReporte.equals("RELACIONES")) {
			//SI SE GENERA REPORTE RELACIONES
			existe=true;
			this.generarReporteRelacionesTipoFormaPagosSeleccionados();
		}					
		
		if(!existe) {
			JOptionPane.showMessageDialog(this,"SELECCIONE UN TIPO DE REPORTE VALIDO","REPORTE DE Tipo Forma Pago",JOptionPane.ERROR_MESSAGE);
		}
	}
	
	public void generarReporteRelacionesTipoFormaPagosSeleccionados() throws Exception {
		ArrayList<TipoFormaPago> tipoformapagosSeleccionados=new ArrayList<TipoFormaPago>();		
		
		tipoformapagosSeleccionados=this.getTipoFormaPagosSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
					
		//this.sTipoReporteExtra="MasterRelaciones";
		
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		
		this.generarReporteTipoFormaPagos("Todos",tipoformapagosSeleccionados);
		
	}	
	
	public void generarReporteNormalTipoFormaPagosSeleccionados() throws Exception {
		ArrayList<TipoFormaPago> tipoformapagosSeleccionados=new ArrayList<TipoFormaPago>();		
		
		tipoformapagosSeleccionados=this.getTipoFormaPagosSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
								
		if(this.sTipoReporte.equals("FORMULARIO")) {
			this.sTipoReporteExtra="Vertical";					
		}
		
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		this.generarReporteTipoFormaPagos("Todos",tipoformapagosSeleccionados);
	}		
	
	public void generarReporteProcesoAccionTipoFormaPagosSeleccionados(String sProcesoReporte) throws Exception {
		ArrayList<TipoFormaPago> tipoformapagosSeleccionados=new ArrayList<TipoFormaPago>();
		
		tipoformapagosSeleccionados=this.getTipoFormaPagosSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(false,false,true,"");
		
		/*
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		this.sTipoReporteExtra=sProcesoReporte.toLowerCase();
		
		this.esReporteAccionProceso=true;
		this.generarReporteTipoFormaPagos("Todos",tipoformapagosSeleccionados);
		this.esReporteAccionProceso=false;
	}
	
	
	public void mostrarReporteDinamicoTipoFormaPagosSeleccionados() throws Exception {
		ArrayList<TipoFormaPago> tipoformapagosSeleccionados=new ArrayList<TipoFormaPago>();		
		
		
		this.abrirInicializarFrameReporteDinamicoTipoFormaPago();
		
		
		tipoformapagosSeleccionados=this.getTipoFormaPagosSeleccionados(true);
		
		this.sTipoReporteExtra="";
		//this.actualizarVariablesTipoReporte(true,false,false,"");
		
		
		this.abrirFrameReporteDinamicoTipoFormaPago();
		
		
		//this.generarReporteTipoFormaPagos("Todos",tipoformapagosSeleccionados ,tipoformapagoImplementable,tipoformapagoImplementableHome);
	}
	
	public void mostrarImportacionTipoFormaPagos() throws Exception {
		//this.sTipoReporteExtra="";
		//this.actualizarVariablesTipoReporte(true,false,false,"");
		
		
		this.abrirInicializarFrameImportacionTipoFormaPago();
		
		this.abrirFrameImportacionTipoFormaPago();		
		
			
		//this.generarReporteTipoFormaPagos("Todos",tipoformapagosSeleccionados ,tipoformapagoImplementable,tipoformapagoImplementableHome);
	}
	
	public void importarTipoFormaPagos() throws Exception {		
	
	}
	
	public void exportarTipoFormaPagosSeleccionados() throws Exception {
		Boolean existe=false;
		
		if(this.sTipoArchivoReporte.equals("EXCEL")) {
			existe=true;
			this.exportarExcelTipoFormaPagosSeleccionados();
			
		} else if(this.sTipoArchivoReporte.equals("TEXTO")) {
			existe=true;
			this.exportarTextoTipoFormaPagosSeleccionados();
		
		} else if(this.sTipoArchivoReporte.equals("XML")) {
			existe=true;
			this.exportarXmlTipoFormaPagosSeleccionados();
		} 
		
		if(!existe) {
			JOptionPane.showMessageDialog(this,"SELECCIONE UN TIPO DE ARCHIVO VALIDO","EXPORTACION DE Tipo Forma Pago",JOptionPane.ERROR_MESSAGE);
		}
	}
	
	public void exportarTextoTipoFormaPagosSeleccionados() throws Exception {
		ArrayList<TipoFormaPago> tipoformapagosSeleccionados=new ArrayList<TipoFormaPago>();		
		
		tipoformapagosSeleccionados=this.getTipoFormaPagosSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"tipoformapago."+"txt";//Funciones2.getTipoExtensionArchivoExportar(this.parametroGeneralUsuario);
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		BufferedWriter bufferedWriter = null;
		FileWriter fileWriter=null;
		
		fileWriter=new FileWriter(sPath);
		
		bufferedWriter = new BufferedWriter(fileWriter);
		
		try {
			if(conCabecera) {
				sFilaCabecera=this.getFilaCabeceraExportarTipoFormaPago(sDelimiter);
				
				bufferedWriter.write(sFilaCabecera);
			}				
			
			for(TipoFormaPago tipoformapagoAux:tipoformapagosSeleccionados) {
				sFilaDatos=this.getFilaDatosExportarTipoFormaPago(tipoformapagoAux,sDelimiter);
				
				bufferedWriter.write(sFilaDatos);
				
				//tipoformapagoAux.setsDetalleGeneralEntityReporte(tipoformapagoAux.toString());			
			}
			
			bufferedWriter.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.tipoformapagoSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Tipo Forma Pago",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {
       		if (bufferedWriter != null) {
				bufferedWriter.close();
			}
		}
	}
	
	public String getFilaCabeceraExportarTipoFormaPago(String sDelimiter) {
		String sFilaCabecera="";
		
		
		sFilaCabecera+=TipoFormaPagoConstantesFunciones.LABEL_ID;

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
			sFilaCabecera+=sDelimiter;
		sFilaCabecera+=TipoFormaPagoConstantesFunciones.LABEL_VERSIONROW;
		}

		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=TipoFormaPagoConstantesFunciones.LABEL_IDEMPRESA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=TipoFormaPagoConstantesFunciones.LABEL_IDSUCURSAL;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=TipoFormaPagoConstantesFunciones.LABEL_IDMODULO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=TipoFormaPagoConstantesFunciones.LABEL_IDTIPOGRUPOFORMAPAGO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=TipoFormaPagoConstantesFunciones.LABEL_NOMBRE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=TipoFormaPagoConstantesFunciones.LABEL_SIGLAS;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=TipoFormaPagoConstantesFunciones.LABEL_CONDETALLE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=TipoFormaPagoConstantesFunciones.LABEL_CONCUOTAS;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=TipoFormaPagoConstantesFunciones.LABEL_IDTIPOTRANSACCIONMODULO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=TipoFormaPagoConstantesFunciones.LABEL_IDTRANSACCION;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=TipoFormaPagoConstantesFunciones.LABEL_IDCUENTACONTABLE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=TipoFormaPagoConstantesFunciones.LABEL_DESCRIPCION;
		
		return sFilaCabecera;
	}
	
	public String getFilaDatosExportarTipoFormaPago(TipoFormaPago tipoformapago,String sDelimiter) {
		String sFilaDatos="";
		
		sFilaDatos+="\r\n";
		
		
		sFilaDatos+=tipoformapago.getId().toString();

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
			sFilaDatos+=sDelimiter;
		sFilaDatos+=tipoformapago.getVersionRow().toString();
		}

		sFilaDatos+=sDelimiter;
		sFilaDatos+=tipoformapago.getempresa_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=tipoformapago.getsucursal_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=tipoformapago.getmodulo_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=tipoformapago.gettipogrupoformapago_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=tipoformapago.getnombre();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=tipoformapago.getsiglas();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=tipoformapago.getcon_detalle().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=tipoformapago.getcon_cuotas().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=tipoformapago.gettipotransaccionmodulo_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=tipoformapago.gettransaccion_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=tipoformapago.getcuentacontable_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=tipoformapago.getdescripcion();
		
		return sFilaDatos;
	}
	
	//@SuppressWarnings("deprecation")
	public void exportarExcelTipoFormaPagosSeleccionados() throws Exception {
		ArrayList<TipoFormaPago> tipoformapagosSeleccionados=new ArrayList<TipoFormaPago>();		
		
		tipoformapagosSeleccionados=this.getTipoFormaPagosSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"tipoformapago.xls";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		FileOutputStream fileOutputStream=null;
		
		try {
			HSSFWorkbook workbook = new HSSFWorkbook();
			HSSFSheet sheet = workbook.createSheet("TipoFormaPagos");
						
		    			
			Integer iRow=0;
			Integer iCell=0;
			
			HSSFRow row = sheet.createRow(iRow);
			HSSFCell cell = row.createCell(iCell);
			//cell.setCellValue("Blahblah");

			if(conCabecera) {
				this.getFilaCabeceraExportarExcelTipoFormaPago(row);				
				iRow++;
			}				
			
			for(TipoFormaPago tipoformapagoAux:tipoformapagosSeleccionados) {
				row = sheet.createRow(iRow);
				
				this.getFilaDatosExportarExcelTipoFormaPago(tipoformapagoAux,row);
				
				iRow++;
			}
			
			
			fileOutputStream = new FileOutputStream(new File(sPath));
		    
			workbook.write(fileOutputStream);
			
			//fileOutputStream.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.tipoformapagoSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Tipo Forma Pago",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			
       		if (fileOutputStream != null) {
				fileOutputStream.close();
			}			
		}
	}		
	
	public void exportarXmlTipoFormaPagosSeleccionados() throws Exception {
		ArrayList<TipoFormaPago> tipoformapagosSeleccionados=new ArrayList<TipoFormaPago>();		
		
		tipoformapagosSeleccionados=this.getTipoFormaPagosSeleccionados(true);
		
		//String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		//Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		//String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"tipoformapago.xml";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		DocumentBuilderFactory documentBuilderFactory=null;
		DocumentBuilder documentBuilder =null;
		
		try {
			documentBuilderFactory = DocumentBuilderFactory.newInstance();
			documentBuilder = documentBuilderFactory.newDocumentBuilder();
	
			Document document = documentBuilder.newDocument();
			Element elementRoot = document.createElement("tipoformapagos");
			
			document.appendChild(elementRoot);
		    			
												
			Element element = null;//document.createElement("tipoformapago");
			//elementRoot.appendChild(element);
		
			for(TipoFormaPago tipoformapagoAux:tipoformapagosSeleccionados) {
				element = document.createElement("tipoformapago");
				elementRoot.appendChild(element);
			
				this.setFilaDatosExportarXmlTipoFormaPago(tipoformapagoAux,document,element);
			}
			
			TransformerFactory transformerFactory = TransformerFactory.newInstance();
			Transformer transformer = transformerFactory.newTransformer();
			DOMSource domSource = new DOMSource(document);
			
			StreamResult streamResult = new StreamResult(new File(sPath));
	
			transformer.transform(domSource, streamResult);
						
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.tipoformapagoSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Tipo Forma Pago",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			       				
		}
	}	
	
	//@SuppressWarnings("deprecation")
	public void getFilaCabeceraExportarExcelTipoFormaPago(HSSFRow row) {
		Integer iColumn=0;
		
		
		HSSFCell cell =null;
		cell = row.createCell(iColumn++);cell.setCellValue(TipoFormaPagoConstantesFunciones.LABEL_ID);

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
		cell = row.createCell(iColumn++);cell.setCellValue(TipoFormaPagoConstantesFunciones.LABEL_VERSIONROW);
		}

		cell = row.createCell(iColumn++);cell.setCellValue(TipoFormaPagoConstantesFunciones.LABEL_IDEMPRESA);
		cell = row.createCell(iColumn++);cell.setCellValue(TipoFormaPagoConstantesFunciones.LABEL_IDSUCURSAL);
		cell = row.createCell(iColumn++);cell.setCellValue(TipoFormaPagoConstantesFunciones.LABEL_IDMODULO);
		cell = row.createCell(iColumn++);cell.setCellValue(TipoFormaPagoConstantesFunciones.LABEL_IDTIPOGRUPOFORMAPAGO);
		cell = row.createCell(iColumn++);cell.setCellValue(TipoFormaPagoConstantesFunciones.LABEL_NOMBRE);
		cell = row.createCell(iColumn++);cell.setCellValue(TipoFormaPagoConstantesFunciones.LABEL_SIGLAS);
		cell = row.createCell(iColumn++);cell.setCellValue(TipoFormaPagoConstantesFunciones.LABEL_CONDETALLE);
		cell = row.createCell(iColumn++);cell.setCellValue(TipoFormaPagoConstantesFunciones.LABEL_CONCUOTAS);
		cell = row.createCell(iColumn++);cell.setCellValue(TipoFormaPagoConstantesFunciones.LABEL_IDTIPOTRANSACCIONMODULO);
		cell = row.createCell(iColumn++);cell.setCellValue(TipoFormaPagoConstantesFunciones.LABEL_IDTRANSACCION);
		cell = row.createCell(iColumn++);cell.setCellValue(TipoFormaPagoConstantesFunciones.LABEL_IDCUENTACONTABLE);
		cell = row.createCell(iColumn++);cell.setCellValue(TipoFormaPagoConstantesFunciones.LABEL_DESCRIPCION);
	}
	
	//@SuppressWarnings("deprecation")
	public void getFilaDatosExportarExcelTipoFormaPago(TipoFormaPago tipoformapago,HSSFRow row) {
		Integer iColumn=0;
		
		
		HSSFCell cell =null;
		cell = row.createCell(iColumn++);cell.setCellValue(tipoformapago.getId());
		cell = row.createCell(iColumn++);cell.setCellValue(tipoformapago.getempresa_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(tipoformapago.getsucursal_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(tipoformapago.getmodulo_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(tipoformapago.gettipogrupoformapago_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(tipoformapago.getnombre());
		cell = row.createCell(iColumn++);cell.setCellValue(tipoformapago.getsiglas());
		cell = row.createCell(iColumn++);cell.setCellValue(tipoformapago.getcon_detalle());
		cell = row.createCell(iColumn++);cell.setCellValue(tipoformapago.getcon_cuotas());
		cell = row.createCell(iColumn++);cell.setCellValue(tipoformapago.gettipotransaccionmodulo_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(tipoformapago.gettransaccion_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(tipoformapago.getcuentacontable_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(tipoformapago.getdescripcion());				
	}
	
	public void setFilaDatosExportarXmlTipoFormaPago(TipoFormaPago tipoformapago,Document document,Element element) {
		/*
		Element lastname = document.createElement("lastname");
		lastname.appendChild(document.createTextNode("mook kim"));
		element.appendChild(lastname);
		*/
		

		Element elementId = document.createElement(TipoFormaPagoConstantesFunciones.ID);
		elementId.appendChild(document.createTextNode(tipoformapago.getId().toString().trim()));
		element.appendChild(elementId);

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){

		Element elementVersionRow = document.createElement(TipoFormaPagoConstantesFunciones.VERSIONROW);
		elementVersionRow.appendChild(document.createTextNode(tipoformapago.getVersionRow().toString().trim()));
		element.appendChild(elementVersionRow);
		}


		Element elementempresa_descripcion = document.createElement(TipoFormaPagoConstantesFunciones.IDEMPRESA);
		elementempresa_descripcion.appendChild(document.createTextNode(tipoformapago.getempresa_descripcion()));
		element.appendChild(elementempresa_descripcion);

		Element elementsucursal_descripcion = document.createElement(TipoFormaPagoConstantesFunciones.IDSUCURSAL);
		elementsucursal_descripcion.appendChild(document.createTextNode(tipoformapago.getsucursal_descripcion()));
		element.appendChild(elementsucursal_descripcion);

		Element elementmodulo_descripcion = document.createElement(TipoFormaPagoConstantesFunciones.IDMODULO);
		elementmodulo_descripcion.appendChild(document.createTextNode(tipoformapago.getmodulo_descripcion()));
		element.appendChild(elementmodulo_descripcion);

		Element elementtipogrupoformapago_descripcion = document.createElement(TipoFormaPagoConstantesFunciones.IDTIPOGRUPOFORMAPAGO);
		elementtipogrupoformapago_descripcion.appendChild(document.createTextNode(tipoformapago.gettipogrupoformapago_descripcion()));
		element.appendChild(elementtipogrupoformapago_descripcion);

		Element elementnombre = document.createElement(TipoFormaPagoConstantesFunciones.NOMBRE);
		elementnombre.appendChild(document.createTextNode(tipoformapago.getnombre().trim()));
		element.appendChild(elementnombre);

		Element elementsiglas = document.createElement(TipoFormaPagoConstantesFunciones.SIGLAS);
		elementsiglas.appendChild(document.createTextNode(tipoformapago.getsiglas().trim()));
		element.appendChild(elementsiglas);

		Element elementcon_detalle = document.createElement(TipoFormaPagoConstantesFunciones.CONDETALLE);
		elementcon_detalle.appendChild(document.createTextNode(tipoformapago.getcon_detalle().toString().trim()));
		element.appendChild(elementcon_detalle);

		Element elementcon_cuotas = document.createElement(TipoFormaPagoConstantesFunciones.CONCUOTAS);
		elementcon_cuotas.appendChild(document.createTextNode(tipoformapago.getcon_cuotas().toString().trim()));
		element.appendChild(elementcon_cuotas);

		Element elementtipotransaccionmodulo_descripcion = document.createElement(TipoFormaPagoConstantesFunciones.IDTIPOTRANSACCIONMODULO);
		elementtipotransaccionmodulo_descripcion.appendChild(document.createTextNode(tipoformapago.gettipotransaccionmodulo_descripcion()));
		element.appendChild(elementtipotransaccionmodulo_descripcion);

		Element elementtransaccion_descripcion = document.createElement(TipoFormaPagoConstantesFunciones.IDTRANSACCION);
		elementtransaccion_descripcion.appendChild(document.createTextNode(tipoformapago.gettransaccion_descripcion()));
		element.appendChild(elementtransaccion_descripcion);

		Element elementcuentacontable_descripcion = document.createElement(TipoFormaPagoConstantesFunciones.IDCUENTACONTABLE);
		elementcuentacontable_descripcion.appendChild(document.createTextNode(tipoformapago.getcuentacontable_descripcion()));
		element.appendChild(elementcuentacontable_descripcion);

		Element elementdescripcion = document.createElement(TipoFormaPagoConstantesFunciones.DESCRIPCION);
		elementdescripcion.appendChild(document.createTextNode(tipoformapago.getdescripcion().trim()));
		element.appendChild(elementdescripcion);
	}
	
	public void generarReporteGroupGenericoTipoFormaPagosSeleccionados(Boolean soloTotales) throws Exception {
		ArrayList<TipoFormaPago> tipoformapagosSeleccionados=new ArrayList<TipoFormaPago>();
		
		tipoformapagosSeleccionados=this.getTipoFormaPagosSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
		
		/*
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		if(!soloTotales) {
			this.sTipoReporteExtra=Constantes2.S_REPORTE_EXTRA_GROUP_GENERICO;
		} else {
			this.sTipoReporteExtra=Constantes2.S_REPORTE_EXTRA_GROUP_TOTALES_GENERICO;
		}
		
		this.setColumnaDescripcionReporteGroupGenericoTipoFormaPago(tipoformapagosSeleccionados);
		
		this.generarReporteTipoFormaPagos("Todos",tipoformapagosSeleccionados);
	}
	
	public void setColumnaDescripcionReporteGroupGenericoTipoFormaPago(ArrayList<TipoFormaPago> tipoformapagosSeleccionados) throws Exception {    		
		try {
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			
			Boolean existe=false;
			
			for(TipoFormaPago tipoformapagoAux:tipoformapagosSeleccionados) {
				tipoformapagoAux.setsDetalleGeneralEntityReporte(tipoformapagoAux.toString());
			
				if(sTipoSeleccionar.equals(TipoFormaPagoConstantesFunciones.LABEL_IDEMPRESA)) {
					existe=true;
					tipoformapagoAux.setsDescripcionGeneralEntityReporte1(tipoformapagoAux.getempresa_descripcion());
				}
				 else if(sTipoSeleccionar.equals(TipoFormaPagoConstantesFunciones.LABEL_IDSUCURSAL)) {
					existe=true;
					tipoformapagoAux.setsDescripcionGeneralEntityReporte1(tipoformapagoAux.getsucursal_descripcion());
				}
				 else if(sTipoSeleccionar.equals(TipoFormaPagoConstantesFunciones.LABEL_IDMODULO)) {
					existe=true;
					tipoformapagoAux.setsDescripcionGeneralEntityReporte1(tipoformapagoAux.getmodulo_descripcion());
				}
				 else if(sTipoSeleccionar.equals(TipoFormaPagoConstantesFunciones.LABEL_IDTIPOGRUPOFORMAPAGO)) {
					existe=true;
					tipoformapagoAux.setsDescripcionGeneralEntityReporte1(tipoformapagoAux.gettipogrupoformapago_descripcion());
				}
				 else if(sTipoSeleccionar.equals(TipoFormaPagoConstantesFunciones.LABEL_NOMBRE)) {
					existe=true;
					tipoformapagoAux.setsDescripcionGeneralEntityReporte1(tipoformapagoAux.getnombre());
				}
				 else if(sTipoSeleccionar.equals(TipoFormaPagoConstantesFunciones.LABEL_SIGLAS)) {
					existe=true;
					tipoformapagoAux.setsDescripcionGeneralEntityReporte1(tipoformapagoAux.getsiglas());
				}
				 else if(sTipoSeleccionar.equals(TipoFormaPagoConstantesFunciones.LABEL_CONDETALLE)) {
					existe=true;
					tipoformapagoAux.setsDescripcionGeneralEntityReporte1(Funciones2.getDescripcionBoolean(tipoformapagoAux.getcon_detalle()));
				}
				 else if(sTipoSeleccionar.equals(TipoFormaPagoConstantesFunciones.LABEL_CONCUOTAS)) {
					existe=true;
					tipoformapagoAux.setsDescripcionGeneralEntityReporte1(Funciones2.getDescripcionBoolean(tipoformapagoAux.getcon_cuotas()));
				}
				 else if(sTipoSeleccionar.equals(TipoFormaPagoConstantesFunciones.LABEL_IDTIPOTRANSACCIONMODULO)) {
					existe=true;
					tipoformapagoAux.setsDescripcionGeneralEntityReporte1(tipoformapagoAux.gettipotransaccionmodulo_descripcion());
				}
				 else if(sTipoSeleccionar.equals(TipoFormaPagoConstantesFunciones.LABEL_IDTRANSACCION)) {
					existe=true;
					tipoformapagoAux.setsDescripcionGeneralEntityReporte1(tipoformapagoAux.gettransaccion_descripcion());
				}
				 else if(sTipoSeleccionar.equals(TipoFormaPagoConstantesFunciones.LABEL_IDCUENTACONTABLE)) {
					existe=true;
					tipoformapagoAux.setsDescripcionGeneralEntityReporte1(tipoformapagoAux.getcuentacontable_descripcion());
				}
				 else if(sTipoSeleccionar.equals(TipoFormaPagoConstantesFunciones.LABEL_DESCRIPCION)) {
					existe=true;
					tipoformapagoAux.setsDescripcionGeneralEntityReporte1(tipoformapagoAux.getdescripcion());
				}
			}	
											
			if(!existe) {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}										
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,TipoFormaPagoConstantesFunciones.CLASSNAME);
		}
	}
	
	
	public void actualizarEstadoCeldasBotonesTipoFormaPago(String sAccion,Boolean isGuardarCambiosEnLote,Boolean isEsMantenimientoRelacionado) throws Exception {
		if(sAccion=="n") {
			if(!this.esParaBusquedaForeignKey) {
				this.isVisibilidadCeldaNuevoTipoFormaPago=true;
				this.isVisibilidadCeldaNuevoRelacionesTipoFormaPago=true;
				this.isVisibilidadCeldaGuardarCambiosTipoFormaPago=true;
			}
			
			this.isVisibilidadCeldaModificarTipoFormaPago=false;
			this.isVisibilidadCeldaActualizarTipoFormaPago=false;
			this.isVisibilidadCeldaEliminarTipoFormaPago=false;
			this.isVisibilidadCeldaCancelarTipoFormaPago=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarTipoFormaPago=true;
				} else {
					this.isVisibilidadCeldaGuardarTipoFormaPago=false;
				}
			}
		} else if(sAccion=="a") {
			this.isVisibilidadCeldaNuevoTipoFormaPago=false;
			this.isVisibilidadCeldaNuevoRelacionesTipoFormaPago=false;
			this.isVisibilidadCeldaGuardarCambiosTipoFormaPago=false;
			this.isVisibilidadCeldaModificarTipoFormaPago=false;
			this.isVisibilidadCeldaActualizarTipoFormaPago=true;
			this.isVisibilidadCeldaEliminarTipoFormaPago=false;
			this.isVisibilidadCeldaCancelarTipoFormaPago=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarTipoFormaPago=true;
				} else {
					this.isVisibilidadCeldaGuardarTipoFormaPago=false;
				}
			}
		} else if(sAccion=="ae") {
			this.isVisibilidadCeldaNuevoTipoFormaPago=false;
			this.isVisibilidadCeldaNuevoRelacionesTipoFormaPago=false;
			this.isVisibilidadCeldaGuardarCambiosTipoFormaPago=false;
			this.isVisibilidadCeldaModificarTipoFormaPago=false;
			this.isVisibilidadCeldaActualizarTipoFormaPago=true;
			this.isVisibilidadCeldaEliminarTipoFormaPago=true;
			this.isVisibilidadCeldaCancelarTipoFormaPago=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarTipoFormaPago=true;
				} else {
					this.isVisibilidadCeldaGuardarTipoFormaPago=false;
				}
			}
		}
		//Para Mantenimientos de tablas relacionados con mas de columnas minimas
		else if(sAccion=="ae2") {
			this.isVisibilidadCeldaNuevoTipoFormaPago=false;
			this.isVisibilidadCeldaNuevoRelacionesTipoFormaPago=false;
			this.isVisibilidadCeldaGuardarCambiosTipoFormaPago=false;
			this.isVisibilidadCeldaModificarTipoFormaPago=false;
			this.isVisibilidadCeldaActualizarTipoFormaPago=true;
			this.isVisibilidadCeldaEliminarTipoFormaPago=false;
			this.isVisibilidadCeldaCancelarTipoFormaPago=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarTipoFormaPago=false;
				} else {
					this.isVisibilidadCeldaGuardarTipoFormaPago=false;
				}
			}
		} else if(sAccion=="c") {
			this.isVisibilidadCeldaNuevoTipoFormaPago=true;
			this.isVisibilidadCeldaNuevoRelacionesTipoFormaPago=true;
			this.isVisibilidadCeldaGuardarCambiosTipoFormaPago=true;
			this.isVisibilidadCeldaModificarTipoFormaPago=false;
			this.isVisibilidadCeldaActualizarTipoFormaPago=false;
			this.isVisibilidadCeldaEliminarTipoFormaPago=false;
			this.isVisibilidadCeldaCancelarTipoFormaPago=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarTipoFormaPago=true;
				} else {
					this.isVisibilidadCeldaGuardarTipoFormaPago=false;
				}
			}
		} else if(sAccion=="t") {
			this.isVisibilidadCeldaNuevoTipoFormaPago=false;
			this.isVisibilidadCeldaNuevoRelacionesTipoFormaPago=false;
			this.isVisibilidadCeldaGuardarCambiosTipoFormaPago=false;
			this.isVisibilidadCeldaActualizarTipoFormaPago=false;
			this.isVisibilidadCeldaEliminarTipoFormaPago=false;
			this.isVisibilidadCeldaCancelarTipoFormaPago=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarTipoFormaPago=false;
				} else {
					this.isVisibilidadCeldaGuardarTipoFormaPago=false;
				}
			}
		}  else if(sAccion=="s"||sAccion=="s2") {
			this.isVisibilidadCeldaNuevoTipoFormaPago=false;
			this.isVisibilidadCeldaNuevoRelacionesTipoFormaPago=false;
			this.isVisibilidadCeldaGuardarCambiosTipoFormaPago=false;
			this.isVisibilidadCeldaModificarTipoFormaPago=true;
			this.isVisibilidadCeldaActualizarTipoFormaPago=false;
			this.isVisibilidadCeldaEliminarTipoFormaPago=false;
			this.isVisibilidadCeldaCancelarTipoFormaPago=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarTipoFormaPago=false;
				} else {
					this.isVisibilidadCeldaGuardarTipoFormaPago=false;
				}
			}
		}
		
		//ACTUALIZA VISIBILIDAD PANELES
		if(TipoFormaPagoJInternalFrame.CON_DATOS_FRAME && !this.esParaBusquedaForeignKey) {
			//SIEMPRE VISIBLE
			this.isVisibilidadCeldaNuevoTipoFormaPago=true;
			this.isVisibilidadCeldaNuevoRelacionesTipoFormaPago=true;
			this.isVisibilidadCeldaGuardarCambiosTipoFormaPago=true;
		} else {
			this.actualizarEstadoPanelsTipoFormaPago(sAccion);						
		}
		
		if(this.esParaBusquedaForeignKey) {
			this.isVisibilidadCeldaCopiarTipoFormaPago=false;
			//this.isVisibilidadCeldaVerFormTipoFormaPago=false;
			this.isVisibilidadCeldaDuplicarTipoFormaPago=false;
		}
		
		//SI ES MANTENIMIENTO RELACIONES
		if(!tipoformapagoSessionBean.getConGuardarRelaciones()) {
			this.isVisibilidadCeldaNuevoRelacionesTipoFormaPago=false;
		} else {
			this.isVisibilidadCeldaNuevoTipoFormaPago=false;
			this.isVisibilidadCeldaGuardarCambiosTipoFormaPago=false;
		}
		
		//SI ES MANTENIMIENTO RELACIONADO
		if(tipoformapagoSessionBean.getEsGuardarRelacionado()) {
			if(!tipoformapagoSessionBean.getConGuardarRelaciones()) {	
				this.isVisibilidadCeldaNuevoRelacionesTipoFormaPago=false;												
			}
			
			this.jButtonCerrarTipoFormaPago.setVisible(false);
		}
		
		//SI NO TIENE MAXIMO DE RELACIONES PERMITIDAS
		if(!this.conMaximoRelaciones) {
			this.isVisibilidadCeldaNuevoRelacionesTipoFormaPago=false;
		}
		
		if(!this.permiteMantenimiento(this.tipoformapago)) {
			this.isVisibilidadCeldaActualizarTipoFormaPago=false;
			this.isVisibilidadCeldaEliminarTipoFormaPago=false;
		}
		
		
		
	}
	
	public void actualizarEstadoCeldasBotonesConGuardarRelacionesTipoFormaPago() {
		this.isVisibilidadCeldaNuevoTipoFormaPago=false;
		this.isVisibilidadCeldaGuardarCambiosTipoFormaPago=false;
	}
	
	public void actualizarEstadoPanelsTipoFormaPago(String sAccion) {
		if(sAccion=="n") {
			if(this.jScrollPanelDatosEdicionTipoFormaPago!=null) {
				this.jScrollPanelDatosEdicionTipoFormaPago.setVisible(false);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasTipoFormaPago!=null) {
				this.jTabbedPaneBusquedasTipoFormaPago.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosTipoFormaPago!=null) {
				this.jScrollPanelDatosTipoFormaPago.setVisible(true);
			}
			
			if(this.jPanelPaginacionTipoFormaPago!=null) {
				this.jPanelPaginacionTipoFormaPago.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesTipoFormaPago!=null) {
				this.jPanelParametrosReportesTipoFormaPago.setVisible(true);		    
			}
			
		} else if(sAccion=="a") {				
			if(this.jScrollPanelDatosEdicionTipoFormaPago!=null) {
				this.jScrollPanelDatosEdicionTipoFormaPago.setVisible(true);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasTipoFormaPago!=null) {
				this.jTabbedPaneBusquedasTipoFormaPago.setVisible(false);			
			}
			
			
			
			if(this.jScrollPanelDatosTipoFormaPago!=null) {
				this.jScrollPanelDatosTipoFormaPago.setVisible(false);
			}
			
			if(this.jPanelPaginacionTipoFormaPago!=null) {
				this.jPanelPaginacionTipoFormaPago.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesTipoFormaPago!=null) {
				this.jPanelParametrosReportesTipoFormaPago.setVisible(false);
			}
						
		} else if(sAccion=="ae") {		
			if(this.jScrollPanelDatosEdicionTipoFormaPago!=null) {
				this.jScrollPanelDatosEdicionTipoFormaPago.setVisible(true);		
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasTipoFormaPago!=null) {
				this.jTabbedPaneBusquedasTipoFormaPago.setVisible(false);			
			}
			
			
			if(this.jScrollPanelDatosTipoFormaPago!=null) {
				this.jScrollPanelDatosTipoFormaPago.setVisible(false);
			}
			
			if(this.jPanelPaginacionTipoFormaPago!=null) {
				this.jPanelPaginacionTipoFormaPago.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesTipoFormaPago!=null) {
				this.jPanelParametrosReportesTipoFormaPago.setVisible(false);
			}
						
		}
		//Para Mantenimientos de tablas relacionados con mas de columnas minimas
		else if(sAccion=="ae2") {	
			if(this.jScrollPanelDatosEdicionTipoFormaPago!=null) {
				this.jScrollPanelDatosEdicionTipoFormaPago.setVisible(true);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasTipoFormaPago!=null) {
				this.jTabbedPaneBusquedasTipoFormaPago.setVisible(false);			
			}
			
			
			if(this.jScrollPanelDatosTipoFormaPago!=null) {
				this.jScrollPanelDatosTipoFormaPago.setVisible(false);
			}
			
			if(this.jPanelPaginacionTipoFormaPago!=null) {
				this.jPanelPaginacionTipoFormaPago.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesTipoFormaPago!=null) {
				this.jPanelParametrosReportesTipoFormaPago.setVisible(false);
			}
						
		} else if(sAccion=="c") {	
			if(this.jScrollPanelDatosEdicionTipoFormaPago!=null) {
				this.jScrollPanelDatosEdicionTipoFormaPago.setVisible(false);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasTipoFormaPago!=null) {
				this.jTabbedPaneBusquedasTipoFormaPago.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosTipoFormaPago!=null) {
				this.jScrollPanelDatosTipoFormaPago.setVisible(true);
			}
			
			if(this.jPanelPaginacionTipoFormaPago!=null) {
				this.jPanelPaginacionTipoFormaPago.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesTipoFormaPago!=null) {
				this.jPanelParametrosReportesTipoFormaPago.setVisible(true);
			}
						
		} else if(sAccion=="t") {
			
			if(this.jScrollPanelDatosEdicionTipoFormaPago!=null) {
				this.jScrollPanelDatosEdicionTipoFormaPago.setVisible(false);
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasTipoFormaPago!=null) {
				this.jTabbedPaneBusquedasTipoFormaPago.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosTipoFormaPago!=null) {
				this.jScrollPanelDatosTipoFormaPago.setVisible(true);
			}
			
			if(this.jPanelPaginacionTipoFormaPago!=null) {
				this.jPanelPaginacionTipoFormaPago.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesTipoFormaPago!=null) {
				this.jPanelParametrosReportesTipoFormaPago.setVisible(true);
			}
						
		}  else if(sAccion=="s"||sAccion=="s2") {
			if(this.jScrollPanelDatosEdicionTipoFormaPago!=null) {
				this.jScrollPanelDatosEdicionTipoFormaPago.setVisible(false);
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasTipoFormaPago!=null) {
				this.jTabbedPaneBusquedasTipoFormaPago.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosTipoFormaPago!=null) {
				this.jScrollPanelDatosTipoFormaPago.setVisible(true);
			}
			
			if(this.jPanelPaginacionTipoFormaPago!=null) {
				this.jPanelPaginacionTipoFormaPago.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesTipoFormaPago!=null) {
				this.jPanelParametrosReportesTipoFormaPago.setVisible(true);
			}
			
		} 
		
		if(sAccion.equals("relacionado") || this.tipoformapagoSessionBean.getEsGuardarRelacionado()) {
			if(!this.conCargarMinimo) {
				//BYDAN_BUSQUEDAS
				
				if(this.jTabbedPaneBusquedasTipoFormaPago!=null) {
					this.jTabbedPaneBusquedasTipoFormaPago.setVisible(false);				
				}
				
			}
			
			if(this.jPanelParametrosReportesTipoFormaPago!=null) {
				this.jPanelParametrosReportesTipoFormaPago.setVisible(false);
			}
		
		} else if(sAccion.equals("no_relacionado") && !this.tipoformapagoSessionBean.getEsGuardarRelacionado()) {
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasTipoFormaPago!=null) {
				this.jTabbedPaneBusquedasTipoFormaPago.setVisible(true);			
			}
			
			if(this.jPanelParametrosReportesTipoFormaPago!=null) {
				this.jPanelParametrosReportesTipoFormaPago.setVisible(true);
			}
		}
	}	
	
	

	public void setVisibilidadBusquedasParaEmpresa(Boolean isParaEmpresa){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaEmpresaNegation=!isParaEmpresa;

			this.isVisibilidadBusquedaPorNombre=isParaEmpresaNegation;
			if(!this.isVisibilidadBusquedaPorNombre) {this.jTabbedPaneBusquedasTipoFormaPago.remove(jPanelBusquedaPorNombreTipoFormaPago);}

			this.isVisibilidadBusquedaPorSiglas=isParaEmpresaNegation;
			if(!this.isVisibilidadBusquedaPorSiglas) {this.jTabbedPaneBusquedasTipoFormaPago.remove(jPanelBusquedaPorSiglasTipoFormaPago);}

			this.isVisibilidadFK_IdTipoFormaPago=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdTipoFormaPago) {this.jTabbedPaneBusquedasTipoFormaPago.remove(jPanelFK_IdTipoFormaPagoTipoFormaPago);}

			this.isVisibilidadFK_IdTipoGrupoFormaPago=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdTipoGrupoFormaPago) {this.jTabbedPaneBusquedasTipoFormaPago.remove(jPanelFK_IdTipoGrupoFormaPagoTipoFormaPago);}

			this.isVisibilidadFK_IdTipoTransaccionModulo=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdTipoTransaccionModulo) {this.jTabbedPaneBusquedasTipoFormaPago.remove(jPanelFK_IdTipoTransaccionModuloTipoFormaPago);}

			this.isVisibilidadFK_IdTransaccion=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdTransaccion) {this.jTabbedPaneBusquedasTipoFormaPago.remove(jPanelFK_IdTransaccionTipoFormaPago);}
		}
		
	}

	public void setVisibilidadBusquedasParaSucursal(Boolean isParaSucursal){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaSucursalNegation=!isParaSucursal;

			this.isVisibilidadBusquedaPorNombre=isParaSucursalNegation;
			if(!this.isVisibilidadBusquedaPorNombre) {this.jTabbedPaneBusquedasTipoFormaPago.remove(jPanelBusquedaPorNombreTipoFormaPago);}

			this.isVisibilidadBusquedaPorSiglas=isParaSucursalNegation;
			if(!this.isVisibilidadBusquedaPorSiglas) {this.jTabbedPaneBusquedasTipoFormaPago.remove(jPanelBusquedaPorSiglasTipoFormaPago);}

			this.isVisibilidadFK_IdTipoFormaPago=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdTipoFormaPago) {this.jTabbedPaneBusquedasTipoFormaPago.remove(jPanelFK_IdTipoFormaPagoTipoFormaPago);}

			this.isVisibilidadFK_IdTipoGrupoFormaPago=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdTipoGrupoFormaPago) {this.jTabbedPaneBusquedasTipoFormaPago.remove(jPanelFK_IdTipoGrupoFormaPagoTipoFormaPago);}

			this.isVisibilidadFK_IdTipoTransaccionModulo=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdTipoTransaccionModulo) {this.jTabbedPaneBusquedasTipoFormaPago.remove(jPanelFK_IdTipoTransaccionModuloTipoFormaPago);}

			this.isVisibilidadFK_IdTransaccion=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdTransaccion) {this.jTabbedPaneBusquedasTipoFormaPago.remove(jPanelFK_IdTransaccionTipoFormaPago);}
		}
		
	}

	public void setVisibilidadBusquedasParaModulo(Boolean isParaModulo){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaModuloNegation=!isParaModulo;

			this.isVisibilidadBusquedaPorNombre=isParaModuloNegation;
			if(!this.isVisibilidadBusquedaPorNombre) {this.jTabbedPaneBusquedasTipoFormaPago.remove(jPanelBusquedaPorNombreTipoFormaPago);}

			this.isVisibilidadBusquedaPorSiglas=isParaModuloNegation;
			if(!this.isVisibilidadBusquedaPorSiglas) {this.jTabbedPaneBusquedasTipoFormaPago.remove(jPanelBusquedaPorSiglasTipoFormaPago);}

			this.isVisibilidadFK_IdTipoFormaPago=isParaModuloNegation;
			if(!this.isVisibilidadFK_IdTipoFormaPago) {this.jTabbedPaneBusquedasTipoFormaPago.remove(jPanelFK_IdTipoFormaPagoTipoFormaPago);}

			this.isVisibilidadFK_IdTipoGrupoFormaPago=isParaModuloNegation;
			if(!this.isVisibilidadFK_IdTipoGrupoFormaPago) {this.jTabbedPaneBusquedasTipoFormaPago.remove(jPanelFK_IdTipoGrupoFormaPagoTipoFormaPago);}

			this.isVisibilidadFK_IdTipoTransaccionModulo=isParaModuloNegation;
			if(!this.isVisibilidadFK_IdTipoTransaccionModulo) {this.jTabbedPaneBusquedasTipoFormaPago.remove(jPanelFK_IdTipoTransaccionModuloTipoFormaPago);}

			this.isVisibilidadFK_IdTransaccion=isParaModuloNegation;
			if(!this.isVisibilidadFK_IdTransaccion) {this.jTabbedPaneBusquedasTipoFormaPago.remove(jPanelFK_IdTransaccionTipoFormaPago);}
		}
		
	}

	public void setVisibilidadBusquedasParaTipoGrupoFormaPago(Boolean isParaTipoGrupoFormaPago){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaTipoGrupoFormaPagoNegation=!isParaTipoGrupoFormaPago;

			this.isVisibilidadBusquedaPorNombre=isParaTipoGrupoFormaPagoNegation;
			if(!this.isVisibilidadBusquedaPorNombre) {this.jTabbedPaneBusquedasTipoFormaPago.remove(jPanelBusquedaPorNombreTipoFormaPago);}

			this.isVisibilidadBusquedaPorSiglas=isParaTipoGrupoFormaPagoNegation;
			if(!this.isVisibilidadBusquedaPorSiglas) {this.jTabbedPaneBusquedasTipoFormaPago.remove(jPanelBusquedaPorSiglasTipoFormaPago);}

			this.isVisibilidadFK_IdTipoFormaPago=isParaTipoGrupoFormaPagoNegation;
			if(!this.isVisibilidadFK_IdTipoFormaPago) {this.jTabbedPaneBusquedasTipoFormaPago.remove(jPanelFK_IdTipoFormaPagoTipoFormaPago);}

			this.isVisibilidadFK_IdTipoGrupoFormaPago=isParaTipoGrupoFormaPago;
			if(!this.isVisibilidadFK_IdTipoGrupoFormaPago) {this.jTabbedPaneBusquedasTipoFormaPago.remove(jPanelFK_IdTipoGrupoFormaPagoTipoFormaPago);}

			this.isVisibilidadFK_IdTipoTransaccionModulo=isParaTipoGrupoFormaPagoNegation;
			if(!this.isVisibilidadFK_IdTipoTransaccionModulo) {this.jTabbedPaneBusquedasTipoFormaPago.remove(jPanelFK_IdTipoTransaccionModuloTipoFormaPago);}

			this.isVisibilidadFK_IdTransaccion=isParaTipoGrupoFormaPagoNegation;
			if(!this.isVisibilidadFK_IdTransaccion) {this.jTabbedPaneBusquedasTipoFormaPago.remove(jPanelFK_IdTransaccionTipoFormaPago);}
		}
		
	}

	public void setVisibilidadBusquedasParaTipoTransaccionModulo(Boolean isParaTipoTransaccionModulo){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaTipoTransaccionModuloNegation=!isParaTipoTransaccionModulo;

			this.isVisibilidadBusquedaPorNombre=isParaTipoTransaccionModuloNegation;
			if(!this.isVisibilidadBusquedaPorNombre) {this.jTabbedPaneBusquedasTipoFormaPago.remove(jPanelBusquedaPorNombreTipoFormaPago);}

			this.isVisibilidadBusquedaPorSiglas=isParaTipoTransaccionModuloNegation;
			if(!this.isVisibilidadBusquedaPorSiglas) {this.jTabbedPaneBusquedasTipoFormaPago.remove(jPanelBusquedaPorSiglasTipoFormaPago);}

			this.isVisibilidadFK_IdTipoFormaPago=isParaTipoTransaccionModuloNegation;
			if(!this.isVisibilidadFK_IdTipoFormaPago) {this.jTabbedPaneBusquedasTipoFormaPago.remove(jPanelFK_IdTipoFormaPagoTipoFormaPago);}

			this.isVisibilidadFK_IdTipoGrupoFormaPago=isParaTipoTransaccionModuloNegation;
			if(!this.isVisibilidadFK_IdTipoGrupoFormaPago) {this.jTabbedPaneBusquedasTipoFormaPago.remove(jPanelFK_IdTipoGrupoFormaPagoTipoFormaPago);}

			this.isVisibilidadFK_IdTipoTransaccionModulo=isParaTipoTransaccionModulo;
			if(!this.isVisibilidadFK_IdTipoTransaccionModulo) {this.jTabbedPaneBusquedasTipoFormaPago.remove(jPanelFK_IdTipoTransaccionModuloTipoFormaPago);}

			this.isVisibilidadFK_IdTransaccion=isParaTipoTransaccionModuloNegation;
			if(!this.isVisibilidadFK_IdTransaccion) {this.jTabbedPaneBusquedasTipoFormaPago.remove(jPanelFK_IdTransaccionTipoFormaPago);}
		}
		
	}

	public void setVisibilidadBusquedasParaTransaccion(Boolean isParaTransaccion){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaTransaccionNegation=!isParaTransaccion;

			this.isVisibilidadBusquedaPorNombre=isParaTransaccionNegation;
			if(!this.isVisibilidadBusquedaPorNombre) {this.jTabbedPaneBusquedasTipoFormaPago.remove(jPanelBusquedaPorNombreTipoFormaPago);}

			this.isVisibilidadBusquedaPorSiglas=isParaTransaccionNegation;
			if(!this.isVisibilidadBusquedaPorSiglas) {this.jTabbedPaneBusquedasTipoFormaPago.remove(jPanelBusquedaPorSiglasTipoFormaPago);}

			this.isVisibilidadFK_IdTipoFormaPago=isParaTransaccionNegation;
			if(!this.isVisibilidadFK_IdTipoFormaPago) {this.jTabbedPaneBusquedasTipoFormaPago.remove(jPanelFK_IdTipoFormaPagoTipoFormaPago);}

			this.isVisibilidadFK_IdTipoGrupoFormaPago=isParaTransaccionNegation;
			if(!this.isVisibilidadFK_IdTipoGrupoFormaPago) {this.jTabbedPaneBusquedasTipoFormaPago.remove(jPanelFK_IdTipoGrupoFormaPagoTipoFormaPago);}

			this.isVisibilidadFK_IdTipoTransaccionModulo=isParaTransaccionNegation;
			if(!this.isVisibilidadFK_IdTipoTransaccionModulo) {this.jTabbedPaneBusquedasTipoFormaPago.remove(jPanelFK_IdTipoTransaccionModuloTipoFormaPago);}

			this.isVisibilidadFK_IdTransaccion=isParaTransaccion;
			if(!this.isVisibilidadFK_IdTransaccion) {this.jTabbedPaneBusquedasTipoFormaPago.remove(jPanelFK_IdTransaccionTipoFormaPago);}
		}
		
	}

	public void setVisibilidadBusquedasParaCuentaContable(Boolean isParaCuentaContable){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaCuentaContableNegation=!isParaCuentaContable;

			this.isVisibilidadBusquedaPorNombre=isParaCuentaContableNegation;
			if(!this.isVisibilidadBusquedaPorNombre) {this.jTabbedPaneBusquedasTipoFormaPago.remove(jPanelBusquedaPorNombreTipoFormaPago);}

			this.isVisibilidadBusquedaPorSiglas=isParaCuentaContableNegation;
			if(!this.isVisibilidadBusquedaPorSiglas) {this.jTabbedPaneBusquedasTipoFormaPago.remove(jPanelBusquedaPorSiglasTipoFormaPago);}

			this.isVisibilidadFK_IdTipoFormaPago=isParaCuentaContable;
			if(!this.isVisibilidadFK_IdTipoFormaPago) {this.jTabbedPaneBusquedasTipoFormaPago.remove(jPanelFK_IdTipoFormaPagoTipoFormaPago);}

			this.isVisibilidadFK_IdTipoGrupoFormaPago=isParaCuentaContableNegation;
			if(!this.isVisibilidadFK_IdTipoGrupoFormaPago) {this.jTabbedPaneBusquedasTipoFormaPago.remove(jPanelFK_IdTipoGrupoFormaPagoTipoFormaPago);}

			this.isVisibilidadFK_IdTipoTransaccionModulo=isParaCuentaContableNegation;
			if(!this.isVisibilidadFK_IdTipoTransaccionModulo) {this.jTabbedPaneBusquedasTipoFormaPago.remove(jPanelFK_IdTipoTransaccionModuloTipoFormaPago);}

			this.isVisibilidadFK_IdTransaccion=isParaCuentaContableNegation;
			if(!this.isVisibilidadFK_IdTransaccion) {this.jTabbedPaneBusquedasTipoFormaPago.remove(jPanelFK_IdTransaccionTipoFormaPago);}
		}
		
	}
	
	

	public String registrarSesionTipoFormaPagoParaRegistroFormaPagoBancos() throws Exception {
		Boolean isPaginaPopupRegistroFormaPagoBanco=false;

		try {

			if(this.tipoformapagoSessionBean==null) {
				this.tipoformapagoSessionBean=new TipoFormaPagoSessionBean();
			}

			if(this.jInternalFrameDetalleFormTipoFormaPago.registroformapagobancoSessionBean==null) {
				this.jInternalFrameDetalleFormTipoFormaPago.registroformapagobancoSessionBean=new RegistroFormaPagoBancoSessionBean();
			}

			this.jInternalFrameDetalleFormTipoFormaPago.registroformapagobancoSessionBean.setsPathNavegacionActual(tipoformapagoSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+RegistroFormaPagoBancoConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormTipoFormaPago.registroformapagobancoSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupRegistroFormaPagoBanco=this.jInternalFrameDetalleFormTipoFormaPago.registroformapagobancoSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormTipoFormaPago.registroformapagobancoSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeRegistroFormaPagoBanco(true);
			this.jInternalFrameDetalleFormTipoFormaPago.registroformapagobancoSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeRegistroFormaPagoBanco(TipoFormaPagoConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormTipoFormaPago.registroformapagobancoSessionBean.setisBusquedaDesdeForeignKeySesionTipoFormaPago(true);
			this.jInternalFrameDetalleFormTipoFormaPago.registroformapagobancoSessionBean.setlidTipoFormaPagoActual(this.idTipoFormaPagoActual);

			tipoformapagoSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyTipoFormaPago(true);
			tipoformapagoSessionBean.setlIdTipoFormaPagoActualForeignKey(this.idTipoFormaPagoActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}

	public String registrarSesionTipoFormaPagoParaDetaFormaPagoFactus() throws Exception {
		Boolean isPaginaPopupDetaFormaPagoFactu=false;

		try {

			if(this.tipoformapagoSessionBean==null) {
				this.tipoformapagoSessionBean=new TipoFormaPagoSessionBean();
			}

			if(this.jInternalFrameDetalleFormTipoFormaPago.detaformapagofactuSessionBean==null) {
				this.jInternalFrameDetalleFormTipoFormaPago.detaformapagofactuSessionBean=new DetaFormaPagoFactuSessionBean();
			}

			this.jInternalFrameDetalleFormTipoFormaPago.detaformapagofactuSessionBean.setsPathNavegacionActual(tipoformapagoSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+DetaFormaPagoFactuConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormTipoFormaPago.detaformapagofactuSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupDetaFormaPagoFactu=this.jInternalFrameDetalleFormTipoFormaPago.detaformapagofactuSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormTipoFormaPago.detaformapagofactuSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeDetaFormaPagoFactu(true);
			this.jInternalFrameDetalleFormTipoFormaPago.detaformapagofactuSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeDetaFormaPagoFactu(TipoFormaPagoConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormTipoFormaPago.detaformapagofactuSessionBean.setisBusquedaDesdeForeignKeySesionTipoFormaPago(true);
			this.jInternalFrameDetalleFormTipoFormaPago.detaformapagofactuSessionBean.setlidTipoFormaPagoActual(this.idTipoFormaPagoActual);

			tipoformapagoSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyTipoFormaPago(true);
			tipoformapagoSessionBean.setlIdTipoFormaPagoActualForeignKey(this.idTipoFormaPagoActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}

	public String registrarSesionTipoFormaPagoParaGrupoClienteFormaPagos() throws Exception {
		Boolean isPaginaPopupGrupoClienteFormaPago=false;

		try {

			if(this.tipoformapagoSessionBean==null) {
				this.tipoformapagoSessionBean=new TipoFormaPagoSessionBean();
			}

			if(this.jInternalFrameDetalleFormTipoFormaPago.grupoclienteformapagoSessionBean==null) {
				this.jInternalFrameDetalleFormTipoFormaPago.grupoclienteformapagoSessionBean=new GrupoClienteFormaPagoSessionBean();
			}

			this.jInternalFrameDetalleFormTipoFormaPago.grupoclienteformapagoSessionBean.setsPathNavegacionActual(tipoformapagoSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+GrupoClienteFormaPagoConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormTipoFormaPago.grupoclienteformapagoSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupGrupoClienteFormaPago=this.jInternalFrameDetalleFormTipoFormaPago.grupoclienteformapagoSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormTipoFormaPago.grupoclienteformapagoSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeGrupoClienteFormaPago(true);
			this.jInternalFrameDetalleFormTipoFormaPago.grupoclienteformapagoSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeGrupoClienteFormaPago(TipoFormaPagoConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormTipoFormaPago.grupoclienteformapagoSessionBean.setisBusquedaDesdeForeignKeySesionTipoFormaPago(true);
			this.jInternalFrameDetalleFormTipoFormaPago.grupoclienteformapagoSessionBean.setlidTipoFormaPagoActual(this.idTipoFormaPagoActual);

			tipoformapagoSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyTipoFormaPago(true);
			tipoformapagoSessionBean.setlIdTipoFormaPagoActualForeignKey(this.idTipoFormaPagoActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}

	public String registrarSesionTipoFormaPagoParaDetaFormaPagos() throws Exception {
		Boolean isPaginaPopupDetaFormaPago=false;

		try {

			if(this.tipoformapagoSessionBean==null) {
				this.tipoformapagoSessionBean=new TipoFormaPagoSessionBean();
			}

			if(this.jInternalFrameDetalleFormTipoFormaPago.detaformapagoSessionBean==null) {
				this.jInternalFrameDetalleFormTipoFormaPago.detaformapagoSessionBean=new DetaFormaPagoSessionBean();
			}

			this.jInternalFrameDetalleFormTipoFormaPago.detaformapagoSessionBean.setsPathNavegacionActual(tipoformapagoSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+DetaFormaPagoConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormTipoFormaPago.detaformapagoSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupDetaFormaPago=this.jInternalFrameDetalleFormTipoFormaPago.detaformapagoSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormTipoFormaPago.detaformapagoSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeDetaFormaPago(true);
			this.jInternalFrameDetalleFormTipoFormaPago.detaformapagoSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeDetaFormaPago(TipoFormaPagoConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormTipoFormaPago.detaformapagoSessionBean.setisBusquedaDesdeForeignKeySesionTipoFormaPago(true);
			this.jInternalFrameDetalleFormTipoFormaPago.detaformapagoSessionBean.setlidTipoFormaPagoActual(this.idTipoFormaPagoActual);

			tipoformapagoSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyTipoFormaPago(true);
			tipoformapagoSessionBean.setlIdTipoFormaPagoActualForeignKey(this.idTipoFormaPagoActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}

	public String registrarSesionTipoFormaPagoParaFormaPagoPuntoVentaes() throws Exception {
		Boolean isPaginaPopupFormaPagoPuntoVenta=false;

		try {

			if(this.tipoformapagoSessionBean==null) {
				this.tipoformapagoSessionBean=new TipoFormaPagoSessionBean();
			}

			if(this.jInternalFrameDetalleFormTipoFormaPago.formapagopuntoventaSessionBean==null) {
				this.jInternalFrameDetalleFormTipoFormaPago.formapagopuntoventaSessionBean=new FormaPagoPuntoVentaSessionBean();
			}

			this.jInternalFrameDetalleFormTipoFormaPago.formapagopuntoventaSessionBean.setsPathNavegacionActual(tipoformapagoSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+FormaPagoPuntoVentaConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormTipoFormaPago.formapagopuntoventaSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupFormaPagoPuntoVenta=this.jInternalFrameDetalleFormTipoFormaPago.formapagopuntoventaSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormTipoFormaPago.formapagopuntoventaSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeFormaPagoPuntoVenta(true);
			this.jInternalFrameDetalleFormTipoFormaPago.formapagopuntoventaSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeFormaPagoPuntoVenta(TipoFormaPagoConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormTipoFormaPago.formapagopuntoventaSessionBean.setisBusquedaDesdeForeignKeySesionTipoFormaPago(true);
			this.jInternalFrameDetalleFormTipoFormaPago.formapagopuntoventaSessionBean.setlidTipoFormaPagoActual(this.idTipoFormaPagoActual);

			tipoformapagoSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyTipoFormaPago(true);
			tipoformapagoSessionBean.setlIdTipoFormaPagoActualForeignKey(this.idTipoFormaPagoActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}

	public String registrarSesionTipoFormaPagoParaFormaPagos() throws Exception {
		Boolean isPaginaPopupFormaPago=false;

		try {

			if(this.tipoformapagoSessionBean==null) {
				this.tipoformapagoSessionBean=new TipoFormaPagoSessionBean();
			}

			if(this.jInternalFrameDetalleFormTipoFormaPago.formapagoSessionBean==null) {
				this.jInternalFrameDetalleFormTipoFormaPago.formapagoSessionBean=new FormaPagoSessionBean();
			}

			this.jInternalFrameDetalleFormTipoFormaPago.formapagoSessionBean.setsPathNavegacionActual(tipoformapagoSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+FormaPagoConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormTipoFormaPago.formapagoSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupFormaPago=this.jInternalFrameDetalleFormTipoFormaPago.formapagoSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormTipoFormaPago.formapagoSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeFormaPago(true);
			this.jInternalFrameDetalleFormTipoFormaPago.formapagoSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeFormaPago(TipoFormaPagoConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormTipoFormaPago.formapagoSessionBean.setisBusquedaDesdeForeignKeySesionTipoFormaPago(true);
			this.jInternalFrameDetalleFormTipoFormaPago.formapagoSessionBean.setlidTipoFormaPagoActual(this.idTipoFormaPagoActual);

			tipoformapagoSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyTipoFormaPago(true);
			tipoformapagoSessionBean.setlIdTipoFormaPagoActualForeignKey(this.idTipoFormaPagoActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}

	public String registrarSesionTipoFormaPagoParaFormaPagoInvenes() throws Exception {
		Boolean isPaginaPopupFormaPagoInven=false;

		try {

			if(this.tipoformapagoSessionBean==null) {
				this.tipoformapagoSessionBean=new TipoFormaPagoSessionBean();
			}

			if(this.jInternalFrameDetalleFormTipoFormaPago.formapagoinvenSessionBean==null) {
				this.jInternalFrameDetalleFormTipoFormaPago.formapagoinvenSessionBean=new FormaPagoInvenSessionBean();
			}

			this.jInternalFrameDetalleFormTipoFormaPago.formapagoinvenSessionBean.setsPathNavegacionActual(tipoformapagoSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+FormaPagoInvenConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormTipoFormaPago.formapagoinvenSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupFormaPagoInven=this.jInternalFrameDetalleFormTipoFormaPago.formapagoinvenSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormTipoFormaPago.formapagoinvenSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeFormaPagoInven(true);
			this.jInternalFrameDetalleFormTipoFormaPago.formapagoinvenSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeFormaPagoInven(TipoFormaPagoConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormTipoFormaPago.formapagoinvenSessionBean.setisBusquedaDesdeForeignKeySesionTipoFormaPago(true);
			this.jInternalFrameDetalleFormTipoFormaPago.formapagoinvenSessionBean.setlidTipoFormaPagoActual(this.idTipoFormaPagoActual);

			tipoformapagoSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyTipoFormaPago(true);
			tipoformapagoSessionBean.setlIdTipoFormaPagoActualForeignKey(this.idTipoFormaPagoActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}

	public String registrarSesionTipoFormaPagoParaCierreCajas() throws Exception {
		Boolean isPaginaPopupCierreCaja=false;

		try {

			if(this.tipoformapagoSessionBean==null) {
				this.tipoformapagoSessionBean=new TipoFormaPagoSessionBean();
			}

			if(this.jInternalFrameDetalleFormTipoFormaPago.cierrecajaSessionBean==null) {
				this.jInternalFrameDetalleFormTipoFormaPago.cierrecajaSessionBean=new CierreCajaSessionBean();
			}

			this.jInternalFrameDetalleFormTipoFormaPago.cierrecajaSessionBean.setsPathNavegacionActual(tipoformapagoSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+CierreCajaConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormTipoFormaPago.cierrecajaSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupCierreCaja=this.jInternalFrameDetalleFormTipoFormaPago.cierrecajaSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormTipoFormaPago.cierrecajaSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeCierreCaja(true);
			this.jInternalFrameDetalleFormTipoFormaPago.cierrecajaSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeCierreCaja(TipoFormaPagoConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormTipoFormaPago.cierrecajaSessionBean.setisBusquedaDesdeForeignKeySesionTipoFormaPago(true);
			this.jInternalFrameDetalleFormTipoFormaPago.cierrecajaSessionBean.setlidTipoFormaPagoActual(this.idTipoFormaPagoActual);

			tipoformapagoSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyTipoFormaPago(true);
			tipoformapagoSessionBean.setlIdTipoFormaPagoActualForeignKey(this.idTipoFormaPagoActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}
	
	

	public String registrarSesionTipoFormaPagoParaBusquedaCuentaContables() throws Exception {
		Boolean isPaginaPopupCuentaContable=false;

		try {

			if(tipoformapagoSessionBean==null) {
				tipoformapagoSessionBean=new TipoFormaPagoSessionBean();
			}

			if(cuentacontableSessionBean==null) {
				cuentacontableSessionBean=new CuentaContableSessionBean();
			}

			cuentacontableSessionBean.setsPathNavegacionActual(tipoformapagoSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+CuentaContableConstantesFunciones.SCLASSWEBTITULO);
			cuentacontableSessionBean.setisPermiteRecargarInformacion(false);
			cuentacontableSessionBean.setisPaginaPopup(true);
			isPaginaPopupCuentaContable=cuentacontableSessionBean.getisPaginaPopup();
			cuentacontableSessionBean.setisPaginaPopup(false);
			cuentacontableSessionBean.setEstaModoBusqueda(true);
			cuentacontableSessionBean.setsFuncionBusquedaRapida("window.opener.tipoformapagoFuncionGeneral.setCombosCodigoDesdeBusquedaid_cuenta_contable(TO_REPLACE);");
			cuentacontableSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeCuentaContable(true);
			cuentacontableSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeCuentaContable(TipoFormaPagoConstantesFunciones.SNOMBREOPCION);
			//cuentacontableSessionBean.setisBusquedaDesdeForeignKeySesionTipoFormaPago(true);
			//cuentacontableSessionBean.setlidTipoFormaPagoActual(this.idTipoFormaPagoActual);

			tipoformapagoSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyTipoFormaPago(true);
			tipoformapagoSessionBean.setlIdTipoFormaPagoActualForeignKey(this.idTipoFormaPagoActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
			return "";
	}
	
	
	public void guardarDatosBusquedaSession() throws Exception {
		
		//TipoFormaPagoSessionBean tipoformapagoSessionBean=new TipoFormaPagoSessionBean();
		
		if(this.tipoformapagoSessionBean==null) {
			this.tipoformapagoSessionBean=new TipoFormaPagoSessionBean();
		}
		
		this.tipoformapagoSessionBean.setsUltimaBusquedaTipoFormaPago(this.getsAccionBusqueda());
		this.tipoformapagoSessionBean.setiNumeroPaginacion(this.getiNumeroPaginacion());
		this.tipoformapagoSessionBean.setiNumeroPaginacionPagina(this.getiNumeroPaginacionPagina());
		
		if(this.getsAccionBusqueda().equals("Todos")) {
			;
		}
		

		else if(this.getsAccionBusqueda().equals("BusquedaPorNombre")) {
			tipoformapagoSessionBean.setnombre(this.getnombreBusquedaPorNombre());	
		}
		else if(this.getsAccionBusqueda().equals("BusquedaPorSiglas")) {
			tipoformapagoSessionBean.setsiglas(this.getsiglasBusquedaPorSiglas());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdEmpresa")) {
			tipoformapagoSessionBean.setid_empresa(this.getid_empresaFK_IdEmpresa());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdModulo")) {
			tipoformapagoSessionBean.setid_modulo(this.getid_moduloFK_IdModulo());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdSucursal")) {
			tipoformapagoSessionBean.setid_sucursal(this.getid_sucursalFK_IdSucursal());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdTipoFormaPago")) {
			tipoformapagoSessionBean.setid_cuenta_contable(this.getid_cuenta_contableFK_IdTipoFormaPago());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdTipoGrupoFormaPago")) {
			tipoformapagoSessionBean.setid_tipo_grupo_forma_pago(this.getid_tipo_grupo_forma_pagoFK_IdTipoGrupoFormaPago());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdTipoTransaccionModulo")) {
			tipoformapagoSessionBean.setid_tipo_transaccion_modulo(this.getid_tipo_transaccion_moduloFK_IdTipoTransaccionModulo());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdTransaccion")) {
			tipoformapagoSessionBean.setid_transaccion(this.getid_transaccionFK_IdTransaccion());	
		}
		
	}
	
	public void traerDatosBusquedaDesdeSession() throws Exception {
		//TipoFormaPagoSessionBean tipoformapagoSessionBean=new TipoFormaPagoSessionBean();
		
		if(this.tipoformapagoSessionBean==null) {
			this.tipoformapagoSessionBean=new TipoFormaPagoSessionBean();
		}
		
		if(this.tipoformapagoSessionBean.getsUltimaBusquedaTipoFormaPago()!=null&&!this.tipoformapagoSessionBean.getsUltimaBusquedaTipoFormaPago().equals("")) {
			this.setsAccionBusqueda(tipoformapagoSessionBean.getsUltimaBusquedaTipoFormaPago());
			this.setiNumeroPaginacion(tipoformapagoSessionBean.getiNumeroPaginacion());
			this.setiNumeroPaginacionPagina(tipoformapagoSessionBean.getiNumeroPaginacionPagina());		
				
			if(this.getsAccionBusqueda().equals("Todos")) {
				;
			}
			

			 else if(this.getsAccionBusqueda().equals("BusquedaPorNombre")) {
				this.setnombreBusquedaPorNombre(tipoformapagoSessionBean.getnombre());
				tipoformapagoSessionBean.setnombre("");
			}
			 else if(this.getsAccionBusqueda().equals("BusquedaPorSiglas")) {
				this.setsiglasBusquedaPorSiglas(tipoformapagoSessionBean.getsiglas());
				tipoformapagoSessionBean.setsiglas("");
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdEmpresa")) {
				this.setid_empresaFK_IdEmpresa(tipoformapagoSessionBean.getid_empresa());
				tipoformapagoSessionBean.setid_empresa(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdModulo")) {
				this.setid_moduloFK_IdModulo(tipoformapagoSessionBean.getid_modulo());
				tipoformapagoSessionBean.setid_modulo(null);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdSucursal")) {
				this.setid_sucursalFK_IdSucursal(tipoformapagoSessionBean.getid_sucursal());
				tipoformapagoSessionBean.setid_sucursal(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdTipoFormaPago")) {
				this.setid_cuenta_contableFK_IdTipoFormaPago(tipoformapagoSessionBean.getid_cuenta_contable());
				tipoformapagoSessionBean.setid_cuenta_contable(null);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdTipoGrupoFormaPago")) {
				this.setid_tipo_grupo_forma_pagoFK_IdTipoGrupoFormaPago(tipoformapagoSessionBean.getid_tipo_grupo_forma_pago());
				tipoformapagoSessionBean.setid_tipo_grupo_forma_pago(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdTipoTransaccionModulo")) {
				this.setid_tipo_transaccion_moduloFK_IdTipoTransaccionModulo(tipoformapagoSessionBean.getid_tipo_transaccion_modulo());
				tipoformapagoSessionBean.setid_tipo_transaccion_modulo(null);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdTransaccion")) {
				this.setid_transaccionFK_IdTransaccion(tipoformapagoSessionBean.getid_transaccion());
				tipoformapagoSessionBean.setid_transaccion(null);
			}
		}
		
		this.tipoformapagoSessionBean.setsUltimaBusquedaTipoFormaPago("");
		this.tipoformapagoSessionBean.setiNumeroPaginacion(TipoFormaPagoConstantesFunciones.INUMEROPAGINACION);
		this.tipoformapagoSessionBean.setiNumeroPaginacionPagina(0);
		
	}
	
	public void procesoActualizarFilaTotales(Boolean esCampoValor,String sTipo) {
		try {
			this.actualizarFilaTotales();
				
			this.traerValoresTablaTotales();
			
			this.inicializarActualizarBindingTablaTipoFormaPago(false);
			
			
			
			
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	
	
	public void updateBusquedasFormularioTipoFormaPago() {
		this.updateBorderResaltarBusquedasFormularioTipoFormaPago();
		this.updateVisibilidadBusquedasFormularioTipoFormaPago();
		this.updateHabilitarBusquedasFormularioTipoFormaPago();
	}
	
	public void updateBorderResaltarBusquedasFormularioTipoFormaPago() {					
	//BYDAN_BUSQUEDAS
		
	int index=0;
		
	if(this.jTabbedPaneBusquedasTipoFormaPago.getComponents().length>0) {
	

		if(this.tipoformapagoConstantesFunciones.resaltarBusquedaPorNombreTipoFormaPago!=null) {
			index= this.jTabbedPaneBusquedasTipoFormaPago.indexOfComponent(this.jPanelBusquedaPorNombreTipoFormaPago);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasTipoFormaPago.getComponent(index);
				jPanel.setBorder(this.tipoformapagoConstantesFunciones.resaltarBusquedaPorNombreTipoFormaPago);
			}
		}

		if(this.tipoformapagoConstantesFunciones.resaltarBusquedaPorSiglasTipoFormaPago!=null) {
			index= this.jTabbedPaneBusquedasTipoFormaPago.indexOfComponent(this.jPanelBusquedaPorSiglasTipoFormaPago);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasTipoFormaPago.getComponent(index);
				jPanel.setBorder(this.tipoformapagoConstantesFunciones.resaltarBusquedaPorSiglasTipoFormaPago);
			}
		}

		if(this.tipoformapagoConstantesFunciones.resaltarFK_IdTipoFormaPagoTipoFormaPago!=null) {
			index= this.jTabbedPaneBusquedasTipoFormaPago.indexOfComponent(this.jPanelFK_IdTipoFormaPagoTipoFormaPago);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasTipoFormaPago.getComponent(index);
				jPanel.setBorder(this.tipoformapagoConstantesFunciones.resaltarFK_IdTipoFormaPagoTipoFormaPago);
			}
		}

		if(this.tipoformapagoConstantesFunciones.resaltarFK_IdTipoGrupoFormaPagoTipoFormaPago!=null) {
			index= this.jTabbedPaneBusquedasTipoFormaPago.indexOfComponent(this.jPanelFK_IdTipoGrupoFormaPagoTipoFormaPago);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasTipoFormaPago.getComponent(index);
				jPanel.setBorder(this.tipoformapagoConstantesFunciones.resaltarFK_IdTipoGrupoFormaPagoTipoFormaPago);
			}
		}

		if(this.tipoformapagoConstantesFunciones.resaltarFK_IdTipoTransaccionModuloTipoFormaPago!=null) {
			index= this.jTabbedPaneBusquedasTipoFormaPago.indexOfComponent(this.jPanelFK_IdTipoTransaccionModuloTipoFormaPago);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasTipoFormaPago.getComponent(index);
				jPanel.setBorder(this.tipoformapagoConstantesFunciones.resaltarFK_IdTipoTransaccionModuloTipoFormaPago);
			}
		}

		if(this.tipoformapagoConstantesFunciones.resaltarFK_IdTransaccionTipoFormaPago!=null) {
			index= this.jTabbedPaneBusquedasTipoFormaPago.indexOfComponent(this.jPanelFK_IdTransaccionTipoFormaPago);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasTipoFormaPago.getComponent(index);
				jPanel.setBorder(this.tipoformapagoConstantesFunciones.resaltarFK_IdTransaccionTipoFormaPago);
			}
		}
	}	
	
	}
	
	public void updateVisibilidadBusquedasFormularioTipoFormaPago() {
	//BYDAN_BUSQUEDAS
	
	int index=0;
	JPanel jPanel=null;
		
	if(this.jTabbedPaneBusquedasTipoFormaPago.getComponents().length>0) {
	

			index= this.jTabbedPaneBusquedasTipoFormaPago.indexOfComponent(this.jPanelBusquedaPorNombreTipoFormaPago);
			jPanel=(JPanel)this.jTabbedPaneBusquedasTipoFormaPago.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.tipoformapagoConstantesFunciones.mostrarBusquedaPorNombreTipoFormaPago);
			if(!this.tipoformapagoConstantesFunciones.mostrarBusquedaPorNombreTipoFormaPago && index>-1) {
				this.jTabbedPaneBusquedasTipoFormaPago.remove(index);
			}

			index= this.jTabbedPaneBusquedasTipoFormaPago.indexOfComponent(this.jPanelBusquedaPorSiglasTipoFormaPago);
			jPanel=(JPanel)this.jTabbedPaneBusquedasTipoFormaPago.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.tipoformapagoConstantesFunciones.mostrarBusquedaPorSiglasTipoFormaPago);
			if(!this.tipoformapagoConstantesFunciones.mostrarBusquedaPorSiglasTipoFormaPago && index>-1) {
				this.jTabbedPaneBusquedasTipoFormaPago.remove(index);
			}

			index= this.jTabbedPaneBusquedasTipoFormaPago.indexOfComponent(this.jPanelFK_IdTipoFormaPagoTipoFormaPago);
			jPanel=(JPanel)this.jTabbedPaneBusquedasTipoFormaPago.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.tipoformapagoConstantesFunciones.mostrarFK_IdTipoFormaPagoTipoFormaPago);
			if(!this.tipoformapagoConstantesFunciones.mostrarFK_IdTipoFormaPagoTipoFormaPago && index>-1) {
				this.jTabbedPaneBusquedasTipoFormaPago.remove(index);
			}

			index= this.jTabbedPaneBusquedasTipoFormaPago.indexOfComponent(this.jPanelFK_IdTipoGrupoFormaPagoTipoFormaPago);
			jPanel=(JPanel)this.jTabbedPaneBusquedasTipoFormaPago.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.tipoformapagoConstantesFunciones.mostrarFK_IdTipoGrupoFormaPagoTipoFormaPago);
			if(!this.tipoformapagoConstantesFunciones.mostrarFK_IdTipoGrupoFormaPagoTipoFormaPago && index>-1) {
				this.jTabbedPaneBusquedasTipoFormaPago.remove(index);
			}

			index= this.jTabbedPaneBusquedasTipoFormaPago.indexOfComponent(this.jPanelFK_IdTipoTransaccionModuloTipoFormaPago);
			jPanel=(JPanel)this.jTabbedPaneBusquedasTipoFormaPago.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.tipoformapagoConstantesFunciones.mostrarFK_IdTipoTransaccionModuloTipoFormaPago);
			if(!this.tipoformapagoConstantesFunciones.mostrarFK_IdTipoTransaccionModuloTipoFormaPago && index>-1) {
				this.jTabbedPaneBusquedasTipoFormaPago.remove(index);
			}

			index= this.jTabbedPaneBusquedasTipoFormaPago.indexOfComponent(this.jPanelFK_IdTransaccionTipoFormaPago);
			jPanel=(JPanel)this.jTabbedPaneBusquedasTipoFormaPago.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.tipoformapagoConstantesFunciones.mostrarFK_IdTransaccionTipoFormaPago);
			if(!this.tipoformapagoConstantesFunciones.mostrarFK_IdTransaccionTipoFormaPago && index>-1) {
				this.jTabbedPaneBusquedasTipoFormaPago.remove(index);
			}
	}	
	
	}
	
	public void updateHabilitarBusquedasFormularioTipoFormaPago() {
	
	//BYDAN_BUSQUEDAS		
		int index=0;
		JPanel jPanel=null;
			
		if(this.jTabbedPaneBusquedasTipoFormaPago.getComponents().length>0) {
	

			index= this.jTabbedPaneBusquedasTipoFormaPago.indexOfComponent(this.jPanelBusquedaPorNombreTipoFormaPago);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasTipoFormaPago.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.tipoformapagoConstantesFunciones.activarBusquedaPorNombreTipoFormaPago);
				this.jTabbedPaneBusquedasTipoFormaPago.setEnabledAt(index,this.tipoformapagoConstantesFunciones.activarBusquedaPorNombreTipoFormaPago);
			}

			index= this.jTabbedPaneBusquedasTipoFormaPago.indexOfComponent(this.jPanelBusquedaPorSiglasTipoFormaPago);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasTipoFormaPago.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.tipoformapagoConstantesFunciones.activarBusquedaPorSiglasTipoFormaPago);
				this.jTabbedPaneBusquedasTipoFormaPago.setEnabledAt(index,this.tipoformapagoConstantesFunciones.activarBusquedaPorSiglasTipoFormaPago);
			}

			index= this.jTabbedPaneBusquedasTipoFormaPago.indexOfComponent(this.jPanelFK_IdTipoFormaPagoTipoFormaPago);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasTipoFormaPago.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.tipoformapagoConstantesFunciones.activarFK_IdTipoFormaPagoTipoFormaPago);
				this.jTabbedPaneBusquedasTipoFormaPago.setEnabledAt(index,this.tipoformapagoConstantesFunciones.activarFK_IdTipoFormaPagoTipoFormaPago);
			}

			index= this.jTabbedPaneBusquedasTipoFormaPago.indexOfComponent(this.jPanelFK_IdTipoGrupoFormaPagoTipoFormaPago);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasTipoFormaPago.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.tipoformapagoConstantesFunciones.activarFK_IdTipoGrupoFormaPagoTipoFormaPago);
				this.jTabbedPaneBusquedasTipoFormaPago.setEnabledAt(index,this.tipoformapagoConstantesFunciones.activarFK_IdTipoGrupoFormaPagoTipoFormaPago);
			}

			index= this.jTabbedPaneBusquedasTipoFormaPago.indexOfComponent(this.jPanelFK_IdTipoTransaccionModuloTipoFormaPago);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasTipoFormaPago.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.tipoformapagoConstantesFunciones.activarFK_IdTipoTransaccionModuloTipoFormaPago);
				this.jTabbedPaneBusquedasTipoFormaPago.setEnabledAt(index,this.tipoformapagoConstantesFunciones.activarFK_IdTipoTransaccionModuloTipoFormaPago);
			}

			index= this.jTabbedPaneBusquedasTipoFormaPago.indexOfComponent(this.jPanelFK_IdTransaccionTipoFormaPago);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasTipoFormaPago.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.tipoformapagoConstantesFunciones.activarFK_IdTransaccionTipoFormaPago);
				this.jTabbedPaneBusquedasTipoFormaPago.setEnabledAt(index,this.tipoformapagoConstantesFunciones.activarFK_IdTransaccionTipoFormaPago);
			}
		}	
	
	}
	
	
	public void resaltarPanelBusquedaTipoFormaPago(String sTipoBusqueda) {
		Boolean existe=false;
		//BYDAN_BUSQUEDAS
		
		int index=0;
		Border resaltar = Funciones2.getBorderResaltar(this.parametroGeneralUsuario,"TAB");

		if(sTipoBusqueda.equals("BusquedaPorNombre")) {
			index= this.jTabbedPaneBusquedasTipoFormaPago.indexOfComponent(this.jPanelBusquedaPorNombreTipoFormaPago);

			this.jTabbedPaneBusquedasTipoFormaPago.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasTipoFormaPago.getComponent(index);

			this.tipoformapagoConstantesFunciones.setResaltarBusquedaPorNombreTipoFormaPago(resaltar);

			jPanel.setBorder(this.tipoformapagoConstantesFunciones.resaltarBusquedaPorNombreTipoFormaPago);
			existe=true;
		}
		else if(sTipoBusqueda.equals("BusquedaPorSiglas")) {
			index= this.jTabbedPaneBusquedasTipoFormaPago.indexOfComponent(this.jPanelBusquedaPorSiglasTipoFormaPago);

			this.jTabbedPaneBusquedasTipoFormaPago.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasTipoFormaPago.getComponent(index);

			this.tipoformapagoConstantesFunciones.setResaltarBusquedaPorSiglasTipoFormaPago(resaltar);

			jPanel.setBorder(this.tipoformapagoConstantesFunciones.resaltarBusquedaPorSiglasTipoFormaPago);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdTipoFormaPago")) {
			index= this.jTabbedPaneBusquedasTipoFormaPago.indexOfComponent(this.jPanelFK_IdTipoFormaPagoTipoFormaPago);

			this.jTabbedPaneBusquedasTipoFormaPago.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasTipoFormaPago.getComponent(index);

			this.tipoformapagoConstantesFunciones.setResaltarFK_IdTipoFormaPagoTipoFormaPago(resaltar);

			jPanel.setBorder(this.tipoformapagoConstantesFunciones.resaltarFK_IdTipoFormaPagoTipoFormaPago);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdTipoGrupoFormaPago")) {
			index= this.jTabbedPaneBusquedasTipoFormaPago.indexOfComponent(this.jPanelFK_IdTipoGrupoFormaPagoTipoFormaPago);

			this.jTabbedPaneBusquedasTipoFormaPago.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasTipoFormaPago.getComponent(index);

			this.tipoformapagoConstantesFunciones.setResaltarFK_IdTipoGrupoFormaPagoTipoFormaPago(resaltar);

			jPanel.setBorder(this.tipoformapagoConstantesFunciones.resaltarFK_IdTipoGrupoFormaPagoTipoFormaPago);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdTipoTransaccionModulo")) {
			index= this.jTabbedPaneBusquedasTipoFormaPago.indexOfComponent(this.jPanelFK_IdTipoTransaccionModuloTipoFormaPago);

			this.jTabbedPaneBusquedasTipoFormaPago.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasTipoFormaPago.getComponent(index);

			this.tipoformapagoConstantesFunciones.setResaltarFK_IdTipoTransaccionModuloTipoFormaPago(resaltar);

			jPanel.setBorder(this.tipoformapagoConstantesFunciones.resaltarFK_IdTipoTransaccionModuloTipoFormaPago);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdTransaccion")) {
			index= this.jTabbedPaneBusquedasTipoFormaPago.indexOfComponent(this.jPanelFK_IdTransaccionTipoFormaPago);

			this.jTabbedPaneBusquedasTipoFormaPago.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasTipoFormaPago.getComponent(index);

			this.tipoformapagoConstantesFunciones.setResaltarFK_IdTransaccionTipoFormaPago(resaltar);

			jPanel.setBorder(this.tipoformapagoConstantesFunciones.resaltarFK_IdTransaccionTipoFormaPago);
			existe=true;
		}
		

		if(existe) {
			
			this.jTtoolBarTipoFormaPago.setBorder(resaltar);
			
		}
	}	
	
	//NO FUNCIONA
	public void windowClosed(WindowEvent e) {	
	}
		
	public void windowClosing(WindowEvent e) {	    	    
	}

	public void windowOpened(WindowEvent e) {	    
	}

	public void windowIconified(WindowEvent e) {	    
	}

	public void windowDeiconified(WindowEvent e) {	    
	}

	public void windowActivated(WindowEvent e) {	    
	}

	public void windowDeactivated(WindowEvent e) {	    
	}

	public void windowGainedFocus(WindowEvent e) {	    
	}

	public void windowLostFocus(WindowEvent e) {	    
	}
	
	public void updateControlesFormularioTipoFormaPago() throws Exception {

		if(this.jInternalFrameDetalleFormTipoFormaPago==null) { //if(!this.conCargarFormDetalle) {			
			this.inicializarFormDetalle();
		}
		
		this.updateBorderResaltarControlesFormularioTipoFormaPago();
		this.updateVisibilidadResaltarControlesFormularioTipoFormaPago();
		this.updateHabilitarResaltarControlesFormularioTipoFormaPago();
		
	}
	
	public void updateBorderResaltarControlesFormularioTipoFormaPago() throws Exception {
		if(this.jInternalFrameDetalleFormTipoFormaPago==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
	
		if(this.tipoformapagoConstantesFunciones.resaltaridTipoFormaPago!=null && this.jInternalFrameDetalleFormTipoFormaPago!=null) {this.jInternalFrameDetalleFormTipoFormaPago.jLabelidTipoFormaPago.setBorder(this.tipoformapagoConstantesFunciones.resaltaridTipoFormaPago);}
		if(this.tipoformapagoConstantesFunciones.resaltarid_empresaTipoFormaPago!=null && this.jInternalFrameDetalleFormTipoFormaPago!=null) {this.jInternalFrameDetalleFormTipoFormaPago.jComboBoxid_empresaTipoFormaPago.setBorder(this.tipoformapagoConstantesFunciones.resaltarid_empresaTipoFormaPago);}
		if(this.tipoformapagoConstantesFunciones.resaltarid_sucursalTipoFormaPago!=null && this.jInternalFrameDetalleFormTipoFormaPago!=null) {this.jInternalFrameDetalleFormTipoFormaPago.jComboBoxid_sucursalTipoFormaPago.setBorder(this.tipoformapagoConstantesFunciones.resaltarid_sucursalTipoFormaPago);}
		if(this.tipoformapagoConstantesFunciones.resaltarid_moduloTipoFormaPago!=null && this.jInternalFrameDetalleFormTipoFormaPago!=null) {this.jInternalFrameDetalleFormTipoFormaPago.jComboBoxid_moduloTipoFormaPago.setBorder(this.tipoformapagoConstantesFunciones.resaltarid_moduloTipoFormaPago);}
		if(this.tipoformapagoConstantesFunciones.resaltarid_tipo_grupo_forma_pagoTipoFormaPago!=null && this.jInternalFrameDetalleFormTipoFormaPago!=null) {this.jInternalFrameDetalleFormTipoFormaPago.jComboBoxid_tipo_grupo_forma_pagoTipoFormaPago.setBorder(this.tipoformapagoConstantesFunciones.resaltarid_tipo_grupo_forma_pagoTipoFormaPago);}
		if(this.tipoformapagoConstantesFunciones.resaltarnombreTipoFormaPago!=null && this.jInternalFrameDetalleFormTipoFormaPago!=null) {this.jInternalFrameDetalleFormTipoFormaPago.jTextAreanombreTipoFormaPago.setBorder(this.tipoformapagoConstantesFunciones.resaltarnombreTipoFormaPago);}
		if(this.tipoformapagoConstantesFunciones.resaltarsiglasTipoFormaPago!=null && this.jInternalFrameDetalleFormTipoFormaPago!=null) {this.jInternalFrameDetalleFormTipoFormaPago.jTextFieldsiglasTipoFormaPago.setBorder(this.tipoformapagoConstantesFunciones.resaltarsiglasTipoFormaPago);}
		if(this.tipoformapagoConstantesFunciones.resaltarcon_detalleTipoFormaPago!=null && this.jInternalFrameDetalleFormTipoFormaPago!=null) {this.jInternalFrameDetalleFormTipoFormaPago.jCheckBoxcon_detalleTipoFormaPago.setBorderPainted(true);this.jInternalFrameDetalleFormTipoFormaPago.jCheckBoxcon_detalleTipoFormaPago.setBorder(this.tipoformapagoConstantesFunciones.resaltarcon_detalleTipoFormaPago);}
		if(this.tipoformapagoConstantesFunciones.resaltarcon_cuotasTipoFormaPago!=null && this.jInternalFrameDetalleFormTipoFormaPago!=null) {this.jInternalFrameDetalleFormTipoFormaPago.jCheckBoxcon_cuotasTipoFormaPago.setBorderPainted(true);this.jInternalFrameDetalleFormTipoFormaPago.jCheckBoxcon_cuotasTipoFormaPago.setBorder(this.tipoformapagoConstantesFunciones.resaltarcon_cuotasTipoFormaPago);}
		if(this.tipoformapagoConstantesFunciones.resaltarid_tipo_transaccion_moduloTipoFormaPago!=null && this.jInternalFrameDetalleFormTipoFormaPago!=null) {this.jInternalFrameDetalleFormTipoFormaPago.jComboBoxid_tipo_transaccion_moduloTipoFormaPago.setBorder(this.tipoformapagoConstantesFunciones.resaltarid_tipo_transaccion_moduloTipoFormaPago);}
		if(this.tipoformapagoConstantesFunciones.resaltarid_transaccionTipoFormaPago!=null && this.jInternalFrameDetalleFormTipoFormaPago!=null) {this.jInternalFrameDetalleFormTipoFormaPago.jComboBoxid_transaccionTipoFormaPago.setBorder(this.tipoformapagoConstantesFunciones.resaltarid_transaccionTipoFormaPago);}
		if(this.tipoformapagoConstantesFunciones.resaltarid_cuenta_contableTipoFormaPago!=null && this.jInternalFrameDetalleFormTipoFormaPago!=null) {this.jInternalFrameDetalleFormTipoFormaPago.jComboBoxid_cuenta_contableTipoFormaPago.setBorder(this.tipoformapagoConstantesFunciones.resaltarid_cuenta_contableTipoFormaPago);}
		if(this.tipoformapagoConstantesFunciones.resaltardescripcionTipoFormaPago!=null && this.jInternalFrameDetalleFormTipoFormaPago!=null) {this.jInternalFrameDetalleFormTipoFormaPago.jTextAreadescripcionTipoFormaPago.setBorder(this.tipoformapagoConstantesFunciones.resaltardescripcionTipoFormaPago);}
	}
	
	public void updateVisibilidadResaltarControlesFormularioTipoFormaPago() throws Exception {		
		if(this.jInternalFrameDetalleFormTipoFormaPago==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
		if(this.jInternalFrameDetalleFormTipoFormaPago!=null) {
	
		//this.jInternalFrameDetalleFormTipoFormaPago.jLabelidTipoFormaPago.setVisible(this.tipoformapagoConstantesFunciones.mostraridTipoFormaPago);
		this.jInternalFrameDetalleFormTipoFormaPago.jPanelidTipoFormaPago.setVisible(this.tipoformapagoConstantesFunciones.mostraridTipoFormaPago);
		//this.jInternalFrameDetalleFormTipoFormaPago.jComboBoxid_empresaTipoFormaPago.setVisible(this.tipoformapagoConstantesFunciones.mostrarid_empresaTipoFormaPago);
		this.jInternalFrameDetalleFormTipoFormaPago.jPanelid_empresaTipoFormaPago.setVisible(this.tipoformapagoConstantesFunciones.mostrarid_empresaTipoFormaPago);
		//this.jInternalFrameDetalleFormTipoFormaPago.jComboBoxid_sucursalTipoFormaPago.setVisible(this.tipoformapagoConstantesFunciones.mostrarid_sucursalTipoFormaPago);
		this.jInternalFrameDetalleFormTipoFormaPago.jPanelid_sucursalTipoFormaPago.setVisible(this.tipoformapagoConstantesFunciones.mostrarid_sucursalTipoFormaPago);
		//this.jInternalFrameDetalleFormTipoFormaPago.jComboBoxid_moduloTipoFormaPago.setVisible(this.tipoformapagoConstantesFunciones.mostrarid_moduloTipoFormaPago);
		this.jInternalFrameDetalleFormTipoFormaPago.jPanelid_moduloTipoFormaPago.setVisible(this.tipoformapagoConstantesFunciones.mostrarid_moduloTipoFormaPago);
		//this.jInternalFrameDetalleFormTipoFormaPago.jComboBoxid_tipo_grupo_forma_pagoTipoFormaPago.setVisible(this.tipoformapagoConstantesFunciones.mostrarid_tipo_grupo_forma_pagoTipoFormaPago);
		this.jInternalFrameDetalleFormTipoFormaPago.jPanelid_tipo_grupo_forma_pagoTipoFormaPago.setVisible(this.tipoformapagoConstantesFunciones.mostrarid_tipo_grupo_forma_pagoTipoFormaPago);
		//this.jInternalFrameDetalleFormTipoFormaPago.jTextAreanombreTipoFormaPago.setVisible(this.tipoformapagoConstantesFunciones.mostrarnombreTipoFormaPago);
		this.jInternalFrameDetalleFormTipoFormaPago.jPanelnombreTipoFormaPago.setVisible(this.tipoformapagoConstantesFunciones.mostrarnombreTipoFormaPago);
		//this.jInternalFrameDetalleFormTipoFormaPago.jTextFieldsiglasTipoFormaPago.setVisible(this.tipoformapagoConstantesFunciones.mostrarsiglasTipoFormaPago);
		this.jInternalFrameDetalleFormTipoFormaPago.jPanelsiglasTipoFormaPago.setVisible(this.tipoformapagoConstantesFunciones.mostrarsiglasTipoFormaPago);
		//this.jInternalFrameDetalleFormTipoFormaPago.jCheckBoxcon_detalleTipoFormaPago.setVisible(this.tipoformapagoConstantesFunciones.mostrarcon_detalleTipoFormaPago);
		this.jInternalFrameDetalleFormTipoFormaPago.jPanelcon_detalleTipoFormaPago.setVisible(this.tipoformapagoConstantesFunciones.mostrarcon_detalleTipoFormaPago);
		//this.jInternalFrameDetalleFormTipoFormaPago.jCheckBoxcon_cuotasTipoFormaPago.setVisible(this.tipoformapagoConstantesFunciones.mostrarcon_cuotasTipoFormaPago);
		this.jInternalFrameDetalleFormTipoFormaPago.jPanelcon_cuotasTipoFormaPago.setVisible(this.tipoformapagoConstantesFunciones.mostrarcon_cuotasTipoFormaPago);
		//this.jInternalFrameDetalleFormTipoFormaPago.jComboBoxid_tipo_transaccion_moduloTipoFormaPago.setVisible(this.tipoformapagoConstantesFunciones.mostrarid_tipo_transaccion_moduloTipoFormaPago);
		this.jInternalFrameDetalleFormTipoFormaPago.jPanelid_tipo_transaccion_moduloTipoFormaPago.setVisible(this.tipoformapagoConstantesFunciones.mostrarid_tipo_transaccion_moduloTipoFormaPago);
		//this.jInternalFrameDetalleFormTipoFormaPago.jComboBoxid_transaccionTipoFormaPago.setVisible(this.tipoformapagoConstantesFunciones.mostrarid_transaccionTipoFormaPago);
		this.jInternalFrameDetalleFormTipoFormaPago.jPanelid_transaccionTipoFormaPago.setVisible(this.tipoformapagoConstantesFunciones.mostrarid_transaccionTipoFormaPago);
		//this.jInternalFrameDetalleFormTipoFormaPago.jComboBoxid_cuenta_contableTipoFormaPago.setVisible(this.tipoformapagoConstantesFunciones.mostrarid_cuenta_contableTipoFormaPago);
		this.jInternalFrameDetalleFormTipoFormaPago.jPanelid_cuenta_contableTipoFormaPago.setVisible(this.tipoformapagoConstantesFunciones.mostrarid_cuenta_contableTipoFormaPago);
			this.jInternalFrameDetalleFormTipoFormaPago.jButtonid_cuenta_contableTipoFormaPago.setVisible(this.tipoformapagoConstantesFunciones.mostrarid_cuenta_contableTipoFormaPago);
		//this.jInternalFrameDetalleFormTipoFormaPago.jTextAreadescripcionTipoFormaPago.setVisible(this.tipoformapagoConstantesFunciones.mostrardescripcionTipoFormaPago);
		this.jInternalFrameDetalleFormTipoFormaPago.jPaneldescripcionTipoFormaPago.setVisible(this.tipoformapagoConstantesFunciones.mostrardescripcionTipoFormaPago);
		}
	}
	
	public void updateHabilitarResaltarControlesFormularioTipoFormaPago() throws Exception {
		if(this.jInternalFrameDetalleFormTipoFormaPago==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
		if(this.jInternalFrameDetalleFormTipoFormaPago!=null) {
	
		this.jInternalFrameDetalleFormTipoFormaPago.jLabelidTipoFormaPago.setEnabled(this.tipoformapagoConstantesFunciones.activaridTipoFormaPago);
		this.jInternalFrameDetalleFormTipoFormaPago.jComboBoxid_empresaTipoFormaPago.setEnabled(this.tipoformapagoConstantesFunciones.activarid_empresaTipoFormaPago);
		this.jInternalFrameDetalleFormTipoFormaPago.jComboBoxid_sucursalTipoFormaPago.setEnabled(this.tipoformapagoConstantesFunciones.activarid_sucursalTipoFormaPago);
		this.jInternalFrameDetalleFormTipoFormaPago.jComboBoxid_moduloTipoFormaPago.setEnabled(this.tipoformapagoConstantesFunciones.activarid_moduloTipoFormaPago);
		this.jInternalFrameDetalleFormTipoFormaPago.jComboBoxid_tipo_grupo_forma_pagoTipoFormaPago.setEnabled(this.tipoformapagoConstantesFunciones.activarid_tipo_grupo_forma_pagoTipoFormaPago);
		this.jInternalFrameDetalleFormTipoFormaPago.jTextAreanombreTipoFormaPago.setEnabled(this.tipoformapagoConstantesFunciones.activarnombreTipoFormaPago);
		this.jInternalFrameDetalleFormTipoFormaPago.jTextFieldsiglasTipoFormaPago.setEnabled(this.tipoformapagoConstantesFunciones.activarsiglasTipoFormaPago);
		this.jInternalFrameDetalleFormTipoFormaPago.jCheckBoxcon_detalleTipoFormaPago.setEnabled(this.tipoformapagoConstantesFunciones.activarcon_detalleTipoFormaPago);
		this.jInternalFrameDetalleFormTipoFormaPago.jCheckBoxcon_cuotasTipoFormaPago.setEnabled(this.tipoformapagoConstantesFunciones.activarcon_cuotasTipoFormaPago);
		this.jInternalFrameDetalleFormTipoFormaPago.jComboBoxid_tipo_transaccion_moduloTipoFormaPago.setEnabled(this.tipoformapagoConstantesFunciones.activarid_tipo_transaccion_moduloTipoFormaPago);
		this.jInternalFrameDetalleFormTipoFormaPago.jComboBoxid_transaccionTipoFormaPago.setEnabled(this.tipoformapagoConstantesFunciones.activarid_transaccionTipoFormaPago);
		this.jInternalFrameDetalleFormTipoFormaPago.jComboBoxid_cuenta_contableTipoFormaPago.setEnabled(this.tipoformapagoConstantesFunciones.activarid_cuenta_contableTipoFormaPago);
			this.jInternalFrameDetalleFormTipoFormaPago.jButtonid_cuenta_contableTipoFormaPago.setEnabled(this.tipoformapagoConstantesFunciones.activarid_cuenta_contableTipoFormaPago);
		this.jInternalFrameDetalleFormTipoFormaPago.jTextAreadescripcionTipoFormaPago.setEnabled(this.tipoformapagoConstantesFunciones.activardescripcionTipoFormaPago);
		}
	}
	
		
}