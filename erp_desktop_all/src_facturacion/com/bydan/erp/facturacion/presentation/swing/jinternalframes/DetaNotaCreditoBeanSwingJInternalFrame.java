/*
*AVISO LEGAL
Â© Copyright
*Este programa esta protegido por la ley de derechos de autor.
*La reproduccion o distribucion ilicita de este programa o de cualquiera de
*sus partes esta penado por la ley con severas sanciones civiles y penales,
*y seran objeto de todas las sanciones legales que correspondan.

*Su contenido no puede copiarse para fines comerciales o de otras,
*ni puede mostrarse, incluso en una version modificada, en otros sitios Web.
Solo esta permitido colocar hipervinculos al sitio web.
*/
package com.bydan.erp.facturacion.presentation.swing.jinternalframes;




import com.bydan.erp.seguridad.business.entity.Usuario;
import com.bydan.erp.seguridad.business.entity.ResumenUsuario;
import com.bydan.erp.seguridad.business.entity.Opcion;
import com.bydan.erp.seguridad.business.entity.PerfilOpcion;
import com.bydan.erp.seguridad.business.entity.PerfilCampo;
import com.bydan.erp.seguridad.business.entity.PerfilAccion;
import com.bydan.erp.seguridad.business.entity.ParametroGeneralSg;
import com.bydan.erp.seguridad.business.entity.ParametroGeneralUsuario;
import com.bydan.erp.seguridad.business.entity.Modulo;
import com.bydan.erp.seguridad.business.entity.Accion;

import com.bydan.erp.seguridad.util.SistemaParameterReturnGeneralAdditional;
import com.bydan.erp.seguridad.util.SistemaParameterReturnGeneral;


//import com.bydan.erp.seguridad.business.entity.PerfilAccion;


import com.bydan.erp.seguridad.util.SistemaConstantesFunciones;
import com.bydan.erp.seguridad.util.SistemaConstantesFuncionesAdditional;
import com.bydan.erp.seguridad.business.logic.SistemaLogicAdditional;

import com.bydan.erp.facturacion.util.DetaNotaCreditoConstantesFunciones;
import com.bydan.erp.facturacion.util.DetaNotaCreditoParameterReturnGeneral;
//import com.bydan.erp.facturacion.util.DetaNotaCreditoParameterGeneral;
//import com.bydan.erp.facturacion.presentation.report.source.DetaNotaCreditoBean;
import com.bydan.framework.erp.business.dataaccess.ConstantesSql;
import com.bydan.framework.erp.business.entity.Classe;
import com.bydan.framework.erp.business.entity.DatoGeneral;
import com.bydan.framework.erp.business.entity.GeneralEntityParameterGeneral;
import com.bydan.framework.erp.business.entity.OrderBy;
import com.bydan.framework.erp.business.entity.DatoGeneralMinimo;
import com.bydan.framework.erp.business.entity.GeneralEntity;
import com.bydan.framework.erp.business.entity.Mensajes;
import com.bydan.framework.erp.business.entity.GeneralEntityParameterReturnGeneral;
//import com.bydan.framework.erp.business.entity.MaintenanceType;
import com.bydan.framework.erp.util.MaintenanceType;
import com.bydan.framework.erp.util.FuncionesReporte;
import com.bydan.framework.erp.business.logic.DatosCliente;
import com.bydan.framework.erp.business.logic.Pagination;

import com.bydan.erp.facturacion.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.framework.erp.presentation.desktop.swing.TablaGeneralTotalModel;
import com.bydan.framework.erp.presentation.desktop.swing.TablaGeneralOrderByModel;
import com.bydan.framework.erp.presentation.desktop.swing.DateConverter;
import com.bydan.framework.erp.presentation.desktop.swing.DateConverterFromDate;
import com.bydan.framework.erp.presentation.desktop.swing.DateRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.DateEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.BooleanRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.BooleanEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.TextFieldRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.RunnableProceso;
import com.bydan.framework.erp.presentation.desktop.swing.*;
//import com.bydan.framework.erp.presentation.desktop.swing.TextFieldEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.HeaderRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.JInternalFrameBase;
import com.bydan.framework.erp.presentation.desktop.swing.FuncionesSwing;
import com.bydan.framework.erp.presentation.desktop.swing.MainJFrame;
import com.bydan.framework.erp.resources.imagenes.AuxiliarImagenes;
import com.bydan.erp.facturacion.resources.reportes.AuxiliarReportes;


import com.bydan.erp.facturacion.util.*;
import com.bydan.erp.facturacion.business.logic.*;

import com.bydan.erp.seguridad.business.logic.*;
import com.bydan.erp.contabilidad.business.logic.*;
import com.bydan.erp.inventario.business.logic.*;

//EJB

//PARAMETROS


//EJB PARAMETROS

import com.bydan.framework.erp.business.logic.*;
import com.bydan.framework.erp.util.*;

import com.bydan.erp.facturacion.business.entity.*;
//import com.bydan.framework.erp.business.entity.ConexionBeanFace;
//import com.bydan.framework.erp.business.entity.Mensajes;


import com.bydan.erp.seguridad.presentation.swing.jinternalframes.*;
import com.bydan.erp.contabilidad.presentation.swing.jinternalframes.*;
import com.bydan.erp.inventario.presentation.swing.jinternalframes.*;

import com.bydan.erp.seguridad.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.contabilidad.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.inventario.presentation.swing.jinternalframes.auxiliar.*;






import javax.imageio.ImageIO;
import java.net.NetworkInterface;
import java.net.InterfaceAddress;
import java.net.InetAddress;
import javax.naming.InitialContext;
import java.lang.Long;
import java.util.Date;
import java.util.Enumeration;
import java.util.Iterator;
import java.util.Set;
import java.util.HashSet;
import java.util.List;
import java.util.ArrayList;
import java.io.Serializable;
import java.util.Hashtable;
import java.util.Collections;
import java.io.File;
import java.io.FileInputStream;
import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.io.BufferedReader;
import java.io.FileReader;
import java.util.HashMap;
import java.util.Map;
import java.io.PrintWriter;
import java.sql.SQLException;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.transform.stream.StreamSource;

import org.xml.sax.EntityResolver;
import org.xml.sax.InputSource;
import org.xml.sax.SAXException;

import org.w3c.dom.Document;
import org.w3c.dom.Document;
import org.w3c.dom.NodeList;
import org.w3c.dom.Node;
import org.w3c.dom.Element;

import org.apache.poi.hssf.usermodel.HSSFCell;
import org.apache.poi.hssf.usermodel.HSSFRow;
import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellStyle;
import org.apache.poi.ss.usermodel.IndexedColors;
import org.apache.poi.ss.util.CellRangeAddress;

import javax.xml.transform.Transformer;
import javax.xml.transform.TransformerFactory;
import javax.xml.transform.dom.DOMSource;
import javax.xml.transform.stream.StreamResult;


import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JRRuntimeException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.engine.export.JRHtmlExporter;
import net.sf.jasperreports.j2ee.servlets.BaseHttpServlet;
import net.sf.jasperreports.engine.JRExporterParameter;
import net.sf.jasperreports.engine.data.JRBeanArrayDataSource;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import net.sf.jasperreports.view.JasperViewer;

import org.apache.log4j.Logger;

import com.bydan.framework.erp.business.entity.Reporte;


//VALIDACION
import org.hibernate.validator.ClassValidator;
import org.hibernate.validator.InvalidValue;

import net.sf.jasperreports.engine.JREmptyDataSource;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperExportManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperPrintManager;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.JasperRunManager;
import net.sf.jasperreports.engine.export.JExcelApiExporter;
import net.sf.jasperreports.engine.export.JRCsvExporter;
import net.sf.jasperreports.engine.export.JRRtfExporter;
import net.sf.jasperreports.engine.export.JRXlsExporter;
import net.sf.jasperreports.engine.export.JRXlsExporterParameter;
import net.sf.jasperreports.engine.util.JRSaver;
import net.sf.jasperreports.engine.xml.JRXmlWriter;


import com.bydan.erp.facturacion.presentation.web.jsf.sessionbean.*;

import java.util.EventObject;
import javax.swing.*;
import javax.swing.border.Border;
import javax.swing.border.TitledBorder;
import javax.swing.border.EmptyBorder;
import javax.swing.event.*;
import javax.swing.table.AbstractTableModel;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.TableColumn;
import javax.swing.table.TableCellEditor;
import javax.swing.table.TableCellRenderer;
import java.awt.*;
import java.awt.event.*;

import org.jdesktop.beansbinding.Binding.SyncFailure;
import org.jdesktop.beansbinding.BindingListener;
import org.jdesktop.beansbinding.Bindings;
import org.jdesktop.beansbinding.BeanProperty;
import org.jdesktop.beansbinding.ELProperty;
import org.jdesktop.beansbinding.AutoBinding.UpdateStrategy;
import org.jdesktop.beansbinding.PropertyStateEvent;
import org.jdesktop.swingbinding.JComboBoxBinding;
import org.jdesktop.swingbinding.SwingBindings;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeEvent;

import com.toedter.calendar.JDateChooser;


import com.bydan.erp.seguridad.business.entity.*;
import com.bydan.erp.contabilidad.business.entity.*;
import com.bydan.erp.inventario.business.entity.*;
import com.bydan.erp.seguridad.util.*;
import com.bydan.erp.contabilidad.util.*;
import com.bydan.erp.inventario.util.*;
import com.bydan.erp.seguridad.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.contabilidad.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.inventario.presentation.web.jsf.sessionbean.*;


@SuppressWarnings("unused")
public class DetaNotaCreditoBeanSwingJInternalFrame extends DetaNotaCreditoJInternalFrame implements WindowListener,WindowFocusListener
{				
	
	public static final long serialVersionUID = 1L;
	
	public static Logger logger = Logger.getLogger(DetaNotaCreditoBeanSwingJInternalFrame.class);  
	
	public static ClassValidator<DetaNotaCredito> detanotacreditoValidator = new ClassValidator<DetaNotaCredito>(DetaNotaCredito.class);
	
	public InvalidValue[] invalidValues=null;
		

	//Ejb Foreign Keys
	
	public DetaNotaCredito detanotacredito;	
	public DetaNotaCredito detanotacreditoAux;
	public DetaNotaCredito detanotacreditoAnterior;//USADO PARA MANEJAR FOCUS GAINED,LOST
	public DetaNotaCredito detanotacreditoTotales;
	public Long idDetaNotaCreditoActual;
	public Long iIdNuevoDetaNotaCredito=0L;
	public int rowIndexActual=0;
	
	
	
	
	public String sFinalQueryComboEmpresa="";

	public List<Empresa> empresasForeignKey;

	public List<Empresa> getempresasForeignKey() {
		return empresasForeignKey;
	}

	public void setempresasForeignKey(List<Empresa> empresasForeignKey) {
		this.empresasForeignKey = empresasForeignKey;
	}

	//OBJETO FK ACTUAL
	public Empresa empresaForeignKey;

	public Empresa getempresaForeignKey() {
		return empresaForeignKey;
	}

	public void setempresaForeignKey(Empresa empresaForeignKey) {
		this.empresaForeignKey = empresaForeignKey;
	}

	public String sFinalQueryComboSucursal="";

	public List<Sucursal> sucursalsForeignKey;

	public List<Sucursal> getsucursalsForeignKey() {
		return sucursalsForeignKey;
	}

	public void setsucursalsForeignKey(List<Sucursal> sucursalsForeignKey) {
		this.sucursalsForeignKey = sucursalsForeignKey;
	}

	//OBJETO FK ACTUAL
	public Sucursal sucursalForeignKey;

	public Sucursal getsucursalForeignKey() {
		return sucursalForeignKey;
	}

	public void setsucursalForeignKey(Sucursal sucursalForeignKey) {
		this.sucursalForeignKey = sucursalForeignKey;
	}

	public String sFinalQueryComboEjercicio="";

	public List<Ejercicio> ejerciciosForeignKey;

	public List<Ejercicio> getejerciciosForeignKey() {
		return ejerciciosForeignKey;
	}

	public void setejerciciosForeignKey(List<Ejercicio> ejerciciosForeignKey) {
		this.ejerciciosForeignKey = ejerciciosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Ejercicio ejercicioForeignKey;

	public Ejercicio getejercicioForeignKey() {
		return ejercicioForeignKey;
	}

	public void setejercicioForeignKey(Ejercicio ejercicioForeignKey) {
		this.ejercicioForeignKey = ejercicioForeignKey;
	}

	public String sFinalQueryComboPeriodo="";

	public List<Periodo> periodosForeignKey;

	public List<Periodo> getperiodosForeignKey() {
		return periodosForeignKey;
	}

	public void setperiodosForeignKey(List<Periodo> periodosForeignKey) {
		this.periodosForeignKey = periodosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Periodo periodoForeignKey;

	public Periodo getperiodoForeignKey() {
		return periodoForeignKey;
	}

	public void setperiodoForeignKey(Periodo periodoForeignKey) {
		this.periodoForeignKey = periodoForeignKey;
	}

	public String sFinalQueryComboAnio="";

	public List<Anio> aniosForeignKey;

	public List<Anio> getaniosForeignKey() {
		return aniosForeignKey;
	}

	public void setaniosForeignKey(List<Anio> aniosForeignKey) {
		this.aniosForeignKey = aniosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Anio anioForeignKey;

	public Anio getanioForeignKey() {
		return anioForeignKey;
	}

	public void setanioForeignKey(Anio anioForeignKey) {
		this.anioForeignKey = anioForeignKey;
	}

	public String sFinalQueryComboMes="";

	public List<Mes> messForeignKey;

	public List<Mes> getmessForeignKey() {
		return messForeignKey;
	}

	public void setmessForeignKey(List<Mes> messForeignKey) {
		this.messForeignKey = messForeignKey;
	}

	//OBJETO FK ACTUAL
	public Mes mesForeignKey;

	public Mes getmesForeignKey() {
		return mesForeignKey;
	}

	public void setmesForeignKey(Mes mesForeignKey) {
		this.mesForeignKey = mesForeignKey;
	}

	public String sFinalQueryComboNotaCredito="";

	public List<NotaCredito> notacreditosForeignKey;

	public List<NotaCredito> getnotacreditosForeignKey() {
		return notacreditosForeignKey;
	}

	public void setnotacreditosForeignKey(List<NotaCredito> notacreditosForeignKey) {
		this.notacreditosForeignKey = notacreditosForeignKey;
	}

	//OBJETO FK ACTUAL
	public NotaCredito notacreditoForeignKey;

	public NotaCredito getnotacreditoForeignKey() {
		return notacreditoForeignKey;
	}

	public void setnotacreditoForeignKey(NotaCredito notacreditoForeignKey) {
		this.notacreditoForeignKey = notacreditoForeignKey;
	}

	public String sFinalQueryComboBodega="";

	public List<Bodega> bodegasForeignKey;

	public List<Bodega> getbodegasForeignKey() {
		return bodegasForeignKey;
	}

	public void setbodegasForeignKey(List<Bodega> bodegasForeignKey) {
		this.bodegasForeignKey = bodegasForeignKey;
	}

	//OBJETO FK ACTUAL
	public Bodega bodegaForeignKey;

	public Bodega getbodegaForeignKey() {
		return bodegaForeignKey;
	}

	public void setbodegaForeignKey(Bodega bodegaForeignKey) {
		this.bodegaForeignKey = bodegaForeignKey;
	}

	public String sFinalQueryComboProducto="";

	public List<Producto> productosForeignKey;

	public List<Producto> getproductosForeignKey() {
		return productosForeignKey;
	}

	public void setproductosForeignKey(List<Producto> productosForeignKey) {
		this.productosForeignKey = productosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Producto productoForeignKey;

	public Producto getproductoForeignKey() {
		return productoForeignKey;
	}

	public void setproductoForeignKey(Producto productoForeignKey) {
		this.productoForeignKey = productoForeignKey;
	}

	public String sFinalQueryComboUnidad="";

	public List<Unidad> unidadsForeignKey;

	public List<Unidad> getunidadsForeignKey() {
		return unidadsForeignKey;
	}

	public void setunidadsForeignKey(List<Unidad> unidadsForeignKey) {
		this.unidadsForeignKey = unidadsForeignKey;
	}

	//OBJETO FK ACTUAL
	public Unidad unidadForeignKey;

	public Unidad getunidadForeignKey() {
		return unidadForeignKey;
	}

	public void setunidadForeignKey(Unidad unidadForeignKey) {
		this.unidadForeignKey = unidadForeignKey;
	}

	public String sFinalQueryComboTipoDetaNotaCredito="";

	public List<TipoDetaNotaCredito> tipodetanotacreditosForeignKey;

	public List<TipoDetaNotaCredito> gettipodetanotacreditosForeignKey() {
		return tipodetanotacreditosForeignKey;
	}

	public void settipodetanotacreditosForeignKey(List<TipoDetaNotaCredito> tipodetanotacreditosForeignKey) {
		this.tipodetanotacreditosForeignKey = tipodetanotacreditosForeignKey;
	}

	//OBJETO FK ACTUAL
	public TipoDetaNotaCredito tipodetanotacreditoForeignKey;

	public TipoDetaNotaCredito gettipodetanotacreditoForeignKey() {
		return tipodetanotacreditoForeignKey;
	}

	public void settipodetanotacreditoForeignKey(TipoDetaNotaCredito tipodetanotacreditoForeignKey) {
		this.tipodetanotacreditoForeignKey = tipodetanotacreditoForeignKey;
	}

	public String sFinalQueryComboTipoDevolucionEmpresa="";

	public List<TipoDevolucionEmpresa> tipodevolucionempresasForeignKey;

	public List<TipoDevolucionEmpresa> gettipodevolucionempresasForeignKey() {
		return tipodevolucionempresasForeignKey;
	}

	public void settipodevolucionempresasForeignKey(List<TipoDevolucionEmpresa> tipodevolucionempresasForeignKey) {
		this.tipodevolucionempresasForeignKey = tipodevolucionempresasForeignKey;
	}

	//OBJETO FK ACTUAL
	public TipoDevolucionEmpresa tipodevolucionempresaForeignKey;

	public TipoDevolucionEmpresa gettipodevolucionempresaForeignKey() {
		return tipodevolucionempresaForeignKey;
	}

	public void settipodevolucionempresaForeignKey(TipoDevolucionEmpresa tipodevolucionempresaForeignKey) {
		this.tipodevolucionempresaForeignKey = tipodevolucionempresaForeignKey;
	}

	public String sFinalQueryComboCentroCosto="";

	public List<CentroCosto> centrocostosForeignKey;

	public List<CentroCosto> getcentrocostosForeignKey() {
		return centrocostosForeignKey;
	}

	public void setcentrocostosForeignKey(List<CentroCosto> centrocostosForeignKey) {
		this.centrocostosForeignKey = centrocostosForeignKey;
	}

	//OBJETO FK ACTUAL
	public CentroCosto centrocostoForeignKey;

	public CentroCosto getcentrocostoForeignKey() {
		return centrocostoForeignKey;
	}

	public void setcentrocostoForeignKey(CentroCosto centrocostoForeignKey) {
		this.centrocostoForeignKey = centrocostoForeignKey;
	}

	public String sFinalQueryComboEmpaque="";

	public List<Empaque> empaquesForeignKey;

	public List<Empaque> getempaquesForeignKey() {
		return empaquesForeignKey;
	}

	public void setempaquesForeignKey(List<Empaque> empaquesForeignKey) {
		this.empaquesForeignKey = empaquesForeignKey;
	}

	//OBJETO FK ACTUAL
	public Empaque empaqueForeignKey;

	public Empaque getempaqueForeignKey() {
		return empaqueForeignKey;
	}

	public void setempaqueForeignKey(Empaque empaqueForeignKey) {
		this.empaqueForeignKey = empaqueForeignKey;
	}

		
	
	
	
	//BUSQUEDA INTERNA FK
	public Long idProductoActual=0L;

	public Long getidProductoActual() {
		return idProductoActual;
	}

	public void setidProductoActual(Long idProductoActual) {
		this.idProductoActual= idProductoActual;
	}
	public Long idCentroCostoActual=0L;

	public Long getidCentroCostoActual() {
		return idCentroCostoActual;
	}

	public void setidCentroCostoActual(Long idCentroCostoActual) {
		this.idCentroCostoActual= idCentroCostoActual;
	}
	
	
	
	
	//FALTA:PARA BUSQUEDAS POR CAMPO EN FORMULARIO
	public String sFinalQueryGeneral="";
	public Boolean isEntroOnLoad=false;
	public Boolean isErrorGuardar=false;
	
	public Boolean isGuardarCambiosEnLote=false;
	public Boolean isCargarCombosDependencia=false;
	public Boolean isSeleccionarTodos=false;
	public Boolean isSeleccionados=false;
	public Boolean conGraficoReporte=false;
	
	public Boolean isPostAccionNuevo=false;
	public Boolean isPostAccionSinCerrar=false;
	public Boolean isPostAccionSinMensaje=false;
	
	
	public Boolean esControlTabla=false;
	
	public Boolean isPermisoTodoDetaNotaCredito;
	public Boolean isPermisoNuevoDetaNotaCredito;
	public Boolean isPermisoActualizarDetaNotaCredito;
	public Boolean isPermisoActualizarOriginalDetaNotaCredito;
	public Boolean isPermisoEliminarDetaNotaCredito;
	public Boolean isPermisoGuardarCambiosDetaNotaCredito;
	public Boolean isPermisoConsultaDetaNotaCredito;
	public Boolean isPermisoBusquedaDetaNotaCredito;
	public Boolean isPermisoReporteDetaNotaCredito;
	public Boolean isPermisoPaginacionMedioDetaNotaCredito;
	public Boolean isPermisoPaginacionAltoDetaNotaCredito;
	public Boolean isPermisoPaginacionTodoDetaNotaCredito;
	public Boolean isPermisoCopiarDetaNotaCredito;
	public Boolean isPermisoVerFormDetaNotaCredito;
	public Boolean isPermisoDuplicarDetaNotaCredito;
	public Boolean isPermisoOrdenDetaNotaCredito;
	
	
	public ArrayList<DatoGeneral> arrDatoGeneral;
	public ArrayList<String> arrDatoGeneralNo;
	ArrayList<Classe> classesActual=new ArrayList<Classe>();
	
	public List<Accion> accions;	
	public List<Accion> accionsFormulario;
	
	
	public ArrayList<DatoGeneralMinimo> arrDatoGeneralMinimos;
	
	public ArrayList<Reporte> tiposArchivosReportes;
	public ArrayList<Reporte> tiposArchivosReportesDinamico;
	public ArrayList<Reporte> tiposReportes;
	public ArrayList<Reporte> tiposReportesDinamico;
	public ArrayList<Reporte> tiposGraficosReportes;
	public ArrayList<Reporte> tiposPaginacion;
	public ArrayList<Reporte> tiposRelaciones;
	public ArrayList<Reporte> tiposAcciones;
	public ArrayList<Reporte> tiposAccionesFormulario;
	public ArrayList<Reporte> tiposSeleccionar;
	
	public ArrayList<Reporte> tiposColumnasSelect;
	public ArrayList<Reporte> tiposRelacionesSelect;
	
	
	public Integer iNumeroPaginacion;
	public Integer iNumeroPaginacionPagina;
	public Pagination pagination;
	public DatosCliente datosCliente;
	public DatosDeep datosDeep;
	public String sTipoArchivoReporte="";
	public String sTipoArchivoReporteDinamico="";
	public String sTipoReporte="";
	public String sTipoReporteDinamico="";
	public String sTipoGraficoReporte="";
	public String sTipoPaginacion="";
	public String sTipoRelacion="";
	public String sTipoAccion="";
	public String sTipoAccionFormulario="";
	public String sTipoSeleccionar="";	
	public String sDetalleReporte="";
	public Boolean isMostrarNumeroPaginacion;
	public String sTipoReporteExtra="";
	public String sValorCampoGeneral="";
	public Boolean esReporteDinamico=false;
	public Boolean esReporteAccionProceso=false;
	public Boolean esRecargarFks=false;
	public String sPathReporteDinamico="";
	
	public DetaNotaCreditoParameterReturnGeneral detanotacreditoReturnGeneral;
	public DetaNotaCreditoParameterReturnGeneral detanotacreditoParameterGeneral;
	
	 	
	public JasperPrint jasperPrint = null;
	
	public Long lIdUsuarioSesion=0L;				
	
	public Boolean isEsNuevoDetaNotaCredito=false;
	public Boolean esParaAccionDesdeFormularioDetaNotaCredito=false;
	public Boolean isEsMantenimientoRelacionesRelacionadoUnico=false;
	public Boolean isEsMantenimientoRelaciones=false;
	public Boolean isEsMantenimientoRelacionado=false;	
	public Boolean isContieneImagenes=false;
		
	//public Boolean conTotales=false; //Viene heredado de JInternalFrameBase
	//public Boolean esParaBusquedaForeignKey=false;
	
	
	protected DetaNotaCreditoSessionBeanAdditional detanotacreditoSessionBeanAdditional=null;
	
	public DetaNotaCreditoSessionBeanAdditional getDetaNotaCreditoSessionBeanAdditional() {
		return this.detanotacreditoSessionBeanAdditional;
	}
	
	public void setDetaNotaCreditoSessionBeanAdditional(DetaNotaCreditoSessionBeanAdditional detanotacreditoSessionBeanAdditional) {
		try {
			this.detanotacreditoSessionBeanAdditional=detanotacreditoSessionBeanAdditional;
		} catch(Exception e) {
			;
		}
	}
	
	
	
	
	protected DetaNotaCreditoBeanSwingJInternalFrameAdditional detanotacreditoBeanSwingJInternalFrameAdditional=null;
	//public class DetaNotaCreditoBeanSwingJInternalFrame
	
	public DetaNotaCreditoBeanSwingJInternalFrameAdditional getDetaNotaCreditoBeanSwingJInternalFrameAdditional() {
		return this.detanotacreditoBeanSwingJInternalFrameAdditional;
	}
	
	public void setDetaNotaCreditoBeanSwingJInternalFrameAdditional(DetaNotaCreditoBeanSwingJInternalFrameAdditional detanotacreditoBeanSwingJInternalFrameAdditional) {
		try {
			this.detanotacreditoBeanSwingJInternalFrameAdditional=detanotacreditoBeanSwingJInternalFrameAdditional;
		} catch(Exception e) {
			;
		}
	}
	
	
	
	
	//ESTA EN PADRE
	
	//public DetaNotaCreditoLogic detanotacreditoLogic;
	public SistemaLogicAdditional sistemaLogicAdditional;
	
	
	public DetaNotaCredito detanotacreditoBean;
	public DetaNotaCreditoConstantesFunciones detanotacreditoConstantesFunciones;
	//public DetaNotaCreditoParameterReturnGeneral detanotacreditoReturnGeneral;
	
	//FK
	
	public EmpresaLogic empresaLogic;
	public SucursalLogic sucursalLogic;
	public EjercicioLogic ejercicioLogic;
	public PeriodoLogic periodoLogic;
	public AnioLogic anioLogic;
	public MesLogic mesLogic;
	public NotaCreditoLogic notacreditoLogic;
	public BodegaLogic bodegaLogic;
	public ProductoLogic productoLogic;
	public UnidadLogic unidadLogic;
	public TipoDetaNotaCreditoLogic tipodetanotacreditoLogic;
	public TipoDevolucionEmpresaLogic tipodevolucionempresaLogic;
	public CentroCostoLogic centrocostoLogic;
	public EmpaqueLogic empaqueLogic;
	
	//PARAMETROS
	
	
	//public List<DetaNotaCredito> detanotacreditos;	
	//public List<DetaNotaCredito> detanotacreditosEliminados;
	//public List<DetaNotaCredito> detanotacreditosAux;
	
	public String sAccionMantenimiento="";
	public String sAccionBusqueda="";
	public String sAccionAdicional="";
	public String sUltimaBusqueda="";
	
	public Mensaje mensaje;
	
	
	public String sVisibilidadTablaBusquedas="";					
	public String sVisibilidadTablaElementos="";	
	public String sVisibilidadTablaAcciones="";			
	
	public Boolean isVisibilidadCeldaNuevoDetaNotaCredito=false;
	public Boolean isVisibilidadCeldaDuplicarDetaNotaCredito=true;
	public Boolean isVisibilidadCeldaCopiarDetaNotaCredito=true;
	public Boolean isVisibilidadCeldaVerFormDetaNotaCredito=true;
	public Boolean isVisibilidadCeldaOrdenDetaNotaCredito=true;
	public Boolean isVisibilidadCeldaNuevoRelacionesDetaNotaCredito=false;
	public Boolean isVisibilidadCeldaModificarDetaNotaCredito=false;
	public Boolean isVisibilidadCeldaActualizarDetaNotaCredito=false;
	public Boolean isVisibilidadCeldaEliminarDetaNotaCredito=false;
	public Boolean isVisibilidadCeldaCancelarDetaNotaCredito=false;
	public Boolean isVisibilidadCeldaGuardarDetaNotaCredito=false;	
	public Boolean isVisibilidadCeldaGuardarCambiosDetaNotaCredito=false;	
	
	
	public Boolean isVisibilidadFK_IdAnio=false;
	public Boolean isVisibilidadFK_IdBodega=false;
	public Boolean isVisibilidadFK_IdCentroCosto=false;
	public Boolean isVisibilidadFK_IdEjercicio=false;
	public Boolean isVisibilidadFK_IdEmpaque=false;
	public Boolean isVisibilidadFK_IdEmpresa=false;
	public Boolean isVisibilidadFK_IdMes=false;
	public Boolean isVisibilidadFK_IdNotaCredito=false;
	public Boolean isVisibilidadFK_IdPeriodo=false;
	public Boolean isVisibilidadFK_IdProducto=false;
	public Boolean isVisibilidadFK_IdSucursal=false;
	public Boolean isVisibilidadFK_IdTipoDetaNotaCredito=false;
	public Boolean isVisibilidadFK_IdTipoDevolucionEmpresa=false;
	public Boolean isVisibilidadFK_IdUnidad=false;
	
	public Long getiIdNuevoDetaNotaCredito() {
		return this.iIdNuevoDetaNotaCredito;
	}

	public void setiIdNuevoDetaNotaCredito(Long iIdNuevoDetaNotaCredito) {
		this.iIdNuevoDetaNotaCredito = iIdNuevoDetaNotaCredito;
	}
	
	public Long getidDetaNotaCreditoActual() {
		return this.idDetaNotaCreditoActual;
	}

	public void setidDetaNotaCreditoActual(Long idDetaNotaCreditoActual) {
		this.idDetaNotaCreditoActual = idDetaNotaCreditoActual;
	}
	
	public int getrowIndexActual() {
		return this.rowIndexActual;
	}

	public void setrowIndexActual(int rowIndexActual) {
		this.rowIndexActual=rowIndexActual;
	}
	
	
	public DetaNotaCredito getdetanotacredito() {
		return this.detanotacredito;
	}

	public void setdetanotacredito(DetaNotaCredito detanotacredito) {
		this.detanotacredito = detanotacredito;
	}
	
	public DetaNotaCredito getdetanotacreditoAux() {
		return this.detanotacreditoAux;
	}

	public void setdetanotacreditoAux(DetaNotaCredito detanotacreditoAux) {
		this.detanotacreditoAux = detanotacreditoAux;
	}				
	
	public DetaNotaCredito getdetanotacreditoAnterior() {
		return this.detanotacreditoAnterior;
	}

	public void setdetanotacreditoAnterior(DetaNotaCredito detanotacreditoAnterior) {
		this.detanotacreditoAnterior = detanotacreditoAnterior;
	}	
	
	public DetaNotaCredito getdetanotacreditoTotales() {
		return this.detanotacreditoTotales;
	}

	public void setdetanotacreditoTotales(DetaNotaCredito detanotacreditoTotales) {
		this.detanotacreditoTotales = detanotacreditoTotales;
	}	
	
	public DetaNotaCredito getdetanotacreditoBean() {
		return this.detanotacreditoBean;
	}

	public void setdetanotacreditoBean(DetaNotaCredito detanotacreditoBean) {
		this.detanotacreditoBean = detanotacreditoBean;
	}	
	
	public DetaNotaCreditoParameterReturnGeneral getdetanotacreditoReturnGeneral() {
		return this.detanotacreditoReturnGeneral;
	}

	public void setdetanotacreditoReturnGeneral(DetaNotaCreditoParameterReturnGeneral detanotacreditoReturnGeneral) {
		this.detanotacreditoReturnGeneral = detanotacreditoReturnGeneral;
	}	
	
	
	public Long id_anioFK_IdAnio=null;

	public Long getid_anioFK_IdAnio() {
		return this.id_anioFK_IdAnio;
	}

	public void setid_anioFK_IdAnio(Long id_anioFK_IdAnio) {
		this.id_anioFK_IdAnio = id_anioFK_IdAnio;
	}

	public Long id_bodegaFK_IdBodega=-1L;

	public Long getid_bodegaFK_IdBodega() {
		return this.id_bodegaFK_IdBodega;
	}

	public void setid_bodegaFK_IdBodega(Long id_bodegaFK_IdBodega) {
		this.id_bodegaFK_IdBodega = id_bodegaFK_IdBodega;
	}

	public Long id_centro_costoFK_IdCentroCosto=null;

	public Long getid_centro_costoFK_IdCentroCosto() {
		return this.id_centro_costoFK_IdCentroCosto;
	}

	public void setid_centro_costoFK_IdCentroCosto(Long id_centro_costoFK_IdCentroCosto) {
		this.id_centro_costoFK_IdCentroCosto = id_centro_costoFK_IdCentroCosto;
	}

	public Long id_ejercicioFK_IdEjercicio=-1L;

	public Long getid_ejercicioFK_IdEjercicio() {
		return this.id_ejercicioFK_IdEjercicio;
	}

	public void setid_ejercicioFK_IdEjercicio(Long id_ejercicioFK_IdEjercicio) {
		this.id_ejercicioFK_IdEjercicio = id_ejercicioFK_IdEjercicio;
	}

	public Long id_empaqueFK_IdEmpaque=null;

	public Long getid_empaqueFK_IdEmpaque() {
		return this.id_empaqueFK_IdEmpaque;
	}

	public void setid_empaqueFK_IdEmpaque(Long id_empaqueFK_IdEmpaque) {
		this.id_empaqueFK_IdEmpaque = id_empaqueFK_IdEmpaque;
	}

	public Long id_empresaFK_IdEmpresa=-1L;

	public Long getid_empresaFK_IdEmpresa() {
		return this.id_empresaFK_IdEmpresa;
	}

	public void setid_empresaFK_IdEmpresa(Long id_empresaFK_IdEmpresa) {
		this.id_empresaFK_IdEmpresa = id_empresaFK_IdEmpresa;
	}

	public Long id_mesFK_IdMes=null;

	public Long getid_mesFK_IdMes() {
		return this.id_mesFK_IdMes;
	}

	public void setid_mesFK_IdMes(Long id_mesFK_IdMes) {
		this.id_mesFK_IdMes = id_mesFK_IdMes;
	}

	public Long id_nota_creditoFK_IdNotaCredito=-1L;

	public Long getid_nota_creditoFK_IdNotaCredito() {
		return this.id_nota_creditoFK_IdNotaCredito;
	}

	public void setid_nota_creditoFK_IdNotaCredito(Long id_nota_creditoFK_IdNotaCredito) {
		this.id_nota_creditoFK_IdNotaCredito = id_nota_creditoFK_IdNotaCredito;
	}

	public Long id_periodoFK_IdPeriodo=-1L;

	public Long getid_periodoFK_IdPeriodo() {
		return this.id_periodoFK_IdPeriodo;
	}

	public void setid_periodoFK_IdPeriodo(Long id_periodoFK_IdPeriodo) {
		this.id_periodoFK_IdPeriodo = id_periodoFK_IdPeriodo;
	}

	public Long id_productoFK_IdProducto=-1L;

	public Long getid_productoFK_IdProducto() {
		return this.id_productoFK_IdProducto;
	}

	public void setid_productoFK_IdProducto(Long id_productoFK_IdProducto) {
		this.id_productoFK_IdProducto = id_productoFK_IdProducto;
	}

	public Long id_sucursalFK_IdSucursal=-1L;

	public Long getid_sucursalFK_IdSucursal() {
		return this.id_sucursalFK_IdSucursal;
	}

	public void setid_sucursalFK_IdSucursal(Long id_sucursalFK_IdSucursal) {
		this.id_sucursalFK_IdSucursal = id_sucursalFK_IdSucursal;
	}

	public Long id_tipo_deta_nota_creditoFK_IdTipoDetaNotaCredito=-1L;

	public Long getid_tipo_deta_nota_creditoFK_IdTipoDetaNotaCredito() {
		return this.id_tipo_deta_nota_creditoFK_IdTipoDetaNotaCredito;
	}

	public void setid_tipo_deta_nota_creditoFK_IdTipoDetaNotaCredito(Long id_tipo_deta_nota_creditoFK_IdTipoDetaNotaCredito) {
		this.id_tipo_deta_nota_creditoFK_IdTipoDetaNotaCredito = id_tipo_deta_nota_creditoFK_IdTipoDetaNotaCredito;
	}

	public Long id_tipo_devolucion_empresaFK_IdTipoDevolucionEmpresa=-1L;

	public Long getid_tipo_devolucion_empresaFK_IdTipoDevolucionEmpresa() {
		return this.id_tipo_devolucion_empresaFK_IdTipoDevolucionEmpresa;
	}

	public void setid_tipo_devolucion_empresaFK_IdTipoDevolucionEmpresa(Long id_tipo_devolucion_empresaFK_IdTipoDevolucionEmpresa) {
		this.id_tipo_devolucion_empresaFK_IdTipoDevolucionEmpresa = id_tipo_devolucion_empresaFK_IdTipoDevolucionEmpresa;
	}

	public Long id_unidadFK_IdUnidad=-1L;

	public Long getid_unidadFK_IdUnidad() {
		return this.id_unidadFK_IdUnidad;
	}

	public void setid_unidadFK_IdUnidad(Long id_unidadFK_IdUnidad) {
		this.id_unidadFK_IdUnidad = id_unidadFK_IdUnidad;
	}

		
	
	//ELEMENTOS TABLAS PARAMETOS
	
	
	
	
	
	
	//ELEMENTOS TABLAS PARAMETOS_FIN
	
	
	public DetaNotaCreditoLogic getDetaNotaCreditoLogic()	{		
		return detanotacreditoLogic;
	}

	public void setDetaNotaCreditoLogic(DetaNotaCreditoLogic detanotacreditoLogic) {
		this.detanotacreditoLogic = detanotacreditoLogic;
	}
	
	
	public void setsFinalQueryGeneral(String sFinalQueryGeneral) {
		this.sFinalQueryGeneral=sFinalQueryGeneral;
	}
	
	public String getsFinalQueryGeneral() {
		return this.sFinalQueryGeneral;
	}
		
	public Boolean getIsGuardarCambiosEnLote() {
		return isGuardarCambiosEnLote;
	}

	public void setIsGuardarCambiosEnLote(Boolean isGuardarCambiosEnLote) {
		this.isGuardarCambiosEnLote = isGuardarCambiosEnLote;
	}
	
	public Boolean getIsCargarCombosDependencia() {
		return isCargarCombosDependencia;
	}

	public void setIsCargarCombosDependencia(Boolean isCargarCombosDependencia) {
		this.isCargarCombosDependencia = isCargarCombosDependencia;
	}
	
	public Boolean getIsEsNuevoDetaNotaCredito() {
		return isEsNuevoDetaNotaCredito;
	}

	public void setIsEsNuevoDetaNotaCredito(Boolean isEsNuevoDetaNotaCredito) {
		this.isEsNuevoDetaNotaCredito = isEsNuevoDetaNotaCredito;
	}

	public Boolean getEsParaAccionDesdeFormularioDetaNotaCredito() {
		return esParaAccionDesdeFormularioDetaNotaCredito;
	}
	
	public void setEsParaAccionDesdeFormularioDetaNotaCredito(Boolean esParaAccionDesdeFormularioDetaNotaCredito) {
		this.esParaAccionDesdeFormularioDetaNotaCredito = esParaAccionDesdeFormularioDetaNotaCredito;
	}
	
	public Boolean getIsEsMantenimientoRelacionesRelacionadoUnico() {
		return isEsMantenimientoRelacionesRelacionadoUnico;
	}

	public void setIsEsMantenimientoRelacionesRelacionadoUnico(Boolean isEsMantenimientoRelacionesRelacionadoUnico) {
		this.isEsMantenimientoRelacionesRelacionadoUnico = isEsMantenimientoRelacionesRelacionadoUnico;
	}

	public Boolean getIsEsMantenimientoRelaciones() {
		return isEsMantenimientoRelaciones;
	}

	public void setIsEsMantenimientoRelaciones(Boolean isEsMantenimientoRelaciones) {
		this.isEsMantenimientoRelaciones = isEsMantenimientoRelaciones;
	}

	public Boolean getIsEsMantenimientoRelacionado() {
		return isEsMantenimientoRelacionado;
	}

	public void setIsEsMantenimientoRelacionado(Boolean isEsMantenimientoRelacionado) {
		this.isEsMantenimientoRelacionado = isEsMantenimientoRelacionado;
	}

	public Boolean getesParaBusquedaForeignKey() {
		return esParaBusquedaForeignKey;
	}

	public void setesParaBusquedaForeignKey(Boolean esParaBusquedaForeignKey) {
		this.esParaBusquedaForeignKey = esParaBusquedaForeignKey;
	}

	public Boolean getIsContieneImagenes() {
		return isContieneImagenes;
	}

	public void setIsContieneImagenes(Boolean isContieneImagenes) {
		this.isContieneImagenes = isContieneImagenes;
	}		
	
	
	public void cargarCombosEmpresasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.empresasForeignKey=new ArrayList<Empresa>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			EmpresaLogic empresaLogic=new EmpresaLogic();

			//empresaLogic.getEmpresaDataAccess().setIsForForeingKeyData(true);

			if(this.detanotacreditoSessionBean==null) {
				this.detanotacreditoSessionBean=new DetaNotaCreditoSessionBean();
			}

			if(!this.detanotacreditoSessionBean.getisBusquedaDesdeForeignKeySesionEmpresa()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//empresaLogic.getEmpresaDataAccess().setIsForForeingKeyData(true);

					empresaLogic.getTodosEmpresasWithConnection(sFinalQuery,new Pagination());

					this.empresasForeignKey=empresaLogic.getEmpresas();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaEmpresa(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					empresaLogic.getEntityWithConnection(detanotacreditoSessionBean.getlidEmpresaActual());
					this.empresasForeignKey.add(empresaLogic.getEmpresa());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosSucursalsForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.sucursalsForeignKey=new ArrayList<Sucursal>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			SucursalLogic sucursalLogic=new SucursalLogic();

			//sucursalLogic.getSucursalDataAccess().setIsForForeingKeyData(true);

			if(this.detanotacreditoSessionBean==null) {
				this.detanotacreditoSessionBean=new DetaNotaCreditoSessionBean();
			}

			if(!this.detanotacreditoSessionBean.getisBusquedaDesdeForeignKeySesionSucursal()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//sucursalLogic.getSucursalDataAccess().setIsForForeingKeyData(true);

					sucursalLogic.getTodosSucursalsWithConnection(sFinalQuery,new Pagination());

					this.sucursalsForeignKey=sucursalLogic.getSucursals();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaSucursal(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					sucursalLogic.getEntityWithConnection(detanotacreditoSessionBean.getlidSucursalActual());
					this.sucursalsForeignKey.add(sucursalLogic.getSucursal());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosEjerciciosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.ejerciciosForeignKey=new ArrayList<Ejercicio>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			EjercicioLogic ejercicioLogic=new EjercicioLogic();

			//ejercicioLogic.getEjercicioDataAccess().setIsForForeingKeyData(true);

			if(this.detanotacreditoSessionBean==null) {
				this.detanotacreditoSessionBean=new DetaNotaCreditoSessionBean();
			}

			if(!this.detanotacreditoSessionBean.getisBusquedaDesdeForeignKeySesionEjercicio()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//ejercicioLogic.getEjercicioDataAccess().setIsForForeingKeyData(true);

					ejercicioLogic.getTodosEjerciciosWithConnection(sFinalQuery,new Pagination());

					this.ejerciciosForeignKey=ejercicioLogic.getEjercicios();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaEjercicio(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					ejercicioLogic.getEntityWithConnection(detanotacreditoSessionBean.getlidEjercicioActual());
					this.ejerciciosForeignKey.add(ejercicioLogic.getEjercicio());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosPeriodosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.periodosForeignKey=new ArrayList<Periodo>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			PeriodoLogic periodoLogic=new PeriodoLogic();

			//periodoLogic.getPeriodoDataAccess().setIsForForeingKeyData(true);

			if(this.detanotacreditoSessionBean==null) {
				this.detanotacreditoSessionBean=new DetaNotaCreditoSessionBean();
			}

			if(!this.detanotacreditoSessionBean.getisBusquedaDesdeForeignKeySesionPeriodo()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//periodoLogic.getPeriodoDataAccess().setIsForForeingKeyData(true);

					periodoLogic.getTodosPeriodosWithConnection(sFinalQuery,new Pagination());

					this.periodosForeignKey=periodoLogic.getPeriodos();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaPeriodo(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					periodoLogic.getEntityWithConnection(detanotacreditoSessionBean.getlidPeriodoActual());
					this.periodosForeignKey.add(periodoLogic.getPeriodo());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosAniosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.aniosForeignKey=new ArrayList<Anio>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			AnioLogic anioLogic=new AnioLogic();

			//anioLogic.getAnioDataAccess().setIsForForeingKeyData(true);

			if(this.detanotacreditoSessionBean==null) {
				this.detanotacreditoSessionBean=new DetaNotaCreditoSessionBean();
			}

			if(!this.detanotacreditoSessionBean.getisBusquedaDesdeForeignKeySesionAnio()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//anioLogic.getAnioDataAccess().setIsForForeingKeyData(true);

					anioLogic.getTodosAniosWithConnection(sFinalQuery,new Pagination());

					this.aniosForeignKey=anioLogic.getAnios();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaAnio(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					anioLogic.getEntityWithConnection(detanotacreditoSessionBean.getlidAnioActual());
					this.aniosForeignKey.add(anioLogic.getAnio());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosMessForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.messForeignKey=new ArrayList<Mes>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			MesLogic mesLogic=new MesLogic();

			//mesLogic.getMesDataAccess().setIsForForeingKeyData(true);

			if(this.detanotacreditoSessionBean==null) {
				this.detanotacreditoSessionBean=new DetaNotaCreditoSessionBean();
			}

			if(!this.detanotacreditoSessionBean.getisBusquedaDesdeForeignKeySesionMes()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//mesLogic.getMesDataAccess().setIsForForeingKeyData(true);

					mesLogic.getTodosMessWithConnection(sFinalQuery,new Pagination());

					this.messForeignKey=mesLogic.getMess();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaMes(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					mesLogic.getEntityWithConnection(detanotacreditoSessionBean.getlidMesActual());
					this.messForeignKey.add(mesLogic.getMes());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosNotaCreditosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.notacreditosForeignKey=new ArrayList<NotaCredito>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			NotaCreditoLogic notacreditoLogic=new NotaCreditoLogic();

			//notacreditoLogic.getNotaCreditoDataAccess().setIsForForeingKeyData(true);

			if(this.detanotacreditoSessionBean==null) {
				this.detanotacreditoSessionBean=new DetaNotaCreditoSessionBean();
			}

			if(!this.detanotacreditoSessionBean.getisBusquedaDesdeForeignKeySesionNotaCredito()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//notacreditoLogic.getNotaCreditoDataAccess().setIsForForeingKeyData(true);

					notacreditoLogic.getTodosNotaCreditosWithConnection(sFinalQuery,new Pagination());

					this.notacreditosForeignKey=notacreditoLogic.getNotaCreditos();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaNotaCredito(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					notacreditoLogic.getEntityWithConnection(detanotacreditoSessionBean.getlidNotaCreditoActual());
					this.notacreditosForeignKey.add(notacreditoLogic.getNotaCredito());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosBodegasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.bodegasForeignKey=new ArrayList<Bodega>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			BodegaLogic bodegaLogic=new BodegaLogic();

			//bodegaLogic.getBodegaDataAccess().setIsForForeingKeyData(true);

			if(this.detanotacreditoSessionBean==null) {
				this.detanotacreditoSessionBean=new DetaNotaCreditoSessionBean();
			}

			if(!this.detanotacreditoSessionBean.getisBusquedaDesdeForeignKeySesionBodega()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//bodegaLogic.getBodegaDataAccess().setIsForForeingKeyData(true);

					bodegaLogic.getTodosBodegasWithConnection(sFinalQuery,new Pagination());

					this.bodegasForeignKey=bodegaLogic.getBodegas();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaBodega(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					bodegaLogic.getEntityWithConnection(detanotacreditoSessionBean.getlidBodegaActual());
					this.bodegasForeignKey.add(bodegaLogic.getBodega());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosProductosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.productosForeignKey=new ArrayList<Producto>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			ProductoLogic productoLogic=new ProductoLogic();

			//productoLogic.getProductoDataAccess().setIsForForeingKeyData(true);

			if(this.detanotacreditoSessionBean==null) {
				this.detanotacreditoSessionBean=new DetaNotaCreditoSessionBean();
			}

			if(!this.detanotacreditoSessionBean.getisBusquedaDesdeForeignKeySesionProducto()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//productoLogic.getProductoDataAccess().setIsForForeingKeyData(true);

					productoLogic.getTodosProductosWithConnection(sFinalQuery,new Pagination());

					this.productosForeignKey=productoLogic.getProductos();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaProducto(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					productoLogic.getEntityWithConnection(detanotacreditoSessionBean.getlidProductoActual());
					this.productosForeignKey.add(productoLogic.getProducto());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosUnidadsForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.unidadsForeignKey=new ArrayList<Unidad>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			UnidadLogic unidadLogic=new UnidadLogic();

			//unidadLogic.getUnidadDataAccess().setIsForForeingKeyData(true);

			if(this.detanotacreditoSessionBean==null) {
				this.detanotacreditoSessionBean=new DetaNotaCreditoSessionBean();
			}

			if(!this.detanotacreditoSessionBean.getisBusquedaDesdeForeignKeySesionUnidad()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//unidadLogic.getUnidadDataAccess().setIsForForeingKeyData(true);

					unidadLogic.getTodosUnidadsWithConnection(sFinalQuery,new Pagination());

					this.unidadsForeignKey=unidadLogic.getUnidads();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaUnidad(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					unidadLogic.getEntityWithConnection(detanotacreditoSessionBean.getlidUnidadActual());
					this.unidadsForeignKey.add(unidadLogic.getUnidad());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTipoDetaNotaCreditosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.tipodetanotacreditosForeignKey=new ArrayList<TipoDetaNotaCredito>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			TipoDetaNotaCreditoLogic tipodetanotacreditoLogic=new TipoDetaNotaCreditoLogic();

			//tipodetanotacreditoLogic.getTipoDetaNotaCreditoDataAccess().setIsForForeingKeyData(true);

			if(this.detanotacreditoSessionBean==null) {
				this.detanotacreditoSessionBean=new DetaNotaCreditoSessionBean();
			}

			if(!this.detanotacreditoSessionBean.getisBusquedaDesdeForeignKeySesionTipoDetaNotaCredito()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//tipodetanotacreditoLogic.getTipoDetaNotaCreditoDataAccess().setIsForForeingKeyData(true);

					tipodetanotacreditoLogic.getTodosTipoDetaNotaCreditosWithConnection(sFinalQuery,new Pagination());

					this.tipodetanotacreditosForeignKey=tipodetanotacreditoLogic.getTipoDetaNotaCreditos();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTipoDetaNotaCredito(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipodetanotacreditoLogic.getEntityWithConnection(detanotacreditoSessionBean.getlidTipoDetaNotaCreditoActual());
					this.tipodetanotacreditosForeignKey.add(tipodetanotacreditoLogic.getTipoDetaNotaCredito());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTipoDevolucionEmpresasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.tipodevolucionempresasForeignKey=new ArrayList<TipoDevolucionEmpresa>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			TipoDevolucionEmpresaLogic tipodevolucionempresaLogic=new TipoDevolucionEmpresaLogic();

			//tipodevolucionempresaLogic.getTipoDevolucionEmpresaDataAccess().setIsForForeingKeyData(true);

			if(this.detanotacreditoSessionBean==null) {
				this.detanotacreditoSessionBean=new DetaNotaCreditoSessionBean();
			}

			if(!this.detanotacreditoSessionBean.getisBusquedaDesdeForeignKeySesionTipoDevolucionEmpresa()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//tipodevolucionempresaLogic.getTipoDevolucionEmpresaDataAccess().setIsForForeingKeyData(true);

					tipodevolucionempresaLogic.getTodosTipoDevolucionEmpresasWithConnection(sFinalQuery,new Pagination());

					this.tipodevolucionempresasForeignKey=tipodevolucionempresaLogic.getTipoDevolucionEmpresas();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTipoDevolucionEmpresa(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipodevolucionempresaLogic.getEntityWithConnection(detanotacreditoSessionBean.getlidTipoDevolucionEmpresaActual());
					this.tipodevolucionempresasForeignKey.add(tipodevolucionempresaLogic.getTipoDevolucionEmpresa());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosCentroCostosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.centrocostosForeignKey=new ArrayList<CentroCosto>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			CentroCosto centrocostoNulo = new CentroCosto();

			CentroCostoLogic centrocostoLogic=new CentroCostoLogic();

			//centrocostoLogic.getCentroCostoDataAccess().setIsForForeingKeyData(true);

			if(this.detanotacreditoSessionBean==null) {
				this.detanotacreditoSessionBean=new DetaNotaCreditoSessionBean();
			}

			if(!this.detanotacreditoSessionBean.getisBusquedaDesdeForeignKeySesionCentroCosto()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//centrocostoLogic.getCentroCostoDataAccess().setIsForForeingKeyData(true);

					centrocostoLogic.getTodosCentroCostosWithConnection(sFinalQuery,new Pagination());

					this.centrocostosForeignKey=centrocostoLogic.getCentroCostos();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}

				this.centrocostosForeignKey.add(0, centrocostoNulo);

				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaCentroCosto(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					centrocostoLogic.getEntityWithConnection(detanotacreditoSessionBean.getlidCentroCostoActual());
					this.centrocostosForeignKey.add(centrocostoLogic.getCentroCosto());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosEmpaquesForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.empaquesForeignKey=new ArrayList<Empaque>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			Empaque empaqueNulo = new Empaque();

			EmpaqueLogic empaqueLogic=new EmpaqueLogic();

			//empaqueLogic.getEmpaqueDataAccess().setIsForForeingKeyData(true);

			if(this.detanotacreditoSessionBean==null) {
				this.detanotacreditoSessionBean=new DetaNotaCreditoSessionBean();
			}

			if(!this.detanotacreditoSessionBean.getisBusquedaDesdeForeignKeySesionEmpaque()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//empaqueLogic.getEmpaqueDataAccess().setIsForForeingKeyData(true);

					empaqueLogic.getTodosEmpaquesWithConnection(sFinalQuery,new Pagination());

					this.empaquesForeignKey=empaqueLogic.getEmpaques();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}

				this.empaquesForeignKey.add(0, empaqueNulo);

				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaEmpaque(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					empaqueLogic.getEntityWithConnection(detanotacreditoSessionBean.getlidEmpaqueActual());
					this.empaquesForeignKey.add(empaqueLogic.getEmpaque());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	
	
	public void setActualEmpresaForeignKey(Long idEmpresaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Empresa  empresaTemp=null;

			for(Empresa empresaAux:empresasForeignKey) {
				if(empresaAux.getId()!=null && empresaAux.getId().equals(idEmpresaSeleccionado)) {
					empresaTemp=empresaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(empresaTemp!=null) {

					if(this.detanotacredito!=null) {
						this.detanotacredito.setEmpresa(empresaTemp);
					}

					if(this.jInternalFrameDetalleFormDetaNotaCredito!=null) {
						this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_empresaDetaNotaCredito.setSelectedItem(empresaTemp);
					}
				} else {
					//jComboBoxid_empresaDetaNotaCredito.setSelectedItem(empresaTemp);
					if(this.jInternalFrameDetalleFormDetaNotaCredito!=null) {
						if(this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_empresaDetaNotaCredito.getItemCount()>0) {
							this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_empresaDetaNotaCredito.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualEmpresaForeignKeyDescripcion(Long idEmpresaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Empresa  empresaTemp=null;

			for(Empresa empresaAux:empresasForeignKey) {
				if(empresaAux.getId()!=null && empresaAux.getId().equals(idEmpresaSeleccionado)) {
					empresaTemp=empresaAux;
					break;
				}
			}


			sDescripcion=EmpresaConstantesFunciones.getEmpresaDescripcion(empresaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualEmpresaForeignKeyGenerico(Long idEmpresaSeleccionado,JComboBox jComboBoxid_empresaDetaNotaCreditoGenerico)throws Exception
	{
		try
		{
			Empresa  empresaTemp=null;

			for(Empresa empresaAux:empresasForeignKey) {
				if(empresaAux.getId()!=null && empresaAux.getId().equals(idEmpresaSeleccionado)) {
					empresaTemp=empresaAux;
					break;
				}
			}

			if(empresaTemp!=null) {
				jComboBoxid_empresaDetaNotaCreditoGenerico.setSelectedItem(empresaTemp);
			} else {
				if(jComboBoxid_empresaDetaNotaCreditoGenerico!=null && jComboBoxid_empresaDetaNotaCreditoGenerico.getItemCount()>0) {
					jComboBoxid_empresaDetaNotaCreditoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualSucursalForeignKey(Long idSucursalSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Sucursal  sucursalTemp=null;

			for(Sucursal sucursalAux:sucursalsForeignKey) {
				if(sucursalAux.getId()!=null && sucursalAux.getId().equals(idSucursalSeleccionado)) {
					sucursalTemp=sucursalAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(sucursalTemp!=null) {

					if(this.detanotacredito!=null) {
						this.detanotacredito.setSucursal(sucursalTemp);
					}

					if(this.jInternalFrameDetalleFormDetaNotaCredito!=null) {
						this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_sucursalDetaNotaCredito.setSelectedItem(sucursalTemp);
					}
				} else {
					//jComboBoxid_sucursalDetaNotaCredito.setSelectedItem(sucursalTemp);
					if(this.jInternalFrameDetalleFormDetaNotaCredito!=null) {
						if(this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_sucursalDetaNotaCredito.getItemCount()>0) {
							this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_sucursalDetaNotaCredito.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualSucursalForeignKeyDescripcion(Long idSucursalSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Sucursal  sucursalTemp=null;

			for(Sucursal sucursalAux:sucursalsForeignKey) {
				if(sucursalAux.getId()!=null && sucursalAux.getId().equals(idSucursalSeleccionado)) {
					sucursalTemp=sucursalAux;
					break;
				}
			}


			sDescripcion=SucursalConstantesFunciones.getSucursalDescripcion(sucursalTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualSucursalForeignKeyGenerico(Long idSucursalSeleccionado,JComboBox jComboBoxid_sucursalDetaNotaCreditoGenerico)throws Exception
	{
		try
		{
			Sucursal  sucursalTemp=null;

			for(Sucursal sucursalAux:sucursalsForeignKey) {
				if(sucursalAux.getId()!=null && sucursalAux.getId().equals(idSucursalSeleccionado)) {
					sucursalTemp=sucursalAux;
					break;
				}
			}

			if(sucursalTemp!=null) {
				jComboBoxid_sucursalDetaNotaCreditoGenerico.setSelectedItem(sucursalTemp);
			} else {
				if(jComboBoxid_sucursalDetaNotaCreditoGenerico!=null && jComboBoxid_sucursalDetaNotaCreditoGenerico.getItemCount()>0) {
					jComboBoxid_sucursalDetaNotaCreditoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualEjercicioForeignKey(Long idEjercicioSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Ejercicio  ejercicioTemp=null;

			for(Ejercicio ejercicioAux:ejerciciosForeignKey) {
				if(ejercicioAux.getId()!=null && ejercicioAux.getId().equals(idEjercicioSeleccionado)) {
					ejercicioTemp=ejercicioAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(ejercicioTemp!=null) {

					if(this.detanotacredito!=null) {
						this.detanotacredito.setEjercicio(ejercicioTemp);
					}

					if(this.jInternalFrameDetalleFormDetaNotaCredito!=null) {
						this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_ejercicioDetaNotaCredito.setSelectedItem(ejercicioTemp);
					}
				} else {
					//jComboBoxid_ejercicioDetaNotaCredito.setSelectedItem(ejercicioTemp);
					if(this.jInternalFrameDetalleFormDetaNotaCredito!=null) {
						if(this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_ejercicioDetaNotaCredito.getItemCount()>0) {
							this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_ejercicioDetaNotaCredito.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualEjercicioForeignKeyDescripcion(Long idEjercicioSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Ejercicio  ejercicioTemp=null;

			for(Ejercicio ejercicioAux:ejerciciosForeignKey) {
				if(ejercicioAux.getId()!=null && ejercicioAux.getId().equals(idEjercicioSeleccionado)) {
					ejercicioTemp=ejercicioAux;
					break;
				}
			}


			sDescripcion=EjercicioConstantesFunciones.getEjercicioDescripcion(ejercicioTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualEjercicioForeignKeyGenerico(Long idEjercicioSeleccionado,JComboBox jComboBoxid_ejercicioDetaNotaCreditoGenerico)throws Exception
	{
		try
		{
			Ejercicio  ejercicioTemp=null;

			for(Ejercicio ejercicioAux:ejerciciosForeignKey) {
				if(ejercicioAux.getId()!=null && ejercicioAux.getId().equals(idEjercicioSeleccionado)) {
					ejercicioTemp=ejercicioAux;
					break;
				}
			}

			if(ejercicioTemp!=null) {
				jComboBoxid_ejercicioDetaNotaCreditoGenerico.setSelectedItem(ejercicioTemp);
			} else {
				if(jComboBoxid_ejercicioDetaNotaCreditoGenerico!=null && jComboBoxid_ejercicioDetaNotaCreditoGenerico.getItemCount()>0) {
					jComboBoxid_ejercicioDetaNotaCreditoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualPeriodoForeignKey(Long idPeriodoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Periodo  periodoTemp=null;

			for(Periodo periodoAux:periodosForeignKey) {
				if(periodoAux.getId()!=null && periodoAux.getId().equals(idPeriodoSeleccionado)) {
					periodoTemp=periodoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(periodoTemp!=null) {

					if(this.detanotacredito!=null) {
						this.detanotacredito.setPeriodo(periodoTemp);
					}

					if(this.jInternalFrameDetalleFormDetaNotaCredito!=null) {
						this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_periodoDetaNotaCredito.setSelectedItem(periodoTemp);
					}
				} else {
					//jComboBoxid_periodoDetaNotaCredito.setSelectedItem(periodoTemp);
					if(this.jInternalFrameDetalleFormDetaNotaCredito!=null) {
						if(this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_periodoDetaNotaCredito.getItemCount()>0) {
							this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_periodoDetaNotaCredito.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualPeriodoForeignKeyDescripcion(Long idPeriodoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Periodo  periodoTemp=null;

			for(Periodo periodoAux:periodosForeignKey) {
				if(periodoAux.getId()!=null && periodoAux.getId().equals(idPeriodoSeleccionado)) {
					periodoTemp=periodoAux;
					break;
				}
			}


			sDescripcion=PeriodoConstantesFunciones.getPeriodoDescripcion(periodoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualPeriodoForeignKeyGenerico(Long idPeriodoSeleccionado,JComboBox jComboBoxid_periodoDetaNotaCreditoGenerico)throws Exception
	{
		try
		{
			Periodo  periodoTemp=null;

			for(Periodo periodoAux:periodosForeignKey) {
				if(periodoAux.getId()!=null && periodoAux.getId().equals(idPeriodoSeleccionado)) {
					periodoTemp=periodoAux;
					break;
				}
			}

			if(periodoTemp!=null) {
				jComboBoxid_periodoDetaNotaCreditoGenerico.setSelectedItem(periodoTemp);
			} else {
				if(jComboBoxid_periodoDetaNotaCreditoGenerico!=null && jComboBoxid_periodoDetaNotaCreditoGenerico.getItemCount()>0) {
					jComboBoxid_periodoDetaNotaCreditoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualAnioForeignKey(Long idAnioSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Anio  anioTemp=null;

			for(Anio anioAux:aniosForeignKey) {
				if(anioAux.getId()!=null && anioAux.getId().equals(idAnioSeleccionado)) {
					anioTemp=anioAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(anioTemp!=null) {

					if(this.detanotacredito!=null) {
						this.detanotacredito.setAnio(anioTemp);
					}

					if(this.jInternalFrameDetalleFormDetaNotaCredito!=null) {
						this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_anioDetaNotaCredito.setSelectedItem(anioTemp);
					}
				} else {
					//jComboBoxid_anioDetaNotaCredito.setSelectedItem(anioTemp);
					if(this.jInternalFrameDetalleFormDetaNotaCredito!=null) {
						if(this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_anioDetaNotaCredito.getItemCount()>0) {
							this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_anioDetaNotaCredito.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualAnioForeignKeyDescripcion(Long idAnioSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Anio  anioTemp=null;

			for(Anio anioAux:aniosForeignKey) {
				if(anioAux.getId()!=null && anioAux.getId().equals(idAnioSeleccionado)) {
					anioTemp=anioAux;
					break;
				}
			}


			sDescripcion=AnioConstantesFunciones.getAnioDescripcion(anioTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualAnioForeignKeyGenerico(Long idAnioSeleccionado,JComboBox jComboBoxid_anioDetaNotaCreditoGenerico)throws Exception
	{
		try
		{
			Anio  anioTemp=null;

			for(Anio anioAux:aniosForeignKey) {
				if(anioAux.getId()!=null && anioAux.getId().equals(idAnioSeleccionado)) {
					anioTemp=anioAux;
					break;
				}
			}

			if(anioTemp!=null) {
				jComboBoxid_anioDetaNotaCreditoGenerico.setSelectedItem(anioTemp);
			} else {
				if(jComboBoxid_anioDetaNotaCreditoGenerico!=null && jComboBoxid_anioDetaNotaCreditoGenerico.getItemCount()>0) {
					jComboBoxid_anioDetaNotaCreditoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualMesForeignKey(Long idMesSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Mes  mesTemp=null;

			for(Mes mesAux:messForeignKey) {
				if(mesAux.getId()!=null && mesAux.getId().equals(idMesSeleccionado)) {
					mesTemp=mesAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(mesTemp!=null) {

					if(this.detanotacredito!=null) {
						this.detanotacredito.setMes(mesTemp);
					}

					if(this.jInternalFrameDetalleFormDetaNotaCredito!=null) {
						this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_mesDetaNotaCredito.setSelectedItem(mesTemp);
					}
				} else {
					//jComboBoxid_mesDetaNotaCredito.setSelectedItem(mesTemp);
					if(this.jInternalFrameDetalleFormDetaNotaCredito!=null) {
						if(this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_mesDetaNotaCredito.getItemCount()>0) {
							this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_mesDetaNotaCredito.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualMesForeignKeyDescripcion(Long idMesSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Mes  mesTemp=null;

			for(Mes mesAux:messForeignKey) {
				if(mesAux.getId()!=null && mesAux.getId().equals(idMesSeleccionado)) {
					mesTemp=mesAux;
					break;
				}
			}


			sDescripcion=MesConstantesFunciones.getMesDescripcion(mesTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualMesForeignKeyGenerico(Long idMesSeleccionado,JComboBox jComboBoxid_mesDetaNotaCreditoGenerico)throws Exception
	{
		try
		{
			Mes  mesTemp=null;

			for(Mes mesAux:messForeignKey) {
				if(mesAux.getId()!=null && mesAux.getId().equals(idMesSeleccionado)) {
					mesTemp=mesAux;
					break;
				}
			}

			if(mesTemp!=null) {
				jComboBoxid_mesDetaNotaCreditoGenerico.setSelectedItem(mesTemp);
			} else {
				if(jComboBoxid_mesDetaNotaCreditoGenerico!=null && jComboBoxid_mesDetaNotaCreditoGenerico.getItemCount()>0) {
					jComboBoxid_mesDetaNotaCreditoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualNotaCreditoForeignKey(Long idNotaCreditoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			NotaCredito  notacreditoTemp=null;

			for(NotaCredito notacreditoAux:notacreditosForeignKey) {
				if(notacreditoAux.getId()!=null && notacreditoAux.getId().equals(idNotaCreditoSeleccionado)) {
					notacreditoTemp=notacreditoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(notacreditoTemp!=null) {

					if(this.detanotacredito!=null) {
						this.detanotacredito.setNotaCredito(notacreditoTemp);
					}

					if(this.jInternalFrameDetalleFormDetaNotaCredito!=null) {
						this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_nota_creditoDetaNotaCredito.setSelectedItem(notacreditoTemp);
					}
				} else {
					//jComboBoxid_nota_creditoDetaNotaCredito.setSelectedItem(notacreditoTemp);
					if(this.jInternalFrameDetalleFormDetaNotaCredito!=null) {
						if(this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_nota_creditoDetaNotaCredito.getItemCount()>0) {
							this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_nota_creditoDetaNotaCredito.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdNotaCredito") || sFormularioTipoBusqueda.equals("Todos")){
					if(notacreditoTemp!=null && jComboBoxid_nota_creditoFK_IdNotaCreditoDetaNotaCredito!=null) {
						jComboBoxid_nota_creditoFK_IdNotaCreditoDetaNotaCredito.setSelectedItem(notacreditoTemp);
					} else {
						if(jComboBoxid_nota_creditoFK_IdNotaCreditoDetaNotaCredito!=null) {
							//jComboBoxid_nota_creditoFK_IdNotaCreditoDetaNotaCredito.setSelectedItem(notacreditoTemp);
							if(jComboBoxid_nota_creditoFK_IdNotaCreditoDetaNotaCredito.getItemCount()>0) {
								jComboBoxid_nota_creditoFK_IdNotaCreditoDetaNotaCredito.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualNotaCreditoForeignKeyDescripcion(Long idNotaCreditoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			NotaCredito  notacreditoTemp=null;

			for(NotaCredito notacreditoAux:notacreditosForeignKey) {
				if(notacreditoAux.getId()!=null && notacreditoAux.getId().equals(idNotaCreditoSeleccionado)) {
					notacreditoTemp=notacreditoAux;
					break;
				}
			}


			sDescripcion=NotaCreditoConstantesFunciones.getNotaCreditoDescripcion(notacreditoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualNotaCreditoForeignKeyGenerico(Long idNotaCreditoSeleccionado,JComboBox jComboBoxid_nota_creditoDetaNotaCreditoGenerico)throws Exception
	{
		try
		{
			NotaCredito  notacreditoTemp=null;

			for(NotaCredito notacreditoAux:notacreditosForeignKey) {
				if(notacreditoAux.getId()!=null && notacreditoAux.getId().equals(idNotaCreditoSeleccionado)) {
					notacreditoTemp=notacreditoAux;
					break;
				}
			}

			if(notacreditoTemp!=null) {
				jComboBoxid_nota_creditoDetaNotaCreditoGenerico.setSelectedItem(notacreditoTemp);
			} else {
				if(jComboBoxid_nota_creditoDetaNotaCreditoGenerico!=null && jComboBoxid_nota_creditoDetaNotaCreditoGenerico.getItemCount()>0) {
					jComboBoxid_nota_creditoDetaNotaCreditoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualBodegaForeignKey(Long idBodegaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Bodega  bodegaTemp=null;

			for(Bodega bodegaAux:bodegasForeignKey) {
				if(bodegaAux.getId()!=null && bodegaAux.getId().equals(idBodegaSeleccionado)) {
					bodegaTemp=bodegaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(bodegaTemp!=null) {

					if(this.detanotacredito!=null) {
						this.detanotacredito.setBodega(bodegaTemp);
					}

					if(this.jInternalFrameDetalleFormDetaNotaCredito!=null) {
						this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_bodegaDetaNotaCredito.setSelectedItem(bodegaTemp);
					}
				} else {
					//jComboBoxid_bodegaDetaNotaCredito.setSelectedItem(bodegaTemp);
					if(this.jInternalFrameDetalleFormDetaNotaCredito!=null) {
						if(this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_bodegaDetaNotaCredito.getItemCount()>0) {
							this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_bodegaDetaNotaCredito.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdBodega") || sFormularioTipoBusqueda.equals("Todos")){
					if(bodegaTemp!=null && jComboBoxid_bodegaFK_IdBodegaDetaNotaCredito!=null) {
						jComboBoxid_bodegaFK_IdBodegaDetaNotaCredito.setSelectedItem(bodegaTemp);
					} else {
						if(jComboBoxid_bodegaFK_IdBodegaDetaNotaCredito!=null) {
							//jComboBoxid_bodegaFK_IdBodegaDetaNotaCredito.setSelectedItem(bodegaTemp);
							if(jComboBoxid_bodegaFK_IdBodegaDetaNotaCredito.getItemCount()>0) {
								jComboBoxid_bodegaFK_IdBodegaDetaNotaCredito.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualBodegaForeignKeyDescripcion(Long idBodegaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Bodega  bodegaTemp=null;

			for(Bodega bodegaAux:bodegasForeignKey) {
				if(bodegaAux.getId()!=null && bodegaAux.getId().equals(idBodegaSeleccionado)) {
					bodegaTemp=bodegaAux;
					break;
				}
			}


			sDescripcion=BodegaConstantesFunciones.getBodegaDescripcion(bodegaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualBodegaForeignKeyGenerico(Long idBodegaSeleccionado,JComboBox jComboBoxid_bodegaDetaNotaCreditoGenerico)throws Exception
	{
		try
		{
			Bodega  bodegaTemp=null;

			for(Bodega bodegaAux:bodegasForeignKey) {
				if(bodegaAux.getId()!=null && bodegaAux.getId().equals(idBodegaSeleccionado)) {
					bodegaTemp=bodegaAux;
					break;
				}
			}

			if(bodegaTemp!=null) {
				jComboBoxid_bodegaDetaNotaCreditoGenerico.setSelectedItem(bodegaTemp);
			} else {
				if(jComboBoxid_bodegaDetaNotaCreditoGenerico!=null && jComboBoxid_bodegaDetaNotaCreditoGenerico.getItemCount()>0) {
					jComboBoxid_bodegaDetaNotaCreditoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualProductoForeignKey(Long idProductoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Producto  productoTemp=null;

			for(Producto productoAux:productosForeignKey) {
				if(productoAux.getId()!=null && productoAux.getId().equals(idProductoSeleccionado)) {
					productoTemp=productoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(productoTemp!=null) {

					if(this.detanotacredito!=null) {
						this.detanotacredito.setProducto(productoTemp);
					}

					if(this.jInternalFrameDetalleFormDetaNotaCredito!=null) {
						this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_productoDetaNotaCredito.setSelectedItem(productoTemp);
					}
				} else {
					//jComboBoxid_productoDetaNotaCredito.setSelectedItem(productoTemp);
					if(this.jInternalFrameDetalleFormDetaNotaCredito!=null) {
						if(this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_productoDetaNotaCredito.getItemCount()>0) {
							this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_productoDetaNotaCredito.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdProducto") || sFormularioTipoBusqueda.equals("Todos")){
					if(productoTemp!=null && jComboBoxid_productoFK_IdProductoDetaNotaCredito!=null) {
						jComboBoxid_productoFK_IdProductoDetaNotaCredito.setSelectedItem(productoTemp);
					} else {
						if(jComboBoxid_productoFK_IdProductoDetaNotaCredito!=null) {
							//jComboBoxid_productoFK_IdProductoDetaNotaCredito.setSelectedItem(productoTemp);
							if(jComboBoxid_productoFK_IdProductoDetaNotaCredito.getItemCount()>0) {
								jComboBoxid_productoFK_IdProductoDetaNotaCredito.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualProductoForeignKeyDescripcion(Long idProductoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Producto  productoTemp=null;

			for(Producto productoAux:productosForeignKey) {
				if(productoAux.getId()!=null && productoAux.getId().equals(idProductoSeleccionado)) {
					productoTemp=productoAux;
					break;
				}
			}


			sDescripcion=ProductoConstantesFunciones.getProductoDescripcion(productoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualProductoForeignKeyGenerico(Long idProductoSeleccionado,JComboBox jComboBoxid_productoDetaNotaCreditoGenerico)throws Exception
	{
		try
		{
			Producto  productoTemp=null;

			for(Producto productoAux:productosForeignKey) {
				if(productoAux.getId()!=null && productoAux.getId().equals(idProductoSeleccionado)) {
					productoTemp=productoAux;
					break;
				}
			}

			if(productoTemp!=null) {
				jComboBoxid_productoDetaNotaCreditoGenerico.setSelectedItem(productoTemp);
			} else {
				if(jComboBoxid_productoDetaNotaCreditoGenerico!=null && jComboBoxid_productoDetaNotaCreditoGenerico.getItemCount()>0) {
					jComboBoxid_productoDetaNotaCreditoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualUnidadForeignKey(Long idUnidadSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Unidad  unidadTemp=null;

			for(Unidad unidadAux:unidadsForeignKey) {
				if(unidadAux.getId()!=null && unidadAux.getId().equals(idUnidadSeleccionado)) {
					unidadTemp=unidadAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(unidadTemp!=null) {

					if(this.detanotacredito!=null) {
						this.detanotacredito.setUnidad(unidadTemp);
					}

					if(this.jInternalFrameDetalleFormDetaNotaCredito!=null) {
						this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_unidadDetaNotaCredito.setSelectedItem(unidadTemp);
					}
				} else {
					//jComboBoxid_unidadDetaNotaCredito.setSelectedItem(unidadTemp);
					if(this.jInternalFrameDetalleFormDetaNotaCredito!=null) {
						if(this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_unidadDetaNotaCredito.getItemCount()>0) {
							this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_unidadDetaNotaCredito.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdUnidad") || sFormularioTipoBusqueda.equals("Todos")){
					if(unidadTemp!=null && jComboBoxid_unidadFK_IdUnidadDetaNotaCredito!=null) {
						jComboBoxid_unidadFK_IdUnidadDetaNotaCredito.setSelectedItem(unidadTemp);
					} else {
						if(jComboBoxid_unidadFK_IdUnidadDetaNotaCredito!=null) {
							//jComboBoxid_unidadFK_IdUnidadDetaNotaCredito.setSelectedItem(unidadTemp);
							if(jComboBoxid_unidadFK_IdUnidadDetaNotaCredito.getItemCount()>0) {
								jComboBoxid_unidadFK_IdUnidadDetaNotaCredito.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualUnidadForeignKeyDescripcion(Long idUnidadSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Unidad  unidadTemp=null;

			for(Unidad unidadAux:unidadsForeignKey) {
				if(unidadAux.getId()!=null && unidadAux.getId().equals(idUnidadSeleccionado)) {
					unidadTemp=unidadAux;
					break;
				}
			}


			sDescripcion=UnidadConstantesFunciones.getUnidadDescripcion(unidadTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualUnidadForeignKeyGenerico(Long idUnidadSeleccionado,JComboBox jComboBoxid_unidadDetaNotaCreditoGenerico)throws Exception
	{
		try
		{
			Unidad  unidadTemp=null;

			for(Unidad unidadAux:unidadsForeignKey) {
				if(unidadAux.getId()!=null && unidadAux.getId().equals(idUnidadSeleccionado)) {
					unidadTemp=unidadAux;
					break;
				}
			}

			if(unidadTemp!=null) {
				jComboBoxid_unidadDetaNotaCreditoGenerico.setSelectedItem(unidadTemp);
			} else {
				if(jComboBoxid_unidadDetaNotaCreditoGenerico!=null && jComboBoxid_unidadDetaNotaCreditoGenerico.getItemCount()>0) {
					jComboBoxid_unidadDetaNotaCreditoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTipoDetaNotaCreditoForeignKey(Long idTipoDetaNotaCreditoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			TipoDetaNotaCredito  tipodetanotacreditoTemp=null;

			for(TipoDetaNotaCredito tipodetanotacreditoAux:tipodetanotacreditosForeignKey) {
				if(tipodetanotacreditoAux.getId()!=null && tipodetanotacreditoAux.getId().equals(idTipoDetaNotaCreditoSeleccionado)) {
					tipodetanotacreditoTemp=tipodetanotacreditoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(tipodetanotacreditoTemp!=null) {

					if(this.detanotacredito!=null) {
						this.detanotacredito.setTipoDetaNotaCredito(tipodetanotacreditoTemp);
					}

					if(this.jInternalFrameDetalleFormDetaNotaCredito!=null) {
						this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_tipo_deta_nota_creditoDetaNotaCredito.setSelectedItem(tipodetanotacreditoTemp);
					}
				} else {
					//jComboBoxid_tipo_deta_nota_creditoDetaNotaCredito.setSelectedItem(tipodetanotacreditoTemp);
					if(this.jInternalFrameDetalleFormDetaNotaCredito!=null) {
						if(this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_tipo_deta_nota_creditoDetaNotaCredito.getItemCount()>0) {
							this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_tipo_deta_nota_creditoDetaNotaCredito.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdTipoDetaNotaCredito") || sFormularioTipoBusqueda.equals("Todos")){
					if(tipodetanotacreditoTemp!=null && jComboBoxid_tipo_deta_nota_creditoFK_IdTipoDetaNotaCreditoDetaNotaCredito!=null) {
						jComboBoxid_tipo_deta_nota_creditoFK_IdTipoDetaNotaCreditoDetaNotaCredito.setSelectedItem(tipodetanotacreditoTemp);
					} else {
						if(jComboBoxid_tipo_deta_nota_creditoFK_IdTipoDetaNotaCreditoDetaNotaCredito!=null) {
							//jComboBoxid_tipo_deta_nota_creditoFK_IdTipoDetaNotaCreditoDetaNotaCredito.setSelectedItem(tipodetanotacreditoTemp);
							if(jComboBoxid_tipo_deta_nota_creditoFK_IdTipoDetaNotaCreditoDetaNotaCredito.getItemCount()>0) {
								jComboBoxid_tipo_deta_nota_creditoFK_IdTipoDetaNotaCreditoDetaNotaCredito.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTipoDetaNotaCreditoForeignKeyDescripcion(Long idTipoDetaNotaCreditoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			TipoDetaNotaCredito  tipodetanotacreditoTemp=null;

			for(TipoDetaNotaCredito tipodetanotacreditoAux:tipodetanotacreditosForeignKey) {
				if(tipodetanotacreditoAux.getId()!=null && tipodetanotacreditoAux.getId().equals(idTipoDetaNotaCreditoSeleccionado)) {
					tipodetanotacreditoTemp=tipodetanotacreditoAux;
					break;
				}
			}


			sDescripcion=TipoDetaNotaCreditoConstantesFunciones.getTipoDetaNotaCreditoDescripcion(tipodetanotacreditoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTipoDetaNotaCreditoForeignKeyGenerico(Long idTipoDetaNotaCreditoSeleccionado,JComboBox jComboBoxid_tipo_deta_nota_creditoDetaNotaCreditoGenerico)throws Exception
	{
		try
		{
			TipoDetaNotaCredito  tipodetanotacreditoTemp=null;

			for(TipoDetaNotaCredito tipodetanotacreditoAux:tipodetanotacreditosForeignKey) {
				if(tipodetanotacreditoAux.getId()!=null && tipodetanotacreditoAux.getId().equals(idTipoDetaNotaCreditoSeleccionado)) {
					tipodetanotacreditoTemp=tipodetanotacreditoAux;
					break;
				}
			}

			if(tipodetanotacreditoTemp!=null) {
				jComboBoxid_tipo_deta_nota_creditoDetaNotaCreditoGenerico.setSelectedItem(tipodetanotacreditoTemp);
			} else {
				if(jComboBoxid_tipo_deta_nota_creditoDetaNotaCreditoGenerico!=null && jComboBoxid_tipo_deta_nota_creditoDetaNotaCreditoGenerico.getItemCount()>0) {
					jComboBoxid_tipo_deta_nota_creditoDetaNotaCreditoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTipoDevolucionEmpresaForeignKey(Long idTipoDevolucionEmpresaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			TipoDevolucionEmpresa  tipodevolucionempresaTemp=null;

			for(TipoDevolucionEmpresa tipodevolucionempresaAux:tipodevolucionempresasForeignKey) {
				if(tipodevolucionempresaAux.getId()!=null && tipodevolucionempresaAux.getId().equals(idTipoDevolucionEmpresaSeleccionado)) {
					tipodevolucionempresaTemp=tipodevolucionempresaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(tipodevolucionempresaTemp!=null) {

					if(this.detanotacredito!=null) {
						this.detanotacredito.setTipoDevolucionEmpresa(tipodevolucionempresaTemp);
					}

					if(this.jInternalFrameDetalleFormDetaNotaCredito!=null) {
						this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_tipo_devolucion_empresaDetaNotaCredito.setSelectedItem(tipodevolucionempresaTemp);
					}
				} else {
					//jComboBoxid_tipo_devolucion_empresaDetaNotaCredito.setSelectedItem(tipodevolucionempresaTemp);
					if(this.jInternalFrameDetalleFormDetaNotaCredito!=null) {
						if(this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_tipo_devolucion_empresaDetaNotaCredito.getItemCount()>0) {
							this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_tipo_devolucion_empresaDetaNotaCredito.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdTipoDevolucionEmpresa") || sFormularioTipoBusqueda.equals("Todos")){
					if(tipodevolucionempresaTemp!=null && jComboBoxid_tipo_devolucion_empresaFK_IdTipoDevolucionEmpresaDetaNotaCredito!=null) {
						jComboBoxid_tipo_devolucion_empresaFK_IdTipoDevolucionEmpresaDetaNotaCredito.setSelectedItem(tipodevolucionempresaTemp);
					} else {
						if(jComboBoxid_tipo_devolucion_empresaFK_IdTipoDevolucionEmpresaDetaNotaCredito!=null) {
							//jComboBoxid_tipo_devolucion_empresaFK_IdTipoDevolucionEmpresaDetaNotaCredito.setSelectedItem(tipodevolucionempresaTemp);
							if(jComboBoxid_tipo_devolucion_empresaFK_IdTipoDevolucionEmpresaDetaNotaCredito.getItemCount()>0) {
								jComboBoxid_tipo_devolucion_empresaFK_IdTipoDevolucionEmpresaDetaNotaCredito.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTipoDevolucionEmpresaForeignKeyDescripcion(Long idTipoDevolucionEmpresaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			TipoDevolucionEmpresa  tipodevolucionempresaTemp=null;

			for(TipoDevolucionEmpresa tipodevolucionempresaAux:tipodevolucionempresasForeignKey) {
				if(tipodevolucionempresaAux.getId()!=null && tipodevolucionempresaAux.getId().equals(idTipoDevolucionEmpresaSeleccionado)) {
					tipodevolucionempresaTemp=tipodevolucionempresaAux;
					break;
				}
			}


			sDescripcion=TipoDevolucionEmpresaConstantesFunciones.getTipoDevolucionEmpresaDescripcion(tipodevolucionempresaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTipoDevolucionEmpresaForeignKeyGenerico(Long idTipoDevolucionEmpresaSeleccionado,JComboBox jComboBoxid_tipo_devolucion_empresaDetaNotaCreditoGenerico)throws Exception
	{
		try
		{
			TipoDevolucionEmpresa  tipodevolucionempresaTemp=null;

			for(TipoDevolucionEmpresa tipodevolucionempresaAux:tipodevolucionempresasForeignKey) {
				if(tipodevolucionempresaAux.getId()!=null && tipodevolucionempresaAux.getId().equals(idTipoDevolucionEmpresaSeleccionado)) {
					tipodevolucionempresaTemp=tipodevolucionempresaAux;
					break;
				}
			}

			if(tipodevolucionempresaTemp!=null) {
				jComboBoxid_tipo_devolucion_empresaDetaNotaCreditoGenerico.setSelectedItem(tipodevolucionempresaTemp);
			} else {
				if(jComboBoxid_tipo_devolucion_empresaDetaNotaCreditoGenerico!=null && jComboBoxid_tipo_devolucion_empresaDetaNotaCreditoGenerico.getItemCount()>0) {
					jComboBoxid_tipo_devolucion_empresaDetaNotaCreditoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualCentroCostoForeignKey(Long idCentroCostoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			CentroCosto  centrocostoTemp=null;

			for(CentroCosto centrocostoAux:centrocostosForeignKey) {
				if(centrocostoAux.getId()!=null && centrocostoAux.getId().equals(idCentroCostoSeleccionado)) {
					centrocostoTemp=centrocostoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(centrocostoTemp!=null) {

					if(this.detanotacredito!=null) {
						this.detanotacredito.setCentroCosto(centrocostoTemp);
					}

					if(this.jInternalFrameDetalleFormDetaNotaCredito!=null) {
						this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_centro_costoDetaNotaCredito.setSelectedItem(centrocostoTemp);
					}
				} else {
					//jComboBoxid_centro_costoDetaNotaCredito.setSelectedItem(centrocostoTemp);
					if(this.jInternalFrameDetalleFormDetaNotaCredito!=null) {
						if(this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_centro_costoDetaNotaCredito.getItemCount()>0) {
							this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_centro_costoDetaNotaCredito.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdCentroCosto") || sFormularioTipoBusqueda.equals("Todos")){
					if(centrocostoTemp!=null && jComboBoxid_centro_costoFK_IdCentroCostoDetaNotaCredito!=null) {
						jComboBoxid_centro_costoFK_IdCentroCostoDetaNotaCredito.setSelectedItem(centrocostoTemp);
					} else {
						if(jComboBoxid_centro_costoFK_IdCentroCostoDetaNotaCredito!=null) {
							//jComboBoxid_centro_costoFK_IdCentroCostoDetaNotaCredito.setSelectedItem(centrocostoTemp);
							if(jComboBoxid_centro_costoFK_IdCentroCostoDetaNotaCredito.getItemCount()>0) {
								jComboBoxid_centro_costoFK_IdCentroCostoDetaNotaCredito.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualCentroCostoForeignKeyDescripcion(Long idCentroCostoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			CentroCosto  centrocostoTemp=null;

			for(CentroCosto centrocostoAux:centrocostosForeignKey) {
				if(centrocostoAux.getId()!=null && centrocostoAux.getId().equals(idCentroCostoSeleccionado)) {
					centrocostoTemp=centrocostoAux;
					break;
				}
			}


			sDescripcion=CentroCostoConstantesFunciones.getCentroCostoDescripcion(centrocostoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualCentroCostoForeignKeyGenerico(Long idCentroCostoSeleccionado,JComboBox jComboBoxid_centro_costoDetaNotaCreditoGenerico)throws Exception
	{
		try
		{
			CentroCosto  centrocostoTemp=null;

			for(CentroCosto centrocostoAux:centrocostosForeignKey) {
				if(centrocostoAux.getId()!=null && centrocostoAux.getId().equals(idCentroCostoSeleccionado)) {
					centrocostoTemp=centrocostoAux;
					break;
				}
			}

			if(centrocostoTemp!=null) {
				jComboBoxid_centro_costoDetaNotaCreditoGenerico.setSelectedItem(centrocostoTemp);
			} else {
				if(jComboBoxid_centro_costoDetaNotaCreditoGenerico!=null && jComboBoxid_centro_costoDetaNotaCreditoGenerico.getItemCount()>0) {
					jComboBoxid_centro_costoDetaNotaCreditoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualEmpaqueForeignKey(Long idEmpaqueSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Empaque  empaqueTemp=null;

			for(Empaque empaqueAux:empaquesForeignKey) {
				if(empaqueAux.getId()!=null && empaqueAux.getId().equals(idEmpaqueSeleccionado)) {
					empaqueTemp=empaqueAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(empaqueTemp!=null) {

					if(this.detanotacredito!=null) {
						this.detanotacredito.setEmpaque(empaqueTemp);
					}

					if(this.jInternalFrameDetalleFormDetaNotaCredito!=null) {
						this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_empaqueDetaNotaCredito.setSelectedItem(empaqueTemp);
					}
				} else {
					//jComboBoxid_empaqueDetaNotaCredito.setSelectedItem(empaqueTemp);
					if(this.jInternalFrameDetalleFormDetaNotaCredito!=null) {
						if(this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_empaqueDetaNotaCredito.getItemCount()>0) {
							this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_empaqueDetaNotaCredito.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdEmpaque") || sFormularioTipoBusqueda.equals("Todos")){
					if(empaqueTemp!=null && jComboBoxid_empaqueFK_IdEmpaqueDetaNotaCredito!=null) {
						jComboBoxid_empaqueFK_IdEmpaqueDetaNotaCredito.setSelectedItem(empaqueTemp);
					} else {
						if(jComboBoxid_empaqueFK_IdEmpaqueDetaNotaCredito!=null) {
							//jComboBoxid_empaqueFK_IdEmpaqueDetaNotaCredito.setSelectedItem(empaqueTemp);
							if(jComboBoxid_empaqueFK_IdEmpaqueDetaNotaCredito.getItemCount()>0) {
								jComboBoxid_empaqueFK_IdEmpaqueDetaNotaCredito.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualEmpaqueForeignKeyDescripcion(Long idEmpaqueSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Empaque  empaqueTemp=null;

			for(Empaque empaqueAux:empaquesForeignKey) {
				if(empaqueAux.getId()!=null && empaqueAux.getId().equals(idEmpaqueSeleccionado)) {
					empaqueTemp=empaqueAux;
					break;
				}
			}


			sDescripcion=EmpaqueConstantesFunciones.getEmpaqueDescripcion(empaqueTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualEmpaqueForeignKeyGenerico(Long idEmpaqueSeleccionado,JComboBox jComboBoxid_empaqueDetaNotaCreditoGenerico)throws Exception
	{
		try
		{
			Empaque  empaqueTemp=null;

			for(Empaque empaqueAux:empaquesForeignKey) {
				if(empaqueAux.getId()!=null && empaqueAux.getId().equals(idEmpaqueSeleccionado)) {
					empaqueTemp=empaqueAux;
					break;
				}
			}

			if(empaqueTemp!=null) {
				jComboBoxid_empaqueDetaNotaCreditoGenerico.setSelectedItem(empaqueTemp);
			} else {
				if(jComboBoxid_empaqueDetaNotaCreditoGenerico!=null && jComboBoxid_empaqueDetaNotaCreditoGenerico.getItemCount()>0) {
					jComboBoxid_empaqueDetaNotaCreditoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	
	
	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarEmpresaForeignKey(DetaNotaCredito detanotacredito,JComboBox jComboBoxid_empresaDetaNotaCreditoGenerico)throws Exception
	{
		try
		{
			Empresa  empresaAux=new Empresa();

			if(jComboBoxid_empresaDetaNotaCreditoGenerico==null) {
				empresaAux=(Empresa)this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_empresaDetaNotaCredito.getSelectedItem();
			} else {
				empresaAux=(Empresa)jComboBoxid_empresaDetaNotaCreditoGenerico.getSelectedItem();
			}

			if(empresaAux!=null && empresaAux.getId()!=null) {
				detanotacredito.setid_empresa(empresaAux.getId());
				detanotacredito.setempresa_descripcion(DetaNotaCreditoConstantesFunciones.getEmpresaDescripcion(empresaAux));
				detanotacredito.setEmpresa(empresaAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarSucursalForeignKey(DetaNotaCredito detanotacredito,JComboBox jComboBoxid_sucursalDetaNotaCreditoGenerico)throws Exception
	{
		try
		{
			Sucursal  sucursalAux=new Sucursal();

			if(jComboBoxid_sucursalDetaNotaCreditoGenerico==null) {
				sucursalAux=(Sucursal)this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_sucursalDetaNotaCredito.getSelectedItem();
			} else {
				sucursalAux=(Sucursal)jComboBoxid_sucursalDetaNotaCreditoGenerico.getSelectedItem();
			}

			if(sucursalAux!=null && sucursalAux.getId()!=null) {
				detanotacredito.setid_sucursal(sucursalAux.getId());
				detanotacredito.setsucursal_descripcion(DetaNotaCreditoConstantesFunciones.getSucursalDescripcion(sucursalAux));
				detanotacredito.setSucursal(sucursalAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarEjercicioForeignKey(DetaNotaCredito detanotacredito,JComboBox jComboBoxid_ejercicioDetaNotaCreditoGenerico)throws Exception
	{
		try
		{
			Ejercicio  ejercicioAux=new Ejercicio();

			if(jComboBoxid_ejercicioDetaNotaCreditoGenerico==null) {
				ejercicioAux=(Ejercicio)this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_ejercicioDetaNotaCredito.getSelectedItem();
			} else {
				ejercicioAux=(Ejercicio)jComboBoxid_ejercicioDetaNotaCreditoGenerico.getSelectedItem();
			}

			if(ejercicioAux!=null && ejercicioAux.getId()!=null) {
				detanotacredito.setid_ejercicio(ejercicioAux.getId());
				detanotacredito.setejercicio_descripcion(DetaNotaCreditoConstantesFunciones.getEjercicioDescripcion(ejercicioAux));
				detanotacredito.setEjercicio(ejercicioAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarPeriodoForeignKey(DetaNotaCredito detanotacredito,JComboBox jComboBoxid_periodoDetaNotaCreditoGenerico)throws Exception
	{
		try
		{
			Periodo  periodoAux=new Periodo();

			if(jComboBoxid_periodoDetaNotaCreditoGenerico==null) {
				periodoAux=(Periodo)this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_periodoDetaNotaCredito.getSelectedItem();
			} else {
				periodoAux=(Periodo)jComboBoxid_periodoDetaNotaCreditoGenerico.getSelectedItem();
			}

			if(periodoAux!=null && periodoAux.getId()!=null) {
				if(periodoAux.getid_estado_periodo().equals(0L)) {
					throw new Exception("Periodo INACTIVO, NO PUEDE GUARDAR LA INFORMACION CONSULTE CON EL ADMINISTRADOR");
				}

				detanotacredito.setid_periodo(periodoAux.getId());
				detanotacredito.setperiodo_descripcion(DetaNotaCreditoConstantesFunciones.getPeriodoDescripcion(periodoAux));
				detanotacredito.setPeriodo(periodoAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarAnioForeignKey(DetaNotaCredito detanotacredito,JComboBox jComboBoxid_anioDetaNotaCreditoGenerico)throws Exception
	{
		try
		{
			Anio  anioAux=new Anio();

			if(jComboBoxid_anioDetaNotaCreditoGenerico==null) {
				anioAux=(Anio)this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_anioDetaNotaCredito.getSelectedItem();
			} else {
				anioAux=(Anio)jComboBoxid_anioDetaNotaCreditoGenerico.getSelectedItem();
			}

			if(anioAux!=null) {
				detanotacredito.setid_anio(anioAux.getId());
				detanotacredito.setanio_descripcion(DetaNotaCreditoConstantesFunciones.getAnioDescripcion(anioAux));
				detanotacredito.setAnio(anioAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarMesForeignKey(DetaNotaCredito detanotacredito,JComboBox jComboBoxid_mesDetaNotaCreditoGenerico)throws Exception
	{
		try
		{
			Mes  mesAux=new Mes();

			if(jComboBoxid_mesDetaNotaCreditoGenerico==null) {
				mesAux=(Mes)this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_mesDetaNotaCredito.getSelectedItem();
			} else {
				mesAux=(Mes)jComboBoxid_mesDetaNotaCreditoGenerico.getSelectedItem();
			}

			if(mesAux!=null) {
				detanotacredito.setid_mes(mesAux.getId());
				detanotacredito.setmes_descripcion(DetaNotaCreditoConstantesFunciones.getMesDescripcion(mesAux));
				detanotacredito.setMes(mesAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarNotaCreditoForeignKey(DetaNotaCredito detanotacredito,JComboBox jComboBoxid_nota_creditoDetaNotaCreditoGenerico)throws Exception
	{
		try
		{
			NotaCredito  notacreditoAux=new NotaCredito();

			if(jComboBoxid_nota_creditoDetaNotaCreditoGenerico==null) {
				notacreditoAux=(NotaCredito)this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_nota_creditoDetaNotaCredito.getSelectedItem();
			} else {
				notacreditoAux=(NotaCredito)jComboBoxid_nota_creditoDetaNotaCreditoGenerico.getSelectedItem();
			}

			if(notacreditoAux!=null && notacreditoAux.getId()!=null) {
				detanotacredito.setid_nota_credito(notacreditoAux.getId());
				detanotacredito.setnotacredito_descripcion(DetaNotaCreditoConstantesFunciones.getNotaCreditoDescripcion(notacreditoAux));
				detanotacredito.setNotaCredito(notacreditoAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarBodegaForeignKey(DetaNotaCredito detanotacredito,JComboBox jComboBoxid_bodegaDetaNotaCreditoGenerico)throws Exception
	{
		try
		{
			Bodega  bodegaAux=new Bodega();

			if(jComboBoxid_bodegaDetaNotaCreditoGenerico==null) {
				bodegaAux=(Bodega)this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_bodegaDetaNotaCredito.getSelectedItem();
			} else {
				bodegaAux=(Bodega)jComboBoxid_bodegaDetaNotaCreditoGenerico.getSelectedItem();
			}

			if(bodegaAux!=null && bodegaAux.getId()!=null) {
				detanotacredito.setid_bodega(bodegaAux.getId());
				detanotacredito.setbodega_descripcion(DetaNotaCreditoConstantesFunciones.getBodegaDescripcion(bodegaAux));
				detanotacredito.setBodega(bodegaAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarProductoForeignKey(DetaNotaCredito detanotacredito,JComboBox jComboBoxid_productoDetaNotaCreditoGenerico)throws Exception
	{
		try
		{
			Producto  productoAux=new Producto();

			if(jComboBoxid_productoDetaNotaCreditoGenerico==null) {
				productoAux=(Producto)this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_productoDetaNotaCredito.getSelectedItem();
			} else {
				productoAux=(Producto)jComboBoxid_productoDetaNotaCreditoGenerico.getSelectedItem();
			}

			if(productoAux!=null && productoAux.getId()!=null) {
				detanotacredito.setid_producto(productoAux.getId());
				detanotacredito.setproducto_descripcion(DetaNotaCreditoConstantesFunciones.getProductoDescripcion(productoAux));
				detanotacredito.setProducto(productoAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarUnidadForeignKey(DetaNotaCredito detanotacredito,JComboBox jComboBoxid_unidadDetaNotaCreditoGenerico)throws Exception
	{
		try
		{
			Unidad  unidadAux=new Unidad();

			if(jComboBoxid_unidadDetaNotaCreditoGenerico==null) {
				unidadAux=(Unidad)this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_unidadDetaNotaCredito.getSelectedItem();
			} else {
				unidadAux=(Unidad)jComboBoxid_unidadDetaNotaCreditoGenerico.getSelectedItem();
			}

			if(unidadAux!=null && unidadAux.getId()!=null) {
				detanotacredito.setid_unidad(unidadAux.getId());
				detanotacredito.setunidad_descripcion(DetaNotaCreditoConstantesFunciones.getUnidadDescripcion(unidadAux));
				detanotacredito.setUnidad(unidadAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTipoDetaNotaCreditoForeignKey(DetaNotaCredito detanotacredito,JComboBox jComboBoxid_tipo_deta_nota_creditoDetaNotaCreditoGenerico)throws Exception
	{
		try
		{
			TipoDetaNotaCredito  tipodetanotacreditoAux=new TipoDetaNotaCredito();

			if(jComboBoxid_tipo_deta_nota_creditoDetaNotaCreditoGenerico==null) {
				tipodetanotacreditoAux=(TipoDetaNotaCredito)this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_tipo_deta_nota_creditoDetaNotaCredito.getSelectedItem();
			} else {
				tipodetanotacreditoAux=(TipoDetaNotaCredito)jComboBoxid_tipo_deta_nota_creditoDetaNotaCreditoGenerico.getSelectedItem();
			}

			if(tipodetanotacreditoAux!=null && tipodetanotacreditoAux.getId()!=null) {
				detanotacredito.setid_tipo_deta_nota_credito(tipodetanotacreditoAux.getId());
				detanotacredito.settipodetanotacredito_descripcion(DetaNotaCreditoConstantesFunciones.getTipoDetaNotaCreditoDescripcion(tipodetanotacreditoAux));
				detanotacredito.setTipoDetaNotaCredito(tipodetanotacreditoAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTipoDevolucionEmpresaForeignKey(DetaNotaCredito detanotacredito,JComboBox jComboBoxid_tipo_devolucion_empresaDetaNotaCreditoGenerico)throws Exception
	{
		try
		{
			TipoDevolucionEmpresa  tipodevolucionempresaAux=new TipoDevolucionEmpresa();

			if(jComboBoxid_tipo_devolucion_empresaDetaNotaCreditoGenerico==null) {
				tipodevolucionempresaAux=(TipoDevolucionEmpresa)this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_tipo_devolucion_empresaDetaNotaCredito.getSelectedItem();
			} else {
				tipodevolucionempresaAux=(TipoDevolucionEmpresa)jComboBoxid_tipo_devolucion_empresaDetaNotaCreditoGenerico.getSelectedItem();
			}

			if(tipodevolucionempresaAux!=null && tipodevolucionempresaAux.getId()!=null) {
				detanotacredito.setid_tipo_devolucion_empresa(tipodevolucionempresaAux.getId());
				detanotacredito.settipodevolucionempresa_descripcion(DetaNotaCreditoConstantesFunciones.getTipoDevolucionEmpresaDescripcion(tipodevolucionempresaAux));
				detanotacredito.setTipoDevolucionEmpresa(tipodevolucionempresaAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarCentroCostoForeignKey(DetaNotaCredito detanotacredito,JComboBox jComboBoxid_centro_costoDetaNotaCreditoGenerico)throws Exception
	{
		try
		{
			CentroCosto  centrocostoAux=new CentroCosto();

			if(jComboBoxid_centro_costoDetaNotaCreditoGenerico==null) {
				centrocostoAux=(CentroCosto)this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_centro_costoDetaNotaCredito.getSelectedItem();
			} else {
				centrocostoAux=(CentroCosto)jComboBoxid_centro_costoDetaNotaCreditoGenerico.getSelectedItem();
			}

			if(centrocostoAux!=null) {
				detanotacredito.setid_centro_costo(centrocostoAux.getId());
				detanotacredito.setcentrocosto_descripcion(DetaNotaCreditoConstantesFunciones.getCentroCostoDescripcion(centrocostoAux));
				detanotacredito.setCentroCosto(centrocostoAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarEmpaqueForeignKey(DetaNotaCredito detanotacredito,JComboBox jComboBoxid_empaqueDetaNotaCreditoGenerico)throws Exception
	{
		try
		{
			Empaque  empaqueAux=new Empaque();

			if(jComboBoxid_empaqueDetaNotaCreditoGenerico==null) {
				empaqueAux=(Empaque)this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_empaqueDetaNotaCredito.getSelectedItem();
			} else {
				empaqueAux=(Empaque)jComboBoxid_empaqueDetaNotaCreditoGenerico.getSelectedItem();
			}

			if(empaqueAux!=null) {
				detanotacredito.setid_empaque(empaqueAux.getId());
				detanotacredito.setempaque_descripcion(DetaNotaCreditoConstantesFunciones.getEmpaqueDescripcion(empaqueAux));
				detanotacredito.setEmpaque(empaqueAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	
	


		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameEmpresasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingEmpresa=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!DetaNotaCreditoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormDetaNotaCredito!=null) { 
							this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_empresaDetaNotaCredito.removeAllItems();

							for(Empresa empresa:this.empresasForeignKey) {
								this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_empresaDetaNotaCredito.addItem(empresa);
							}
						}
					}

					if(this.jInternalFrameDetalleFormDetaNotaCredito!=null) { 
					}

					if(!DetaNotaCreditoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameSucursalsForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingSucursal=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!DetaNotaCreditoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormDetaNotaCredito!=null) { 
							this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_sucursalDetaNotaCredito.removeAllItems();

							for(Sucursal sucursal:this.sucursalsForeignKey) {
								this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_sucursalDetaNotaCredito.addItem(sucursal);
							}
						}
					}

					if(this.jInternalFrameDetalleFormDetaNotaCredito!=null) { 
					}

					if(!DetaNotaCreditoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameEjerciciosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingEjercicio=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!DetaNotaCreditoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormDetaNotaCredito!=null) { 
							this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_ejercicioDetaNotaCredito.removeAllItems();

							for(Ejercicio ejercicio:this.ejerciciosForeignKey) {
								this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_ejercicioDetaNotaCredito.addItem(ejercicio);
							}
						}
					}

					if(this.jInternalFrameDetalleFormDetaNotaCredito!=null) { 
					}

					if(!DetaNotaCreditoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFramePeriodosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingPeriodo=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!DetaNotaCreditoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormDetaNotaCredito!=null) { 
							this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_periodoDetaNotaCredito.removeAllItems();

							for(Periodo periodo:this.periodosForeignKey) {
								this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_periodoDetaNotaCredito.addItem(periodo);
							}
						}
					}

					if(this.jInternalFrameDetalleFormDetaNotaCredito!=null) { 
					}

					if(!DetaNotaCreditoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameAniosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingAnio=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!DetaNotaCreditoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormDetaNotaCredito!=null) { 
							this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_anioDetaNotaCredito.removeAllItems();

							for(Anio anio:this.aniosForeignKey) {
								this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_anioDetaNotaCredito.addItem(anio);
							}
						}
					}

					if(this.jInternalFrameDetalleFormDetaNotaCredito!=null) { 
					}

					if(!DetaNotaCreditoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameMessForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingMes=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!DetaNotaCreditoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormDetaNotaCredito!=null) { 
							this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_mesDetaNotaCredito.removeAllItems();

							for(Mes mes:this.messForeignKey) {
								this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_mesDetaNotaCredito.addItem(mes);
							}
						}
					}

					if(this.jInternalFrameDetalleFormDetaNotaCredito!=null) { 
					}

					if(!DetaNotaCreditoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameNotaCreditosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingNotaCredito=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!DetaNotaCreditoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormDetaNotaCredito!=null) { 
							this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_nota_creditoDetaNotaCredito.removeAllItems();

							for(NotaCredito notacredito:this.notacreditosForeignKey) {
								this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_nota_creditoDetaNotaCredito.addItem(notacredito);
							}
						}
					}

					if(this.jInternalFrameDetalleFormDetaNotaCredito!=null) { 
					}

					if(!DetaNotaCreditoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdNotaCredito") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!DetaNotaCreditoJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_nota_creditoFK_IdNotaCreditoDetaNotaCredito.removeAllItems();

							for(NotaCredito notacredito:this.notacreditosForeignKey) {
								this.jComboBoxid_nota_creditoFK_IdNotaCreditoDetaNotaCredito.addItem(notacredito);
							}
						}

						if(!DetaNotaCreditoJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameBodegasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingBodega=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!DetaNotaCreditoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormDetaNotaCredito!=null) { 
							this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_bodegaDetaNotaCredito.removeAllItems();

							for(Bodega bodega:this.bodegasForeignKey) {
								this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_bodegaDetaNotaCredito.addItem(bodega);
							}
						}
					}

					if(this.jInternalFrameDetalleFormDetaNotaCredito!=null) { 
					}

					if(!DetaNotaCreditoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdBodega") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!DetaNotaCreditoJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_bodegaFK_IdBodegaDetaNotaCredito.removeAllItems();

							for(Bodega bodega:this.bodegasForeignKey) {
								this.jComboBoxid_bodegaFK_IdBodegaDetaNotaCredito.addItem(bodega);
							}
						}

						if(!DetaNotaCreditoJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameProductosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingProducto=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!DetaNotaCreditoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormDetaNotaCredito!=null) { 
							this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_productoDetaNotaCredito.removeAllItems();

							for(Producto producto:this.productosForeignKey) {
								this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_productoDetaNotaCredito.addItem(producto);
							}
						}
					}

					if(this.jInternalFrameDetalleFormDetaNotaCredito!=null) { 
					}

					if(!DetaNotaCreditoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdProducto") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!DetaNotaCreditoJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_productoFK_IdProductoDetaNotaCredito.removeAllItems();

							for(Producto producto:this.productosForeignKey) {
								this.jComboBoxid_productoFK_IdProductoDetaNotaCredito.addItem(producto);
							}
						}

						if(!DetaNotaCreditoJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameUnidadsForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingUnidad=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!DetaNotaCreditoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormDetaNotaCredito!=null) { 
							this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_unidadDetaNotaCredito.removeAllItems();

							for(Unidad unidad:this.unidadsForeignKey) {
								this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_unidadDetaNotaCredito.addItem(unidad);
							}
						}
					}

					if(this.jInternalFrameDetalleFormDetaNotaCredito!=null) { 
					}

					if(!DetaNotaCreditoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdUnidad") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!DetaNotaCreditoJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_unidadFK_IdUnidadDetaNotaCredito.removeAllItems();

							for(Unidad unidad:this.unidadsForeignKey) {
								this.jComboBoxid_unidadFK_IdUnidadDetaNotaCredito.addItem(unidad);
							}
						}

						if(!DetaNotaCreditoJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTipoDetaNotaCreditosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTipoDetaNotaCredito=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!DetaNotaCreditoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormDetaNotaCredito!=null) { 
							this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_tipo_deta_nota_creditoDetaNotaCredito.removeAllItems();

							for(TipoDetaNotaCredito tipodetanotacredito:this.tipodetanotacreditosForeignKey) {
								this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_tipo_deta_nota_creditoDetaNotaCredito.addItem(tipodetanotacredito);
							}
						}
					}

					if(this.jInternalFrameDetalleFormDetaNotaCredito!=null) { 
					}

					if(!DetaNotaCreditoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdTipoDetaNotaCredito") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!DetaNotaCreditoJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_tipo_deta_nota_creditoFK_IdTipoDetaNotaCreditoDetaNotaCredito.removeAllItems();

							for(TipoDetaNotaCredito tipodetanotacredito:this.tipodetanotacreditosForeignKey) {
								this.jComboBoxid_tipo_deta_nota_creditoFK_IdTipoDetaNotaCreditoDetaNotaCredito.addItem(tipodetanotacredito);
							}
						}

						if(!DetaNotaCreditoJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTipoDevolucionEmpresasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTipoDevolucionEmpresa=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!DetaNotaCreditoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormDetaNotaCredito!=null) { 
							this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_tipo_devolucion_empresaDetaNotaCredito.removeAllItems();

							for(TipoDevolucionEmpresa tipodevolucionempresa:this.tipodevolucionempresasForeignKey) {
								this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_tipo_devolucion_empresaDetaNotaCredito.addItem(tipodevolucionempresa);
							}
						}
					}

					if(this.jInternalFrameDetalleFormDetaNotaCredito!=null) { 
					}

					if(!DetaNotaCreditoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdTipoDevolucionEmpresa") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!DetaNotaCreditoJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_tipo_devolucion_empresaFK_IdTipoDevolucionEmpresaDetaNotaCredito.removeAllItems();

							for(TipoDevolucionEmpresa tipodevolucionempresa:this.tipodevolucionempresasForeignKey) {
								this.jComboBoxid_tipo_devolucion_empresaFK_IdTipoDevolucionEmpresaDetaNotaCredito.addItem(tipodevolucionempresa);
							}
						}

						if(!DetaNotaCreditoJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameCentroCostosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingCentroCosto=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!DetaNotaCreditoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormDetaNotaCredito!=null) { 
							this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_centro_costoDetaNotaCredito.removeAllItems();

							for(CentroCosto centrocosto:this.centrocostosForeignKey) {
								this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_centro_costoDetaNotaCredito.addItem(centrocosto);
							}
						}
					}

					if(this.jInternalFrameDetalleFormDetaNotaCredito!=null) { 
					}

					if(!DetaNotaCreditoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdCentroCosto") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!DetaNotaCreditoJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_centro_costoFK_IdCentroCostoDetaNotaCredito.removeAllItems();

							for(CentroCosto centrocosto:this.centrocostosForeignKey) {
								this.jComboBoxid_centro_costoFK_IdCentroCostoDetaNotaCredito.addItem(centrocosto);
							}
						}

						if(!DetaNotaCreditoJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameEmpaquesForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingEmpaque=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!DetaNotaCreditoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormDetaNotaCredito!=null) { 
							this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_empaqueDetaNotaCredito.removeAllItems();

							for(Empaque empaque:this.empaquesForeignKey) {
								this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_empaqueDetaNotaCredito.addItem(empaque);
							}
						}
					}

					if(this.jInternalFrameDetalleFormDetaNotaCredito!=null) { 
					}

					if(!DetaNotaCreditoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdEmpaque") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!DetaNotaCreditoJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_empaqueFK_IdEmpaqueDetaNotaCredito.removeAllItems();

							for(Empaque empaque:this.empaquesForeignKey) {
								this.jComboBoxid_empaqueFK_IdEmpaqueDetaNotaCredito.addItem(empaque);
							}
						}

						if(!DetaNotaCreditoJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

	


		public void setSelectedItemCombosFrameEmpresaForeignKey(Empresa empresa,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormDetaNotaCredito!=null) {
							this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_empresaDetaNotaCredito.setSelectedItem(empresa);
						}
					} else {
						if(this.jInternalFrameDetalleFormDetaNotaCredito!=null) {
							this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_empresaDetaNotaCredito.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameSucursalForeignKey(Sucursal sucursal,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormDetaNotaCredito!=null) {
							this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_sucursalDetaNotaCredito.setSelectedItem(sucursal);
						}
					} else {
						if(this.jInternalFrameDetalleFormDetaNotaCredito!=null) {
							this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_sucursalDetaNotaCredito.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameEjercicioForeignKey(Ejercicio ejercicio,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormDetaNotaCredito!=null) {
							this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_ejercicioDetaNotaCredito.setSelectedItem(ejercicio);
						}
					} else {
						if(this.jInternalFrameDetalleFormDetaNotaCredito!=null) {
							this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_ejercicioDetaNotaCredito.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFramePeriodoForeignKey(Periodo periodo,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormDetaNotaCredito!=null) {
							this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_periodoDetaNotaCredito.setSelectedItem(periodo);
						}
					} else {
						if(this.jInternalFrameDetalleFormDetaNotaCredito!=null) {
							this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_periodoDetaNotaCredito.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameAnioForeignKey(Anio anio,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormDetaNotaCredito!=null) {
							this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_anioDetaNotaCredito.setSelectedItem(anio);
						}
					} else {
						if(this.jInternalFrameDetalleFormDetaNotaCredito!=null) {
							this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_anioDetaNotaCredito.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameMesForeignKey(Mes mes,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormDetaNotaCredito!=null) {
							this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_mesDetaNotaCredito.setSelectedItem(mes);
						}
					} else {
						if(this.jInternalFrameDetalleFormDetaNotaCredito!=null) {
							this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_mesDetaNotaCredito.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameNotaCreditoForeignKey(NotaCredito notacredito,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormDetaNotaCredito!=null) {
							this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_nota_creditoDetaNotaCredito.setSelectedItem(notacredito);
						}
					} else {
						if(this.jInternalFrameDetalleFormDetaNotaCredito!=null) {
							this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_nota_creditoDetaNotaCredito.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_nota_creditoFK_IdNotaCreditoDetaNotaCredito.setSelectedItem(notacredito);
						} else {
							this.jComboBoxid_nota_creditoFK_IdNotaCreditoDetaNotaCredito.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameBodegaForeignKey(Bodega bodega,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormDetaNotaCredito!=null) {
							this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_bodegaDetaNotaCredito.setSelectedItem(bodega);
						}
					} else {
						if(this.jInternalFrameDetalleFormDetaNotaCredito!=null) {
							this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_bodegaDetaNotaCredito.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_bodegaFK_IdBodegaDetaNotaCredito.setSelectedItem(bodega);
						} else {
							this.jComboBoxid_bodegaFK_IdBodegaDetaNotaCredito.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameProductoForeignKey(Producto producto,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormDetaNotaCredito!=null) {
							this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_productoDetaNotaCredito.setSelectedItem(producto);
						}
					} else {
						if(this.jInternalFrameDetalleFormDetaNotaCredito!=null) {
							this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_productoDetaNotaCredito.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_productoFK_IdProductoDetaNotaCredito.setSelectedItem(producto);
						} else {
							this.jComboBoxid_productoFK_IdProductoDetaNotaCredito.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameUnidadForeignKey(Unidad unidad,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormDetaNotaCredito!=null) {
							this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_unidadDetaNotaCredito.setSelectedItem(unidad);
						}
					} else {
						if(this.jInternalFrameDetalleFormDetaNotaCredito!=null) {
							this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_unidadDetaNotaCredito.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_unidadFK_IdUnidadDetaNotaCredito.setSelectedItem(unidad);
						} else {
							this.jComboBoxid_unidadFK_IdUnidadDetaNotaCredito.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTipoDetaNotaCreditoForeignKey(TipoDetaNotaCredito tipodetanotacredito,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormDetaNotaCredito!=null) {
							this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_tipo_deta_nota_creditoDetaNotaCredito.setSelectedItem(tipodetanotacredito);
						}
					} else {
						if(this.jInternalFrameDetalleFormDetaNotaCredito!=null) {
							this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_tipo_deta_nota_creditoDetaNotaCredito.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_tipo_deta_nota_creditoFK_IdTipoDetaNotaCreditoDetaNotaCredito.setSelectedItem(tipodetanotacredito);
						} else {
							this.jComboBoxid_tipo_deta_nota_creditoFK_IdTipoDetaNotaCreditoDetaNotaCredito.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTipoDevolucionEmpresaForeignKey(TipoDevolucionEmpresa tipodevolucionempresa,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormDetaNotaCredito!=null) {
							this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_tipo_devolucion_empresaDetaNotaCredito.setSelectedItem(tipodevolucionempresa);
						}
					} else {
						if(this.jInternalFrameDetalleFormDetaNotaCredito!=null) {
							this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_tipo_devolucion_empresaDetaNotaCredito.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_tipo_devolucion_empresaFK_IdTipoDevolucionEmpresaDetaNotaCredito.setSelectedItem(tipodevolucionempresa);
						} else {
							this.jComboBoxid_tipo_devolucion_empresaFK_IdTipoDevolucionEmpresaDetaNotaCredito.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameCentroCostoForeignKey(CentroCosto centrocosto,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormDetaNotaCredito!=null) {
							this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_centro_costoDetaNotaCredito.setSelectedItem(centrocosto);
						}
					} else {
						if(this.jInternalFrameDetalleFormDetaNotaCredito!=null) {
							this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_centro_costoDetaNotaCredito.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_centro_costoFK_IdCentroCostoDetaNotaCredito.setSelectedItem(centrocosto);
						} else {
							this.jComboBoxid_centro_costoFK_IdCentroCostoDetaNotaCredito.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameEmpaqueForeignKey(Empaque empaque,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormDetaNotaCredito!=null) {
							this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_empaqueDetaNotaCredito.setSelectedItem(empaque);
						}
					} else {
						if(this.jInternalFrameDetalleFormDetaNotaCredito!=null) {
							this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_empaqueDetaNotaCredito.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_empaqueFK_IdEmpaqueDetaNotaCredito.setSelectedItem(empaque);
						} else {
							this.jComboBoxid_empaqueFK_IdEmpaqueDetaNotaCredito.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

	


	
	public void refrescarForeignKeysDescripcionesDetaNotaCredito() throws Exception {
		//SI FUNCIONA DEEPLOAD ESTO VA AL ULTIMO
		if(Constantes.ISUSAEJBLOGICLAYER) {
			DetaNotaCreditoConstantesFunciones.refrescarForeignKeysDescripcionesDetaNotaCredito(this.detanotacreditoLogic.getDetaNotaCreditos());
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			DetaNotaCreditoConstantesFunciones.refrescarForeignKeysDescripcionesDetaNotaCredito(this.detanotacreditos);
		}
		
		/*
		ArrayList<Classe> classes=new ArrayList<Classe>();
		
		classes.add(new Classe(Empresa.class));
		classes.add(new Classe(Sucursal.class));
		classes.add(new Classe(Ejercicio.class));
		classes.add(new Classe(Periodo.class));
		classes.add(new Classe(Anio.class));
		classes.add(new Classe(Mes.class));
		classes.add(new Classe(NotaCredito.class));
		classes.add(new Classe(Bodega.class));
		classes.add(new Classe(Producto.class));
		classes.add(new Classe(Unidad.class));
		classes.add(new Classe(TipoDetaNotaCredito.class));
		classes.add(new Classe(TipoDevolucionEmpresa.class));
		classes.add(new Classe(CentroCosto.class));
		classes.add(new Classe(Empaque.class));
			
		if(Constantes.ISUSAEJBLOGICLAYER) {
			//USA LOS OBJETOS DE LOGIC DIRECTAMENTE
			//detanotacreditoLogic.setDetaNotaCreditos(this.detanotacreditos);
			detanotacreditoLogic.deepLoadsWithConnection(false, DeepLoadType.INCLUDE, classes,"");
	
		} else if(Constantes.ISUSAEJBREMOTE) {
		} else if(Constantes.ISUSAEJBHOME) {
		}
		*/				
	}	
	
	
	
	public Integer getiNumeroPaginacion() {
		return iNumeroPaginacion;
	}

	public void setiNumeroPaginacion(Integer iNumeroPaginacion) {
		this.iNumeroPaginacion= iNumeroPaginacion;
	}
	
	public Integer getiNumeroPaginacionPagina() {
		return iNumeroPaginacionPagina;
	}

	public void setiNumeroPaginacionPagina(Integer iNumeroPaginacionPagina) {
		this.iNumeroPaginacionPagina= iNumeroPaginacionPagina;
	}
	
	
	public Boolean getIsSeleccionarTodos() {
		return this.isSeleccionarTodos;
	}

	public void setIsSeleccionarTodos(Boolean isSeleccionarTodos) {
		this.isSeleccionarTodos= isSeleccionarTodos;
	}
	
	public Boolean getEsControlTabla() {
		return this.esControlTabla;
	}

	public void setEsControlTabla(Boolean esControlTabla) {
		this.esControlTabla= esControlTabla;
	}
	
	public Boolean getIsSeleccionados() {
		return this.isSeleccionados;
	}

	public void setIsSeleccionados(Boolean isSeleccionados) {
		this.isSeleccionados= isSeleccionados;
	}
	
	public Boolean getIsPostAccionNuevo() {
		return this.isPostAccionNuevo;
	}

	public void setIsPostAccionNuevo(Boolean isPostAccionNuevo) {
		this.isPostAccionNuevo= isPostAccionNuevo;
	}
	
	public Boolean getIsPostAccionSinCerrar() {
		return this.isPostAccionSinCerrar;
	}

	public void setIsPostAccionSinCerrar(Boolean isPostAccionSinCerrar) {
		this.isPostAccionSinCerrar= isPostAccionSinCerrar;
	}
	
	public Boolean getIsPostAccionSinMensaje() {
		return this.isPostAccionSinMensaje;
	}

	public void setIsPostAccionSinMensaje(Boolean isPostAccionSinMensaje) {
		this.isPostAccionSinMensaje= isPostAccionSinMensaje;
	}
	
	public Boolean getConGraficoReporte() {
		return this.conGraficoReporte;
	}

	public void setConGraficoReporte(Boolean conGraficoReporte) {
		this.conGraficoReporte= conGraficoReporte;
	}
	
	
	public ArrayList<Reporte> gettiposArchivosReportes() {
		return this.tiposArchivosReportes;
	}
	
	public void settiposArchivosReportes(ArrayList<Reporte> tiposArchivosReportes) {
		this.tiposArchivosReportes = tiposArchivosReportes;
	}
	
	//TIPOS ARCHIVOS DINAMICOS
	public ArrayList<Reporte> gettiposArchivosReportesDinamico() {
		return this.tiposArchivosReportesDinamico;
	}
	
	public void settiposArchivosReportesDinamico(ArrayList<Reporte> tiposArchivosReportesDinamico) {
		this.tiposArchivosReportesDinamico = tiposArchivosReportesDinamico;
	}
	
	//TIPOS REPORTES
	public ArrayList<Reporte> gettiposReportes() {
		return this.tiposReportes;
	}
	
	public void settiposReportes(ArrayList<Reporte> tiposReportes) {
		this.tiposReportes = tiposReportes;
	}
	
	//TIPOS REPORTES
	public ArrayList<Reporte> gettiposReportesDinamico() {
		return this.tiposReportesDinamico;
	}
	
	public void settiposReportesDinamico(ArrayList<Reporte> tiposReportesDinamico) {
		this.tiposReportesDinamico = tiposReportesDinamico;
	}
	
	//TIPOS GRAFICOS REPORTES
	public ArrayList<Reporte> gettiposGraficosReportes() {
		return this.tiposGraficosReportes;
	}
	
	public void settiposGraficosReportes(ArrayList<Reporte> tiposGraficosReportes) {
		this.tiposGraficosReportes = tiposGraficosReportes;
	}
	
	public ArrayList<Reporte> gettiposPaginacion() {
		return this.tiposPaginacion;
	}
	
	public void settiposPaginacion(ArrayList<Reporte> tiposPaginacion) {
		this.tiposPaginacion = tiposPaginacion;
	}
	
	public ArrayList<Reporte> gettiposRelaciones() {
		return this.tiposRelaciones;
	}
	
	public void settiposRelaciones(ArrayList<Reporte> tiposRelaciones) {
		this.tiposRelaciones= tiposRelaciones;
	}
	
	public ArrayList<Reporte> gettiposAcciones() {
		return this.tiposAcciones;
	}
	
	public void settiposAcciones(ArrayList<Reporte> tiposAcciones) {
		this.tiposAcciones = tiposAcciones;
	}
	
	public ArrayList<Reporte> gettiposAccionesFormulario() {
		return this.tiposAccionesFormulario;
	}
	
	public void settiposAccionesFormulario(ArrayList<Reporte> tiposAccionesFormulario) {
		this.tiposAccionesFormulario = tiposAccionesFormulario;
	}
	
	public ArrayList<Reporte> gettiposSeleccionar() {
		return this.tiposSeleccionar;
	}
	
	public void settiposSeleccionar(ArrayList<Reporte> tiposSeleccionar) {
		this.tiposSeleccionar = tiposSeleccionar;
	}
	
	public ArrayList<Reporte> gettiposColumnasSelect() {
		return this.tiposColumnasSelect;
	}
	
	public void settiposColumnasSelect(ArrayList<Reporte> tiposColumnasSelect) {
		this.tiposColumnasSelect = tiposColumnasSelect;
	}
		
	public ArrayList<Reporte> gettiposRelacionesSelect() {
		return this.tiposRelacionesSelect;
	}
	
	public void settiposRelacionesSelect(ArrayList<Reporte> tiposRelacionesSelect) {
		this.tiposRelacionesSelect = tiposRelacionesSelect;
	}
	
	public Long getIIdUsuarioSesion() {
		return lIdUsuarioSesion;
	}

	public void setIIdUsuarioSesion(Long lIdUsuarioSesion) {
		this.lIdUsuarioSesion = lIdUsuarioSesion;
	}
	
	
	public List<Accion> getAccions() {
		return this.accions;
	}

	public void setAccions(List<Accion> accions) {
		this.accions = accions;
	}
	
	public List<Accion> getAccionsFormulario() {
		return this.accionsFormulario;
	}

	public void setAccionsFormulario(List<Accion> accionsFormulario) {
		this.accionsFormulario = accionsFormulario;
	}
	
	public String getsAccionMantenimiento() {
		return sAccionMantenimiento;
	}

	public void setsAccionMantenimiento(String sAccionMantenimiento) {
		this.sAccionMantenimiento = sAccionMantenimiento;
	}

	public String getsAccionBusqueda() {
		return sAccionBusqueda;
	}

	public void setsAccionBusqueda(String sAccionBusqueda) {
		this.sAccionBusqueda = sAccionBusqueda;
	}

	public String getsAccionAdicional() {
		return sAccionAdicional;
	}

	public void setsAccionAdicional(String sAccionAdicional) {
		this.sAccionAdicional = sAccionAdicional;
	}

	public String getsUltimaBusqueda() {
		return sUltimaBusqueda;
	}

	public void setsUltimaBusqueda(String sUltimaBusqueda) {
		this.sUltimaBusqueda = sUltimaBusqueda;
	}
	
	public String getsTipoArchivoReporte() {
		return sTipoArchivoReporte;
	}

	public void setsTipoArchivoReporte(String sTipoArchivoReporte) {
		this.sTipoArchivoReporte = sTipoArchivoReporte;
	}
	
	public String getsTipoArchivoReporteDinamico() {
		return sTipoArchivoReporteDinamico;
	}

	public void setsTipoArchivoReporteDinamico(String sTipoArchivoReporteDinamico) {
		this.sTipoArchivoReporteDinamico = sTipoArchivoReporteDinamico;
	}
	
	public String getsTipoReporte() {
		return sTipoReporte;
	}

	public void setsTipoReporte(String sTipoReporte) {
		this.sTipoReporte = sTipoReporte;
	}
	
	public String getsTipoReporteDinamico() {
		return sTipoReporteDinamico;
	}

	public void setsTipoReporteDinamico(String sTipoReporteDinamico) {
		this.sTipoReporteDinamico = sTipoReporteDinamico;
	}
	
	public String getsTipoGraficoReporte() {
		return sTipoGraficoReporte;
	}

	public void setsTipoGraficoReporte(String sTipoGraficoReporte) {
		this.sTipoGraficoReporte = sTipoGraficoReporte;
	}
	
	public String getsTipoPaginacion() {
		return sTipoPaginacion;
	}

	public void setsTipoPaginacion(String sTipoPaginacion) {
		this.sTipoPaginacion = sTipoPaginacion;
	}
	
	public String getsTipoRelacion() {
		return sTipoRelacion;
	}

	public void setsTipoRelacion(String sTipoRelacion) {
		this.sTipoRelacion = sTipoRelacion;
	}
	
	public String getsTipoAccion() {
		return sTipoAccion;
	}

	public void setsTipoAccion(String sTipoAccion) {
		this.sTipoAccion = sTipoAccion;
	}
	
	public String getsTipoAccionFormulario() {
		return sTipoAccionFormulario;
	}

	public void setsTipoAccionFormulario(String sTipoAccionFormulario) {
		this.sTipoAccionFormulario = sTipoAccionFormulario;
	}
	
	public String getsTipoSeleccionar() {
		return sTipoSeleccionar;
	}

	public void setsTipoSeleccionar(String sTipoSeleccionar) {
		this.sTipoSeleccionar = sTipoSeleccionar;
	}
	
	public String getsValorCampoGeneral() {
		return sValorCampoGeneral;
	}

	public void setsValorCampoGeneral(String sValorCampoGeneral) {
		this.sValorCampoGeneral = sValorCampoGeneral;
	}			

	public String getsDetalleReporte() {
		return sDetalleReporte;
	}

	public void setsDetalleReporte(String sDetalleReporte) {
		this.sDetalleReporte = sDetalleReporte;
	}
	
	
	public String getsTipoReporteExtra() {
		return sTipoReporteExtra;
	}

	public void setsTipoReporteExtra(String sTipoReporteExtra) {
		this.sTipoReporteExtra = sTipoReporteExtra;
	}
	
	public Boolean getesReporteDinamico() {
		return esReporteDinamico;
	}	
	
	public void setesReporteDinamico(Boolean esReporteDinamico) {
		this.esReporteDinamico = esReporteDinamico;
	}
	
	public Boolean getesRecargarFks() {
		return esRecargarFks;
	}	
	
	public void setesRecargarFks(Boolean esRecargarFks) {
		this.esRecargarFks = esRecargarFks;
	}
	
	public Boolean getesReporteAccionProceso() {
		return esReporteAccionProceso;
	}	
	
	public void setesReporteAccionProceso(Boolean esReporteAccionProceso) {
		this.esReporteAccionProceso= esReporteAccionProceso;
	}
		
	public DetaNotaCreditoParameterReturnGeneral getDetaNotaCreditoParameterGeneral() {
		return this.detanotacreditoParameterGeneral;
	}
	
	public void setDetaNotaCreditoParameterGeneral(DetaNotaCreditoParameterReturnGeneral detanotacreditoParameterGeneral) {
		this.detanotacreditoParameterGeneral = detanotacreditoParameterGeneral;
	}
	
	public String getsPathReporteDinamico() {
		return sPathReporteDinamico;
	}

	public void setsPathReporteDinamico(String sPathReporteDinamico) {
		this.sPathReporteDinamico = sPathReporteDinamico;
	}
		
	public Boolean getisMostrarNumeroPaginacion() {
		return isMostrarNumeroPaginacion;
	}

	public void setisMostrarNumeroPaginacion(Boolean isMostrarNumeroPaginacion) {
		this.isMostrarNumeroPaginacion = isMostrarNumeroPaginacion;
	}
	
	public Mensaje getMensaje() {
		return mensaje;
	}

	public void setMensaje(Mensaje mensaje) {
		this.mensaje = mensaje;
	}
	
	public Boolean getIsPermisoTodoDetaNotaCredito() {
		return isPermisoTodoDetaNotaCredito;
	}

	public void setIsPermisoTodoDetaNotaCredito(Boolean isPermisoTodoDetaNotaCredito) {
		this.isPermisoTodoDetaNotaCredito = isPermisoTodoDetaNotaCredito;
	}

	public Boolean getIsPermisoNuevoDetaNotaCredito() {
		return isPermisoNuevoDetaNotaCredito;
	}

	public void setIsPermisoNuevoDetaNotaCredito(Boolean isPermisoNuevoDetaNotaCredito) {
		this.isPermisoNuevoDetaNotaCredito = isPermisoNuevoDetaNotaCredito;
	}

	public Boolean getIsPermisoActualizarDetaNotaCredito() {
		return isPermisoActualizarDetaNotaCredito;
	}

	public void setIsPermisoActualizarDetaNotaCredito(Boolean isPermisoActualizarDetaNotaCredito) {
		this.isPermisoActualizarDetaNotaCredito = isPermisoActualizarDetaNotaCredito;
	}

	public Boolean getIsPermisoEliminarDetaNotaCredito() {
		return isPermisoEliminarDetaNotaCredito;
	}

	public void setIsPermisoEliminarDetaNotaCredito(Boolean isPermisoEliminarDetaNotaCredito) {
		this.isPermisoEliminarDetaNotaCredito = isPermisoEliminarDetaNotaCredito;
	}

	public Boolean getIsPermisoGuardarCambiosDetaNotaCredito() {
		return isPermisoGuardarCambiosDetaNotaCredito;
	}

	public void setIsPermisoGuardarCambiosDetaNotaCredito(Boolean isPermisoGuardarCambiosDetaNotaCredito) {
		this.isPermisoGuardarCambiosDetaNotaCredito = isPermisoGuardarCambiosDetaNotaCredito;
	}
	
	public Boolean getIsPermisoConsultaDetaNotaCredito() {
		return isPermisoConsultaDetaNotaCredito;
	}

	public void setIsPermisoConsultaDetaNotaCredito(Boolean isPermisoConsultaDetaNotaCredito) {
		this.isPermisoConsultaDetaNotaCredito = isPermisoConsultaDetaNotaCredito;
	}

	public Boolean getIsPermisoBusquedaDetaNotaCredito() {
		return isPermisoBusquedaDetaNotaCredito;
	}

	public void setIsPermisoBusquedaDetaNotaCredito(Boolean isPermisoBusquedaDetaNotaCredito) {
		this.isPermisoBusquedaDetaNotaCredito = isPermisoBusquedaDetaNotaCredito;
	}

	public Boolean getIsPermisoReporteDetaNotaCredito() {
		return isPermisoReporteDetaNotaCredito;
	}

	public void setIsPermisoReporteDetaNotaCredito(Boolean isPermisoReporteDetaNotaCredito) {
		this.isPermisoReporteDetaNotaCredito = isPermisoReporteDetaNotaCredito;
	}
	
	public Boolean getIsPermisoPaginacionMedioDetaNotaCredito() {
		return isPermisoPaginacionMedioDetaNotaCredito;
	}

	public void setIsPermisoPaginacionMedioDetaNotaCredito(Boolean isPermisoPaginacionMedioDetaNotaCredito) {
		this.isPermisoPaginacionMedioDetaNotaCredito = isPermisoPaginacionMedioDetaNotaCredito;
	}
	
	public Boolean getIsPermisoPaginacionTodoDetaNotaCredito() {
		return isPermisoPaginacionTodoDetaNotaCredito;
	}

	public void setIsPermisoPaginacionTodoDetaNotaCredito(Boolean isPermisoPaginacionTodoDetaNotaCredito) {
		this.isPermisoPaginacionTodoDetaNotaCredito = isPermisoPaginacionTodoDetaNotaCredito;
	}
	
	public Boolean getIsPermisoPaginacionAltoDetaNotaCredito() {
		return isPermisoPaginacionAltoDetaNotaCredito;
	}

	public void setIsPermisoPaginacionAltoDetaNotaCredito(Boolean isPermisoPaginacionAltoDetaNotaCredito) {
		this.isPermisoPaginacionAltoDetaNotaCredito = isPermisoPaginacionAltoDetaNotaCredito;
	}
	
	public Boolean getIsPermisoCopiarDetaNotaCredito() {
		return isPermisoCopiarDetaNotaCredito;
	}

	public void setIsPermisoCopiarDetaNotaCredito(Boolean isPermisoCopiarDetaNotaCredito) {
		this.isPermisoCopiarDetaNotaCredito = isPermisoCopiarDetaNotaCredito;
	}
	
	public Boolean getIsPermisoVerFormDetaNotaCredito() {
		return isPermisoVerFormDetaNotaCredito;
	}

	public void setIsPermisoVerFormDetaNotaCredito(Boolean isPermisoVerFormDetaNotaCredito) {
		this.isPermisoVerFormDetaNotaCredito = isPermisoVerFormDetaNotaCredito;
	}
	
	public Boolean getIsPermisoDuplicarDetaNotaCredito() {
		return isPermisoDuplicarDetaNotaCredito;
	}

	public void setIsPermisoDuplicarDetaNotaCredito(Boolean isPermisoDuplicarDetaNotaCredito) {
		this.isPermisoDuplicarDetaNotaCredito = isPermisoDuplicarDetaNotaCredito;
	}
	
	public Boolean getIsPermisoOrdenDetaNotaCredito() {
		return isPermisoOrdenDetaNotaCredito;
	}

	public void setIsPermisoOrdenDetaNotaCredito(Boolean isPermisoOrdenDetaNotaCredito) {
		this.isPermisoOrdenDetaNotaCredito = isPermisoOrdenDetaNotaCredito;
	}
	
	public String getsVisibilidadTablaBusquedas() {
		return sVisibilidadTablaBusquedas;
	}

	public void setsVisibilidadTablaBusquedas(String sVisibilidadTablaBusquedas) {
		this.sVisibilidadTablaBusquedas = sVisibilidadTablaBusquedas;
	}
	
	public String getsVisibilidadTablaElementos() {
		return sVisibilidadTablaElementos;
	}

	public void setsVisibilidadTablaElementos(String sVisibilidadTablaElementos) {
		this.sVisibilidadTablaElementos = sVisibilidadTablaElementos;
	}

	public String getsVisibilidadTablaAcciones() {
		return sVisibilidadTablaAcciones;
	}

	public void setsVisibilidadTablaAcciones(String sVisibilidadTablaAcciones) {
		this.sVisibilidadTablaAcciones = sVisibilidadTablaAcciones;
	}
	
	public Boolean getIsVisibilidadCeldaNuevoDetaNotaCredito() {
		return isVisibilidadCeldaNuevoDetaNotaCredito;
	}

	public void setIsVisibilidadCeldaNuevoDetaNotaCredito(Boolean isVisibilidadCeldaNuevoDetaNotaCredito) {
		this.isVisibilidadCeldaNuevoDetaNotaCredito = isVisibilidadCeldaNuevoDetaNotaCredito;
	}
	
	public Boolean getIsVisibilidadCeldaDuplicarDetaNotaCredito() {
		return isVisibilidadCeldaDuplicarDetaNotaCredito;
	}

	public void setIsVisibilidadCeldaDuplicarDetaNotaCredito(Boolean isVisibilidadCeldaDuplicarDetaNotaCredito) {
		this.isVisibilidadCeldaDuplicarDetaNotaCredito = isVisibilidadCeldaDuplicarDetaNotaCredito;
	}
	
	public Boolean getIsVisibilidadCeldaCopiarDetaNotaCredito() {
		return isVisibilidadCeldaCopiarDetaNotaCredito;
	}

	public void setIsVisibilidadCeldaCopiarDetaNotaCredito(Boolean isVisibilidadCeldaCopiarDetaNotaCredito) {
		this.isVisibilidadCeldaCopiarDetaNotaCredito = isVisibilidadCeldaCopiarDetaNotaCredito;
	}
	
	public Boolean getIsVisibilidadCeldaVerFormDetaNotaCredito() {
		return isVisibilidadCeldaVerFormDetaNotaCredito;
	}

	public void setIsVisibilidadCeldaVerFormDetaNotaCredito(Boolean isVisibilidadCeldaVerFormDetaNotaCredito) {
		this.isVisibilidadCeldaVerFormDetaNotaCredito = isVisibilidadCeldaVerFormDetaNotaCredito;
	}
	
	public Boolean getIsVisibilidadCeldaOrdenDetaNotaCredito() {
		return isVisibilidadCeldaOrdenDetaNotaCredito;
	}

	public void setIsVisibilidadCeldaOrdenDetaNotaCredito(Boolean isVisibilidadCeldaOrdenDetaNotaCredito) {
		this.isVisibilidadCeldaOrdenDetaNotaCredito = isVisibilidadCeldaOrdenDetaNotaCredito;
	}
	
	public Boolean getIsVisibilidadCeldaNuevoRelacionesDetaNotaCredito() {
		return isVisibilidadCeldaNuevoRelacionesDetaNotaCredito;
	}

	public void setIsVisibilidadCeldaNuevoRelacionesDetaNotaCredito(Boolean isVisibilidadCeldaNuevoRelacionesDetaNotaCredito) {
		this.isVisibilidadCeldaNuevoRelacionesDetaNotaCredito = isVisibilidadCeldaNuevoRelacionesDetaNotaCredito;
	}
	
	public Boolean getIsVisibilidadCeldaModificarDetaNotaCredito() {
		return isVisibilidadCeldaModificarDetaNotaCredito;
	}

	public void setIsVisibilidadCeldaModificarDetaNotaCredito(Boolean isVisibilidadCeldaModificarDetaNotaCredito) {
		this.isVisibilidadCeldaModificarDetaNotaCredito = isVisibilidadCeldaModificarDetaNotaCredito;
	}
	
	public Boolean getIsVisibilidadCeldaActualizarDetaNotaCredito() {
		return isVisibilidadCeldaActualizarDetaNotaCredito;
	}

	public void setIsVisibilidadCeldaActualizarDetaNotaCredito(Boolean isVisibilidadCeldaActualizarDetaNotaCredito) {
		this.isVisibilidadCeldaActualizarDetaNotaCredito = isVisibilidadCeldaActualizarDetaNotaCredito;
	}

	public Boolean getIsVisibilidadCeldaEliminarDetaNotaCredito() {
		return isVisibilidadCeldaEliminarDetaNotaCredito;
	}

	public void setIsVisibilidadCeldaEliminarDetaNotaCredito(Boolean isVisibilidadCeldaEliminarDetaNotaCredito) {
		this.isVisibilidadCeldaEliminarDetaNotaCredito = isVisibilidadCeldaEliminarDetaNotaCredito;
	}

	public Boolean getIsVisibilidadCeldaCancelarDetaNotaCredito() {
		return isVisibilidadCeldaCancelarDetaNotaCredito;
	}

	public void setIsVisibilidadCeldaCancelarDetaNotaCredito(Boolean isVisibilidadCeldaCancelarDetaNotaCredito) {
		this.isVisibilidadCeldaCancelarDetaNotaCredito = isVisibilidadCeldaCancelarDetaNotaCredito;
	}

	public Boolean getIsVisibilidadCeldaGuardarDetaNotaCredito() {
		return isVisibilidadCeldaGuardarDetaNotaCredito;
	}

	public void setIsVisibilidadCeldaGuardarDetaNotaCredito(Boolean isVisibilidadCeldaGuardarDetaNotaCredito) {
		this.isVisibilidadCeldaGuardarDetaNotaCredito = isVisibilidadCeldaGuardarDetaNotaCredito;
	}
	
	public Boolean getIsVisibilidadCeldaGuardarCambiosDetaNotaCredito() {
		return isVisibilidadCeldaGuardarCambiosDetaNotaCredito;
	}

	public void setIsVisibilidadCeldaGuardarCambiosDetaNotaCredito(Boolean isVisibilidadCeldaGuardarCambiosDetaNotaCredito) {
		this.isVisibilidadCeldaGuardarCambiosDetaNotaCredito = isVisibilidadCeldaGuardarCambiosDetaNotaCredito;
	}
		
	public DetaNotaCreditoSessionBean getdetanotacreditoSessionBean() {
		return this.detanotacreditoSessionBean;
	}
	
	public void setdetanotacreditoSessionBean(DetaNotaCreditoSessionBean detanotacreditoSessionBean) {
		this.detanotacreditoSessionBean=detanotacreditoSessionBean;
	}
	
	
	public Boolean getisVisibilidadFK_IdAnio() {
		return this.isVisibilidadFK_IdAnio;
	}

	public void setisVisibilidadFK_IdAnio(Boolean isVisibilidadFK_IdAnio) {
		this.isVisibilidadFK_IdAnio=isVisibilidadFK_IdAnio;
	}

	public Boolean getisVisibilidadFK_IdBodega() {
		return this.isVisibilidadFK_IdBodega;
	}

	public void setisVisibilidadFK_IdBodega(Boolean isVisibilidadFK_IdBodega) {
		this.isVisibilidadFK_IdBodega=isVisibilidadFK_IdBodega;
	}

	public Boolean getisVisibilidadFK_IdCentroCosto() {
		return this.isVisibilidadFK_IdCentroCosto;
	}

	public void setisVisibilidadFK_IdCentroCosto(Boolean isVisibilidadFK_IdCentroCosto) {
		this.isVisibilidadFK_IdCentroCosto=isVisibilidadFK_IdCentroCosto;
	}

	public Boolean getisVisibilidadFK_IdEjercicio() {
		return this.isVisibilidadFK_IdEjercicio;
	}

	public void setisVisibilidadFK_IdEjercicio(Boolean isVisibilidadFK_IdEjercicio) {
		this.isVisibilidadFK_IdEjercicio=isVisibilidadFK_IdEjercicio;
	}

	public Boolean getisVisibilidadFK_IdEmpaque() {
		return this.isVisibilidadFK_IdEmpaque;
	}

	public void setisVisibilidadFK_IdEmpaque(Boolean isVisibilidadFK_IdEmpaque) {
		this.isVisibilidadFK_IdEmpaque=isVisibilidadFK_IdEmpaque;
	}

	public Boolean getisVisibilidadFK_IdEmpresa() {
		return this.isVisibilidadFK_IdEmpresa;
	}

	public void setisVisibilidadFK_IdEmpresa(Boolean isVisibilidadFK_IdEmpresa) {
		this.isVisibilidadFK_IdEmpresa=isVisibilidadFK_IdEmpresa;
	}

	public Boolean getisVisibilidadFK_IdMes() {
		return this.isVisibilidadFK_IdMes;
	}

	public void setisVisibilidadFK_IdMes(Boolean isVisibilidadFK_IdMes) {
		this.isVisibilidadFK_IdMes=isVisibilidadFK_IdMes;
	}

	public Boolean getisVisibilidadFK_IdNotaCredito() {
		return this.isVisibilidadFK_IdNotaCredito;
	}

	public void setisVisibilidadFK_IdNotaCredito(Boolean isVisibilidadFK_IdNotaCredito) {
		this.isVisibilidadFK_IdNotaCredito=isVisibilidadFK_IdNotaCredito;
	}

	public Boolean getisVisibilidadFK_IdPeriodo() {
		return this.isVisibilidadFK_IdPeriodo;
	}

	public void setisVisibilidadFK_IdPeriodo(Boolean isVisibilidadFK_IdPeriodo) {
		this.isVisibilidadFK_IdPeriodo=isVisibilidadFK_IdPeriodo;
	}

	public Boolean getisVisibilidadFK_IdProducto() {
		return this.isVisibilidadFK_IdProducto;
	}

	public void setisVisibilidadFK_IdProducto(Boolean isVisibilidadFK_IdProducto) {
		this.isVisibilidadFK_IdProducto=isVisibilidadFK_IdProducto;
	}

	public Boolean getisVisibilidadFK_IdSucursal() {
		return this.isVisibilidadFK_IdSucursal;
	}

	public void setisVisibilidadFK_IdSucursal(Boolean isVisibilidadFK_IdSucursal) {
		this.isVisibilidadFK_IdSucursal=isVisibilidadFK_IdSucursal;
	}

	public Boolean getisVisibilidadFK_IdTipoDetaNotaCredito() {
		return this.isVisibilidadFK_IdTipoDetaNotaCredito;
	}

	public void setisVisibilidadFK_IdTipoDetaNotaCredito(Boolean isVisibilidadFK_IdTipoDetaNotaCredito) {
		this.isVisibilidadFK_IdTipoDetaNotaCredito=isVisibilidadFK_IdTipoDetaNotaCredito;
	}

	public Boolean getisVisibilidadFK_IdTipoDevolucionEmpresa() {
		return this.isVisibilidadFK_IdTipoDevolucionEmpresa;
	}

	public void setisVisibilidadFK_IdTipoDevolucionEmpresa(Boolean isVisibilidadFK_IdTipoDevolucionEmpresa) {
		this.isVisibilidadFK_IdTipoDevolucionEmpresa=isVisibilidadFK_IdTipoDevolucionEmpresa;
	}

	public Boolean getisVisibilidadFK_IdUnidad() {
		return this.isVisibilidadFK_IdUnidad;
	}

	public void setisVisibilidadFK_IdUnidad(Boolean isVisibilidadFK_IdUnidad) {
		this.isVisibilidadFK_IdUnidad=isVisibilidadFK_IdUnidad;
	}

	
	
	public void setVariablesFormularioToObjetoActualForeignKeysDetaNotaCredito(DetaNotaCredito detanotacredito)throws Exception {
		try {
			
				this.setActualParaGuardarEmpresaForeignKey(detanotacredito,null);
				this.setActualParaGuardarSucursalForeignKey(detanotacredito,null);
				this.setActualParaGuardarEjercicioForeignKey(detanotacredito,null);
				this.setActualParaGuardarPeriodoForeignKey(detanotacredito,null);
				this.setActualParaGuardarAnioForeignKey(detanotacredito,null);
				this.setActualParaGuardarMesForeignKey(detanotacredito,null);
				this.setActualParaGuardarNotaCreditoForeignKey(detanotacredito,null);
				this.setActualParaGuardarBodegaForeignKey(detanotacredito,null);
				this.setActualParaGuardarProductoForeignKey(detanotacredito,null);
				this.setActualParaGuardarUnidadForeignKey(detanotacredito,null);
				this.setActualParaGuardarTipoDetaNotaCreditoForeignKey(detanotacredito,null);
				this.setActualParaGuardarTipoDevolucionEmpresaForeignKey(detanotacredito,null);
				this.setActualParaGuardarCentroCostoForeignKey(detanotacredito,null);
				this.setActualParaGuardarEmpaqueForeignKey(detanotacredito,null);
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void cargarLicenciaCliente(DatosCliente datosCliente) throws Exception {
		Boolean existe=false;
			
		try {
				InputStream reportFile=null;
				
				String sPath=this.parametroGeneralUsuario.getpath_exportar()+"erp_bydan/license/license.xml";
				
				reportFile = new FileInputStream(sPath);
				
				Document documentBuilder=null;
				
				if(this.constantes2.DOCUMENT_BUILDER==null) {
					documentBuilder=Funciones2.parseXml(reportFile);
				} else {
					documentBuilder=this.constantes2.DOCUMENT_BUILDER;
				}
				
				//GlobalSeguridad.readXml(documentBuilder);
				
				String sNamePCServerLicencia="";
				String sClaveSistemaLicencia="";
				Date dFechaServerLicencia=null;
				
				//CARGAR ELEMENTOS DE LICENCIA
				NodeList nodeList = documentBuilder.getElementsByTagName("Licencia");
				
				for (int iIndice = 0; iIndice < nodeList.getLength(); iIndice++) {
					Node node = nodeList.item(iIndice);
				
					if (node.getNodeType() == Node.ELEMENT_NODE) {
						Element element = (Element) node;
						 
						sNamePCServerLicencia=element.getElementsByTagName("NombrePc").item(0).getTextContent();
						sClaveSistemaLicencia=element.getElementsByTagName("ClaveSistema").item(0).getTextContent();
						
						existe=true;
						break;
					}
				}														
			
				
			if(existe) {
				datosCliente.setsClaveSistema(sClaveSistemaLicencia);
				
				if(!datosCliente.getsNamePCServer().equals(sNamePCServerLicencia)
					&& !datosCliente.getsNamePCServer().equals("")) {
					
					datosCliente.setsNamePCServer(sNamePCServerLicencia);
				}
			} else {
				throw new Exception("NO EXISTE LICENCIA O NO ESTA BIEN FORMADO");
			}
		} catch(Exception e) {
			throw new Exception("NO EXISTE LICENCIA O NO ESTA BIEN FORMADO");
		}						
	}
	
	public void cargarDatosCliente() throws Exception {
		String sPrimerMacAddress="";		
		String sHostName="";		 
		String sHostIp="";		  
		String sHostUser="";
		
		
		sPrimerMacAddress=FuncionesNetwork.getPrimerMacAddress();		
		sHostName=FuncionesNetwork.getHostName();		 
		sHostIp=FuncionesNetwork.getHostIp();		  
		sHostUser=FuncionesNetwork.getHostUser();
		
		
		this.datosCliente=new DatosCliente();
		if(lIdUsuarioSesion!=null){datosCliente.setIdUsuario(this.lIdUsuarioSesion);}
		
		//SERVIDOR WEB Y TALVEZ SERVIDOR SWING WINDOWS
		this.datosCliente.setsUsuarioPCServer(sHostUser);
		this.datosCliente.setsNamePCServer(sHostName);
		this.datosCliente.setsIPPCServer(sHostIp);
		this.datosCliente.setsMacAddressPCServer(sPrimerMacAddress);
			
			//CLIENTE SWING WINDOWS
			this.datosCliente.setIsClienteWeb(false);
			
			this.datosCliente.setsUsuarioPC(sHostUser);
			this.datosCliente.setsNamePC(sHostName);
			this.datosCliente.setsIPPC(sHostIp);
			this.datosCliente.setsMacAddressPC(sPrimerMacAddress);	
			
			
			//this.cargarLicenciaCliente(this.datosCliente);
			
	}
	
	public void bugActualizarReferenciaActual(DetaNotaCredito detanotacredito,DetaNotaCredito detanotacreditoAux) throws Exception {
		//ARCHITECTURE		
		//EL ID NEGATIVO GUARDADO EN ORIGINAL SIRVE PARA VERIFICAR Y ACTUALIZAR EL REGISTRO NUEVO (ID,VERSIONROW)
		this.setCamposBaseDesdeOriginalDetaNotaCredito(detanotacredito);
					
		//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
		detanotacreditoAux.setId(detanotacredito.getId());
		detanotacreditoAux.setVersionRow(detanotacredito.getVersionRow());					
	}
	
	public void ejecutarMantenimiento(MaintenanceType maintenanceType)throws Exception {	
		try	{								
			
			//this.startProcessDetaNotaCredito();
		
			int intSelectedRow = this.jTableDatosDetaNotaCredito.getSelectedRow();	       
			
			//PUEDE SER -1 CUANDO SE ELIMINA EN GUARDAR CAMBIOS
			if(intSelectedRow>=0 && maintenanceType!=MaintenanceType.GUARDARCAMBIOS) {
				//SE PIEDE INDICE SELECTED CON FILA TOTALES, ASEGURARSE QUE OBJETO ACTUAL ESTE EN FORMULARIO
					
				//ARCHITECTURE
				
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacredito =(DetaNotaCredito) this.detanotacreditoLogic.getDetaNotaCreditos().toArray()[this.jTableDatosDetaNotaCredito.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
					this.detanotacredito =(DetaNotaCredito) this.detanotacreditos.toArray()[this.jTableDatosDetaNotaCredito.convertRowIndexToModel(intSelectedRow)];
				}
				
				//ARCHITECTURE
				
				if(DetaNotaCreditoJInternalFrame.ISBINDING_MANUAL_TABLA) {
					//this.setVariablesFormularioToObjetoActualDetaNotaCredito(this.detanotacredito,true);
				}
				
				this.setVariablesFormularioToObjetoActualForeignKeysDetaNotaCredito(this.detanotacredito);
			}
			
			//LUEGO DE TRAER DATOS CORRESPONDIENTES QUE COINCIDA LISTA TABLA QUITO FILA TOTALES
			if(this.conTotales) {
				//MEJOR LO DEJO, SI EXISTE EXCEPCION SE PIEDE FILA TOTALES Y ORDEN INDICE FILA ACTUAL
				//this.quitarFilaTotales();
			}
			
			this.cargarDatosCliente();
			
			this.datosDeep=new DatosDeep();
			
			//SE CAMBIA ESTADOS CON ERROR, ENTONCES SE EJECUTA ANTES
			//this.invalidValues = detanotacreditoValidator.getInvalidValues(this.detanotacredito);
			
			//if(this.invalidValues==null || this.invalidValues.length<=0) {
			
			detanotacreditoLogic.setDatosCliente(datosCliente);
			detanotacreditoLogic.setIsConDeep(false);
			
			if(maintenanceType==MaintenanceType.NUEVO) {
				detanotacreditoAux=new  DetaNotaCredito();
				
				detanotacreditoAux.setIsNew(true);
				detanotacreditoAux.setIsChanged(true);
				
				detanotacreditoAux.setDetaNotaCreditoOriginal(this.detanotacredito);
				
				detanotacreditoAux.setId(this.detanotacredito.getId());	
				detanotacreditoAux.setVersionRow(this.detanotacredito.getVersionRow());	
				detanotacreditoAux.setid_empresa(this.detanotacredito.getid_empresa());	
				detanotacreditoAux.setid_sucursal(this.detanotacredito.getid_sucursal());	
				detanotacreditoAux.setid_ejercicio(this.detanotacredito.getid_ejercicio());	
				detanotacreditoAux.setid_periodo(this.detanotacredito.getid_periodo());	
				detanotacreditoAux.setid_anio(this.detanotacredito.getid_anio());	
				detanotacreditoAux.setid_mes(this.detanotacredito.getid_mes());	
				detanotacreditoAux.setid_nota_credito(this.detanotacredito.getid_nota_credito());	
				detanotacreditoAux.setid_bodega(this.detanotacredito.getid_bodega());	
				detanotacreditoAux.setid_producto(this.detanotacredito.getid_producto());	
				detanotacreditoAux.setid_unidad(this.detanotacredito.getid_unidad());	
				detanotacreditoAux.setid_tipo_deta_nota_credito(this.detanotacredito.getid_tipo_deta_nota_credito());	
				detanotacreditoAux.setid_tipo_devolucion_empresa(this.detanotacredito.getid_tipo_devolucion_empresa());	
				detanotacreditoAux.setdescripcion(this.detanotacredito.getdescripcion());	
				detanotacreditoAux.setcantidad(this.detanotacredito.getcantidad());	
				detanotacreditoAux.setprecio(this.detanotacredito.getprecio());	
				detanotacreditoAux.setmonto(this.detanotacredito.getmonto());	
				detanotacreditoAux.setcosto(this.detanotacredito.getcosto());	
				detanotacreditoAux.setdescuento(this.detanotacredito.getdescuento());	
				detanotacreditoAux.setdescuento2(this.detanotacredito.getdescuento2());	
				detanotacreditoAux.setimpuesto(this.detanotacredito.getimpuesto());	
				detanotacreditoAux.setporcen_iva(this.detanotacredito.getporcen_iva());	
				detanotacreditoAux.setporcen_descuen(this.detanotacredito.getporcen_descuen());	
				detanotacreditoAux.setporcen_ice(this.detanotacredito.getporcen_ice());	
				detanotacreditoAux.setsub_total(this.detanotacredito.getsub_total());	
				detanotacreditoAux.settotal(this.detanotacredito.gettotal());	
				
				if(this.detanotacredito.getid_centro_costo()!=null && this.detanotacredito.getid_centro_costo()>0L) {
					detanotacreditoAux.setid_centro_costo(this.detanotacredito.getid_centro_costo());
				} else {
					detanotacreditoAux.setid_centro_costo(null);
				}	
				
				if(this.detanotacredito.getid_empaque()!=null && this.detanotacredito.getid_empaque()>0L) {
					detanotacreditoAux.setid_empaque(this.detanotacredito.getid_empaque());
				} else {
					detanotacreditoAux.setid_empaque(null);
				}	
				detanotacreditoAux.setincluye_impuesto(this.detanotacredito.getincluye_impuesto());	
				detanotacreditoAux.setfecha_emision(this.detanotacredito.getfecha_emision());	
				detanotacreditoAux.setcodigo_lote(this.detanotacredito.getcodigo_lote());	
				detanotacreditoAux.setnumero_caja(this.detanotacredito.getnumero_caja());	
								
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//NO ENTENDIBLE PORQUE PONER
					//if(this.detanotacreditoSessionBean.getEstaModoGuardarRelaciones() 
					//	|| this.detanotacreditoSessionBean.getEsGuardarRelacionado())	{
						actualizarLista(detanotacreditoAux,detanotacreditoLogic.getDetaNotaCreditos());
					//}
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(detanotacreditoAux,detanotacreditos);
				}
				//ARCHITECTURE
				
				if(!isGuardarCambiosEnLote  && !this.detanotacreditoSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.detanotacreditoSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						detanotacreditoLogic.saveDetaNotaCreditos();//WithConnection
						//detanotacreditoLogic.getSetVersionRowDetaNotaCreditos();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE		
					
					//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
					this.bugActualizarReferenciaActual(this.detanotacredito,detanotacreditoAux);
					
					this.refrescarForeignKeysDescripcionesDetaNotaCredito();
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					if(this.detanotacreditoSessionBean.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
						}
						//ARCHITECTURE	
						
						if(!this.detanotacreditoSessionBean.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE
												
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								detanotacreditoLogic.saveDetaNotaCreditoRelaciones(detanotacreditoAux);//WithConnection
								//detanotacreditoLogic.getSetVersionRowDetaNotaCreditos();//WithConnection
							} else if(Constantes.ISUSAEJBREMOTE) {
							} else if(Constantes.ISUSAEJBHOME) {
							}
							//ARCHITECTURE
							
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							this.bugActualizarReferenciaActual(this.detanotacredito,detanotacreditoAux);
					
					
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE	
						} else {
							
							
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								if(this.detanotacreditoSessionBean.getEstaModoGuardarRelaciones() 
									|| this.detanotacreditoSessionBean.getEsGuardarRelacionado())	{
									actualizarLista(detanotacreditoAux,detanotacreditoLogic.getDetaNotaCreditos());
								}
							} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
								actualizarLista(detanotacreditoAux,detanotacreditos);
							}
							//ARCHITECTURE
							
							//AQUI EL ID NEGATIVO ES EL ID BUSCADO, YA QUE NO SE GENERA OTRO EN LA DB POR INGRESAR UNO NUEVO
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							//this.bugActualizarReferenciaActual(this.detanotacredito,detanotacreditoAux);												
						}
					}
				}
			} else if(maintenanceType==MaintenanceType.ACTUALIZAR) {
				detanotacreditoAux=new  DetaNotaCredito();
				
				//PUEDE QUE SE ACTUALIZE ALGUN REGISTRO NUEVO
				if(!this.detanotacreditoSessionBean.getEsGuardarRelacionado() 
					|| (this.detanotacreditoSessionBean.getEsGuardarRelacionado() && this.detanotacredito.getId()>=0)) {
						
					detanotacreditoAux.setIsNew(false);
				}
				
				detanotacreditoAux.setIsDeleted(false);
			
				detanotacreditoAux.setId(this.detanotacredito.getId());	
				detanotacreditoAux.setVersionRow(this.detanotacredito.getVersionRow());	
				detanotacreditoAux.setid_empresa(this.detanotacredito.getid_empresa());	
				detanotacreditoAux.setid_sucursal(this.detanotacredito.getid_sucursal());	
				detanotacreditoAux.setid_ejercicio(this.detanotacredito.getid_ejercicio());	
				detanotacreditoAux.setid_periodo(this.detanotacredito.getid_periodo());	
				detanotacreditoAux.setid_anio(this.detanotacredito.getid_anio());	
				detanotacreditoAux.setid_mes(this.detanotacredito.getid_mes());	
				detanotacreditoAux.setid_nota_credito(this.detanotacredito.getid_nota_credito());	
				detanotacreditoAux.setid_bodega(this.detanotacredito.getid_bodega());	
				detanotacreditoAux.setid_producto(this.detanotacredito.getid_producto());	
				detanotacreditoAux.setid_unidad(this.detanotacredito.getid_unidad());	
				detanotacreditoAux.setid_tipo_deta_nota_credito(this.detanotacredito.getid_tipo_deta_nota_credito());	
				detanotacreditoAux.setid_tipo_devolucion_empresa(this.detanotacredito.getid_tipo_devolucion_empresa());	
				detanotacreditoAux.setdescripcion(this.detanotacredito.getdescripcion());	
				detanotacreditoAux.setcantidad(this.detanotacredito.getcantidad());	
				detanotacreditoAux.setprecio(this.detanotacredito.getprecio());	
				detanotacreditoAux.setmonto(this.detanotacredito.getmonto());	
				detanotacreditoAux.setcosto(this.detanotacredito.getcosto());	
				detanotacreditoAux.setdescuento(this.detanotacredito.getdescuento());	
				detanotacreditoAux.setdescuento2(this.detanotacredito.getdescuento2());	
				detanotacreditoAux.setimpuesto(this.detanotacredito.getimpuesto());	
				detanotacreditoAux.setporcen_iva(this.detanotacredito.getporcen_iva());	
				detanotacreditoAux.setporcen_descuen(this.detanotacredito.getporcen_descuen());	
				detanotacreditoAux.setporcen_ice(this.detanotacredito.getporcen_ice());	
				detanotacreditoAux.setsub_total(this.detanotacredito.getsub_total());	
				detanotacreditoAux.settotal(this.detanotacredito.gettotal());	
				
				if(this.detanotacredito.getid_centro_costo()!=null && this.detanotacredito.getid_centro_costo()>0L) {
					detanotacreditoAux.setid_centro_costo(this.detanotacredito.getid_centro_costo());
				} else {
					detanotacreditoAux.setid_centro_costo(null);
				}	
				
				if(this.detanotacredito.getid_empaque()!=null && this.detanotacredito.getid_empaque()>0L) {
					detanotacreditoAux.setid_empaque(this.detanotacredito.getid_empaque());
				} else {
					detanotacreditoAux.setid_empaque(null);
				}	
				detanotacreditoAux.setincluye_impuesto(this.detanotacredito.getincluye_impuesto());	
				detanotacreditoAux.setfecha_emision(this.detanotacredito.getfecha_emision());	
				detanotacreditoAux.setcodigo_lote(this.detanotacredito.getcodigo_lote());	
				detanotacreditoAux.setnumero_caja(this.detanotacredito.getnumero_caja());	
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					actualizarLista(detanotacreditoAux,detanotacreditoLogic.getDetaNotaCreditos());
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(detanotacreditoAux,detanotacreditos);
				}
				//ARCHITECTURE
				
				if(!isGuardarCambiosEnLote && !this.detanotacreditoSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.detanotacreditoSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						detanotacreditoLogic.saveDetaNotaCreditos();//WithConnection
						//detanotacreditoLogic.getSetVersionRowDetaNotaCreditos();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}	
					//ARCHITECTURE
					
					//TALVEZ ESTA DEMAS POR SER UPDATE
					//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
					this.bugActualizarReferenciaActual(this.detanotacredito,detanotacreditoAux);
					
					this.refrescarForeignKeysDescripcionesDetaNotaCredito();
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					if(this.detanotacreditoSessionBean.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
						}
						//ARCHITECTURE
						
						if(!this.detanotacreditoSessionBean.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								detanotacreditoLogic.saveDetaNotaCreditoRelaciones(detanotacreditoAux);//WithConnection
								//detanotacreditoLogic.getSetVersionRowDetaNotaCreditos();//WithConnection
							} else if(Constantes.ISUSAEJBREMOTE) {
							} else if(Constantes.ISUSAEJBHOME) {
							}
							//ARCHITECTURE
							
							//TALVEZ ESTA DEMAS POR SER UPDATE
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							this.bugActualizarReferenciaActual(this.detanotacredito,detanotacreditoAux);
					
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE
						} else {
							
							
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								if(this.detanotacreditoSessionBean.getEstaModoGuardarRelaciones() 
									|| this.detanotacreditoSessionBean.getEsGuardarRelacionado())	{
									actualizarLista(detanotacreditoAux,detanotacreditoLogic.getDetaNotaCreditos());
								}
							} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
								actualizarLista(detanotacreditoAux,detanotacreditos);
							}
							//ARCHITECTURE
							
							//AQUI EL ID NEGATIVO ES EL ID BUSCADO, YA QUE NO SE GENERA OTRO EN LA DB POR INGRESAR UNO NUEVO							
							//TALVEZ ESTA DEMAS POR SER UPDATE
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							//this.bugActualizarReferenciaActual(this.detanotacredito,detanotacreditoAux);
					
						}
					}
				}				
			} else if(maintenanceType==MaintenanceType.ELIMINAR) {
				detanotacreditoAux=new  DetaNotaCredito();
				
				detanotacreditoAux.setIsNew(false);
				detanotacreditoAux.setIsChanged(false);
				
				detanotacreditoAux.setIsDeleted(true);
				
				detanotacreditoAux.setId(this.detanotacredito.getId());	
				detanotacreditoAux.setVersionRow(this.detanotacredito.getVersionRow());	
				detanotacreditoAux.setid_empresa(this.detanotacredito.getid_empresa());	
				detanotacreditoAux.setid_sucursal(this.detanotacredito.getid_sucursal());	
				detanotacreditoAux.setid_ejercicio(this.detanotacredito.getid_ejercicio());	
				detanotacreditoAux.setid_periodo(this.detanotacredito.getid_periodo());	
				detanotacreditoAux.setid_anio(this.detanotacredito.getid_anio());	
				detanotacreditoAux.setid_mes(this.detanotacredito.getid_mes());	
				detanotacreditoAux.setid_nota_credito(this.detanotacredito.getid_nota_credito());	
				detanotacreditoAux.setid_bodega(this.detanotacredito.getid_bodega());	
				detanotacreditoAux.setid_producto(this.detanotacredito.getid_producto());	
				detanotacreditoAux.setid_unidad(this.detanotacredito.getid_unidad());	
				detanotacreditoAux.setid_tipo_deta_nota_credito(this.detanotacredito.getid_tipo_deta_nota_credito());	
				detanotacreditoAux.setid_tipo_devolucion_empresa(this.detanotacredito.getid_tipo_devolucion_empresa());	
				detanotacreditoAux.setdescripcion(this.detanotacredito.getdescripcion());	
				detanotacreditoAux.setcantidad(this.detanotacredito.getcantidad());	
				detanotacreditoAux.setprecio(this.detanotacredito.getprecio());	
				detanotacreditoAux.setmonto(this.detanotacredito.getmonto());	
				detanotacreditoAux.setcosto(this.detanotacredito.getcosto());	
				detanotacreditoAux.setdescuento(this.detanotacredito.getdescuento());	
				detanotacreditoAux.setdescuento2(this.detanotacredito.getdescuento2());	
				detanotacreditoAux.setimpuesto(this.detanotacredito.getimpuesto());	
				detanotacreditoAux.setporcen_iva(this.detanotacredito.getporcen_iva());	
				detanotacreditoAux.setporcen_descuen(this.detanotacredito.getporcen_descuen());	
				detanotacreditoAux.setporcen_ice(this.detanotacredito.getporcen_ice());	
				detanotacreditoAux.setsub_total(this.detanotacredito.getsub_total());	
				detanotacreditoAux.settotal(this.detanotacredito.gettotal());	
				
				if(this.detanotacredito.getid_centro_costo()!=null && this.detanotacredito.getid_centro_costo()>0L) {
					detanotacreditoAux.setid_centro_costo(this.detanotacredito.getid_centro_costo());
				} else {
					detanotacreditoAux.setid_centro_costo(null);
				}	
				
				if(this.detanotacredito.getid_empaque()!=null && this.detanotacredito.getid_empaque()>0L) {
					detanotacreditoAux.setid_empaque(this.detanotacredito.getid_empaque());
				} else {
					detanotacreditoAux.setid_empaque(null);
				}	
				detanotacreditoAux.setincluye_impuesto(this.detanotacredito.getincluye_impuesto());	
				detanotacreditoAux.setfecha_emision(this.detanotacredito.getfecha_emision());	
				detanotacreditoAux.setcodigo_lote(this.detanotacredito.getcodigo_lote());	
				detanotacreditoAux.setnumero_caja(this.detanotacredito.getnumero_caja());	
				
				if(this.detanotacreditoSessionBean.getEsGuardarRelacionado()) {
					//ELEMENTO ACTUAL NO SE HA INGRESADO AL SISTEMA, NO SE PUEDE ELIMINAR ALGO QUE NO EXISTE
					if(this.detanotacreditoAux.getId()>=0) {	
						this.detanotacreditosEliminados.add(detanotacreditoAux);											
					}
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					actualizarLista(detanotacreditoAux,detanotacreditoLogic.getDetaNotaCreditos());
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(detanotacreditoAux,detanotacreditos);
				}
				//ARCHITECTURE
				
				
				if(!isGuardarCambiosEnLote && !this.detanotacreditoSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.detanotacreditoSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						detanotacreditoLogic.saveDetaNotaCreditos();//WithConnection
						//detanotacreditoLogic.getSetVersionRowDetaNotaCreditos();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}	
					//ARCHITECTURE
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					if(this.detanotacreditoSessionBean.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
						}
						//ARCHITECTURE
						
						
						if(!this.detanotacreditoSessionBean.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								detanotacreditoLogic.saveDetaNotaCreditoRelaciones(detanotacreditoAux);//WithConnection
								//detanotacreditoLogic.getSetVersionRowDetaNotaCreditos();//WithConnection
							} else if(Constantes.ISUSAEJBREMOTE) {
							} else if(Constantes.ISUSAEJBHOME) {
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE
						}
					}  else {
							
						
								
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							if(this.detanotacreditoSessionBean.getEstaModoGuardarRelaciones() 
								|| this.detanotacreditoSessionBean.getEsGuardarRelacionado())	{
								actualizarLista(detanotacreditoAux,detanotacreditoLogic.getDetaNotaCreditos());
							}
						} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
							actualizarLista(detanotacreditoAux,detanotacreditos);
						}
						//ARCHITECTURE
					}
				}				
			} else if(maintenanceType==MaintenanceType.GUARDARCAMBIOS) {		
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditoLogic.getDetaNotaCreditos().addAll(this.detanotacreditosEliminados);
					
					detanotacreditoLogic.saveDetaNotaCreditos();//WithConnection
					//detanotacreditoLogic.getSetVersionRowDetaNotaCreditos();//WithConnection
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}	
				//ARCHITECTURE
				this.refrescarForeignKeysDescripcionesDetaNotaCredito();
				
				this.detanotacreditosEliminados= new ArrayList<DetaNotaCredito>();		
			}
			
			if(this.detanotacreditoSessionBean.getEsGuardarRelacionado()) {
				 this.crearFilaTotales();
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.arrDatoGeneralTotales=DetaNotaCreditoConstantesFunciones.getTotalesListaDetaNotaCredito(detanotacreditoLogic.getDetaNotaCreditos());							
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
				this.arrDatoGeneralTotales=DetaNotaCreditoConstantesFunciones.getTotalesListaDetaNotaCredito(this.detanotacreditos);
			}
			
									
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.detanotacreditoSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				if(!this.isPostAccionSinMensaje) {
					JOptionPane.showMessageDialog(this,"Deta Nota Credito GUARDADO CORRECTAMENTE","MANTENIMIENTO DE Deta Nota Credito",JOptionPane.INFORMATION_MESSAGE);
					if(maintenanceType==MaintenanceType.NUEVO || maintenanceType==MaintenanceType.ACTUALIZAR) {
						//CUANDO ES NUEVO SE PIERDE REFERENCIA NO SE PORQUE
						this.detanotacredito=detanotacreditoAux;
					}
				}
			}
			
			this.isErrorGuardar=false;
			
			this.inicializarInvalidValues();
		/*
		} else {
			this.mostrarInvalidValues();	
		}
		*/
			
		} catch(Exception e) {
			this.isErrorGuardar=true;
			
			this.crearFilaTotales();
			
			throw e;
		} finally {
      		//this.finishProcessDetaNotaCredito();
      	}
		
	}	
	
	public void actualizarRelaciones(DetaNotaCredito detanotacreditoLocal) throws Exception {
		
		if(this.detanotacreditoSessionBean.getConGuardarRelaciones()) {			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
			
			
			} else {
				
			}
		}
	}
	
	public void actualizarRelacionFkPadreActual(DetaNotaCredito detanotacreditoLocal) throws Exception {	
		if(this.detanotacreditoSessionBean.getEsGuardarRelacionado()) {			
			
		
			if(this.jInternalFrameParent.getClass().equals(EmpresaDetalleFormJInternalFrame.class)) {
				EmpresaBeanSwingJInternalFrame empresaBeanSwingJInternalFrameLocal=(EmpresaBeanSwingJInternalFrame) ((EmpresaDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				empresaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoEmpresa(empresaBeanSwingJInternalFrameLocal.getempresa(),true);
				empresaBeanSwingJInternalFrameLocal.actualizarLista(empresaBeanSwingJInternalFrameLocal.empresa,this.empresasForeignKey);

				empresaBeanSwingJInternalFrameLocal.actualizarRelaciones(empresaBeanSwingJInternalFrameLocal.empresa);

				detanotacreditoLocal.setEmpresa(empresaBeanSwingJInternalFrameLocal.empresa);

				this.addItemDefectoCombosForeignKeyEmpresa();
				this.cargarCombosFrameEmpresasForeignKey("Formulario");
				this.setActualEmpresaForeignKey(empresaBeanSwingJInternalFrameLocal.empresa.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(SucursalDetalleFormJInternalFrame.class)) {
				SucursalBeanSwingJInternalFrame sucursalBeanSwingJInternalFrameLocal=(SucursalBeanSwingJInternalFrame) ((SucursalDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				sucursalBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoSucursal(sucursalBeanSwingJInternalFrameLocal.getsucursal(),true);
				sucursalBeanSwingJInternalFrameLocal.actualizarLista(sucursalBeanSwingJInternalFrameLocal.sucursal,this.sucursalsForeignKey);

				sucursalBeanSwingJInternalFrameLocal.actualizarRelaciones(sucursalBeanSwingJInternalFrameLocal.sucursal);

				detanotacreditoLocal.setSucursal(sucursalBeanSwingJInternalFrameLocal.sucursal);

				this.addItemDefectoCombosForeignKeySucursal();
				this.cargarCombosFrameSucursalsForeignKey("Formulario");
				this.setActualSucursalForeignKey(sucursalBeanSwingJInternalFrameLocal.sucursal.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(EjercicioDetalleFormJInternalFrame.class)) {
				EjercicioBeanSwingJInternalFrame ejercicioBeanSwingJInternalFrameLocal=(EjercicioBeanSwingJInternalFrame) ((EjercicioDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				ejercicioBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoEjercicio(ejercicioBeanSwingJInternalFrameLocal.getejercicio(),true);
				ejercicioBeanSwingJInternalFrameLocal.actualizarLista(ejercicioBeanSwingJInternalFrameLocal.ejercicio,this.ejerciciosForeignKey);

				ejercicioBeanSwingJInternalFrameLocal.actualizarRelaciones(ejercicioBeanSwingJInternalFrameLocal.ejercicio);

				detanotacreditoLocal.setEjercicio(ejercicioBeanSwingJInternalFrameLocal.ejercicio);

				this.addItemDefectoCombosForeignKeyEjercicio();
				this.cargarCombosFrameEjerciciosForeignKey("Formulario");
				this.setActualEjercicioForeignKey(ejercicioBeanSwingJInternalFrameLocal.ejercicio.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(PeriodoDetalleFormJInternalFrame.class)) {
				PeriodoBeanSwingJInternalFrame periodoBeanSwingJInternalFrameLocal=(PeriodoBeanSwingJInternalFrame) ((PeriodoDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				periodoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoPeriodo(periodoBeanSwingJInternalFrameLocal.getperiodo(),true);
				periodoBeanSwingJInternalFrameLocal.actualizarLista(periodoBeanSwingJInternalFrameLocal.periodo,this.periodosForeignKey);

				periodoBeanSwingJInternalFrameLocal.actualizarRelaciones(periodoBeanSwingJInternalFrameLocal.periodo);

				detanotacreditoLocal.setPeriodo(periodoBeanSwingJInternalFrameLocal.periodo);

				this.addItemDefectoCombosForeignKeyPeriodo();
				this.cargarCombosFramePeriodosForeignKey("Formulario");
				this.setActualPeriodoForeignKey(periodoBeanSwingJInternalFrameLocal.periodo.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(AnioDetalleFormJInternalFrame.class)) {
				AnioBeanSwingJInternalFrame anioBeanSwingJInternalFrameLocal=(AnioBeanSwingJInternalFrame) ((AnioDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				anioBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoAnio(anioBeanSwingJInternalFrameLocal.getanio(),true);
				anioBeanSwingJInternalFrameLocal.actualizarLista(anioBeanSwingJInternalFrameLocal.anio,this.aniosForeignKey);

				anioBeanSwingJInternalFrameLocal.actualizarRelaciones(anioBeanSwingJInternalFrameLocal.anio);

				detanotacreditoLocal.setAnio(anioBeanSwingJInternalFrameLocal.anio);

				this.addItemDefectoCombosForeignKeyAnio();
				this.cargarCombosFrameAniosForeignKey("Formulario");
				this.setActualAnioForeignKey(anioBeanSwingJInternalFrameLocal.anio.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(MesDetalleFormJInternalFrame.class)) {
				MesBeanSwingJInternalFrame mesBeanSwingJInternalFrameLocal=(MesBeanSwingJInternalFrame) ((MesDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				mesBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoMes(mesBeanSwingJInternalFrameLocal.getmes(),true);
				mesBeanSwingJInternalFrameLocal.actualizarLista(mesBeanSwingJInternalFrameLocal.mes,this.messForeignKey);

				mesBeanSwingJInternalFrameLocal.actualizarRelaciones(mesBeanSwingJInternalFrameLocal.mes);

				detanotacreditoLocal.setMes(mesBeanSwingJInternalFrameLocal.mes);

				this.addItemDefectoCombosForeignKeyMes();
				this.cargarCombosFrameMessForeignKey("Formulario");
				this.setActualMesForeignKey(mesBeanSwingJInternalFrameLocal.mes.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(NotaCreditoDetalleFormJInternalFrame.class)) {
				NotaCreditoBeanSwingJInternalFrame notacreditoBeanSwingJInternalFrameLocal=(NotaCreditoBeanSwingJInternalFrame) ((NotaCreditoDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				notacreditoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoNotaCredito(notacreditoBeanSwingJInternalFrameLocal.getnotacredito(),true);
				notacreditoBeanSwingJInternalFrameLocal.actualizarLista(notacreditoBeanSwingJInternalFrameLocal.notacredito,this.notacreditosForeignKey);

				notacreditoBeanSwingJInternalFrameLocal.actualizarRelaciones(notacreditoBeanSwingJInternalFrameLocal.notacredito);

				detanotacreditoLocal.setNotaCredito(notacreditoBeanSwingJInternalFrameLocal.notacredito);

				this.addItemDefectoCombosForeignKeyNotaCredito();
				this.cargarCombosFrameNotaCreditosForeignKey("Formulario");
				this.setActualNotaCreditoForeignKey(notacreditoBeanSwingJInternalFrameLocal.notacredito.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(BodegaDetalleFormJInternalFrame.class)) {
				BodegaBeanSwingJInternalFrame bodegaBeanSwingJInternalFrameLocal=(BodegaBeanSwingJInternalFrame) ((BodegaDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				bodegaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoBodega(bodegaBeanSwingJInternalFrameLocal.getbodega(),true);
				bodegaBeanSwingJInternalFrameLocal.actualizarLista(bodegaBeanSwingJInternalFrameLocal.bodega,this.bodegasForeignKey);

				bodegaBeanSwingJInternalFrameLocal.actualizarRelaciones(bodegaBeanSwingJInternalFrameLocal.bodega);

				detanotacreditoLocal.setBodega(bodegaBeanSwingJInternalFrameLocal.bodega);

				this.addItemDefectoCombosForeignKeyBodega();
				this.cargarCombosFrameBodegasForeignKey("Formulario");
				this.setActualBodegaForeignKey(bodegaBeanSwingJInternalFrameLocal.bodega.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(ProductoDetalleFormJInternalFrame.class)) {
				ProductoBeanSwingJInternalFrame productoBeanSwingJInternalFrameLocal=(ProductoBeanSwingJInternalFrame) ((ProductoDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				productoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoProducto(productoBeanSwingJInternalFrameLocal.getproducto(),true);
				productoBeanSwingJInternalFrameLocal.actualizarLista(productoBeanSwingJInternalFrameLocal.producto,this.productosForeignKey);

				productoBeanSwingJInternalFrameLocal.actualizarRelaciones(productoBeanSwingJInternalFrameLocal.producto);

				detanotacreditoLocal.setProducto(productoBeanSwingJInternalFrameLocal.producto);

				this.addItemDefectoCombosForeignKeyProducto();
				this.cargarCombosFrameProductosForeignKey("Formulario");
				this.setActualProductoForeignKey(productoBeanSwingJInternalFrameLocal.producto.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(UnidadDetalleFormJInternalFrame.class)) {
				UnidadBeanSwingJInternalFrame unidadBeanSwingJInternalFrameLocal=(UnidadBeanSwingJInternalFrame) ((UnidadDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				unidadBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoUnidad(unidadBeanSwingJInternalFrameLocal.getunidad(),true);
				unidadBeanSwingJInternalFrameLocal.actualizarLista(unidadBeanSwingJInternalFrameLocal.unidad,this.unidadsForeignKey);

				unidadBeanSwingJInternalFrameLocal.actualizarRelaciones(unidadBeanSwingJInternalFrameLocal.unidad);

				detanotacreditoLocal.setUnidad(unidadBeanSwingJInternalFrameLocal.unidad);

				this.addItemDefectoCombosForeignKeyUnidad();
				this.cargarCombosFrameUnidadsForeignKey("Formulario");
				this.setActualUnidadForeignKey(unidadBeanSwingJInternalFrameLocal.unidad.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TipoDetaNotaCreditoDetalleFormJInternalFrame.class)) {
				TipoDetaNotaCreditoBeanSwingJInternalFrame tipodetanotacreditoBeanSwingJInternalFrameLocal=(TipoDetaNotaCreditoBeanSwingJInternalFrame) ((TipoDetaNotaCreditoDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				tipodetanotacreditoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTipoDetaNotaCredito(tipodetanotacreditoBeanSwingJInternalFrameLocal.gettipodetanotacredito(),true);
				tipodetanotacreditoBeanSwingJInternalFrameLocal.actualizarLista(tipodetanotacreditoBeanSwingJInternalFrameLocal.tipodetanotacredito,this.tipodetanotacreditosForeignKey);

				tipodetanotacreditoBeanSwingJInternalFrameLocal.actualizarRelaciones(tipodetanotacreditoBeanSwingJInternalFrameLocal.tipodetanotacredito);

				detanotacreditoLocal.setTipoDetaNotaCredito(tipodetanotacreditoBeanSwingJInternalFrameLocal.tipodetanotacredito);

				this.addItemDefectoCombosForeignKeyTipoDetaNotaCredito();
				this.cargarCombosFrameTipoDetaNotaCreditosForeignKey("Formulario");
				this.setActualTipoDetaNotaCreditoForeignKey(tipodetanotacreditoBeanSwingJInternalFrameLocal.tipodetanotacredito.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TipoDevolucionEmpresaDetalleFormJInternalFrame.class)) {
				TipoDevolucionEmpresaBeanSwingJInternalFrame tipodevolucionempresaBeanSwingJInternalFrameLocal=(TipoDevolucionEmpresaBeanSwingJInternalFrame) ((TipoDevolucionEmpresaDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				tipodevolucionempresaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTipoDevolucionEmpresa(tipodevolucionempresaBeanSwingJInternalFrameLocal.gettipodevolucionempresa(),true);
				tipodevolucionempresaBeanSwingJInternalFrameLocal.actualizarLista(tipodevolucionempresaBeanSwingJInternalFrameLocal.tipodevolucionempresa,this.tipodevolucionempresasForeignKey);

				tipodevolucionempresaBeanSwingJInternalFrameLocal.actualizarRelaciones(tipodevolucionempresaBeanSwingJInternalFrameLocal.tipodevolucionempresa);

				detanotacreditoLocal.setTipoDevolucionEmpresa(tipodevolucionempresaBeanSwingJInternalFrameLocal.tipodevolucionempresa);

				this.addItemDefectoCombosForeignKeyTipoDevolucionEmpresa();
				this.cargarCombosFrameTipoDevolucionEmpresasForeignKey("Formulario");
				this.setActualTipoDevolucionEmpresaForeignKey(tipodevolucionempresaBeanSwingJInternalFrameLocal.tipodevolucionempresa.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(CentroCostoDetalleFormJInternalFrame.class)) {
				CentroCostoBeanSwingJInternalFrame centrocostoBeanSwingJInternalFrameLocal=(CentroCostoBeanSwingJInternalFrame) ((CentroCostoDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				centrocostoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoCentroCosto(centrocostoBeanSwingJInternalFrameLocal.getcentrocosto(),true);
				centrocostoBeanSwingJInternalFrameLocal.actualizarLista(centrocostoBeanSwingJInternalFrameLocal.centrocosto,this.centrocostosForeignKey);

				centrocostoBeanSwingJInternalFrameLocal.actualizarRelaciones(centrocostoBeanSwingJInternalFrameLocal.centrocosto);

				detanotacreditoLocal.setCentroCosto(centrocostoBeanSwingJInternalFrameLocal.centrocosto);

				this.addItemDefectoCombosForeignKeyCentroCosto();
				this.cargarCombosFrameCentroCostosForeignKey("Formulario");
				this.setActualCentroCostoForeignKey(centrocostoBeanSwingJInternalFrameLocal.centrocosto.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(EmpaqueDetalleFormJInternalFrame.class)) {
				EmpaqueBeanSwingJInternalFrame empaqueBeanSwingJInternalFrameLocal=(EmpaqueBeanSwingJInternalFrame) ((EmpaqueDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				empaqueBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoEmpaque(empaqueBeanSwingJInternalFrameLocal.getempaque(),true);
				empaqueBeanSwingJInternalFrameLocal.actualizarLista(empaqueBeanSwingJInternalFrameLocal.empaque,this.empaquesForeignKey);

				empaqueBeanSwingJInternalFrameLocal.actualizarRelaciones(empaqueBeanSwingJInternalFrameLocal.empaque);

				detanotacreditoLocal.setEmpaque(empaqueBeanSwingJInternalFrameLocal.empaque);

				this.addItemDefectoCombosForeignKeyEmpaque();
				this.cargarCombosFrameEmpaquesForeignKey("Formulario");
				this.setActualEmpaqueForeignKey(empaqueBeanSwingJInternalFrameLocal.empaque.getId(),false,"Formulario");
			}
		
		}
	}
	
	public Boolean validarDetaNotaCreditoActual() throws Exception {
		Boolean estaValidado=false;
		this.inicializarInvalidValues();
		
		/*
		int intSelectedRow = this.jTableDatosDetaNotaCredito.getSelectedRow();
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.detanotacredito =(DetaNotaCredito) this.detanotacreditoLogic.getDetaNotaCreditos().toArray()[this.jTableDatosDetaNotaCredito.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
			this.detanotacredito =(DetaNotaCredito) this.detanotacreditos.toArray()[this.jTableDatosDetaNotaCredito.convertRowIndexToModel(intSelectedRow)];
		}
		//ARCHITECTURE
		*/
		
		this.invalidValues = detanotacreditoValidator.getInvalidValues(this.detanotacredito);
					
		if(this.invalidValues==null || this.invalidValues.length<=0) {
			estaValidado=true;
		} else {
			this.mostrarInvalidValues();	
		}
		
		return estaValidado;
	}
	
	public void actualizarLista(DetaNotaCredito detanotacredito,List<DetaNotaCredito> detanotacreditos) throws Exception {
		try	{		
			DetaNotaCreditoConstantesFunciones.actualizarLista(detanotacredito,detanotacreditos,this.detanotacreditoSessionBean.getEsGuardarRelacionado());		
		} catch(Exception e) {
			throw e;
		}
	}		
	
	public void actualizarSelectedLista(DetaNotaCredito detanotacredito,List<DetaNotaCredito> detanotacreditos) throws Exception {
		try	{			
			DetaNotaCreditoConstantesFunciones.actualizarSelectedLista(detanotacredito,detanotacreditos);
		} catch(Exception e) {
			throw e;
		}
	}	
	
	public Boolean tieneElementosSeleccionados() throws Exception {
		Boolean tiene=false;
		
		List<DetaNotaCredito> detanotacreditosLocal=null;
		
		try	{			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				detanotacreditosLocal=this.detanotacreditoLogic.getDetaNotaCreditos();
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
				detanotacreditosLocal=this.detanotacreditos;
			}
			//ARCHITECTURE
		
			for(DetaNotaCredito detanotacreditoLocal:detanotacreditosLocal) {
				if(this.permiteMantenimiento(detanotacreditoLocal) && detanotacreditoLocal.getIsSelected()) {
					tiene=true;
					break;
				}
			}
		} catch(Exception e) {
			throw e;
		}
		
		return tiene;
	}			
	
	public void mostrarInvalidValues() throws Exception {
		String sMensaje="";
				
		for (InvalidValue invalidValue : this.invalidValues) {
			sMensaje+="\r\n"+DetaNotaCreditoConstantesFunciones.getDetaNotaCreditoLabelDesdeNombre(invalidValue.getPropertyName())+"->"+invalidValue.getMessage();
			
			//MOSTRAR CAMPOS INVALIDOS
			if(invalidValue.getPropertyName().equals(DetaNotaCreditoConstantesFunciones.IDEMPRESA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetaNotaCredito.jLabelid_empresaDetaNotaCredito,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetaNotaCreditoConstantesFunciones.IDSUCURSAL)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetaNotaCredito.jLabelid_sucursalDetaNotaCredito,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetaNotaCreditoConstantesFunciones.IDEJERCICIO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetaNotaCredito.jLabelid_ejercicioDetaNotaCredito,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetaNotaCreditoConstantesFunciones.IDPERIODO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetaNotaCredito.jLabelid_periodoDetaNotaCredito,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetaNotaCreditoConstantesFunciones.IDANIO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetaNotaCredito.jLabelid_anioDetaNotaCredito,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetaNotaCreditoConstantesFunciones.IDMES)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetaNotaCredito.jLabelid_mesDetaNotaCredito,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetaNotaCreditoConstantesFunciones.IDNOTACREDITO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetaNotaCredito.jLabelid_nota_creditoDetaNotaCredito,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetaNotaCreditoConstantesFunciones.IDBODEGA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetaNotaCredito.jLabelid_bodegaDetaNotaCredito,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetaNotaCreditoConstantesFunciones.IDPRODUCTO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetaNotaCredito.jLabelid_productoDetaNotaCredito,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetaNotaCreditoConstantesFunciones.IDUNIDAD)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetaNotaCredito.jLabelid_unidadDetaNotaCredito,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetaNotaCreditoConstantesFunciones.IDTIPODETANOTACREDITO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetaNotaCredito.jLabelid_tipo_deta_nota_creditoDetaNotaCredito,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetaNotaCreditoConstantesFunciones.IDTIPODEVOLUCIONEMPRESA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetaNotaCredito.jLabelid_tipo_devolucion_empresaDetaNotaCredito,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetaNotaCreditoConstantesFunciones.DESCRIPCION)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetaNotaCredito.jLabeldescripcionDetaNotaCredito,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetaNotaCreditoConstantesFunciones.CANTIDAD)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetaNotaCredito.jLabelcantidadDetaNotaCredito,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetaNotaCreditoConstantesFunciones.PRECIO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetaNotaCredito.jLabelprecioDetaNotaCredito,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetaNotaCreditoConstantesFunciones.MONTO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetaNotaCredito.jLabelmontoDetaNotaCredito,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetaNotaCreditoConstantesFunciones.COSTO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetaNotaCredito.jLabelcostoDetaNotaCredito,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetaNotaCreditoConstantesFunciones.DESCUENTO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetaNotaCredito.jLabeldescuentoDetaNotaCredito,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetaNotaCreditoConstantesFunciones.DESCUENTO2)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetaNotaCredito.jLabeldescuento2DetaNotaCredito,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetaNotaCreditoConstantesFunciones.IMPUESTO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetaNotaCredito.jLabelimpuestoDetaNotaCredito,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetaNotaCreditoConstantesFunciones.PORCENIVA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetaNotaCredito.jLabelporcen_ivaDetaNotaCredito,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetaNotaCreditoConstantesFunciones.PORCENDESCUEN)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetaNotaCredito.jLabelporcen_descuenDetaNotaCredito,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetaNotaCreditoConstantesFunciones.PORCENICE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetaNotaCredito.jLabelporcen_iceDetaNotaCredito,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetaNotaCreditoConstantesFunciones.SUBTOTAL)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetaNotaCredito.jLabelsub_totalDetaNotaCredito,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetaNotaCreditoConstantesFunciones.TOTAL)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetaNotaCredito.jLabeltotalDetaNotaCredito,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetaNotaCreditoConstantesFunciones.IDCENTROCOSTO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetaNotaCredito.jLabelid_centro_costoDetaNotaCredito,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetaNotaCreditoConstantesFunciones.IDEMPAQUE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetaNotaCredito.jLabelid_empaqueDetaNotaCredito,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetaNotaCreditoConstantesFunciones.INCLUYEIMPUESTO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetaNotaCredito.jLabelincluye_impuestoDetaNotaCredito,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetaNotaCreditoConstantesFunciones.FECHAEMISION)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetaNotaCredito.jLabelfecha_emisionDetaNotaCredito,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetaNotaCreditoConstantesFunciones.CODIGOLOTE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetaNotaCredito.jLabelcodigo_loteDetaNotaCredito,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetaNotaCreditoConstantesFunciones.NUMEROCAJA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetaNotaCredito.jLabelnumero_cajaDetaNotaCredito,invalidValue.getMessage());}
        }
		
		
		if(!sMensaje.equals("")) {
			//JOptionPane.showMessageDialog(this,sMensaje,"VALIDACION ",JOptionPane.ERROR_MESSAGE);
			throw new Exception(sMensaje);			
		}
		
		/*
		System.out.println(invalidValue);
        System.out.println("message=" + invalidValue.getMessage());
        System.out.println("propertyName=" + invalidValue.getPropertyName());
        System.out.println("propertyPath=" + invalidValue.getPropertyPath());
        System.out.println("value=" + invalidValue.getValue());
        */
	}		
	
	public void inicializarInvalidValues() throws Exception {
		String sMensaje="";	
		
		if(this.jInternalFrameDetalleFormDetaNotaCredito!=null) {
		
		//MOSTRAR CAMPOS INVALIDOS
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetaNotaCredito.jLabelid_empresaDetaNotaCredito,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetaNotaCredito.jLabelid_sucursalDetaNotaCredito,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetaNotaCredito.jLabelid_ejercicioDetaNotaCredito,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetaNotaCredito.jLabelid_periodoDetaNotaCredito,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetaNotaCredito.jLabelid_anioDetaNotaCredito,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetaNotaCredito.jLabelid_mesDetaNotaCredito,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetaNotaCredito.jLabelid_nota_creditoDetaNotaCredito,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetaNotaCredito.jLabelid_bodegaDetaNotaCredito,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetaNotaCredito.jLabelid_productoDetaNotaCredito,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetaNotaCredito.jLabelid_unidadDetaNotaCredito,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetaNotaCredito.jLabelid_tipo_deta_nota_creditoDetaNotaCredito,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetaNotaCredito.jLabelid_tipo_devolucion_empresaDetaNotaCredito,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetaNotaCredito.jLabeldescripcionDetaNotaCredito,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetaNotaCredito.jLabelcantidadDetaNotaCredito,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetaNotaCredito.jLabelprecioDetaNotaCredito,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetaNotaCredito.jLabelmontoDetaNotaCredito,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetaNotaCredito.jLabelcostoDetaNotaCredito,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetaNotaCredito.jLabeldescuentoDetaNotaCredito,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetaNotaCredito.jLabeldescuento2DetaNotaCredito,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetaNotaCredito.jLabelimpuestoDetaNotaCredito,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetaNotaCredito.jLabelporcen_ivaDetaNotaCredito,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetaNotaCredito.jLabelporcen_descuenDetaNotaCredito,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetaNotaCredito.jLabelporcen_iceDetaNotaCredito,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetaNotaCredito.jLabelsub_totalDetaNotaCredito,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetaNotaCredito.jLabeltotalDetaNotaCredito,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetaNotaCredito.jLabelid_centro_costoDetaNotaCredito,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetaNotaCredito.jLabelid_empaqueDetaNotaCredito,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetaNotaCredito.jLabelincluye_impuestoDetaNotaCredito,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetaNotaCredito.jLabelfecha_emisionDetaNotaCredito,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetaNotaCredito.jLabelcodigo_loteDetaNotaCredito,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetaNotaCredito.jLabelnumero_cajaDetaNotaCredito,"");
		
		}
	}
	
	
	
	public void actualizarObjetoPadreFk(String sTipo)  throws Exception {
		if(sTipo.equals("XXXAuxiliar")) {
		
		}
		
	}
	
	public void nuevoPreparar() throws Exception {
		this.nuevoPreparar(false);
	}
	
	public void nuevoPreparar(Boolean esNuevoGuardarCambios) throws Exception {
		this.iIdNuevoDetaNotaCredito--;	
		
		
		this.detanotacreditoAux=new DetaNotaCredito();
		
		this.detanotacreditoAux.setId(this.iIdNuevoDetaNotaCredito);
		this.detanotacreditoAux.setIsChanged(true);
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.detanotacreditoLogic.getDetaNotaCreditos().add(this.detanotacreditoAux);
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			this.detanotacreditos.add(this.detanotacreditoAux);
		}
		//ARCHITECTURE
		
		this.detanotacredito=this.detanotacreditoAux;
		
		if(DetaNotaCreditoJInternalFrame.ISBINDING_MANUAL_TABLA) {
			this.setVariablesObjetoActualToFormularioDetaNotaCredito(this.detanotacredito);
			this.setVariablesObjetoActualToFormularioForeignKeyDetaNotaCredito(this.detanotacredito);
		}
				
		//this.setDefaultControlesDetaNotaCredito();
		
		this.inicializarInvalidValues();
				
		//SELECCIONA ITEM DEFECTO-->SET O SELECTED INDEX
		this.setItemDefectoCombosForeignKeyDetaNotaCredito();
		
		
		//INICIALIZA VARIABLES COMBOS GLOBALES A FORMULARIO(ParametroGeneralUsuario)
		this.setVariablesGlobalesCombosForeignKeyDetaNotaCredito();
		
		//INICIALIZA VARIABLES COMBOS GLOBALES AUXILIARES A FORMULARIO(Anio,Mes)
		//this.setVariablesGlobalesAuxiliaresCombosForeignKeyDetaNotaCredito();
		
		//SI TIENE FOREIGN KEY CON CAMPO esDefecto=true, SE ACTUALIZA A OBJETO ACTUAL
		this.setVariablesForeignKeyObjetoBeanDefectoActualToObjetoActualDetaNotaCredito(this.detanotacreditoBean,this.detanotacredito,false,false);
		
		//ACTUALIZA VALORES PARA EL OBJETO ACTUAL ANTES DE ENVIARLO A ACTUALIZAR
		this.setVariablesFormularioToObjetoActualForeignKeysDetaNotaCredito(this.detanotacredito);
				
		ArrayList<Classe> classes=new ArrayList<Classe>();
		
		if(this.jInternalFrameParent!=null) {
			this.jInternalFrameParent.actualizarObjetoPadreFk(DetaNotaCreditoConstantesFunciones.CLASSNAME);
		}	
		
		
		if(this.detanotacreditoSessionBean.getConGuardarRelaciones()) {
			classes=DetaNotaCreditoConstantesFunciones.getClassesRelationshipsOfDetaNotaCredito(new ArrayList<Classe>(),DeepLoadType.NONE);
		}
		
		this.classesActual=new ArrayList<Classe>();
		this.classesActual.addAll(classes);
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {						
			this.detanotacreditoReturnGeneral=detanotacreditoLogic.procesarEventosDetaNotaCreditosWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,EventoGlobalTipo.FORM_RECARGAR,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.detanotacreditoLogic.getDetaNotaCreditos(),this.detanotacredito,this.detanotacreditoParameterGeneral,this.isEsNuevoDetaNotaCredito,classes);//this.detanotacreditoLogic.getDetaNotaCredito()
						
		} else if(Constantes.ISUSAEJBREMOTE) {
						
		} else if(Constantes.ISUSAEJBHOME) {
		}
		//ARCHITECTURE
		
		//ACTUALIZA VARIABLES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
		//this.setVariablesObjetoReturnGeneralToBeanDetaNotaCredito(this.detanotacreditoReturnGeneral,this.detanotacreditoBean,false);
		
		if(this.detanotacreditoReturnGeneral.getConRecargarPropiedades()) {
			//INICIALIZA VARIABLES COMBOS NORMALES (FK)
			this.setVariablesObjetoActualToFormularioForeignKeyDetaNotaCredito(this.detanotacreditoReturnGeneral.getDetaNotaCredito());
			
			//INICIALIZA VARIABLES NORMALES A FORMULARIO(SIN FK)
			this.setVariablesObjetoActualToFormularioDetaNotaCredito(this.detanotacreditoReturnGeneral.getDetaNotaCredito());
		}
		
		if(this.detanotacreditoReturnGeneral.getConRecargarRelaciones()) {
			//INICIALIZA VARIABLES RELACIONES A FORMULARIO
			this.setVariablesRelacionesObjetoActualToFormularioDetaNotaCredito(this.detanotacreditoReturnGeneral.getDetaNotaCredito(),classes);//this.detanotacreditoBean);	
		}
			
		//ACTUALIZA VARIABLES FORMULARIO A OBJETO ACTUAL (PARA NUEVO TABLA O GUARDAR CAMBIOS
		if(esNuevoGuardarCambios) {
			this.setVariablesFormularioToObjetoActualDetaNotaCredito(this.detanotacredito,false);
		}
		
		//INICIALIZA VARIABLES COMBOS DEFAULT DEL PROYECTO(|DEFAULT para FK)
		//this.setVariablesDefaultCombosForeignKeyDetaNotaCredito();
		
		//INICIALIZA VARIABLES COMBOS PARAMETRO DEL PROYECTO(|VALORPARAM Era para ParametroModulo, ahora en logic)
		//this.setVariablesParametroCombosForeignKeyDetaNotaCredito();						
		
		if(!esNuevoGuardarCambios) {
			//INICIALIZA VARIABLES POR OPCION MENU
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			DetaNotaCreditoBeanSwingJInternalFrameAdditional.RecargarFormDetaNotaCredito(this,"NUEVO_PREPARAR","",this.arrDatoGeneral);
		
			//NO FUNCIONA BINDINGS			
			this.inicializarActualizarBindingDetaNotaCredito(false);
						
			if(detanotacreditoSessionBean.getConGuardarRelaciones()) {
				//DEBERIA YA ESTAR CARGADO LOS COMBOS Y SI SE NECESITA ALGO MAS SE DEBE CREAR FUNCION LIMITADA
				//SI DEBE TRAER Y RESETEAR TABLA
								
			}
				
			//SI ES MANUAL
			if(DetaNotaCreditoJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualDetaNotaCredito();
			}
			
			this.actualizarVisualTableDatosDetaNotaCredito();
			
			this.jTableDatosDetaNotaCredito.setRowSelectionInterval(this.getIndiceNuevoDetaNotaCredito(), this.getIndiceNuevoDetaNotaCredito());
			
			this.seleccionarFilaTablaDetaNotaCreditoActual();
						
			this.actualizarEstadoCeldasBotonesDetaNotaCredito("a", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
		
		}		
	}
	
	public void habilitarDeshabilitarControlesDetaNotaCredito(Boolean isHabilitar) throws Exception {
		
		this.jInternalFrameDetalleFormDetaNotaCredito.jTextAreadescripcionDetaNotaCredito.setEnabled(isHabilitar && this.detanotacreditoConstantesFunciones.activardescripcionDetaNotaCredito);
		this.jInternalFrameDetalleFormDetaNotaCredito.jTextFieldcantidadDetaNotaCredito.setEnabled(isHabilitar && this.detanotacreditoConstantesFunciones.activarcantidadDetaNotaCredito);
		this.jInternalFrameDetalleFormDetaNotaCredito.jTextFieldprecioDetaNotaCredito.setEnabled(isHabilitar && this.detanotacreditoConstantesFunciones.activarprecioDetaNotaCredito);
		this.jInternalFrameDetalleFormDetaNotaCredito.jTextFieldmontoDetaNotaCredito.setEnabled(isHabilitar && this.detanotacreditoConstantesFunciones.activarmontoDetaNotaCredito);
		this.jInternalFrameDetalleFormDetaNotaCredito.jTextFieldcostoDetaNotaCredito.setEnabled(isHabilitar && this.detanotacreditoConstantesFunciones.activarcostoDetaNotaCredito);
		this.jInternalFrameDetalleFormDetaNotaCredito.jTextFielddescuentoDetaNotaCredito.setEnabled(isHabilitar && this.detanotacreditoConstantesFunciones.activardescuentoDetaNotaCredito);
		this.jInternalFrameDetalleFormDetaNotaCredito.jTextFielddescuento2DetaNotaCredito.setEnabled(isHabilitar && this.detanotacreditoConstantesFunciones.activardescuento2DetaNotaCredito);
		this.jInternalFrameDetalleFormDetaNotaCredito.jTextFieldimpuestoDetaNotaCredito.setEnabled(isHabilitar && this.detanotacreditoConstantesFunciones.activarimpuestoDetaNotaCredito);
		this.jInternalFrameDetalleFormDetaNotaCredito.jTextFieldporcen_ivaDetaNotaCredito.setEnabled(isHabilitar && this.detanotacreditoConstantesFunciones.activarporcen_ivaDetaNotaCredito);
		this.jInternalFrameDetalleFormDetaNotaCredito.jTextFieldporcen_descuenDetaNotaCredito.setEnabled(isHabilitar && this.detanotacreditoConstantesFunciones.activarporcen_descuenDetaNotaCredito);
		this.jInternalFrameDetalleFormDetaNotaCredito.jTextFieldporcen_iceDetaNotaCredito.setEnabled(isHabilitar && this.detanotacreditoConstantesFunciones.activarporcen_iceDetaNotaCredito);
		this.jInternalFrameDetalleFormDetaNotaCredito.jTextFieldsub_totalDetaNotaCredito.setEnabled(isHabilitar && this.detanotacreditoConstantesFunciones.activarsub_totalDetaNotaCredito);
		this.jInternalFrameDetalleFormDetaNotaCredito.jTextFieldtotalDetaNotaCredito.setEnabled(isHabilitar && this.detanotacreditoConstantesFunciones.activartotalDetaNotaCredito);
		this.jInternalFrameDetalleFormDetaNotaCredito.jCheckBoxincluye_impuestoDetaNotaCredito.setEnabled(isHabilitar && this.detanotacreditoConstantesFunciones.activarincluye_impuestoDetaNotaCredito);
		this.jInternalFrameDetalleFormDetaNotaCredito.jDateChooserfecha_emisionDetaNotaCredito.setEnabled(isHabilitar && this.detanotacreditoConstantesFunciones.activarfecha_emisionDetaNotaCredito);
		this.jInternalFrameDetalleFormDetaNotaCredito.jTextFieldcodigo_loteDetaNotaCredito.setEnabled(isHabilitar && this.detanotacreditoConstantesFunciones.activarcodigo_loteDetaNotaCredito);
		this.jInternalFrameDetalleFormDetaNotaCredito.jTextFieldnumero_cajaDetaNotaCredito.setEnabled(isHabilitar && this.detanotacreditoConstantesFunciones.activarnumero_cajaDetaNotaCredito);	
		//
		this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_empresaDetaNotaCredito.setEnabled(isHabilitar && this.detanotacreditoConstantesFunciones.activarid_empresaDetaNotaCredito);//
		this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_sucursalDetaNotaCredito.setEnabled(isHabilitar && this.detanotacreditoConstantesFunciones.activarid_sucursalDetaNotaCredito);//
		this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_ejercicioDetaNotaCredito.setEnabled(isHabilitar && this.detanotacreditoConstantesFunciones.activarid_ejercicioDetaNotaCredito);//
		this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_periodoDetaNotaCredito.setEnabled(isHabilitar && this.detanotacreditoConstantesFunciones.activarid_periodoDetaNotaCredito);//
		this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_anioDetaNotaCredito.setEnabled(isHabilitar && this.detanotacreditoConstantesFunciones.activarid_anioDetaNotaCredito);//
		this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_mesDetaNotaCredito.setEnabled(isHabilitar && this.detanotacreditoConstantesFunciones.activarid_mesDetaNotaCredito);
		this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_nota_creditoDetaNotaCredito.setEnabled(isHabilitar && this.detanotacreditoConstantesFunciones.activarid_nota_creditoDetaNotaCredito);
		this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_bodegaDetaNotaCredito.setEnabled(isHabilitar && this.detanotacreditoConstantesFunciones.activarid_bodegaDetaNotaCredito);
		this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_productoDetaNotaCredito.setEnabled(isHabilitar && this.detanotacreditoConstantesFunciones.activarid_productoDetaNotaCredito);
		this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_unidadDetaNotaCredito.setEnabled(isHabilitar && this.detanotacreditoConstantesFunciones.activarid_unidadDetaNotaCredito);
		this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_tipo_deta_nota_creditoDetaNotaCredito.setEnabled(isHabilitar && this.detanotacreditoConstantesFunciones.activarid_tipo_deta_nota_creditoDetaNotaCredito);
		this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_tipo_devolucion_empresaDetaNotaCredito.setEnabled(isHabilitar && this.detanotacreditoConstantesFunciones.activarid_tipo_devolucion_empresaDetaNotaCredito);
		this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_centro_costoDetaNotaCredito.setEnabled(isHabilitar && this.detanotacreditoConstantesFunciones.activarid_centro_costoDetaNotaCredito);
		this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_empaqueDetaNotaCredito.setEnabled(isHabilitar && this.detanotacreditoConstantesFunciones.activarid_empaqueDetaNotaCredito);
	};
	
	public void setDefaultControlesDetaNotaCredito() throws Exception {
			
	};
	
	
	public void habilitarDeshabilitarTipoMantenimientoDetaNotaCredito(Boolean esRelaciones) throws Exception {
		if(esRelaciones) {
			//this.detanotacreditoSessionBean.setConGuardarRelaciones(true);			
			this.detanotacreditoSessionBean.setEstaModoGuardarRelaciones(true);				
			this.jInternalFrameDetalleFormDetaNotaCredito.jTabbedPaneRelacionesDetaNotaCredito.setVisible(true);
			
					
		} else {
			//this.detanotacreditoSessionBean.setConGuardarRelaciones(false);			
			this.detanotacreditoSessionBean.setEstaModoGuardarRelaciones(false);						
			this.jInternalFrameDetalleFormDetaNotaCredito.jTabbedPaneRelacionesDetaNotaCredito.setVisible(false);
			
			
		}
	};
	
	public int getIndiceNuevoDetaNotaCredito() throws Exception {
		int iIndice=0;
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(DetaNotaCredito detanotacreditoAux:this.detanotacreditoLogic.getDetaNotaCreditos()) {
				if(detanotacreditoAux.getId().equals(this.iIdNuevoDetaNotaCredito)) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(DetaNotaCredito detanotacreditoAux:this.detanotacreditos) {
				if(detanotacreditoAux.getId().equals(this.iIdNuevoDetaNotaCredito)) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
			iIndice=iIndice-1;
		}
		
		return iIndice;
	}
	
	public int getIndiceActualDetaNotaCredito(DetaNotaCredito detanotacredito,Integer iIndiceActual) throws Exception {
		Integer iIndice=0;
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(DetaNotaCredito detanotacreditoAux:this.detanotacreditoLogic.getDetaNotaCreditos()) {
				if(detanotacreditoAux.getId().equals(detanotacredito.getId())) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(DetaNotaCredito detanotacreditoAux:this.detanotacreditos) {
				if(detanotacreditoAux.getId().equals(detanotacredito.getId())) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
			iIndice=iIndiceActual;
		}
		
		return iIndice;
	}
	
	public void setCamposBaseDesdeOriginalDetaNotaCredito(DetaNotaCredito detanotacreditoOriginal) throws Exception {
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(DetaNotaCredito detanotacreditoAux:this.detanotacreditoLogic.getDetaNotaCreditos()) {
				if(detanotacreditoAux.getDetaNotaCreditoOriginal().getId().equals(detanotacreditoOriginal.getId())) {
					existe=true;
					detanotacreditoOriginal.setId(detanotacreditoAux.getId());
					detanotacreditoOriginal.setVersionRow(detanotacreditoAux.getVersionRow());
					break;
				}
				
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(DetaNotaCredito detanotacreditoAux:this.detanotacreditos) {
				if(detanotacreditoAux.getDetaNotaCreditoOriginal().getId().equals(detanotacreditoOriginal.getId())) {
					existe=true;
					detanotacreditoOriginal.setId(detanotacreditoAux.getId());
					detanotacreditoOriginal.setVersionRow(detanotacreditoAux.getVersionRow());
					break;
				}				
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
		}
	}
	
	public void cancelarNuevosDetaNotaCredito(Boolean esParaCancelar) throws Exception {
		detanotacreditosAux=new ArrayList<DetaNotaCredito>();
		detanotacreditoAux=new DetaNotaCredito();
		
		if(!this.detanotacreditoSessionBean.getEsGuardarRelacionado()) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				for(DetaNotaCredito detanotacreditoAux:this.detanotacreditoLogic.getDetaNotaCreditos()) {
					if(detanotacreditoAux.getId()<0) {
						detanotacreditosAux.add(detanotacreditoAux);
					}		
				}
				this.iIdNuevoDetaNotaCredito=0L;
				this.detanotacreditoLogic.getDetaNotaCreditos().removeAll(detanotacreditosAux);
					
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(DetaNotaCredito detanotacreditoAux:this.detanotacreditos) {
					if(detanotacreditoAux.getId()<0) {
						detanotacreditosAux.add(detanotacreditoAux);
					}		
				}
				this.iIdNuevoDetaNotaCredito=0L;
				this.detanotacreditos.removeAll(detanotacreditosAux);
			}	
		} else {			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				if(esParaCancelar && this.isEsNuevoDetaNotaCredito 
					&& this.detanotacreditoLogic.getDetaNotaCreditos().size()>0
					) {
					detanotacreditoAux=this.detanotacreditoLogic.getDetaNotaCreditos().get(this.detanotacreditoLogic.getDetaNotaCreditos().size() - 1);
				
					if(detanotacreditoAux.getId()<0) {
						this.detanotacreditoLogic.getDetaNotaCreditos().remove(detanotacreditoAux);
					}
				}
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				if(esParaCancelar && this.isEsNuevoDetaNotaCredito && this.detanotacreditos.size()>0) {
					detanotacreditoAux=this.detanotacreditos.get(this.detanotacreditos.size() - 1);
				
					if(detanotacreditoAux.getId()<0) {
						this.detanotacreditos.remove(detanotacreditoAux);
					}
				}
			}	
		}
	}
	
	public void cancelarNuevoDetaNotaCredito(Boolean esParaCancelar) throws Exception {
		if(Constantes.ISUSAEJBLOGICLAYER) {
			if(detanotacredito.getId()<0) {
				this.detanotacreditoLogic.getDetaNotaCreditos().remove(this.detanotacredito);
			}					
		} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
			if(detanotacredito.getId()<0) {
				this.detanotacreditos.remove(this.detanotacredito);
			}
		}			
	}
	
	public void setEstadosInicialesDetaNotaCredito(List<DetaNotaCredito> detanotacreditosAux) throws Exception {
		DetaNotaCreditoConstantesFunciones.setEstadosInicialesDetaNotaCredito(detanotacreditosAux);
	}
	
	public void setEstadosInicialesDetaNotaCredito(DetaNotaCredito detanotacreditoAux) throws Exception {
		DetaNotaCreditoConstantesFunciones.setEstadosInicialesDetaNotaCredito(detanotacreditoAux);		
	}
	
	public void nuevo() throws Exception {
		try	{
			//ESTA VALIDADO EN FUNCION ACTUALIZAR
			//if(this.validarDetaNotaCreditoActual()) {
				this.ejecutarMantenimiento(MaintenanceType.NUEVO);
				
				this.actualizarEstadoCeldasBotonesDetaNotaCredito("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
				
			//}
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void actualizar() throws Exception {
		try	{
			if(this.validarDetaNotaCreditoActual()) {
				if(!this.isEsNuevoDetaNotaCredito) {
					this.ejecutarMantenimiento(MaintenanceType.ACTUALIZAR);
					
					this.actualizarEstadoCeldasBotonesDetaNotaCredito("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
					
				} else {					
					this.nuevo();
					this.isEsNuevoDetaNotaCredito=false;
				}
				
				//SE CANCELA AL FINAL DEL PROCESO JBUTTONACTUALIZAR
				//this.cancelar(false);
			}		
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void eliminar() throws Exception {
		try	{	
			if(this.validarDetaNotaCreditoActual()) {
				if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE ELIMINAR EL/LA Deta Nota Credito ?", "MANTENIMIENTO DE Deta Nota Credito", JOptionPane.OK_CANCEL_OPTION) == 0) {
					this.ejecutarMantenimiento(MaintenanceType.ELIMINAR);			
					this.actualizarEstadoCeldasBotonesDetaNotaCredito("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
				}
			
			}
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void guardarCambios() throws Exception {
		try	{
			this.ejecutarMantenimiento(MaintenanceType.GUARDARCAMBIOS);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarAsignar(DetaNotaCredito detanotacredito) throws Exception {
		DetaNotaCreditoConstantesFunciones.seleccionarAsignar(this.detanotacredito,detanotacredito);
	}
	
	public void seleccionar() throws Exception {
		try	{
			//ACTUALIZO EL PERMISO ACTUALIZAR CON EL PERMISO ACTUALIZAR ORIGINAL ESTE PERMISO SE UTILIZA PARA EL NUEVO TAMBIEN
			this.isPermisoActualizarDetaNotaCredito=this.isPermisoActualizarOriginalDetaNotaCredito;
			
			
			this.seleccionarAsignar(detanotacredito);
			
			

			idProductoActual=detanotacredito.getid_producto();
			this.seleccionarProductoActual();

			idCentroCostoActual=detanotacredito.getid_centro_costo();
			this.seleccionarCentroCostoActual();
			
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			DetaNotaCreditoConstantesFunciones.quitarEspaciosDetaNotaCredito(this.detanotacredito,this.arrDatoGeneral);
			
			
			this.actualizarEstadoCeldasBotonesDetaNotaCredito("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarBusqueda(Long id) throws Exception {
		try	{
			this.detanotacreditoSessionBean.setsFuncionBusquedaRapida(this.detanotacreditoSessionBean.getsFuncionBusquedaRapida().replace("TO_REPLACE", id.toString()));
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);
		}
	}
	
	
	//BUSQUEDA INTERNA FK
	public void seleccionarProductoActual() throws Exception {
		try	{
			Producto productoAux=new Producto();

			if(this.idProductoActual != null && this.idProductoActual>0) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					productoLogic.getEntityWithConnection(this.idProductoActual);
					productoAux= productoLogic.getProducto();
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE

				productosForeignKey=new ArrayList<Producto>();
				productosForeignKey.add(productoAux);
			}

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}
	public void seleccionarCentroCostoActual() throws Exception {
		try	{
			CentroCosto centrocostoAux=new CentroCosto();

			if(this.idCentroCostoActual != null && this.idCentroCostoActual>0) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					centrocostoLogic.getEntityWithConnection(this.idCentroCostoActual);
					centrocostoAux= centrocostoLogic.getCentroCosto();
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE

				centrocostosForeignKey=new ArrayList<CentroCosto>();
				centrocostosForeignKey.add(centrocostoAux);
			}

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}
	
	public void cancelar() throws Exception {
		this.cancelar(true);
	}
	
	public void cancelar(Boolean esParaCancelar) throws Exception {
		try {
														
			
			//SE UTILIZA COLUMNA ELIMINAR EN TABLA
			if(this.isEsNuevoDetaNotaCredito) {
				//NO CANCELA TODOS NUEVOS POR FUNCIONALIDAD GUARDAR CAMBIOS
				//this.cancelarNuevosDetaNotaCredito(esParaCancelar);				
				this.cancelarNuevoDetaNotaCredito(esParaCancelar);								
			}
			
			this.detanotacredito=new DetaNotaCredito();
			
			this.inicializarDetaNotaCredito();
			
			this.actualizarEstadoCeldasBotonesDetaNotaCredito("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void inicializarDetaNotaCredito() throws Exception {
		try {
			DetaNotaCreditoConstantesFunciones.inicializarDetaNotaCredito(this.detanotacredito);
			
			} catch(Exception e) {
			throw e;
		}
	}
	
	public void anteriores()throws Exception {
		try	{
			//this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina-this.iNumeroPaginacion;
			
			if(this.iNumeroPaginacionPagina-this.iNumeroPaginacion<this.iNumeroPaginacion) {
				this.iNumeroPaginacionPagina=0;		
			} else {
				this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina-this.iNumeroPaginacion;
			}
			
			this.procesarBusqueda(this.sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void siguientes()throws Exception {
		try	{			
			if(this.detanotacreditoLogic.getDetaNotaCreditos().size()>0) {
					
				this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina+this.iNumeroPaginacion;
			}
				
			this.procesarBusqueda(this.sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);
		}
	}		
	
	public void generarReporteDetaNotaCreditos(String sAccionBusqueda,List<DetaNotaCredito> detanotacreditosParaReportes) throws Exception {
		//HttpSession httpSession = httpServletRequest.getSession();
		Long iIdUsuarioSesion=0L;	
		
		
		if(usuarioActual==null) {
			this.usuarioActual=new Usuario();
		}
		
		iIdUsuarioSesion=usuarioActual.getId();
		
		String sPathReportes="";
		
		InputStream reportFile=null;
		InputStream imageFile=null;
			
		imageFile=AuxiliarImagenes.class.getResourceAsStream("LogoReporte.jpg");			
				
		
		String sPathReporteFinal="";
		
		if(!esReporteAccionProceso) {
			if(!this.sTipoReporte.equals("RELACIONES")) {//!isEsReporteRelaciones
				if(!this.esReporteDinamico) {
					sPathReporteFinal="DetaNotaCredito"+this.sTipoReporteExtra+"Design.jasper";
					reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);	
				} else {
					sPathReporteFinal=this.sPathReporteDinamico;
					reportFile = new FileInputStream(sPathReporteFinal);
				}
			} else {
				sPathReporteFinal="DetaNotaCreditoMasterRelaciones"+this.sTipoReporteExtra+"Design.jasper";
				reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);
				//sPathReportes=reportFile.getPath().replace("DetaNotaCreditoMasterRelacionesDesign.jasper", "");
			}
		} else {
				sPathReporteFinal="DetaNotaCredito"+this.sTipoReporteExtra+"Design.jasper";
				reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);	
		}
		
		if(reportFile==null) {
			throw new JRRuntimeException(sPathReporteFinal+" no existe");
		}
		
		String sUsuario="";
		
		if(usuarioActual!=null) {
			sUsuario=usuarioActual.getuser_name();
		}
		
		Map<String, Object> parameters = new HashMap<String, Object>();
		parameters.put("usuario", sUsuario);
		
		parameters.put("titulo", Funciones.GetTituloSistemaReporte(this.parametroGeneralSg,this.moduloActual,this.usuarioActual));
		parameters.put("subtitulo", "Reporte De  Deta Nota Creditos");		
		parameters.put("busquedapor", DetaNotaCreditoConstantesFunciones.getNombreIndice(sAccionBusqueda)+sDetalleReporte);
		
		
		if(this.sTipoReporte.equals("RELACIONES")) {//isEsReporteRelaciones
			parameters.put("SUBREPORT_DIR", sPathReportes);
		}
		
		parameters.put("con_grafico", this.conGraficoReporte);
		
		JasperReport jasperReport = (JasperReport)JRLoader.loadObject(reportFile);
				
		this.cargarDatosCliente();
		
		ArrayList<Classe> classes=new ArrayList<Classe>();		
		
		if(this.sTipoReporte.equals("RELACIONES")) {//isEsReporteRelaciones
			
			
		} else {
			//FK DEBERIA TRAERSE DE ANTEMANO
			
		}
								
		
		//CLASSES PARA REPORTES OBJETOS RELACIONADOS
		if(!this.sTipoReporte.equals("RELACIONES")) {//!isEsReporteRelaciones
			classes=new ArrayList<Classe>();
		}
		
		JRBeanArrayDataSource jrbeanArrayDataSourceDetaNotaCredito=null;
		
		if(this.sTipoReporteExtra!=null && !this.sTipoReporteExtra.equals("")) {
			DetaNotaCreditoConstantesFunciones.S_TIPOREPORTE_EXTRA=this.sTipoReporteExtra;
		} else {
			DetaNotaCreditoConstantesFunciones.S_TIPOREPORTE_EXTRA="";
		}
		
		jrbeanArrayDataSourceDetaNotaCredito=new JRBeanArrayDataSource(DetaNotaCreditoJInternalFrame.TraerDetaNotaCreditoBeans(detanotacreditosParaReportes,classes).toArray());
		
		jasperPrint = JasperFillManager.fillReport(jasperReport,parameters,jrbeanArrayDataSourceDetaNotaCredito);
				
		
		String sPathDest=Constantes.SUNIDAD_ARCHIVOS+":/"+Constantes.SCONTEXTSERVER+"/"+DetaNotaCreditoConstantesFunciones.SCHEMA+"/reportes";
		
		File filePathDest = new File(sPathDest);
		
		if(!filePathDest.exists()) {
			filePathDest.mkdirs();				
		}
				
		String sDestFileName=sPathDest+"/"+DetaNotaCreditoConstantesFunciones.CLASSNAME;
				
		if(this.sTipoArchivoReporte=="VISUALIZAR") {
			JasperViewer jasperViewer = new JasperViewer(jasperPrint,false) ;
			jasperViewer.setVisible(true) ; 

		} else if(this.sTipoArchivoReporte=="HTML"||this.sTipoArchivoReporte=="PDF"||this.sTipoArchivoReporte=="XML") {	
			//JasperFillManager.fillReportToFile(reportFile.getAbsolutePath(),parameters, new JRBeanArrayDataSource(DetaNotaCreditoBean.TraerDetaNotaCreditoBeans(detanotacreditosParaReportes).toArray()));
							
			if(this.sTipoArchivoReporte=="HTML") {
				sDestFileName+=".html";
				JasperExportManager.exportReportToHtmlFile(jasperPrint,sDestFileName);
					
			} else if(this.sTipoArchivoReporte=="PDF") {
				sDestFileName+=".pdf";
				JasperExportManager.exportReportToPdfFile(jasperPrint,sDestFileName);
			} else {
				sDestFileName+=".xml";
				JasperExportManager.exportReportToXmlFile(jasperPrint,sDestFileName, false);
			}	
			
		} else if(this.sTipoArchivoReporte=="WORD"||this.sTipoArchivoReporte=="EXCEL") {
				
			if(this.sTipoArchivoReporte=="WORD") {
				sDestFileName+=".rtf";
					
				JRRtfExporter exporter = new JRRtfExporter();
		
				exporter.setParameter(JRExporterParameter.JASPER_PRINT, jasperPrint);
				exporter.setParameter(JRExporterParameter.OUTPUT_FILE_NAME, sDestFileName);
		
				exporter.exportReport();
				
			} else	{
				sDestFileName+=".xls";
					
				JRXlsExporter exporterXls = new JRXlsExporter();
		
				exporterXls.setParameter(JRExporterParameter.JASPER_PRINT, jasperPrint);
				exporterXls.setParameter(JRExporterParameter.OUTPUT_FILE_NAME, sDestFileName);
				exporterXls.setParameter(JRXlsExporterParameter.IS_ONE_PAGE_PER_SHEET, Boolean.TRUE);
		
				exporterXls.exportReport();
			}
			
		} else if(this.sTipoArchivoReporte=="EXCEL2"||this.sTipoArchivoReporte=="EXCEL2_2") {
			//sDestFileName+=".xlsx";
			
			if(this.sTipoReporte.equals("NORMAL")) {
				this.generarExcelReporteDetaNotaCreditos(sAccionBusqueda,sTipoArchivoReporte,detanotacreditosParaReportes);
			
			} else if(this.sTipoReporte.equals("FORMULARIO")){
				this.generarExcelReporteVerticalDetaNotaCreditos(sAccionBusqueda,sTipoArchivoReporte,detanotacreditosParaReportes,false);
			
			} else if(this.sTipoReporte.equals("DINAMICO")){
				
				if(this.sTipoReporteDinamico.equals("NORMAL")) {
					
					this.jButtonGenerarExcelReporteDinamicoDetaNotaCreditoActionPerformed(null);
					//this.generarExcelReporteDetaNotaCreditos(sAccionBusqueda,sTipoArchivoReporte,detanotacreditosParaReportes);
					
				
				} else if(this.sTipoReporteDinamico.equals("FORMULARIO")){
					this.generarExcelReporteVerticalDetaNotaCreditos(sAccionBusqueda,sTipoArchivoReporte,detanotacreditosParaReportes,true);
				
				} else if(this.sTipoReporteDinamico.equals("RELACIONES")){
					this.generarExcelReporteRelacionesDetaNotaCreditos(sAccionBusqueda,sTipoArchivoReporte,detanotacreditosParaReportes,true);
				}
				
			} else if(this.sTipoReporte.equals("RELACIONES")){
				this.generarExcelReporteRelacionesDetaNotaCreditos(sAccionBusqueda,sTipoArchivoReporte,detanotacreditosParaReportes,false);
			}
		}
		
		if(this.sTipoArchivoReporte=="HTML"||this.sTipoArchivoReporte=="PDF"||this.sTipoArchivoReporte=="XML"||this.sTipoArchivoReporte=="WORD"||this.sTipoArchivoReporte=="EXCEL") {				
			JOptionPane.showMessageDialog(this,"REPORTE "+sDestFileName+" GENERADO SATISFACTORIAMENTE","REPORTES ",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReporteDetaNotaCreditos(String sAccionBusqueda,String sTipoArchivoReporte,List<DetaNotaCredito> detanotacreditosParaReportes) throws Exception {
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"detanotacredito";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("DetaNotaCreditos");
         
        int iRow = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		this.generarExcelReporteHeaderDetaNotaCredito("NORMAL",row,workbook);
		
		CellStyle cellStyleData = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataAux=null;
		
		int i=0;
		
      	for(DetaNotaCredito detanotacredito : detanotacreditosParaReportes) {            
			row = sheet.createRow(iRow++);
			iCell = 0;
			
			cellStyleDataAux=null;
			
			if(i%2==0) {
				cellStyleDataAux=cellStyleData;
			}
			
			DetaNotaCreditoConstantesFunciones.generarExcelReporteDataDetaNotaCredito("NORMAL",row,workbook,detanotacredito,cellStyleDataAux);
		
			
			/*
            Cell cell0 = row.createCell(0);
            cell0.setCellValue(country.getName());
            Cell cell1 = row.createCell(1);
            cell1.setCellValue(country.getShortCode());
			*/
			
			i++;
        }
        
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.detanotacreditoSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Deta Nota Credito",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReporteHeaderDetaNotaCredito(String sTipo,Row row,Workbook workbook) {
		
		DetaNotaCreditoConstantesFunciones.generarExcelReporteHeaderDetaNotaCredito(sTipo,row,workbook);
		
		/*
		Cell cell=null;
		int iCell=0;
		
		CellStyle cellStyle = workbook.createCellStyle();
		cellStyle.setFillBackgroundColor(IndexedColors.GREEN.getIndex());
		cellStyle.setFillPattern(CellStyle.ALIGN_FILL);
		*/
		
	}
	
	public void generarExcelReporteVerticalDetaNotaCreditos(String sAccionBusqueda,String sTipoArchivoReporte,List<DetaNotaCredito> detanotacreditosParaReportes,Boolean paraDinamico) throws Exception {
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"detanotacredito_vertical";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("DetaNotaCreditos");
         
        int iRow = 0;
		int iRowLast = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		CellStyle cellStyle = Funciones2.getStyleTitulo(workbook,"ZEBRA");;
		
		CellStyle cellStyleTitulo = Funciones2.getStyleTitulo(workbook,"PRINCIPAL_VERTICAL");
		
		
		for(DetaNotaCredito detanotacredito : detanotacreditosParaReportes) {
			row = sheet.createRow(iRow++);
			iRowLast=iRow - 1;
			
			cell = row.createCell(0);
			cell.setCellValue(DetaNotaCreditoConstantesFunciones.getDetaNotaCreditoDescripcion(detanotacredito));
			cell.setCellStyle(cellStyleTitulo);
			
			sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,0,2));			
	
			


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetaNotaCreditoConstantesFunciones.LABEL_IDEMPRESA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetaNotaCreditoConstantesFunciones.LABEL_IDEMPRESA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detanotacredito.getempresa_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetaNotaCreditoConstantesFunciones.LABEL_IDSUCURSAL))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetaNotaCreditoConstantesFunciones.LABEL_IDSUCURSAL);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detanotacredito.getsucursal_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetaNotaCreditoConstantesFunciones.LABEL_IDEJERCICIO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetaNotaCreditoConstantesFunciones.LABEL_IDEJERCICIO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detanotacredito.getejercicio_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetaNotaCreditoConstantesFunciones.LABEL_IDPERIODO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetaNotaCreditoConstantesFunciones.LABEL_IDPERIODO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detanotacredito.getperiodo_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetaNotaCreditoConstantesFunciones.LABEL_IDANIO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetaNotaCreditoConstantesFunciones.LABEL_IDANIO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detanotacredito.getanio_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetaNotaCreditoConstantesFunciones.LABEL_IDMES))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetaNotaCreditoConstantesFunciones.LABEL_IDMES);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detanotacredito.getmes_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetaNotaCreditoConstantesFunciones.LABEL_IDNOTACREDITO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetaNotaCreditoConstantesFunciones.LABEL_IDNOTACREDITO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detanotacredito.getnotacredito_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetaNotaCreditoConstantesFunciones.LABEL_IDBODEGA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetaNotaCreditoConstantesFunciones.LABEL_IDBODEGA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detanotacredito.getbodega_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetaNotaCreditoConstantesFunciones.LABEL_IDPRODUCTO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetaNotaCreditoConstantesFunciones.LABEL_IDPRODUCTO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detanotacredito.getproducto_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetaNotaCreditoConstantesFunciones.LABEL_IDUNIDAD))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetaNotaCreditoConstantesFunciones.LABEL_IDUNIDAD);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detanotacredito.getunidad_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetaNotaCreditoConstantesFunciones.LABEL_IDTIPODETANOTACREDITO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetaNotaCreditoConstantesFunciones.LABEL_IDTIPODETANOTACREDITO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detanotacredito.gettipodetanotacredito_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetaNotaCreditoConstantesFunciones.LABEL_IDTIPODEVOLUCIONEMPRESA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetaNotaCreditoConstantesFunciones.LABEL_IDTIPODEVOLUCIONEMPRESA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detanotacredito.gettipodevolucionempresa_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetaNotaCreditoConstantesFunciones.LABEL_DESCRIPCION))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetaNotaCreditoConstantesFunciones.LABEL_DESCRIPCION);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detanotacredito.getdescripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetaNotaCreditoConstantesFunciones.LABEL_CANTIDAD))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetaNotaCreditoConstantesFunciones.LABEL_CANTIDAD);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detanotacredito.getcantidad());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetaNotaCreditoConstantesFunciones.LABEL_PRECIO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetaNotaCreditoConstantesFunciones.LABEL_PRECIO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detanotacredito.getprecio());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetaNotaCreditoConstantesFunciones.LABEL_MONTO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetaNotaCreditoConstantesFunciones.LABEL_MONTO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detanotacredito.getmonto());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetaNotaCreditoConstantesFunciones.LABEL_COSTO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetaNotaCreditoConstantesFunciones.LABEL_COSTO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detanotacredito.getcosto());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetaNotaCreditoConstantesFunciones.LABEL_DESCUENTO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetaNotaCreditoConstantesFunciones.LABEL_DESCUENTO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detanotacredito.getdescuento());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetaNotaCreditoConstantesFunciones.LABEL_DESCUENTO2))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetaNotaCreditoConstantesFunciones.LABEL_DESCUENTO2);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detanotacredito.getdescuento2());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetaNotaCreditoConstantesFunciones.LABEL_IMPUESTO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetaNotaCreditoConstantesFunciones.LABEL_IMPUESTO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detanotacredito.getimpuesto());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetaNotaCreditoConstantesFunciones.LABEL_PORCENIVA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetaNotaCreditoConstantesFunciones.LABEL_PORCENIVA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detanotacredito.getporcen_iva());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetaNotaCreditoConstantesFunciones.LABEL_PORCENDESCUEN))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetaNotaCreditoConstantesFunciones.LABEL_PORCENDESCUEN);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detanotacredito.getporcen_descuen());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetaNotaCreditoConstantesFunciones.LABEL_PORCENICE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetaNotaCreditoConstantesFunciones.LABEL_PORCENICE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detanotacredito.getporcen_ice());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetaNotaCreditoConstantesFunciones.LABEL_SUBTOTAL))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetaNotaCreditoConstantesFunciones.LABEL_SUBTOTAL);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detanotacredito.getsub_total());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetaNotaCreditoConstantesFunciones.LABEL_TOTAL))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetaNotaCreditoConstantesFunciones.LABEL_TOTAL);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detanotacredito.gettotal());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetaNotaCreditoConstantesFunciones.LABEL_IDCENTROCOSTO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetaNotaCreditoConstantesFunciones.LABEL_IDCENTROCOSTO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detanotacredito.getcentrocosto_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetaNotaCreditoConstantesFunciones.LABEL_IDEMPAQUE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetaNotaCreditoConstantesFunciones.LABEL_IDEMPAQUE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detanotacredito.getempaque_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetaNotaCreditoConstantesFunciones.LABEL_INCLUYEIMPUESTO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetaNotaCreditoConstantesFunciones.LABEL_INCLUYEIMPUESTO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(Funciones2.getDescripcionBoolean(detanotacredito.getincluye_impuesto()));


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetaNotaCreditoConstantesFunciones.LABEL_FECHAEMISION))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetaNotaCreditoConstantesFunciones.LABEL_FECHAEMISION);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detanotacredito.getfecha_emision());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetaNotaCreditoConstantesFunciones.LABEL_CODIGOLOTE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetaNotaCreditoConstantesFunciones.LABEL_CODIGOLOTE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detanotacredito.getcodigo_lote());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetaNotaCreditoConstantesFunciones.LABEL_NUMEROCAJA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetaNotaCreditoConstantesFunciones.LABEL_NUMEROCAJA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detanotacredito.getnumero_caja());


			}						
        }
        
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.detanotacreditoSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Deta Nota Credito",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReporteRelacionesDetaNotaCreditos(String sAccionBusqueda,String sTipoArchivoReporte,List<DetaNotaCredito> detanotacreditosParaReportes,Boolean paraDinamico) throws Exception {
		
		ArrayList<Classe> classes=new ArrayList<Classe>();
		List<DetaNotaCredito> detanotacreditosRespaldo=null;
		
		classes=DetaNotaCreditoConstantesFunciones.getClassesRelationshipsOfDetaNotaCredito(new ArrayList<Classe>(),DeepLoadType.NONE,false);
					
		this.datosDeep=new DatosDeep();
		
		this.datosDeep.setIsDeep(false);
		this.datosDeep.setDeepLoadType(DeepLoadType.INCLUDE);
		this.datosDeep.setClases(classes);
			
		this.datosCliente.setDatosDeepParametros(false, DeepLoadType.INCLUDE, classes, "");
		this.datosCliente.setIsConDeep(true);	
		this.datosCliente.setIsConExportar(false);
		
						
		this.detanotacreditoLogic.setDatosCliente(this.datosCliente);
		this.detanotacreditoLogic.setDatosDeep(this.datosDeep);
		this.detanotacreditoLogic.setIsConDeep(true);
		
		detanotacreditosRespaldo=this.detanotacreditoLogic.getDetaNotaCreditos();
		
		this.detanotacreditoLogic.setDetaNotaCreditos(detanotacreditosParaReportes);	
		this.detanotacreditoLogic.deepLoadsWithConnection(false, DeepLoadType.INCLUDE, classes,"");
		
		detanotacreditosParaReportes=this.detanotacreditoLogic.getDetaNotaCreditos();
		this.detanotacreditoLogic.setDetaNotaCreditos(detanotacreditosRespaldo);
		
		
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"detanotacredito_relacion";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("DetaNotaCreditos");
         
        int iRow = 0;
		int iRowLast = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		this.generarExcelReporteHeaderDetaNotaCredito("NORMAL",row,workbook);
		
		int i=0;
		int i2=0;
		
		CellStyle cellStyleData = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataTitulo = Funciones2.getStyleTitulo(workbook,"PRINCIPAL");
		CellStyle cellStyleDataZebra = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataAux =null;
		CellStyle cellStyleDataAuxHijo =null;
		
		for(DetaNotaCredito detanotacredito : detanotacreditosParaReportes) {			
			if(i!=0) {
				row = sheet.createRow(iRow++);				
				this.generarExcelReporteHeaderDetaNotaCredito("NORMAL",row,workbook);
			}
			
			cellStyleDataAux=null;
			
			if(i%2==0) {
				//cellStyleDataAux=cellStyleData;
			}
			
			row = sheet.createRow(iRow++);						
			DetaNotaCreditoConstantesFunciones.generarExcelReporteDataDetaNotaCredito("NORMAL",row,workbook,detanotacredito,cellStyleDataAux);
		
			
			
			
			i++;
        }
        
		/*
		row = sheet.createRow(iRow++);
		iRowLast=iRow - 1;
			
		cell = row.createCell(0);
		cell.setCellValue(DetaNotaCreditoConstantesFunciones.getDetaNotaCreditoDescripcion(detanotacredito));
		cell.setCellStyle(cellStyleTitulo);
			
		sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,0,2));			
		*/
		
			
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.detanotacreditoSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Deta Nota Credito",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	
	public Boolean existeColumnaReporteDinamico(String sColumna) {
		Boolean existe=false;
		
		Reporte reporte=new Reporte();
		
		
		for(int index:this.jInternalFrameReporteDinamicoDetaNotaCredito.getjListColumnasSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoDetaNotaCredito.getjListColumnasSelectReporte().getModel().getElementAt(index);
			
			if(sColumna.equals(reporte.getsCodigo())) {
				existe=true;
				break;
			}
		
		}
		
		
		return existe;
	}
	
	public Boolean existeRelacionReporteDinamico(String sColumna) {
		Boolean existe=false;
		
		Reporte reporte=new Reporte();
		
		
		for(int index:this.jInternalFrameReporteDinamicoDetaNotaCredito.getjListRelacionesSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoDetaNotaCredito.getjListRelacionesSelectReporte().getModel().getElementAt(index);
			
			if(sColumna.equals(reporte.getsCodigo())) {
				existe=true;
				break;
			}
		
		}
		
		
		return existe;
	}
	
	public void startProcessDetaNotaCredito() throws Exception {		
		this.startProcessDetaNotaCredito(true);
	}
	
	public void startProcessDetaNotaCredito(Boolean conSplash) throws Exception {		
		//FuncionesSwing.enableDisablePanels(false,this.jTabbedPaneBusquedasDetaNotaCredito ,this.jPanelParametrosReportesDetaNotaCredito, this.jScrollPanelDatosDetaNotaCredito,this.jPanelPaginacionDetaNotaCredito, this.jScrollPanelDatosEdicionDetaNotaCredito, this.jPanelAccionesDetaNotaCredito,this.jPanelAccionesFormularioDetaNotaCredito,this.jmenuBarDetaNotaCredito,this.jmenuBarDetalleDetaNotaCredito,this.jTtoolBarDetaNotaCredito,this.jTtoolBarDetalleDetaNotaCredito);		
		
		final JTabbedPane jTabbedPaneBusquedasDetaNotaCredito=this.jTabbedPaneBusquedasDetaNotaCredito; 
		
		final JPanel jPanelParametrosReportesDetaNotaCredito=this.jPanelParametrosReportesDetaNotaCredito;
		//final JScrollPane jScrollPanelDatosDetaNotaCredito=this.jScrollPanelDatosDetaNotaCredito;
		final JTable jTableDatosDetaNotaCredito=this.jTableDatosDetaNotaCredito;		
		final JPanel jPanelPaginacionDetaNotaCredito=this.jPanelPaginacionDetaNotaCredito;
		//final JScrollPane jScrollPanelDatosEdicionDetaNotaCredito=this.jScrollPanelDatosEdicionDetaNotaCredito;
		final JPanel jPanelAccionesDetaNotaCredito=this.jPanelAccionesDetaNotaCredito;
		
		JPanel jPanelCamposAuxiliarDetaNotaCredito=new JPanelMe();
		JPanel jPanelAccionesFormularioAuxiliarDetaNotaCredito=new JPanelMe();
		
		if(this.jInternalFrameDetalleFormDetaNotaCredito!=null) {
			jPanelCamposAuxiliarDetaNotaCredito=this.jInternalFrameDetalleFormDetaNotaCredito.jPanelCamposDetaNotaCredito;
			jPanelAccionesFormularioAuxiliarDetaNotaCredito=this.jInternalFrameDetalleFormDetaNotaCredito.jPanelAccionesFormularioDetaNotaCredito;
		}
		
		final JPanel jPanelCamposDetaNotaCredito=jPanelCamposAuxiliarDetaNotaCredito;
		final JPanel jPanelAccionesFormularioDetaNotaCredito=jPanelAccionesFormularioAuxiliarDetaNotaCredito;
		
		
		final JMenuBar jmenuBarDetaNotaCredito=this.jmenuBarDetaNotaCredito;
		final JToolBar jTtoolBarDetaNotaCredito=this.jTtoolBarDetaNotaCredito;		
		
		
		JMenuBar jmenuBarDetalleAuxiliarDetaNotaCredito=new JMenuBar();
		JToolBar jTtoolBarDetalleAuxiliarDetaNotaCredito=new JToolBar();		
		
		if(this.jInternalFrameDetalleFormDetaNotaCredito!=null) {
			jmenuBarDetalleAuxiliarDetaNotaCredito=this.jInternalFrameDetalleFormDetaNotaCredito.jmenuBarDetalleDetaNotaCredito;
			jTtoolBarDetalleAuxiliarDetaNotaCredito=this.jInternalFrameDetalleFormDetaNotaCredito.jTtoolBarDetalleDetaNotaCredito;
		}
		
		final JMenuBar jmenuBarDetalleDetaNotaCredito=jmenuBarDetalleAuxiliarDetaNotaCredito;
		final JToolBar jTtoolBarDetalleDetaNotaCredito=jTtoolBarDetalleAuxiliarDetaNotaCredito;		
		
		
		
		
		
		if(Constantes2.CON_PROCESO_HILO) {
			Thread threadRunnableProcess;
			ProcessRunnable processRunnable;
			
			processRunnable=new ProcessRunnable();
			
			processRunnable.setsTipo("START");
			processRunnable.setDesktop(jDesktopPane);
			processRunnable.setModuloActual(moduloActual);
			processRunnable.setModuloUsuarioSeleccionado(moduloActual);
			processRunnable.setOpcionActual(opcionActual);
			processRunnable.setParametroGeneralSg(parametroGeneralSg);
			processRunnable.setParametroGeneralUsuario(parametroGeneralUsuario);
			processRunnable.setResumenUsuarioActual(resumenUsuarioActual);
			processRunnable.setUsuarioActual(usuarioActual);
			
			processRunnable.jTabbedPaneBusquedas=jTabbedPaneBusquedasDetaNotaCredito;
			processRunnable.jPanelParametrosReportes=jPanelParametrosReportesDetaNotaCredito;
			processRunnable.jTableDatos=jTableDatosDetaNotaCredito;
			processRunnable.jPanelCampos=jPanelCamposDetaNotaCredito;
			processRunnable.jPanelPaginacion=jPanelPaginacionDetaNotaCredito;
			processRunnable.jPanelAcciones=jPanelAccionesDetaNotaCredito;
			processRunnable.jPanelAccionesFormulario=jPanelAccionesFormularioDetaNotaCredito;
			
			
			processRunnable.jmenuBar=jmenuBarDetaNotaCredito;
			processRunnable.jmenuBarDetalle=jmenuBarDetalleDetaNotaCredito;
			processRunnable.jTtoolBar=jTtoolBarDetaNotaCredito;
			processRunnable.jTtoolBarDetalle=jTtoolBarDetalleDetaNotaCredito;
			processRunnable.jInternalFrameBase=this;
			
			//processRunnable.CargarObjetosRendimientoCriticoModuloInventario();
			
			
			threadRunnableProcess=new Thread(processRunnable);//.start();
					
			threadRunnableProcess.start();
			
		} else {
			FuncionesSwing.enableDisablePanels(false,jTabbedPaneBusquedasDetaNotaCredito ,jPanelParametrosReportesDetaNotaCredito,jTableDatosDetaNotaCredito, /*jScrollPanelDatosDetaNotaCredito,*/jPanelCamposDetaNotaCredito,jPanelPaginacionDetaNotaCredito, /*jScrollPanelDatosEdicionDetaNotaCredito,*/ jPanelAccionesDetaNotaCredito,jPanelAccionesFormularioDetaNotaCredito,jmenuBarDetaNotaCredito,jmenuBarDetalleDetaNotaCredito,jTtoolBarDetaNotaCredito,jTtoolBarDetalleDetaNotaCredito);
		
			startProcess();//this.
		}
						
		/*
		if(conSplash) {
			SwingUtilities.invokeLater(new Runnable() {
			      public void run() {
			    	  try {
							FuncionesSwing.enableDisablePanels(false,jTabbedPaneBusquedasDetaNotaCredito ,jPanelParametrosReportesDetaNotaCredito, jScrollPanelDatosDetaNotaCredito,jPanelPaginacionDetaNotaCredito, jScrollPanelDatosEdicionDetaNotaCredito, jPanelAccionesDetaNotaCredito,jPanelAccionesFormularioDetaNotaCredito,jmenuBarDetaNotaCredito,jmenuBarDetalleDetaNotaCredito,jTtoolBarDetaNotaCredito,jTtoolBarDetalleDetaNotaCredito);
						
							startProcess();//this.
							
						} catch (Exception e) {
							// TODO Auto-generated catch block
							e.printStackTrace();
						}
			      }
			});
		}
		*/
	}
	
	public void finishProcessDetaNotaCredito() {// throws Exception 
		this.finishProcessDetaNotaCredito(true);
	}
	
	public void finishProcessDetaNotaCredito(Boolean conSplash) {// throws Exception 
		//FuncionesSwing.enableDisablePanels(true,this.jTabbedPaneBusquedasDetaNotaCredito ,this.jPanelParametrosReportesDetaNotaCredito, this.jScrollPanelDatosDetaNotaCredito,this.jPanelPaginacionDetaNotaCredito, this.jScrollPanelDatosEdicionDetaNotaCredito, this.jPanelAccionesDetaNotaCredito,this.jPanelAccionesFormularioDetaNotaCredito,this.jmenuBarDetaNotaCredito,this.jmenuBarDetalleDetaNotaCredito,this.jTtoolBarDetaNotaCredito,this.jTtoolBarDetalleDetaNotaCredito);		
		
		final JTabbedPane jTabbedPaneBusquedasDetaNotaCredito=this.jTabbedPaneBusquedasDetaNotaCredito; 
		
		final JPanel jPanelParametrosReportesDetaNotaCredito=this.jPanelParametrosReportesDetaNotaCredito;
		//final JScrollPane jScrollPanelDatosDetaNotaCredito=this.jScrollPanelDatosDetaNotaCredito;
		final JTable jTableDatosDetaNotaCredito=this.jTableDatosDetaNotaCredito;		
		final JPanel jPanelPaginacionDetaNotaCredito=this.jPanelPaginacionDetaNotaCredito;
		//final JScrollPane jScrollPanelDatosEdicionDetaNotaCredito=this.jScrollPanelDatosEdicionDetaNotaCredito;
		final JPanel jPanelAccionesDetaNotaCredito=this.jPanelAccionesDetaNotaCredito;
		
		JPanel jPanelCamposAuxiliarDetaNotaCredito=new JPanel();
		JPanel jPanelAccionesFormularioAuxiliarDetaNotaCredito=new JPanel();
		
		if(this.jInternalFrameDetalleFormDetaNotaCredito!=null) {
			jPanelCamposAuxiliarDetaNotaCredito=this.jInternalFrameDetalleFormDetaNotaCredito.jPanelCamposDetaNotaCredito;
			jPanelAccionesFormularioAuxiliarDetaNotaCredito=this.jInternalFrameDetalleFormDetaNotaCredito.jPanelAccionesFormularioDetaNotaCredito;
		}
		
		final JPanel jPanelCamposDetaNotaCredito=jPanelCamposAuxiliarDetaNotaCredito;
		final JPanel jPanelAccionesFormularioDetaNotaCredito=jPanelAccionesFormularioAuxiliarDetaNotaCredito;
		
		
		final JMenuBar jmenuBarDetaNotaCredito=this.jmenuBarDetaNotaCredito;		
		final JToolBar jTtoolBarDetaNotaCredito=this.jTtoolBarDetaNotaCredito;
				
		JMenuBar jmenuBarDetalleAuxiliarDetaNotaCredito=new JMenuBar();
		JToolBar jTtoolBarDetalleAuxiliarDetaNotaCredito=new JToolBar();
		
		if(this.jInternalFrameDetalleFormDetaNotaCredito!=null) {
			jmenuBarDetalleAuxiliarDetaNotaCredito=this.jInternalFrameDetalleFormDetaNotaCredito.jmenuBarDetalleDetaNotaCredito;
			jTtoolBarDetalleAuxiliarDetaNotaCredito=this.jInternalFrameDetalleFormDetaNotaCredito.jTtoolBarDetalleDetaNotaCredito;		
		}
		
		final JMenuBar jmenuBarDetalleDetaNotaCredito=jmenuBarDetalleAuxiliarDetaNotaCredito;
		final JToolBar jTtoolBarDetalleDetaNotaCredito=jTtoolBarDetalleAuxiliarDetaNotaCredito;
		
		
		
		if(Constantes2.CON_PROCESO_HILO) {
			Thread threadRunnableProcess;
			ProcessRunnable processRunnable;
			
			processRunnable=new ProcessRunnable();
			
			processRunnable.setsTipo("END");
			processRunnable.setDesktop(jDesktopPane);
			processRunnable.setModuloActual(moduloActual);
			processRunnable.setModuloUsuarioSeleccionado(moduloActual);
			processRunnable.setOpcionActual(opcionActual);
			processRunnable.setParametroGeneralSg(parametroGeneralSg);
			processRunnable.setParametroGeneralUsuario(parametroGeneralUsuario);
			processRunnable.setResumenUsuarioActual(resumenUsuarioActual);
			processRunnable.setUsuarioActual(usuarioActual);
			
			processRunnable.jTabbedPaneBusquedas=jTabbedPaneBusquedasDetaNotaCredito;
			processRunnable.jPanelParametrosReportes=jPanelParametrosReportesDetaNotaCredito;
			processRunnable.jTableDatos=jTableDatosDetaNotaCredito;
			processRunnable.jPanelCampos=jPanelCamposDetaNotaCredito;
			processRunnable.jPanelPaginacion=jPanelPaginacionDetaNotaCredito;
			processRunnable.jPanelAcciones=jPanelAccionesDetaNotaCredito;
			processRunnable.jPanelAccionesFormulario=jPanelAccionesFormularioDetaNotaCredito;
			
			
			processRunnable.jmenuBar=jmenuBarDetaNotaCredito;
			processRunnable.jmenuBarDetalle=jmenuBarDetalleDetaNotaCredito;
			processRunnable.jTtoolBar=jTtoolBarDetaNotaCredito;
			processRunnable.jTtoolBarDetalle=jTtoolBarDetalleDetaNotaCredito;
			processRunnable.jInternalFrameBase=this;
			
			//processRunnable.CargarObjetosRendimientoCriticoModuloInventario();
			
			
			threadRunnableProcess=new Thread(processRunnable);//.start();
					
			threadRunnableProcess.start();
			
		} else {
			if(conSplash) {
				SwingUtilities.invokeLater(new RunnableProceso(true,this,jTabbedPaneBusquedasDetaNotaCredito ,jPanelParametrosReportesDetaNotaCredito, jTableDatosDetaNotaCredito,/*jScrollPanelDatosDetaNotaCredito,*/jPanelCamposDetaNotaCredito,jPanelPaginacionDetaNotaCredito, /*jScrollPanelDatosEdicionDetaNotaCredito,*/ jPanelAccionesDetaNotaCredito,jPanelAccionesFormularioDetaNotaCredito,jmenuBarDetaNotaCredito,jmenuBarDetalleDetaNotaCredito,jTtoolBarDetaNotaCredito,jTtoolBarDetalleDetaNotaCredito));
			}
		}						
	}
	
	/*
	public void habilitarDeshabilitarControlesDetaNotaCredito(Boolean esHabilitar,Boolean conDetalle) {
		this.habilitarDeshabilitarToolBarDetaNotaCredito(esHabilitar,conDetalle);
		this.habilitarDeshabilitarMenuDetaNotaCredito(esHabilitar,conDetalle);
	}
	
	public void habilitarDeshabilitarToolBarDetaNotaCredito(Boolean esHabilitar,Boolean conDetalle) {
		FuncionesSwing.enableDisableComponents(this.jTtoolBarDetaNotaCredito,esHabilitar,1,1);
		
		if(conDetalle) {
			FuncionesSwing.enableDisableComponents(this.jTtoolBarDetalleDetaNotaCredito,esHabilitar,1,1);
		}
	}
	
	public void habilitarDeshabilitarMenuDetaNotaCredito(Boolean esHabilitar,Boolean conDetalle) {
		FuncionesSwing.enableDisableComponents(this.jmenuBarDetaNotaCredito,esHabilitar,1,1);
		
		if(conDetalle) {
			FuncionesSwing.enableDisableComponents(this.jmenuBarDetalleDetaNotaCredito,esHabilitar,1,1);
		}
	}
	*/
	
	
	
	public void procesarBusqueda(String sAccionBusqueda) throws Exception {		
		String  finalQueryPaginacion=this.detanotacreditoConstantesFunciones.getsFinalQueryDetaNotaCredito();
		String  finalQueryPaginacionTodos=this.detanotacreditoConstantesFunciones.getsFinalQueryDetaNotaCredito();
		
		Boolean esBusqueda=false;
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		if(!sAccionBusqueda.equals("Todos"))	{
			esBusqueda=true;
		}
		
		this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
		this.arrDatoGeneralNo= new  ArrayList<String>();
		
		ArrayList<String> arrColumnasGlobalesNo=DetaNotaCreditoConstantesFunciones.getArrayColumnasGlobalesNoDetaNotaCredito(this.arrDatoGeneral);
		ArrayList<String> arrColumnasGlobales=DetaNotaCreditoConstantesFunciones.getArrayColumnasGlobalesDetaNotaCredito(this.arrDatoGeneral,arrColumnasGlobalesNo);
		
			
		String  finalQueryGlobal="";
		
		finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,!esBusqueda,esBusqueda,arrColumnasGlobales,DetaNotaCreditoConstantesFunciones.TABLENAME);
		
		String sOrderBy="";
		
		
		sOrderBy=Funciones2.getFinalQueryOrderBy(this.arrOrderBy);
		
		
		if(!sOrderBy.equals("")) {			
			finalQueryPaginacion=sOrderBy;
			finalQueryPaginacionTodos=sOrderBy;
		}
		
		
		//INICIALIZA ELIMINADOS
		this.detanotacreditosEliminados= new ArrayList<DetaNotaCredito>();
		
		if(!this.isEntroOnLoad) {
			this.onLoad();
		}/* else {
			this.isEntroOnLoad=false;
		}*/
		
		
		
				
		try	{		
			
			//this.startProcessDetaNotaCredito();
		
				///*DetaNotaCreditoSessionBean*/this.detanotacreditoSessionBean=new DetaNotaCreditoSessionBean();
			
			if(this.detanotacreditoSessionBean==null) {
				this.detanotacreditoSessionBean=new DetaNotaCreditoSessionBean();
			}
			
			//ACTUALIZA EL TAMANIO DE PAGINACION DESDE EL COMBO
			if(this.sTipoPaginacion!=null && !this.sTipoPaginacion.equals("")) {
				if(!this.sTipoPaginacion.equals("TODOS")) {
					this.iNumeroPaginacion=Integer.parseInt(this.sTipoPaginacion);
				} else {
					this.iNumeroPaginacion=-1;
					this.iNumeroPaginacionPagina=-1;
				}
			} else {
				if(this.iNumeroPaginacion==null || (this.iNumeroPaginacion!=null && this.iNumeroPaginacion<=0)) {
					this.iNumeroPaginacion=DetaNotaCreditoConstantesFunciones.INUMEROPAGINACION;
				}
			}
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);
			
			this.cargarDatosCliente();
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			classes=DetaNotaCreditoConstantesFunciones.getClassesForeignKeysOfDetaNotaCredito(new ArrayList<Classe>(),DeepLoadType.NONE);
			
		
			this.datosDeep=new DatosDeep();
			this.datosDeep.setIsDeep(false);
			this.datosDeep.setDeepLoadType(DeepLoadType.INCLUDE);
			this.datosDeep.setClases(classes);
			
			this.datosCliente.setDatosDeepParametros(false, DeepLoadType.INCLUDE, classes, "");
			this.datosCliente.setIsConDeep(true);
			
			if(false) {//this.conExportar
				this.datosCliente.setIsConExportar(true);
				this.datosCliente.setDatosExportarParametros(Funciones2.getTipoExportar(this.parametroGeneralUsuario),this.parametroGeneralUsuario.getcon_exportar_cabecera(),Funciones2.getTipoDelimiter(this.parametroGeneralUsuario),this.parametroGeneralUsuario.getpath_exportar()+"/detanotacredito."+Funciones2.getTipoExtensionArchivoExportar(this.parametroGeneralUsuario));
			} else {
				this.datosCliente.setIsConExportar(false);
			}
			
			detanotacreditosAux= new ArrayList<DetaNotaCredito>();
			
				
			detanotacreditoLogic.setDatosCliente(this.datosCliente);
			detanotacreditoLogic.setDatosDeep(this.datosDeep);
			detanotacreditoLogic.setIsConDeep(true);
			
			
			detanotacreditoLogic.getDetaNotaCreditoDataAccess().setIsForForeingsKeysDataRelationships(true);
			
			if(sAccionBusqueda.equals("Todos") || sAccionBusqueda.equals("Query"))	{	
				if(sAccionBusqueda.equals("Todos")) {
					//FALTA:PARA BUSQUEDAS POR CAMPO EN FORMULARIO
					//this.sFinalQueryGeneral="";
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacionTodos );
					
					detanotacreditoLogic.getTodosDetaNotaCreditos(finalQueryGlobal,pagination);
					
					//detanotacreditoLogic.getTodosDetaNotaCreditosWithConnection(finalQueryGlobal,pagination);										
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
				
				if(detanotacreditoLogic.getDetaNotaCreditos()==null|| detanotacreditoLogic.getDetaNotaCreditos().size()==0)	{
					
				
				}
				
				if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(-1);
						this.pagination.setiMaxResults(-1);
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							detanotacreditosAux= new ArrayList<DetaNotaCredito>();
							detanotacreditosAux.addAll(detanotacreditoLogic.getDetaNotaCreditos());						
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detanotacreditosAux= new ArrayList<DetaNotaCredito>();
							detanotacreditosAux.addAll(detanotacreditos);
						}
						//ARCHITECTURE
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							detanotacreditoLogic.getTodosDetaNotaCreditos(finalQueryGlobal+"",this.pagination);												
							
							//detanotacreditoLogic.getTodosDetaNotaCreditosWithConnection(finalQueryGlobal+"",this.pagination);												
						} else if(Constantes.ISUSAEJBREMOTE) {
						} else if(Constantes.ISUSAEJBHOME) {
						}
						//ARCHITECTURE
						
					}
					
					this.generarReporteDetaNotaCreditos("Todos",detanotacreditoLogic.getDetaNotaCreditos() );
					
					if(false) {//isMostrarTodosResultadosReporte						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							detanotacreditoLogic.setDetaNotaCreditos(new ArrayList<DetaNotaCredito>());					
							detanotacreditoLogic.getDetaNotaCreditos().addAll(detanotacreditosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detanotacreditos=new ArrayList<DetaNotaCredito>();
							detanotacreditos.addAll(detanotacreditosAux);
						}
						//ARCHITECTURE
						
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);														
					}
				}
			}
			else if(sAccionBusqueda.equals("PorId")) {
				Long idDetaNotaCredito=0L;
				
				if(this.idActual!=null && this.idActual!=0L) {
					idDetaNotaCredito=this.idActual;
				
				} else if(this.idDetaNotaCreditoActual!=null && this.idDetaNotaCreditoActual!=0L) {
					idDetaNotaCredito=idDetaNotaCreditoActual;
				}
				
					
				this.sDetalleReporte=DetaNotaCreditoConstantesFunciones.getDetalleIndicePorId(idDetaNotaCredito);
				
				this.detanotacreditos=new ArrayList<DetaNotaCredito>();
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {					
					detanotacreditoLogic.getEntity(idDetaNotaCredito);
					
					//detanotacreditoLogic.getEntityWithConnection(idDetaNotaCredito);
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
								
				if(Constantes.ISUSAEJBLOGICLAYER) {
					detanotacreditoLogic.setDetaNotaCreditos(new ArrayList<DetaNotaCredito>());
					detanotacreditoLogic.getDetaNotaCreditos().add(detanotacreditoLogic.getDetaNotaCredito());
				
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detanotacreditos=new ArrayList<DetaNotaCredito>();
					this.detanotacreditos.add(detanotacredito);
				}
				
				if(detanotacreditoLogic.getDetaNotaCredito()==null)	{
					
				
				}			
			}
			
		
			else if(sAccionBusqueda.equals("FK_IdBodega")) {
				this.sDetalleReporte=DetaNotaCreditoConstantesFunciones.getDetalleIndiceFK_IdBodega(id_bodegaFK_IdBodega);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					detanotacreditoLogic.getDetaNotaCreditosFK_IdBodega(finalQueryGlobal,pagination,id_bodegaFK_IdBodega);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetaNotaCreditoConstantesFunciones.getDetalleIndiceFK_IdBodega(id_bodegaFK_IdBodega);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetaNotaCreditoConstantesFunciones.getDetalleIndiceFK_IdBodega(id_bodegaFK_IdBodega);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=detanotacreditoLogic.getDetaNotaCreditos()==null||detanotacreditoLogic.getDetaNotaCreditos().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=detanotacreditos==null|| detanotacreditos.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						detanotacreditosAux=new ArrayList<DetaNotaCredito>();
						detanotacreditosAux.addAll(detanotacreditoLogic.getDetaNotaCreditos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detanotacreditosAux=new ArrayList<DetaNotaCredito>();
							detanotacreditosAux.addAll(detanotacreditos);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							detanotacreditoLogic.getDetaNotaCreditosFK_IdBodega(finalQueryGlobal,pagination,id_bodegaFK_IdBodega);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetaNotaCreditoConstantesFunciones.getDetalleIndiceFK_IdBodega(id_bodegaFK_IdBodega);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetaNotaCreditoConstantesFunciones.getDetalleIndiceFK_IdBodega(id_bodegaFK_IdBodega);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteDetaNotaCreditos("FK_IdBodega",detanotacreditoLogic.getDetaNotaCreditos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteDetaNotaCreditos("FK_IdBodega",detanotacreditos);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						detanotacreditoLogic.setDetaNotaCreditos(new ArrayList<DetaNotaCredito>());
						detanotacreditoLogic.getDetaNotaCreditos().addAll(detanotacreditosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detanotacreditos=new ArrayList<DetaNotaCredito>();
							detanotacreditos.addAll(detanotacreditosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdCentroCosto")) {
				this.sDetalleReporte=DetaNotaCreditoConstantesFunciones.getDetalleIndiceFK_IdCentroCosto(id_centro_costoFK_IdCentroCosto);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					detanotacreditoLogic.getDetaNotaCreditosFK_IdCentroCosto(finalQueryGlobal,pagination,id_centro_costoFK_IdCentroCosto);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetaNotaCreditoConstantesFunciones.getDetalleIndiceFK_IdCentroCosto(id_centro_costoFK_IdCentroCosto);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetaNotaCreditoConstantesFunciones.getDetalleIndiceFK_IdCentroCosto(id_centro_costoFK_IdCentroCosto);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=detanotacreditoLogic.getDetaNotaCreditos()==null||detanotacreditoLogic.getDetaNotaCreditos().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=detanotacreditos==null|| detanotacreditos.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						detanotacreditosAux=new ArrayList<DetaNotaCredito>();
						detanotacreditosAux.addAll(detanotacreditoLogic.getDetaNotaCreditos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detanotacreditosAux=new ArrayList<DetaNotaCredito>();
							detanotacreditosAux.addAll(detanotacreditos);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							detanotacreditoLogic.getDetaNotaCreditosFK_IdCentroCosto(finalQueryGlobal,pagination,id_centro_costoFK_IdCentroCosto);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetaNotaCreditoConstantesFunciones.getDetalleIndiceFK_IdCentroCosto(id_centro_costoFK_IdCentroCosto);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetaNotaCreditoConstantesFunciones.getDetalleIndiceFK_IdCentroCosto(id_centro_costoFK_IdCentroCosto);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteDetaNotaCreditos("FK_IdCentroCosto",detanotacreditoLogic.getDetaNotaCreditos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteDetaNotaCreditos("FK_IdCentroCosto",detanotacreditos);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						detanotacreditoLogic.setDetaNotaCreditos(new ArrayList<DetaNotaCredito>());
						detanotacreditoLogic.getDetaNotaCreditos().addAll(detanotacreditosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detanotacreditos=new ArrayList<DetaNotaCredito>();
							detanotacreditos.addAll(detanotacreditosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdEjercicio")) {
				this.sDetalleReporte=DetaNotaCreditoConstantesFunciones.getDetalleIndiceFK_IdEjercicio(id_ejercicioFK_IdEjercicio);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					detanotacreditoLogic.getDetaNotaCreditosFK_IdEjercicio(finalQueryGlobal,pagination,id_ejercicioFK_IdEjercicio);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetaNotaCreditoConstantesFunciones.getDetalleIndiceFK_IdEjercicio(id_ejercicioFK_IdEjercicio);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetaNotaCreditoConstantesFunciones.getDetalleIndiceFK_IdEjercicio(id_ejercicioFK_IdEjercicio);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=detanotacreditoLogic.getDetaNotaCreditos()==null||detanotacreditoLogic.getDetaNotaCreditos().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=detanotacreditos==null|| detanotacreditos.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						detanotacreditosAux=new ArrayList<DetaNotaCredito>();
						detanotacreditosAux.addAll(detanotacreditoLogic.getDetaNotaCreditos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detanotacreditosAux=new ArrayList<DetaNotaCredito>();
							detanotacreditosAux.addAll(detanotacreditos);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							detanotacreditoLogic.getDetaNotaCreditosFK_IdEjercicio(finalQueryGlobal,pagination,id_ejercicioFK_IdEjercicio);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetaNotaCreditoConstantesFunciones.getDetalleIndiceFK_IdEjercicio(id_ejercicioFK_IdEjercicio);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetaNotaCreditoConstantesFunciones.getDetalleIndiceFK_IdEjercicio(id_ejercicioFK_IdEjercicio);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteDetaNotaCreditos("FK_IdEjercicio",detanotacreditoLogic.getDetaNotaCreditos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteDetaNotaCreditos("FK_IdEjercicio",detanotacreditos);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						detanotacreditoLogic.setDetaNotaCreditos(new ArrayList<DetaNotaCredito>());
						detanotacreditoLogic.getDetaNotaCreditos().addAll(detanotacreditosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detanotacreditos=new ArrayList<DetaNotaCredito>();
							detanotacreditos.addAll(detanotacreditosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdEmpaque")) {
				this.sDetalleReporte=DetaNotaCreditoConstantesFunciones.getDetalleIndiceFK_IdEmpaque(id_empaqueFK_IdEmpaque);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					detanotacreditoLogic.getDetaNotaCreditosFK_IdEmpaque(finalQueryGlobal,pagination,id_empaqueFK_IdEmpaque);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetaNotaCreditoConstantesFunciones.getDetalleIndiceFK_IdEmpaque(id_empaqueFK_IdEmpaque);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetaNotaCreditoConstantesFunciones.getDetalleIndiceFK_IdEmpaque(id_empaqueFK_IdEmpaque);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=detanotacreditoLogic.getDetaNotaCreditos()==null||detanotacreditoLogic.getDetaNotaCreditos().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=detanotacreditos==null|| detanotacreditos.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						detanotacreditosAux=new ArrayList<DetaNotaCredito>();
						detanotacreditosAux.addAll(detanotacreditoLogic.getDetaNotaCreditos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detanotacreditosAux=new ArrayList<DetaNotaCredito>();
							detanotacreditosAux.addAll(detanotacreditos);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							detanotacreditoLogic.getDetaNotaCreditosFK_IdEmpaque(finalQueryGlobal,pagination,id_empaqueFK_IdEmpaque);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetaNotaCreditoConstantesFunciones.getDetalleIndiceFK_IdEmpaque(id_empaqueFK_IdEmpaque);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetaNotaCreditoConstantesFunciones.getDetalleIndiceFK_IdEmpaque(id_empaqueFK_IdEmpaque);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteDetaNotaCreditos("FK_IdEmpaque",detanotacreditoLogic.getDetaNotaCreditos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteDetaNotaCreditos("FK_IdEmpaque",detanotacreditos);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						detanotacreditoLogic.setDetaNotaCreditos(new ArrayList<DetaNotaCredito>());
						detanotacreditoLogic.getDetaNotaCreditos().addAll(detanotacreditosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detanotacreditos=new ArrayList<DetaNotaCredito>();
							detanotacreditos.addAll(detanotacreditosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdEmpresa")) {
				this.sDetalleReporte=DetaNotaCreditoConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					detanotacreditoLogic.getDetaNotaCreditosFK_IdEmpresa(finalQueryGlobal,pagination,id_empresaFK_IdEmpresa);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetaNotaCreditoConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetaNotaCreditoConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=detanotacreditoLogic.getDetaNotaCreditos()==null||detanotacreditoLogic.getDetaNotaCreditos().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=detanotacreditos==null|| detanotacreditos.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						detanotacreditosAux=new ArrayList<DetaNotaCredito>();
						detanotacreditosAux.addAll(detanotacreditoLogic.getDetaNotaCreditos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detanotacreditosAux=new ArrayList<DetaNotaCredito>();
							detanotacreditosAux.addAll(detanotacreditos);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							detanotacreditoLogic.getDetaNotaCreditosFK_IdEmpresa(finalQueryGlobal,pagination,id_empresaFK_IdEmpresa);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetaNotaCreditoConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetaNotaCreditoConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteDetaNotaCreditos("FK_IdEmpresa",detanotacreditoLogic.getDetaNotaCreditos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteDetaNotaCreditos("FK_IdEmpresa",detanotacreditos);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						detanotacreditoLogic.setDetaNotaCreditos(new ArrayList<DetaNotaCredito>());
						detanotacreditoLogic.getDetaNotaCreditos().addAll(detanotacreditosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detanotacreditos=new ArrayList<DetaNotaCredito>();
							detanotacreditos.addAll(detanotacreditosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdNotaCredito")) {
				this.sDetalleReporte=DetaNotaCreditoConstantesFunciones.getDetalleIndiceFK_IdNotaCredito(id_nota_creditoFK_IdNotaCredito);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					detanotacreditoLogic.getDetaNotaCreditosFK_IdNotaCredito(finalQueryGlobal,pagination,id_nota_creditoFK_IdNotaCredito);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetaNotaCreditoConstantesFunciones.getDetalleIndiceFK_IdNotaCredito(id_nota_creditoFK_IdNotaCredito);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetaNotaCreditoConstantesFunciones.getDetalleIndiceFK_IdNotaCredito(id_nota_creditoFK_IdNotaCredito);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=detanotacreditoLogic.getDetaNotaCreditos()==null||detanotacreditoLogic.getDetaNotaCreditos().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=detanotacreditos==null|| detanotacreditos.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						detanotacreditosAux=new ArrayList<DetaNotaCredito>();
						detanotacreditosAux.addAll(detanotacreditoLogic.getDetaNotaCreditos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detanotacreditosAux=new ArrayList<DetaNotaCredito>();
							detanotacreditosAux.addAll(detanotacreditos);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							detanotacreditoLogic.getDetaNotaCreditosFK_IdNotaCredito(finalQueryGlobal,pagination,id_nota_creditoFK_IdNotaCredito);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetaNotaCreditoConstantesFunciones.getDetalleIndiceFK_IdNotaCredito(id_nota_creditoFK_IdNotaCredito);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetaNotaCreditoConstantesFunciones.getDetalleIndiceFK_IdNotaCredito(id_nota_creditoFK_IdNotaCredito);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteDetaNotaCreditos("FK_IdNotaCredito",detanotacreditoLogic.getDetaNotaCreditos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteDetaNotaCreditos("FK_IdNotaCredito",detanotacreditos);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						detanotacreditoLogic.setDetaNotaCreditos(new ArrayList<DetaNotaCredito>());
						detanotacreditoLogic.getDetaNotaCreditos().addAll(detanotacreditosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detanotacreditos=new ArrayList<DetaNotaCredito>();
							detanotacreditos.addAll(detanotacreditosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdPeriodo")) {
				this.sDetalleReporte=DetaNotaCreditoConstantesFunciones.getDetalleIndiceFK_IdPeriodo(id_periodoFK_IdPeriodo);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					detanotacreditoLogic.getDetaNotaCreditosFK_IdPeriodo(finalQueryGlobal,pagination,id_periodoFK_IdPeriodo);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetaNotaCreditoConstantesFunciones.getDetalleIndiceFK_IdPeriodo(id_periodoFK_IdPeriodo);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetaNotaCreditoConstantesFunciones.getDetalleIndiceFK_IdPeriodo(id_periodoFK_IdPeriodo);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=detanotacreditoLogic.getDetaNotaCreditos()==null||detanotacreditoLogic.getDetaNotaCreditos().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=detanotacreditos==null|| detanotacreditos.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						detanotacreditosAux=new ArrayList<DetaNotaCredito>();
						detanotacreditosAux.addAll(detanotacreditoLogic.getDetaNotaCreditos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detanotacreditosAux=new ArrayList<DetaNotaCredito>();
							detanotacreditosAux.addAll(detanotacreditos);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							detanotacreditoLogic.getDetaNotaCreditosFK_IdPeriodo(finalQueryGlobal,pagination,id_periodoFK_IdPeriodo);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetaNotaCreditoConstantesFunciones.getDetalleIndiceFK_IdPeriodo(id_periodoFK_IdPeriodo);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetaNotaCreditoConstantesFunciones.getDetalleIndiceFK_IdPeriodo(id_periodoFK_IdPeriodo);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteDetaNotaCreditos("FK_IdPeriodo",detanotacreditoLogic.getDetaNotaCreditos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteDetaNotaCreditos("FK_IdPeriodo",detanotacreditos);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						detanotacreditoLogic.setDetaNotaCreditos(new ArrayList<DetaNotaCredito>());
						detanotacreditoLogic.getDetaNotaCreditos().addAll(detanotacreditosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detanotacreditos=new ArrayList<DetaNotaCredito>();
							detanotacreditos.addAll(detanotacreditosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdProducto")) {
				this.sDetalleReporte=DetaNotaCreditoConstantesFunciones.getDetalleIndiceFK_IdProducto(id_productoFK_IdProducto);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					detanotacreditoLogic.getDetaNotaCreditosFK_IdProducto(finalQueryGlobal,pagination,id_productoFK_IdProducto);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetaNotaCreditoConstantesFunciones.getDetalleIndiceFK_IdProducto(id_productoFK_IdProducto);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetaNotaCreditoConstantesFunciones.getDetalleIndiceFK_IdProducto(id_productoFK_IdProducto);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=detanotacreditoLogic.getDetaNotaCreditos()==null||detanotacreditoLogic.getDetaNotaCreditos().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=detanotacreditos==null|| detanotacreditos.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						detanotacreditosAux=new ArrayList<DetaNotaCredito>();
						detanotacreditosAux.addAll(detanotacreditoLogic.getDetaNotaCreditos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detanotacreditosAux=new ArrayList<DetaNotaCredito>();
							detanotacreditosAux.addAll(detanotacreditos);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							detanotacreditoLogic.getDetaNotaCreditosFK_IdProducto(finalQueryGlobal,pagination,id_productoFK_IdProducto);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetaNotaCreditoConstantesFunciones.getDetalleIndiceFK_IdProducto(id_productoFK_IdProducto);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetaNotaCreditoConstantesFunciones.getDetalleIndiceFK_IdProducto(id_productoFK_IdProducto);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteDetaNotaCreditos("FK_IdProducto",detanotacreditoLogic.getDetaNotaCreditos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteDetaNotaCreditos("FK_IdProducto",detanotacreditos);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						detanotacreditoLogic.setDetaNotaCreditos(new ArrayList<DetaNotaCredito>());
						detanotacreditoLogic.getDetaNotaCreditos().addAll(detanotacreditosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detanotacreditos=new ArrayList<DetaNotaCredito>();
							detanotacreditos.addAll(detanotacreditosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdSucursal")) {
				this.sDetalleReporte=DetaNotaCreditoConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					detanotacreditoLogic.getDetaNotaCreditosFK_IdSucursal(finalQueryGlobal,pagination,id_sucursalFK_IdSucursal);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetaNotaCreditoConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetaNotaCreditoConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=detanotacreditoLogic.getDetaNotaCreditos()==null||detanotacreditoLogic.getDetaNotaCreditos().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=detanotacreditos==null|| detanotacreditos.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						detanotacreditosAux=new ArrayList<DetaNotaCredito>();
						detanotacreditosAux.addAll(detanotacreditoLogic.getDetaNotaCreditos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detanotacreditosAux=new ArrayList<DetaNotaCredito>();
							detanotacreditosAux.addAll(detanotacreditos);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							detanotacreditoLogic.getDetaNotaCreditosFK_IdSucursal(finalQueryGlobal,pagination,id_sucursalFK_IdSucursal);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetaNotaCreditoConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetaNotaCreditoConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteDetaNotaCreditos("FK_IdSucursal",detanotacreditoLogic.getDetaNotaCreditos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteDetaNotaCreditos("FK_IdSucursal",detanotacreditos);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						detanotacreditoLogic.setDetaNotaCreditos(new ArrayList<DetaNotaCredito>());
						detanotacreditoLogic.getDetaNotaCreditos().addAll(detanotacreditosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detanotacreditos=new ArrayList<DetaNotaCredito>();
							detanotacreditos.addAll(detanotacreditosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdTipoDetaNotaCredito")) {
				this.sDetalleReporte=DetaNotaCreditoConstantesFunciones.getDetalleIndiceFK_IdTipoDetaNotaCredito(id_tipo_deta_nota_creditoFK_IdTipoDetaNotaCredito);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					detanotacreditoLogic.getDetaNotaCreditosFK_IdTipoDetaNotaCredito(finalQueryGlobal,pagination,id_tipo_deta_nota_creditoFK_IdTipoDetaNotaCredito);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetaNotaCreditoConstantesFunciones.getDetalleIndiceFK_IdTipoDetaNotaCredito(id_tipo_deta_nota_creditoFK_IdTipoDetaNotaCredito);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetaNotaCreditoConstantesFunciones.getDetalleIndiceFK_IdTipoDetaNotaCredito(id_tipo_deta_nota_creditoFK_IdTipoDetaNotaCredito);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=detanotacreditoLogic.getDetaNotaCreditos()==null||detanotacreditoLogic.getDetaNotaCreditos().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=detanotacreditos==null|| detanotacreditos.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						detanotacreditosAux=new ArrayList<DetaNotaCredito>();
						detanotacreditosAux.addAll(detanotacreditoLogic.getDetaNotaCreditos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detanotacreditosAux=new ArrayList<DetaNotaCredito>();
							detanotacreditosAux.addAll(detanotacreditos);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							detanotacreditoLogic.getDetaNotaCreditosFK_IdTipoDetaNotaCredito(finalQueryGlobal,pagination,id_tipo_deta_nota_creditoFK_IdTipoDetaNotaCredito);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetaNotaCreditoConstantesFunciones.getDetalleIndiceFK_IdTipoDetaNotaCredito(id_tipo_deta_nota_creditoFK_IdTipoDetaNotaCredito);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetaNotaCreditoConstantesFunciones.getDetalleIndiceFK_IdTipoDetaNotaCredito(id_tipo_deta_nota_creditoFK_IdTipoDetaNotaCredito);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteDetaNotaCreditos("FK_IdTipoDetaNotaCredito",detanotacreditoLogic.getDetaNotaCreditos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteDetaNotaCreditos("FK_IdTipoDetaNotaCredito",detanotacreditos);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						detanotacreditoLogic.setDetaNotaCreditos(new ArrayList<DetaNotaCredito>());
						detanotacreditoLogic.getDetaNotaCreditos().addAll(detanotacreditosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detanotacreditos=new ArrayList<DetaNotaCredito>();
							detanotacreditos.addAll(detanotacreditosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdTipoDevolucionEmpresa")) {
				this.sDetalleReporte=DetaNotaCreditoConstantesFunciones.getDetalleIndiceFK_IdTipoDevolucionEmpresa(id_tipo_devolucion_empresaFK_IdTipoDevolucionEmpresa);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					detanotacreditoLogic.getDetaNotaCreditosFK_IdTipoDevolucionEmpresa(finalQueryGlobal,pagination,id_tipo_devolucion_empresaFK_IdTipoDevolucionEmpresa);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetaNotaCreditoConstantesFunciones.getDetalleIndiceFK_IdTipoDevolucionEmpresa(id_tipo_devolucion_empresaFK_IdTipoDevolucionEmpresa);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetaNotaCreditoConstantesFunciones.getDetalleIndiceFK_IdTipoDevolucionEmpresa(id_tipo_devolucion_empresaFK_IdTipoDevolucionEmpresa);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=detanotacreditoLogic.getDetaNotaCreditos()==null||detanotacreditoLogic.getDetaNotaCreditos().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=detanotacreditos==null|| detanotacreditos.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						detanotacreditosAux=new ArrayList<DetaNotaCredito>();
						detanotacreditosAux.addAll(detanotacreditoLogic.getDetaNotaCreditos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detanotacreditosAux=new ArrayList<DetaNotaCredito>();
							detanotacreditosAux.addAll(detanotacreditos);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							detanotacreditoLogic.getDetaNotaCreditosFK_IdTipoDevolucionEmpresa(finalQueryGlobal,pagination,id_tipo_devolucion_empresaFK_IdTipoDevolucionEmpresa);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetaNotaCreditoConstantesFunciones.getDetalleIndiceFK_IdTipoDevolucionEmpresa(id_tipo_devolucion_empresaFK_IdTipoDevolucionEmpresa);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetaNotaCreditoConstantesFunciones.getDetalleIndiceFK_IdTipoDevolucionEmpresa(id_tipo_devolucion_empresaFK_IdTipoDevolucionEmpresa);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteDetaNotaCreditos("FK_IdTipoDevolucionEmpresa",detanotacreditoLogic.getDetaNotaCreditos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteDetaNotaCreditos("FK_IdTipoDevolucionEmpresa",detanotacreditos);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						detanotacreditoLogic.setDetaNotaCreditos(new ArrayList<DetaNotaCredito>());
						detanotacreditoLogic.getDetaNotaCreditos().addAll(detanotacreditosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detanotacreditos=new ArrayList<DetaNotaCredito>();
							detanotacreditos.addAll(detanotacreditosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdUnidad")) {
				this.sDetalleReporte=DetaNotaCreditoConstantesFunciones.getDetalleIndiceFK_IdUnidad(id_unidadFK_IdUnidad);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					detanotacreditoLogic.getDetaNotaCreditosFK_IdUnidad(finalQueryGlobal,pagination,id_unidadFK_IdUnidad);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetaNotaCreditoConstantesFunciones.getDetalleIndiceFK_IdUnidad(id_unidadFK_IdUnidad);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetaNotaCreditoConstantesFunciones.getDetalleIndiceFK_IdUnidad(id_unidadFK_IdUnidad);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=detanotacreditoLogic.getDetaNotaCreditos()==null||detanotacreditoLogic.getDetaNotaCreditos().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=detanotacreditos==null|| detanotacreditos.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						detanotacreditosAux=new ArrayList<DetaNotaCredito>();
						detanotacreditosAux.addAll(detanotacreditoLogic.getDetaNotaCreditos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detanotacreditosAux=new ArrayList<DetaNotaCredito>();
							detanotacreditosAux.addAll(detanotacreditos);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							detanotacreditoLogic.getDetaNotaCreditosFK_IdUnidad(finalQueryGlobal,pagination,id_unidadFK_IdUnidad);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetaNotaCreditoConstantesFunciones.getDetalleIndiceFK_IdUnidad(id_unidadFK_IdUnidad);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetaNotaCreditoConstantesFunciones.getDetalleIndiceFK_IdUnidad(id_unidadFK_IdUnidad);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteDetaNotaCreditos("FK_IdUnidad",detanotacreditoLogic.getDetaNotaCreditos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteDetaNotaCreditos("FK_IdUnidad",detanotacreditos);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						detanotacreditoLogic.setDetaNotaCreditos(new ArrayList<DetaNotaCredito>());
						detanotacreditoLogic.getDetaNotaCreditos().addAll(detanotacreditosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detanotacreditos=new ArrayList<DetaNotaCredito>();
							detanotacreditos.addAll(detanotacreditosAux);
						}
						//ARCHITECTURE
					}
				}

			} 
		
		
		
		this.redimensionarTablaDatos();
		//this.refrescarForeignKeysDescripcionesDetaNotaCredito();
		
		this.traerValoresTablaTotales();	
		/*
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.arrDatoGeneralTotales=DetaNotaCreditoConstantesFunciones.getTotalesListaDetaNotaCredito(detanotacreditoLogic.getDetaNotaCreditos());							
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			this.arrDatoGeneralTotales=DetaNotaCreditoConstantesFunciones.getTotalesListaDetaNotaCredito(this.detanotacreditos);
		}
		*/
		
		if(this.conTotales) {
			this.crearFilaTotales();
		}		
		} catch (JRException e) {
			throw e;
		} catch(Exception e) {
			throw e;
      	} finally {
      		//this.finishProcessDetaNotaCredito();
      	}
		
	}				
	
	public void redimensionarTablaDatos() throws Exception {
		int iSizeTabla=0;
				
		iSizeTabla=this.getSizeTablaDatos();
		
		//ARCHITECTURE
		/*
		if(Constantes.ISUSAEJBLOGICLAYER) {	
			iSizeTabla=detanotacreditoLogic.getDetaNotaCreditos().size();
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			iSizeTabla=detanotacreditos.size();
		}
		*/
		//ARCHITECTURE
											
		this.redimensionarTablaDatos(iSizeTabla);		
	}
	
	public Integer getSizeTablaDatos() throws Exception {
		Integer iSizeTabla=0;
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {	
			iSizeTabla=detanotacreditoLogic.getDetaNotaCreditos().size();
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			iSizeTabla=detanotacreditos.size();
		}
		//ARCHITECTURE
											
		return iSizeTabla;		
	}
	
			
	public Boolean permiteMantenimiento(DetaNotaCredito detanotacredito) {
		Boolean permite=true;
		
		if(this.detanotacredito.getsType().equals(Constantes2.S_TOTALES)) {
			permite=false;
		}
		
		return permite;
	}
	
	public void traerValoresTablaTotales() throws Exception {
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.arrDatoGeneralTotales=DetaNotaCreditoConstantesFunciones.getTotalesListaDetaNotaCredito(detanotacreditoLogic.getDetaNotaCreditos());							
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			this.arrDatoGeneralTotales=DetaNotaCreditoConstantesFunciones.getTotalesListaDetaNotaCredito(this.detanotacreditos);
		}
	}
	
	
	public void traerValoresTablaOrderBy() throws Exception {
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.arrOrderBy=DetaNotaCreditoConstantesFunciones.getOrderByListaDetaNotaCredito();							
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			this.arrOrderBy=DetaNotaCreditoConstantesFunciones.getOrderByListaDetaNotaCredito();
		}		
	}
	
	
	public Boolean existeFilaTotales() throws Exception {
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(DetaNotaCredito detanotacredito:detanotacreditoLogic.getDetaNotaCreditos()) {
				if(detanotacredito.getsType().equals(Constantes2.S_TOTALES)) {
					detanotacreditoTotales=detanotacredito;
					existe=true;
					break;
				}
			}
								
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(DetaNotaCredito detanotacredito:this.detanotacreditos) {
				if(detanotacredito.getsType().equals(Constantes2.S_TOTALES)) {
					detanotacreditoTotales=detanotacredito;
					existe=true;
					break;
				}
			}
		}
		
		return existe;
	}
	
	public void crearFilaTotales() throws Exception {
		Boolean existe=false;
		
		existe=this.existeFilaTotales();
		
		if(!existe) {
			//SI NO ES UNO A UNO SE CREA FILA TOTALES
			this.detanotacreditoAux=new DetaNotaCredito();
			this.detanotacreditoAux.setsType(Constantes2.S_TOTALES);
			this.detanotacreditoAux.setIsNew(false);
			this.detanotacreditoAux.setIsChanged(false);
			this.detanotacreditoAux.setIsDeleted(false);
				
			if(Constantes.ISUSAEJBLOGICLAYER) {
				DetaNotaCreditoConstantesFunciones.TotalizarValoresFilaDetaNotaCredito(this.detanotacreditoLogic.getDetaNotaCreditos(),this.detanotacreditoAux);
				
				this.detanotacreditoLogic.getDetaNotaCreditos().add(this.detanotacreditoAux);
				
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
				DetaNotaCreditoConstantesFunciones.TotalizarValoresFilaDetaNotaCredito(this.detanotacreditos,this.detanotacreditoAux);
				
				this.detanotacreditos.add(this.detanotacreditoAux);
			}
		}
	}
	
	public void quitarFilaTotales() throws Exception {
		detanotacreditoTotales=new DetaNotaCredito();
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			existe=this.existeFilaTotales();
			
			if(existe) {
				this.detanotacreditoLogic.getDetaNotaCreditos().remove(detanotacreditoTotales);
			}			
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			existe=this.existeFilaTotales();
			
			if(existe) {
				this.detanotacreditos.remove(detanotacreditoTotales);
			}
		}
	}
	
	public void actualizarFilaTotales() throws Exception {
		detanotacreditoTotales=new DetaNotaCredito();
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(DetaNotaCredito detanotacredito:detanotacreditoLogic.getDetaNotaCreditos()) {
				if(detanotacredito.getsType().equals(Constantes2.S_TOTALES)) {
					detanotacreditoTotales=detanotacredito;
					existe=true;
					break;
				}
			}
			
			if(existe) {
				DetaNotaCreditoConstantesFunciones.TotalizarValoresFilaDetaNotaCredito(this.detanotacreditoLogic.getDetaNotaCreditos(),detanotacreditoTotales);
			}			
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(DetaNotaCredito detanotacredito:this.detanotacreditos) {
				if(detanotacredito.getsType().equals(Constantes2.S_TOTALES)) {
					detanotacreditoTotales=detanotacredito;
					existe=true;
					break;
				}
			}
			
			if(existe) {
				DetaNotaCreditoConstantesFunciones.TotalizarValoresFilaDetaNotaCredito(this.detanotacreditos,detanotacreditoTotales);
			}
		}
	}		
	
	public void recargarInformacion()throws Exception {
		try {
			sAccionBusqueda="Todos";
			this.iNumeroPaginacionPagina=0;
			
			this.procesarBusqueda(sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);
		}	
	}		
	
	
	public void getDetaNotaCreditosFK_IdAnio()throws Exception {
		try {
			sAccionBusqueda="FK_IdAnio";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getDetaNotaCreditosFK_IdBodega()throws Exception {
		try {
			sAccionBusqueda="FK_IdBodega";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getDetaNotaCreditosFK_IdCentroCosto()throws Exception {
		try {
			sAccionBusqueda="FK_IdCentroCosto";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getDetaNotaCreditosFK_IdEjercicio()throws Exception {
		try {
			sAccionBusqueda="FK_IdEjercicio";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getDetaNotaCreditosFK_IdEmpaque()throws Exception {
		try {
			sAccionBusqueda="FK_IdEmpaque";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getDetaNotaCreditosFK_IdEmpresa()throws Exception {
		try {
			sAccionBusqueda="FK_IdEmpresa";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getDetaNotaCreditosFK_IdMes()throws Exception {
		try {
			sAccionBusqueda="FK_IdMes";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getDetaNotaCreditosFK_IdNotaCredito()throws Exception {
		try {
			sAccionBusqueda="FK_IdNotaCredito";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getDetaNotaCreditosFK_IdPeriodo()throws Exception {
		try {
			sAccionBusqueda="FK_IdPeriodo";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getDetaNotaCreditosFK_IdProducto()throws Exception {
		try {
			sAccionBusqueda="FK_IdProducto";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getDetaNotaCreditosFK_IdSucursal()throws Exception {
		try {
			sAccionBusqueda="FK_IdSucursal";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getDetaNotaCreditosFK_IdTipoDetaNotaCredito()throws Exception {
		try {
			sAccionBusqueda="FK_IdTipoDetaNotaCredito";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getDetaNotaCreditosFK_IdTipoDevolucionEmpresa()throws Exception {
		try {
			sAccionBusqueda="FK_IdTipoDevolucionEmpresa";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getDetaNotaCreditosFK_IdUnidad()throws Exception {
		try {
			sAccionBusqueda="FK_IdUnidad";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	
	
	public void getDetaNotaCreditosFK_IdAnio(String sFinalQuery,Long id_anio)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					detanotacreditoLogic.getDetaNotaCreditosFK_IdAnio(sFinalQuery,this.pagination,id_anio);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getDetaNotaCreditosFK_IdBodega(String sFinalQuery,Long id_bodega)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					detanotacreditoLogic.getDetaNotaCreditosFK_IdBodega(sFinalQuery,this.pagination,id_bodega);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getDetaNotaCreditosFK_IdCentroCosto(String sFinalQuery,Long id_centro_costo)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					detanotacreditoLogic.getDetaNotaCreditosFK_IdCentroCosto(sFinalQuery,this.pagination,id_centro_costo);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getDetaNotaCreditosFK_IdEjercicio(String sFinalQuery,Long id_ejercicio)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					detanotacreditoLogic.getDetaNotaCreditosFK_IdEjercicio(sFinalQuery,this.pagination,id_ejercicio);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getDetaNotaCreditosFK_IdEmpaque(String sFinalQuery,Long id_empaque)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					detanotacreditoLogic.getDetaNotaCreditosFK_IdEmpaque(sFinalQuery,this.pagination,id_empaque);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getDetaNotaCreditosFK_IdEmpresa(String sFinalQuery,Long id_empresa)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					detanotacreditoLogic.getDetaNotaCreditosFK_IdEmpresa(sFinalQuery,this.pagination,id_empresa);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getDetaNotaCreditosFK_IdMes(String sFinalQuery,Long id_mes)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					detanotacreditoLogic.getDetaNotaCreditosFK_IdMes(sFinalQuery,this.pagination,id_mes);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getDetaNotaCreditosFK_IdNotaCredito(String sFinalQuery,Long id_nota_credito)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					detanotacreditoLogic.getDetaNotaCreditosFK_IdNotaCredito(sFinalQuery,this.pagination,id_nota_credito);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getDetaNotaCreditosFK_IdPeriodo(String sFinalQuery,Long id_periodo)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					detanotacreditoLogic.getDetaNotaCreditosFK_IdPeriodo(sFinalQuery,this.pagination,id_periodo);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getDetaNotaCreditosFK_IdProducto(String sFinalQuery,Long id_producto)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					detanotacreditoLogic.getDetaNotaCreditosFK_IdProducto(sFinalQuery,this.pagination,id_producto);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getDetaNotaCreditosFK_IdSucursal(String sFinalQuery,Long id_sucursal)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					detanotacreditoLogic.getDetaNotaCreditosFK_IdSucursal(sFinalQuery,this.pagination,id_sucursal);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getDetaNotaCreditosFK_IdTipoDetaNotaCredito(String sFinalQuery,Long id_tipo_deta_nota_credito)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					detanotacreditoLogic.getDetaNotaCreditosFK_IdTipoDetaNotaCredito(sFinalQuery,this.pagination,id_tipo_deta_nota_credito);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getDetaNotaCreditosFK_IdTipoDevolucionEmpresa(String sFinalQuery,Long id_tipo_devolucion_empresa)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					detanotacreditoLogic.getDetaNotaCreditosFK_IdTipoDevolucionEmpresa(sFinalQuery,this.pagination,id_tipo_devolucion_empresa);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getDetaNotaCreditosFK_IdUnidad(String sFinalQuery,Long id_unidad)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					detanotacreditoLogic.getDetaNotaCreditosFK_IdUnidad(sFinalQuery,this.pagination,id_unidad);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	
	public void onLoad()throws Exception {		
		try {		
			isEntroOnLoad=true;
			//INTENTA TRAER DATOS DE BUSQUEDA ANTERIOR
			this.traerDatosBusquedaDesdeSession();
					
			//SINO SE CUMPLE VIENE DE PADRE FOREIGN O BUSQUEDA ANTIGUA
			if(this.sAccionBusqueda.equals("")) {
				this.sAccionBusqueda="Todos";
			}
								
			this.procesarBusqueda(sAccionBusqueda);
			
		} catch (Exception e) {
			throw e;
		}
	}		
	
	public void inicializarPermisosDetaNotaCredito() {
		this.isPermisoTodoDetaNotaCredito=false;
		this.isPermisoNuevoDetaNotaCredito=false;
		this.isPermisoActualizarDetaNotaCredito=false;
		this.isPermisoActualizarOriginalDetaNotaCredito=false;
		this.isPermisoEliminarDetaNotaCredito=false;
		this.isPermisoGuardarCambiosDetaNotaCredito=false;
		this.isPermisoConsultaDetaNotaCredito=false;
		this.isPermisoBusquedaDetaNotaCredito=false;
		this.isPermisoReporteDetaNotaCredito=false;		
		this.isPermisoOrdenDetaNotaCredito=false;		
		this.isPermisoPaginacionMedioDetaNotaCredito=false;		
		this.isPermisoPaginacionAltoDetaNotaCredito=false;
		this.isPermisoPaginacionTodoDetaNotaCredito=false;
		this.isPermisoCopiarDetaNotaCredito=false;		
		this.isPermisoVerFormDetaNotaCredito=false;		
		this.isPermisoDuplicarDetaNotaCredito=false;		
		this.isPermisoOrdenDetaNotaCredito=false;		
	}
	
	public void setPermisosUsuarioDetaNotaCredito(Boolean isPermiso) {
		this.isPermisoTodoDetaNotaCredito=isPermiso;
		this.isPermisoNuevoDetaNotaCredito=isPermiso;
		this.isPermisoActualizarDetaNotaCredito=isPermiso;
		this.isPermisoActualizarOriginalDetaNotaCredito=isPermiso;
		this.isPermisoEliminarDetaNotaCredito=isPermiso;
		this.isPermisoGuardarCambiosDetaNotaCredito=isPermiso;
		this.isPermisoConsultaDetaNotaCredito=isPermiso;
		this.isPermisoBusquedaDetaNotaCredito=isPermiso;
		this.isPermisoReporteDetaNotaCredito=isPermiso;
		this.isPermisoOrdenDetaNotaCredito=isPermiso;		
		this.isPermisoPaginacionMedioDetaNotaCredito=isPermiso;		
		this.isPermisoPaginacionAltoDetaNotaCredito=isPermiso;		
		this.isPermisoPaginacionTodoDetaNotaCredito=isPermiso;		
		this.isPermisoCopiarDetaNotaCredito=isPermiso;		
		this.isPermisoVerFormDetaNotaCredito=isPermiso;		
		this.isPermisoDuplicarDetaNotaCredito=isPermiso;
		this.isPermisoOrdenDetaNotaCredito=isPermiso;
	}
	
	public void setPermisosMantenimientoUsuarioDetaNotaCredito(Boolean isPermiso) {
		//this.isPermisoTodoDetaNotaCredito=isPermiso;
		this.isPermisoNuevoDetaNotaCredito=isPermiso;
		this.isPermisoActualizarDetaNotaCredito=isPermiso;
		this.isPermisoActualizarOriginalDetaNotaCredito=isPermiso;
		this.isPermisoEliminarDetaNotaCredito=isPermiso;
		this.isPermisoGuardarCambiosDetaNotaCredito=isPermiso;
		//this.isPermisoConsultaDetaNotaCredito=isPermiso;
		//this.isPermisoBusquedaDetaNotaCredito=isPermiso;
		//this.isPermisoReporteDetaNotaCredito=isPermiso;
		//this.isPermisoOrdenDetaNotaCredito=isPermiso;		
		//this.isPermisoPaginacionMedioDetaNotaCredito=isPermiso;		
		//this.isPermisoPaginacionAltoDetaNotaCredito=isPermiso;		
		//this.isPermisoPaginacionTodoDetaNotaCredito=isPermiso;		
		//this.isPermisoCopiarDetaNotaCredito=isPermiso;		
		//this.isPermisoDuplicarDetaNotaCredito=isPermiso;
		//this.isPermisoOrdenDetaNotaCredito=isPermiso;
	}
	
	public void inicializarSetPermisosUsuarioDetaNotaCreditoClasesRelacionadas() throws Exception {
		ArrayList<String> arrPaginas=new ArrayList<String>();		
		ArrayList<Opcion> opcionsFinal=new ArrayList<Opcion>();	
		
		
		if(DetaNotaCreditoJInternalFrame.CON_LLAMADA_SIMPLE) {
			this.opcionsRelacionadas.addAll(this.sistemaReturnGeneral.getOpcionsRelacionadas());
			
		} else {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				opcionsFinal=sistemaLogicAdditional.tienePermisosOpcionesEnPaginaWeb(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, arrPaginas);
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}
			
			this.opcionsRelacionadas.addAll(opcionsFinal);
		}
		
		
		
	}
	
	public Boolean tienePermisosUsuarioEnPaginaWebDetaNotaCredito(String sPagina) throws Exception {
		Boolean tienePermisos=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			tienePermisos=sistemaLogicAdditional.tienePermisosEnPaginaWeb(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, sPagina);
		} else if(Constantes.ISUSAEJBREMOTE) {
		} else if(Constantes.ISUSAEJBHOME) {
		}
		
		return tienePermisos;
	}
	
	public void inicializarSetPermisosUsuarioDetaNotaCreditoClasesRelacionadas(Boolean conPermiso) throws Exception {
		
	}
	
	public Boolean verificarGetPermisosUsuarioDetaNotaCreditoClaseRelacionada(ArrayList<String> arrPaginasFinal,String sPaginaActual) throws Exception {
		Boolean verificado=false;
		
		verificado=Funciones2.verificarGetPermisosUsuarioClaseRelacionada(arrPaginasFinal,sPaginaActual);				
		
		return verificado;
	}
	
	public Boolean verificarGetPermisosUsuarioOpcionDetaNotaCreditoClaseRelacionada(List<Opcion> opcionsFinal,String sPaginaActual) throws Exception {
		Boolean verificado=false;
		
		verificado=Funciones2.verificarGetPermisosUsuarioOpcionClaseRelacionada(opcionsFinal,sPaginaActual);				
		
		return verificado;
	}
	
	public void actualizarTabsSetPermisosUsuarioDetaNotaCreditoClasesRelacionadas() throws Exception {
		
	}
	
	public void setPermisosUsuarioDetaNotaCredito() throws Exception {
		
		PerfilOpcion perfilOpcionUsuario=new PerfilOpcion();		
		Long idOpcion=this.opcionActual.getId();
		
		if(DetaNotaCreditoJInternalFrame.CON_LLAMADA_SIMPLE) {
			perfilOpcionUsuario=this.sistemaReturnGeneral.getPerfilOpcion();
			
		} else {
			if(this.detanotacreditoSessionBean.getEsGuardarRelacionado()) {
				idOpcion=0L;
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				perfilOpcionUsuario=sistemaLogicAdditional.traerPermisosPaginaWebPerfilOpcion(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, DetaNotaCreditoConstantesFunciones.SNOMBREOPCION,idOpcion);				
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}
		}
		
		if(perfilOpcionUsuario!=null && perfilOpcionUsuario.getId()>0) {
			this.isPermisoNuevoDetaNotaCredito=perfilOpcionUsuario.getingreso()||perfilOpcionUsuario.gettodo();
			this.isPermisoActualizarDetaNotaCredito=perfilOpcionUsuario.getmodificacion()||perfilOpcionUsuario.gettodo();
			this.isPermisoActualizarOriginalDetaNotaCredito=this.isPermisoActualizarDetaNotaCredito;
			this.isPermisoEliminarDetaNotaCredito=perfilOpcionUsuario.geteliminacion()||perfilOpcionUsuario.gettodo();
			this.isPermisoGuardarCambiosDetaNotaCredito=perfilOpcionUsuario.getguardar_cambios()||perfilOpcionUsuario.gettodo();
			this.isPermisoConsultaDetaNotaCredito=perfilOpcionUsuario.getconsulta()||perfilOpcionUsuario.gettodo();
			this.isPermisoBusquedaDetaNotaCredito=perfilOpcionUsuario.getbusqueda()||perfilOpcionUsuario.gettodo();
			this.isPermisoTodoDetaNotaCredito=perfilOpcionUsuario.gettodo()||perfilOpcionUsuario.gettodo();
			this.isPermisoReporteDetaNotaCredito=perfilOpcionUsuario.getreporte()||perfilOpcionUsuario.gettodo();
			this.isPermisoOrdenDetaNotaCredito=perfilOpcionUsuario.getorden()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionMedioDetaNotaCredito=perfilOpcionUsuario.getpaginacion_medio()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionAltoDetaNotaCredito=perfilOpcionUsuario.getpaginacion_alto()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionTodoDetaNotaCredito=perfilOpcionUsuario.getpaginacion_todo()||perfilOpcionUsuario.gettodo();
			this.isPermisoCopiarDetaNotaCredito=perfilOpcionUsuario.getcopiar()||perfilOpcionUsuario.gettodo();
			this.isPermisoVerFormDetaNotaCredito=true;//perfilOpcionUsuario.getver_form()||perfilOpcionUsuario.gettodo();
			this.isPermisoDuplicarDetaNotaCredito=perfilOpcionUsuario.getduplicar()||perfilOpcionUsuario.gettodo();
			this.isPermisoOrdenDetaNotaCredito=perfilOpcionUsuario.getorden()||perfilOpcionUsuario.gettodo();
			
			if(this.detanotacreditoSessionBean.getEsGuardarRelacionado()) {
				this.opcionActual.setId(perfilOpcionUsuario.getid_opcion());
				
				this.jTableDatosDetaNotaCredito.setToolTipText(this.jTableDatosDetaNotaCredito.getToolTipText()+"_"+perfilOpcionUsuario.getid_opcion());		
			}
		} else {
			this.setPermisosUsuarioDetaNotaCredito(false);
		}
		
		//SI SE NECESITA PONER TODOS LOS PERMISOS POR DEFECTO
		//
		
	}
	
	public void setAccionesUsuarioDetaNotaCredito(Boolean esParaAccionesFormulario) throws Exception {		
		Reporte reporte=null;
		
		if(!esParaAccionesFormulario) {
			this.accions=new ArrayList<Accion>();
			
			if(DetaNotaCreditoJInternalFrame.CON_LLAMADA_SIMPLE) {
				this.accions=this.sistemaReturnGeneral.getAccions();
				
				
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.accions=sistemaLogicAdditional.getAccionesUsuario(this.usuarioActual,this.opcionActual,false);				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}
			
			if(this.accions.size()>0) {			
				for(Accion accion:this.accions) {
					reporte=new Reporte();
					reporte.setsCodigo(accion.getcodigo());
					reporte.setsDescripcion(accion.getnombre());
		
		
					this.tiposAcciones.add(reporte);
				}
			}	
			
			

			reporte=new Reporte();
			reporte.setsCodigo("");
			reporte.setsDescripcion("");

			this.tiposAcciones.add(reporte);
			
		} else {
			//ACCIONES FORMULARIO
			this.accionsFormulario=new ArrayList<Accion>();
			
			if(DetaNotaCreditoJInternalFrame.CON_LLAMADA_SIMPLE) {
				this.accionsFormulario=this.sistemaReturnGeneral.getAccionsFormulario();
			
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.accionsFormulario=sistemaLogicAdditional.getAccionesUsuario(this.usuarioActual,this.opcionActual,true);				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}
			
			if(this.accionsFormulario.size()>0) {			
				for(Accion accion:this.accionsFormulario) {
					reporte=new Reporte();
					reporte.setsCodigo(accion.getcodigo());
					reporte.setsDescripcion(accion.getnombre());
					
					this.tiposAccionesFormulario.add(reporte);
				}
			}	
			
			

			reporte=new Reporte();
			reporte.setsCodigo("");
			reporte.setsDescripcion("");

			this.tiposAccionesFormulario.add(reporte);
		}				
	}	 	
	
	public void setRelacionesUsuarioDetaNotaCredito() throws Exception {
		Reporte reporte=null;
		
		
		
		
		//ORDENAR ALFABETICAMENTE
		Collections.sort(this.tiposRelaciones, new ReporteComparator());
		/*
		reporte=new Reporte();
		reporte.setsCodigo(accion.getcodigo());
		reporte.setsDescripcion(accion.getnombre());
			
		this.tiposRelaciones.add(reporte);
		*/
	}	
	
		
	@SuppressWarnings({ "unchecked", "rawtypes" } )
	public void inicializarCombosForeignKeyDetaNotaCreditoListas()throws Exception {
		try	{						
			
				this.empresasForeignKey=new ArrayList();
				this.sucursalsForeignKey=new ArrayList();
				this.ejerciciosForeignKey=new ArrayList();
				this.periodosForeignKey=new ArrayList();
				this.aniosForeignKey=new ArrayList();
				this.messForeignKey=new ArrayList();
				this.notacreditosForeignKey=new ArrayList();
				this.bodegasForeignKey=new ArrayList();
				this.productosForeignKey=new ArrayList();
				this.unidadsForeignKey=new ArrayList();
				this.tipodetanotacreditosForeignKey=new ArrayList();
				this.tipodevolucionempresasForeignKey=new ArrayList();
				this.centrocostosForeignKey=new ArrayList();
				this.empaquesForeignKey=new ArrayList();
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void cargarCombosTodosForeignKeyDetaNotaCreditoListas(Boolean cargarCombosDependencia)throws Exception {
		try	{
			
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			String sFinalQueryCombo="";
			
			Modulo  moduloActualAux=new Modulo();
			
			if(DetaNotaCreditoJInternalFrame.ISLOAD_FKLOTE) {
				this.cargarCombosLoteForeignKeyDetaNotaCreditoListas(false);
			} else {
			
				this.cargarCombosForeignKeyEmpresaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeySucursalListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyEjercicioListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyPeriodoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyAnioListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyMesListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyNotaCreditoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyBodegaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyProductoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyUnidadListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTipoDetaNotaCreditoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTipoDevolucionEmpresaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyCentroCostoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyEmpaqueListas(cargarCombosDependencia,sFinalQueryCombo);
			}
		} catch(Exception e) {
			throw e;
		}		
	}		
	
	

	public void cargarCombosForeignKeyEmpresaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.empresasForeignKey==null||this.empresasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=EmpresaConstantesFunciones.getArrayColumnasGlobalesEmpresa(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EmpresaConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=EmpresaConstantesFunciones.SFINALQUERY;

				this.cargarCombosEmpresasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeySucursalListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.sucursalsForeignKey==null||this.sucursalsForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=SucursalConstantesFunciones.getArrayColumnasGlobalesSucursal(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,SucursalConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=SucursalConstantesFunciones.SFINALQUERY;

				this.cargarCombosSucursalsForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyEjercicioListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.ejerciciosForeignKey==null||this.ejerciciosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=EjercicioConstantesFunciones.getArrayColumnasGlobalesEjercicio(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EjercicioConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=EjercicioConstantesFunciones.SFINALQUERY;

				this.cargarCombosEjerciciosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyPeriodoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.periodosForeignKey==null||this.periodosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=PeriodoConstantesFunciones.getArrayColumnasGlobalesPeriodo(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,PeriodoConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=PeriodoConstantesFunciones.SFINALQUERY;

				this.cargarCombosPeriodosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyAnioListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.aniosForeignKey==null||this.aniosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=AnioConstantesFunciones.getArrayColumnasGlobalesAnio(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,AnioConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=AnioConstantesFunciones.SFINALQUERY;

				this.cargarCombosAniosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyMesListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.messForeignKey==null||this.messForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=MesConstantesFunciones.getArrayColumnasGlobalesMes(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,MesConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=MesConstantesFunciones.SFINALQUERY;

				this.cargarCombosMessForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyNotaCreditoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.notacreditosForeignKey==null||this.notacreditosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=NotaCreditoConstantesFunciones.getArrayColumnasGlobalesNotaCredito(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,NotaCreditoConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=NotaCreditoConstantesFunciones.SFINALQUERY;

				this.cargarCombosNotaCreditosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyBodegaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.bodegasForeignKey==null||this.bodegasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=BodegaConstantesFunciones.getArrayColumnasGlobalesBodega(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,BodegaConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=BodegaConstantesFunciones.SFINALQUERY;

				this.cargarCombosBodegasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyProductoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if(cargarCombosDependencia && (this.productosForeignKey==null||this.productosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=ProductoConstantesFunciones.getArrayColumnasGlobalesProducto(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,ProductoConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=ProductoConstantesFunciones.SFINALQUERY;

				this.cargarCombosProductosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyUnidadListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if(cargarCombosDependencia && (this.unidadsForeignKey==null||this.unidadsForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=UnidadConstantesFunciones.getArrayColumnasGlobalesUnidad(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,UnidadConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=UnidadConstantesFunciones.SFINALQUERY;

				this.cargarCombosUnidadsForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoDetaNotaCreditoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.tipodetanotacreditosForeignKey==null||this.tipodetanotacreditosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TipoDetaNotaCreditoConstantesFunciones.getArrayColumnasGlobalesTipoDetaNotaCredito(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoDetaNotaCreditoConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TipoDetaNotaCreditoConstantesFunciones.SFINALQUERY;

				this.cargarCombosTipoDetaNotaCreditosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoDevolucionEmpresaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.tipodevolucionempresasForeignKey==null||this.tipodevolucionempresasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TipoDevolucionEmpresaConstantesFunciones.getArrayColumnasGlobalesTipoDevolucionEmpresa(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoDevolucionEmpresaConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TipoDevolucionEmpresaConstantesFunciones.SFINALQUERY;

				this.cargarCombosTipoDevolucionEmpresasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCentroCostoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.centrocostosForeignKey==null||this.centrocostosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=CentroCostoConstantesFunciones.getArrayColumnasGlobalesCentroCosto(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CentroCostoConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=CentroCostoConstantesFunciones.SFINALQUERY;

				this.cargarCombosCentroCostosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyEmpaqueListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.empaquesForeignKey==null||this.empaquesForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=EmpaqueConstantesFunciones.getArrayColumnasGlobalesEmpaque(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EmpaqueConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=EmpaqueConstantesFunciones.SFINALQUERY;

				this.cargarCombosEmpaquesForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}
	
	public void cargarCombosLoteForeignKeyDetaNotaCreditoListas(Boolean cargarCombosDependencia)throws Exception {
		try	{
			
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			
			Modulo  moduloActualAux=new Modulo();
			
			
			DetaNotaCreditoParameterReturnGeneral detanotacreditoReturnGeneral=new DetaNotaCreditoParameterReturnGeneral();
						
			


				String finalQueryGlobalEmpresa="";

				if(((this.empresasForeignKey==null||this.empresasForeignKey.size()<=0) && this.detanotacreditoConstantesFunciones.cargarid_empresaDetaNotaCredito)
					 || (this.esRecargarFks && this.detanotacreditoConstantesFunciones.cargarid_empresaDetaNotaCredito)) {

					if(!this.detanotacreditoSessionBean.getisBusquedaDesdeForeignKeySesionEmpresa()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=EmpresaConstantesFunciones.getArrayColumnasGlobalesEmpresa(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalEmpresa=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EmpresaConstantesFunciones.TABLENAME);

						finalQueryGlobalEmpresa=Funciones.GetFinalQueryAppend(finalQueryGlobalEmpresa, "");
						finalQueryGlobalEmpresa+=EmpresaConstantesFunciones.SFINALQUERY;

						//this.cargarCombosEmpresasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalEmpresa=" WHERE " + ConstantesSql.ID + "="+detanotacreditoSessionBean.getlidEmpresaActual();
					}
				} else {
					finalQueryGlobalEmpresa="NONE";
				}


				String finalQueryGlobalSucursal="";

				if(((this.sucursalsForeignKey==null||this.sucursalsForeignKey.size()<=0) && this.detanotacreditoConstantesFunciones.cargarid_sucursalDetaNotaCredito)
					 || (this.esRecargarFks && this.detanotacreditoConstantesFunciones.cargarid_sucursalDetaNotaCredito)) {

					if(!this.detanotacreditoSessionBean.getisBusquedaDesdeForeignKeySesionSucursal()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=SucursalConstantesFunciones.getArrayColumnasGlobalesSucursal(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalSucursal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,SucursalConstantesFunciones.TABLENAME);

						finalQueryGlobalSucursal=Funciones.GetFinalQueryAppend(finalQueryGlobalSucursal, "");
						finalQueryGlobalSucursal+=SucursalConstantesFunciones.SFINALQUERY;

						//this.cargarCombosSucursalsForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalSucursal=" WHERE " + ConstantesSql.ID + "="+detanotacreditoSessionBean.getlidSucursalActual();
					}
				} else {
					finalQueryGlobalSucursal="NONE";
				}


				String finalQueryGlobalEjercicio="";

				if(((this.ejerciciosForeignKey==null||this.ejerciciosForeignKey.size()<=0) && this.detanotacreditoConstantesFunciones.cargarid_ejercicioDetaNotaCredito)
					 || (this.esRecargarFks && this.detanotacreditoConstantesFunciones.cargarid_ejercicioDetaNotaCredito)) {

					if(!this.detanotacreditoSessionBean.getisBusquedaDesdeForeignKeySesionEjercicio()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=EjercicioConstantesFunciones.getArrayColumnasGlobalesEjercicio(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalEjercicio=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EjercicioConstantesFunciones.TABLENAME);

						finalQueryGlobalEjercicio=Funciones.GetFinalQueryAppend(finalQueryGlobalEjercicio, "");
						finalQueryGlobalEjercicio+=EjercicioConstantesFunciones.SFINALQUERY;

						//this.cargarCombosEjerciciosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalEjercicio=" WHERE " + ConstantesSql.ID + "="+detanotacreditoSessionBean.getlidEjercicioActual();
					}
				} else {
					finalQueryGlobalEjercicio="NONE";
				}


				String finalQueryGlobalPeriodo="";

				if(((this.periodosForeignKey==null||this.periodosForeignKey.size()<=0) && this.detanotacreditoConstantesFunciones.cargarid_periodoDetaNotaCredito)
					 || (this.esRecargarFks && this.detanotacreditoConstantesFunciones.cargarid_periodoDetaNotaCredito)) {

					if(!this.detanotacreditoSessionBean.getisBusquedaDesdeForeignKeySesionPeriodo()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=PeriodoConstantesFunciones.getArrayColumnasGlobalesPeriodo(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalPeriodo=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,PeriodoConstantesFunciones.TABLENAME);

						finalQueryGlobalPeriodo=Funciones.GetFinalQueryAppend(finalQueryGlobalPeriodo, "");
						finalQueryGlobalPeriodo+=PeriodoConstantesFunciones.SFINALQUERY;

						//this.cargarCombosPeriodosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalPeriodo=" WHERE " + ConstantesSql.ID + "="+detanotacreditoSessionBean.getlidPeriodoActual();
					}
				} else {
					finalQueryGlobalPeriodo="NONE";
				}


				String finalQueryGlobalAnio="";

				if(((this.aniosForeignKey==null||this.aniosForeignKey.size()<=0) && this.detanotacreditoConstantesFunciones.cargarid_anioDetaNotaCredito)
					 || (this.esRecargarFks && this.detanotacreditoConstantesFunciones.cargarid_anioDetaNotaCredito)) {

					if(!this.detanotacreditoSessionBean.getisBusquedaDesdeForeignKeySesionAnio()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=AnioConstantesFunciones.getArrayColumnasGlobalesAnio(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalAnio=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,AnioConstantesFunciones.TABLENAME);

						finalQueryGlobalAnio=Funciones.GetFinalQueryAppend(finalQueryGlobalAnio, "");
						finalQueryGlobalAnio+=AnioConstantesFunciones.SFINALQUERY;

						//this.cargarCombosAniosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalAnio=" WHERE " + ConstantesSql.ID + "="+detanotacreditoSessionBean.getlidAnioActual();
					}
				} else {
					finalQueryGlobalAnio="NONE";
				}


				String finalQueryGlobalMes="";

				if(((this.messForeignKey==null||this.messForeignKey.size()<=0) && this.detanotacreditoConstantesFunciones.cargarid_mesDetaNotaCredito)
					 || (this.esRecargarFks && this.detanotacreditoConstantesFunciones.cargarid_mesDetaNotaCredito)) {

					if(!this.detanotacreditoSessionBean.getisBusquedaDesdeForeignKeySesionMes()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=MesConstantesFunciones.getArrayColumnasGlobalesMes(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalMes=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,MesConstantesFunciones.TABLENAME);

						finalQueryGlobalMes=Funciones.GetFinalQueryAppend(finalQueryGlobalMes, "");
						finalQueryGlobalMes+=MesConstantesFunciones.SFINALQUERY;

						//this.cargarCombosMessForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalMes=" WHERE " + ConstantesSql.ID + "="+detanotacreditoSessionBean.getlidMesActual();
					}
				} else {
					finalQueryGlobalMes="NONE";
				}


				String finalQueryGlobalNotaCredito="";

				if(((this.notacreditosForeignKey==null||this.notacreditosForeignKey.size()<=0) && this.detanotacreditoConstantesFunciones.cargarid_nota_creditoDetaNotaCredito)
					 || (this.esRecargarFks && this.detanotacreditoConstantesFunciones.cargarid_nota_creditoDetaNotaCredito)) {

					if(!this.detanotacreditoSessionBean.getisBusquedaDesdeForeignKeySesionNotaCredito()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=NotaCreditoConstantesFunciones.getArrayColumnasGlobalesNotaCredito(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalNotaCredito=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,NotaCreditoConstantesFunciones.TABLENAME);

						finalQueryGlobalNotaCredito=Funciones.GetFinalQueryAppend(finalQueryGlobalNotaCredito, "");
						finalQueryGlobalNotaCredito+=NotaCreditoConstantesFunciones.SFINALQUERY;

						//this.cargarCombosNotaCreditosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalNotaCredito=" WHERE " + ConstantesSql.ID + "="+detanotacreditoSessionBean.getlidNotaCreditoActual();
					}
				} else {
					finalQueryGlobalNotaCredito="NONE";
				}


				String finalQueryGlobalBodega="";

				if(((this.bodegasForeignKey==null||this.bodegasForeignKey.size()<=0) && this.detanotacreditoConstantesFunciones.cargarid_bodegaDetaNotaCredito)
					 || (this.esRecargarFks && this.detanotacreditoConstantesFunciones.cargarid_bodegaDetaNotaCredito)) {

					if(!this.detanotacreditoSessionBean.getisBusquedaDesdeForeignKeySesionBodega()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=BodegaConstantesFunciones.getArrayColumnasGlobalesBodega(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalBodega=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,BodegaConstantesFunciones.TABLENAME);

						finalQueryGlobalBodega=Funciones.GetFinalQueryAppend(finalQueryGlobalBodega, "");
						finalQueryGlobalBodega+=BodegaConstantesFunciones.SFINALQUERY;

						//this.cargarCombosBodegasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalBodega=" WHERE " + ConstantesSql.ID + "="+detanotacreditoSessionBean.getlidBodegaActual();
					}
				} else {
					finalQueryGlobalBodega="NONE";
				}


				String finalQueryGlobalProducto="";

				if(cargarCombosDependencia && ((this.productosForeignKey==null||this.productosForeignKey.size()<=0) && this.detanotacreditoConstantesFunciones.cargarid_productoDetaNotaCredito)
					 || (this.esRecargarFks && this.detanotacreditoConstantesFunciones.cargarid_productoDetaNotaCredito)) {

					if(!this.detanotacreditoSessionBean.getisBusquedaDesdeForeignKeySesionProducto()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=ProductoConstantesFunciones.getArrayColumnasGlobalesProducto(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalProducto=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,ProductoConstantesFunciones.TABLENAME);

						finalQueryGlobalProducto=Funciones.GetFinalQueryAppend(finalQueryGlobalProducto, "");
						finalQueryGlobalProducto+=ProductoConstantesFunciones.SFINALQUERY;

						//this.cargarCombosProductosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalProducto=" WHERE " + ConstantesSql.ID + "="+detanotacreditoSessionBean.getlidProductoActual();
					}
				} else {
					finalQueryGlobalProducto="NONE";
				}


				String finalQueryGlobalUnidad="";

				if(cargarCombosDependencia && ((this.unidadsForeignKey==null||this.unidadsForeignKey.size()<=0) && this.detanotacreditoConstantesFunciones.cargarid_unidadDetaNotaCredito)
					 || (this.esRecargarFks && this.detanotacreditoConstantesFunciones.cargarid_unidadDetaNotaCredito)) {

					if(!this.detanotacreditoSessionBean.getisBusquedaDesdeForeignKeySesionUnidad()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=UnidadConstantesFunciones.getArrayColumnasGlobalesUnidad(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalUnidad=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,UnidadConstantesFunciones.TABLENAME);

						finalQueryGlobalUnidad=Funciones.GetFinalQueryAppend(finalQueryGlobalUnidad, "");
						finalQueryGlobalUnidad+=UnidadConstantesFunciones.SFINALQUERY;

						//this.cargarCombosUnidadsForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalUnidad=" WHERE " + ConstantesSql.ID + "="+detanotacreditoSessionBean.getlidUnidadActual();
					}
				} else {
					finalQueryGlobalUnidad="NONE";
				}


				String finalQueryGlobalTipoDetaNotaCredito="";

				if(((this.tipodetanotacreditosForeignKey==null||this.tipodetanotacreditosForeignKey.size()<=0) && this.detanotacreditoConstantesFunciones.cargarid_tipo_deta_nota_creditoDetaNotaCredito)
					 || (this.esRecargarFks && this.detanotacreditoConstantesFunciones.cargarid_tipo_deta_nota_creditoDetaNotaCredito)) {

					if(!this.detanotacreditoSessionBean.getisBusquedaDesdeForeignKeySesionTipoDetaNotaCredito()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TipoDetaNotaCreditoConstantesFunciones.getArrayColumnasGlobalesTipoDetaNotaCredito(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalTipoDetaNotaCredito=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoDetaNotaCreditoConstantesFunciones.TABLENAME);

						finalQueryGlobalTipoDetaNotaCredito=Funciones.GetFinalQueryAppend(finalQueryGlobalTipoDetaNotaCredito, "");
						finalQueryGlobalTipoDetaNotaCredito+=TipoDetaNotaCreditoConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTipoDetaNotaCreditosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTipoDetaNotaCredito=" WHERE " + ConstantesSql.ID + "="+detanotacreditoSessionBean.getlidTipoDetaNotaCreditoActual();
					}
				} else {
					finalQueryGlobalTipoDetaNotaCredito="NONE";
				}


				String finalQueryGlobalTipoDevolucionEmpresa="";

				if(((this.tipodevolucionempresasForeignKey==null||this.tipodevolucionempresasForeignKey.size()<=0) && this.detanotacreditoConstantesFunciones.cargarid_tipo_devolucion_empresaDetaNotaCredito)
					 || (this.esRecargarFks && this.detanotacreditoConstantesFunciones.cargarid_tipo_devolucion_empresaDetaNotaCredito)) {

					if(!this.detanotacreditoSessionBean.getisBusquedaDesdeForeignKeySesionTipoDevolucionEmpresa()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TipoDevolucionEmpresaConstantesFunciones.getArrayColumnasGlobalesTipoDevolucionEmpresa(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalTipoDevolucionEmpresa=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoDevolucionEmpresaConstantesFunciones.TABLENAME);

						finalQueryGlobalTipoDevolucionEmpresa=Funciones.GetFinalQueryAppend(finalQueryGlobalTipoDevolucionEmpresa, "");
						finalQueryGlobalTipoDevolucionEmpresa+=TipoDevolucionEmpresaConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTipoDevolucionEmpresasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTipoDevolucionEmpresa=" WHERE " + ConstantesSql.ID + "="+detanotacreditoSessionBean.getlidTipoDevolucionEmpresaActual();
					}
				} else {
					finalQueryGlobalTipoDevolucionEmpresa="NONE";
				}


				String finalQueryGlobalCentroCosto="";

				if(((this.centrocostosForeignKey==null||this.centrocostosForeignKey.size()<=0) && this.detanotacreditoConstantesFunciones.cargarid_centro_costoDetaNotaCredito)
					 || (this.esRecargarFks && this.detanotacreditoConstantesFunciones.cargarid_centro_costoDetaNotaCredito)) {

					if(!this.detanotacreditoSessionBean.getisBusquedaDesdeForeignKeySesionCentroCosto()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=CentroCostoConstantesFunciones.getArrayColumnasGlobalesCentroCosto(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalCentroCosto=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CentroCostoConstantesFunciones.TABLENAME);

						finalQueryGlobalCentroCosto=Funciones.GetFinalQueryAppend(finalQueryGlobalCentroCosto, "");
						finalQueryGlobalCentroCosto+=CentroCostoConstantesFunciones.SFINALQUERY;

						//this.cargarCombosCentroCostosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalCentroCosto=" WHERE " + ConstantesSql.ID + "="+detanotacreditoSessionBean.getlidCentroCostoActual();
					}
				} else {
					finalQueryGlobalCentroCosto="NONE";
				}


				String finalQueryGlobalEmpaque="";

				if(((this.empaquesForeignKey==null||this.empaquesForeignKey.size()<=0) && this.detanotacreditoConstantesFunciones.cargarid_empaqueDetaNotaCredito)
					 || (this.esRecargarFks && this.detanotacreditoConstantesFunciones.cargarid_empaqueDetaNotaCredito)) {

					if(!this.detanotacreditoSessionBean.getisBusquedaDesdeForeignKeySesionEmpaque()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=EmpaqueConstantesFunciones.getArrayColumnasGlobalesEmpaque(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalEmpaque=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EmpaqueConstantesFunciones.TABLENAME);

						finalQueryGlobalEmpaque=Funciones.GetFinalQueryAppend(finalQueryGlobalEmpaque, "");
						finalQueryGlobalEmpaque+=EmpaqueConstantesFunciones.SFINALQUERY;

						//this.cargarCombosEmpaquesForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalEmpaque=" WHERE " + ConstantesSql.ID + "="+detanotacreditoSessionBean.getlidEmpaqueActual();
					}
				} else {
					finalQueryGlobalEmpaque="NONE";
				}
			
			//ARCHITECTURE			
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				detanotacreditoReturnGeneral=detanotacreditoLogic.cargarCombosLoteForeignKeyDetaNotaCredito(finalQueryGlobalEmpresa,finalQueryGlobalSucursal,finalQueryGlobalEjercicio,finalQueryGlobalPeriodo,finalQueryGlobalAnio,finalQueryGlobalMes,finalQueryGlobalNotaCredito,finalQueryGlobalBodega,finalQueryGlobalProducto,finalQueryGlobalUnidad,finalQueryGlobalTipoDetaNotaCredito,finalQueryGlobalTipoDevolucionEmpresa,finalQueryGlobalCentroCosto,finalQueryGlobalEmpaque);//WithConnection
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}			
			//ARCHITECTURE
			
			

			if(!finalQueryGlobalEmpresa.equals("NONE")) {
				this.empresasForeignKey=detanotacreditoReturnGeneral.getempresasForeignKey();
			}

			if(!finalQueryGlobalSucursal.equals("NONE")) {
				this.sucursalsForeignKey=detanotacreditoReturnGeneral.getsucursalsForeignKey();
			}

			if(!finalQueryGlobalEjercicio.equals("NONE")) {
				this.ejerciciosForeignKey=detanotacreditoReturnGeneral.getejerciciosForeignKey();
			}

			if(!finalQueryGlobalPeriodo.equals("NONE")) {
				this.periodosForeignKey=detanotacreditoReturnGeneral.getperiodosForeignKey();
			}

			if(!finalQueryGlobalAnio.equals("NONE")) {
				this.aniosForeignKey=detanotacreditoReturnGeneral.getaniosForeignKey();
			}

			if(!finalQueryGlobalMes.equals("NONE")) {
				this.messForeignKey=detanotacreditoReturnGeneral.getmessForeignKey();
			}

			if(!finalQueryGlobalNotaCredito.equals("NONE")) {
				this.notacreditosForeignKey=detanotacreditoReturnGeneral.getnotacreditosForeignKey();
			}

			if(!finalQueryGlobalBodega.equals("NONE")) {
				this.bodegasForeignKey=detanotacreditoReturnGeneral.getbodegasForeignKey();
			}

			if(!finalQueryGlobalProducto.equals("NONE")) {
				this.productosForeignKey=detanotacreditoReturnGeneral.getproductosForeignKey();
			}

			if(!finalQueryGlobalUnidad.equals("NONE")) {
				this.unidadsForeignKey=detanotacreditoReturnGeneral.getunidadsForeignKey();
			}

			if(!finalQueryGlobalTipoDetaNotaCredito.equals("NONE")) {
				this.tipodetanotacreditosForeignKey=detanotacreditoReturnGeneral.gettipodetanotacreditosForeignKey();
			}

			if(!finalQueryGlobalTipoDevolucionEmpresa.equals("NONE")) {
				this.tipodevolucionempresasForeignKey=detanotacreditoReturnGeneral.gettipodevolucionempresasForeignKey();
			}

			if(!finalQueryGlobalCentroCosto.equals("NONE")) {
				this.centrocostosForeignKey=detanotacreditoReturnGeneral.getcentrocostosForeignKey();
			}

			if(!finalQueryGlobalEmpaque.equals("NONE")) {
				this.empaquesForeignKey=detanotacreditoReturnGeneral.getempaquesForeignKey();
			}
			
			
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void addItemDefectoCombosTodosForeignKeyDetaNotaCredito()throws Exception {
		try {
			
			this.addItemDefectoCombosForeignKeyEmpresa();
			this.addItemDefectoCombosForeignKeySucursal();
			this.addItemDefectoCombosForeignKeyEjercicio();
			this.addItemDefectoCombosForeignKeyPeriodo();
			this.addItemDefectoCombosForeignKeyAnio();
			this.addItemDefectoCombosForeignKeyMes();
			this.addItemDefectoCombosForeignKeyNotaCredito();
			this.addItemDefectoCombosForeignKeyBodega();
			this.addItemDefectoCombosForeignKeyProducto();
			this.addItemDefectoCombosForeignKeyUnidad();
			this.addItemDefectoCombosForeignKeyTipoDetaNotaCredito();
			this.addItemDefectoCombosForeignKeyTipoDevolucionEmpresa();
			this.addItemDefectoCombosForeignKeyCentroCosto();
			this.addItemDefectoCombosForeignKeyEmpaque();
		} catch(Exception e) {
			throw e;
		}		
	}
	
	



	public void addItemDefectoCombosForeignKeyEmpresa()throws Exception {
		try {
			if(this.detanotacreditoSessionBean==null) {
				this.detanotacreditoSessionBean=new DetaNotaCreditoSessionBean();
			}

			if(!this.detanotacreditoSessionBean.getisBusquedaDesdeForeignKeySesionEmpresa()) {
				Empresa empresa=new Empresa();
				EmpresaConstantesFunciones.setEmpresaDescripcion(empresa,Constantes.SMENSAJE_ESCOJA_OPCION);
				empresa.setId(null);

				if(!EmpresaConstantesFunciones.ExisteEnLista(this.empresasForeignKey,empresa,true)) {

					this.empresasForeignKey.add(0,empresa);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeySucursal()throws Exception {
		try {

			if(!this.detanotacreditoSessionBean.getisBusquedaDesdeForeignKeySesionSucursal()) {
				Sucursal sucursal=new Sucursal();
				SucursalConstantesFunciones.setSucursalDescripcion(sucursal,Constantes.SMENSAJE_ESCOJA_OPCION);
				sucursal.setId(null);

				if(!SucursalConstantesFunciones.ExisteEnLista(this.sucursalsForeignKey,sucursal,true)) {

					this.sucursalsForeignKey.add(0,sucursal);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyEjercicio()throws Exception {
		try {

			if(!this.detanotacreditoSessionBean.getisBusquedaDesdeForeignKeySesionEjercicio()) {
				Ejercicio ejercicio=new Ejercicio();
				EjercicioConstantesFunciones.setEjercicioDescripcion(ejercicio,Constantes.SMENSAJE_ESCOJA_OPCION);
				ejercicio.setId(null);

				if(!EjercicioConstantesFunciones.ExisteEnLista(this.ejerciciosForeignKey,ejercicio,true)) {

					this.ejerciciosForeignKey.add(0,ejercicio);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyPeriodo()throws Exception {
		try {

			if(!this.detanotacreditoSessionBean.getisBusquedaDesdeForeignKeySesionPeriodo()) {
				Periodo periodo=new Periodo();
				PeriodoConstantesFunciones.setPeriodoDescripcion(periodo,Constantes.SMENSAJE_ESCOJA_OPCION);
				periodo.setId(null);

				if(!PeriodoConstantesFunciones.ExisteEnLista(this.periodosForeignKey,periodo,true)) {

					this.periodosForeignKey.add(0,periodo);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyAnio()throws Exception {
		try {

			if(!this.detanotacreditoSessionBean.getisBusquedaDesdeForeignKeySesionAnio()) {
				Anio anio=new Anio();
				AnioConstantesFunciones.setAnioDescripcion(anio,Constantes.SMENSAJE_ESCOJA_OPCION);
				anio.setId(null);

				if(!AnioConstantesFunciones.ExisteEnLista(this.aniosForeignKey,anio,true)) {

					this.aniosForeignKey.add(0,anio);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyMes()throws Exception {
		try {

			if(!this.detanotacreditoSessionBean.getisBusquedaDesdeForeignKeySesionMes()) {
				Mes mes=new Mes();
				MesConstantesFunciones.setMesDescripcion(mes,Constantes.SMENSAJE_ESCOJA_OPCION);
				mes.setId(null);

				if(!MesConstantesFunciones.ExisteEnLista(this.messForeignKey,mes,true)) {

					this.messForeignKey.add(0,mes);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyNotaCredito()throws Exception {
		try {

			if(!this.detanotacreditoSessionBean.getisBusquedaDesdeForeignKeySesionNotaCredito()) {
				NotaCredito notacredito=new NotaCredito();
				NotaCreditoConstantesFunciones.setNotaCreditoDescripcion(notacredito,Constantes.SMENSAJE_ESCOJA_OPCION);
				notacredito.setId(null);

				if(!NotaCreditoConstantesFunciones.ExisteEnLista(this.notacreditosForeignKey,notacredito,true)) {

					this.notacreditosForeignKey.add(0,notacredito);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyBodega()throws Exception {
		try {

			if(!this.detanotacreditoSessionBean.getisBusquedaDesdeForeignKeySesionBodega()) {
				Bodega bodega=new Bodega();
				BodegaConstantesFunciones.setBodegaDescripcion(bodega,Constantes.SMENSAJE_ESCOJA_OPCION);
				bodega.setId(null);

				if(!BodegaConstantesFunciones.ExisteEnLista(this.bodegasForeignKey,bodega,true)) {

					this.bodegasForeignKey.add(0,bodega);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyProducto()throws Exception {
		try {

			if(!this.detanotacreditoSessionBean.getisBusquedaDesdeForeignKeySesionProducto()) {
				Producto producto=new Producto();
				ProductoConstantesFunciones.setProductoDescripcion(producto,Constantes.SMENSAJE_ESCOJA_OPCION);
				producto.setId(null);

				if(!ProductoConstantesFunciones.ExisteEnLista(this.productosForeignKey,producto,true)) {

					this.productosForeignKey.add(0,producto);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyUnidad()throws Exception {
		try {

			if(!this.detanotacreditoSessionBean.getisBusquedaDesdeForeignKeySesionUnidad()) {
				Unidad unidad=new Unidad();
				UnidadConstantesFunciones.setUnidadDescripcion(unidad,Constantes.SMENSAJE_ESCOJA_OPCION);
				unidad.setId(null);

				if(!UnidadConstantesFunciones.ExisteEnLista(this.unidadsForeignKey,unidad,true)) {

					this.unidadsForeignKey.add(0,unidad);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTipoDetaNotaCredito()throws Exception {
		try {

			if(!this.detanotacreditoSessionBean.getisBusquedaDesdeForeignKeySesionTipoDetaNotaCredito()) {
				TipoDetaNotaCredito tipodetanotacredito=new TipoDetaNotaCredito();
				TipoDetaNotaCreditoConstantesFunciones.setTipoDetaNotaCreditoDescripcion(tipodetanotacredito,Constantes.SMENSAJE_ESCOJA_OPCION);
				tipodetanotacredito.setId(null);

				if(!TipoDetaNotaCreditoConstantesFunciones.ExisteEnLista(this.tipodetanotacreditosForeignKey,tipodetanotacredito,true)) {

					this.tipodetanotacreditosForeignKey.add(0,tipodetanotacredito);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTipoDevolucionEmpresa()throws Exception {
		try {

			if(!this.detanotacreditoSessionBean.getisBusquedaDesdeForeignKeySesionTipoDevolucionEmpresa()) {
				TipoDevolucionEmpresa tipodevolucionempresa=new TipoDevolucionEmpresa();
				TipoDevolucionEmpresaConstantesFunciones.setTipoDevolucionEmpresaDescripcion(tipodevolucionempresa,Constantes.SMENSAJE_ESCOJA_OPCION);
				tipodevolucionempresa.setId(null);

				if(!TipoDevolucionEmpresaConstantesFunciones.ExisteEnLista(this.tipodevolucionempresasForeignKey,tipodevolucionempresa,true)) {

					this.tipodevolucionempresasForeignKey.add(0,tipodevolucionempresa);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyCentroCosto()throws Exception {
		try {

			if(!this.detanotacreditoSessionBean.getisBusquedaDesdeForeignKeySesionCentroCosto()) {
				CentroCosto centrocosto=new CentroCosto();
				CentroCostoConstantesFunciones.setCentroCostoDescripcion(centrocosto,Constantes.SMENSAJE_ESCOJA_OPCION);
				centrocosto.setId(null);

				if(!CentroCostoConstantesFunciones.ExisteEnLista(this.centrocostosForeignKey,centrocosto,true)) {

					this.centrocostosForeignKey.add(0,centrocosto);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyEmpaque()throws Exception {
		try {

			if(!this.detanotacreditoSessionBean.getisBusquedaDesdeForeignKeySesionEmpaque()) {
				Empaque empaque=new Empaque();
				EmpaqueConstantesFunciones.setEmpaqueDescripcion(empaque,Constantes.SMENSAJE_ESCOJA_OPCION);
				empaque.setId(null);

				if(!EmpaqueConstantesFunciones.ExisteEnLista(this.empaquesForeignKey,empaque,true)) {

					this.empaquesForeignKey.add(0,empaque);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void initActionsCombosTodosForeignKeyDetaNotaCredito()throws Exception {
		try {
			
			this.initActionsCombosForeignKeyBodega("Todos");
			this.initActionsCombosForeignKeyProducto("Todos");
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void initActionsCombosTodosForeignKeyDetaNotaCredito(String sFormularioTipoBusqueda)throws Exception {
		try {
			
			this.initActionsCombosForeignKeyBodega(sFormularioTipoBusqueda);
			this.initActionsCombosForeignKeyProducto(sFormularioTipoBusqueda);
		} catch(Exception e) {
			throw e;
		}		
	}
	
	



	@SuppressWarnings("rawtypes")
	public void procesarActionsCombosForeignKeyBodega(JComboBox jComboBoxBodegaGenerico,String sFormularioTipoBusqueda)throws Exception {
		try {
			String sFinalQueryCombo="";
			Bodega bodegaLocal=(Bodega)jComboBoxBodegaGenerico.getSelectedItem();

			if(bodegaLocal!=null  && bodegaLocal.getId()!=null  && bodegaLocal.getId()>0) {
				sFinalQueryCombo="  WHERE  id_bodega="+bodegaLocal.getId();
			}
			//REDEFINE
			sFinalQueryCombo=InventarioSql.GetQueryProductoFromBodega(bodegaLocal);

			//COPIA PARA VENTANA BUSQUEDA
			this.sFinalQueryComboProducto=sFinalQueryCombo;

			this.productosForeignKey=new ArrayList<Producto>();
			this.cargarCombosForeignKeyProducto(true,false,false,sFinalQueryCombo,sFormularioTipoBusqueda);
		} catch(Exception e) {
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void procesarActionsCombosForeignKeyProducto(JComboBox jComboBoxProductoGenerico,String sFormularioTipoBusqueda)throws Exception {
		try {
			String sFinalQueryCombo="";
			Producto productoLocal=(Producto)jComboBoxProductoGenerico.getSelectedItem();

			if(productoLocal!=null  && productoLocal.getId()!=null  && productoLocal.getId()>0) {
				sFinalQueryCombo="  WHERE  id_producto="+productoLocal.getId();
			}
			//REDEFINE
			sFinalQueryCombo=InventarioSql.GetQueryUnidadFromBodegaYProducto(productoLocal,this.detanotacredito.getid_bodega());

			//COPIA PARA VENTANA BUSQUEDA
			this.sFinalQueryComboUnidad=sFinalQueryCombo;

			this.unidadsForeignKey=new ArrayList<Unidad>();
			this.cargarCombosForeignKeyUnidad(true,false,false,sFinalQueryCombo,sFormularioTipoBusqueda);
		} catch(Exception e) {
			throw e;
		}
	}
	
	



	public void initActionsCombosForeignKeyBodega(String sFormularioTipoBusqueda)throws Exception {
		try {
			if(sFormularioTipoBusqueda.equals("Todos") || sFormularioTipoBusqueda.equals("Formulario")) {
				if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
					if(this.jInternalFrameDetalleFormDetaNotaCredito!=null) {
						this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_bodegaDetaNotaCredito.addItemListener(new ComboBoxItemListener(this,"id_bodegaDetaNotaCredito"));
						this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_bodegaDetaNotaCredito.addFocusListener(new ComboBoxFocusListener(this,"id_bodegaDetaNotaCredito"));
					}
				} else {
					if(this.jInternalFrameDetalleFormDetaNotaCredito!=null) {
						this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_bodegaDetaNotaCredito.addActionListener(new ComboBoxActionListener(this,"id_bodegaDetaNotaCredito"));
						this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_bodegaDetaNotaCredito.addFocusListener(new ComboBoxFocusListener(this,"id_bodegaDetaNotaCredito"));
					}
				}
			}

			if(sFormularioTipoBusqueda.equals("Todos")) {

				if(!this.conCargarMinimo) {
				
					if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
						this.jComboBoxid_bodegaFK_IdBodegaDetaNotaCredito.addItemListener(new ComboBoxItemListener(this,"jComboBoxid_bodegaFK_IdBodegaDetaNotaCredito"));

						this.jComboBoxid_bodegaFK_IdBodegaDetaNotaCredito.addFocusListener(new ComboBoxFocusListener(this,"jComboBoxid_bodegaFK_IdBodegaDetaNotaCredito"));

					} else {
						this.jComboBoxid_bodegaFK_IdBodegaDetaNotaCredito.addActionListener(new ComboBoxActionListener(this,"jComboBoxid_bodegaFK_IdBodegaDetaNotaCredito"));

						this.jComboBoxid_bodegaFK_IdBodegaDetaNotaCredito.addFocusListener(new ComboBoxFocusListener(this,"jComboBoxid_bodegaFK_IdBodegaDetaNotaCredito"));

					}
			
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void initActionsCombosForeignKeyProducto(String sFormularioTipoBusqueda)throws Exception {
		try {
			if(sFormularioTipoBusqueda.equals("Todos") || sFormularioTipoBusqueda.equals("Formulario")) {
				if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
					if(this.jInternalFrameDetalleFormDetaNotaCredito!=null) {
						this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_productoDetaNotaCredito.addItemListener(new ComboBoxItemListener(this,"id_productoDetaNotaCredito"));
						this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_productoDetaNotaCredito.addFocusListener(new ComboBoxFocusListener(this,"id_productoDetaNotaCredito"));
					}
				} else {
					if(this.jInternalFrameDetalleFormDetaNotaCredito!=null) {
						this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_productoDetaNotaCredito.addActionListener(new ComboBoxActionListener(this,"id_productoDetaNotaCredito"));
						this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_productoDetaNotaCredito.addFocusListener(new ComboBoxFocusListener(this,"id_productoDetaNotaCredito"));
					}
				}
			}

			if(sFormularioTipoBusqueda.equals("Todos")) {

				if(!this.conCargarMinimo) {
				
					if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
						this.jComboBoxid_productoFK_IdProductoDetaNotaCredito.addItemListener(new ComboBoxItemListener(this,"jComboBoxid_productoFK_IdProductoDetaNotaCredito"));

						this.jComboBoxid_productoFK_IdProductoDetaNotaCredito.addFocusListener(new ComboBoxFocusListener(this,"jComboBoxid_productoFK_IdProductoDetaNotaCredito"));

					} else {
						this.jComboBoxid_productoFK_IdProductoDetaNotaCredito.addActionListener(new ComboBoxActionListener(this,"jComboBoxid_productoFK_IdProductoDetaNotaCredito"));

						this.jComboBoxid_productoFK_IdProductoDetaNotaCredito.addFocusListener(new ComboBoxFocusListener(this,"jComboBoxid_productoFK_IdProductoDetaNotaCredito"));

					}
			
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesGlobalesCombosForeignKeyDetaNotaCredito()throws Exception {	
		try {
			if(this.parametroGeneralUsuario!=null && this.parametroGeneralUsuario.getId()>0) {
			
				this.setActualEmpresaForeignKey(this.parametroGeneralUsuario.getid_empresa(),false,"Formulario");
				this.setActualSucursalForeignKey(this.parametroGeneralUsuario.getid_sucursal(),false,"Formulario");
				this.setActualEjercicioForeignKey(this.parametroGeneralUsuario.getid_ejercicio(),false,"Formulario");
				this.setActualPeriodoForeignKey(this.parametroGeneralUsuario.getid_periodo(),false,"Formulario");
			
			
				this.detanotacredito.setfecha_emision(this.parametroGeneralUsuario.getfecha_sistema());
			}
			
			//INICIALIZA VARIABLES COMBOS GLOBALES AUXILIARES A FORMULARIO(Anio,Mes)
			this.setVariablesGlobalesAuxiliaresCombosForeignKeyDetaNotaCredito();
		
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesObjetoActualToFormularioForeignKeyDetaNotaCredito(DetaNotaCredito detanotacredito)throws Exception {	
		try {
			
			this.setActualNotaCreditoForeignKey(detanotacredito.getid_nota_credito(),false,"Formulario");
			this.setActualBodegaForeignKey(detanotacredito.getid_bodega(),false,"Formulario");
			this.setActualProductoForeignKey(detanotacredito.getid_producto(),false,"Formulario");
			this.setActualUnidadForeignKey(detanotacredito.getid_unidad(),false,"Formulario");
			this.setActualTipoDetaNotaCreditoForeignKey(detanotacredito.getid_tipo_deta_nota_credito(),false,"Formulario");
			this.setActualTipoDevolucionEmpresaForeignKey(detanotacredito.getid_tipo_devolucion_empresa(),false,"Formulario");
			this.setActualCentroCostoForeignKey(detanotacredito.getid_centro_costo(),false,"Formulario");
			this.setActualEmpaqueForeignKey(detanotacredito.getid_empaque(),false,"Formulario");			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesObjetoActualToListasForeignKeyDetaNotaCredito(DetaNotaCredito detanotacredito,String sTipoEvento)throws Exception {	
		try {
			
			

				if(detanotacredito.getProducto()!=null && !sTipoEvento.equals("id_productoDetaNotaCredito")) { //sTipoEvento Evita Bucle Infinito

					this.productosForeignKey=new ArrayList<Producto>();
					this.productosForeignKey.add(detanotacredito.getProducto());

					this.addItemDefectoCombosForeignKeyProducto();
					this.cargarCombosFrameProductosForeignKey("Todos");
				}

				if(detanotacredito.getCentroCosto()!=null && !sTipoEvento.equals("id_centro_costoDetaNotaCredito")) { //sTipoEvento Evita Bucle Infinito

					this.centrocostosForeignKey=new ArrayList<CentroCosto>();
					this.centrocostosForeignKey.add(detanotacredito.getCentroCosto());

					this.addItemDefectoCombosForeignKeyCentroCosto();
					this.cargarCombosFrameCentroCostosForeignKey("Todos");
				}
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	/*
	public void setVariablesCombosFromBeanForeignKeyDetaNotaCredito()throws Exception {	
		try {
			
			this.setActualNotaCreditoForeignKey(this.detanotacreditoConstantesFunciones.getid_nota_credito(),false,"Formulario");
			this.setActualBodegaForeignKey(this.detanotacreditoConstantesFunciones.getid_bodega(),false,"Formulario");
			this.setActualProductoForeignKey(this.detanotacreditoConstantesFunciones.getid_producto(),false,"Formulario");
			this.setActualUnidadForeignKey(this.detanotacreditoConstantesFunciones.getid_unidad(),false,"Formulario");
			this.setActualTipoDetaNotaCreditoForeignKey(this.detanotacreditoConstantesFunciones.getid_tipo_deta_nota_credito(),false,"Formulario");
			this.setActualTipoDevolucionEmpresaForeignKey(this.detanotacreditoConstantesFunciones.getid_tipo_devolucion_empresa(),false,"Formulario");
			this.setActualCentroCostoForeignKey(this.detanotacreditoConstantesFunciones.getid_centro_costo(),false,"Formulario");
			this.setActualEmpaqueForeignKey(this.detanotacreditoConstantesFunciones.getid_empaque(),false,"Formulario");			
		} catch(Exception e) {
			throw e;
		}
	}
	*/
	
	public void setVariablesGlobalesAuxiliaresCombosForeignKeyDetaNotaCredito()throws Exception {	
		try {
			

				if(this.jInternalFrameDetalleFormDetaNotaCredito!=null) {
					Ejercicio ejercicioActual=(Ejercicio)this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_ejercicioDetaNotaCredito.getSelectedItem();
					this.setActualAnioForeignKey(ejercicioActual.getid_anio(),false,"Formulario");
				}

				if(this.jInternalFrameDetalleFormDetaNotaCredito!=null) {
					Periodo periodoActual=(Periodo)this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_periodoDetaNotaCredito.getSelectedItem();
					this.setActualMesForeignKey(periodoActual.getid_mes(),false,"Formulario");
				}
		
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesDefaultCombosForeignKeyDetaNotaCredito()throws Exception {	
		try {
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesParametroCombosForeignKeyDetaNotaCredito()throws Exception {	
		try {
			
		} catch(Exception e) {
			throw e;
		}
	}		
	
	public void cargarCombosParametroDetaNotaCredito()throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			
			//this.cargarDatosCliente();
			
			
			
		} catch(Exception e) {
			throw e;
		}		
	}
		
	public void cargarCombosFrameForeignKeyDetaNotaCredito()throws Exception {
		try {
			

			this.cargarCombosFrameEmpresasForeignKey("Todos");
			this.cargarCombosFrameSucursalsForeignKey("Todos");
			this.cargarCombosFrameEjerciciosForeignKey("Todos");
			this.cargarCombosFramePeriodosForeignKey("Todos");
			this.cargarCombosFrameAniosForeignKey("Todos");
			this.cargarCombosFrameMessForeignKey("Todos");
			this.cargarCombosFrameNotaCreditosForeignKey("Todos");
			this.cargarCombosFrameBodegasForeignKey("Todos");
			this.cargarCombosFrameProductosForeignKey("Todos");
			this.cargarCombosFrameUnidadsForeignKey("Todos");
			this.cargarCombosFrameTipoDetaNotaCreditosForeignKey("Todos");
			this.cargarCombosFrameTipoDevolucionEmpresasForeignKey("Todos");
			this.cargarCombosFrameCentroCostosForeignKey("Todos");
			this.cargarCombosFrameEmpaquesForeignKey("Todos");

		} catch(Exception e) {
			throw e;
		}		
	}		
	
	public void cargarCombosFrameForeignKeyDetaNotaCredito(String sFormularioTipoBusqueda)throws Exception {
		try {
			

			this.cargarCombosFrameEmpresasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameSucursalsForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameEjerciciosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFramePeriodosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameAniosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameMessForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameNotaCreditosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameBodegasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameProductosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameUnidadsForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTipoDetaNotaCreditosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTipoDevolucionEmpresasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameCentroCostosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameEmpaquesForeignKey(sFormularioTipoBusqueda);

		} catch(Exception e) {
			throw e;
		}		
	}	
	
	public void setItemDefectoCombosForeignKeyDetaNotaCredito()throws Exception {
		try {
			



			if(this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_empresaDetaNotaCredito!=null && this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_empresaDetaNotaCredito.getItemCount()>0) {
				this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_empresaDetaNotaCredito.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_sucursalDetaNotaCredito!=null && this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_sucursalDetaNotaCredito.getItemCount()>0) {
				this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_sucursalDetaNotaCredito.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_ejercicioDetaNotaCredito!=null && this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_ejercicioDetaNotaCredito.getItemCount()>0) {
				this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_ejercicioDetaNotaCredito.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_periodoDetaNotaCredito!=null && this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_periodoDetaNotaCredito.getItemCount()>0) {
				this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_periodoDetaNotaCredito.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_anioDetaNotaCredito!=null && this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_anioDetaNotaCredito.getItemCount()>0) {
				this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_anioDetaNotaCredito.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_mesDetaNotaCredito!=null && this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_mesDetaNotaCredito.getItemCount()>0) {
				this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_mesDetaNotaCredito.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_nota_creditoDetaNotaCredito!=null && this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_nota_creditoDetaNotaCredito.getItemCount()>0) {
				this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_nota_creditoDetaNotaCredito.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_bodegaDetaNotaCredito!=null && this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_bodegaDetaNotaCredito.getItemCount()>0) {
				this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_bodegaDetaNotaCredito.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_productoDetaNotaCredito!=null && this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_productoDetaNotaCredito.getItemCount()>0) {
				this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_productoDetaNotaCredito.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_unidadDetaNotaCredito!=null && this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_unidadDetaNotaCredito.getItemCount()>0) {
				this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_unidadDetaNotaCredito.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_tipo_deta_nota_creditoDetaNotaCredito!=null && this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_tipo_deta_nota_creditoDetaNotaCredito.getItemCount()>0) {
				this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_tipo_deta_nota_creditoDetaNotaCredito.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_tipo_devolucion_empresaDetaNotaCredito!=null && this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_tipo_devolucion_empresaDetaNotaCredito.getItemCount()>0) {
				this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_tipo_devolucion_empresaDetaNotaCredito.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_centro_costoDetaNotaCredito!=null && this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_centro_costoDetaNotaCredito.getItemCount()>0) {
				this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_centro_costoDetaNotaCredito.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_empaqueDetaNotaCredito!=null && this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_empaqueDetaNotaCredito.getItemCount()>0) {
				this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_empaqueDetaNotaCredito.setSelectedIndex(0);
			}
		} catch(Exception e) {
			throw e;
		}		
	}		
	
	















	public void recargarFormDetaNotaCreditoBodega(JComboBox<?> jComboBoxGenericoBodega,String sFormularioTipoBusqueda) throws Exception {

		this.recargarFormDetaNotaCreditoid_producto(jComboBoxGenericoBodega,sFormularioTipoBusqueda,"Bodega",false);
	}

	public void recargarFormDetaNotaCreditoProducto(JComboBox<?> jComboBoxGenericoProducto,String sFormularioTipoBusqueda) throws Exception {

		this.recargarFormDetaNotaCreditoid_unidad(jComboBoxGenericoProducto,sFormularioTipoBusqueda,"Producto",false);
	}










	
	



	public void recargarFormDetaNotaCreditoid_producto(JComboBox<?> jComboBoxGenericoProducto,String sFormularioTipoBusqueda,String sTipoComboOrigen,Boolean conIrServidorAplicacion) throws Exception {
		try {

			String sFinalQuery="";

			if(sTipoComboOrigen.equals("Bodega")){
				this.setActualParaGuardarBodegaForeignKey(this.detanotacredito,jComboBoxGenericoProducto);
			}

			if(this.detanotacredito.getid_bodega()!=null && this.detanotacredito.getid_bodega()!=0L) {
				sFinalQuery+="  WHERE  id_bodega="+this.detanotacredito.getid_bodega();
			} else {
				sFinalQuery+="  WHERE  id_bodega=-1";
			}



			//BUCLE RECURSIVO
			this.setActualProductoForeignKey(this.detanotacredito.getid_bodega(),true,sFormularioTipoBusqueda);

			this.cargarCombosProductosForeignKeyLista(sFinalQuery);

			this.cargarCombosFrameProductosForeignKey(sFormularioTipoBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}



	public void recargarFormDetaNotaCreditoid_unidad(JComboBox<?> jComboBoxGenericoUnidad,String sFormularioTipoBusqueda,String sTipoComboOrigen,Boolean conIrServidorAplicacion) throws Exception {
		try {

			String sFinalQuery="";

			if(sTipoComboOrigen.equals("Producto")){
				this.setActualParaGuardarProductoForeignKey(this.detanotacredito,jComboBoxGenericoUnidad);
			}

			if(this.detanotacredito.getid_producto()!=null && this.detanotacredito.getid_producto()!=0L) {
				sFinalQuery+="  WHERE  id_producto="+this.detanotacredito.getid_producto();
			} else {
				sFinalQuery+="  WHERE  id_producto=-1";
			}



			//BUCLE RECURSIVO
			this.setActualUnidadForeignKey(this.detanotacredito.getid_producto(),true,sFormularioTipoBusqueda);

			this.cargarCombosUnidadsForeignKeyLista(sFinalQuery);

			this.cargarCombosFrameUnidadsForeignKey(sFormularioTipoBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public DetaNotaCreditoBeanSwingJInternalFrame() throws Exception {
		super(false,PaginaTipo.PRINCIPAL);
	}
	
	public DetaNotaCreditoBeanSwingJInternalFrame(Boolean cargarRelaciones,PaginaTipo paginaTipo) throws Exception {
		super(cargarRelaciones,paginaTipo);
	}
	
	public DetaNotaCreditoBeanSwingJInternalFrame(Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,PaginaTipo paginaTipo) throws Exception {
		super(cargarRelaciones,paginaTipo);
		
		this.detanotacreditoSessionBean=new DetaNotaCreditoSessionBean(); 
		this.detanotacreditoConstantesFunciones=new DetaNotaCreditoConstantesFunciones(); 
		this.detanotacreditoBean=new DetaNotaCredito();//(this.detanotacreditoConstantesFunciones); 		
		this.detanotacreditoReturnGeneral=new DetaNotaCreditoParameterReturnGeneral(); 
		
		this.detanotacreditoSessionBean.setConGuardarRelaciones(conGuardarRelaciones);
		this.detanotacreditoSessionBean.setEsGuardarRelacionado(esGuardarRelacionado);
				
	}
	
	public DetaNotaCreditoBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,Boolean cargarTodosDatos,PaginaTipo paginaTipo) throws Exception {
		this(blncargarCombostrForeignKey,blnCargarInformacionInicial,jdesktopPane,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo,conGuardarRelaciones,esGuardarRelacionado,cargarRelaciones,cargarTodosDatos);
	}
		
	public DetaNotaCreditoBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,Boolean cargarRelaciones,Boolean cargarTodosDatos,PaginaTipo paginaTipo) throws Exception {
		this(blncargarCombostrForeignKey,blnCargarInformacionInicial,jdesktopPane,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo,false,false,cargarRelaciones,cargarTodosDatos);
	}	
	
	public DetaNotaCreditoBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,PaginaTipo paginaTipo,Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,Boolean cargarTodosDatos) throws Exception //Boolean esParaBusquedaForeignKey
    {
		super(jdesktopPane,conGuardarRelaciones,esGuardarRelacionado,cargarRelaciones,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo);
		
		try {
			
			this.permiteRecargarForm=false;
			
			this.startProcessDetaNotaCredito(true);
			
			Boolean esParaBusquedaForeignKey=false;//ANTES USADO COMO PARAMETRO DEL CONSTRUCTOR
			
			if(paginaTipo.equals(PaginaTipo.BUSQUEDA)) {
				esParaBusquedaForeignKey=true;
			}
			
			
			
			//SE ASIGNA EN CLASE PADRE
			/*
			this.parametroGeneralSg=parametroGeneralSg;		
			this.parametroGeneralUsuario=parametroGeneralUsuario;	
			this.usuarioActual=usuarioActual;
			this.moduloActual=moduloActual;
			*/						
			
			long start_time=0;
			long end_time=0;
			
			if(Constantes2.ISDEVELOPING2) {
				start_time = System.currentTimeMillis();
			}
			
			if(!cargarTodosDatos) {
				this.sAccionBusqueda="NINGUNO";
			}
			
			this.detanotacreditoConstantesFunciones=new DetaNotaCreditoConstantesFunciones(); 
			this.detanotacreditoBean=new DetaNotaCredito();//this.detanotacreditoConstantesFunciones); 			
			this.detanotacreditoReturnGeneral=new DetaNotaCreditoParameterReturnGeneral(); 
		
			DetaNotaCreditoBeanSwingJInternalFrameAdditional.CargaInicialInicio(this, "NORMAL", null);
			
			this.setTitle(Funciones.GetTituloSistema(this.parametroGeneralSg,this.moduloActual,this.usuarioActual,"Deta Nota Credito Mantenimiento",paginaTipo));			
			
			this.conTotales=false;
			
			this.conTotales=true;
			
			
			this.detanotacredito=new DetaNotaCredito();
			this.detanotacreditos = new ArrayList<DetaNotaCredito>();
			this.detanotacreditosAux = new ArrayList<DetaNotaCredito>();
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditoLogic=new DetaNotaCreditoLogic();
				this.detanotacreditoLogic.getNewConnexionToDeep("");
			}
			
			//this.detanotacreditoSessionBean.setConGuardarRelaciones(conGuardarRelaciones);
			//this.detanotacreditoSessionBean.setEsGuardarRelacionado(esGuardarRelacionado);
			
			this.jDesktopPane=jdesktopPane;
			
			if(this.jDesktopPane.getClass().equals(JDesktopPaneMe.class)) {
				this.constantes2=((JDesktopPaneMe)this.jDesktopPane).constantes2;
			}
			
			if(!Constantes.CON_VARIAS_VENTANAS) {
    			MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameDetalleFormDetaNotaCredito);
				
				if(!this.conCargarMinimo) {
					
					if(this.jInternalFrameReporteDinamicoDetaNotaCredito!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameReporteDinamicoDetaNotaCredito);	
					}
					
					if(this.jInternalFrameImportacionDetaNotaCredito!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameImportacionDetaNotaCredito);							
					}
					
				}
				
				if(this.jInternalFrameTotalesDetaNotaCredito!=null) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameTotalesDetaNotaCredito);
				}
				
				if(!this.conCargarMinimo) {
					
					if(this.jInternalFrameOrderByDetaNotaCredito!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameOrderByDetaNotaCredito);					
					}
					
				}
			}
			
			//DETALLE DATOS
			if(this.jInternalFrameDetalleFormDetaNotaCredito!=null) { //this.conCargarFormDetalle) {
				this.jDesktopPane.add(this.jInternalFrameDetalleFormDetaNotaCredito);
				this.jInternalFrameDetalleFormDetaNotaCredito.setVisible(false);
				this.jInternalFrameDetalleFormDetaNotaCredito.setSelected(false);						
			}
			
			if(!this.conCargarMinimo) {
				
				//REPORTE DINAMICO
				if(this.jInternalFrameReporteDinamicoDetaNotaCredito!=null) {
					this.jDesktopPane.add(this.jInternalFrameReporteDinamicoDetaNotaCredito);
					this.jInternalFrameReporteDinamicoDetaNotaCredito.setVisible(false);
					this.jInternalFrameReporteDinamicoDetaNotaCredito.setSelected(false);
				}
				
				//IMPORTACION
				if(this.jInternalFrameImportacionDetaNotaCredito!=null) {
					this.jDesktopPane.add(this.jInternalFrameImportacionDetaNotaCredito);
					this.jInternalFrameImportacionDetaNotaCredito.setVisible(false);
					this.jInternalFrameImportacionDetaNotaCredito.setSelected(false);
				}
				
				
			}
			
			if(this.jInternalFrameTotalesDetaNotaCredito!=null) {
				//TOTALES
				this.jDesktopPane.add(this.jInternalFrameTotalesDetaNotaCredito);
				this.jInternalFrameTotalesDetaNotaCredito.setVisible(false);
				this.jInternalFrameTotalesDetaNotaCredito.setSelected(false);
			}
			
			if(!this.conCargarMinimo) {
				
				if(this.jInternalFrameOrderByDetaNotaCredito!=null) {
					this.jDesktopPane.add(this.jInternalFrameOrderByDetaNotaCredito);
					this.jInternalFrameOrderByDetaNotaCredito.setVisible(false);
					this.jInternalFrameOrderByDetaNotaCredito.setSelected(false);				
				}
				
			}
			
			
			//this.esParaBusquedaForeignKey=false;
			this.esParaBusquedaForeignKey=esParaBusquedaForeignKey;
			
			this.invalidValues=new InvalidValue[0];
			
			
			
			this.idDetaNotaCreditoActual=0L;
			this.rowIndexActual=0;
			
			
			this.iNumeroPaginacionPagina=0;
			this.iNumeroPaginacion=DetaNotaCreditoConstantesFunciones.INUMEROPAGINACION;
			this.pagination=new Pagination();
			this.datosCliente=new DatosCliente();
			this.lIdUsuarioSesion=0L;	
			this.sTipoArchivoReporte="";
			this.sTipoArchivoReporteDinamico="";
			this.sTipoReporte="";
			this.sTipoReporteDinamico="";
			this.sTipoPaginacion="";
			this.sTipoRelacion="";
			this.sTipoAccion="";
			this.sTipoAccionFormulario="";
			this.sTipoSeleccionar="";			
			this.sDetalleReporte="";
			this.sTipoReporteExtra="";
			this.sValorCampoGeneral="";
			this.sPathReporteDinamico="";			
			
			this.isMostrarNumeroPaginacion=false;
			this.isSeleccionarTodos=false;
			this.isSeleccionados=false;
			this.conGraficoReporte=false;
			this.isPostAccionNuevo=false;
			this.isPostAccionSinCerrar=false;
			this.isPostAccionSinMensaje=false;
			this.esReporteDinamico=false;
			this.esRecargarFks=false;
			this.esReporteAccionProceso=false;
			
			this.detanotacreditoReturnGeneral=new DetaNotaCreditoParameterReturnGeneral();
			
			this.detanotacreditoParameterGeneral=new DetaNotaCreditoParameterReturnGeneral();
			
			
			
			this.sistemaLogicAdditional=new SistemaLogicAdditional();
			
			this.sistemaLogicAdditional.setConnexion(this.detanotacreditoLogic.getConnexion());			
			
			
			
			
			
			
			
			//VERIFICAR GLOBAL
			this.cargarDatosCliente();			
			
			
			if(!this.detanotacreditoSessionBean.getEsGuardarRelacionado()) {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					if(!sistemaLogicAdditional.validarLicenciaCliente(this.datosCliente,this.moduloActual,this.usuarioActual)) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_CONTROLGLOBAL);
					}
					
				} else if(Constantes.ISUSAEJBREMOTE) {
					
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}			
			
			//VERIFICAR GLOBAL
			
			//VERIFICAR SESSION ACTUAL
			//this.cargarDatosCliente();
			
			this.sistemaReturnGeneral=new SistemaParameterReturnGeneral();
			
			SistemaParameterReturnGeneralAdditional.inicializarSinSeguridad(this.sistemaReturnGeneral);
			
			if(DetaNotaCreditoJInternalFrame.CON_LLAMADA_SIMPLE) {
				if(this.detanotacreditoSessionBean.getEsGuardarRelacionado()) {
					this.opcionActual.setId(0L);
					
					//idOpcion=0L;					
				}
				
				ArrayList<String> arrPaginas=new ArrayList<String>();		
				ArrayList<Opcion> opcionsFinal=new ArrayList<Opcion>();	
				
		
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					//this.sistemaReturnGeneral=sistemaLogicAdditional.validarCargarSesionUsuarioActualWithConnection(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual,Constantes.LIDSISTEMAACTUAL,DetaNotaCreditoConstantesFunciones.SNOMBREOPCION,this.opcionActual,this.detanotacreditoSessionBean.getEsGuardarRelacionado(),this.detanotacreditoSessionBean.getConGuardarRelaciones(),arrPaginas);
					
					this.sistemaReturnGeneral=sistemaLogicAdditional.validarCargarSesionUsuarioActual(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual,Constantes.LIDSISTEMAACTUAL,DetaNotaCreditoConstantesFunciones.SNOMBREOPCION,this.opcionActual,this.detanotacreditoSessionBean.getEsGuardarRelacionado(),this.detanotacreditoSessionBean.getConGuardarRelaciones(),arrPaginas);
					
					if(!this.sistemaReturnGeneral.getEsValidado()) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_SESIONACTUAL);
					}
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
					//FALTA
				}
			} else { 
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					if(!sistemaLogicAdditional.validarSesionUsuarioActual(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual)) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_SESIONACTUAL);
					}
				
				} else if(Constantes.ISUSAEJBREMOTE) {
					
				} else if(Constantes.ISUSAEJBHOME) {
				}
			} 
			//VERIFICAR SESSION ACTUAL
			
			
			this.sVisibilidadTablaBusquedas="table-row";
			this.sVisibilidadTablaElementos="none";
			this.sVisibilidadTablaAcciones="none";
			
			this.isVisibilidadCeldaNuevoDetaNotaCredito=false;
			this.isVisibilidadCeldaDuplicarDetaNotaCredito=true;
			this.isVisibilidadCeldaCopiarDetaNotaCredito=true;
			this.isVisibilidadCeldaVerFormDetaNotaCredito=true;
			this.isVisibilidadCeldaOrdenDetaNotaCredito=true;
			this.isVisibilidadCeldaNuevoRelacionesDetaNotaCredito=false;
			this.isVisibilidadCeldaModificarDetaNotaCredito=false;
			this.isVisibilidadCeldaActualizarDetaNotaCredito=false;
			this.isVisibilidadCeldaEliminarDetaNotaCredito=false;
			this.isVisibilidadCeldaCancelarDetaNotaCredito=false;
			this.isVisibilidadCeldaGuardarDetaNotaCredito=false;
			this.isVisibilidadCeldaGuardarCambiosDetaNotaCredito=false;
			
			
			this.isVisibilidadFK_IdAnio=true;
			this.isVisibilidadFK_IdBodega=true;
			this.isVisibilidadFK_IdCentroCosto=true;
			this.isVisibilidadFK_IdEjercicio=true;
			this.isVisibilidadFK_IdEmpaque=true;
			this.isVisibilidadFK_IdEmpresa=true;
			this.isVisibilidadFK_IdMes=true;
			this.isVisibilidadFK_IdNotaCredito=true;
			this.isVisibilidadFK_IdPeriodo=true;
			this.isVisibilidadFK_IdProducto=true;
			this.isVisibilidadFK_IdSucursal=true;
			this.isVisibilidadFK_IdTipoDetaNotaCredito=true;
			this.isVisibilidadFK_IdTipoDevolucionEmpresa=true;
			this.isVisibilidadFK_IdUnidad=true;
			
			//ELEMENTOS TABLAS PARAMETOS
			
			
			
			//ELEMENTOS TABLAS PARAMETOS_FIN
			
			//this.actualizarEstadoCeldasBotonesDetaNotaCredito("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
						
			
			
			this.inicializarPermisosDetaNotaCredito();
			
			//INICIALIZAR FALSE, TALVEZ COMENTAR
			this.setPermisosUsuarioDetaNotaCredito(false);
			
			this.setPermisosUsuarioDetaNotaCredito();
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.detanotacreditoSessionBean.getEsGuardarRelacionado() 
				|| (this.detanotacreditoSessionBean.getEsGuardarRelacionado() && this.detanotacreditoSessionBean.getConGuardarRelaciones())) {
				
				this.inicializarSetPermisosUsuarioDetaNotaCreditoClasesRelacionadas();
			}
			
			if(this.detanotacreditoSessionBean.getConGuardarRelaciones()) {
				this.actualizarTabsSetPermisosUsuarioDetaNotaCreditoClasesRelacionadas();
			}
			
			
			
			//SOLO SE EJECUTA LA PRIMERA VEZ, BINDINGS SI FUNCIONA
			if(!DetaNotaCreditoJInternalFrame.ISBINDING_MANUAL) {
				this.inicializarActualizarBindingBotonesPermisosDetaNotaCredito();
			} else {
				this.inicializarActualizarBindingBotonesPermisosManualDetaNotaCredito();
			}
			
			if(!this.isPermisoBusquedaDetaNotaCredito) {
				//BYDAN_BUSQUEDAS
				
				this.jTabbedPaneBusquedasDetaNotaCredito.setVisible(false);				
				
			}
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.detanotacreditoSessionBean.getEsGuardarRelacionado()) {				
				this.tiposArchivosReportes=Funciones.getListTiposArchivosReportes();
				this.tiposArchivosReportesDinamico=Funciones.getListTiposArchivosReportes();
				this.tiposReportes=Funciones.getListTiposReportes(true);
				this.tiposReportesDinamico=Funciones.getListTiposReportesDinamico(true);
				
				
				
				this.tiposGraficosReportes=Funciones2.getListTiposGraficosReportes();
				this.tiposPaginacion=Funciones2.getListTiposPaginacion(this.isPermisoPaginacionMedioDetaNotaCredito,this.isPermisoPaginacionMedioDetaNotaCredito,this.isPermisoPaginacionTodoDetaNotaCredito);
				this.tiposSeleccionar=Funciones2.getListTiposSeleccionar();
				this.tiposSeleccionar.addAll(DetaNotaCreditoConstantesFunciones.getTiposSeleccionarDetaNotaCredito());
				
				this.tiposColumnasSelect=DetaNotaCreditoConstantesFunciones.getTiposSeleccionarDetaNotaCredito(true);
				
				this.tiposRelacionesSelect=new ArrayList<Reporte>();								
				
				
			} else {
				this.tiposArchivosReportes=new ArrayList<Reporte>();
				this.tiposArchivosReportesDinamico=new ArrayList<Reporte>();
				this.tiposReportes=new ArrayList<Reporte>();
				this.tiposReportesDinamico=new ArrayList<Reporte>();
				this.tiposGraficosReportes=new ArrayList<Reporte>();
				this.tiposPaginacion=new ArrayList<Reporte>();
				this.tiposSeleccionar=new ArrayList<Reporte>();			
				this.tiposColumnasSelect=new ArrayList<Reporte>();	
				this.tiposRelacionesSelect=new ArrayList<Reporte>();	
			}
						
			
			//FUNCIONALIDAD_RELACIONADO
			//if(!this.detanotacreditoSessionBean.getEsGuardarRelacionado()) {
				//SE ENCUENTRA MAS ADELANTE CON ACCIONES POR USUARIO
				//ACCIONES GENERALES Y POR USUARIO
				this.tiposRelaciones=Funciones2.getListTiposRelaciones();
				this.setRelacionesUsuarioDetaNotaCredito();
				
				this.tiposAcciones=Funciones2.getListTiposAcciones(true,false,true);
				this.setAccionesUsuarioDetaNotaCredito(false);	
				
				this.tiposAccionesFormulario=Funciones2.getListTiposAccionesFormulario(true,false,true);							
				this.setAccionesUsuarioDetaNotaCredito(true);	
				
				this.inicializarActualizarBindingtiposArchivosReportesAccionesDetaNotaCredito() ;
			
			/*
			} else {
				this.tiposAcciones=new ArrayList<Reporte>();
				this.tiposAccionesFormulario=new ArrayList<Reporte>();
			}
			*/						
			
			this.inicializarInvalidValues();
						
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			this.arrDatoGeneralTotales= new  ArrayList<DatoGeneral>();
			
			
			this.arrOrderBy= new  ArrayList<OrderBy>();
			
			
			this.arrDatoGeneralMinimos= new  ArrayList<DatoGeneralMinimo>();
			
			
			this.traerValoresTablaOrderBy();			
			
			
			this.isGuardarCambiosEnLote=false;
			this.isCargarCombosDependencia=false;
			
			 
			jasperPrint = null;												
			
			//FK
			
			this.empresaLogic=new EmpresaLogic();
			this.sucursalLogic=new SucursalLogic();
			this.ejercicioLogic=new EjercicioLogic();
			this.periodoLogic=new PeriodoLogic();
			this.anioLogic=new AnioLogic();
			this.mesLogic=new MesLogic();
			this.notacreditoLogic=new NotaCreditoLogic();
			this.bodegaLogic=new BodegaLogic();
			this.productoLogic=new ProductoLogic();
			this.unidadLogic=new UnidadLogic();
			this.tipodetanotacreditoLogic=new TipoDetaNotaCreditoLogic();
			this.tipodevolucionempresaLogic=new TipoDevolucionEmpresaLogic();
			this.centrocostoLogic=new CentroCostoLogic();
			this.empaqueLogic=new EmpaqueLogic();
			
			//PARAMETROS
			
			
			/*
			if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {		
				hashtableEnv =  Funciones.getHashtableEnv();		
				initialContext = new InitialContext(hashtableEnv);	
			}
			*/
			/*
			if(Constantes.ISUSAEJBREMOTE) {
				detanotacreditoImplementable= (DetaNotaCreditoImplementable) initialContext.lookup(Constantes.SEJBPACKAGE+Constantes.SEJBSEPARATOR+DetaNotaCreditoConstantesFunciones.SEJBNAME+Constantes.SEJBSEPARATOR+Constantes.SEJBREMOTE);
			} else if(Constantes.ISUSAEJBHOME) {
				detanotacreditoImplementableHome= (DetaNotaCreditoImplementableHome) initialContext.lookup(Constantes.SEJBPACKAGE+Constantes.SEJBSEPARATOR+DetaNotaCreditoConstantesFunciones.SEJBNAME+Constantes.SEJBSEPARATOR+Constantes.SEJBLOCAL);
			}			
			*/
			
			
			this.detanotacreditos= new ArrayList<DetaNotaCredito>();
			this.detanotacreditosEliminados= new ArrayList<DetaNotaCredito>();
						
			this.isEsNuevoDetaNotaCredito=false;
			this.esParaAccionDesdeFormularioDetaNotaCredito=false;
			this.isEsMantenimientoRelacionesRelacionadoUnico=false;
			this.isEsMantenimientoRelaciones=false;
			this.isEsMantenimientoRelacionado=false;
			this.isContieneImagenes=false;
			
			
			
			
			//BUSQUEDA INTERNA FK
			this.idProductoActual=0L;
			this.idCentroCostoActual=0L;
			
			//INICIALIZAR LISTAS FK
			
			this.empresasForeignKey=new ArrayList<Empresa>() ;
			this.sucursalsForeignKey=new ArrayList<Sucursal>() ;
			this.ejerciciosForeignKey=new ArrayList<Ejercicio>() ;
			this.periodosForeignKey=new ArrayList<Periodo>() ;
			this.aniosForeignKey=new ArrayList<Anio>() ;
			this.messForeignKey=new ArrayList<Mes>() ;
			this.notacreditosForeignKey=new ArrayList<NotaCredito>() ;
			this.bodegasForeignKey=new ArrayList<Bodega>() ;
			this.productosForeignKey=new ArrayList<Producto>() ;
			this.unidadsForeignKey=new ArrayList<Unidad>() ;
			this.tipodetanotacreditosForeignKey=new ArrayList<TipoDetaNotaCredito>() ;
			this.tipodevolucionempresasForeignKey=new ArrayList<TipoDevolucionEmpresa>() ;
			this.centrocostosForeignKey=new ArrayList<CentroCosto>() ;
			this.empaquesForeignKey=new ArrayList<Empaque>() ;
			
			
			
			
			if(blncargarCombostrForeignKey) {
				this.cargarCombosForeignKeyDetaNotaCredito(this.isCargarCombosDependencia);
			}
			
			this.cargarCombosParametroDetaNotaCredito();
			
			
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.detanotacreditoSessionBean.getEsGuardarRelacionado()) {
				this.onLoad();
			}
						
			DetaNotaCreditoBeanSwingJInternalFrameAdditional.RecargarVentanaSegunOpcion(this,opcionActual);
			
			/*
			if(blnCargarInformacionInicial) {
				this.recargarInformacion();
			}
			*/
			//this.iNumeroPaginacionPagina=0;
			//this.iNumeroPaginacion=DetaNotaCreditoConstantesFunciones.INUMEROPAGINACION;
			
			this.actualizarEstadoCeldasBotonesDetaNotaCredito("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			//SOLO LA PRIMERA VEZ HACE LOS BINDINGS, SOLO AHI FUNCIONA
			this.inicializarActualizarBindingDetaNotaCredito(true); 
			
			//SE REDIMENSIONA SINO NO SE ACTUALIZA
			this.redimensionarTablaDatos();
			
			
			this.initActions();
			
			;
						
			if(this.jInternalFrameDetalleFormDetaNotaCredito!=null) {//if(this.conCargarFormDetalle) {
				this.cargarMenuRelaciones();
			}
			
			//OBLIGA CARGAR DETALLE, MEJOR DESHABILITAR, FALTA TALVEZ PONER EN SELECCIONAR
			//MAYBE
			//this.updateControlesFormularioDetaNotaCredito();
			
			if(!this.conCargarMinimo) {
				this.updateBusquedasFormularioDetaNotaCredito();
			}
			
			DetaNotaCreditoBeanSwingJInternalFrameAdditional.CargaInicial(this, "NORMAL", null);
			
			
			//SE REALIZA ESTO PARA QUE SE PUEDA RECORRER TAB SIN IMPORTAR ORDEN
			Boolean existeTabBusqueda=false;
			
			if(!this.conCargarMinimo) {
				//BYDAN_BUSQUEDAS
				
				
				for(int i=0; i<this.jTabbedPaneBusquedasDetaNotaCredito.getTabCount(); i++) {
					this.jTabbedPaneBusquedasDetaNotaCredito.setSelectedIndex(i);
						
					if(!existeTabBusqueda) {
						existeTabBusqueda=true;
					}
				}
					
				if(existeTabBusqueda) {
					this.jTabbedPaneBusquedasDetaNotaCredito.setSelectedIndex(0);
				}	
				
				
			}
			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditoLogic.commitNewConnexionToDeep();
			}
			
			
			if(Constantes2.ISDEVELOPING2) {
				end_time = System.currentTimeMillis();			
				String sTipo="Load Ventana";
				Funciones2.getMensajeTiempoEjecucion(start_time, end_time, sTipo,false);
			}  
			
			this.finishProcessDetaNotaCredito(true);
			
			this.dEnd=(double)System.currentTimeMillis();
			
			this.dDif=this.dEnd - this.dStart;
			
			if(Constantes.ISDEVELOPING) {
				System.out.println("Tiempo(ms) Carga DetaNotaCredito: " + this.dDif); 
			}
			
			this.permiteRecargarForm=true;
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditoLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditoLogic.closeNewConnexionToDeep();
			}
		}	 
    }
	
	public void cargarTiposRelacionesSelectDetaNotaCredito() {
		Reporte reporte=new Reporte();
		
	
	}
	
	
	
	public void jTabbedPaneChangeListenerGeneral(String sTipo,ChangeEvent evt) { 	  
		Boolean procesaCargarParteTab=false;
			
		try {
			int iIndex=0;		    			
			String sTitle="";
			
			//TABBED PANE RELACIONES
			if(sTipo.equals("RelacionesDetaNotaCredito")) {
				iIndex=this.jInternalFrameDetalleFormDetaNotaCredito.jTabbedPaneRelacionesDetaNotaCredito.getSelectedIndex();		    
			
				sTitle=this.jInternalFrameDetalleFormDetaNotaCredito.jTabbedPaneRelacionesDetaNotaCredito.getTitleAt(iIndex);
				
				Integer intSelectedRow = 0;	
			
				intSelectedRow = this.jTableDatosDetaNotaCredito.getSelectedRow();	
				
				
				
			}
			
			//TABBED PANE RELACIONES FIN(EXTRA TAB)
			;
			
  		} catch(Exception e) {
  			e.printStackTrace();
  		} finally {
			if(procesaCargarParteTab) {				
				this.finishProcessDetaNotaCredito();	
			}
		}
    }
	
	
	
	public void jButtonRelacionActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
  		} catch(Exception e) {
  			e.printStackTrace();
  		}
    }
	
	public void cargarMenuRelaciones() {	
		JMenuItem jmenuItem= new JMenuItem("General");
		String sLabelMenu="";
		
	}		
	
	public void cargarCombosForeignKeyDetaNotaCredito(Boolean cargarCombosDependencia) throws Exception {   
		this.cargarCombosForeignKeyDetaNotaCredito(cargarCombosDependencia,true,true);
	}
	
	//CARGAR COMBOS EN LOTE
	public void cargarCombosForeignKeyDetaNotaCredito(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales) throws Exception {   
		this.cargarCombosTodosForeignKeyDetaNotaCreditoListas(cargarCombosDependencia);
				
		this.addItemDefectoCombosTodosForeignKeyDetaNotaCredito();
		
		this.cargarCombosFrameForeignKeyDetaNotaCredito();						
		
		if(conInitActions) {
			this.initActionsCombosTodosForeignKeyDetaNotaCredito();
		}
		
		if(conSetVariablesGlobales) {
			this.setVariablesGlobalesCombosForeignKeyDetaNotaCredito();
		}
	}
	
	

	public void cargarCombosForeignKeyAnio(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyAnioListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyAnio();
				this.cargarCombosFrameAniosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaAnio(this.aniosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyMes(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyMesListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyMes();
				this.cargarCombosFrameMessForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaMes(this.messForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyNotaCredito(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyNotaCreditoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyNotaCredito();
				this.cargarCombosFrameNotaCreditosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaNotaCredito(this.notacreditosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyBodega(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyBodegaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyBodega();
				this.cargarCombosFrameBodegasForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyBodega("Todos");
				}

			this.recargarComboTablaBodega(this.bodegasForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyProducto(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyProductoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyProducto();
				this.cargarCombosFrameProductosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyProducto("Todos");
				}

			this.recargarComboTablaProducto(this.productosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyUnidad(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyUnidadListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyUnidad();
				this.cargarCombosFrameUnidadsForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyProducto("Todos");
				}

			this.recargarComboTablaUnidad(this.unidadsForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoDetaNotaCredito(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTipoDetaNotaCreditoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTipoDetaNotaCredito();
				this.cargarCombosFrameTipoDetaNotaCreditosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyProducto("Todos");
				}

			this.recargarComboTablaTipoDetaNotaCredito(this.tipodetanotacreditosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoDevolucionEmpresa(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTipoDevolucionEmpresaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTipoDevolucionEmpresa();
				this.cargarCombosFrameTipoDevolucionEmpresasForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyProducto("Todos");
				}

			this.recargarComboTablaTipoDevolucionEmpresa(this.tipodevolucionempresasForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCentroCosto(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyCentroCostoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyCentroCosto();
				this.cargarCombosFrameCentroCostosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyProducto("Todos");
				}

			this.recargarComboTablaCentroCosto(this.centrocostosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyEmpaque(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyEmpaqueListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyEmpaque();
				this.cargarCombosFrameEmpaquesForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyProducto("Todos");
				}

			this.recargarComboTablaEmpaque(this.empaquesForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}
	
	public void jButtonNuevoDetaNotaCreditoActionPerformed(ActionEvent evt,Boolean esRelaciones) throws Exception {   
		try {
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.FORM_RECARGAR;
			String sTipo="NUEVO_NORMAL";
			
			this.estaModoNuevo=true;
			
			if(this.detanotacreditoSessionBean.getConGuardarRelaciones()) {
				this.dStart=(double)System.currentTimeMillis();
			}
				
			//if(this.esUsoDesdeHijo) {
			//	eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			//}
											
			if(this.jInternalFrameDetalleFormDetaNotaCredito==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}			
				
			DetaNotaCreditoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.detanotacredito,new Object(),this.detanotacreditoParameterGeneral,this.detanotacreditoReturnGeneral);
			
			
			if(jTableDatosDetaNotaCredito.getRowCount()>=1) {
				jTableDatosDetaNotaCredito.removeRowSelectionInterval(0, jTableDatosDetaNotaCredito.getRowCount()-1);						
			}
			
			this.isEsNuevoDetaNotaCredito=true;
			
			//ESTABLECE SI ES RELACIONADO O NO 
			this.habilitarDeshabilitarTipoMantenimientoDetaNotaCredito(esRelaciones);
			
			this.nuevoPreparar(false); 
			this.habilitarDeshabilitarControlesDetaNotaCredito(true);			
			//this.detanotacredito=new DetaNotaCredito();
			//this.detanotacredito.setIsChanged(true);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesDetaNotaCredito(false) ;						
			 
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualDetaNotaCredito() ;
			
			if(DetaNotaCreditoJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetalleDetaNotaCredito(esRelaciones);
			}
					
			//Se Duplica, sin sentido
			//this.actualizarInformacion("EVENTO_NUEVO",false,this.detanotacredito);	
			this.actualizarInformacion("INFO_PADRE",false,this.detanotacredito);				
			
			DetaNotaCreditoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.detanotacredito,new Object(),this.detanotacreditoParameterGeneral,this.detanotacreditoReturnGeneral);
			
			if(this.detanotacreditoSessionBean.getConGuardarRelaciones()) {
				this.dEnd=(double)System.currentTimeMillis();					
				this.dDif=this.dEnd - this.dStart;
					
				if(Constantes.ISDEVELOPING) {
					System.out.println("Tiempo(ms) Nuevo Preparar DetaNotaCredito: " + this.dDif); 
				}
			}
			
			//false para que pueda generar eventos
			this.estaModoNuevo=false;
							
			//Con this.estaModoNuevo=false;, se permite actualizar y usar eventos control al mismo tiempo (FuncionTipo.LAST)			
			DetaNotaCreditoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.LAST,ControlTipo.FORM,EventoTipo.CLIC,EventoSubTipo.NEW,sTipo,this.detanotacredito,new Object(),this.detanotacreditoParameterGeneral,this.detanotacreditoReturnGeneral);
			
		} catch(Exception e) {									
			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoNuevo=false;			
		}
	}
	
	public void jButtonDuplicarDetaNotaCreditoActionPerformed(ActionEvent evt,Boolean esRelaciones) throws Exception {   
		try {
			Boolean soloDuplicarUno=false;
			Boolean conSeleccionarFilaTabla=false;
			
			this.estaModoNuevo=true;
			this.estaModoDuplicar=true;
			
			ArrayList<DetaNotaCredito> detanotacreditosSeleccionados=new ArrayList<DetaNotaCredito>();
			int intSelectedRow =-1;
			Integer iNumRowsSeleccionados=0;
			int[] arrNumRowsSeleccionados=null;
			
			//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
			if(conSeleccionarFilaTabla) {
				arrNumRowsSeleccionados=this.jTableDatosDetaNotaCredito.getSelectedRows();
				iNumRowsSeleccionados=this.jTableDatosDetaNotaCredito.getSelectedRows().length;			
			}
			
			detanotacreditosSeleccionados=this.getDetaNotaCreditosSeleccionados(false);
				
			if((soloDuplicarUno && iNumRowsSeleccionados.equals(1)) || !soloDuplicarUno) {
				//LO HACE NUEVOPREPARAR
				//this.iIdNuevoDetaNotaCredito--;			
				//DetaNotaCredito detanotacreditoAux= new DetaNotaCredito();			
				//detanotacreditoAux.setId(this.iIdNuevoDetaNotaCredito);																
				
				//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
				//DetaNotaCredito detanotacreditoOrigen=new DetaNotaCredito();
				//for(Integer iNumRowSeleccionado:arrNumRowsSeleccionados) {				
				
				for(DetaNotaCredito detanotacreditoOrigen : detanotacreditosSeleccionados) {
					if(conSeleccionarFilaTabla) {
						if(!soloDuplicarUno) {
							//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
							//intSelectedRow =iNumRowSeleccionado;
						} else {
							intSelectedRow = this.jTableDatosDetaNotaCredito.getSelectedRow();
						}
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							detanotacreditoOrigen =(DetaNotaCredito) this.detanotacreditoLogic.getDetaNotaCreditos().toArray()[this.jTableDatosDetaNotaCredito.convertRowIndexToModel(intSelectedRow)];
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detanotacreditoOrigen =(DetaNotaCredito) this.detanotacreditos.toArray()[this.jTableDatosDetaNotaCredito.convertRowIndexToModel(intSelectedRow)];
						}
					}
					
					this.aumentarTamanioFilaNuevaTablaDetaNotaCredito();
					
					if(this.conTotales) {
						this.quitarFilaTotales();
					}
					
					this.nuevoPreparar(true);
					
					this.detanotacredito.setsType("DUPLICADO");
					
					this.setCopiarVariablesObjetosDetaNotaCredito(detanotacreditoOrigen,this.detanotacredito,true,true);
					
					this.setVariablesFormularioToObjetoActualForeignKeysDetaNotaCredito(this.detanotacredito);
					
					//LO HACE NUEVOPREPARAR
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						this.detanotacreditoLogic.getDetaNotaCreditos().add(this.detanotacreditoAux);
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						this.detanotacreditos.add(this.detanotacreditoAux);				
					}
					*/
				}
				
				this.inicializarActualizarBindingTablaDetaNotaCredito(false);
				
				this.jTableDatosDetaNotaCredito.setRowSelectionInterval(this.getIndiceNuevoDetaNotaCredito(), this.getIndiceNuevoDetaNotaCredito());
				
				int iLastRow =  this.jTableDatosDetaNotaCredito.getRowCount () - 1;
				Rectangle rectangle = this.jTableDatosDetaNotaCredito.getCellRect(iLastRow, 0, true);
				
				this.jTableDatosDetaNotaCredito.scrollRectToVisible(rectangle);
				
				//FILA TOTALES
				if(this.conTotales) {
					this.crearFilaTotales();
					
					this.inicializarActualizarBindingTablaDetaNotaCredito(false);
				}
			} else {
				throw new Exception("DEBE ESTAR SELECCIONADO 1 REGISTRO");
			}
			
		} catch(Exception e) {			
			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);
		
		} finally {
			this.estaModoNuevo=false;
			this.estaModoDuplicar=false;
		}
	}
	
	public void jButtonCopiarDetaNotaCreditoActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			Boolean conSeleccionarFilaTabla=false;
			Integer iNumRowsSeleccionados=0;
			int[] intSelectedRows =null;
			int intSelectedRow =0;
			
			this.estaModoCopiar=true;
			
			ArrayList<DetaNotaCredito> detanotacreditosSeleccionados=new ArrayList<DetaNotaCredito>();									
		
			DetaNotaCredito detanotacreditoOrigen=new DetaNotaCredito();
			DetaNotaCredito detanotacreditoDestino=new DetaNotaCredito();
				
			detanotacreditosSeleccionados=this.getDetaNotaCreditosSeleccionados(false);
			
			if(conSeleccionarFilaTabla) {
				iNumRowsSeleccionados=this.jTableDatosDetaNotaCredito.getSelectedRows().length;	
			}
			
			if(iNumRowsSeleccionados.equals(2) || detanotacreditosSeleccionados.size()==2) {
				if(conSeleccionarFilaTabla) {
					intSelectedRows =this.jTableDatosDetaNotaCredito.getSelectedRows();
					intSelectedRow = intSelectedRows[0];	
									
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						detanotacreditoOrigen =(DetaNotaCredito) this.detanotacreditoLogic.getDetaNotaCreditos().toArray()[this.jTableDatosDetaNotaCredito.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						detanotacreditoOrigen =(DetaNotaCredito) this.detanotacreditos.toArray()[this.jTableDatosDetaNotaCredito.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					intSelectedRow = intSelectedRows[1];
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						detanotacreditoDestino =(DetaNotaCredito) this.detanotacreditoLogic.getDetaNotaCreditos().toArray()[this.jTableDatosDetaNotaCredito.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						detanotacreditoDestino =(DetaNotaCredito) this.detanotacreditos.toArray()[this.jTableDatosDetaNotaCredito.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				}
				
				detanotacreditoOrigen =detanotacreditosSeleccionados.get(0);
				detanotacreditoDestino =detanotacreditosSeleccionados.get(1);
				
				this.setCopiarVariablesObjetosDetaNotaCredito(detanotacreditoOrigen,detanotacreditoDestino,true,false);
				
				detanotacreditoDestino.setsType("DUPLICADO");
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					actualizarLista(detanotacreditoDestino,detanotacreditoLogic.getDetaNotaCreditos());					
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(detanotacreditoDestino,detanotacreditos);
				}
				//ARCHITECTURE
				
				this.inicializarActualizarBindingTablaDetaNotaCredito(false);
				
				//this.jTableDatosDetaNotaCredito.setRowSelectionInterval(this.getIndiceNuevoDetaNotaCredito(), this.getIndiceNuevoDetaNotaCredito());
				
				int iLastRow =  this.jTableDatosDetaNotaCredito.getRowCount () - 1;
				Rectangle rectangle = this.jTableDatosDetaNotaCredito.getCellRect(iLastRow, 0, true);
				
				this.jTableDatosDetaNotaCredito.scrollRectToVisible(rectangle);
				
				//FILA TOTALES
				if(this.conTotales) {
					//this.crearFilaTotales();
					
					this.inicializarActualizarBindingTablaDetaNotaCredito(false);
				}
			} else {
				throw new Exception("DEBEN ESTAR SELECCIONADOS 2 REGISTROS");
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);
		
		}  finally {
			this.estaModoCopiar=false;
		}
	}
	
	public void jButtonVerFormDetaNotaCreditoActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			if(this.jInternalFrameDetalleFormDetaNotaCredito==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			this.jInternalFrameDetalleFormDetaNotaCredito.setSelected(true);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonMostrarOcultarDetaNotaCreditoActionPerformed(ActionEvent evt) throws Exception {   
		try {
			Boolean isVisible=this.jPanelParametrosReportesDetaNotaCredito.isVisible();
			
			//BYDAN_BUSQUEDAS
			
			this.jTabbedPaneBusquedasDetaNotaCredito.setVisible(!isVisible);			
			
			
			this.jPanelParametrosReportesDetaNotaCredito.setVisible(!isVisible);
			this.jPanelPaginacionDetaNotaCredito.setVisible(!isVisible);
			this.jPanelAccionesDetaNotaCredito.setVisible(!isVisible);
							
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarDetaNotaCreditoActionPerformed(ActionEvent evt) throws Exception {   
		try {
			this.closingInternalFrameDetaNotaCredito();
			
			//if(this.jInternalFrameParent==null) {
				//this.dispose();
			/*} else {
				this.setVisible(false);
	        	this.setSelected(false);	
			}*/			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarReporteDinamicoDetaNotaCreditoActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.cerrarFrameReporteDinamicoDetaNotaCredito();
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarImportacionDetaNotaCreditoActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.cerrarFrameImportacionDetaNotaCredito();
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonAbrirTotalesDetaNotaCreditoActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.abrirInicializarFrameTotalesDetaNotaCredito();
			
			this.abrirFrameTotalesDetaNotaCredito();
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarTotalesDetaNotaCreditoActionPerformed(ActionEvent evt) throws Exception {   
		try {
			this.cerrarFrameTotalesDetaNotaCredito();
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonAbrirOrderByDetaNotaCreditoActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			
			this.abrirInicializarFrameOrderByDetaNotaCredito();
			
			this.abrirFrameOrderByDetaNotaCredito();
			
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarOrderByDetaNotaCreditoActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.cerrarFrameOrderByDetaNotaCredito();
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void abrirFrameDetalleDetaNotaCredito(Boolean esRelaciones) throws Exception {	    	        
	    try {
			//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false
			//this.jDesktopPane.add(jInternalFrameDetalleFormDetaNotaCredito);
			
			if(!esRelaciones) {
				if(this.jInternalFrameDetalleFormDetaNotaCredito.isMaximum()) {
					this.jInternalFrameDetalleFormDetaNotaCredito.setMaximum(false);
				}								
				
	    		this.jInternalFrameDetalleFormDetaNotaCredito.setSize(this.jInternalFrameDetalleFormDetaNotaCredito.iWidthFormulario,this.jInternalFrameDetalleFormDetaNotaCredito.iHeightFormulario);
	    	} else {
				if(this.iWidthScroll<this.jInternalFrameDetalleFormDetaNotaCredito.iWidthFormularioMaximo) {
	    			this.jInternalFrameDetalleFormDetaNotaCredito.setSize(this.iWidthScroll,this.iHeightScroll);
				} else {
					if(!this.jInternalFrameDetalleFormDetaNotaCredito.isMaximum()) {
						this.jInternalFrameDetalleFormDetaNotaCredito.setMaximum(true);
					}
				}
				
				if(this.jInternalFrameDetalleFormDetaNotaCredito.jContentPaneDetalleDetaNotaCredito.getWidth() > this.getWidth()) {
					this.jInternalFrameDetalleFormDetaNotaCredito.jTabbedPaneRelacionesDetaNotaCredito.setMinimumSize(new Dimension(this.jInternalFrameDetalleFormDetaNotaCredito.jContentPaneDetalleDetaNotaCredito.getWidth(),DetaNotaCreditoConstantesFunciones.ALTO_TABPANE_RELACIONES));
					this.jInternalFrameDetalleFormDetaNotaCredito.jTabbedPaneRelacionesDetaNotaCredito.setMaximumSize(new Dimension(this.jInternalFrameDetalleFormDetaNotaCredito.jContentPaneDetalleDetaNotaCredito.getWidth(),DetaNotaCreditoConstantesFunciones.ALTO_TABPANE_RELACIONES));
					this.jInternalFrameDetalleFormDetaNotaCredito.jTabbedPaneRelacionesDetaNotaCredito.setPreferredSize(new Dimension(this.jInternalFrameDetalleFormDetaNotaCredito.jContentPaneDetalleDetaNotaCredito.getWidth(),DetaNotaCreditoConstantesFunciones.ALTO_TABPANE_RELACIONES));
					
					Dimension dimension=new Dimension(); 
					
					
					
				}
	    	}
			
		
	       	this.jInternalFrameDetalleFormDetaNotaCredito.setVisible(true);
	        this.jInternalFrameDetalleFormDetaNotaCredito.setSelected(true);
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);
	    }
	}
	
	
	public void abrirInicializarFrameOrderByDetaNotaCredito() throws Exception {	    	        
	    try {
			if(this.jInternalFrameOrderByDetaNotaCredito==null) {
				
				if(!this.conCargarMinimo) {
					this.jInternalFrameOrderByDetaNotaCredito=new OrderByJInternalFrame(STIPO_TAMANIO_GENERAL,this.jButtonAbrirOrderByDetaNotaCredito,false,this);
				} else {
					this.jInternalFrameOrderByDetaNotaCredito=new OrderByJInternalFrame(STIPO_TAMANIO_GENERAL,this.jButtonAbrirOrderByDetaNotaCredito,true,this);
				}
				
				this.jDesktopPane.add(this.jInternalFrameOrderByDetaNotaCredito);
				this.jInternalFrameOrderByDetaNotaCredito.setVisible(false);
				this.jInternalFrameOrderByDetaNotaCredito.setSelected(false);
				
				this.jInternalFrameOrderByDetaNotaCredito.getjButtonCerrarOrderBy().addActionListener (new ButtonActionListener(this,"CerrarOrderByDetaNotaCredito"));
				
				this.inicializarActualizarBindingTablaOrderByDetaNotaCredito();
			}
		} catch (final Exception e) {
			
		}
	}
	
	
	
	public void abrirInicializarFrameImportacionDetaNotaCredito() throws Exception {	    	        
	    try {
			if(this.jInternalFrameImportacionDetaNotaCredito==null) {
				
				this.jInternalFrameImportacionDetaNotaCredito=new ImportacionJInternalFrame(DetaNotaCreditoConstantesFunciones.SCLASSWEBTITULO,this);			
				
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameImportacionDetaNotaCredito);							
				
				this.jDesktopPane.add(this.jInternalFrameImportacionDetaNotaCredito);
				this.jInternalFrameImportacionDetaNotaCredito.setVisible(false);
				this.jInternalFrameImportacionDetaNotaCredito.setSelected(false);


				this.jInternalFrameImportacionDetaNotaCredito.getjButtonCerrarImportacion().addActionListener (new ButtonActionListener(this,"CerrarImportacionDetaNotaCredito"));
				this.jInternalFrameImportacionDetaNotaCredito.getjButtonGenerarImportacion().addActionListener (new ButtonActionListener(this,"GenerarImportacionDetaNotaCredito"));
				this.jInternalFrameImportacionDetaNotaCredito.getjButtonAbrirImportacion().addActionListener (new ButtonActionListener(this,"AbrirImportacionDetaNotaCredito"));


			}
		} catch (final Exception e) {
			
		}
	}		
	
	
	
	public void abrirInicializarFrameReporteDinamicoDetaNotaCredito() throws Exception {	    	        
	    try {
			
			if(this.jInternalFrameReporteDinamicoDetaNotaCredito==null) {
				this.jInternalFrameReporteDinamicoDetaNotaCredito=new ReporteDinamicoJInternalFrame(DetaNotaCreditoConstantesFunciones.SCLASSWEBTITULO,this);	
				
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameReporteDinamicoDetaNotaCredito);	
	
	
				this.jDesktopPane.add(this.jInternalFrameReporteDinamicoDetaNotaCredito);
				this.jInternalFrameReporteDinamicoDetaNotaCredito.setVisible(false);
				this.jInternalFrameReporteDinamicoDetaNotaCredito.setSelected(false);
	
	
	
				this.jInternalFrameReporteDinamicoDetaNotaCredito.getjButtonCerrarReporteDinamico().addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoDetaNotaCredito"));
				this.jInternalFrameReporteDinamicoDetaNotaCredito.getjButtonGenerarReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoDetaNotaCredito"));
				this.jInternalFrameReporteDinamicoDetaNotaCredito.getjButtonGenerarExcelReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoDetaNotaCredito"));
	
				this.inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualDetaNotaCredito();
			}

		} catch (final Exception e) {
			
		}
	}	
	
	
	public void abrirInicializarFrameTotalesDetaNotaCredito() throws Exception {	    	        
	    try {			
			if(this.jInternalFrameTotalesDetaNotaCredito==null) {
				this.jInternalFrameTotalesDetaNotaCredito=new TotalesJInternalFrame(this.jButtonAbrirTotalesDetaNotaCredito,STIPO_TAMANIO_GENERAL,this);
				
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameTotalesDetaNotaCredito);

				//TOTALES
				this.jDesktopPane.add(this.jInternalFrameTotalesDetaNotaCredito);
				this.jInternalFrameTotalesDetaNotaCredito.setVisible(false);
				this.jInternalFrameTotalesDetaNotaCredito.setSelected(false);


				this.jInternalFrameTotalesDetaNotaCredito.getjButtonCerrarTotales().addActionListener (new ButtonActionListener(this,"CerrarTotalesDetaNotaCredito"));
								
				this.inicializarActualizarBindingTablaTotalesDetaNotaCredito();
				
				this.redimensionarTablaTotales();
			}			
		} catch (final Exception e) {
			
		}
	}	
	
		
					
	public void cerrarFrameDetalleDetaNotaCredito() throws Exception {	    	        
	    try {
			//this.jDesktopPane.add(jInternalFrameDetalleFormDetaNotaCredito);
			
	       	this.jInternalFrameDetalleFormDetaNotaCredito.setVisible(false);
	        this.jInternalFrameDetalleFormDetaNotaCredito.setSelected(false);
			
			//this.jInternalFrameDetalleFormDetaNotaCredito.dispose();
			//this.jInternalFrameDetalleFormDetaNotaCredito=null;
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);
	    }
	}
	
	
	public void abrirFrameReporteDinamicoDetaNotaCredito() throws Exception {	    	        
	    try {
			
			this.jInternalFrameReporteDinamicoDetaNotaCredito.setVisible(true);
	        this.jInternalFrameReporteDinamicoDetaNotaCredito.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void abrirFrameImportacionDetaNotaCredito() throws Exception {	    	        		
	    try {			
			this.jInternalFrameImportacionDetaNotaCredito.setVisible(true);
	        this.jInternalFrameImportacionDetaNotaCredito.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);
	    }		
	}	
	
	
	public void abrirFrameTotalesDetaNotaCredito() throws Exception {	    	        
	    try {
			this.jInternalFrameTotalesDetaNotaCredito.setVisible(true);
	        this.jInternalFrameTotalesDetaNotaCredito.setSelected(true);
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);
	    }
	}
	
	public void cerrarFrameTotalesDetaNotaCredito() throws Exception {	    	        
	    try {
			this.jInternalFrameTotalesDetaNotaCredito.setVisible(false);
	        this.jInternalFrameTotalesDetaNotaCredito.setSelected(false);
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);
	    }
	}
	
	
	
	public void abrirFrameOrderByDetaNotaCredito() throws Exception {	    	        		
	    try {
			this.jInternalFrameOrderByDetaNotaCredito.setVisible(true);
	        this.jInternalFrameOrderByDetaNotaCredito.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void cerrarFrameOrderByDetaNotaCredito() throws Exception {	    	        		
	    try {			
			this.jInternalFrameOrderByDetaNotaCredito.setVisible(false);
	        this.jInternalFrameOrderByDetaNotaCredito.setSelected(false);			
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void cerrarFrameReporteDinamicoDetaNotaCredito() throws Exception {			
	    try {
			this.jInternalFrameReporteDinamicoDetaNotaCredito.setVisible(false);
	        this.jInternalFrameReporteDinamicoDetaNotaCredito.setSelected(false);			
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void cerrarFrameImportacionDetaNotaCredito() throws Exception {	    	        		
	    try {
			this.jInternalFrameImportacionDetaNotaCredito.setVisible(false);
	        this.jInternalFrameImportacionDetaNotaCredito.setSelected(false);
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	

				public void abrirFrameTreeCentroCosto(String sTipoProceso) { //throws Exception
					try {
						//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false
						//this.jDesktopPane.add(jInternalFrameTreeCentroCosto);
						CentroCostoBeanSwingJInternalFrame centrocostoBeanSwingJInternalFrame=new CentroCostoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
						centrocostoBeanSwingJInternalFrame.setJInternalFrameParent(this);
						centrocostoBeanSwingJInternalFrame.jInternalFrameTreeCentroCosto.setsTipoProceso(sTipoProceso);

						if(sTipoProceso.equals("BUSQUEDA_FK")) {
							centrocostoBeanSwingJInternalFrame.jInternalFrameTreeCentroCosto.sTipoBusqueda="CentroCosto";
						}

						centrocostoBeanSwingJInternalFrame.getTodosCentroCostoArbol();
						centrocostoBeanSwingJInternalFrame.jInternalFrameTreeCentroCosto.setCentroCostos(centrocostoBeanSwingJInternalFrame.centrocostosArbol);
						centrocostoBeanSwingJInternalFrame.jInternalFrameTreeCentroCosto.CargarTreeCentroCosto();
						centrocostoBeanSwingJInternalFrame.jInternalFrameTreeCentroCosto.setVisible(true);
						centrocostoBeanSwingJInternalFrame.jInternalFrameTreeCentroCosto.setSelected(true);

						//SE CAMBIA PARENT ORIGINAL PARA QUE RETORNE EN ESTE FORMULARIO
						centrocostoBeanSwingJInternalFrame.jInternalFrameTreeCentroCosto.jInternalFrameParent=this;
						TitledBorder titledBorderDetaNotaCredito=(TitledBorder)this.jScrollPanelDatosDetaNotaCredito.getBorder();
						TitledBorder titledBorderCentroCosto=(TitledBorder)centrocostoBeanSwingJInternalFrame.jScrollPanelDatosCentroCosto.getBorder();

						titledBorderCentroCosto.setTitle(titledBorderDetaNotaCredito.getTitle() + " -> Centro Costo");


						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,centrocostoBeanSwingJInternalFrame);
						}
						this.jDesktopPane.add(centrocostoBeanSwingJInternalFrame);

					} catch (Exception e) {
						e.getStackTrace();
						//Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
					}
				}

				public void cerrarFrameTreeCentroCosto(CentroCostoBeanSwingJInternalFrame jInternalFrameTreeCentroCosto) throws Exception {
					try {
						//jDesktopPane.add(jInternalFrameTreeCentroCosto);
						jInternalFrameTreeCentroCosto.setVisible(false);
						jInternalFrameTreeCentroCosto.setSelected(false);
						//jInternalFrameTreeCentroCosto.dispose();
						//jInternalFrameTreeCentroCosto=null;
					} catch (final java.beans.PropertyVetoException e) {
						FuncionesSwing.manageException(this, e,logger);
					}
				}
	
	public void jButtonModificarDetaNotaCreditoActionPerformed(ActionEvent evt) throws Exception {   
		try {
			this.modificarDetaNotaCredito(evt,-1,false);
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void modificarDetaNotaCredito(ActionEvent evt,int rowIndex,Boolean esRelaciones) throws Exception {   
		try {
			int intSelectedRow = 0;	
			
			if(rowIndex>=0) {
				intSelectedRow=rowIndex;
			} else {
				intSelectedRow = this.jTableDatosDetaNotaCredito.getSelectedRow();
			}
			
			this.habilitarDeshabilitarControlesDetaNotaCredito(true);
			//this.isEsNuevoDetaNotaCredito=false;
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacredito =(DetaNotaCredito) this.detanotacreditoLogic.getDetaNotaCreditos().toArray()[this.jTableDatosDetaNotaCredito.convertRowIndexToModel(intSelectedRow)];
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.detanotacredito =(DetaNotaCredito) this.detanotacreditos.toArray()[this.jTableDatosDetaNotaCredito.convertRowIndexToModel(intSelectedRow)];
			}
			//ARCHITECTURE
			
			this.actualizarEstadoCeldasBotonesDetaNotaCredito("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesDetaNotaCredito(false) ;
			
			if(detanotacreditoSessionBean.getConGuardarRelaciones()) {
			
			}
			
			if(DetaNotaCreditoJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetalleDetaNotaCredito(esRelaciones);
			}
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualDetaNotaCredito(false) ;
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarFilaTablaDetaNotaCreditoActual() { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL
			Integer intSelectedRow = this.jTableDatosDetaNotaCredito.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacredito =(DetaNotaCredito) this.detanotacreditoLogic.getDetaNotaCreditos().toArray()[this.jTableDatosDetaNotaCredito.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.detanotacredito =(DetaNotaCredito) this.detanotacreditos.toArray()[this.jTableDatosDetaNotaCredito.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void seleccionarDetaNotaCredito(ActionEvent evt,int rowIndex) throws Exception {   
		try {
			
			if(this.jInternalFrameDetalleFormDetaNotaCredito==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			int intSelectedRow = 0;	
			
			if(rowIndex>=0) {
				intSelectedRow=rowIndex;
			} else {
				intSelectedRow = this.jTableDatosDetaNotaCredito.getSelectedRow();
			}
			
			//this.habilitarDeshabilitarControlesDetaNotaCredito(true);
			//this.isEsNuevoDetaNotaCredito=false;
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacredito =(DetaNotaCredito) this.detanotacreditoLogic.getDetaNotaCreditos().toArray()[this.jTableDatosDetaNotaCredito.convertRowIndexToModel(intSelectedRow)];
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.detanotacredito =(DetaNotaCredito) this.detanotacreditos.toArray()[this.jTableDatosDetaNotaCredito.convertRowIndexToModel(intSelectedRow)];
			}
			//ARCHITECTURE
			
			this.jInternalFrameParent.setIdCombosCodigoDesdeBusquedaForeignKey(this.detanotacredito.getId(),this.sTipoBusqueda);
			
			this.dispose();
			
			//this.actualizarEstadoCeldasBotonesDetaNotaCredito("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
			//NO FUNCIONA BINDINGS
			/*
			this.inicializarActualizarBindingBotonesDetaNotaCredito(false) ;
			
			if(DetaNotaCreditoJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetalleDetaNotaCredito(esRelaciones);
			}
			*/
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualDetaNotaCredito(false) ;
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);
		}
	}		
	
	public void setIdCombosCodigoDesdeBusquedaForeignKey(Long id,String sType)throws Exception{
		
		try {
			
			if(sType.equals("Producto")) {
				if(!this.detanotacreditoConstantesFunciones.cargarid_productoDetaNotaCredito) {
					this.cargarCombosProductosForeignKeyLista(" where id="+id);
					//this.inicializarActualizarBindingDetaNotaCredito(false,false);
					this.cargarCombosFrameProductosForeignKey("Todos");
				}

				this.setCombosCodigoDesdeBusquedaid_producto (id);

				this.recargarComboTablaProducto(this.productosForeignKey);

			}
			
			if(sType.equals("CentroCosto")) {
				if(!this.detanotacreditoConstantesFunciones.cargarid_centro_costoDetaNotaCredito) {
					this.cargarCombosCentroCostosForeignKeyLista(" where id="+id);
					//this.inicializarActualizarBindingDetaNotaCredito(false,false);
					this.cargarCombosFrameCentroCostosForeignKey("Todos");
				}

				this.setCombosCodigoDesdeBusquedaid_centro_costo (id);

				this.recargarComboTablaCentroCosto(this.centrocostosForeignKey);

			}
		} catch(Exception e) {
			throw e;
		}
	}
	
					
	
	public void recargarComboTablaAnio(List<Anio> aniosForeignKey)throws Exception{
		TableColumn tableColumnAnio=this.jTableDatosDetaNotaCredito.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetaNotaCredito,DetaNotaCreditoConstantesFunciones.LABEL_IDANIO));
		TableCellEditor tableCellEditorAnio =tableColumnAnio.getCellEditor();

		AnioTableCell anioTableCellFk=(AnioTableCell)tableCellEditorAnio;

		if(anioTableCellFk!=null) {
			anioTableCellFk.setaniosForeignKey(aniosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosDetaNotaCredito.getSelectedRow();

		//if(intSelectedRow<=0) {
			//anioTableCellFk.setRowActual(intSelectedRow);
			//anioTableCellFk.setaniosForeignKeyActual(aniosForeignKey);
		//}


		if(anioTableCellFk!=null) {
			anioTableCellFk.RecargarAniosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaMes(List<Mes> messForeignKey)throws Exception{
		TableColumn tableColumnMes=this.jTableDatosDetaNotaCredito.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetaNotaCredito,DetaNotaCreditoConstantesFunciones.LABEL_IDMES));
		TableCellEditor tableCellEditorMes =tableColumnMes.getCellEditor();

		MesTableCell mesTableCellFk=(MesTableCell)tableCellEditorMes;

		if(mesTableCellFk!=null) {
			mesTableCellFk.setmessForeignKey(messForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosDetaNotaCredito.getSelectedRow();

		//if(intSelectedRow<=0) {
			//mesTableCellFk.setRowActual(intSelectedRow);
			//mesTableCellFk.setmessForeignKeyActual(messForeignKey);
		//}


		if(mesTableCellFk!=null) {
			mesTableCellFk.RecargarMessForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaNotaCredito(List<NotaCredito> notacreditosForeignKey)throws Exception{
		TableColumn tableColumnNotaCredito=this.jTableDatosDetaNotaCredito.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetaNotaCredito,DetaNotaCreditoConstantesFunciones.LABEL_IDNOTACREDITO));
		TableCellEditor tableCellEditorNotaCredito =tableColumnNotaCredito.getCellEditor();

		NotaCreditoTableCell notacreditoTableCellFk=(NotaCreditoTableCell)tableCellEditorNotaCredito;

		if(notacreditoTableCellFk!=null) {
			notacreditoTableCellFk.setnotacreditosForeignKey(notacreditosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosDetaNotaCredito.getSelectedRow();

		//if(intSelectedRow<=0) {
			//notacreditoTableCellFk.setRowActual(intSelectedRow);
			//notacreditoTableCellFk.setnotacreditosForeignKeyActual(notacreditosForeignKey);
		//}


		if(notacreditoTableCellFk!=null) {
			notacreditoTableCellFk.RecargarNotaCreditosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaBodega(List<Bodega> bodegasForeignKey)throws Exception{
		TableColumn tableColumnBodega=this.jTableDatosDetaNotaCredito.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetaNotaCredito,DetaNotaCreditoConstantesFunciones.LABEL_IDBODEGA));
		TableCellEditor tableCellEditorBodega =tableColumnBodega.getCellEditor();

		BodegaTableCell bodegaTableCellFk=(BodegaTableCell)tableCellEditorBodega;

		if(bodegaTableCellFk!=null) {
			bodegaTableCellFk.setbodegasForeignKey(bodegasForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosDetaNotaCredito.getSelectedRow();

		//if(intSelectedRow<=0) {
			//bodegaTableCellFk.setRowActual(intSelectedRow);
			//bodegaTableCellFk.setbodegasForeignKeyActual(bodegasForeignKey);
		//}


		if(bodegaTableCellFk!=null) {
			bodegaTableCellFk.RecargarBodegasForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaProducto(List<Producto> productosForeignKey)throws Exception{
		TableColumn tableColumnProducto=this.jTableDatosDetaNotaCredito.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetaNotaCredito,DetaNotaCreditoConstantesFunciones.LABEL_IDPRODUCTO));
		TableCellEditor tableCellEditorProducto =tableColumnProducto.getCellEditor();

		ProductoTableCell productoTableCellFk=(ProductoTableCell)tableCellEditorProducto;

		if(productoTableCellFk!=null) {
			productoTableCellFk.setproductosForeignKey(productosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosDetaNotaCredito.getSelectedRow();

		//if(intSelectedRow<=0) {
			//productoTableCellFk.setRowActual(intSelectedRow);
			//productoTableCellFk.setproductosForeignKeyActual(productosForeignKey);
		//}


		if(productoTableCellFk!=null) {
			productoTableCellFk.RecargarProductosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaUnidad(List<Unidad> unidadsForeignKey)throws Exception{
		TableColumn tableColumnUnidad=this.jTableDatosDetaNotaCredito.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetaNotaCredito,DetaNotaCreditoConstantesFunciones.LABEL_IDUNIDAD));
		TableCellEditor tableCellEditorUnidad =tableColumnUnidad.getCellEditor();

		UnidadTableCell unidadTableCellFk=(UnidadTableCell)tableCellEditorUnidad;

		if(unidadTableCellFk!=null) {
			unidadTableCellFk.setunidadsForeignKey(unidadsForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosDetaNotaCredito.getSelectedRow();

		//if(intSelectedRow<=0) {
			//unidadTableCellFk.setRowActual(intSelectedRow);
			//unidadTableCellFk.setunidadsForeignKeyActual(unidadsForeignKey);
		//}


		if(unidadTableCellFk!=null) {
			unidadTableCellFk.RecargarUnidadsForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaTipoDetaNotaCredito(List<TipoDetaNotaCredito> tipodetanotacreditosForeignKey)throws Exception{
		TableColumn tableColumnTipoDetaNotaCredito=this.jTableDatosDetaNotaCredito.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetaNotaCredito,DetaNotaCreditoConstantesFunciones.LABEL_IDTIPODETANOTACREDITO));
		TableCellEditor tableCellEditorTipoDetaNotaCredito =tableColumnTipoDetaNotaCredito.getCellEditor();

		TipoDetaNotaCreditoTableCell tipodetanotacreditoTableCellFk=(TipoDetaNotaCreditoTableCell)tableCellEditorTipoDetaNotaCredito;

		if(tipodetanotacreditoTableCellFk!=null) {
			tipodetanotacreditoTableCellFk.settipodetanotacreditosForeignKey(tipodetanotacreditosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosDetaNotaCredito.getSelectedRow();

		//if(intSelectedRow<=0) {
			//tipodetanotacreditoTableCellFk.setRowActual(intSelectedRow);
			//tipodetanotacreditoTableCellFk.settipodetanotacreditosForeignKeyActual(tipodetanotacreditosForeignKey);
		//}


		if(tipodetanotacreditoTableCellFk!=null) {
			tipodetanotacreditoTableCellFk.RecargarTipoDetaNotaCreditosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaTipoDevolucionEmpresa(List<TipoDevolucionEmpresa> tipodevolucionempresasForeignKey)throws Exception{
		TableColumn tableColumnTipoDevolucionEmpresa=this.jTableDatosDetaNotaCredito.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetaNotaCredito,DetaNotaCreditoConstantesFunciones.LABEL_IDTIPODEVOLUCIONEMPRESA));
		TableCellEditor tableCellEditorTipoDevolucionEmpresa =tableColumnTipoDevolucionEmpresa.getCellEditor();

		TipoDevolucionEmpresaTableCell tipodevolucionempresaTableCellFk=(TipoDevolucionEmpresaTableCell)tableCellEditorTipoDevolucionEmpresa;

		if(tipodevolucionempresaTableCellFk!=null) {
			tipodevolucionempresaTableCellFk.settipodevolucionempresasForeignKey(tipodevolucionempresasForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosDetaNotaCredito.getSelectedRow();

		//if(intSelectedRow<=0) {
			//tipodevolucionempresaTableCellFk.setRowActual(intSelectedRow);
			//tipodevolucionempresaTableCellFk.settipodevolucionempresasForeignKeyActual(tipodevolucionempresasForeignKey);
		//}


		if(tipodevolucionempresaTableCellFk!=null) {
			tipodevolucionempresaTableCellFk.RecargarTipoDevolucionEmpresasForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaCentroCosto(List<CentroCosto> centrocostosForeignKey)throws Exception{
		TableColumn tableColumnCentroCosto=this.jTableDatosDetaNotaCredito.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetaNotaCredito,DetaNotaCreditoConstantesFunciones.LABEL_IDCENTROCOSTO));
		TableCellEditor tableCellEditorCentroCosto =tableColumnCentroCosto.getCellEditor();

		CentroCostoTableCell centrocostoTableCellFk=(CentroCostoTableCell)tableCellEditorCentroCosto;

		if(centrocostoTableCellFk!=null) {
			centrocostoTableCellFk.setcentrocostosForeignKey(centrocostosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosDetaNotaCredito.getSelectedRow();

		//if(intSelectedRow<=0) {
			//centrocostoTableCellFk.setRowActual(intSelectedRow);
			//centrocostoTableCellFk.setcentrocostosForeignKeyActual(centrocostosForeignKey);
		//}


		if(centrocostoTableCellFk!=null) {
			centrocostoTableCellFk.RecargarCentroCostosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaEmpaque(List<Empaque> empaquesForeignKey)throws Exception{
		TableColumn tableColumnEmpaque=this.jTableDatosDetaNotaCredito.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetaNotaCredito,DetaNotaCreditoConstantesFunciones.LABEL_IDEMPAQUE));
		TableCellEditor tableCellEditorEmpaque =tableColumnEmpaque.getCellEditor();

		EmpaqueTableCell empaqueTableCellFk=(EmpaqueTableCell)tableCellEditorEmpaque;

		if(empaqueTableCellFk!=null) {
			empaqueTableCellFk.setempaquesForeignKey(empaquesForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosDetaNotaCredito.getSelectedRow();

		//if(intSelectedRow<=0) {
			//empaqueTableCellFk.setRowActual(intSelectedRow);
			//empaqueTableCellFk.setempaquesForeignKeyActual(empaquesForeignKey);
		//}


		if(empaqueTableCellFk!=null) {
			empaqueTableCellFk.RecargarEmpaquesForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	

	public void setCombosCodigoDesdeBusquedaid_producto (Long id) throws Exception {
		this.setActualProductoForeignKey(id,true,"Todos");

	};
	

	public void setCombosCodigoDesdeBusquedaid_centro_costo (Long id) throws Exception {
		this.setActualCentroCostoForeignKey(id,true,"Todos");

	};
	
	public void jButtonActualizarDetaNotaCreditoActionPerformed(ActionEvent evt) throws Exception {   
		try	{
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditoLogic.getNewConnexionToDeep("");
			}
			
			this.inicializarActualizarBindingParametrosReportesDetaNotaCredito(false);
			
			//if(!this.isEsNuevoDetaNotaCredito) {								
				int intSelectedRow = this.jTableDatosDetaNotaCredito.getSelectedRow();	
				
				//SE PIEDE INDICE SELECTED CON FILA TOTALES, ASEGURARSE QUE OBJETO ACTUAL ESTE EN FORMULARIO
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacredito =(DetaNotaCredito) this.detanotacreditoLogic.getDetaNotaCreditos().toArray()[this.jTableDatosDetaNotaCredito.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detanotacredito =(DetaNotaCredito) this.detanotacreditos.toArray()[this.jTableDatosDetaNotaCredito.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
			//}
				
			if(DetaNotaCreditoJInternalFrame.ISBINDING_MANUAL_TABLA) {
				this.setVariablesFormularioToObjetoActualDetaNotaCredito(this.detanotacredito,true);
				this.setVariablesFormularioToObjetoActualForeignKeysDetaNotaCredito(this.detanotacredito);
				
			}
			
			if(this.permiteMantenimiento(this.detanotacredito)) {	
				this.actualizar();
				
				if(!this.isGuardarCambiosEnLote && !this.detanotacreditoSessionBean.getEsGuardarRelacionado()) {
					this.procesarBusqueda(sAccionBusqueda);
					
					this.isEsNuevoDetaNotaCredito=true;
					this.inicializarActualizarBindingTablaDetaNotaCredito(false);
					this.isEsNuevoDetaNotaCredito=false;
				
				} else {					
					
					//PARA RELACIONADO ACTUALIZAR FILA TOTALES
					this.isEsNuevoDetaNotaCredito=true;
					this.procesoActualizarFilaTotales(false,"MANTENIMIENTO");
					this.isEsNuevoDetaNotaCredito=false;
				}
						
								
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingBotonesDetaNotaCredito(false);
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualDetaNotaCredito(false);
				
				this.habilitarDeshabilitarControlesDetaNotaCredito(false);
			
												
				
				if(DetaNotaCreditoJInternalFrame.CON_DATOS_FRAME) {
					if(!this.isPostAccionSinCerrar) {
						this.cerrarFrameDetalleDetaNotaCredito();
					}
				}
				
				if(this.isPostAccionNuevo) {
					this.jButtonNuevoDetaNotaCreditoActionPerformed(evt,detanotacreditoSessionBean.getConGuardarRelaciones());
				} else {
					if(this.isPostAccionSinCerrar) {
						Integer intSelectedRowActual=this.getIndiceActualDetaNotaCredito(this.detanotacredito,intSelectedRow);
						
						if(intSelectedRow>-1) {
							this.jTableDatosDetaNotaCredito.setRowSelectionInterval(intSelectedRowActual, intSelectedRowActual);
							this.jButtonIdActionPerformed(evt,intSelectedRowActual,detanotacreditoSessionBean.getConGuardarRelaciones(),false);
						}
					}
				}
				
				this.cancelar(false);
				
			} else {
				JOptionPane.showMessageDialog(this,"ESTE REGISTRO NO PUEDE ACTUALIZARSE","EDITAR",JOptionPane.ERROR_MESSAGE);
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditoLogic.commitNewConnexionToDeep();
			}
			
			
			if(this.jInternalFrameParent!=null) { //&& this.isEsMantenimientoRelacionado) {
				Boolean esUsoDesdeHijoLocal=true;
				String sTipo="Formulario";
				Boolean conIrServidorAplicacionParent=false;
				Long id=this.detanotacredito.getId();
				ArrayList<String> arrClasses=new ArrayList<String>();
				
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();
				
				generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
				generalEntityParameterGeneral.setsDominio("Formulario");
				generalEntityParameterGeneral.setsDominioTipo(DetaNotaCredito.class.getName());
				
				this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",DetaNotaCredito.class.getName(),sTipo,"FORMULARIO",esControlTabla,conIrServidorAplicacionParent,
					id,this, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.FORM,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
					evt,generalEntityParameterGeneral,this);
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditoLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditoLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonEliminarDetaNotaCreditoActionPerformed(ActionEvent evt) throws Exception {   
		try	{
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditoLogic.getNewConnexionToDeep("");
			}
			
			int intSelectedRow = this.jTableDatosDetaNotaCredito.getSelectedRow();	       
							
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacredito =(DetaNotaCredito) this.detanotacreditoLogic.getDetaNotaCreditos().toArray()[this.jTableDatosDetaNotaCredito.convertRowIndexToModel(intSelectedRow)];
				this.detanotacredito.setIsDeleted(true);
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.detanotacredito =(DetaNotaCredito) this.detanotacreditos.toArray()[this.jTableDatosDetaNotaCredito.convertRowIndexToModel(intSelectedRow)];
				this.detanotacredito.setIsDeleted(true);
			}
			//ARCHITECTURE
			
			if(this.permiteMantenimiento(this.detanotacredito)) {
				this.eliminar();
				
				if(!this.isGuardarCambiosEnLote && !this.detanotacreditoSessionBean.getEsGuardarRelacionado()) {
					this.procesarBusqueda(sAccionBusqueda);
				}
				
				((DetaNotaCreditoModel) this.jTableDatosDetaNotaCredito.getModel()).fireTableRowsDeleted(intSelectedRow,intSelectedRow);
				
				this.isEsNuevoDetaNotaCredito=true;
				this.inicializarActualizarBindingTablaDetaNotaCredito(false);
				this.isEsNuevoDetaNotaCredito=false;									
					
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingBotonesDetaNotaCredito(false);
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualDetaNotaCredito(false);
				
				this.habilitarDeshabilitarControlesDetaNotaCredito(false);
				
				
				
				if(DetaNotaCreditoJInternalFrame.CON_DATOS_FRAME) {
					this.cerrarFrameDetalleDetaNotaCredito();
				}
			} else {
				JOptionPane.showMessageDialog(this,"ESTE REGISTRO NO PUEDE ACTUALIZARSE","EDITAR",JOptionPane.ERROR_MESSAGE);
			}	
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditoLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditoLogic.closeNewConnexionToDeep();
			}
		}		
	}
		
	public void jButtonCancelarDetaNotaCreditoActionPerformed(ActionEvent evt) throws Exception {                                         	   	       
	  	try {
			if(jTableDatosDetaNotaCredito.getRowCount()>=1) {
				jTableDatosDetaNotaCredito.removeRowSelectionInterval(0, jTableDatosDetaNotaCredito.getRowCount()-1);						
			}
						
			this.invalidValues=new InvalidValue[0];
			this.habilitarDeshabilitarControlesDetaNotaCredito(false);
			this.cancelar(true);			
			this.inicializarActualizarBindingTablaDetaNotaCredito(false);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesDetaNotaCredito(false) ;
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualDetaNotaCredito(false) ;
			
			this.isEsNuevoDetaNotaCredito=false;
			
			if(DetaNotaCreditoJInternalFrame.CON_DATOS_FRAME) {
				this.cerrarFrameDetalleDetaNotaCredito();
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonGuardarCambiosDetaNotaCreditoActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditoLogic.getNewConnexionToDeep("");
			}
			
			//this.estaModoGuardarCambios=true;
			
	    	this.guardarCambios();
			
			if(!this.isErrorGuardar) {
				this.procesarBusqueda(this.sAccionBusqueda);
				
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingDetaNotaCredito(false);
				
				//SI ES MANUAL
				if(DetaNotaCreditoJInternalFrame.ISBINDING_MANUAL) {				
					//this.inicializarActualizarBindingManualDetaNotaCredito();				
				}
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditoLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditoLogic.closeNewConnexionToDeep();
			}
			
			//this.estaModoGuardarCambios=false;
		}
	}
	
	public void jButtonNuevoGuardarCambiosDetaNotaCreditoActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			
			this.estaModoNuevo=true;
			this.estaModoNuevoGuardarCambios=true;
			
			//LO HACE NUEVOPREPARAR
			//this.iIdNuevoDetaNotaCredito--;			
			//DetaNotaCredito detanotacreditoAux= new DetaNotaCredito();			
			//detanotacreditoAux.setId(this.iIdNuevoDetaNotaCredito);
			
			if(this.jInternalFrameDetalleFormDetaNotaCredito==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			this.aumentarTamanioFilaNuevaTablaDetaNotaCredito();
			
			if(this.conTotales) {
				this.quitarFilaTotales();
			}
			
			this.nuevoPreparar(true);
			
			this.setVariablesFormularioToObjetoActualForeignKeysDetaNotaCredito(this.detanotacredito);
			
			this.detanotacredito.setsType("NUEVO_GUARDAR_CAMBIOS");
			
			//LO HACE NUEVOPREPARAR
			/*
			if(Constantes.ISUSAEJBLOGICLAYER) {				
				this.detanotacreditoLogic.getDetaNotaCreditos().add(this.detanotacreditoAux);
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				this.detanotacreditos.add(this.detanotacreditoAux);				
			}
			*/
			
			this.inicializarActualizarBindingTablaDetaNotaCredito(false);
			
			this.jTableDatosDetaNotaCredito.setRowSelectionInterval(this.getIndiceNuevoDetaNotaCredito(), this.getIndiceNuevoDetaNotaCredito());
			
			int iLastRow =  this.jTableDatosDetaNotaCredito.getRowCount () - 1;
			Rectangle rectangle = this.jTableDatosDetaNotaCredito.getCellRect(iLastRow, 0, true);
			
			this.jTableDatosDetaNotaCredito.scrollRectToVisible(rectangle);
			
			//FILA TOTALES
			if(this.conTotales) {
				this.crearFilaTotales();
				
				this.inicializarActualizarBindingTablaDetaNotaCredito(false);
			}

		} catch(Exception e) {									
			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoNuevo=false;
			this.estaModoNuevoGuardarCambios=false;
		}
	}		
	
	public void jButtonRecargarInformacionDetaNotaCreditoActionPerformed(ActionEvent evt) throws Exception {    		
		try {
			this.iNumeroPaginacionPagina=0;
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditoLogic.getNewConnexionToDeep("");
			}
			
			this.inicializarActualizarBindingDetaNotaCredito(false,false);
			
	    	this.recargarInformacion();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingDetaNotaCredito(false);
			
			//SI ES MANUAL
			if(DetaNotaCreditoJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualDetaNotaCredito();
			}
			
			//this.abrirFrameTreeDetaNotaCredito();
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditoLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditoLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditoLogic.closeNewConnexionToDeep();
			}
		}	
	}
	
	
	public void jButtonGenerarImportacionDetaNotaCreditoActionPerformed(ActionEvent evt) throws Exception {    				
		BufferedReader bufferedReader = null;
		String sXmlStringFile="";
		String sPath="";
		this.arrDatoGeneralMinimos= new  ArrayList<DatoGeneralMinimo>();
		DatoGeneralMinimo datoGeneralMinimo=new DatoGeneralMinimo();
		String sLine="";
		
		try {			
			if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE PROCESAR IMPORTACION DE Deta Nota CreditoS ?", "MANTENIMIENTO DE Deta Nota Credito", JOptionPane.OK_CANCEL_OPTION) == 0) {
				bufferedReader = new BufferedReader(new FileReader(this.jInternalFrameImportacionDetaNotaCredito.getFileImportacion().getAbsolutePath()));
								
				while ((sLine = bufferedReader.readLine()) != null) {
					datoGeneralMinimo=new DatoGeneralMinimo();
					datoGeneralMinimo.setsDescripcion(sLine);
					
					this.arrDatoGeneralMinimos.add(datoGeneralMinimo);
				}
				
				this.actualizarParametrosGeneralDetaNotaCredito();
						
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {						
					this.detanotacreditoReturnGeneral=detanotacreditoLogic.procesarImportacionDetaNotaCreditosWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this.arrDatoGeneralMinimos,this.detanotacreditoParameterGeneral);
						
				} else if(Constantes.ISUSAEJBREMOTE) {
						
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
						
				this.procesarDetaNotaCreditoReturnGeneral();
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedReader != null) {
				bufferedReader.close();
			}	
		}				
	}
	
	
	
	public void jButtonAbrirImportacionDetaNotaCreditoActionPerformed(ActionEvent evt) throws Exception {    				
		BufferedWriter bufferedWriter = null;
		String sXmlStringFile="";
		String sPath="";
		
		try {
			int iReturnArchivo = this.jInternalFrameImportacionDetaNotaCredito.getjFileChooserImportacion().showOpenDialog(this);
 
            if (iReturnArchivo == JFileChooser.APPROVE_OPTION) {
            	this.jInternalFrameImportacionDetaNotaCredito.setFileImportacion(this.jInternalFrameImportacionDetaNotaCredito.getjFileChooserImportacion().getSelectedFile());
            	
				this.jInternalFrameImportacionDetaNotaCredito.getjTextFieldPathArchivoImportacion().setText(this.jInternalFrameImportacionDetaNotaCredito.getFileImportacion().getName());
				
				//System.out.println("ARCHIVO ESCOGIDO: "+this.fileImportacionDetaNotaCredito.getName());
				
            } else {
                //System.out.println("CANCELAR SELECCION");
				this.jInternalFrameImportacionDetaNotaCredito.getjTextFieldPathArchivoImportacion().setText("SELECCION CANCELADA");
            }			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedWriter != null) {
				bufferedWriter.close();
			}	
		}		
	}
	
	
	public void jButtonGenerarReporteDinamicoDetaNotaCreditoActionPerformed(ActionEvent evt) throws Exception {    		
		BufferedWriter bufferedWriter = null;
		String sXmlStringFile="";
		String sPath="";
		
		try {	
		
		ArrayList<DetaNotaCredito> detanotacreditosSeleccionados=new ArrayList<DetaNotaCredito>();		

		detanotacreditosSeleccionados=this.getDetaNotaCreditosSeleccionados(true);
		
		
		this.sTipoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoDetaNotaCredito.getjComboBoxTiposReportesDinamico().getSelectedItem()).getsCodigo();
		
		this.sTipoArchivoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoDetaNotaCredito.getjComboBoxTiposArchivosReportesDinamico().getSelectedItem()).getsCodigo();			
		
		
		this.sTipoArchivoReporte=this.sTipoArchivoReporteDinamico;
		
		//this.sTipoReporteExtra="Base";
		
			InputStream reportFile=null;
			InputStream imageFile=null;
			
			imageFile=AuxiliarImagenes.class.getResourceAsStream("LogoReporte.jpg");			
				
		
		
			reportFile = AuxiliarReportes.class.getResourceAsStream("DetaNotaCreditoBaseDesign.jrxml");	
			
			sPath=this.parametroGeneralUsuario.getpath_exportar()+"DetaNotaCreditoBaseDesign.jrxml";
			
			sXmlStringFile=Funciones2.getStringFromInputStream(reportFile);
						
			bufferedWriter = new BufferedWriter(new FileWriter(sPath));
			
			
			sXmlStringFile=this.actualizarReporteDinamico(sXmlStringFile);
			
			
			bufferedWriter.write(sXmlStringFile);
			
			bufferedWriter.close();
			
			try{JasperCompileManager.compileReportToFile(sPath);}catch(Exception e){e.printStackTrace();}
			
			this.actualizarVariablesTipoReporte(false,true,false,sPath);
			
			/*
			this.esReporteDinamico=true;
			this.sPathReporteDinamico=sPath.replace(".jrxml",".jasper");
			this.sTipoReporteExtra="";
			*/
			
			this.generarReporteDetaNotaCreditos("Todos",detanotacreditosSeleccionados );

			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.detanotacreditoSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				//DEBE APARECER EL REPORTE DIRECTAMENTE
				//JOptionPane.showMessageDialog(this,"GENERADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Deta Nota Credito",JOptionPane.INFORMATION_MESSAGE);
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedWriter != null) {
				bufferedWriter.close();
			}	
		}
	}		
	
	
	public String actualizarReporteDinamico(String sXmlStringFile) {				
		Reporte reporte=new Reporte();
		Integer iAnchoMaximoVertical=535;//781,782
		Integer iAnchoMaximoHorizontal=782;
		Integer iAnchoSum=0;
		Integer iAnchoColumna=0;
		
		Integer iAnchoMargenes=60;
		String sWidthGrafico="535";
		
		for(int index:this.jInternalFrameReporteDinamicoDetaNotaCredito.getjListColumnasSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoDetaNotaCredito.getjListColumnasSelectReporte().getModel().getElementAt(index);
			
			switch(reporte.getsCodigo()) {
				
				case DetaNotaCreditoConstantesFunciones.LABEL_IDEMPRESA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Empresa_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Empresa_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Empresa_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Empresa_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetaNotaCreditoConstantesFunciones.LABEL_IDSUCURSAL:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Sucursal_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Sucursal_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Sucursal_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Sucursal_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetaNotaCreditoConstantesFunciones.LABEL_IDEJERCICIO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Ejercicio_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Ejercicio_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Ejercicio_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Ejercicio_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetaNotaCreditoConstantesFunciones.LABEL_IDPERIODO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Periodo_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Periodo_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Periodo_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Periodo_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetaNotaCreditoConstantesFunciones.LABEL_IDANIO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Anio_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Anio_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Anio_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Anio_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetaNotaCreditoConstantesFunciones.LABEL_IDMES:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Mes_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Mes_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Mes_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Mes_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetaNotaCreditoConstantesFunciones.LABEL_IDNOTACREDITO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_NotaCredito_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_NotaCredito_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_NotaCredito_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_NotaCredito_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetaNotaCreditoConstantesFunciones.LABEL_IDBODEGA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Bodega_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Bodega_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Bodega_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Bodega_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetaNotaCreditoConstantesFunciones.LABEL_IDPRODUCTO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Producto_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Producto_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Producto_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Producto_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetaNotaCreditoConstantesFunciones.LABEL_IDUNIDAD:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Unidad_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Unidad_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Unidad_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Unidad_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetaNotaCreditoConstantesFunciones.LABEL_IDTIPODETANOTACREDITO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_TipoDetaNotaCredito_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_TipoDetaNotaCredito_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_TipoDetaNotaCredito_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_TipoDetaNotaCredito_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetaNotaCreditoConstantesFunciones.LABEL_IDTIPODEVOLUCIONEMPRESA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_TipoDevolucionEmpresa_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_TipoDevolucionEmpresa_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_TipoDevolucionEmpresa_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_TipoDevolucionEmpresa_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetaNotaCreditoConstantesFunciones.LABEL_DESCRIPCION:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_scripcion_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_scripcion_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_scripcion_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_scripcion_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetaNotaCreditoConstantesFunciones.LABEL_CANTIDAD:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_ntidad_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_ntidad_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_ntidad_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_ntidad_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetaNotaCreditoConstantesFunciones.LABEL_PRECIO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_ecio_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_ecio_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_ecio_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_ecio_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetaNotaCreditoConstantesFunciones.LABEL_MONTO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_nto_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_nto_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_nto_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_nto_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetaNotaCreditoConstantesFunciones.LABEL_COSTO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_sto_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_sto_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_sto_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_sto_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetaNotaCreditoConstantesFunciones.LABEL_DESCUENTO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_scuento_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_scuento_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_scuento_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_scuento_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetaNotaCreditoConstantesFunciones.LABEL_DESCUENTO2:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_scuento2_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_scuento2_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_scuento2_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_scuento2_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetaNotaCreditoConstantesFunciones.LABEL_IMPUESTO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_puesto_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_puesto_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_puesto_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_puesto_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetaNotaCreditoConstantesFunciones.LABEL_PORCENIVA:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_rcenIva_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_rcenIva_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_rcenIva_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_rcenIva_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetaNotaCreditoConstantesFunciones.LABEL_PORCENDESCUEN:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_rcenDescuen_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_rcenDescuen_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_rcenDescuen_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_rcenDescuen_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetaNotaCreditoConstantesFunciones.LABEL_PORCENICE:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_rcenIce_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_rcenIce_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_rcenIce_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_rcenIce_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetaNotaCreditoConstantesFunciones.LABEL_SUBTOTAL:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_bTotal_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_bTotal_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_bTotal_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_bTotal_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetaNotaCreditoConstantesFunciones.LABEL_TOTAL:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_tal_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_tal_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_tal_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_tal_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetaNotaCreditoConstantesFunciones.LABEL_IDCENTROCOSTO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_CentroCosto_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_CentroCosto_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_CentroCosto_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_CentroCosto_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetaNotaCreditoConstantesFunciones.LABEL_IDEMPAQUE:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Empaque_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Empaque_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Empaque_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Empaque_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetaNotaCreditoConstantesFunciones.LABEL_INCLUYEIMPUESTO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_cluyeImpuesto_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_cluyeImpuesto_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_cluyeImpuesto_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_cluyeImpuesto_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetaNotaCreditoConstantesFunciones.LABEL_FECHAEMISION:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_chaEmision_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_chaEmision_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_chaEmision_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_chaEmision_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetaNotaCreditoConstantesFunciones.LABEL_CODIGOLOTE:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_digoLote_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_digoLote_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_digoLote_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_digoLote_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetaNotaCreditoConstantesFunciones.LABEL_NUMEROCAJA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_meroCaja_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_meroCaja_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_meroCaja_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_meroCaja_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;
					
				default :
					break;
			}
		}
		
		iAnchoSum+=iAnchoMargenes;
		
		if(iAnchoSum>iAnchoMaximoVertical) {
			sXmlStringFile=sXmlStringFile.replace("595", "842");
			//sXmlStringFile=sXmlStringFile.replace("842", "595");
			sXmlStringFile=sXmlStringFile.replace("535", "782");
			sXmlStringFile=sXmlStringFile.replace("Portrait", "Landscape");			
			sWidthGrafico="782";
		
		} else {
			sXmlStringFile=sXmlStringFile.replace("842", "595");
			//sXmlStringFile=sXmlStringFile.replace("595", "842");
			sXmlStringFile=sXmlStringFile.replace("782", "535");
			sXmlStringFile=sXmlStringFile.replace("Landscape", "Portrait");
			sWidthGrafico="535";
		}
		
		if(this.jInternalFrameReporteDinamicoDetaNotaCredito.getjCheckBoxConGraficoDinamico().isSelected()) {
			sXmlStringFile=this.actualizarGraficoReporteDinamico(sXmlStringFile,sWidthGrafico);
		} else {
			sXmlStringFile=sXmlStringFile.replace("colancho_summary_colancho", "30");
		}
		
		return sXmlStringFile;
	}
	
	
	
	public String actualizarGraficoReporteDinamico(String sXmlStringFile,String sWidthGrafico) {		
		String strGrafico="";		
		String sTipo="NORMAL";
		String strCategorySeries="";
		String sNombreCampoCategoria="";
		String sNombreCampoCategoriaValor="";
		Reporte reporte=new Reporte();
		Reporte reporteCategoriaValor=new Reporte();
		Reporte reporteTipoGraficoReporte=new Reporte();
		Boolean existe=false;
		
		sXmlStringFile=sXmlStringFile.replace("colancho_summary_colancho", "280");
		
		//CATEGORIA GRAFICO				
		reporte=((Reporte)this.jInternalFrameReporteDinamicoDetaNotaCredito.getjComboBoxColumnaCategoriaGrafico().getSelectedItem());
				
		//TIPO GRAFICO REPORTE
		reporteTipoGraficoReporte=((Reporte)this.jInternalFrameReporteDinamicoDetaNotaCredito.getjComboBoxTiposGraficosReportesDinamico().getSelectedItem());
		
		String sTipoGraficoReporte=reporteTipoGraficoReporte.getsCodigo();
		
		switch(reporte.getsCodigo()) {
			
				case DetaNotaCreditoConstantesFunciones.LABEL_IDEMPRESA:
					sNombreCampoCategoria="id_empresa";
					break;

				case DetaNotaCreditoConstantesFunciones.LABEL_IDSUCURSAL:
					sNombreCampoCategoria="id_sucursal";
					break;

				case DetaNotaCreditoConstantesFunciones.LABEL_IDEJERCICIO:
					sNombreCampoCategoria="id_ejercicio";
					break;

				case DetaNotaCreditoConstantesFunciones.LABEL_IDPERIODO:
					sNombreCampoCategoria="id_periodo";
					break;

				case DetaNotaCreditoConstantesFunciones.LABEL_IDANIO:
					sNombreCampoCategoria="id_anio";
					break;

				case DetaNotaCreditoConstantesFunciones.LABEL_IDMES:
					sNombreCampoCategoria="id_mes";
					break;

				case DetaNotaCreditoConstantesFunciones.LABEL_IDNOTACREDITO:
					sNombreCampoCategoria="id_nota_credito";
					break;

				case DetaNotaCreditoConstantesFunciones.LABEL_IDBODEGA:
					sNombreCampoCategoria="id_bodega";
					break;

				case DetaNotaCreditoConstantesFunciones.LABEL_IDPRODUCTO:
					sNombreCampoCategoria="id_producto";
					break;

				case DetaNotaCreditoConstantesFunciones.LABEL_IDUNIDAD:
					sNombreCampoCategoria="id_unidad";
					break;

				case DetaNotaCreditoConstantesFunciones.LABEL_IDTIPODETANOTACREDITO:
					sNombreCampoCategoria="id_tipo_deta_nota_credito";
					break;

				case DetaNotaCreditoConstantesFunciones.LABEL_IDTIPODEVOLUCIONEMPRESA:
					sNombreCampoCategoria="id_tipo_devolucion_empresa";
					break;

				case DetaNotaCreditoConstantesFunciones.LABEL_DESCRIPCION:
					sNombreCampoCategoria="descripcion";
					break;

				case DetaNotaCreditoConstantesFunciones.LABEL_CANTIDAD:
					sNombreCampoCategoria="cantidad";
					break;

				case DetaNotaCreditoConstantesFunciones.LABEL_PRECIO:
					sNombreCampoCategoria="precio";
					break;

				case DetaNotaCreditoConstantesFunciones.LABEL_MONTO:
					sNombreCampoCategoria="monto";
					break;

				case DetaNotaCreditoConstantesFunciones.LABEL_COSTO:
					sNombreCampoCategoria="costo";
					break;

				case DetaNotaCreditoConstantesFunciones.LABEL_DESCUENTO:
					sNombreCampoCategoria="descuento";
					break;

				case DetaNotaCreditoConstantesFunciones.LABEL_DESCUENTO2:
					sNombreCampoCategoria="descuento2";
					break;

				case DetaNotaCreditoConstantesFunciones.LABEL_IMPUESTO:
					sNombreCampoCategoria="impuesto";
					break;

				case DetaNotaCreditoConstantesFunciones.LABEL_PORCENIVA:
					sNombreCampoCategoria="porcen_iva";
					break;

				case DetaNotaCreditoConstantesFunciones.LABEL_PORCENDESCUEN:
					sNombreCampoCategoria="porcen_descuen";
					break;

				case DetaNotaCreditoConstantesFunciones.LABEL_PORCENICE:
					sNombreCampoCategoria="porcen_ice";
					break;

				case DetaNotaCreditoConstantesFunciones.LABEL_SUBTOTAL:
					sNombreCampoCategoria="sub_total";
					break;

				case DetaNotaCreditoConstantesFunciones.LABEL_TOTAL:
					sNombreCampoCategoria="total";
					break;

				case DetaNotaCreditoConstantesFunciones.LABEL_IDCENTROCOSTO:
					sNombreCampoCategoria="id_centro_costo";
					break;

				case DetaNotaCreditoConstantesFunciones.LABEL_IDEMPAQUE:
					sNombreCampoCategoria="id_empaque";
					break;

				case DetaNotaCreditoConstantesFunciones.LABEL_INCLUYEIMPUESTO:
					sNombreCampoCategoria="incluye_impuesto";
					break;

				case DetaNotaCreditoConstantesFunciones.LABEL_FECHAEMISION:
					sNombreCampoCategoria="fecha_emision";
					break;

				case DetaNotaCreditoConstantesFunciones.LABEL_CODIGOLOTE:
					sNombreCampoCategoria="codigo_lote";
					break;

				case DetaNotaCreditoConstantesFunciones.LABEL_NUMEROCAJA:
					sNombreCampoCategoria="numero_caja";
					break;
					
			default :
				break;
		}		
		//CATEGORIA GRAFICO
		
		//CATEGORIA VALOR				
		reporteCategoriaValor=((Reporte)this.jInternalFrameReporteDinamicoDetaNotaCredito.getjComboBoxColumnaCategoriaValor().getSelectedItem());
		
		switch(reporteCategoriaValor.getsCodigo()) {
			
				case DetaNotaCreditoConstantesFunciones.LABEL_IDEMPRESA:
					sNombreCampoCategoriaValor="id_empresa";
					break;

				case DetaNotaCreditoConstantesFunciones.LABEL_IDSUCURSAL:
					sNombreCampoCategoriaValor="id_sucursal";
					break;

				case DetaNotaCreditoConstantesFunciones.LABEL_IDEJERCICIO:
					sNombreCampoCategoriaValor="id_ejercicio";
					break;

				case DetaNotaCreditoConstantesFunciones.LABEL_IDPERIODO:
					sNombreCampoCategoriaValor="id_periodo";
					break;

				case DetaNotaCreditoConstantesFunciones.LABEL_IDANIO:
					sNombreCampoCategoriaValor="id_anio";
					break;

				case DetaNotaCreditoConstantesFunciones.LABEL_IDMES:
					sNombreCampoCategoriaValor="id_mes";
					break;

				case DetaNotaCreditoConstantesFunciones.LABEL_IDNOTACREDITO:
					sNombreCampoCategoriaValor="id_nota_credito";
					break;

				case DetaNotaCreditoConstantesFunciones.LABEL_IDBODEGA:
					sNombreCampoCategoriaValor="id_bodega";
					break;

				case DetaNotaCreditoConstantesFunciones.LABEL_IDPRODUCTO:
					sNombreCampoCategoriaValor="id_producto";
					break;

				case DetaNotaCreditoConstantesFunciones.LABEL_IDUNIDAD:
					sNombreCampoCategoriaValor="id_unidad";
					break;

				case DetaNotaCreditoConstantesFunciones.LABEL_IDTIPODETANOTACREDITO:
					sNombreCampoCategoriaValor="id_tipo_deta_nota_credito";
					break;

				case DetaNotaCreditoConstantesFunciones.LABEL_IDTIPODEVOLUCIONEMPRESA:
					sNombreCampoCategoriaValor="id_tipo_devolucion_empresa";
					break;

				case DetaNotaCreditoConstantesFunciones.LABEL_DESCRIPCION:
					sNombreCampoCategoriaValor="descripcion";
					break;

				case DetaNotaCreditoConstantesFunciones.LABEL_CANTIDAD:
					sNombreCampoCategoriaValor="cantidad";
					break;

				case DetaNotaCreditoConstantesFunciones.LABEL_PRECIO:
					sNombreCampoCategoriaValor="precio";
					break;

				case DetaNotaCreditoConstantesFunciones.LABEL_MONTO:
					sNombreCampoCategoriaValor="monto";
					break;

				case DetaNotaCreditoConstantesFunciones.LABEL_COSTO:
					sNombreCampoCategoriaValor="costo";
					break;

				case DetaNotaCreditoConstantesFunciones.LABEL_DESCUENTO:
					sNombreCampoCategoriaValor="descuento";
					break;

				case DetaNotaCreditoConstantesFunciones.LABEL_DESCUENTO2:
					sNombreCampoCategoriaValor="descuento2";
					break;

				case DetaNotaCreditoConstantesFunciones.LABEL_IMPUESTO:
					sNombreCampoCategoriaValor="impuesto";
					break;

				case DetaNotaCreditoConstantesFunciones.LABEL_PORCENIVA:
					sNombreCampoCategoriaValor="porcen_iva";
					break;

				case DetaNotaCreditoConstantesFunciones.LABEL_PORCENDESCUEN:
					sNombreCampoCategoriaValor="porcen_descuen";
					break;

				case DetaNotaCreditoConstantesFunciones.LABEL_PORCENICE:
					sNombreCampoCategoriaValor="porcen_ice";
					break;

				case DetaNotaCreditoConstantesFunciones.LABEL_SUBTOTAL:
					sNombreCampoCategoriaValor="sub_total";
					break;

				case DetaNotaCreditoConstantesFunciones.LABEL_TOTAL:
					sNombreCampoCategoriaValor="total";
					break;

				case DetaNotaCreditoConstantesFunciones.LABEL_IDCENTROCOSTO:
					sNombreCampoCategoriaValor="id_centro_costo";
					break;

				case DetaNotaCreditoConstantesFunciones.LABEL_IDEMPAQUE:
					sNombreCampoCategoriaValor="id_empaque";
					break;

				case DetaNotaCreditoConstantesFunciones.LABEL_INCLUYEIMPUESTO:
					sNombreCampoCategoriaValor="incluye_impuesto";
					break;

				case DetaNotaCreditoConstantesFunciones.LABEL_FECHAEMISION:
					sNombreCampoCategoriaValor="fecha_emision";
					break;

				case DetaNotaCreditoConstantesFunciones.LABEL_CODIGOLOTE:
					sNombreCampoCategoriaValor="codigo_lote";
					break;

				case DetaNotaCreditoConstantesFunciones.LABEL_NUMEROCAJA:
					sNombreCampoCategoriaValor="numero_caja";
					break;
					
			default :
				break;
		}	
		//CATEGORIA VALOR
		
		//VALORES GRAFICO
		for(int index:this.jInternalFrameReporteDinamicoDetaNotaCredito.getjListColumnasValoresGrafico().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoDetaNotaCredito.getjListColumnasValoresGrafico().getModel().getElementAt(index);
			
			switch(reporte.getsCodigo()) {
				
				case DetaNotaCreditoConstantesFunciones.LABEL_IDEMPRESA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Empresa",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_empresa");
					break;

				case DetaNotaCreditoConstantesFunciones.LABEL_IDSUCURSAL:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Sucursal",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_sucursal");
					break;

				case DetaNotaCreditoConstantesFunciones.LABEL_IDEJERCICIO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Ejercicio",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_ejercicio");
					break;

				case DetaNotaCreditoConstantesFunciones.LABEL_IDPERIODO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Periodo",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_periodo");
					break;

				case DetaNotaCreditoConstantesFunciones.LABEL_IDANIO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Anio",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_anio");
					break;

				case DetaNotaCreditoConstantesFunciones.LABEL_IDMES:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Mes",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_mes");
					break;

				case DetaNotaCreditoConstantesFunciones.LABEL_IDNOTACREDITO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Nota Credito",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_nota_credito");
					break;

				case DetaNotaCreditoConstantesFunciones.LABEL_IDBODEGA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Bodega",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_bodega");
					break;

				case DetaNotaCreditoConstantesFunciones.LABEL_IDPRODUCTO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Producto",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_producto");
					break;

				case DetaNotaCreditoConstantesFunciones.LABEL_IDUNIDAD:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Unidad",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_unidad");
					break;

				case DetaNotaCreditoConstantesFunciones.LABEL_IDTIPODETANOTACREDITO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Tipo",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_tipo_deta_nota_credito");
					break;

				case DetaNotaCreditoConstantesFunciones.LABEL_IDTIPODEVOLUCIONEMPRESA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Tipo Devolucion",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_tipo_devolucion_empresa");
					break;

				case DetaNotaCreditoConstantesFunciones.LABEL_DESCRIPCION:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Descripcion",sNombreCampoCategoria,sNombreCampoCategoriaValor,"descripcion");
					break;

				case DetaNotaCreditoConstantesFunciones.LABEL_CANTIDAD:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Cantidad",sNombreCampoCategoria,sNombreCampoCategoriaValor,"cantidad");
					break;

				case DetaNotaCreditoConstantesFunciones.LABEL_PRECIO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Precio",sNombreCampoCategoria,sNombreCampoCategoriaValor,"precio");
					break;

				case DetaNotaCreditoConstantesFunciones.LABEL_MONTO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Monto",sNombreCampoCategoria,sNombreCampoCategoriaValor,"monto");
					break;

				case DetaNotaCreditoConstantesFunciones.LABEL_COSTO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Costo",sNombreCampoCategoria,sNombreCampoCategoriaValor,"costo");
					break;

				case DetaNotaCreditoConstantesFunciones.LABEL_DESCUENTO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Descuento",sNombreCampoCategoria,sNombreCampoCategoriaValor,"descuento");
					break;

				case DetaNotaCreditoConstantesFunciones.LABEL_DESCUENTO2:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Descuento 2",sNombreCampoCategoria,sNombreCampoCategoriaValor,"descuento2");
					break;

				case DetaNotaCreditoConstantesFunciones.LABEL_IMPUESTO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Impuesto",sNombreCampoCategoria,sNombreCampoCategoriaValor,"impuesto");
					break;

				case DetaNotaCreditoConstantesFunciones.LABEL_PORCENIVA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"% Iva",sNombreCampoCategoria,sNombreCampoCategoriaValor,"porcen_iva");
					break;

				case DetaNotaCreditoConstantesFunciones.LABEL_PORCENDESCUEN:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"% Descuen",sNombreCampoCategoria,sNombreCampoCategoriaValor,"porcen_descuen");
					break;

				case DetaNotaCreditoConstantesFunciones.LABEL_PORCENICE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"% Ice",sNombreCampoCategoria,sNombreCampoCategoriaValor,"porcen_ice");
					break;

				case DetaNotaCreditoConstantesFunciones.LABEL_SUBTOTAL:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Sub Total",sNombreCampoCategoria,sNombreCampoCategoriaValor,"sub_total");
					break;

				case DetaNotaCreditoConstantesFunciones.LABEL_TOTAL:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Total",sNombreCampoCategoria,sNombreCampoCategoriaValor,"total");
					break;

				case DetaNotaCreditoConstantesFunciones.LABEL_IDCENTROCOSTO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Centro Costo",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_centro_costo");
					break;

				case DetaNotaCreditoConstantesFunciones.LABEL_IDEMPAQUE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Empaque",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_empaque");
					break;

				case DetaNotaCreditoConstantesFunciones.LABEL_INCLUYEIMPUESTO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Incluye Impuesto",sNombreCampoCategoria,sNombreCampoCategoriaValor,"incluye_impuesto");
					break;

				case DetaNotaCreditoConstantesFunciones.LABEL_FECHAEMISION:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Fecha Emision",sNombreCampoCategoria,sNombreCampoCategoriaValor,"fecha_emision");
					break;

				case DetaNotaCreditoConstantesFunciones.LABEL_CODIGOLOTE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Codigo Lote",sNombreCampoCategoria,sNombreCampoCategoriaValor,"codigo_lote");
					break;

				case DetaNotaCreditoConstantesFunciones.LABEL_NUMEROCAJA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Numero Caja",sNombreCampoCategoria,sNombreCampoCategoriaValor,"numero_caja");
					break;
					
				default :
					break;
			}
		}
		//VALORES GRAFICO
		//if(sTipoGraficoReporte.equals("BARRAS") || sTipoGraficoReporte.equals("BARRAS_3D") || sTipoGraficoReporte.equals("BARRAS_XY") ||
		//   sTipoGraficoReporte.equals("PASTEL") || sTipoGraficoReporte.equals("PASTEL_3D") || sTipoGraficoReporte.equals("APILADO")) {
			
			existe=true;
			strGrafico=FuncionesReporte.getStringGraficoReporte(sTipoGraficoReporte,sWidthGrafico,strCategorySeries);			
		//}
		
		if(existe) {
			sXmlStringFile=sXmlStringFile.replace("<!--GRAFICO-->", strGrafico);
		}												
		
		return sXmlStringFile;
	}
	
	
	//@SuppressWarnings("deprecation")
	
	public void jButtonGenerarExcelReporteDinamicoDetaNotaCreditoActionPerformed(ActionEvent evt) throws Exception {		
		ArrayList<DetaNotaCredito> detanotacreditosSeleccionados=new ArrayList<DetaNotaCredito>();		
		
		detanotacreditosSeleccionados=this.getDetaNotaCreditosSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"detanotacredito";//.xls";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		Boolean existeFilas=false;
		
		Workbook workbook = null;
		FileOutputStream fileOutputStream=null;
		Reporte reporte=new Reporte();
		
		try {
			
			if(sTipoArchivoReporte=="EXCEL2") {
				workbook = new HSSFWorkbook();
				sPath+=".xls";
			
			} else if(sTipoArchivoReporte=="EXCEL2_2") {
				workbook = new XSSFWorkbook();
				sPath+=".xlsx";			
			}
		
			Sheet sheet = workbook.createSheet("DetaNotaCreditos");
						
		    			
			Integer iRow=0;
			Integer iCell=0;
			
			Row row = sheet.createRow(iRow);
			Cell cell = row.createCell(iCell);
			//cell.setCellValue("Blahblah");
			
			for(int index:this.jInternalFrameReporteDinamicoDetaNotaCredito.getjListColumnasSelectReporte().getSelectedIndices()) {
				reporte=(Reporte)this.jInternalFrameReporteDinamicoDetaNotaCredito.getjListColumnasSelectReporte().getModel().getElementAt(index);
				
				switch(reporte.getsCodigo()) {
					
				case DetaNotaCreditoConstantesFunciones.LABEL_IDEMPRESA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetaNotaCreditoConstantesFunciones.LABEL_IDEMPRESA);
					iRow++;

					for(DetaNotaCredito detanotacredito:detanotacreditosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detanotacredito.getempresa_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetaNotaCreditoConstantesFunciones.LABEL_IDSUCURSAL:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetaNotaCreditoConstantesFunciones.LABEL_IDSUCURSAL);
					iRow++;

					for(DetaNotaCredito detanotacredito:detanotacreditosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detanotacredito.getsucursal_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetaNotaCreditoConstantesFunciones.LABEL_IDEJERCICIO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetaNotaCreditoConstantesFunciones.LABEL_IDEJERCICIO);
					iRow++;

					for(DetaNotaCredito detanotacredito:detanotacreditosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detanotacredito.getejercicio_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetaNotaCreditoConstantesFunciones.LABEL_IDPERIODO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetaNotaCreditoConstantesFunciones.LABEL_IDPERIODO);
					iRow++;

					for(DetaNotaCredito detanotacredito:detanotacreditosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detanotacredito.getperiodo_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetaNotaCreditoConstantesFunciones.LABEL_IDANIO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetaNotaCreditoConstantesFunciones.LABEL_IDANIO);
					iRow++;

					for(DetaNotaCredito detanotacredito:detanotacreditosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detanotacredito.getanio_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetaNotaCreditoConstantesFunciones.LABEL_IDMES:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetaNotaCreditoConstantesFunciones.LABEL_IDMES);
					iRow++;

					for(DetaNotaCredito detanotacredito:detanotacreditosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detanotacredito.getmes_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetaNotaCreditoConstantesFunciones.LABEL_IDNOTACREDITO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetaNotaCreditoConstantesFunciones.LABEL_IDNOTACREDITO);
					iRow++;

					for(DetaNotaCredito detanotacredito:detanotacreditosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detanotacredito.getnotacredito_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetaNotaCreditoConstantesFunciones.LABEL_IDBODEGA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetaNotaCreditoConstantesFunciones.LABEL_IDBODEGA);
					iRow++;

					for(DetaNotaCredito detanotacredito:detanotacreditosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detanotacredito.getbodega_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetaNotaCreditoConstantesFunciones.LABEL_IDPRODUCTO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetaNotaCreditoConstantesFunciones.LABEL_IDPRODUCTO);
					iRow++;

					for(DetaNotaCredito detanotacredito:detanotacreditosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detanotacredito.getproducto_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetaNotaCreditoConstantesFunciones.LABEL_IDUNIDAD:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetaNotaCreditoConstantesFunciones.LABEL_IDUNIDAD);
					iRow++;

					for(DetaNotaCredito detanotacredito:detanotacreditosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detanotacredito.getunidad_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetaNotaCreditoConstantesFunciones.LABEL_IDTIPODETANOTACREDITO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetaNotaCreditoConstantesFunciones.LABEL_IDTIPODETANOTACREDITO);
					iRow++;

					for(DetaNotaCredito detanotacredito:detanotacreditosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detanotacredito.gettipodetanotacredito_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetaNotaCreditoConstantesFunciones.LABEL_IDTIPODEVOLUCIONEMPRESA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetaNotaCreditoConstantesFunciones.LABEL_IDTIPODEVOLUCIONEMPRESA);
					iRow++;

					for(DetaNotaCredito detanotacredito:detanotacreditosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detanotacredito.gettipodevolucionempresa_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetaNotaCreditoConstantesFunciones.LABEL_DESCRIPCION:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetaNotaCreditoConstantesFunciones.LABEL_DESCRIPCION);
					iRow++;

					for(DetaNotaCredito detanotacredito:detanotacreditosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detanotacredito.getdescripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetaNotaCreditoConstantesFunciones.LABEL_CANTIDAD:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetaNotaCreditoConstantesFunciones.LABEL_CANTIDAD);
					iRow++;

					for(DetaNotaCredito detanotacredito:detanotacreditosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detanotacredito.getcantidad());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetaNotaCreditoConstantesFunciones.LABEL_PRECIO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetaNotaCreditoConstantesFunciones.LABEL_PRECIO);
					iRow++;

					for(DetaNotaCredito detanotacredito:detanotacreditosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detanotacredito.getprecio());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetaNotaCreditoConstantesFunciones.LABEL_MONTO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetaNotaCreditoConstantesFunciones.LABEL_MONTO);
					iRow++;

					for(DetaNotaCredito detanotacredito:detanotacreditosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detanotacredito.getmonto());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetaNotaCreditoConstantesFunciones.LABEL_COSTO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetaNotaCreditoConstantesFunciones.LABEL_COSTO);
					iRow++;

					for(DetaNotaCredito detanotacredito:detanotacreditosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detanotacredito.getcosto());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetaNotaCreditoConstantesFunciones.LABEL_DESCUENTO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetaNotaCreditoConstantesFunciones.LABEL_DESCUENTO);
					iRow++;

					for(DetaNotaCredito detanotacredito:detanotacreditosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detanotacredito.getdescuento());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetaNotaCreditoConstantesFunciones.LABEL_DESCUENTO2:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetaNotaCreditoConstantesFunciones.LABEL_DESCUENTO2);
					iRow++;

					for(DetaNotaCredito detanotacredito:detanotacreditosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detanotacredito.getdescuento2());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetaNotaCreditoConstantesFunciones.LABEL_IMPUESTO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetaNotaCreditoConstantesFunciones.LABEL_IMPUESTO);
					iRow++;

					for(DetaNotaCredito detanotacredito:detanotacreditosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detanotacredito.getimpuesto());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetaNotaCreditoConstantesFunciones.LABEL_PORCENIVA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetaNotaCreditoConstantesFunciones.LABEL_PORCENIVA);
					iRow++;

					for(DetaNotaCredito detanotacredito:detanotacreditosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detanotacredito.getporcen_iva());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetaNotaCreditoConstantesFunciones.LABEL_PORCENDESCUEN:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetaNotaCreditoConstantesFunciones.LABEL_PORCENDESCUEN);
					iRow++;

					for(DetaNotaCredito detanotacredito:detanotacreditosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detanotacredito.getporcen_descuen());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetaNotaCreditoConstantesFunciones.LABEL_PORCENICE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetaNotaCreditoConstantesFunciones.LABEL_PORCENICE);
					iRow++;

					for(DetaNotaCredito detanotacredito:detanotacreditosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detanotacredito.getporcen_ice());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetaNotaCreditoConstantesFunciones.LABEL_SUBTOTAL:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetaNotaCreditoConstantesFunciones.LABEL_SUBTOTAL);
					iRow++;

					for(DetaNotaCredito detanotacredito:detanotacreditosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detanotacredito.getsub_total());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetaNotaCreditoConstantesFunciones.LABEL_TOTAL:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetaNotaCreditoConstantesFunciones.LABEL_TOTAL);
					iRow++;

					for(DetaNotaCredito detanotacredito:detanotacreditosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detanotacredito.gettotal());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetaNotaCreditoConstantesFunciones.LABEL_IDCENTROCOSTO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetaNotaCreditoConstantesFunciones.LABEL_IDCENTROCOSTO);
					iRow++;

					for(DetaNotaCredito detanotacredito:detanotacreditosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detanotacredito.getcentrocosto_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetaNotaCreditoConstantesFunciones.LABEL_IDEMPAQUE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetaNotaCreditoConstantesFunciones.LABEL_IDEMPAQUE);
					iRow++;

					for(DetaNotaCredito detanotacredito:detanotacreditosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detanotacredito.getempaque_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetaNotaCreditoConstantesFunciones.LABEL_INCLUYEIMPUESTO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetaNotaCreditoConstantesFunciones.LABEL_INCLUYEIMPUESTO);
					iRow++;

					for(DetaNotaCredito detanotacredito:detanotacreditosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detanotacredito.getincluye_impuesto());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetaNotaCreditoConstantesFunciones.LABEL_FECHAEMISION:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetaNotaCreditoConstantesFunciones.LABEL_FECHAEMISION);
					iRow++;

					for(DetaNotaCredito detanotacredito:detanotacreditosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detanotacredito.getfecha_emision());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetaNotaCreditoConstantesFunciones.LABEL_CODIGOLOTE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetaNotaCreditoConstantesFunciones.LABEL_CODIGOLOTE);
					iRow++;

					for(DetaNotaCredito detanotacredito:detanotacreditosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detanotacredito.getcodigo_lote());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetaNotaCreditoConstantesFunciones.LABEL_NUMEROCAJA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetaNotaCreditoConstantesFunciones.LABEL_NUMEROCAJA);
					iRow++;

					for(DetaNotaCredito detanotacredito:detanotacreditosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detanotacredito.getnumero_caja());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;
					
					default :
						break;
				}
			}
			
			
			//if(conCabecera) {
			//	this.getFilaCabeceraExportarExcelDetaNotaCredito(row);				
			//	iRow++;
			//}				
			
			//for(DetaNotaCredito detanotacreditoAux:detanotacreditosSeleccionados) {
			//	row = sheet.createRow(iRow);
				
			//	this.getFilaDatosExportarExcelDetaNotaCredito(detanotacreditoAux,row);
				
			//	iRow++;
			//}
			
			
			
			fileOutputStream = new FileOutputStream(new File(sPath));
		    
			workbook.write(fileOutputStream);
			
			//fileOutputStream.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.detanotacreditoSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Deta Nota Credito",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			
       		if (fileOutputStream != null) {
				fileOutputStream.close();
			}			
		}				
	}	
	
	
	
	
	public void buscarPorId(Long idActual) throws Exception {    		
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditoLogic.getNewConnexionToDeep("");
			}
			
			this.idActual=idActual;
			this.iNumeroPaginacionPagina=0;
			
			this.procesarBusqueda("PorId");
				    	
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingDetaNotaCredito(false);
			
			//SI ES MANUAL
			if(DetaNotaCreditoJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualDetaNotaCredito();
			}	
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditoLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditoLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger);
			
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditoLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonAnterioresDetaNotaCreditoActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			//this.iNumeroPaginacion-=this.iNumeroPaginacion;
			/*
			if(this.iNumeroPaginacion<0) {
				this.iNumeroPaginacion=0;
			}
			*/
			//this.iNumeroPaginacionPagina=10;			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditoLogic.getNewConnexionToDeep("");
			}
			
			this.anteriores();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingDetaNotaCredito(false);
			
			//SI ES MANUAL
			if(DetaNotaCreditoJInternalFrame.ISBINDING_MANUAL) {
	    		//this.inicializarActualizarBindingManualDetaNotaCredito();
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditoLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditoLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditoLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonSiguientesDetaNotaCreditoActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			//this.iNumeroPaginacion+=this.iNumeroPaginacion;
			//this.iNumeroPaginacionPagina=10;			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditoLogic.getNewConnexionToDeep("");
			}
			
			this.siguientes();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingDetaNotaCredito(false);
			
			//SI ES MANUAL
			if(DetaNotaCreditoJInternalFrame.ISBINDING_MANUAL) {
	    		//this.inicializarActualizarBindingManualDetaNotaCredito();
			}		
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditoLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditoLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditoLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void aumentarTamanioFilaNuevaTablaDetaNotaCredito() throws Exception {		
		Dimension dimensionMinimum=this.jTableDatosDetaNotaCredito.getMinimumSize();
		Dimension dimensionMaximum=this.jTableDatosDetaNotaCredito.getMaximumSize();
		Dimension dimensionPreferred=this.jTableDatosDetaNotaCredito.getPreferredSize();
	
		double iHeightConFilaNueva=dimensionPreferred.getHeight();
		
		iHeightConFilaNueva+=this.jTableDatosDetaNotaCredito.getRowHeight();
		
		dimensionMinimum.setSize(dimensionMinimum.getWidth(),iHeightConFilaNueva);
		dimensionMaximum.setSize(dimensionMaximum.getWidth(),iHeightConFilaNueva);
		dimensionPreferred.setSize(dimensionPreferred.getWidth(),iHeightConFilaNueva);
		
		this.jTableDatosDetaNotaCredito.setMinimumSize(dimensionMinimum);
		this.jTableDatosDetaNotaCredito.setMaximumSize(dimensionMaximum);
		this.jTableDatosDetaNotaCredito.setPreferredSize(dimensionPreferred);	
	}
	
	public void inicializarActualizarBindingDetaNotaCredito(Boolean esInicializar) throws Exception {
		this.inicializarActualizarBindingDetaNotaCredito(esInicializar,true);
	}
	
	public void inicializarActualizarBindingDetaNotaCredito(Boolean esInicializar,Boolean conTabla) throws Exception {		
		if(conTabla) {
			this.inicializarActualizarBindingTablaDetaNotaCredito(esInicializar);
		}
		
		this.inicializarActualizarBindingBotonesDetaNotaCredito(esInicializar);
		
		//FUNCIONALIDAD_RELACIONADO
		if(!this.detanotacreditoSessionBean.getEsGuardarRelacionado()) {
			try{this.inicializarActualizarBindingBusquedasDetaNotaCredito(esInicializar);}catch(Exception e){e.printStackTrace();}
			
			//this.inicializarActualizarBindingtiposArchivosReportesAccionesDetaNotaCredito(esInicializar) ;
			
			this.inicializarActualizarBindingParametrosReportesDetaNotaCredito(esInicializar) ;
		}
		
		if(esInicializar) {
			if( !DetaNotaCreditoJInternalFrame.ISBINDING_MANUAL_TABLA ||
			   	!DetaNotaCreditoJInternalFrame.ISBINDING_MANUAL) {
			   	
			}
		}
	}
	
	public void inicializarActualizarBindingManualDetaNotaCredito() throws Exception {		
		//NO SE NECESITA HACER BINDING OTRA VEZ
		//this.inicializarActualizarBindingTablaDetaNotaCredito();
		
		this.inicializarActualizarBindingBotonesManualDetaNotaCredito(true);
		
		//FUNCIONALIDAD_RELACIONADO
		if(!this.detanotacreditoSessionBean.getEsGuardarRelacionado()) {
			
			this.inicializarActualizarBindingBusquedasManualDetaNotaCredito();			
			
			
			//this.inicializarActualizarBindingtiposArchivosReportesAccionesDetaNotaCredito() ;
			
			this.inicializarActualizarBindingParametrosReportesPostAccionesManualDetaNotaCredito(false) ;			
			
		}
	}
	
	public void inicializarActualizarBindingParametrosReportesPostAccionesManualDetaNotaCredito(Boolean esSetControles) throws Exception {
		try	{					
			if(!esSetControles) {
				this.isSeleccionarTodos=this.jCheckBoxSeleccionarTodosDetaNotaCredito.isSelected();
				this.isSeleccionados=this.jCheckBoxSeleccionadosDetaNotaCredito.isSelected();
				
				
				this.conGraficoReporte=this.jCheckBoxConGraficoReporteDetaNotaCredito.isSelected();															
				
				
				if(this.jInternalFrameDetalleFormDetaNotaCredito!=null) {
				this.isPostAccionNuevo=this.jInternalFrameDetalleFormDetaNotaCredito.jCheckBoxPostAccionNuevoDetaNotaCredito.isSelected();
				this.isPostAccionSinCerrar=this.jInternalFrameDetalleFormDetaNotaCredito.jCheckBoxPostAccionSinCerrarDetaNotaCredito.isSelected();
				this.isPostAccionSinMensaje=this.jInternalFrameDetalleFormDetaNotaCredito.jCheckBoxPostAccionSinMensajeDetaNotaCredito.isSelected();
				}
			
			} else {
				this.jCheckBoxSeleccionarTodosDetaNotaCredito.setSelected(this.isSeleccionarTodos);
				this.jCheckBoxSeleccionadosDetaNotaCredito.setSelected(this.isSeleccionados);
				
				
				this.jCheckBoxConGraficoReporteDetaNotaCredito.setSelected(this.conGraficoReporte);				
				
				
				if(this.jInternalFrameDetalleFormDetaNotaCredito!=null) {
				this.jInternalFrameDetalleFormDetaNotaCredito.jCheckBoxPostAccionNuevoDetaNotaCredito.setSelected(this.isPostAccionNuevo);
				this.jInternalFrameDetalleFormDetaNotaCredito.jCheckBoxPostAccionSinCerrarDetaNotaCredito.setSelected(this.isPostAccionSinCerrar);
				this.jInternalFrameDetalleFormDetaNotaCredito.jCheckBoxPostAccionSinMensajeDetaNotaCredito.setSelected(this.isPostAccionSinMensaje);
				}
			}
			
			
			if(this.jComboBoxTiposPaginacionDetaNotaCredito.getSelectedItem()!=null) {
				this.sTipoPaginacion=((Reporte)this.jComboBoxTiposPaginacionDetaNotaCredito.getSelectedItem()).getsCodigo();			
			}
			
			
			
			if(this.jInternalFrameDetalleFormDetaNotaCredito!=null) {
			this.sTipoAccionFormulario=((Reporte)this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxTiposAccionesFormularioDetaNotaCredito.getSelectedItem()).getsCodigo();
			}
			
			
			
			if(!this.conCargarMinimo) {
				this.sTipoArchivoReporte=((Reporte)this.jComboBoxTiposArchivosReportesDetaNotaCredito.getSelectedItem()).getsCodigo();			
				
				if(this.jInternalFrameReporteDinamicoDetaNotaCredito!=null) {
					this.sTipoArchivoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoDetaNotaCredito.getjComboBoxTiposArchivosReportesDinamico().getSelectedItem()).getsCodigo();			
				}
				
				this.sTipoRelacion=((Reporte)this.jComboBoxTiposRelacionesDetaNotaCredito.getSelectedItem()).getsCodigo();
									
				this.sTipoAccion=((Reporte)this.jComboBoxTiposAccionesDetaNotaCredito.getSelectedItem()).getsCodigo();
													
				this.sTipoSeleccionar=((Reporte)this.jComboBoxTiposSeleccionarDetaNotaCredito.getSelectedItem()).getsCodigo();
									
				this.sTipoReporte=((Reporte)this.jComboBoxTiposReportesDetaNotaCredito.getSelectedItem()).getsCodigo();							
					
				if(this.jInternalFrameReporteDinamicoDetaNotaCredito!=null) {
					this.sTipoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoDetaNotaCredito.getjComboBoxTiposReportesDinamico().getSelectedItem()).getsCodigo();							
				}
				
				this.sTipoGraficoReporte=((Reporte)this.jComboBoxTiposGraficosReportesDetaNotaCredito.getSelectedItem()).getsCodigo();											
			}			
			
			this.sValorCampoGeneral=this.jTextFieldValorCampoGeneralDetaNotaCredito.getText();						
			
			
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void inicializarActualizarBindingParametrosReportesDetaNotaCredito(Boolean esInicializar) throws Exception {
		try	{	
			if(DetaNotaCreditoJInternalFrame.ISBINDING_MANUAL) {
				this. inicializarActualizarBindingParametrosReportesPostAccionesManualDetaNotaCredito(false);
			} else {
			}
		} catch(Exception e) {
			throw e;
		}
	}	
	
	public void inicializarActualizarBindingtiposArchivosReportesAccionesDetaNotaCredito() throws Exception {
		try	{
			if(DetaNotaCreditoJInternalFrame.ISBINDING_MANUAL) {
				this.inicializarActualizarBindingtiposArchivosReportesAccionesManualDetaNotaCredito();
			} else {
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesAccionesManualFormDetalleDetaNotaCredito() throws Exception {
		//TIPOS ACCIONES FORMULARIO	
		this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxTiposAccionesFormularioDetaNotaCredito.removeAllItems();
				
		for(Reporte reporte:this.tiposAccionesFormulario) {
			this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxTiposAccionesFormularioDetaNotaCredito.addItem(reporte);
		}
		
		//TIPOS ACCIONES FORMULARIO
	}
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesAccionesManualDetaNotaCredito() throws Exception {
		try	{
			
			//TIPOS ARCHIVOS REPORTES
			this.jComboBoxTiposArchivosReportesDetaNotaCredito.removeAllItems();
				
			for(Reporte reporte:this.tiposArchivosReportes) {
				this.jComboBoxTiposArchivosReportesDetaNotaCredito.addItem(reporte);
			}
			
			
				
			//TIPOS REPORTES
			this.jComboBoxTiposReportesDetaNotaCredito.removeAllItems();
				
			for(Reporte reporte:this.tiposReportes) {
				this.jComboBoxTiposReportesDetaNotaCredito.addItem(reporte);
			}
			
			
			//TIPOS GRAFICOS REPORTES
			this.jComboBoxTiposGraficosReportesDetaNotaCredito.removeAllItems();
				
			for(Reporte reporte:this.tiposGraficosReportes) {
				this.jComboBoxTiposGraficosReportesDetaNotaCredito.addItem(reporte);
			}
			
			
			//TIPOS PAGINACION
			this.jComboBoxTiposPaginacionDetaNotaCredito.removeAllItems();
				
			for(Reporte reporte:this.tiposPaginacion) {
				this.jComboBoxTiposPaginacionDetaNotaCredito.addItem(reporte);
			}
			
			
			if(!this.detanotacreditoSessionBean.getEsGuardarRelacionado()) {
				this.jComboBoxTiposPaginacionDetaNotaCredito.setSelectedItem(Funciones2.getTipoPaginacionDefecto("NORMAL",this.tiposPaginacion));
			} else {
				this.jComboBoxTiposPaginacionDetaNotaCredito.setSelectedItem(Funciones2.getTipoPaginacionDefecto("RELACIONADO",this.tiposPaginacion));
			}
				
				
			//TIPOS ACCIONES	
			this.jComboBoxTiposRelacionesDetaNotaCredito.removeAllItems();
				
			for(Reporte reporte:this.tiposRelaciones) {
				this.jComboBoxTiposRelacionesDetaNotaCredito.addItem(reporte);
			}
			
			//TIPOS ACCIONES
				
				
			//TIPOS ACCIONES	
			this.jComboBoxTiposAccionesDetaNotaCredito.removeAllItems();
				
			for(Reporte reporte:this.tiposAcciones) {
				this.jComboBoxTiposAccionesDetaNotaCredito.addItem(reporte);
			}
			
			//TIPOS ACCIONES			
			
			
			
			//TIPOS ACCIONES FORMULARIO	
			if(this.jInternalFrameDetalleFormDetaNotaCredito!=null) { //if(this.conCargarFormDetalle) {
				this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxTiposAccionesFormularioDetaNotaCredito.removeAllItems();
				
				for(Reporte reporte:this.tiposAccionesFormulario) {
					this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxTiposAccionesFormularioDetaNotaCredito.addItem(reporte);
				}
				
			}
			//TIPOS ACCIONES FORMULARIO
			
			
			
			//TIPOS SELECCIONAR
			this.jComboBoxTiposSeleccionarDetaNotaCredito.removeAllItems();
				
			for(Reporte reporte:this.tiposSeleccionar) {
				this.jComboBoxTiposSeleccionarDetaNotaCredito.addItem(reporte);
			}
			
			
			if(this.tiposSeleccionar!=null && this.tiposSeleccionar.size()>1) {
				this.jComboBoxTiposSeleccionarDetaNotaCredito.setSelectedIndex(1);
			}
				
			//REPORTE DINAMICO
			this.inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualDetaNotaCredito();
							
			//TIPOS COLUMNAS SELECT
			//TIPOS SELECCIONAR
			
			
		} catch(Exception e) {
			throw e;
		}
	}		
	
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualDetaNotaCredito() throws Exception {
		try	{
			DefaultListModel<Reporte> defaultListModel=new DefaultListModel<Reporte>();
			
			
			//TIPOS ARCHIVOS REPORTES DINAMICO
			if(this.jInternalFrameReporteDinamicoDetaNotaCredito!=null) {
				this.jInternalFrameReporteDinamicoDetaNotaCredito.getjComboBoxTiposArchivosReportesDinamico().removeAllItems();
					
				for(Reporte reporte:this.tiposArchivosReportesDinamico) {
					this.jInternalFrameReporteDinamicoDetaNotaCredito.getjComboBoxTiposArchivosReportesDinamico().addItem(reporte);
				}
				
			}
			
			//TIPOS REPORTES DINAMICO
			if(this.jInternalFrameReporteDinamicoDetaNotaCredito!=null) {
				this.jInternalFrameReporteDinamicoDetaNotaCredito.getjComboBoxTiposReportesDinamico().removeAllItems();
					
				for(Reporte reporte:this.tiposReportesDinamico) {
					this.jInternalFrameReporteDinamicoDetaNotaCredito.getjComboBoxTiposReportesDinamico().addItem(reporte);
				}
				
			}
			
			defaultListModel=new DefaultListModel<Reporte>();
			
			if(this.jInternalFrameReporteDinamicoDetaNotaCredito!=null) {
				
				if(this.jInternalFrameReporteDinamicoDetaNotaCredito.getjListColumnasSelectReporte()!=null) {
					this.jInternalFrameReporteDinamicoDetaNotaCredito.getjListColumnasSelectReporte().removeAll();
						
					for(Reporte reporte:this.tiposColumnasSelect) {
						defaultListModel.addElement(reporte);
					}						
						
					this.jInternalFrameReporteDinamicoDetaNotaCredito.getjListColumnasSelectReporte().setModel(defaultListModel);									
						
				}	
					
				//TIPOS RELACIONES SELECT
				//TIPOS SELECCIONAR
				defaultListModel=new DefaultListModel<Reporte>();
				if(this.jInternalFrameReporteDinamicoDetaNotaCredito.getjListRelacionesSelectReporte()!=null) {
					this.jInternalFrameReporteDinamicoDetaNotaCredito.getjListRelacionesSelectReporte().removeAll();
						
					for(Reporte reporte:this.tiposRelacionesSelect) {
						defaultListModel.addElement(reporte);
					}						
						
					this.jInternalFrameReporteDinamicoDetaNotaCredito.getjListRelacionesSelectReporte().setModel(defaultListModel);									
						
				}	
				
				
				//TIPOS COLUMNAS CATEGORIA DINAMICO
				if(this.jInternalFrameReporteDinamicoDetaNotaCredito.getjComboBoxColumnaCategoriaGrafico()!=null) {
					this.jInternalFrameReporteDinamicoDetaNotaCredito.getjComboBoxColumnaCategoriaGrafico().removeAllItems();
						
					ArrayList<Reporte> tiposColumnasCategoria=DetaNotaCreditoConstantesFunciones.getTiposSeleccionarDetaNotaCredito(true,true,false,true,true);
						
					for(Reporte reporte:tiposColumnasCategoria) {//this.tiposSeleccionar
						this.jInternalFrameReporteDinamicoDetaNotaCredito.getjComboBoxColumnaCategoriaGrafico().addItem(reporte);
					}
					
				}
					
				//TIPOS COLUMNAS CATEGORIA VALOR DINAMICO
				if(this.jInternalFrameReporteDinamicoDetaNotaCredito.getjComboBoxColumnaCategoriaValor()!=null) {
					this.jInternalFrameReporteDinamicoDetaNotaCredito.getjComboBoxColumnaCategoriaValor().removeAllItems();
						
					ArrayList<Reporte> tiposColumnasCategoriaValor=DetaNotaCreditoConstantesFunciones.getTiposSeleccionarDetaNotaCredito(false,false,true,false,false);
						
					for(Reporte reporte:tiposColumnasCategoriaValor) {//this.tiposSeleccionar
						this.jInternalFrameReporteDinamicoDetaNotaCredito.getjComboBoxColumnaCategoriaValor().addItem(reporte);
					}
					
				}
					
				//TIPOS COLUMNAS VALOR
				defaultListModel=new DefaultListModel<Reporte>();
					
				if(this.jInternalFrameReporteDinamicoDetaNotaCredito.getjListColumnasValoresGrafico()!=null) {
					this.jInternalFrameReporteDinamicoDetaNotaCredito.getjListColumnasValoresGrafico().removeAll();
						
					ArrayList<Reporte> tiposColumnasValor=DetaNotaCreditoConstantesFunciones.getTiposSeleccionarDetaNotaCredito(false,false,true,false,false);
						
					for(Reporte reporte:tiposColumnasValor) {//this.tiposSeleccionar
						defaultListModel.addElement(reporte);
					}						
						
					this.jInternalFrameReporteDinamicoDetaNotaCredito.getjListColumnasValoresGrafico().setModel(defaultListModel);									
						
				}
					
				//TIPOS GRAFICOS REPORTES DINAMICOS
				if(this.jInternalFrameReporteDinamicoDetaNotaCredito.getjComboBoxTiposGraficosReportesDinamico()!=null) {
					this.jInternalFrameReporteDinamicoDetaNotaCredito.getjComboBoxTiposGraficosReportesDinamico().removeAllItems();
						
					for(Reporte reporte:this.tiposGraficosReportes) {
						this.jInternalFrameReporteDinamicoDetaNotaCredito.getjComboBoxTiposGraficosReportesDinamico().addItem(reporte);
					}
					
				}
			
			
			}
		} catch(Exception e) {
			throw e;
		}
	}	
	
	
	
	public void inicializarActualizarBindingBusquedasManualDetaNotaCredito()  throws Exception {				
		//BYDAN_BUSQUEDAS		
		
		if(this.jComboBoxid_bodegaFK_IdBodegaDetaNotaCredito.getSelectedItem()!=null){this.id_bodegaFK_IdBodega=((Bodega)this.jComboBoxid_bodegaFK_IdBodegaDetaNotaCredito.getSelectedItem()).getId();}
		if(this.jComboBoxid_centro_costoFK_IdCentroCostoDetaNotaCredito.getSelectedItem()!=null){this.id_centro_costoFK_IdCentroCosto=((CentroCosto)this.jComboBoxid_centro_costoFK_IdCentroCostoDetaNotaCredito.getSelectedItem()).getId();}
		if(this.jComboBoxid_empaqueFK_IdEmpaqueDetaNotaCredito.getSelectedItem()!=null){this.id_empaqueFK_IdEmpaque=((Empaque)this.jComboBoxid_empaqueFK_IdEmpaqueDetaNotaCredito.getSelectedItem()).getId();}
		if(this.jComboBoxid_nota_creditoFK_IdNotaCreditoDetaNotaCredito.getSelectedItem()!=null){this.id_nota_creditoFK_IdNotaCredito=((NotaCredito)this.jComboBoxid_nota_creditoFK_IdNotaCreditoDetaNotaCredito.getSelectedItem()).getId();}
		if(this.jComboBoxid_productoFK_IdProductoDetaNotaCredito.getSelectedItem()!=null){this.id_productoFK_IdProducto=((Producto)this.jComboBoxid_productoFK_IdProductoDetaNotaCredito.getSelectedItem()).getId();}
		if(this.jComboBoxid_tipo_deta_nota_creditoFK_IdTipoDetaNotaCreditoDetaNotaCredito.getSelectedItem()!=null){this.id_tipo_deta_nota_creditoFK_IdTipoDetaNotaCredito=((TipoDetaNotaCredito)this.jComboBoxid_tipo_deta_nota_creditoFK_IdTipoDetaNotaCreditoDetaNotaCredito.getSelectedItem()).getId();}
		if(this.jComboBoxid_tipo_devolucion_empresaFK_IdTipoDevolucionEmpresaDetaNotaCredito.getSelectedItem()!=null){this.id_tipo_devolucion_empresaFK_IdTipoDevolucionEmpresa=((TipoDevolucionEmpresa)this.jComboBoxid_tipo_devolucion_empresaFK_IdTipoDevolucionEmpresaDetaNotaCredito.getSelectedItem()).getId();}
		if(this.jComboBoxid_unidadFK_IdUnidadDetaNotaCredito.getSelectedItem()!=null){this.id_unidadFK_IdUnidad=((Unidad)this.jComboBoxid_unidadFK_IdUnidadDetaNotaCredito.getSelectedItem()).getId();}
		
	}
	
	
	
	
	public void inicializarActualizarBindingBusquedasDetaNotaCredito(Boolean esInicializar) throws Exception {				
		if(DetaNotaCreditoJInternalFrame.ISBINDING_MANUAL) {
			
			this.inicializarActualizarBindingBusquedasManualDetaNotaCredito();			
			
		} else {
		}
	}		
		
	public void inicializarActualizarBindingTablaDetaNotaCredito() throws Exception {
		this.inicializarActualizarBindingTablaDetaNotaCredito(false);
	}
	
	
	public void inicializarActualizarBindingTablaOrderByDetaNotaCredito() {
		//TABLA OrderBy	
		TableColumn tableColumn=new TableColumn();
		Integer iWidthTableDefinicionOrderBy=0;			
			
		this.jInternalFrameOrderByDetaNotaCredito.getjTableDatosOrderBy().setModel(new TablaGeneralOrderByModel(this.arrOrderBy));
					
		//DEFINIR RENDERERS OrderBy
		tableColumn=this.jInternalFrameOrderByDetaNotaCredito.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderByDetaNotaCredito.getjTableDatosOrderBy(),OrderBy.ISSELECTED));			
		//tableColumn.addPropertyChangeListener(new DetaNotaCreditoPropertyChangeListener());
					
		tableColumn.setPreferredWidth(50); 	 
		tableColumn.setWidth(50); 	 
		tableColumn.setMinWidth(50);
		tableColumn.setMaxWidth(50);
				
		iWidthTableDefinicionOrderBy+=50;
					
		tableColumn=this.jInternalFrameOrderByDetaNotaCredito.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderByDetaNotaCredito.getjTableDatosOrderBy(),OrderBy.NOMBRE));
		//tableColumn.addPropertyChangeListener(new DetaNotaCreditoPropertyChangeListener());
					
		tableColumn.setPreferredWidth(150); 	 
		tableColumn.setWidth(150); 	 
		tableColumn.setMinWidth(150);
		tableColumn.setMaxWidth(150);
				
		iWidthTableDefinicionOrderBy+=150;
					
		//tableColumn=this.jTableDatosDetaNotaCreditoOrderBy.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetaNotaCreditoOrderBy,OrderBy.NOMBREDB));			
		////tableColumn.addPropertyChangeListener(new DetaNotaCreditoPropertyChangeListener());
								
		tableColumn=this.jInternalFrameOrderByDetaNotaCredito.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderByDetaNotaCredito.getjTableDatosOrderBy(),OrderBy.ESDESC));
		//tableColumn.addPropertyChangeListener(new DetaNotaCreditoPropertyChangeListener());
												
		tableColumn.setPreferredWidth(50); 	 
		tableColumn.setWidth(50); 	 
		tableColumn.setMinWidth(50);
		tableColumn.setMaxWidth(50);
				
		((AbstractTableModel) this.jInternalFrameOrderByDetaNotaCredito.getjTableDatosOrderBy().getModel()).fireTableDataChanged();
				
		iWidthTableDefinicionOrderBy+=50;
	}
	
	
	public void inicializarActualizarBindingTablaTotalesDetaNotaCredito() {		
		//TABLA OrderBy	
		TableColumn tableColumn=new TableColumn();
		
		//TABLA TOTALES
		this.jInternalFrameTotalesDetaNotaCredito.getjTableDatosTotales().setModel(new TablaGeneralTotalModel(this.arrDatoGeneralTotales));
				
		//DEFINIR RENDERERS TOTALES
		tableColumn=this.jInternalFrameTotalesDetaNotaCredito.getjTableDatosTotales().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameTotalesDetaNotaCredito.getjTableDatosTotales(),Constantes2.S_TIPO));			
		//tableColumn.addPropertyChangeListener(new DetaNotaCreditoPropertyChangeListener());
				
				
		tableColumn=this.jInternalFrameTotalesDetaNotaCredito.getjTableDatosTotales().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameTotalesDetaNotaCredito.getjTableDatosTotales(),Constantes2.S_TOTAL));
		//tableColumn.addPropertyChangeListener(new DetaNotaCreditoPropertyChangeListener());		
	}
	
	public void inicializarActualizarBindingTablaDetaNotaCredito(Boolean esInicializar) throws Exception {
		Boolean isNoExiste=false;
		Integer iCountNumeroColumnasNormal=0;
		Integer iCountNumeroColumnasFk=0;
		
		this.iWidthTableDefinicion=0;
		
		int iSizeTabla=0;
		
		iSizeTabla=this.getSizeTablaDatos();
		
	if(esInicializar || ConstantesSwing.FORZAR_INICIALIZAR_TABLA) {//esInicializar
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			isNoExiste=detanotacreditoLogic.getDetaNotaCreditos().size()==0;
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			isNoExiste=detanotacreditos.size()==0;
		}
		//ARCHITECTURE
			
		if(isNoExiste) {
			if(this.iNumeroPaginacion-this.iNumeroPaginacion>0) {
				this.iNumeroPaginacion-=this.iNumeroPaginacion;
			}
		}
		
		TableColumn tableColumn=new TableColumn();
		
		if(DetaNotaCreditoJInternalFrame.ISBINDING_MANUAL_TABLA) {
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.jTableDatosDetaNotaCredito.setModel(new DetaNotaCreditoModel(this.detanotacreditoLogic.getDetaNotaCreditos(),this));
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.jTableDatosDetaNotaCredito.setModel(new DetaNotaCreditoModel(this.detanotacreditos,this));
			}
			//ARCHITECTURE
			
			if(this.jInternalFrameTotalesDetaNotaCredito!=null) {
				//TABLA TOTALES
				this.jInternalFrameTotalesDetaNotaCredito.getjTableDatosTotales().setModel(new TablaGeneralTotalModel(this.arrDatoGeneralTotales));
				
				//DEFINIR RENDERERS TOTALES
				tableColumn=this.jInternalFrameTotalesDetaNotaCredito.getjTableDatosTotales().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameTotalesDetaNotaCredito.getjTableDatosTotales(),Constantes2.S_TIPO));			
				//tableColumn.addPropertyChangeListener(new DetaNotaCreditoPropertyChangeListener());
				
				
				tableColumn=this.jInternalFrameTotalesDetaNotaCredito.getjTableDatosTotales().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameTotalesDetaNotaCredito.getjTableDatosTotales(),Constantes2.S_TOTAL));
				//tableColumn.addPropertyChangeListener(new DetaNotaCreditoPropertyChangeListener());
			}
							
			
			
			if(this.jInternalFrameOrderByDetaNotaCredito!=null && this.jInternalFrameOrderByDetaNotaCredito.getjTableDatosOrderBy()!=null) {
				this.inicializarActualizarBindingTablaOrderByDetaNotaCredito();
			}
			
								
			//DEFINIR RENDERERS
			tableColumn=this.jTableDatosDetaNotaCredito.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetaNotaCredito,Constantes2.S_SELECCIONAR));
			//tableColumn.addPropertyChangeListener(new DetaNotaCreditoPropertyChangeListener());
			tableColumn.setCellRenderer(new BooleanRenderer(true,"Seleccionar "+DetaNotaCreditoConstantesFunciones.SCLASSWEBTITULO,detanotacreditoConstantesFunciones.resaltarSeleccionarDetaNotaCredito,iSizeTabla,true,false,"","",this));
			tableColumn.setCellEditor(new BooleanEditorRenderer(true,"Seleccionar "+DetaNotaCreditoConstantesFunciones.SCLASSWEBTITULO,detanotacreditoConstantesFunciones.resaltarSeleccionarDetaNotaCredito,false,"","",this));			
			
			tableColumn.setPreferredWidth(50); 	 
			tableColumn.setWidth(50); 	 
			tableColumn.setMinWidth(50); 
			tableColumn.setMaxWidth(50); 
			
			this.iWidthTableDefinicion+=50;
			
			


			tableColumn=this.jTableDatosDetaNotaCredito.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetaNotaCredito,DetaNotaCreditoConstantesFunciones.LABEL_ID));

		if(this.detanotacreditoConstantesFunciones.mostraridDetaNotaCredito && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetaNotaCreditoConstantesFunciones.LABEL_ID,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.detanotacreditoConstantesFunciones.resaltaridDetaNotaCredito,this.detanotacreditoConstantesFunciones.activaridDetaNotaCredito,iSizeTabla,this,true,"idDetaNotaCredito","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.detanotacreditoConstantesFunciones.resaltaridDetaNotaCredito,this.detanotacreditoConstantesFunciones.activaridDetaNotaCredito,this,true,"idDetaNotaCredito","BASICO",false));

			tableColumn.setPreferredWidth(50);
			tableColumn.setWidth(50);
			tableColumn.setMinWidth(50);
			tableColumn.setMaxWidth(50);

			this.iWidthTableDefinicion+=50;
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetaNotaCredito.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetaNotaCredito,DetaNotaCreditoConstantesFunciones.LABEL_IDEMPRESA));

		if(this.detanotacreditoConstantesFunciones.mostrarid_empresaDetaNotaCredito && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetaNotaCreditoConstantesFunciones.LABEL_IDEMPRESA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new EmpresaTableCell(this.empresasForeignKey,this.detanotacreditoConstantesFunciones.resaltarid_empresaDetaNotaCredito,this,this.detanotacreditoConstantesFunciones.activarid_empresaDetaNotaCredito,iSizeTabla));
			tableColumn.setCellEditor(new EmpresaTableCell(this.empresasForeignKey,this.detanotacreditoConstantesFunciones.resaltarid_empresaDetaNotaCredito,this,this.detanotacreditoConstantesFunciones.activarid_empresaDetaNotaCredito,false,"id_empresaDetaNotaCredito","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new DetaNotaCreditoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetaNotaCredito.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetaNotaCredito,DetaNotaCreditoConstantesFunciones.LABEL_IDSUCURSAL));

		if(this.detanotacreditoConstantesFunciones.mostrarid_sucursalDetaNotaCredito && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetaNotaCreditoConstantesFunciones.LABEL_IDSUCURSAL,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new SucursalTableCell(this.sucursalsForeignKey,this.detanotacreditoConstantesFunciones.resaltarid_sucursalDetaNotaCredito,this,this.detanotacreditoConstantesFunciones.activarid_sucursalDetaNotaCredito,iSizeTabla));
			tableColumn.setCellEditor(new SucursalTableCell(this.sucursalsForeignKey,this.detanotacreditoConstantesFunciones.resaltarid_sucursalDetaNotaCredito,this,this.detanotacreditoConstantesFunciones.activarid_sucursalDetaNotaCredito,false,"id_sucursalDetaNotaCredito","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new DetaNotaCreditoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetaNotaCredito.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetaNotaCredito,DetaNotaCreditoConstantesFunciones.LABEL_IDEJERCICIO));

		if(this.detanotacreditoConstantesFunciones.mostrarid_ejercicioDetaNotaCredito && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetaNotaCreditoConstantesFunciones.LABEL_IDEJERCICIO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new EjercicioTableCell(this.ejerciciosForeignKey,this.detanotacreditoConstantesFunciones.resaltarid_ejercicioDetaNotaCredito,this,this.detanotacreditoConstantesFunciones.activarid_ejercicioDetaNotaCredito,iSizeTabla));
			tableColumn.setCellEditor(new EjercicioTableCell(this.ejerciciosForeignKey,this.detanotacreditoConstantesFunciones.resaltarid_ejercicioDetaNotaCredito,this,this.detanotacreditoConstantesFunciones.activarid_ejercicioDetaNotaCredito,false,"id_ejercicioDetaNotaCredito","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new DetaNotaCreditoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetaNotaCredito.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetaNotaCredito,DetaNotaCreditoConstantesFunciones.LABEL_IDPERIODO));

		if(this.detanotacreditoConstantesFunciones.mostrarid_periodoDetaNotaCredito && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetaNotaCreditoConstantesFunciones.LABEL_IDPERIODO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new PeriodoTableCell(this.periodosForeignKey,this.detanotacreditoConstantesFunciones.resaltarid_periodoDetaNotaCredito,this,this.detanotacreditoConstantesFunciones.activarid_periodoDetaNotaCredito,iSizeTabla));
			tableColumn.setCellEditor(new PeriodoTableCell(this.periodosForeignKey,this.detanotacreditoConstantesFunciones.resaltarid_periodoDetaNotaCredito,this,this.detanotacreditoConstantesFunciones.activarid_periodoDetaNotaCredito,false,"id_periodoDetaNotaCredito","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new DetaNotaCreditoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetaNotaCredito.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetaNotaCredito,DetaNotaCreditoConstantesFunciones.LABEL_IDANIO));

		if(this.detanotacreditoConstantesFunciones.mostrarid_anioDetaNotaCredito && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetaNotaCreditoConstantesFunciones.LABEL_IDANIO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new AnioTableCell(this.aniosForeignKey,this.detanotacreditoConstantesFunciones.resaltarid_anioDetaNotaCredito,this,this.detanotacreditoConstantesFunciones.activarid_anioDetaNotaCredito,iSizeTabla));
			tableColumn.setCellEditor(new AnioTableCell(this.aniosForeignKey,this.detanotacreditoConstantesFunciones.resaltarid_anioDetaNotaCredito,this,this.detanotacreditoConstantesFunciones.activarid_anioDetaNotaCredito,true,"id_anioDetaNotaCredito","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new DetaNotaCreditoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetaNotaCredito.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetaNotaCredito,DetaNotaCreditoConstantesFunciones.LABEL_IDMES));

		if(this.detanotacreditoConstantesFunciones.mostrarid_mesDetaNotaCredito && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetaNotaCreditoConstantesFunciones.LABEL_IDMES,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new MesTableCell(this.messForeignKey,this.detanotacreditoConstantesFunciones.resaltarid_mesDetaNotaCredito,this,this.detanotacreditoConstantesFunciones.activarid_mesDetaNotaCredito,iSizeTabla));
			tableColumn.setCellEditor(new MesTableCell(this.messForeignKey,this.detanotacreditoConstantesFunciones.resaltarid_mesDetaNotaCredito,this,this.detanotacreditoConstantesFunciones.activarid_mesDetaNotaCredito,true,"id_mesDetaNotaCredito","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new DetaNotaCreditoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetaNotaCredito.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetaNotaCredito,DetaNotaCreditoConstantesFunciones.LABEL_IDNOTACREDITO));

		if(this.detanotacreditoConstantesFunciones.mostrarid_nota_creditoDetaNotaCredito && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetaNotaCreditoConstantesFunciones.LABEL_IDNOTACREDITO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new NotaCreditoTableCell(this.notacreditosForeignKey,this.detanotacreditoConstantesFunciones.resaltarid_nota_creditoDetaNotaCredito,this,this.detanotacreditoConstantesFunciones.activarid_nota_creditoDetaNotaCredito,iSizeTabla));
			tableColumn.setCellEditor(new NotaCreditoTableCell(this.notacreditosForeignKey,this.detanotacreditoConstantesFunciones.resaltarid_nota_creditoDetaNotaCredito,this,this.detanotacreditoConstantesFunciones.activarid_nota_creditoDetaNotaCredito,true,"id_nota_creditoDetaNotaCredito","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new DetaNotaCreditoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetaNotaCredito.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetaNotaCredito,DetaNotaCreditoConstantesFunciones.LABEL_IDBODEGA));

		if(this.detanotacreditoConstantesFunciones.mostrarid_bodegaDetaNotaCredito && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetaNotaCreditoConstantesFunciones.LABEL_IDBODEGA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new BodegaTableCell(this.bodegasForeignKey,this.detanotacreditoConstantesFunciones.resaltarid_bodegaDetaNotaCredito,this,this.detanotacreditoConstantesFunciones.activarid_bodegaDetaNotaCredito,iSizeTabla));
			tableColumn.setCellEditor(new BodegaTableCell(this.bodegasForeignKey,this.detanotacreditoConstantesFunciones.resaltarid_bodegaDetaNotaCredito,this,this.detanotacreditoConstantesFunciones.activarid_bodegaDetaNotaCredito,true,"id_bodegaDetaNotaCredito","BASICO-CON_EVENT_CHANGE"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75);
			//tableColumn.addPropertyChangeListener(new DetaNotaCreditoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetaNotaCredito.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetaNotaCredito,DetaNotaCreditoConstantesFunciones.LABEL_IDPRODUCTO));

		if(this.detanotacreditoConstantesFunciones.mostrarid_productoDetaNotaCredito && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetaNotaCreditoConstantesFunciones.LABEL_IDPRODUCTO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new ProductoTableCell(this.productosForeignKey,this.detanotacreditoConstantesFunciones.resaltarid_productoDetaNotaCredito,this,this.detanotacreditoConstantesFunciones.activarid_productoDetaNotaCredito,iSizeTabla));
			tableColumn.setCellEditor(new ProductoTableCell(this.productosForeignKey,this.detanotacreditoConstantesFunciones.resaltarid_productoDetaNotaCredito,this,this.detanotacreditoConstantesFunciones.activarid_productoDetaNotaCredito,true,"id_productoDetaNotaCredito","CON_BUSQUEDA-CON_EVENT_CHANGE"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,100));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,100));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,100));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,100));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,100);
			//tableColumn.addPropertyChangeListener(new DetaNotaCreditoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetaNotaCredito.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetaNotaCredito,DetaNotaCreditoConstantesFunciones.LABEL_IDUNIDAD));

		if(this.detanotacreditoConstantesFunciones.mostrarid_unidadDetaNotaCredito && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetaNotaCreditoConstantesFunciones.LABEL_IDUNIDAD,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new UnidadTableCell(this.unidadsForeignKey,this.detanotacreditoConstantesFunciones.resaltarid_unidadDetaNotaCredito,this,this.detanotacreditoConstantesFunciones.activarid_unidadDetaNotaCredito,iSizeTabla));
			tableColumn.setCellEditor(new UnidadTableCell(this.unidadsForeignKey,this.detanotacreditoConstantesFunciones.resaltarid_unidadDetaNotaCredito,this,this.detanotacreditoConstantesFunciones.activarid_unidadDetaNotaCredito,true,"id_unidadDetaNotaCredito","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new DetaNotaCreditoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetaNotaCredito.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetaNotaCredito,DetaNotaCreditoConstantesFunciones.LABEL_IDTIPODETANOTACREDITO));

		if(this.detanotacreditoConstantesFunciones.mostrarid_tipo_deta_nota_creditoDetaNotaCredito && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetaNotaCreditoConstantesFunciones.LABEL_IDTIPODETANOTACREDITO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new TipoDetaNotaCreditoTableCell(this.tipodetanotacreditosForeignKey,this.detanotacreditoConstantesFunciones.resaltarid_tipo_deta_nota_creditoDetaNotaCredito,this,this.detanotacreditoConstantesFunciones.activarid_tipo_deta_nota_creditoDetaNotaCredito,iSizeTabla));
			tableColumn.setCellEditor(new TipoDetaNotaCreditoTableCell(this.tipodetanotacreditosForeignKey,this.detanotacreditoConstantesFunciones.resaltarid_tipo_deta_nota_creditoDetaNotaCredito,this,this.detanotacreditoConstantesFunciones.activarid_tipo_deta_nota_creditoDetaNotaCredito,true,"id_tipo_deta_nota_creditoDetaNotaCredito","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new DetaNotaCreditoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetaNotaCredito.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetaNotaCredito,DetaNotaCreditoConstantesFunciones.LABEL_IDTIPODEVOLUCIONEMPRESA));

		if(this.detanotacreditoConstantesFunciones.mostrarid_tipo_devolucion_empresaDetaNotaCredito && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetaNotaCreditoConstantesFunciones.LABEL_IDTIPODEVOLUCIONEMPRESA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new TipoDevolucionEmpresaTableCell(this.tipodevolucionempresasForeignKey,this.detanotacreditoConstantesFunciones.resaltarid_tipo_devolucion_empresaDetaNotaCredito,this,this.detanotacreditoConstantesFunciones.activarid_tipo_devolucion_empresaDetaNotaCredito,iSizeTabla));
			tableColumn.setCellEditor(new TipoDevolucionEmpresaTableCell(this.tipodevolucionempresasForeignKey,this.detanotacreditoConstantesFunciones.resaltarid_tipo_devolucion_empresaDetaNotaCredito,this,this.detanotacreditoConstantesFunciones.activarid_tipo_devolucion_empresaDetaNotaCredito,true,"id_tipo_devolucion_empresaDetaNotaCredito","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new DetaNotaCreditoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetaNotaCredito.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetaNotaCredito,DetaNotaCreditoConstantesFunciones.LABEL_DESCRIPCION));

		if(this.detanotacreditoConstantesFunciones.mostrardescripcionDetaNotaCredito && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetaNotaCreditoConstantesFunciones.LABEL_DESCRIPCION,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.detanotacreditoConstantesFunciones.resaltardescripcionDetaNotaCredito,this.detanotacreditoConstantesFunciones.activardescripcionDetaNotaCredito,iSizeTabla,this,true,"descripcionDetaNotaCredito","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.detanotacreditoConstantesFunciones.resaltardescripcionDetaNotaCredito,this.detanotacreditoConstantesFunciones.activardescripcionDetaNotaCredito,this,true,"descripcionDetaNotaCredito","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new DetaNotaCreditoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetaNotaCredito.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetaNotaCredito,DetaNotaCreditoConstantesFunciones.LABEL_CANTIDAD));

		if(this.detanotacreditoConstantesFunciones.mostrarcantidadDetaNotaCredito && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetaNotaCreditoConstantesFunciones.LABEL_CANTIDAD,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.detanotacreditoConstantesFunciones.resaltarcantidadDetaNotaCredito,this.detanotacreditoConstantesFunciones.activarcantidadDetaNotaCredito,iSizeTabla,this,true,"cantidadDetaNotaCredito","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.detanotacreditoConstantesFunciones.resaltarcantidadDetaNotaCredito,this.detanotacreditoConstantesFunciones.activarcantidadDetaNotaCredito,this,true,"cantidadDetaNotaCredito","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new DetaNotaCreditoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetaNotaCredito.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetaNotaCredito,DetaNotaCreditoConstantesFunciones.LABEL_PRECIO));

		if(this.detanotacreditoConstantesFunciones.mostrarprecioDetaNotaCredito && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetaNotaCreditoConstantesFunciones.LABEL_PRECIO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.detanotacreditoConstantesFunciones.resaltarprecioDetaNotaCredito,this.detanotacreditoConstantesFunciones.activarprecioDetaNotaCredito,iSizeTabla,this,true,"precioDetaNotaCredito","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.detanotacreditoConstantesFunciones.resaltarprecioDetaNotaCredito,this.detanotacreditoConstantesFunciones.activarprecioDetaNotaCredito,this,true,"precioDetaNotaCredito","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new DetaNotaCreditoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetaNotaCredito.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetaNotaCredito,DetaNotaCreditoConstantesFunciones.LABEL_MONTO));

		if(this.detanotacreditoConstantesFunciones.mostrarmontoDetaNotaCredito && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetaNotaCreditoConstantesFunciones.LABEL_MONTO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.detanotacreditoConstantesFunciones.resaltarmontoDetaNotaCredito,this.detanotacreditoConstantesFunciones.activarmontoDetaNotaCredito,iSizeTabla,this,true,"montoDetaNotaCredito","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.detanotacreditoConstantesFunciones.resaltarmontoDetaNotaCredito,this.detanotacreditoConstantesFunciones.activarmontoDetaNotaCredito,this,true,"montoDetaNotaCredito","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new DetaNotaCreditoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetaNotaCredito.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetaNotaCredito,DetaNotaCreditoConstantesFunciones.LABEL_COSTO));

		if(this.detanotacreditoConstantesFunciones.mostrarcostoDetaNotaCredito && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetaNotaCreditoConstantesFunciones.LABEL_COSTO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.detanotacreditoConstantesFunciones.resaltarcostoDetaNotaCredito,this.detanotacreditoConstantesFunciones.activarcostoDetaNotaCredito,iSizeTabla,this,true,"costoDetaNotaCredito","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.detanotacreditoConstantesFunciones.resaltarcostoDetaNotaCredito,this.detanotacreditoConstantesFunciones.activarcostoDetaNotaCredito,this,true,"costoDetaNotaCredito","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new DetaNotaCreditoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetaNotaCredito.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetaNotaCredito,DetaNotaCreditoConstantesFunciones.LABEL_DESCUENTO));

		if(this.detanotacreditoConstantesFunciones.mostrardescuentoDetaNotaCredito && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetaNotaCreditoConstantesFunciones.LABEL_DESCUENTO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.detanotacreditoConstantesFunciones.resaltardescuentoDetaNotaCredito,this.detanotacreditoConstantesFunciones.activardescuentoDetaNotaCredito,iSizeTabla,this,true,"descuentoDetaNotaCredito","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.detanotacreditoConstantesFunciones.resaltardescuentoDetaNotaCredito,this.detanotacreditoConstantesFunciones.activardescuentoDetaNotaCredito,this,true,"descuentoDetaNotaCredito","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new DetaNotaCreditoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetaNotaCredito.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetaNotaCredito,DetaNotaCreditoConstantesFunciones.LABEL_DESCUENTO2));

		if(this.detanotacreditoConstantesFunciones.mostrardescuento2DetaNotaCredito && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetaNotaCreditoConstantesFunciones.LABEL_DESCUENTO2,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.detanotacreditoConstantesFunciones.resaltardescuento2DetaNotaCredito,this.detanotacreditoConstantesFunciones.activardescuento2DetaNotaCredito,iSizeTabla,this,true,"descuento2DetaNotaCredito","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.detanotacreditoConstantesFunciones.resaltardescuento2DetaNotaCredito,this.detanotacreditoConstantesFunciones.activardescuento2DetaNotaCredito,this,true,"descuento2DetaNotaCredito","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new DetaNotaCreditoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetaNotaCredito.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetaNotaCredito,DetaNotaCreditoConstantesFunciones.LABEL_IMPUESTO));

		if(this.detanotacreditoConstantesFunciones.mostrarimpuestoDetaNotaCredito && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetaNotaCreditoConstantesFunciones.LABEL_IMPUESTO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.detanotacreditoConstantesFunciones.resaltarimpuestoDetaNotaCredito,this.detanotacreditoConstantesFunciones.activarimpuestoDetaNotaCredito,iSizeTabla,this,true,"impuestoDetaNotaCredito","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.detanotacreditoConstantesFunciones.resaltarimpuestoDetaNotaCredito,this.detanotacreditoConstantesFunciones.activarimpuestoDetaNotaCredito,this,true,"impuestoDetaNotaCredito","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new DetaNotaCreditoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetaNotaCredito.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetaNotaCredito,DetaNotaCreditoConstantesFunciones.LABEL_PORCENIVA));

		if(this.detanotacreditoConstantesFunciones.mostrarporcen_ivaDetaNotaCredito && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetaNotaCreditoConstantesFunciones.LABEL_PORCENIVA,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.detanotacreditoConstantesFunciones.resaltarporcen_ivaDetaNotaCredito,this.detanotacreditoConstantesFunciones.activarporcen_ivaDetaNotaCredito,iSizeTabla,this,true,"porcen_ivaDetaNotaCredito","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.detanotacreditoConstantesFunciones.resaltarporcen_ivaDetaNotaCredito,this.detanotacreditoConstantesFunciones.activarporcen_ivaDetaNotaCredito,this,true,"porcen_ivaDetaNotaCredito","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new DetaNotaCreditoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetaNotaCredito.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetaNotaCredito,DetaNotaCreditoConstantesFunciones.LABEL_PORCENDESCUEN));

		if(this.detanotacreditoConstantesFunciones.mostrarporcen_descuenDetaNotaCredito && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetaNotaCreditoConstantesFunciones.LABEL_PORCENDESCUEN,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.detanotacreditoConstantesFunciones.resaltarporcen_descuenDetaNotaCredito,this.detanotacreditoConstantesFunciones.activarporcen_descuenDetaNotaCredito,iSizeTabla,this,true,"porcen_descuenDetaNotaCredito","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.detanotacreditoConstantesFunciones.resaltarporcen_descuenDetaNotaCredito,this.detanotacreditoConstantesFunciones.activarporcen_descuenDetaNotaCredito,this,true,"porcen_descuenDetaNotaCredito","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new DetaNotaCreditoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetaNotaCredito.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetaNotaCredito,DetaNotaCreditoConstantesFunciones.LABEL_PORCENICE));

		if(this.detanotacreditoConstantesFunciones.mostrarporcen_iceDetaNotaCredito && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetaNotaCreditoConstantesFunciones.LABEL_PORCENICE,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.detanotacreditoConstantesFunciones.resaltarporcen_iceDetaNotaCredito,this.detanotacreditoConstantesFunciones.activarporcen_iceDetaNotaCredito,iSizeTabla,this,true,"porcen_iceDetaNotaCredito","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.detanotacreditoConstantesFunciones.resaltarporcen_iceDetaNotaCredito,this.detanotacreditoConstantesFunciones.activarporcen_iceDetaNotaCredito,this,true,"porcen_iceDetaNotaCredito","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new DetaNotaCreditoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetaNotaCredito.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetaNotaCredito,DetaNotaCreditoConstantesFunciones.LABEL_SUBTOTAL));

		if(this.detanotacreditoConstantesFunciones.mostrarsub_totalDetaNotaCredito && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetaNotaCreditoConstantesFunciones.LABEL_SUBTOTAL,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.detanotacreditoConstantesFunciones.resaltarsub_totalDetaNotaCredito,this.detanotacreditoConstantesFunciones.activarsub_totalDetaNotaCredito,iSizeTabla,this,true,"sub_totalDetaNotaCredito","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.detanotacreditoConstantesFunciones.resaltarsub_totalDetaNotaCredito,this.detanotacreditoConstantesFunciones.activarsub_totalDetaNotaCredito,this,true,"sub_totalDetaNotaCredito","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new DetaNotaCreditoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetaNotaCredito.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetaNotaCredito,DetaNotaCreditoConstantesFunciones.LABEL_TOTAL));

		if(this.detanotacreditoConstantesFunciones.mostrartotalDetaNotaCredito && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetaNotaCreditoConstantesFunciones.LABEL_TOTAL,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.detanotacreditoConstantesFunciones.resaltartotalDetaNotaCredito,this.detanotacreditoConstantesFunciones.activartotalDetaNotaCredito,iSizeTabla,this,true,"totalDetaNotaCredito","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.detanotacreditoConstantesFunciones.resaltartotalDetaNotaCredito,this.detanotacreditoConstantesFunciones.activartotalDetaNotaCredito,this,true,"totalDetaNotaCredito","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new DetaNotaCreditoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetaNotaCredito.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetaNotaCredito,DetaNotaCreditoConstantesFunciones.LABEL_IDCENTROCOSTO));

		if(this.detanotacreditoConstantesFunciones.mostrarid_centro_costoDetaNotaCredito && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetaNotaCreditoConstantesFunciones.LABEL_IDCENTROCOSTO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new CentroCostoTableCell(this.centrocostosForeignKey,this.detanotacreditoConstantesFunciones.resaltarid_centro_costoDetaNotaCredito,this,this.detanotacreditoConstantesFunciones.activarid_centro_costoDetaNotaCredito,iSizeTabla));
			tableColumn.setCellEditor(new CentroCostoTableCell(this.centrocostosForeignKey,this.detanotacreditoConstantesFunciones.resaltarid_centro_costoDetaNotaCredito,this,this.detanotacreditoConstantesFunciones.activarid_centro_costoDetaNotaCredito,true,"id_centro_costoDetaNotaCredito","CON_BUSQUEDA"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new DetaNotaCreditoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetaNotaCredito.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetaNotaCredito,DetaNotaCreditoConstantesFunciones.LABEL_IDEMPAQUE));

		if(this.detanotacreditoConstantesFunciones.mostrarid_empaqueDetaNotaCredito && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetaNotaCreditoConstantesFunciones.LABEL_IDEMPAQUE,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new EmpaqueTableCell(this.empaquesForeignKey,this.detanotacreditoConstantesFunciones.resaltarid_empaqueDetaNotaCredito,this,this.detanotacreditoConstantesFunciones.activarid_empaqueDetaNotaCredito,iSizeTabla));
			tableColumn.setCellEditor(new EmpaqueTableCell(this.empaquesForeignKey,this.detanotacreditoConstantesFunciones.resaltarid_empaqueDetaNotaCredito,this,this.detanotacreditoConstantesFunciones.activarid_empaqueDetaNotaCredito,true,"id_empaqueDetaNotaCredito","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new DetaNotaCreditoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetaNotaCredito.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetaNotaCredito,DetaNotaCreditoConstantesFunciones.LABEL_INCLUYEIMPUESTO));

		if(this.detanotacreditoConstantesFunciones.mostrarincluye_impuestoDetaNotaCredito && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetaNotaCreditoConstantesFunciones.LABEL_INCLUYEIMPUESTO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new BooleanRenderer(this.detanotacreditoConstantesFunciones.resaltarincluye_impuestoDetaNotaCredito,this.detanotacreditoConstantesFunciones.activarincluye_impuestoDetaNotaCredito,iSizeTabla));
			tableColumn.setCellEditor(new BooleanEditorRenderer(this.detanotacreditoConstantesFunciones.resaltarincluye_impuestoDetaNotaCredito,this.detanotacreditoConstantesFunciones.activarincluye_impuestoDetaNotaCredito,this,true,"incluye_impuestoDetaNotaCredito","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new DetaNotaCreditoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetaNotaCredito.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetaNotaCredito,DetaNotaCreditoConstantesFunciones.LABEL_FECHAEMISION));

		if(this.detanotacreditoConstantesFunciones.mostrarfecha_emisionDetaNotaCredito && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetaNotaCreditoConstantesFunciones.LABEL_FECHAEMISION,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new DateRenderer(this.detanotacreditoConstantesFunciones.resaltarfecha_emisionDetaNotaCredito,this.detanotacreditoConstantesFunciones.activarfecha_emisionDetaNotaCredito,iSizeTabla,this,true,"fecha_emisionDetaNotaCredito","BASICO"));
			tableColumn.setCellEditor(new DateEditorRenderer(this.detanotacreditoConstantesFunciones.resaltarfecha_emisionDetaNotaCredito,this.detanotacreditoConstantesFunciones.activarfecha_emisionDetaNotaCredito,this,true,"fecha_emisionDetaNotaCredito","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30);
			//tableColumn.addPropertyChangeListener(new DetaNotaCreditoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetaNotaCredito.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetaNotaCredito,DetaNotaCreditoConstantesFunciones.LABEL_CODIGOLOTE));

		if(this.detanotacreditoConstantesFunciones.mostrarcodigo_loteDetaNotaCredito && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetaNotaCreditoConstantesFunciones.LABEL_CODIGOLOTE,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.detanotacreditoConstantesFunciones.resaltarcodigo_loteDetaNotaCredito,this.detanotacreditoConstantesFunciones.activarcodigo_loteDetaNotaCredito,iSizeTabla,this,true,"codigo_loteDetaNotaCredito","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.detanotacreditoConstantesFunciones.resaltarcodigo_loteDetaNotaCredito,this.detanotacreditoConstantesFunciones.activarcodigo_loteDetaNotaCredito,this,true,"codigo_loteDetaNotaCredito","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new DetaNotaCreditoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetaNotaCredito.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetaNotaCredito,DetaNotaCreditoConstantesFunciones.LABEL_NUMEROCAJA));

		if(this.detanotacreditoConstantesFunciones.mostrarnumero_cajaDetaNotaCredito && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetaNotaCreditoConstantesFunciones.LABEL_NUMEROCAJA,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.detanotacreditoConstantesFunciones.resaltarnumero_cajaDetaNotaCredito,this.detanotacreditoConstantesFunciones.activarnumero_cajaDetaNotaCredito,iSizeTabla,this,true,"numero_cajaDetaNotaCredito","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.detanotacreditoConstantesFunciones.resaltarnumero_cajaDetaNotaCredito,this.detanotacreditoConstantesFunciones.activarnumero_cajaDetaNotaCredito,this,true,"numero_cajaDetaNotaCredito","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new DetaNotaCreditoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}
			
		} else {
		}			
					
		if(!this.detanotacreditoSessionBean.getEsGuardarRelacionado()
			&& !this.esParaBusquedaForeignKey) {
			
		}
		
		if(true) {
			String sLabelColumnAccion="Editar";
			String sLabelColumnAccionEli="Eli";
			
			if(this.esParaBusquedaForeignKey)  {
				sLabelColumnAccion="Seleccionar";
				
				//LO MISMO QUE ELSE
				tableColumn= new TableColumn();
				tableColumn.setIdentifier(sLabelColumnAccion);
				tableColumn.setHeaderValue(sLabelColumnAccion);
				tableColumn.setCellRenderer(new IdTableCell(this,false,false,this.detanotacreditoSessionBean.getEsGuardarRelacionado(),iSizeTabla));
				tableColumn.setCellEditor(new IdTableCell(this,false,false,this.detanotacreditoSessionBean.getEsGuardarRelacionado(),iSizeTabla));
	
				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				
				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
				
				this.jTableDatosDetaNotaCredito.addColumn(tableColumn);
			
			} else {				
				
				//LO MISMO QUE IF
				
				tableColumn= new TableColumn();
				tableColumn.setIdentifier(sLabelColumnAccion);
				tableColumn.setHeaderValue(sLabelColumnAccion);
				tableColumn.setCellRenderer(new IdTableCell(this,false,false,this.detanotacreditoSessionBean.getEsGuardarRelacionado(),iSizeTabla));
				tableColumn.setCellEditor(new IdTableCell(this,false,false,this.detanotacreditoSessionBean.getEsGuardarRelacionado(),iSizeTabla));
		
				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				
				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
				
				this.jTableDatosDetaNotaCredito.addColumn(tableColumn);				
					
				//ELIMINAR
				if(this.isPermisoEliminarDetaNotaCredito && this.isPermisoGuardarCambiosDetaNotaCredito) {
					tableColumn= new TableColumn();
					tableColumn.setIdentifier(Constantes2.S_ELI);
					tableColumn.setHeaderValue(sLabelColumnAccionEli);
					tableColumn.setCellRenderer(new IdTableCell(this,false,true,this.detanotacreditoSessionBean.getEsGuardarRelacionado(),iSizeTabla));
					tableColumn.setCellEditor(new IdTableCell(this,false,true,this.detanotacreditoSessionBean.getEsGuardarRelacionado(),iSizeTabla));
			
					tableColumn.setPreferredWidth(65); 	 
					tableColumn.setWidth(65); 	 
					tableColumn.setMinWidth(65); 
					tableColumn.setMaxWidth(65);
					
					this.iWidthTableDefinicion+=65;
						
					this.jTableDatosDetaNotaCredito.addColumn(tableColumn);
				}
			}			
						
			
			/*
			tableColumn= new TableColumn();
			tableColumn.setIdentifier(Constantes2.S_SELECCIONAR);
			tableColumn.setHeaderValue(Constantes2.S_SELECCIONAR);
			tableColumn.setCellRenderer(new IdSeleccionarTableCell(this));
			tableColumn.setCellEditor(new IdSeleccionarTableCell(this));
			
			tableColumn.setPreferredWidth(30); 	 
			tableColumn.setWidth(30); 	 
			tableColumn.setMinWidth(30); 
			
			this.iWidthTableDefinicion+=30;
			
			this.jTableDatosDetaNotaCredito.addColumn(tableColumn);
			*/
		}
		
		Integer iUltimaColumna=0;//1
		Integer iNuevaPosicionColumna=0;
		
		
		//PERMITE ELIMINAR SIMPLE
		if(!this.esParaBusquedaForeignKey)  {
			if(this.isPermisoEliminarDetaNotaCredito && this.isPermisoGuardarCambiosDetaNotaCredito) {
				iUltimaColumna++;
			}	
		}
		
		//PERMITE EDITAR SIMPLE
		iUltimaColumna++;	
		
				
		
		//MOVIA SELECCIONAR
		//iUltimaColumna++;
		
		if(!this.esParaBusquedaForeignKey)  {
			if(this.isPermisoEliminarDetaNotaCredito && this.isPermisoGuardarCambiosDetaNotaCredito) {
				//REUBICA ELIMINAR SIMPLE
				jTableDatosDetaNotaCredito.moveColumn(this.jTableDatosDetaNotaCredito.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1,-2 o -3
					
				iUltimaColumna--;
			}
		}
		//REUBICA EDITAR SIMPLE
		jTableDatosDetaNotaCredito.moveColumn(this.jTableDatosDetaNotaCredito.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1,-2 o -3				
		
		
		
		
		//REUBICABA SELECCIONAR
		/*
		if(iUltimaColumna>1) {
			iUltimaColumna--;
		}
		
		//iNuevaPosicionColumna++;
			
		//REUBICA SELECCIONAR FILA CHECK
		jTableDatosDetaNotaCredito.moveColumn(this.jTableDatosDetaNotaCredito.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1		
		*/
		
		//DEFINEN HEADERS
		final TableCellRenderer tableHeaderDefaultCellRenderer = this.jTableDatosDetaNotaCredito.getTableHeader().getDefaultRenderer();
		
		this.jTableDatosDetaNotaCredito.getTableHeader().setDefaultRenderer(new TableCellRendererHeader(this.jTableDatosDetaNotaCredito,tableHeaderDefaultCellRenderer));
	    
		TableColumn column=null;
		
		if(!DetaNotaCreditoJInternalFrame.ISBINDING_MANUAL_TABLA) {
			for(int i = 0; i < this.jTableDatosDetaNotaCredito.getColumnModel().getColumnCount(); i++) { 
				column = this.jTableDatosDetaNotaCredito.getColumnModel().getColumn(i); 
				
				if(column.getIdentifier()!=null) {
					//SI SE UTILIZA UN HEADER ES GENERICO
					//column.setHeaderRenderer(new HeaderRenderer(column.getIdentifier().toString()));
				}
				
				if(column.getIdentifier()!=null && column.getIdentifier().equals(Constantes2.S_ELI)) {
					continue;
				}
				
				if(column.getIdentifier()!=null && column.getIdentifier().equals(Constantes2.S_SELECCIONAR)) {
					if(!DetaNotaCreditoJInternalFrame.ISBINDING_MANUAL_TABLA) {
						column.setPreferredWidth(50); 	 
						column.setWidth(50); 	 
						column.setMinWidth(50); 	
						column.setMaxWidth(50); 
						
						this.iWidthTableDefinicion+=50;
					}
					
				} else {
					if(!DetaNotaCreditoJInternalFrame.ISBINDING_MANUAL_TABLA) {
						column.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
						column.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
						column.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 	
						column.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 	
						
						this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
					}
				}
			}
		}
		
		this.jTableDatosDetaNotaCredito.setSelectionBackground(FuncionesSwing.getColorSelectedBackground());
		this.jTableDatosDetaNotaCredito.setSelectionForeground(FuncionesSwing.getColorSelectedForeground());
		
		/*
		this.jTableDatosDetaNotaCredito.setDefaultRenderer(Object.class, new DefaultTableCellRenderer() {
			private static final long serialVersionUID = 1L;
			
		    @Override
		    public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
		        final Component component= super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
		        //POR DEFECTO ES MEJOR, SE PIERDE DATOS AL SELECCIONAR BLANCO LETRAS BLANCAS
				component.setBackground(row % 2 == 0 ? FuncionesSwing.getColorTextFields(Constantes2.S_FONDOCONTROL_COLOR) : Funciones2.getColorFilaTabla2()); //FuncionesSwing.getColorTextFields(Constantes2.S_FONDOCONTROL_COLOR)
				component.setForeground(Funciones2.getColorTextoFilaTabla1());
				
				try {
		        	int iSize=-999;
		        	
		        	if(conTotales) {
						//FILA TOTALES OTRO COLOR, SI TABLA NO ES UNO A UNO
			        	if(Constantes.ISUSAEJBLOGICLAYER) {
							iSize=detanotacreditoLogic.getDetaNotaCreditos().size()-1;
								
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							iSize=detanotacreditos.size()-1;
						}
						
						if(iSize==row) {
							component.setBackground(Funciones2.getColorFilaTablaTotales());
						}
		        	}
					
					//POR EFICIENCIA NO UTILIZAR					
					//if (component instanceof JComponent) {
		            //    JComponent jcomponent = (JComponent) component;		                 		                
		        	//}				
					
				} catch (Exception e) {
					e.printStackTrace();
				}
				
		        return component;
		    }
		});
		*/
		
		//ESTA EN LA DEFINICION DE LA TABLA
		//this.jTableDatosDetaNotaCredito.setRowHeight(Constantes.ISWING_ALTO_FILA_TABLA);
		
		/*
		column=this.jTableDatosDetaNotaCredito.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSistema,Constantes2.S_SELECCIONAR));
		
		if(column!=null) {
			column.setPreferredWidth(25); 	 
			column.setWidth(25); 	 
			column.setMinWidth(25); 	
		}
		*/
			
			//CopyTableToTableTotal();
		} else {
			
			this.actualizarVisualTableDatosDetaNotaCredito();
			
		}
	}
	
	/*
	//COPY_TABLES
	/* FALTARIA RESOLVER:
	   1 SOLO SCROLL PARA 2 TABLAS
	   COPIA EXACTA DE COLUMNAS DE UNA TABLA A OTRA, SI SE MODIFICA TAMANIO TAMBIEN LA OTRA
	*/
	
	public void jButtonIdActionPerformed(ActionEvent evt,int rowIndex,Boolean esRelaciones,Boolean esEliminar) { 
		try {
			if(!esEliminar) {
				this.estaModoSeleccionar=true;
				
				//this.isEsNuevoDetaNotaCredito=false;
					
				DetaNotaCreditoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.SELECTED,"FORM",this.detanotacredito,new Object(),this.detanotacreditoParameterGeneral,this.detanotacreditoReturnGeneral);
			
				if(this.detanotacreditoSessionBean.getConGuardarRelaciones()) {
					this.dStart=(double)System.currentTimeMillis();
				}
				
				if(this.jInternalFrameDetalleFormDetaNotaCredito==null) {
					this.inicializarFormDetalle();
				}
				
				this.inicializarInvalidValues();
				
				int intSelectedRow = 0;
				
				if(rowIndex>=0) {
					intSelectedRow=rowIndex;
					this.jTableDatosDetaNotaCredito.getSelectionModel().setSelectionInterval(intSelectedRow, intSelectedRow);
				} else {	
					intSelectedRow=this.jTableDatosDetaNotaCredito.getSelectedRow();	       
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacredito =(DetaNotaCredito) this.detanotacreditoLogic.getDetaNotaCreditos().toArray()[this.jTableDatosDetaNotaCredito.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.detanotacredito =(DetaNotaCredito) this.detanotacreditos.toArray()[this.jTableDatosDetaNotaCredito.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//PUEDE SER PARA DUPLICADO O NUEVO TABLA
				
				if(this.detanotacredito.getsType().equals("DUPLICADO")
				   || this.detanotacredito.getsType().equals("NUEVO_GUARDAR_CAMBIOS")) {
					
					this.isEsNuevoDetaNotaCredito=true;
				
				} else {
					this.isEsNuevoDetaNotaCredito=false;	
				}
				
				//CONTROL VERSION ANTERIOR
				/*
				if(!this.detanotacreditoSessionBean.getEsGuardarRelacionado()) {
					if(this.detanotacredito.getId()>=0 && !this.detanotacredito.getIsNew()) {						
						this.isEsNuevoDetaNotaCredito=false;
						
					} else {
						this.isEsNuevoDetaNotaCredito=true;
					}
					
				} else {
					//CONTROLAR PARA RELACIONADO
				}
				*/
				
				//ESTABLECE SI ES RELACIONADO O NO 
				this.habilitarDeshabilitarTipoMantenimientoDetaNotaCredito(esRelaciones);						
				
				this.seleccionarDetaNotaCredito(evt,null,rowIndex);
				
				//SELECCIONA ACTUAL PERO AUN NO SE HA INGRESADO AL SISTEMA
				//SE DESHABILITA POR GUARDAR CAMBIOS
				/*
				if(this.detanotacredito.getId()<0) {
					this.isEsNuevoDetaNotaCredito=true;
				}
				*/
				
				if(!this.esParaBusquedaForeignKey) {
					this.modificarDetaNotaCredito(evt,rowIndex,esRelaciones);
				} else {
					this.seleccionarDetaNotaCredito(evt,rowIndex);
				}	
				
				if(this.detanotacreditoSessionBean.getConGuardarRelaciones()) {
					this.dEnd=(double)System.currentTimeMillis();					
					this.dDif=this.dEnd - this.dStart;
					
					if(Constantes.ISDEVELOPING) {
						System.out.println("Tiempo(ms) Seleccion DetaNotaCredito: " + this.dDif); 
					}
				}								
				
				DetaNotaCreditoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.SELECTED,"FORM",this.detanotacredito,new Object(),this.detanotacreditoParameterGeneral,this.detanotacreditoReturnGeneral);
				
			} else {
				this.estaModoEliminarGuardarCambios=true;
				
				this.seleccionarDetaNotaCredito(evt,null,rowIndex);
				
				if(this.permiteMantenimiento(this.detanotacredito)) {
					if(this.detanotacredito.getId()>0) {
						this.detanotacredito.setIsDeleted(true);
						
						this.detanotacreditosEliminados.add(this.detanotacredito);
					}
					
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						this.detanotacreditoLogic.getDetaNotaCreditos().remove(this.detanotacredito);
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						this.detanotacreditos.remove(this.detanotacredito);				
					}
					
					
					((DetaNotaCreditoModel) this.jTableDatosDetaNotaCredito.getModel()).fireTableRowsDeleted(rowIndex,rowIndex);
					
					this.actualizarFilaTotales();
					
					this.inicializarActualizarBindingTablaDetaNotaCredito(false);					
				}								
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException2(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoSeleccionar=false;				
			this.estaModoEliminarGuardarCambios=false;
		}
	}
	
	
	public void seleccionarDetaNotaCredito(ActionEvent evt,javax.swing.event.ListSelectionEvent evt2,int rowIndex) throws Exception { 
		try {
			//SI PUEDE SER NUEVO Y SELECCIONAR (PARA DUPLICAR Y NUEVO TABLA)
			//if(!this.isEsNuevoDetaNotaCredito) {
			
			if(this.jInternalFrameDetalleFormDetaNotaCredito==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
				int intSelectedRow = 0;
				
				if(rowIndex>=0) {
					intSelectedRow=rowIndex;
					this.jTableDatosDetaNotaCredito.getSelectionModel().setSelectionInterval(intSelectedRow, intSelectedRow);
				} else {	
					intSelectedRow=this.jTableDatosDetaNotaCredito.getSelectedRow();	       
				}
				
				//CUANDO SE RECARGA TABLA TAMBIEN SE SELECCIONA PERO CON -1 POR LO QUE SE NECESITA VALIDAR ANTES
				if(intSelectedRow<0) {
					return;
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacredito =(DetaNotaCredito) this.detanotacreditoLogic.getDetaNotaCreditos().toArray()[this.jTableDatosDetaNotaCredito.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.detanotacredito =(DetaNotaCredito) this.detanotacreditos.toArray()[this.jTableDatosDetaNotaCredito.convertRowIndexToModel(intSelectedRow)];
				}
				
				if(DetaNotaCreditoJInternalFrame.ISBINDING_MANUAL_TABLA) {
					this.setVariablesObjetoActualToFormularioDetaNotaCredito(this.detanotacredito);
				}
				
				//ARCHITECTURE
				try {
					

					//Empresa
					if(!this.detanotacreditoConstantesFunciones.cargarid_empresaDetaNotaCredito || this.detanotacreditoConstantesFunciones.event_dependid_empresaDetaNotaCredito) {
						//this.cargarCombosEmpresasForeignKeyLista(" where id="+this.detanotacredito.getid_empresa());
									//this.inicializarActualizarBindingDetaNotaCredito(false,false);
						this.empresasForeignKey=new ArrayList<Empresa>();

						if(detanotacredito.getEmpresa()!=null) {
							this.empresasForeignKey.add(detanotacredito.getEmpresa());
						}

						this.addItemDefectoCombosForeignKeyEmpresa();
						this.cargarCombosFrameEmpresasForeignKey("Todos");
					}
					this.setActualEmpresaForeignKey(this.detanotacredito.getid_empresa(),false,"Formulario");

					//Sucursal
					if(!this.detanotacreditoConstantesFunciones.cargarid_sucursalDetaNotaCredito || this.detanotacreditoConstantesFunciones.event_dependid_sucursalDetaNotaCredito) {
						//this.cargarCombosSucursalsForeignKeyLista(" where id="+this.detanotacredito.getid_sucursal());
									//this.inicializarActualizarBindingDetaNotaCredito(false,false);
						this.sucursalsForeignKey=new ArrayList<Sucursal>();

						if(detanotacredito.getSucursal()!=null) {
							this.sucursalsForeignKey.add(detanotacredito.getSucursal());
						}

						this.addItemDefectoCombosForeignKeySucursal();
						this.cargarCombosFrameSucursalsForeignKey("Todos");
					}
					this.setActualSucursalForeignKey(this.detanotacredito.getid_sucursal(),false,"Formulario");

					//Ejercicio
					if(!this.detanotacreditoConstantesFunciones.cargarid_ejercicioDetaNotaCredito || this.detanotacreditoConstantesFunciones.event_dependid_ejercicioDetaNotaCredito) {
						//this.cargarCombosEjerciciosForeignKeyLista(" where id="+this.detanotacredito.getid_ejercicio());
									//this.inicializarActualizarBindingDetaNotaCredito(false,false);
						this.ejerciciosForeignKey=new ArrayList<Ejercicio>();

						if(detanotacredito.getEjercicio()!=null) {
							this.ejerciciosForeignKey.add(detanotacredito.getEjercicio());
						}

						this.addItemDefectoCombosForeignKeyEjercicio();
						this.cargarCombosFrameEjerciciosForeignKey("Todos");
					}
					this.setActualEjercicioForeignKey(this.detanotacredito.getid_ejercicio(),false,"Formulario");

					//Periodo
					if(!this.detanotacreditoConstantesFunciones.cargarid_periodoDetaNotaCredito || this.detanotacreditoConstantesFunciones.event_dependid_periodoDetaNotaCredito) {
						//this.cargarCombosPeriodosForeignKeyLista(" where id="+this.detanotacredito.getid_periodo());
									//this.inicializarActualizarBindingDetaNotaCredito(false,false);
						this.periodosForeignKey=new ArrayList<Periodo>();

						if(detanotacredito.getPeriodo()!=null) {
							this.periodosForeignKey.add(detanotacredito.getPeriodo());
						}

						this.addItemDefectoCombosForeignKeyPeriodo();
						this.cargarCombosFramePeriodosForeignKey("Todos");
					}
					this.setActualPeriodoForeignKey(this.detanotacredito.getid_periodo(),false,"Formulario");

					//Anio
					if(!this.detanotacreditoConstantesFunciones.cargarid_anioDetaNotaCredito || this.detanotacreditoConstantesFunciones.event_dependid_anioDetaNotaCredito) {
						//this.cargarCombosAniosForeignKeyLista(" where id="+this.detanotacredito.getid_anio());
									//this.inicializarActualizarBindingDetaNotaCredito(false,false);
						this.aniosForeignKey=new ArrayList<Anio>();

						if(detanotacredito.getAnio()!=null) {
							this.aniosForeignKey.add(detanotacredito.getAnio());
						}

						this.addItemDefectoCombosForeignKeyAnio();
						this.cargarCombosFrameAniosForeignKey("Todos");
					}
					this.setActualAnioForeignKey(this.detanotacredito.getid_anio(),false,"Formulario");

					//Mes
					if(!this.detanotacreditoConstantesFunciones.cargarid_mesDetaNotaCredito || this.detanotacreditoConstantesFunciones.event_dependid_mesDetaNotaCredito) {
						//this.cargarCombosMessForeignKeyLista(" where id="+this.detanotacredito.getid_mes());
									//this.inicializarActualizarBindingDetaNotaCredito(false,false);
						this.messForeignKey=new ArrayList<Mes>();

						if(detanotacredito.getMes()!=null) {
							this.messForeignKey.add(detanotacredito.getMes());
						}

						this.addItemDefectoCombosForeignKeyMes();
						this.cargarCombosFrameMessForeignKey("Todos");
					}
					this.setActualMesForeignKey(this.detanotacredito.getid_mes(),false,"Formulario");

					//NotaCredito
					if(!this.detanotacreditoConstantesFunciones.cargarid_nota_creditoDetaNotaCredito || this.detanotacreditoConstantesFunciones.event_dependid_nota_creditoDetaNotaCredito) {
						//this.cargarCombosNotaCreditosForeignKeyLista(" where id="+this.detanotacredito.getid_nota_credito());
									//this.inicializarActualizarBindingDetaNotaCredito(false,false);
						this.notacreditosForeignKey=new ArrayList<NotaCredito>();

						if(detanotacredito.getNotaCredito()!=null) {
							this.notacreditosForeignKey.add(detanotacredito.getNotaCredito());
						}

						this.addItemDefectoCombosForeignKeyNotaCredito();
						this.cargarCombosFrameNotaCreditosForeignKey("Todos");
					}
					this.setActualNotaCreditoForeignKey(this.detanotacredito.getid_nota_credito(),false,"Formulario");

					//Bodega
					if(!this.detanotacreditoConstantesFunciones.cargarid_bodegaDetaNotaCredito || this.detanotacreditoConstantesFunciones.event_dependid_bodegaDetaNotaCredito) {
						//this.cargarCombosBodegasForeignKeyLista(" where id="+this.detanotacredito.getid_bodega());
									//this.inicializarActualizarBindingDetaNotaCredito(false,false);
						this.bodegasForeignKey=new ArrayList<Bodega>();

						if(detanotacredito.getBodega()!=null) {
							this.bodegasForeignKey.add(detanotacredito.getBodega());
						}

						this.addItemDefectoCombosForeignKeyBodega();
						this.cargarCombosFrameBodegasForeignKey("Todos");
					}
					this.setActualBodegaForeignKey(this.detanotacredito.getid_bodega(),false,"Formulario");

					//Producto
					if(!this.detanotacreditoConstantesFunciones.cargarid_productoDetaNotaCredito || this.detanotacreditoConstantesFunciones.event_dependid_productoDetaNotaCredito) {
						//this.cargarCombosProductosForeignKeyLista(" where id="+this.detanotacredito.getid_producto());
									//this.inicializarActualizarBindingDetaNotaCredito(false,false);
						this.productosForeignKey=new ArrayList<Producto>();

						if(detanotacredito.getProducto()!=null) {
							this.productosForeignKey.add(detanotacredito.getProducto());
						}

						this.addItemDefectoCombosForeignKeyProducto();
						this.cargarCombosFrameProductosForeignKey("Todos");
					}
					this.setActualProductoForeignKey(this.detanotacredito.getid_producto(),false,"Formulario");

					//Unidad
					if(!this.detanotacreditoConstantesFunciones.cargarid_unidadDetaNotaCredito || this.detanotacreditoConstantesFunciones.event_dependid_unidadDetaNotaCredito) {
						//this.cargarCombosUnidadsForeignKeyLista(" where id="+this.detanotacredito.getid_unidad());
									//this.inicializarActualizarBindingDetaNotaCredito(false,false);
						this.unidadsForeignKey=new ArrayList<Unidad>();

						if(detanotacredito.getUnidad()!=null) {
							this.unidadsForeignKey.add(detanotacredito.getUnidad());
						}

						this.addItemDefectoCombosForeignKeyUnidad();
						this.cargarCombosFrameUnidadsForeignKey("Todos");
					}
					this.setActualUnidadForeignKey(this.detanotacredito.getid_unidad(),false,"Formulario");

					//TipoDetaNotaCredito
					if(!this.detanotacreditoConstantesFunciones.cargarid_tipo_deta_nota_creditoDetaNotaCredito || this.detanotacreditoConstantesFunciones.event_dependid_tipo_deta_nota_creditoDetaNotaCredito) {
						//this.cargarCombosTipoDetaNotaCreditosForeignKeyLista(" where id="+this.detanotacredito.getid_tipo_deta_nota_credito());
									//this.inicializarActualizarBindingDetaNotaCredito(false,false);
						this.tipodetanotacreditosForeignKey=new ArrayList<TipoDetaNotaCredito>();

						if(detanotacredito.getTipoDetaNotaCredito()!=null) {
							this.tipodetanotacreditosForeignKey.add(detanotacredito.getTipoDetaNotaCredito());
						}

						this.addItemDefectoCombosForeignKeyTipoDetaNotaCredito();
						this.cargarCombosFrameTipoDetaNotaCreditosForeignKey("Todos");
					}
					this.setActualTipoDetaNotaCreditoForeignKey(this.detanotacredito.getid_tipo_deta_nota_credito(),false,"Formulario");

					//TipoDevolucionEmpresa
					if(!this.detanotacreditoConstantesFunciones.cargarid_tipo_devolucion_empresaDetaNotaCredito || this.detanotacreditoConstantesFunciones.event_dependid_tipo_devolucion_empresaDetaNotaCredito) {
						//this.cargarCombosTipoDevolucionEmpresasForeignKeyLista(" where id="+this.detanotacredito.getid_tipo_devolucion_empresa());
									//this.inicializarActualizarBindingDetaNotaCredito(false,false);
						this.tipodevolucionempresasForeignKey=new ArrayList<TipoDevolucionEmpresa>();

						if(detanotacredito.getTipoDevolucionEmpresa()!=null) {
							this.tipodevolucionempresasForeignKey.add(detanotacredito.getTipoDevolucionEmpresa());
						}

						this.addItemDefectoCombosForeignKeyTipoDevolucionEmpresa();
						this.cargarCombosFrameTipoDevolucionEmpresasForeignKey("Todos");
					}
					this.setActualTipoDevolucionEmpresaForeignKey(this.detanotacredito.getid_tipo_devolucion_empresa(),false,"Formulario");

					//CentroCosto
					if(!this.detanotacreditoConstantesFunciones.cargarid_centro_costoDetaNotaCredito || this.detanotacreditoConstantesFunciones.event_dependid_centro_costoDetaNotaCredito) {
						//this.cargarCombosCentroCostosForeignKeyLista(" where id="+this.detanotacredito.getid_centro_costo());
									//this.inicializarActualizarBindingDetaNotaCredito(false,false);
						this.centrocostosForeignKey=new ArrayList<CentroCosto>();

						if(detanotacredito.getCentroCosto()!=null) {
							this.centrocostosForeignKey.add(detanotacredito.getCentroCosto());
						}

						this.addItemDefectoCombosForeignKeyCentroCosto();
						this.cargarCombosFrameCentroCostosForeignKey("Todos");
					}
					this.setActualCentroCostoForeignKey(this.detanotacredito.getid_centro_costo(),false,"Formulario");

					//Empaque
					if(!this.detanotacreditoConstantesFunciones.cargarid_empaqueDetaNotaCredito || this.detanotacreditoConstantesFunciones.event_dependid_empaqueDetaNotaCredito) {
						//this.cargarCombosEmpaquesForeignKeyLista(" where id="+this.detanotacredito.getid_empaque());
									//this.inicializarActualizarBindingDetaNotaCredito(false,false);
						this.empaquesForeignKey=new ArrayList<Empaque>();

						if(detanotacredito.getEmpaque()!=null) {
							this.empaquesForeignKey.add(detanotacredito.getEmpaque());
						}

						this.addItemDefectoCombosForeignKeyEmpaque();
						this.cargarCombosFrameEmpaquesForeignKey("Todos");
					}
					this.setActualEmpaqueForeignKey(this.detanotacredito.getid_empaque(),false,"Formulario");
				} catch(Exception e) {
					throw e;
				}
				
				this.actualizarEstadoCeldasBotonesDetaNotaCredito("s", this.isGuardarCambiosEnLote, this.isEsMantenimientoRelacionado);
				
				//NO FUNCIONA BINDING PERO SE MANTIENE
				this.inicializarActualizarBindingBotonesDetaNotaCredito(false) ;
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualDetaNotaCredito() ;
			//}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setVariablesObjetoActualToFormularioTodoDetaNotaCredito(DetaNotaCredito detanotacredito) throws Exception { 
		this.setVariablesObjetoActualToFormularioTodoDetaNotaCredito(detanotacredito,false,"NINGUNO");
	}
	
	public void setVariablesObjetoActualToFormularioTodoDetaNotaCredito(DetaNotaCredito detanotacredito,Boolean conCargarListasDesdeObjetoActual,String sTipoEvento) throws Exception { 
		this.setVariablesObjetoActualToFormularioDetaNotaCredito(detanotacredito);
		
		if(conCargarListasDesdeObjetoActual) {
			this.setVariablesObjetoActualToListasForeignKeyDetaNotaCredito(detanotacredito,sTipoEvento);
		}
		
		this.setVariablesObjetoActualToFormularioForeignKeyDetaNotaCredito(detanotacredito);
	}
	
	public void setVariablesObjetoActualToFormularioDetaNotaCredito(DetaNotaCredito detanotacredito) throws Exception { 
		try {			
			Image imageActual=null;
			ImageIcon imageIcon = null;
			
			if(this.jInternalFrameDetalleFormDetaNotaCredito==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			
			this.jInternalFrameDetalleFormDetaNotaCredito.jLabelidDetaNotaCredito.setText(detanotacredito.getId().toString());
			this.jInternalFrameDetalleFormDetaNotaCredito.jTextAreadescripcionDetaNotaCredito.setText(detanotacredito.getdescripcion());
			this.jInternalFrameDetalleFormDetaNotaCredito.jTextFieldcantidadDetaNotaCredito.setText(detanotacredito.getcantidad().toString());
			this.jInternalFrameDetalleFormDetaNotaCredito.jTextFieldprecioDetaNotaCredito.setText(detanotacredito.getprecio().toString());
			this.jInternalFrameDetalleFormDetaNotaCredito.jTextFieldmontoDetaNotaCredito.setText(detanotacredito.getmonto().toString());
			this.jInternalFrameDetalleFormDetaNotaCredito.jTextFieldcostoDetaNotaCredito.setText(detanotacredito.getcosto().toString());
			this.jInternalFrameDetalleFormDetaNotaCredito.jTextFielddescuentoDetaNotaCredito.setText(detanotacredito.getdescuento().toString());
			this.jInternalFrameDetalleFormDetaNotaCredito.jTextFielddescuento2DetaNotaCredito.setText(detanotacredito.getdescuento2().toString());
			this.jInternalFrameDetalleFormDetaNotaCredito.jTextFieldimpuestoDetaNotaCredito.setText(detanotacredito.getimpuesto().toString());
			this.jInternalFrameDetalleFormDetaNotaCredito.jTextFieldporcen_ivaDetaNotaCredito.setText(detanotacredito.getporcen_iva().toString());
			this.jInternalFrameDetalleFormDetaNotaCredito.jTextFieldporcen_descuenDetaNotaCredito.setText(detanotacredito.getporcen_descuen().toString());
			this.jInternalFrameDetalleFormDetaNotaCredito.jTextFieldporcen_iceDetaNotaCredito.setText(detanotacredito.getporcen_ice().toString());
			this.jInternalFrameDetalleFormDetaNotaCredito.jTextFieldsub_totalDetaNotaCredito.setText(detanotacredito.getsub_total().toString());
			this.jInternalFrameDetalleFormDetaNotaCredito.jTextFieldtotalDetaNotaCredito.setText(detanotacredito.gettotal().toString());
			this.jInternalFrameDetalleFormDetaNotaCredito.jCheckBoxincluye_impuestoDetaNotaCredito.setSelected(detanotacredito.getincluye_impuesto());
			this.jInternalFrameDetalleFormDetaNotaCredito.jDateChooserfecha_emisionDetaNotaCredito.setDate(detanotacredito.getfecha_emision());
			this.jInternalFrameDetalleFormDetaNotaCredito.jTextFieldcodigo_loteDetaNotaCredito.setText(detanotacredito.getcodigo_lote());
			this.jInternalFrameDetalleFormDetaNotaCredito.jTextFieldnumero_cajaDetaNotaCredito.setText(detanotacredito.getnumero_caja());
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);
		}
	}
		
	public void actualizarInformacion(String sTipo,DetaNotaCredito detanotacreditoLocal) throws Exception {
		this.actualizarInformacion(sTipo,false,detanotacreditoLocal);
	}	
	
	public void actualizarInformacion(String sTipo,Boolean conParametroObjeto,DetaNotaCredito detanotacreditoLocal) throws Exception {
		
		if(!conParametroObjeto) {
			if(!this.getEsControlTabla()) {
				detanotacreditoLocal=this.detanotacredito;
			} else {
				detanotacreditoLocal=this.detanotacreditoAnterior;
			}
		}
		
		if(this.permiteMantenimiento(detanotacreditoLocal)) {
			if(sTipo.equals("EVENTO_CONTROL")) { // || sTipo.equals("EVENTO_NUEVO")
				if(!this.esControlTabla) {
					this.setVariablesFormularioToObjetoActualTodoDetaNotaCredito(detanotacreditoLocal,true);
					
					if(detanotacreditoSessionBean.getConGuardarRelaciones()) {
						this.actualizarRelaciones(detanotacreditoLocal);
					}
				}
			
			} else if(sTipo.equals("INFO_PADRE")) {
				
				if(this.detanotacreditoSessionBean.getEsGuardarRelacionado()) {
					this.actualizarRelacionFkPadreActual(detanotacreditoLocal);
				}
			}
		}
	}
	
	public void setVariablesFormularioToObjetoActualTodoDetaNotaCredito(DetaNotaCredito detanotacredito,Boolean conColumnasBase) throws Exception { 
		this.setVariablesFormularioToObjetoActualDetaNotaCredito(detanotacredito,conColumnasBase);
		this.setVariablesFormularioToObjetoActualForeignKeysDetaNotaCredito(detanotacredito);
	}
	
	public void setVariablesFormularioToObjetoActualDetaNotaCredito(DetaNotaCredito detanotacredito,Boolean conColumnasBase) throws Exception { 
		this.setVariablesFormularioToObjetoActualDetaNotaCredito(detanotacredito,conColumnasBase,true);
	}
	
	public void setVariablesFormularioToObjetoActualDetaNotaCredito(DetaNotaCredito detanotacredito,Boolean conColumnasBase,Boolean conInicializarInvalidValues) throws Exception { 
		String sMensajeCampoActual="";
		Boolean estaValidado=true;
		try {
			
			if(this.jInternalFrameDetalleFormDetaNotaCredito==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			if(conInicializarInvalidValues) {
				this.inicializarInvalidValues();
			}
			
			

		try {
			if(this.jInternalFrameDetalleFormDetaNotaCredito.jLabelidDetaNotaCredito.getText()==null || this.jInternalFrameDetalleFormDetaNotaCredito.jLabelidDetaNotaCredito.getText()=="" || this.jInternalFrameDetalleFormDetaNotaCredito.jLabelidDetaNotaCredito.getText()=="Id") {
				this.jInternalFrameDetalleFormDetaNotaCredito.jLabelidDetaNotaCredito.setText("0");
			}

			if(conColumnasBase) {detanotacredito.setId(Long.parseLong(this.jInternalFrameDetalleFormDetaNotaCredito.jLabelidDetaNotaCredito.getText()));}
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+DetaNotaCreditoConstantesFunciones.LABEL_ID+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetaNotaCredito.jLabelIdDetaNotaCredito,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			detanotacredito.setdescripcion(this.jInternalFrameDetalleFormDetaNotaCredito.jTextAreadescripcionDetaNotaCredito.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+DetaNotaCreditoConstantesFunciones.LABEL_DESCRIPCION+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetaNotaCredito.jLabeldescripcionDetaNotaCredito,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			detanotacredito.setcantidad(Integer.parseInt(this.jInternalFrameDetalleFormDetaNotaCredito.jTextFieldcantidadDetaNotaCredito.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+DetaNotaCreditoConstantesFunciones.LABEL_CANTIDAD+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetaNotaCredito.jLabelcantidadDetaNotaCredito,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			detanotacredito.setprecio(Double.parseDouble(this.jInternalFrameDetalleFormDetaNotaCredito.jTextFieldprecioDetaNotaCredito.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+DetaNotaCreditoConstantesFunciones.LABEL_PRECIO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetaNotaCredito.jLabelprecioDetaNotaCredito,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			detanotacredito.setmonto(Double.parseDouble(this.jInternalFrameDetalleFormDetaNotaCredito.jTextFieldmontoDetaNotaCredito.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+DetaNotaCreditoConstantesFunciones.LABEL_MONTO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetaNotaCredito.jLabelmontoDetaNotaCredito,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			detanotacredito.setcosto(Double.parseDouble(this.jInternalFrameDetalleFormDetaNotaCredito.jTextFieldcostoDetaNotaCredito.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+DetaNotaCreditoConstantesFunciones.LABEL_COSTO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetaNotaCredito.jLabelcostoDetaNotaCredito,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			detanotacredito.setdescuento(Double.parseDouble(this.jInternalFrameDetalleFormDetaNotaCredito.jTextFielddescuentoDetaNotaCredito.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+DetaNotaCreditoConstantesFunciones.LABEL_DESCUENTO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetaNotaCredito.jLabeldescuentoDetaNotaCredito,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			detanotacredito.setdescuento2(Double.parseDouble(this.jInternalFrameDetalleFormDetaNotaCredito.jTextFielddescuento2DetaNotaCredito.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+DetaNotaCreditoConstantesFunciones.LABEL_DESCUENTO2+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetaNotaCredito.jLabeldescuento2DetaNotaCredito,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			detanotacredito.setimpuesto(Double.parseDouble(this.jInternalFrameDetalleFormDetaNotaCredito.jTextFieldimpuestoDetaNotaCredito.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+DetaNotaCreditoConstantesFunciones.LABEL_IMPUESTO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetaNotaCredito.jLabelimpuestoDetaNotaCredito,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			detanotacredito.setporcen_iva(Double.parseDouble(this.jInternalFrameDetalleFormDetaNotaCredito.jTextFieldporcen_ivaDetaNotaCredito.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+DetaNotaCreditoConstantesFunciones.LABEL_PORCENIVA+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetaNotaCredito.jLabelporcen_ivaDetaNotaCredito,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			detanotacredito.setporcen_descuen(Double.parseDouble(this.jInternalFrameDetalleFormDetaNotaCredito.jTextFieldporcen_descuenDetaNotaCredito.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+DetaNotaCreditoConstantesFunciones.LABEL_PORCENDESCUEN+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetaNotaCredito.jLabelporcen_descuenDetaNotaCredito,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			detanotacredito.setporcen_ice(Double.parseDouble(this.jInternalFrameDetalleFormDetaNotaCredito.jTextFieldporcen_iceDetaNotaCredito.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+DetaNotaCreditoConstantesFunciones.LABEL_PORCENICE+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetaNotaCredito.jLabelporcen_iceDetaNotaCredito,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			detanotacredito.setsub_total(Double.parseDouble(this.jInternalFrameDetalleFormDetaNotaCredito.jTextFieldsub_totalDetaNotaCredito.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+DetaNotaCreditoConstantesFunciones.LABEL_SUBTOTAL+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetaNotaCredito.jLabelsub_totalDetaNotaCredito,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			detanotacredito.settotal(Double.parseDouble(this.jInternalFrameDetalleFormDetaNotaCredito.jTextFieldtotalDetaNotaCredito.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+DetaNotaCreditoConstantesFunciones.LABEL_TOTAL+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetaNotaCredito.jLabeltotalDetaNotaCredito,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			detanotacredito.setincluye_impuesto(this.jInternalFrameDetalleFormDetaNotaCredito.jCheckBoxincluye_impuestoDetaNotaCredito.isSelected());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+DetaNotaCreditoConstantesFunciones.LABEL_INCLUYEIMPUESTO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetaNotaCredito.jLabelincluye_impuestoDetaNotaCredito,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			detanotacredito.setfecha_emision(this.jInternalFrameDetalleFormDetaNotaCredito.jDateChooserfecha_emisionDetaNotaCredito.getDate());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+DetaNotaCreditoConstantesFunciones.LABEL_FECHAEMISION+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetaNotaCredito.jLabelfecha_emisionDetaNotaCredito,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			detanotacredito.setcodigo_lote(this.jInternalFrameDetalleFormDetaNotaCredito.jTextFieldcodigo_loteDetaNotaCredito.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+DetaNotaCreditoConstantesFunciones.LABEL_CODIGOLOTE+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetaNotaCredito.jLabelcodigo_loteDetaNotaCredito,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			detanotacredito.setnumero_caja(this.jInternalFrameDetalleFormDetaNotaCredito.jTextFieldnumero_cajaDetaNotaCredito.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+DetaNotaCreditoConstantesFunciones.LABEL_NUMEROCAJA+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetaNotaCredito.jLabelnumero_cajaDetaNotaCredito,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}
			
			if(!estaValidado) {
				throw new Exception(sMensajeCampoActual);
			}
		} catch(NumberFormatException e) {
			throw new Exception(sMensajeCampoActual);
			//FuncionesSwing.manageException(this, e,logger,MovimientoInventarioConstantesFunciones.CLASSNAME);
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setVariablesForeignKeyObjetoBeanDefectoActualToObjetoActualDetaNotaCredito(DetaNotaCredito detanotacreditoBean,DetaNotaCredito detanotacredito,Boolean conDefault,Boolean conColumnasBase) throws Exception { 
		try {
			
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setCopiarVariablesObjetosDetaNotaCredito(DetaNotaCredito detanotacreditoOrigen,DetaNotaCredito detanotacredito,Boolean conDefault,Boolean conColumnasBase) throws Exception { 
		try {
			
			if(conColumnasBase) {if(conDefault || (!conDefault && detanotacreditoOrigen.getId()!=null && !detanotacreditoOrigen.getId().equals(0L))) {detanotacredito.setId(detanotacreditoOrigen.getId());}}
			if(conDefault || (!conDefault && detanotacreditoOrigen.getdescripcion()!=null && !detanotacreditoOrigen.getdescripcion().equals(""))) {detanotacredito.setdescripcion(detanotacreditoOrigen.getdescripcion());}
			if(conDefault || (!conDefault && detanotacreditoOrigen.getcantidad()!=null && !detanotacreditoOrigen.getcantidad().equals(0))) {detanotacredito.setcantidad(detanotacreditoOrigen.getcantidad());}
			if(conDefault || (!conDefault && detanotacreditoOrigen.getprecio()!=null && !detanotacreditoOrigen.getprecio().equals(0.0))) {detanotacredito.setprecio(detanotacreditoOrigen.getprecio());}
			if(conDefault || (!conDefault && detanotacreditoOrigen.getmonto()!=null && !detanotacreditoOrigen.getmonto().equals(0.0))) {detanotacredito.setmonto(detanotacreditoOrigen.getmonto());}
			if(conDefault || (!conDefault && detanotacreditoOrigen.getcosto()!=null && !detanotacreditoOrigen.getcosto().equals(0.0))) {detanotacredito.setcosto(detanotacreditoOrigen.getcosto());}
			if(conDefault || (!conDefault && detanotacreditoOrigen.getdescuento()!=null && !detanotacreditoOrigen.getdescuento().equals(0.0))) {detanotacredito.setdescuento(detanotacreditoOrigen.getdescuento());}
			if(conDefault || (!conDefault && detanotacreditoOrigen.getdescuento2()!=null && !detanotacreditoOrigen.getdescuento2().equals(0.0))) {detanotacredito.setdescuento2(detanotacreditoOrigen.getdescuento2());}
			if(conDefault || (!conDefault && detanotacreditoOrigen.getimpuesto()!=null && !detanotacreditoOrigen.getimpuesto().equals(0.0))) {detanotacredito.setimpuesto(detanotacreditoOrigen.getimpuesto());}
			if(conDefault || (!conDefault && detanotacreditoOrigen.getporcen_iva()!=null && !detanotacreditoOrigen.getporcen_iva().equals(0.0))) {detanotacredito.setporcen_iva(detanotacreditoOrigen.getporcen_iva());}
			if(conDefault || (!conDefault && detanotacreditoOrigen.getporcen_descuen()!=null && !detanotacreditoOrigen.getporcen_descuen().equals(0.0))) {detanotacredito.setporcen_descuen(detanotacreditoOrigen.getporcen_descuen());}
			if(conDefault || (!conDefault && detanotacreditoOrigen.getporcen_ice()!=null && !detanotacreditoOrigen.getporcen_ice().equals(0.0))) {detanotacredito.setporcen_ice(detanotacreditoOrigen.getporcen_ice());}
			if(conDefault || (!conDefault && detanotacreditoOrigen.getsub_total()!=null && !detanotacreditoOrigen.getsub_total().equals(0.0))) {detanotacredito.setsub_total(detanotacreditoOrigen.getsub_total());}
			if(conDefault || (!conDefault && detanotacreditoOrigen.gettotal()!=null && !detanotacreditoOrigen.gettotal().equals(0.0))) {detanotacredito.settotal(detanotacreditoOrigen.gettotal());}
			if(conDefault || (!conDefault && detanotacreditoOrigen.getincluye_impuesto()!=null && !detanotacreditoOrigen.getincluye_impuesto().equals(false))) {detanotacredito.setincluye_impuesto(detanotacreditoOrigen.getincluye_impuesto());}
			if(conDefault || (!conDefault && detanotacreditoOrigen.getfecha_emision()!=null && !detanotacreditoOrigen.getfecha_emision().equals(new Date()))) {detanotacredito.setfecha_emision(detanotacreditoOrigen.getfecha_emision());}
			if(conDefault || (!conDefault && detanotacreditoOrigen.getcodigo_lote()!=null && !detanotacreditoOrigen.getcodigo_lote().equals(""))) {detanotacredito.setcodigo_lote(detanotacreditoOrigen.getcodigo_lote());}
			if(conDefault || (!conDefault && detanotacreditoOrigen.getnumero_caja()!=null && !detanotacreditoOrigen.getnumero_caja().equals(""))) {detanotacredito.setnumero_caja(detanotacreditoOrigen.getnumero_caja());}
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);
		}
	}
	
	/*
	public void setVariablesObjetoBeanActualToFormularioDetaNotaCredito(DetaNotaCredito detanotacredito) throws Exception { 
		try {
			
			this.jInternalFrameDetalleFormDetaNotaCredito.jLabelidDetaNotaCredito.setText(detanotacredito.getId().toString());
			this.jInternalFrameDetalleFormDetaNotaCredito.jTextAreadescripcionDetaNotaCredito.setText(detanotacredito.getdescripcion());
			this.jInternalFrameDetalleFormDetaNotaCredito.jTextFieldcantidadDetaNotaCredito.setText(detanotacredito.getcantidad().toString());
			this.jInternalFrameDetalleFormDetaNotaCredito.jTextFieldprecioDetaNotaCredito.setText(detanotacredito.getprecio().toString());
			this.jInternalFrameDetalleFormDetaNotaCredito.jTextFieldmontoDetaNotaCredito.setText(detanotacredito.getmonto().toString());
			this.jInternalFrameDetalleFormDetaNotaCredito.jTextFieldcostoDetaNotaCredito.setText(detanotacredito.getcosto().toString());
			this.jInternalFrameDetalleFormDetaNotaCredito.jTextFielddescuentoDetaNotaCredito.setText(detanotacredito.getdescuento().toString());
			this.jInternalFrameDetalleFormDetaNotaCredito.jTextFielddescuento2DetaNotaCredito.setText(detanotacredito.getdescuento2().toString());
			this.jInternalFrameDetalleFormDetaNotaCredito.jTextFieldimpuestoDetaNotaCredito.setText(detanotacredito.getimpuesto().toString());
			this.jInternalFrameDetalleFormDetaNotaCredito.jTextFieldporcen_ivaDetaNotaCredito.setText(detanotacredito.getporcen_iva().toString());
			this.jInternalFrameDetalleFormDetaNotaCredito.jTextFieldporcen_descuenDetaNotaCredito.setText(detanotacredito.getporcen_descuen().toString());
			this.jInternalFrameDetalleFormDetaNotaCredito.jTextFieldporcen_iceDetaNotaCredito.setText(detanotacredito.getporcen_ice().toString());
			this.jInternalFrameDetalleFormDetaNotaCredito.jTextFieldsub_totalDetaNotaCredito.setText(detanotacredito.getsub_total().toString());
			this.jInternalFrameDetalleFormDetaNotaCredito.jTextFieldtotalDetaNotaCredito.setText(detanotacredito.gettotal().toString());
			this.jInternalFrameDetalleFormDetaNotaCredito.jCheckBoxincluye_impuestoDetaNotaCredito.setSelected(detanotacredito.getincluye_impuesto());
			this.jInternalFrameDetalleFormDetaNotaCredito.jDateChooserfecha_emisionDetaNotaCredito.setDate(detanotacredito.getfecha_emision());
			this.jInternalFrameDetalleFormDetaNotaCredito.jTextFieldcodigo_loteDetaNotaCredito.setText(detanotacredito.getcodigo_lote());
			this.jInternalFrameDetalleFormDetaNotaCredito.jTextFieldnumero_cajaDetaNotaCredito.setText(detanotacredito.getnumero_caja());
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesObjetoBeanActualToFormularioDetaNotaCredito(DetaNotaCreditoBean detanotacreditoBean) throws Exception { 
		try {
			
			this.jInternalFrameDetalleFormDetaNotaCredito.jLabelidDetaNotaCredito.setText(detanotacreditoBean.getId().toString());
			this.jInternalFrameDetalleFormDetaNotaCredito.jTextAreadescripcionDetaNotaCredito.setText(detanotacreditoBean.getdescripcion());
			this.jInternalFrameDetalleFormDetaNotaCredito.jTextFieldcantidadDetaNotaCredito.setText(detanotacreditoBean.getcantidad().toString());
			this.jInternalFrameDetalleFormDetaNotaCredito.jTextFieldprecioDetaNotaCredito.setText(detanotacreditoBean.getprecio().toString());
			this.jInternalFrameDetalleFormDetaNotaCredito.jTextFieldmontoDetaNotaCredito.setText(detanotacreditoBean.getmonto().toString());
			this.jInternalFrameDetalleFormDetaNotaCredito.jTextFieldcostoDetaNotaCredito.setText(detanotacreditoBean.getcosto().toString());
			this.jInternalFrameDetalleFormDetaNotaCredito.jTextFielddescuentoDetaNotaCredito.setText(detanotacreditoBean.getdescuento().toString());
			this.jInternalFrameDetalleFormDetaNotaCredito.jTextFielddescuento2DetaNotaCredito.setText(detanotacreditoBean.getdescuento2().toString());
			this.jInternalFrameDetalleFormDetaNotaCredito.jTextFieldimpuestoDetaNotaCredito.setText(detanotacreditoBean.getimpuesto().toString());
			this.jInternalFrameDetalleFormDetaNotaCredito.jTextFieldporcen_ivaDetaNotaCredito.setText(detanotacreditoBean.getporcen_iva().toString());
			this.jInternalFrameDetalleFormDetaNotaCredito.jTextFieldporcen_descuenDetaNotaCredito.setText(detanotacreditoBean.getporcen_descuen().toString());
			this.jInternalFrameDetalleFormDetaNotaCredito.jTextFieldporcen_iceDetaNotaCredito.setText(detanotacreditoBean.getporcen_ice().toString());
			this.jInternalFrameDetalleFormDetaNotaCredito.jTextFieldsub_totalDetaNotaCredito.setText(detanotacreditoBean.getsub_total().toString());
			this.jInternalFrameDetalleFormDetaNotaCredito.jTextFieldtotalDetaNotaCredito.setText(detanotacreditoBean.gettotal().toString());
			this.jInternalFrameDetalleFormDetaNotaCredito.jCheckBoxincluye_impuestoDetaNotaCredito.setSelected(detanotacreditoBean.getincluye_impuesto());
			this.jInternalFrameDetalleFormDetaNotaCredito.jDateChooserfecha_emisionDetaNotaCredito.setDate(detanotacreditoBean.getfecha_emision());
			this.jInternalFrameDetalleFormDetaNotaCredito.jTextFieldcodigo_loteDetaNotaCredito.setText(detanotacreditoBean.getcodigo_lote());
			this.jInternalFrameDetalleFormDetaNotaCredito.jTextFieldnumero_cajaDetaNotaCredito.setText(detanotacreditoBean.getnumero_caja());
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesObjetoReturnGeneralToBeanDetaNotaCredito(DetaNotaCreditoParameterReturnGeneral detanotacreditoReturnGeneral,DetaNotaCreditoBean detanotacreditoBean,Boolean conDefault) throws Exception { 
		try {
			DetaNotaCredito detanotacreditoLocal=new DetaNotaCredito();
			
			detanotacreditoLocal=detanotacreditoReturnGeneral.getDetaNotaCredito();
			
			
			if(conColumnasBase) {if(conDefault || (!conDefault && detanotacreditoLocal.getId()!=null && !detanotacreditoLocal.getId().equals(0L))) {detanotacreditoBean.setId(detanotacreditoLocal.getId());}}
			if(conDefault || (!conDefault && detanotacreditoLocal.getdescripcion()!=null && !detanotacreditoLocal.getdescripcion().equals(""))) {detanotacreditoBean.setdescripcion(detanotacreditoLocal.getdescripcion());}
			if(conDefault || (!conDefault && detanotacreditoLocal.getcantidad()!=null && !detanotacreditoLocal.getcantidad().equals(0))) {detanotacreditoBean.setcantidad(detanotacreditoLocal.getcantidad());}
			if(conDefault || (!conDefault && detanotacreditoLocal.getprecio()!=null && !detanotacreditoLocal.getprecio().equals(0.0))) {detanotacreditoBean.setprecio(detanotacreditoLocal.getprecio());}
			if(conDefault || (!conDefault && detanotacreditoLocal.getmonto()!=null && !detanotacreditoLocal.getmonto().equals(0.0))) {detanotacreditoBean.setmonto(detanotacreditoLocal.getmonto());}
			if(conDefault || (!conDefault && detanotacreditoLocal.getcosto()!=null && !detanotacreditoLocal.getcosto().equals(0.0))) {detanotacreditoBean.setcosto(detanotacreditoLocal.getcosto());}
			if(conDefault || (!conDefault && detanotacreditoLocal.getdescuento()!=null && !detanotacreditoLocal.getdescuento().equals(0.0))) {detanotacreditoBean.setdescuento(detanotacreditoLocal.getdescuento());}
			if(conDefault || (!conDefault && detanotacreditoLocal.getdescuento2()!=null && !detanotacreditoLocal.getdescuento2().equals(0.0))) {detanotacreditoBean.setdescuento2(detanotacreditoLocal.getdescuento2());}
			if(conDefault || (!conDefault && detanotacreditoLocal.getimpuesto()!=null && !detanotacreditoLocal.getimpuesto().equals(0.0))) {detanotacreditoBean.setimpuesto(detanotacreditoLocal.getimpuesto());}
			if(conDefault || (!conDefault && detanotacreditoLocal.getporcen_iva()!=null && !detanotacreditoLocal.getporcen_iva().equals(0.0))) {detanotacreditoBean.setporcen_iva(detanotacreditoLocal.getporcen_iva());}
			if(conDefault || (!conDefault && detanotacreditoLocal.getporcen_descuen()!=null && !detanotacreditoLocal.getporcen_descuen().equals(0.0))) {detanotacreditoBean.setporcen_descuen(detanotacreditoLocal.getporcen_descuen());}
			if(conDefault || (!conDefault && detanotacreditoLocal.getporcen_ice()!=null && !detanotacreditoLocal.getporcen_ice().equals(0.0))) {detanotacreditoBean.setporcen_ice(detanotacreditoLocal.getporcen_ice());}
			if(conDefault || (!conDefault && detanotacreditoLocal.getsub_total()!=null && !detanotacreditoLocal.getsub_total().equals(0.0))) {detanotacreditoBean.setsub_total(detanotacreditoLocal.getsub_total());}
			if(conDefault || (!conDefault && detanotacreditoLocal.gettotal()!=null && !detanotacreditoLocal.gettotal().equals(0.0))) {detanotacreditoBean.settotal(detanotacreditoLocal.gettotal());}
			if(conDefault || (!conDefault && detanotacreditoLocal.getincluye_impuesto()!=null && !detanotacreditoLocal.getincluye_impuesto().equals(false))) {detanotacreditoBean.setincluye_impuesto(detanotacreditoLocal.getincluye_impuesto());}
			if(conDefault || (!conDefault && detanotacreditoLocal.getfecha_emision()!=null && !detanotacreditoLocal.getfecha_emision().equals(new Date()))) {detanotacreditoBean.setfecha_emision(detanotacreditoLocal.getfecha_emision());}
			if(conDefault || (!conDefault && detanotacreditoLocal.getcodigo_lote()!=null && !detanotacreditoLocal.getcodigo_lote().equals(""))) {detanotacreditoBean.setcodigo_lote(detanotacreditoLocal.getcodigo_lote());}
			if(conDefault || (!conDefault && detanotacreditoLocal.getnumero_caja()!=null && !detanotacreditoLocal.getnumero_caja().equals(""))) {detanotacreditoBean.setnumero_caja(detanotacreditoLocal.getnumero_caja());}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	@SuppressWarnings("rawtypes")
	public static void setActualComboBoxDetaNotaCreditoGenerico(Long idDetaNotaCreditoSeleccionado,JComboBox jComboBoxDetaNotaCredito,List<DetaNotaCredito> detanotacreditosLocal)throws Exception {
		try {
			DetaNotaCredito  detanotacreditoTemp=null;

			for(DetaNotaCredito detanotacreditoAux:detanotacreditosLocal) {
				if(detanotacreditoAux.getId()!=null && detanotacreditoAux.getId().equals(idDetaNotaCreditoSeleccionado)) {
					detanotacreditoTemp=detanotacreditoAux;
					break;
				}
			}

			jComboBoxDetaNotaCredito.setSelectedItem(detanotacreditoTemp);

		} catch(Exception e) {
			throw e;
		}
	}
	
	@SuppressWarnings("rawtypes")
	public static void setHotKeysComboBoxDetaNotaCreditoGenerico(JComboBox jComboBoxDetaNotaCredito,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda)throws Exception {
		try {
			//GLOBAL(id_empresa,id_sucursal,id_ejercicio)
			//BASICO(normal)
			//CON_BUSQUEDA(Permite buscar Fk)
			
			String sKeyStrokeName="";
			KeyStroke keyStrokeControl=null;
			
			if(!sTipoBusqueda.equals("GLOBAL")) {
				
				//BUSCAR
				sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_BUSCAR");
				keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_BUSCAR");
				
				jComboBoxDetaNotaCredito.getInputMap().put(keyStrokeControl, sKeyStrokeName);
				jComboBoxDetaNotaCredito.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction+"Busqueda"));
				//BUSCAR
				
				
				//ACTUALIZAR
				sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_ACTUALIZAR");
				keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_ACTUALIZAR");
				
				jComboBoxDetaNotaCredito.getInputMap().put(keyStrokeControl, sKeyStrokeName);
				jComboBoxDetaNotaCredito.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction+"Update"));
				//ACTUALIZAR
				
				if(sTipoBusqueda.contains("CON_EVENT_CHANGE")) {
					if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
						jComboBoxDetaNotaCredito.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
						jComboBoxDetaNotaCredito.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));						
					}
					
					/*
					if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
						jComboBoxDetaNotaCredito.addItemListener(new ComboBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
					} else {
						jComboBoxDetaNotaCredito.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
					}
					*/
				}								
				
				//CON_BUSQUEDA								
				if(sTipoBusqueda.contains("CON_BUSQUEDA")) {
					sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_BUSQUEDA");
					keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_BUSQUEDA");
							
					jComboBoxDetaNotaCredito.getInputMap().put(keyStrokeControl, sKeyStrokeName);
					jComboBoxDetaNotaCredito.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction));
				}
				//CON_BUSQUEDA
				
				
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	@SuppressWarnings("rawtypes")
	public void setHotKeysComboBoxGenerico(JComboBox jComboBox,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		if(sTipoBusqueda.contains("CON_EVENT_CHANGE")) {
			if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
				jComboBox.addItemListener(new ComboBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
				jComboBox.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
			} else {
				jComboBox.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
				jComboBox.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
			}
		}
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJTextFieldGenerico(JTextField jTextField,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jTextField.addFocusListener(new TextFieldFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		jTextField.addActionListener(new TextFieldActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJTextAreaGenerico(JTextArea jTextArea,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jTextArea.addFocusListener(new TextAreaFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//NO EXISTE
		//jTextArea.addActionListener(new TextAreaActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJLabelGenerico(JLabel jLabel,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jLabel.addFocusListener(new LabelFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//NO EXISTE
		//jLabel.addActionListener(new LabelActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJCheckBoxGenerico(JCheckBox jCheckBox,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jCheckBox.addFocusListener(new CheckBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//SI SE DEFINE AL CAMBIAR VALOR, ESTE NUEVO VALOR NO SE ENVIA AL EVENTO
		//jCheckBox.addItemListener(new CheckBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJDateChooserGenerico(JDateChooser jDateChooser,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		FuncionesSwing.addDateListener(jDateChooser, jInternalFrameBase, sNombreHotKeyAbstractAction);
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJButtonGenerico(JButton jButton,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jButton.addActionListener(new ButtonActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	public void jButtonRelacionActionPerformed(String sTipo,ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado) {
		//ABRIR RELACIONES
		try {
			
		} catch (Exception e) {
			FuncionesSwing.manageException2(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);
		}
	}
	
	public String getDescripcionFk(String sTipo,JTable table,Object value,int intSelectedRow) throws Exception {
		//DESCRIPCIONES FK		
		String sDescripcion="";
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			detanotacredito=(DetaNotaCredito) detanotacreditoLogic.getDetaNotaCreditos().toArray()[table.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE) {
			detanotacredito =(DetaNotaCredito) detanotacreditos.toArray()[table.convertRowIndexToModel(intSelectedRow)];
		}
					
		
		if(sTipo.equals("Empresa")) {
			//sDescripcion=this.getActualEmpresaForeignKeyDescripcion((Long)value);
			if(!detanotacredito.getIsNew() && !detanotacredito.getIsChanged() && !detanotacredito.getIsDeleted()) {
				sDescripcion=detanotacredito.getempresa_descripcion();
			} else {
				//sDescripcion=this.getActualEmpresaForeignKeyDescripcion((Long)value);
				sDescripcion=detanotacredito.getempresa_descripcion();
			}
		}

		if(sTipo.equals("Sucursal")) {
			//sDescripcion=this.getActualSucursalForeignKeyDescripcion((Long)value);
			if(!detanotacredito.getIsNew() && !detanotacredito.getIsChanged() && !detanotacredito.getIsDeleted()) {
				sDescripcion=detanotacredito.getsucursal_descripcion();
			} else {
				//sDescripcion=this.getActualSucursalForeignKeyDescripcion((Long)value);
				sDescripcion=detanotacredito.getsucursal_descripcion();
			}
		}

		if(sTipo.equals("Ejercicio")) {
			//sDescripcion=this.getActualEjercicioForeignKeyDescripcion((Long)value);
			if(!detanotacredito.getIsNew() && !detanotacredito.getIsChanged() && !detanotacredito.getIsDeleted()) {
				sDescripcion=detanotacredito.getejercicio_descripcion();
			} else {
				//sDescripcion=this.getActualEjercicioForeignKeyDescripcion((Long)value);
				sDescripcion=detanotacredito.getejercicio_descripcion();
			}
		}

		if(sTipo.equals("Periodo")) {
			//sDescripcion=this.getActualPeriodoForeignKeyDescripcion((Long)value);
			if(!detanotacredito.getIsNew() && !detanotacredito.getIsChanged() && !detanotacredito.getIsDeleted()) {
				sDescripcion=detanotacredito.getperiodo_descripcion();
			} else {
				//sDescripcion=this.getActualPeriodoForeignKeyDescripcion((Long)value);
				sDescripcion=detanotacredito.getperiodo_descripcion();
			}
		}

		if(sTipo.equals("Anio")) {
			//sDescripcion=this.getActualAnioForeignKeyDescripcion((Long)value);
			if(!detanotacredito.getIsNew() && !detanotacredito.getIsChanged() && !detanotacredito.getIsDeleted()) {
				sDescripcion=detanotacredito.getanio_descripcion();
			} else {
				//sDescripcion=this.getActualAnioForeignKeyDescripcion((Long)value);
				sDescripcion=detanotacredito.getanio_descripcion();
			}
		}

		if(sTipo.equals("Mes")) {
			//sDescripcion=this.getActualMesForeignKeyDescripcion((Long)value);
			if(!detanotacredito.getIsNew() && !detanotacredito.getIsChanged() && !detanotacredito.getIsDeleted()) {
				sDescripcion=detanotacredito.getmes_descripcion();
			} else {
				//sDescripcion=this.getActualMesForeignKeyDescripcion((Long)value);
				sDescripcion=detanotacredito.getmes_descripcion();
			}
		}

		if(sTipo.equals("NotaCredito")) {
			//sDescripcion=this.getActualNotaCreditoForeignKeyDescripcion((Long)value);
			if(!detanotacredito.getIsNew() && !detanotacredito.getIsChanged() && !detanotacredito.getIsDeleted()) {
				sDescripcion=detanotacredito.getnotacredito_descripcion();
			} else {
				//sDescripcion=this.getActualNotaCreditoForeignKeyDescripcion((Long)value);
				sDescripcion=detanotacredito.getnotacredito_descripcion();
			}
		}

		if(sTipo.equals("Bodega")) {
			//sDescripcion=this.getActualBodegaForeignKeyDescripcion((Long)value);
			if(!detanotacredito.getIsNew() && !detanotacredito.getIsChanged() && !detanotacredito.getIsDeleted()) {
				sDescripcion=detanotacredito.getbodega_descripcion();
			} else {
				//sDescripcion=this.getActualBodegaForeignKeyDescripcion((Long)value);
				sDescripcion=detanotacredito.getbodega_descripcion();
			}
		}

		if(sTipo.equals("Producto")) {
			//sDescripcion=this.getActualProductoForeignKeyDescripcion((Long)value);
			if(!detanotacredito.getIsNew() && !detanotacredito.getIsChanged() && !detanotacredito.getIsDeleted()) {
				sDescripcion=detanotacredito.getproducto_descripcion();
			} else {
				//ES DEPENDIENTE, SE FORZA DESDE DESCRIPCION
				sDescripcion=detanotacredito.getproducto_descripcion();
			}
		}

		if(sTipo.equals("Unidad")) {
			//sDescripcion=this.getActualUnidadForeignKeyDescripcion((Long)value);
			if(!detanotacredito.getIsNew() && !detanotacredito.getIsChanged() && !detanotacredito.getIsDeleted()) {
				sDescripcion=detanotacredito.getunidad_descripcion();
			} else {
				//ES DEPENDIENTE, SE FORZA DESDE DESCRIPCION
				sDescripcion=detanotacredito.getunidad_descripcion();
			}
		}

		if(sTipo.equals("TipoDetaNotaCredito")) {
			//sDescripcion=this.getActualTipoDetaNotaCreditoForeignKeyDescripcion((Long)value);
			if(!detanotacredito.getIsNew() && !detanotacredito.getIsChanged() && !detanotacredito.getIsDeleted()) {
				sDescripcion=detanotacredito.gettipodetanotacredito_descripcion();
			} else {
				//sDescripcion=this.getActualTipoDetaNotaCreditoForeignKeyDescripcion((Long)value);
				sDescripcion=detanotacredito.gettipodetanotacredito_descripcion();
			}
		}

		if(sTipo.equals("TipoDevolucionEmpresa")) {
			//sDescripcion=this.getActualTipoDevolucionEmpresaForeignKeyDescripcion((Long)value);
			if(!detanotacredito.getIsNew() && !detanotacredito.getIsChanged() && !detanotacredito.getIsDeleted()) {
				sDescripcion=detanotacredito.gettipodevolucionempresa_descripcion();
			} else {
				//sDescripcion=this.getActualTipoDevolucionEmpresaForeignKeyDescripcion((Long)value);
				sDescripcion=detanotacredito.gettipodevolucionempresa_descripcion();
			}
		}

		if(sTipo.equals("CentroCosto")) {
			//sDescripcion=this.getActualCentroCostoForeignKeyDescripcion((Long)value);
			if(!detanotacredito.getIsNew() && !detanotacredito.getIsChanged() && !detanotacredito.getIsDeleted()) {
				sDescripcion=detanotacredito.getcentrocosto_descripcion();
			} else {
				//sDescripcion=this.getActualCentroCostoForeignKeyDescripcion((Long)value);
				sDescripcion=detanotacredito.getcentrocosto_descripcion();
			}
		}

		if(sTipo.equals("Empaque")) {
			//sDescripcion=this.getActualEmpaqueForeignKeyDescripcion((Long)value);
			if(!detanotacredito.getIsNew() && !detanotacredito.getIsChanged() && !detanotacredito.getIsDeleted()) {
				sDescripcion=detanotacredito.getempaque_descripcion();
			} else {
				//sDescripcion=this.getActualEmpaqueForeignKeyDescripcion((Long)value);
				sDescripcion=detanotacredito.getempaque_descripcion();
			}
		}

		
		return sDescripcion;
	}
	
	public Color getColorFk(String sTipo,JTable table,Object value,int intSelectedRow) throws Exception {
		//DESCRIPCIONES FK		
		Color color=Color.WHITE;
		
		DetaNotaCredito detanotacreditoRow=new DetaNotaCredito();
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			detanotacreditoRow=(DetaNotaCredito) detanotacreditoLogic.getDetaNotaCreditos().toArray()[table.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE) {
			detanotacreditoRow=(DetaNotaCredito) detanotacreditos.toArray()[table.convertRowIndexToModel(intSelectedRow)];
		}
					
		
		
		return color;
	}
	
	
	
	
	
	
	
	public void refrescarBindingTabla(Boolean blnSoloTabla) {
	}
	
	public void inicializarActualizarBindingBotonesManualDetaNotaCredito(Boolean esSetControles) {						
		if(esSetControles) {
			this.jButtonNuevoDetaNotaCredito.setVisible((this.isVisibilidadCeldaNuevoDetaNotaCredito && this.isPermisoNuevoDetaNotaCredito));			
			this.jButtonDuplicarDetaNotaCredito.setVisible((this.isVisibilidadCeldaDuplicarDetaNotaCredito && this.isPermisoDuplicarDetaNotaCredito));			
			this.jButtonCopiarDetaNotaCredito.setVisible((this.isVisibilidadCeldaCopiarDetaNotaCredito && this.isPermisoCopiarDetaNotaCredito));
			this.jButtonVerFormDetaNotaCredito.setVisible((this.isVisibilidadCeldaVerFormDetaNotaCredito && this.isPermisoVerFormDetaNotaCredito));
			
			this.jButtonAbrirOrderByDetaNotaCredito.setVisible((this.isVisibilidadCeldaOrdenDetaNotaCredito && this.isPermisoOrdenDetaNotaCredito));			
			
			this.jButtonNuevoRelacionesDetaNotaCredito.setVisible((this.isVisibilidadCeldaNuevoRelacionesDetaNotaCredito && this.isPermisoNuevoDetaNotaCredito));			
			this.jButtonNuevoGuardarCambiosDetaNotaCredito.setVisible((this.isVisibilidadCeldaNuevoDetaNotaCredito && this.isPermisoNuevoDetaNotaCredito && this.isPermisoGuardarCambiosDetaNotaCredito));
			
			if(this.jInternalFrameDetalleFormDetaNotaCredito!=null) {
			this.jInternalFrameDetalleFormDetaNotaCredito.jButtonModificarDetaNotaCredito.setVisible((this.isVisibilidadCeldaModificarDetaNotaCredito && this.isPermisoActualizarDetaNotaCredito));	
			this.jInternalFrameDetalleFormDetaNotaCredito.jButtonActualizarDetaNotaCredito.setVisible((this.isVisibilidadCeldaActualizarDetaNotaCredito && this.isPermisoActualizarDetaNotaCredito));	
			this.jInternalFrameDetalleFormDetaNotaCredito.jButtonEliminarDetaNotaCredito.setVisible((this.isVisibilidadCeldaEliminarDetaNotaCredito && this.isPermisoEliminarDetaNotaCredito));
			this.jInternalFrameDetalleFormDetaNotaCredito.jButtonCancelarDetaNotaCredito.setVisible(this.isVisibilidadCeldaCancelarDetaNotaCredito);							
			this.jInternalFrameDetalleFormDetaNotaCredito.jButtonGuardarCambiosDetaNotaCredito.setVisible((this.isVisibilidadCeldaGuardarDetaNotaCredito && this.isPermisoGuardarCambiosDetaNotaCredito));			
			
			}
						
			this.jButtonGuardarCambiosTablaDetaNotaCredito.setVisible((this.isVisibilidadCeldaGuardarCambiosDetaNotaCredito && this.isPermisoGuardarCambiosDetaNotaCredito));							
			
			//TOOLBAR
			
			this.jButtonNuevoToolBarDetaNotaCredito.setVisible((this.isVisibilidadCeldaNuevoDetaNotaCredito && this.isPermisoNuevoDetaNotaCredito));						
			this.jButtonDuplicarToolBarDetaNotaCredito.setVisible((this.isVisibilidadCeldaDuplicarDetaNotaCredito && this.isPermisoDuplicarDetaNotaCredito));						
			this.jButtonCopiarToolBarDetaNotaCredito.setVisible((this.isVisibilidadCeldaCopiarDetaNotaCredito && this.isPermisoCopiarDetaNotaCredito));			
			this.jButtonVerFormToolBarDetaNotaCredito.setVisible((this.isVisibilidadCeldaVerFormDetaNotaCredito && this.isPermisoVerFormDetaNotaCredito));			
			this.jButtonAbrirOrderByToolBarDetaNotaCredito.setVisible((this.isVisibilidadCeldaOrdenDetaNotaCredito && this.isPermisoOrdenDetaNotaCredito));
			this.jButtonNuevoRelacionesToolBarDetaNotaCredito.setVisible((this.isVisibilidadCeldaNuevoRelacionesDetaNotaCredito && this.isPermisoNuevoDetaNotaCredito));			
			this.jButtonNuevoGuardarCambiosToolBarDetaNotaCredito.setVisible((this.isVisibilidadCeldaNuevoDetaNotaCredito && this.isPermisoNuevoDetaNotaCredito && this.isPermisoGuardarCambiosDetaNotaCredito));			
			
			if(this.jInternalFrameDetalleFormDetaNotaCredito!=null) {
			this.jInternalFrameDetalleFormDetaNotaCredito.jButtonModificarToolBarDetaNotaCredito.setVisible((this.isVisibilidadCeldaModificarDetaNotaCredito && this.isPermisoActualizarDetaNotaCredito));	
			this.jInternalFrameDetalleFormDetaNotaCredito.jButtonActualizarToolBarDetaNotaCredito.setVisible((this.isVisibilidadCeldaActualizarDetaNotaCredito  && this.isPermisoActualizarDetaNotaCredito));	
			this.jInternalFrameDetalleFormDetaNotaCredito.jButtonEliminarToolBarDetaNotaCredito.setVisible((this.isVisibilidadCeldaEliminarDetaNotaCredito && this.isPermisoEliminarDetaNotaCredito));
			this.jInternalFrameDetalleFormDetaNotaCredito.jButtonCancelarToolBarDetaNotaCredito.setVisible(this.isVisibilidadCeldaCancelarDetaNotaCredito);				
			this.jInternalFrameDetalleFormDetaNotaCredito.jButtonGuardarCambiosToolBarDetaNotaCredito.setVisible((this.isVisibilidadCeldaGuardarDetaNotaCredito && this.isPermisoGuardarCambiosDetaNotaCredito));									
			}
			
			this.jButtonGuardarCambiosTablaToolBarDetaNotaCredito.setVisible((this.isVisibilidadCeldaGuardarCambiosDetaNotaCredito && this.isPermisoGuardarCambiosDetaNotaCredito));									
			
			//TOOLBAR
			
			//MENUS
			
			this.jMenuItemNuevoDetaNotaCredito.setVisible((this.isVisibilidadCeldaNuevoDetaNotaCredito && this.isPermisoNuevoDetaNotaCredito));			
			this.jMenuItemDuplicarDetaNotaCredito.setVisible((this.isVisibilidadCeldaDuplicarDetaNotaCredito && this.isPermisoDuplicarDetaNotaCredito));			
			this.jMenuItemCopiarDetaNotaCredito.setVisible((this.isVisibilidadCeldaCopiarDetaNotaCredito && this.isPermisoCopiarDetaNotaCredito));			
			this.jMenuItemVerFormDetaNotaCredito.setVisible((this.isVisibilidadCeldaVerFormDetaNotaCredito && this.isPermisoVerFormDetaNotaCredito));			
			this.jMenuItemAbrirOrderByDetaNotaCredito.setVisible((this.isVisibilidadCeldaOrdenDetaNotaCredito && this.isPermisoOrdenDetaNotaCredito));			
			//this.jMenuItemMostrarOcultarDetaNotaCredito.setVisible((this.isVisibilidadCeldaOrdenDetaNotaCredito && this.isPermisoOrdenDetaNotaCredito));
			this.jMenuItemDetalleAbrirOrderByDetaNotaCredito.setVisible((this.isVisibilidadCeldaOrdenDetaNotaCredito && this.isPermisoOrdenDetaNotaCredito));			
			//this.jMenuItemDetalleMostrarOcultarDetaNotaCredito.setVisible((this.isVisibilidadCeldaOrdenDetaNotaCredito && this.isPermisoOrdenDetaNotaCredito));			
			this.jMenuItemNuevoRelacionesDetaNotaCredito.setVisible((this.isVisibilidadCeldaNuevoRelacionesDetaNotaCredito && this.isPermisoNuevoDetaNotaCredito));			
			this.jMenuItemNuevoGuardarCambiosDetaNotaCredito.setVisible((this.isVisibilidadCeldaNuevoDetaNotaCredito && this.isPermisoNuevoDetaNotaCredito && this.isPermisoGuardarCambiosDetaNotaCredito));									
			
			if(this.jInternalFrameDetalleFormDetaNotaCredito!=null) {
			this.jInternalFrameDetalleFormDetaNotaCredito.jMenuItemModificarDetaNotaCredito.setVisible((this.isVisibilidadCeldaModificarDetaNotaCredito && this.isPermisoActualizarDetaNotaCredito));	
			this.jInternalFrameDetalleFormDetaNotaCredito.jMenuItemActualizarDetaNotaCredito.setVisible((this.isVisibilidadCeldaActualizarDetaNotaCredito && this.isPermisoActualizarDetaNotaCredito));	
			this.jInternalFrameDetalleFormDetaNotaCredito.jMenuItemEliminarDetaNotaCredito.setVisible((this.isVisibilidadCeldaEliminarDetaNotaCredito && this.isPermisoEliminarDetaNotaCredito));
			this.jInternalFrameDetalleFormDetaNotaCredito.jMenuItemCancelarDetaNotaCredito.setVisible(this.isVisibilidadCeldaCancelarDetaNotaCredito);				
			}
			
			this.jMenuItemGuardarCambiosDetaNotaCredito.setVisible((this.isVisibilidadCeldaGuardarDetaNotaCredito && this.isPermisoGuardarCambiosDetaNotaCredito));						
			this.jMenuItemGuardarCambiosTablaDetaNotaCredito.setVisible((this.isVisibilidadCeldaGuardarCambiosDetaNotaCredito && this.isPermisoGuardarCambiosDetaNotaCredito));						
			
			//MENUS
			
		} else {
			this.isVisibilidadCeldaNuevoDetaNotaCredito=this.jButtonNuevoDetaNotaCredito.isVisible();
			this.isVisibilidadCeldaDuplicarDetaNotaCredito=this.jButtonDuplicarDetaNotaCredito.isVisible();
			this.isVisibilidadCeldaCopiarDetaNotaCredito=this.jButtonCopiarDetaNotaCredito.isVisible();
			this.isVisibilidadCeldaVerFormDetaNotaCredito=this.jButtonVerFormDetaNotaCredito.isVisible();
			
			this.isVisibilidadCeldaOrdenDetaNotaCredito=this.jButtonAbrirOrderByDetaNotaCredito.isVisible();			
			
			this.isVisibilidadCeldaNuevoRelacionesDetaNotaCredito=this.jButtonNuevoRelacionesDetaNotaCredito.isVisible();
			this.isVisibilidadCeldaModificarDetaNotaCredito=this.jButtonModificarDetaNotaCredito.isVisible();
			
			if(this.jInternalFrameDetalleFormDetaNotaCredito!=null) {
			this.isVisibilidadCeldaActualizarDetaNotaCredito=this.jInternalFrameDetalleFormDetaNotaCredito.jButtonActualizarDetaNotaCredito.isVisible();
			this.isVisibilidadCeldaEliminarDetaNotaCredito=this.jInternalFrameDetalleFormDetaNotaCredito.jButtonEliminarDetaNotaCredito.isVisible();
			this.isVisibilidadCeldaCancelarDetaNotaCredito=this.jInternalFrameDetalleFormDetaNotaCredito.jButtonCancelarDetaNotaCredito.isVisible();
			this.isVisibilidadCeldaGuardarDetaNotaCredito=this.jInternalFrameDetalleFormDetaNotaCredito.jButtonGuardarCambiosDetaNotaCredito.isVisible();			
			}
			
			this.isVisibilidadCeldaGuardarCambiosDetaNotaCredito=this.jButtonGuardarCambiosTablaDetaNotaCredito.isVisible();
			
			//TOOLBAR
			
			this.isVisibilidadCeldaNuevoDetaNotaCredito=this.jButtonNuevoToolBarDetaNotaCredito.isVisible();
			this.isVisibilidadCeldaNuevoRelacionesDetaNotaCredito=this.jButtonNuevoRelacionesToolBarDetaNotaCredito.isVisible();
			
			if(this.jInternalFrameDetalleFormDetaNotaCredito!=null) {
			this.isVisibilidadCeldaModificarDetaNotaCredito=this.jInternalFrameDetalleFormDetaNotaCredito.jButtonModificarToolBarDetaNotaCredito.isVisible();
			this.isVisibilidadCeldaActualizarDetaNotaCredito=this.jInternalFrameDetalleFormDetaNotaCredito.jButtonActualizarToolBarDetaNotaCredito.isVisible();
			this.isVisibilidadCeldaEliminarDetaNotaCredito=this.jInternalFrameDetalleFormDetaNotaCredito.jButtonEliminarToolBarDetaNotaCredito.isVisible();
			this.isVisibilidadCeldaCancelarDetaNotaCredito=this.jInternalFrameDetalleFormDetaNotaCredito.jButtonCancelarToolBarDetaNotaCredito.isVisible();
			}
			
			this.isVisibilidadCeldaGuardarDetaNotaCredito=this.jButtonGuardarCambiosToolBarDetaNotaCredito.isVisible();
			this.isVisibilidadCeldaGuardarCambiosDetaNotaCredito=this.jButtonGuardarCambiosTablaToolBarDetaNotaCredito.isVisible();						
			
			//TOOLBAR
			
			//MENUS
			
			this.isVisibilidadCeldaNuevoDetaNotaCredito=this.jMenuItemNuevoDetaNotaCredito.isVisible();
			this.isVisibilidadCeldaNuevoRelacionesDetaNotaCredito=this.jMenuItemNuevoRelacionesDetaNotaCredito.isVisible();
			
			if(this.jInternalFrameDetalleFormDetaNotaCredito!=null) {
			this.isVisibilidadCeldaModificarDetaNotaCredito=this.jInternalFrameDetalleFormDetaNotaCredito.jMenuItemModificarDetaNotaCredito.isVisible();
			this.isVisibilidadCeldaActualizarDetaNotaCredito=this.jInternalFrameDetalleFormDetaNotaCredito.jMenuItemActualizarDetaNotaCredito.isVisible();
			this.isVisibilidadCeldaEliminarDetaNotaCredito=this.jInternalFrameDetalleFormDetaNotaCredito.jMenuItemEliminarDetaNotaCredito.isVisible();
			this.isVisibilidadCeldaCancelarDetaNotaCredito=this.jInternalFrameDetalleFormDetaNotaCredito.jMenuItemCancelarDetaNotaCredito.isVisible();
			}
			
			this.isVisibilidadCeldaGuardarDetaNotaCredito=this.jMenuItemGuardarCambiosDetaNotaCredito.isVisible();
			this.isVisibilidadCeldaGuardarCambiosDetaNotaCredito=this.jMenuItemGuardarCambiosTablaDetaNotaCredito.isVisible();						
			
			//MENUS
		}
	}
	
	public void inicializarActualizarBindingBotonesDetaNotaCredito(Boolean esInicializar) {
		if(DetaNotaCreditoJInternalFrame.ISBINDING_MANUAL) {			
			if(this.detanotacreditoSessionBean.getConGuardarRelaciones()) {
				//if(this.detanotacreditoSessionBean.getEsGuardarRelacionado()) {
				
				this.actualizarEstadoCeldasBotonesConGuardarRelacionesDetaNotaCredito();
			}
			
			this.inicializarActualizarBindingBotonesManualDetaNotaCredito(true);
			
		} else {	
		}
	}		
	
	public void inicializarActualizarBindingBotonesPermisosManualDetaNotaCredito() {
		this.jButtonNuevoDetaNotaCredito.setVisible(this.isPermisoNuevoDetaNotaCredito);			
		this.jButtonDuplicarDetaNotaCredito.setVisible(this.isPermisoDuplicarDetaNotaCredito);			
		this.jButtonCopiarDetaNotaCredito.setVisible(this.isPermisoCopiarDetaNotaCredito);			
		this.jButtonVerFormDetaNotaCredito.setVisible(this.isPermisoVerFormDetaNotaCredito);			
		
		this.jButtonAbrirOrderByDetaNotaCredito.setVisible(this.isPermisoOrdenDetaNotaCredito);					
		
		this.jButtonNuevoRelacionesDetaNotaCredito.setVisible(this.isPermisoNuevoDetaNotaCredito);			
		
		if(this.jInternalFrameDetalleFormDetaNotaCredito!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetaNotaCredito.jButtonModificarDetaNotaCredito.setVisible(this.isPermisoActualizarDetaNotaCredito);	
			this.jInternalFrameDetalleFormDetaNotaCredito.jButtonActualizarDetaNotaCredito.setVisible(this.isPermisoActualizarDetaNotaCredito);	
			this.jInternalFrameDetalleFormDetaNotaCredito.jButtonEliminarDetaNotaCredito.setVisible(this.isPermisoEliminarDetaNotaCredito);
			this.jInternalFrameDetalleFormDetaNotaCredito.jButtonCancelarDetaNotaCredito.setVisible(this.isVisibilidadCeldaCancelarDetaNotaCredito);						
			this.jInternalFrameDetalleFormDetaNotaCredito.jButtonGuardarCambiosDetaNotaCredito.setVisible(this.isPermisoGuardarCambiosDetaNotaCredito);							
		}
		
		this.jButtonGuardarCambiosTablaDetaNotaCredito.setVisible(this.isPermisoActualizarDetaNotaCredito);
	}
	
	public void inicializarActualizarBindingBotonesPermisosManualFormDetalleDetaNotaCredito() {
		this.jInternalFrameDetalleFormDetaNotaCredito.jButtonModificarDetaNotaCredito.setVisible(this.isPermisoActualizarDetaNotaCredito);	
		this.jInternalFrameDetalleFormDetaNotaCredito.jButtonActualizarDetaNotaCredito.setVisible(this.isPermisoActualizarDetaNotaCredito);	
		this.jInternalFrameDetalleFormDetaNotaCredito.jButtonEliminarDetaNotaCredito.setVisible(this.isPermisoEliminarDetaNotaCredito);
		this.jInternalFrameDetalleFormDetaNotaCredito.jButtonCancelarDetaNotaCredito.setVisible(this.isVisibilidadCeldaCancelarDetaNotaCredito);							
		this.jInternalFrameDetalleFormDetaNotaCredito.jButtonGuardarCambiosDetaNotaCredito.setVisible((this.isVisibilidadCeldaGuardarDetaNotaCredito && this.isPermisoGuardarCambiosDetaNotaCredito));			
	}
	
	public void inicializarActualizarBindingBotonesPermisosDetaNotaCredito() {
		if(DetaNotaCreditoJInternalFrame.ISBINDING_MANUAL) {
			this.inicializarActualizarBindingBotonesPermisosManualDetaNotaCredito();
		} else {
		}
	}
	
	
	public void refrescarBindingBotonesDetaNotaCredito() {
	}
	
	public void jTableDatosDetaNotaCreditoListSelectionListener(javax.swing.event.ListSelectionEvent evt) throws Exception { 
		try {
			this.seleccionarDetaNotaCredito(null,evt,-1);
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);
		}
	}
	
	
	public void jButtonidDetaNotaCreditoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetaNotaCredito.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetaNotaCredito(this.getdetanotacredito(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaNotaCredito(this.detanotacredito);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detanotacredito =(DetaNotaCredito) this.detanotacreditoLogic.getDetaNotaCreditos().toArray()[this.jTableDatosDetaNotaCredito.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detanotacredito =(DetaNotaCredito) this.detanotacreditos.toArray()[this.jTableDatosDetaNotaCredito.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detanotacredito==null) {
						this.detanotacredito = new DetaNotaCredito();
					}

					this.setVariablesFormularioToObjetoActualDetaNotaCredito(this.detanotacredito,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaNotaCredito(this.detanotacredito);
				}

				if(this.detanotacredito.getId()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id = "+this.detanotacredito.getId().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetaNotaCredito(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_empresaDetaNotaCreditoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoempresa=true;

			idTienePermisoempresa=this.tienePermisosUsuarioEnPaginaWebDetaNotaCredito(EmpresaConstantesFunciones.CLASSNAME);

			if(idTienePermisoempresa) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetaNotaCredito.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosDetaNotaCredito.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosDetaNotaCredito.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacredito =(DetaNotaCredito) this.detanotacreditoLogic.getDetaNotaCreditos().toArray()[this.jTableDatosDetaNotaCredito.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detanotacredito =(DetaNotaCredito) this.detanotacreditos.toArray()[this.jTableDatosDetaNotaCredito.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualDetaNotaCredito(this.getdetanotacredito(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysDetaNotaCredito(this.detanotacredito);

				this.empresaBeanSwingJInternalFrame=new EmpresaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.empresaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.empresaBeanSwingJInternalFrame.getEmpresaLogic().setConnexion(this.detanotacreditoLogic.getConnexion());

				if(this.detanotacredito.getid_empresa()!=null) {
					this.empresaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.empresaBeanSwingJInternalFrame.setIdActual(this.detanotacredito.getid_empresa());
					this.empresaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.empresaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.empresaBeanSwingJInternalFrame.inicializarActualizarBindingTablaEmpresa();
				}

				JInternalFrameBase jinternalFrame =this.empresaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderDetaNotaCredito=(TitledBorder)this.jScrollPanelDatosDetaNotaCredito.getBorder();
				TitledBorder titledBorderempresa=(TitledBorder)this.empresaBeanSwingJInternalFrame.jScrollPanelDatosEmpresa.getBorder();

				titledBorderempresa.setTitle(titledBorderDetaNotaCredito.getTitle() + " -> Empresa");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_empresaDetaNotaCreditoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetaNotaCredito.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetaNotaCredito(this.getdetanotacredito(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaNotaCredito(this.detanotacredito);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detanotacredito =(DetaNotaCredito) this.detanotacreditoLogic.getDetaNotaCreditos().toArray()[this.jTableDatosDetaNotaCredito.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detanotacredito =(DetaNotaCredito) this.detanotacreditos.toArray()[this.jTableDatosDetaNotaCredito.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detanotacredito==null) {
						this.detanotacredito = new DetaNotaCredito();
					}

					this.setVariablesFormularioToObjetoActualDetaNotaCredito(this.detanotacredito,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaNotaCredito(this.detanotacredito);
				}

				if(this.detanotacredito.getid_empresa()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_empresa = "+this.detanotacredito.getid_empresa().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetaNotaCredito(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_sucursalDetaNotaCreditoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisosucursal=true;

			idTienePermisosucursal=this.tienePermisosUsuarioEnPaginaWebDetaNotaCredito(SucursalConstantesFunciones.CLASSNAME);

			if(idTienePermisosucursal) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetaNotaCredito.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosDetaNotaCredito.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosDetaNotaCredito.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacredito =(DetaNotaCredito) this.detanotacreditoLogic.getDetaNotaCreditos().toArray()[this.jTableDatosDetaNotaCredito.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detanotacredito =(DetaNotaCredito) this.detanotacreditos.toArray()[this.jTableDatosDetaNotaCredito.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualDetaNotaCredito(this.getdetanotacredito(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysDetaNotaCredito(this.detanotacredito);

				this.sucursalBeanSwingJInternalFrame=new SucursalBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.sucursalBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.sucursalBeanSwingJInternalFrame.getSucursalLogic().setConnexion(this.detanotacreditoLogic.getConnexion());

				if(this.detanotacredito.getid_sucursal()!=null) {
					this.sucursalBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.sucursalBeanSwingJInternalFrame.setIdActual(this.detanotacredito.getid_sucursal());
					this.sucursalBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.sucursalBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.sucursalBeanSwingJInternalFrame.inicializarActualizarBindingTablaSucursal();
				}

				JInternalFrameBase jinternalFrame =this.sucursalBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderDetaNotaCredito=(TitledBorder)this.jScrollPanelDatosDetaNotaCredito.getBorder();
				TitledBorder titledBordersucursal=(TitledBorder)this.sucursalBeanSwingJInternalFrame.jScrollPanelDatosSucursal.getBorder();

				titledBordersucursal.setTitle(titledBorderDetaNotaCredito.getTitle() + " -> Sucursal");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_sucursalDetaNotaCreditoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetaNotaCredito.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetaNotaCredito(this.getdetanotacredito(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaNotaCredito(this.detanotacredito);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detanotacredito =(DetaNotaCredito) this.detanotacreditoLogic.getDetaNotaCreditos().toArray()[this.jTableDatosDetaNotaCredito.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detanotacredito =(DetaNotaCredito) this.detanotacreditos.toArray()[this.jTableDatosDetaNotaCredito.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detanotacredito==null) {
						this.detanotacredito = new DetaNotaCredito();
					}

					this.setVariablesFormularioToObjetoActualDetaNotaCredito(this.detanotacredito,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaNotaCredito(this.detanotacredito);
				}

				if(this.detanotacredito.getid_sucursal()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_sucursal = "+this.detanotacredito.getid_sucursal().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetaNotaCredito(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_ejercicioDetaNotaCreditoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoejercicio=true;

			idTienePermisoejercicio=this.tienePermisosUsuarioEnPaginaWebDetaNotaCredito(EjercicioConstantesFunciones.CLASSNAME);

			if(idTienePermisoejercicio) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetaNotaCredito.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosDetaNotaCredito.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosDetaNotaCredito.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacredito =(DetaNotaCredito) this.detanotacreditoLogic.getDetaNotaCreditos().toArray()[this.jTableDatosDetaNotaCredito.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detanotacredito =(DetaNotaCredito) this.detanotacreditos.toArray()[this.jTableDatosDetaNotaCredito.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualDetaNotaCredito(this.getdetanotacredito(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysDetaNotaCredito(this.detanotacredito);

				this.ejercicioBeanSwingJInternalFrame=new EjercicioBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.ejercicioBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.ejercicioBeanSwingJInternalFrame.getEjercicioLogic().setConnexion(this.detanotacreditoLogic.getConnexion());

				if(this.detanotacredito.getid_ejercicio()!=null) {
					this.ejercicioBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.ejercicioBeanSwingJInternalFrame.setIdActual(this.detanotacredito.getid_ejercicio());
					this.ejercicioBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.ejercicioBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.ejercicioBeanSwingJInternalFrame.inicializarActualizarBindingTablaEjercicio();
				}

				JInternalFrameBase jinternalFrame =this.ejercicioBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderDetaNotaCredito=(TitledBorder)this.jScrollPanelDatosDetaNotaCredito.getBorder();
				TitledBorder titledBorderejercicio=(TitledBorder)this.ejercicioBeanSwingJInternalFrame.jScrollPanelDatosEjercicio.getBorder();

				titledBorderejercicio.setTitle(titledBorderDetaNotaCredito.getTitle() + " -> Ejercicio");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_ejercicioDetaNotaCreditoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetaNotaCredito.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetaNotaCredito(this.getdetanotacredito(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaNotaCredito(this.detanotacredito);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detanotacredito =(DetaNotaCredito) this.detanotacreditoLogic.getDetaNotaCreditos().toArray()[this.jTableDatosDetaNotaCredito.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detanotacredito =(DetaNotaCredito) this.detanotacreditos.toArray()[this.jTableDatosDetaNotaCredito.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detanotacredito==null) {
						this.detanotacredito = new DetaNotaCredito();
					}

					this.setVariablesFormularioToObjetoActualDetaNotaCredito(this.detanotacredito,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaNotaCredito(this.detanotacredito);
				}

				if(this.detanotacredito.getid_ejercicio()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_ejercicio = "+this.detanotacredito.getid_ejercicio().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetaNotaCredito(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_periodoDetaNotaCreditoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoperiodo=true;

			idTienePermisoperiodo=this.tienePermisosUsuarioEnPaginaWebDetaNotaCredito(PeriodoConstantesFunciones.CLASSNAME);

			if(idTienePermisoperiodo) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetaNotaCredito.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosDetaNotaCredito.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosDetaNotaCredito.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacredito =(DetaNotaCredito) this.detanotacreditoLogic.getDetaNotaCreditos().toArray()[this.jTableDatosDetaNotaCredito.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detanotacredito =(DetaNotaCredito) this.detanotacreditos.toArray()[this.jTableDatosDetaNotaCredito.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualDetaNotaCredito(this.getdetanotacredito(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysDetaNotaCredito(this.detanotacredito);

				this.periodoBeanSwingJInternalFrame=new PeriodoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.periodoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.periodoBeanSwingJInternalFrame.getPeriodoLogic().setConnexion(this.detanotacreditoLogic.getConnexion());

				if(this.detanotacredito.getid_periodo()!=null) {
					this.periodoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.periodoBeanSwingJInternalFrame.setIdActual(this.detanotacredito.getid_periodo());
					this.periodoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.periodoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.periodoBeanSwingJInternalFrame.inicializarActualizarBindingTablaPeriodo();
				}

				JInternalFrameBase jinternalFrame =this.periodoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderDetaNotaCredito=(TitledBorder)this.jScrollPanelDatosDetaNotaCredito.getBorder();
				TitledBorder titledBorderperiodo=(TitledBorder)this.periodoBeanSwingJInternalFrame.jScrollPanelDatosPeriodo.getBorder();

				titledBorderperiodo.setTitle(titledBorderDetaNotaCredito.getTitle() + " -> Periodo");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_periodoDetaNotaCreditoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetaNotaCredito.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetaNotaCredito(this.getdetanotacredito(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaNotaCredito(this.detanotacredito);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detanotacredito =(DetaNotaCredito) this.detanotacreditoLogic.getDetaNotaCreditos().toArray()[this.jTableDatosDetaNotaCredito.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detanotacredito =(DetaNotaCredito) this.detanotacreditos.toArray()[this.jTableDatosDetaNotaCredito.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detanotacredito==null) {
						this.detanotacredito = new DetaNotaCredito();
					}

					this.setVariablesFormularioToObjetoActualDetaNotaCredito(this.detanotacredito,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaNotaCredito(this.detanotacredito);
				}

				if(this.detanotacredito.getid_periodo()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_periodo = "+this.detanotacredito.getid_periodo().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetaNotaCredito(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_anioDetaNotaCreditoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoanio=true;

			idTienePermisoanio=this.tienePermisosUsuarioEnPaginaWebDetaNotaCredito(AnioConstantesFunciones.CLASSNAME);

			if(idTienePermisoanio) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetaNotaCredito.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosDetaNotaCredito.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosDetaNotaCredito.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacredito =(DetaNotaCredito) this.detanotacreditoLogic.getDetaNotaCreditos().toArray()[this.jTableDatosDetaNotaCredito.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detanotacredito =(DetaNotaCredito) this.detanotacreditos.toArray()[this.jTableDatosDetaNotaCredito.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualDetaNotaCredito(this.getdetanotacredito(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysDetaNotaCredito(this.detanotacredito);

				this.anioBeanSwingJInternalFrame=new AnioBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.anioBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.anioBeanSwingJInternalFrame.getAnioLogic().setConnexion(this.detanotacreditoLogic.getConnexion());

				if(this.detanotacredito.getid_anio()!=null) {
					this.anioBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.anioBeanSwingJInternalFrame.setIdActual(this.detanotacredito.getid_anio());
					this.anioBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.anioBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.anioBeanSwingJInternalFrame.inicializarActualizarBindingTablaAnio();
				}

				JInternalFrameBase jinternalFrame =this.anioBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderDetaNotaCredito=(TitledBorder)this.jScrollPanelDatosDetaNotaCredito.getBorder();
				TitledBorder titledBorderanio=(TitledBorder)this.anioBeanSwingJInternalFrame.jScrollPanelDatosAnio.getBorder();

				titledBorderanio.setTitle(titledBorderDetaNotaCredito.getTitle() + " -> Anio");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_anioDetaNotaCreditoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetaNotaCredito.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetaNotaCredito(this.getdetanotacredito(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaNotaCredito(this.detanotacredito);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detanotacredito =(DetaNotaCredito) this.detanotacreditoLogic.getDetaNotaCreditos().toArray()[this.jTableDatosDetaNotaCredito.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detanotacredito =(DetaNotaCredito) this.detanotacreditos.toArray()[this.jTableDatosDetaNotaCredito.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detanotacredito==null) {
						this.detanotacredito = new DetaNotaCredito();
					}

					this.setVariablesFormularioToObjetoActualDetaNotaCredito(this.detanotacredito,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaNotaCredito(this.detanotacredito);
				}

				if(this.detanotacredito.getid_anio()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_anio = "+this.detanotacredito.getid_anio().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetaNotaCredito(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_mesDetaNotaCreditoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisomes=true;

			idTienePermisomes=this.tienePermisosUsuarioEnPaginaWebDetaNotaCredito(MesConstantesFunciones.CLASSNAME);

			if(idTienePermisomes) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetaNotaCredito.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosDetaNotaCredito.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosDetaNotaCredito.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacredito =(DetaNotaCredito) this.detanotacreditoLogic.getDetaNotaCreditos().toArray()[this.jTableDatosDetaNotaCredito.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detanotacredito =(DetaNotaCredito) this.detanotacreditos.toArray()[this.jTableDatosDetaNotaCredito.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualDetaNotaCredito(this.getdetanotacredito(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysDetaNotaCredito(this.detanotacredito);

				this.mesBeanSwingJInternalFrame=new MesBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.mesBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.mesBeanSwingJInternalFrame.getMesLogic().setConnexion(this.detanotacreditoLogic.getConnexion());

				if(this.detanotacredito.getid_mes()!=null) {
					this.mesBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.mesBeanSwingJInternalFrame.setIdActual(this.detanotacredito.getid_mes());
					this.mesBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.mesBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.mesBeanSwingJInternalFrame.inicializarActualizarBindingTablaMes();
				}

				JInternalFrameBase jinternalFrame =this.mesBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderDetaNotaCredito=(TitledBorder)this.jScrollPanelDatosDetaNotaCredito.getBorder();
				TitledBorder titledBordermes=(TitledBorder)this.mesBeanSwingJInternalFrame.jScrollPanelDatosMes.getBorder();

				titledBordermes.setTitle(titledBorderDetaNotaCredito.getTitle() + " -> Mes");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_mesDetaNotaCreditoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetaNotaCredito.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetaNotaCredito(this.getdetanotacredito(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaNotaCredito(this.detanotacredito);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detanotacredito =(DetaNotaCredito) this.detanotacreditoLogic.getDetaNotaCreditos().toArray()[this.jTableDatosDetaNotaCredito.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detanotacredito =(DetaNotaCredito) this.detanotacreditos.toArray()[this.jTableDatosDetaNotaCredito.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detanotacredito==null) {
						this.detanotacredito = new DetaNotaCredito();
					}

					this.setVariablesFormularioToObjetoActualDetaNotaCredito(this.detanotacredito,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaNotaCredito(this.detanotacredito);
				}

				if(this.detanotacredito.getid_mes()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_mes = "+this.detanotacredito.getid_mes().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetaNotaCredito(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_nota_creditoDetaNotaCreditoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisonotacredito=true;

			idTienePermisonotacredito=this.tienePermisosUsuarioEnPaginaWebDetaNotaCredito(NotaCreditoConstantesFunciones.CLASSNAME);

			if(idTienePermisonotacredito) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetaNotaCredito.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosDetaNotaCredito.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosDetaNotaCredito.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacredito =(DetaNotaCredito) this.detanotacreditoLogic.getDetaNotaCreditos().toArray()[this.jTableDatosDetaNotaCredito.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detanotacredito =(DetaNotaCredito) this.detanotacreditos.toArray()[this.jTableDatosDetaNotaCredito.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualDetaNotaCredito(this.getdetanotacredito(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysDetaNotaCredito(this.detanotacredito);

				this.notacreditoBeanSwingJInternalFrame=new NotaCreditoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.notacreditoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.notacreditoBeanSwingJInternalFrame.getNotaCreditoLogic().setConnexion(this.detanotacreditoLogic.getConnexion());

				if(this.detanotacredito.getid_nota_credito()!=null) {
					this.notacreditoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.notacreditoBeanSwingJInternalFrame.setIdActual(this.detanotacredito.getid_nota_credito());
					this.notacreditoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.notacreditoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.notacreditoBeanSwingJInternalFrame.inicializarActualizarBindingTablaNotaCredito();
				}

				JInternalFrameBase jinternalFrame =this.notacreditoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderDetaNotaCredito=(TitledBorder)this.jScrollPanelDatosDetaNotaCredito.getBorder();
				TitledBorder titledBordernotacredito=(TitledBorder)this.notacreditoBeanSwingJInternalFrame.jScrollPanelDatosNotaCredito.getBorder();

				titledBordernotacredito.setTitle(titledBorderDetaNotaCredito.getTitle() + " -> Nota Credito");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_nota_creditoDetaNotaCreditoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetaNotaCredito.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetaNotaCredito(this.getdetanotacredito(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaNotaCredito(this.detanotacredito);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detanotacredito =(DetaNotaCredito) this.detanotacreditoLogic.getDetaNotaCreditos().toArray()[this.jTableDatosDetaNotaCredito.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detanotacredito =(DetaNotaCredito) this.detanotacreditos.toArray()[this.jTableDatosDetaNotaCredito.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detanotacredito==null) {
						this.detanotacredito = new DetaNotaCredito();
					}

					this.setVariablesFormularioToObjetoActualDetaNotaCredito(this.detanotacredito,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaNotaCredito(this.detanotacredito);
				}

				if(this.detanotacredito.getid_nota_credito()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_nota_credito = "+this.detanotacredito.getid_nota_credito().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetaNotaCredito(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_bodegaDetaNotaCreditoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisobodega=true;

			idTienePermisobodega=this.tienePermisosUsuarioEnPaginaWebDetaNotaCredito(BodegaConstantesFunciones.CLASSNAME);

			if(idTienePermisobodega) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetaNotaCredito.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosDetaNotaCredito.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosDetaNotaCredito.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacredito =(DetaNotaCredito) this.detanotacreditoLogic.getDetaNotaCreditos().toArray()[this.jTableDatosDetaNotaCredito.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detanotacredito =(DetaNotaCredito) this.detanotacreditos.toArray()[this.jTableDatosDetaNotaCredito.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualDetaNotaCredito(this.getdetanotacredito(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysDetaNotaCredito(this.detanotacredito);

				this.bodegaBeanSwingJInternalFrame=new BodegaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.bodegaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.bodegaBeanSwingJInternalFrame.getBodegaLogic().setConnexion(this.detanotacreditoLogic.getConnexion());

				if(this.detanotacredito.getid_bodega()!=null) {
					this.bodegaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.bodegaBeanSwingJInternalFrame.setIdActual(this.detanotacredito.getid_bodega());
					this.bodegaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.bodegaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.bodegaBeanSwingJInternalFrame.inicializarActualizarBindingTablaBodega();
				}

				JInternalFrameBase jinternalFrame =this.bodegaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderDetaNotaCredito=(TitledBorder)this.jScrollPanelDatosDetaNotaCredito.getBorder();
				TitledBorder titledBorderbodega=(TitledBorder)this.bodegaBeanSwingJInternalFrame.jScrollPanelDatosBodega.getBorder();

				titledBorderbodega.setTitle(titledBorderDetaNotaCredito.getTitle() + " -> Bodega");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_bodegaDetaNotaCreditoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetaNotaCredito.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetaNotaCredito(this.getdetanotacredito(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaNotaCredito(this.detanotacredito);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detanotacredito =(DetaNotaCredito) this.detanotacreditoLogic.getDetaNotaCreditos().toArray()[this.jTableDatosDetaNotaCredito.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detanotacredito =(DetaNotaCredito) this.detanotacreditos.toArray()[this.jTableDatosDetaNotaCredito.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detanotacredito==null) {
						this.detanotacredito = new DetaNotaCredito();
					}

					this.setVariablesFormularioToObjetoActualDetaNotaCredito(this.detanotacredito,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaNotaCredito(this.detanotacredito);
				}

				if(this.detanotacredito.getid_bodega()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_bodega = "+this.detanotacredito.getid_bodega().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetaNotaCredito(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_productoDetaNotaCreditoActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {
			this.productoBeanSwingJInternalFrame=new ProductoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
			this.productoBeanSwingJInternalFrame.setJInternalFrameParent(this);
			this.productoBeanSwingJInternalFrame.sTipoBusqueda="Producto";

			if(!this.sFinalQueryGeneral_producto.equals("")) {
				this.productoBeanSwingJInternalFrame.setsFinalQueryGeneral(this.sFinalQueryGeneral_producto);
				this.productoBeanSwingJInternalFrame.sAccionBusqueda="Query";


				this.productoBeanSwingJInternalFrame.procesarBusqueda(this.productoBeanSwingJInternalFrame.sAccionBusqueda);
				this.productoBeanSwingJInternalFrame.inicializarActualizarBindingProducto(false);
			}

			if(!this.sFinalQueryComboProducto.equals("") && false) {
			}


			JInternalFrameBase jinternalFrame =this.productoBeanSwingJInternalFrame;
			jinternalFrame.setAutoscrolls(true);
			//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
			jinternalFrame.setVisible(true); 


			TitledBorder titledBorderDetaNotaCredito=null;
			TitledBorder titledBorderproducto=null;

			if(!this.jScrollPanelDatosDetaNotaCredito.getBorder().getClass().equals(EmptyBorder.class)) {
				titledBorderDetaNotaCredito=(TitledBorder)this.jScrollPanelDatosDetaNotaCredito.getBorder();
				titledBorderproducto=(TitledBorder)this.productoBeanSwingJInternalFrame.jScrollPanelDatosProducto.getBorder();

				titledBorderproducto.setTitle(titledBorderDetaNotaCredito.getTitle() + " -> Producto");
			}

			if(!Constantes.CON_VARIAS_VENTANAS) {
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
			}

			this.jDesktopPane.add(jinternalFrame);

			jinternalFrame.setSelected(true);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);
		}
	}

	public void jButtonid_productoDetaNotaCreditoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoproducto=true;

			idTienePermisoproducto=this.tienePermisosUsuarioEnPaginaWebDetaNotaCredito(ProductoConstantesFunciones.CLASSNAME);

			if(idTienePermisoproducto) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetaNotaCredito.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosDetaNotaCredito.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosDetaNotaCredito.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacredito =(DetaNotaCredito) this.detanotacreditoLogic.getDetaNotaCreditos().toArray()[this.jTableDatosDetaNotaCredito.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detanotacredito =(DetaNotaCredito) this.detanotacreditos.toArray()[this.jTableDatosDetaNotaCredito.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualDetaNotaCredito(this.getdetanotacredito(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysDetaNotaCredito(this.detanotacredito);

				this.productoBeanSwingJInternalFrame=new ProductoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.productoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.productoBeanSwingJInternalFrame.getProductoLogic().setConnexion(this.detanotacreditoLogic.getConnexion());

				if(this.detanotacredito.getid_producto()!=null) {
					this.productoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.productoBeanSwingJInternalFrame.setIdActual(this.detanotacredito.getid_producto());
					this.productoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.productoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.productoBeanSwingJInternalFrame.inicializarActualizarBindingTablaProducto();
				}

				JInternalFrameBase jinternalFrame =this.productoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderDetaNotaCredito=(TitledBorder)this.jScrollPanelDatosDetaNotaCredito.getBorder();
				TitledBorder titledBorderproducto=(TitledBorder)this.productoBeanSwingJInternalFrame.jScrollPanelDatosProducto.getBorder();

				titledBorderproducto.setTitle(titledBorderDetaNotaCredito.getTitle() + " -> Producto");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_productoDetaNotaCreditoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetaNotaCredito.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetaNotaCredito(this.getdetanotacredito(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaNotaCredito(this.detanotacredito);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detanotacredito =(DetaNotaCredito) this.detanotacreditoLogic.getDetaNotaCreditos().toArray()[this.jTableDatosDetaNotaCredito.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detanotacredito =(DetaNotaCredito) this.detanotacreditos.toArray()[this.jTableDatosDetaNotaCredito.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detanotacredito==null) {
						this.detanotacredito = new DetaNotaCredito();
					}

					this.setVariablesFormularioToObjetoActualDetaNotaCredito(this.detanotacredito,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaNotaCredito(this.detanotacredito);
				}

				if(this.detanotacredito.getid_producto()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_producto = "+this.detanotacredito.getid_producto().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetaNotaCredito(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_unidadDetaNotaCreditoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisounidad=true;

			idTienePermisounidad=this.tienePermisosUsuarioEnPaginaWebDetaNotaCredito(UnidadConstantesFunciones.CLASSNAME);

			if(idTienePermisounidad) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetaNotaCredito.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosDetaNotaCredito.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosDetaNotaCredito.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacredito =(DetaNotaCredito) this.detanotacreditoLogic.getDetaNotaCreditos().toArray()[this.jTableDatosDetaNotaCredito.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detanotacredito =(DetaNotaCredito) this.detanotacreditos.toArray()[this.jTableDatosDetaNotaCredito.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualDetaNotaCredito(this.getdetanotacredito(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysDetaNotaCredito(this.detanotacredito);

				this.unidadBeanSwingJInternalFrame=new UnidadBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.unidadBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.unidadBeanSwingJInternalFrame.getUnidadLogic().setConnexion(this.detanotacreditoLogic.getConnexion());

				if(this.detanotacredito.getid_unidad()!=null) {
					this.unidadBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.unidadBeanSwingJInternalFrame.setIdActual(this.detanotacredito.getid_unidad());
					this.unidadBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.unidadBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.unidadBeanSwingJInternalFrame.inicializarActualizarBindingTablaUnidad();
				}

				JInternalFrameBase jinternalFrame =this.unidadBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderDetaNotaCredito=(TitledBorder)this.jScrollPanelDatosDetaNotaCredito.getBorder();
				TitledBorder titledBorderunidad=(TitledBorder)this.unidadBeanSwingJInternalFrame.jScrollPanelDatosUnidad.getBorder();

				titledBorderunidad.setTitle(titledBorderDetaNotaCredito.getTitle() + " -> Unidad");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_unidadDetaNotaCreditoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetaNotaCredito.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetaNotaCredito(this.getdetanotacredito(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaNotaCredito(this.detanotacredito);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detanotacredito =(DetaNotaCredito) this.detanotacreditoLogic.getDetaNotaCreditos().toArray()[this.jTableDatosDetaNotaCredito.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detanotacredito =(DetaNotaCredito) this.detanotacreditos.toArray()[this.jTableDatosDetaNotaCredito.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detanotacredito==null) {
						this.detanotacredito = new DetaNotaCredito();
					}

					this.setVariablesFormularioToObjetoActualDetaNotaCredito(this.detanotacredito,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaNotaCredito(this.detanotacredito);
				}

				if(this.detanotacredito.getid_unidad()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_unidad = "+this.detanotacredito.getid_unidad().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetaNotaCredito(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_tipo_deta_nota_creditoDetaNotaCreditoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotipodetanotacredito=true;

			idTienePermisotipodetanotacredito=this.tienePermisosUsuarioEnPaginaWebDetaNotaCredito(TipoDetaNotaCreditoConstantesFunciones.CLASSNAME);

			if(idTienePermisotipodetanotacredito) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetaNotaCredito.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosDetaNotaCredito.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosDetaNotaCredito.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacredito =(DetaNotaCredito) this.detanotacreditoLogic.getDetaNotaCreditos().toArray()[this.jTableDatosDetaNotaCredito.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detanotacredito =(DetaNotaCredito) this.detanotacreditos.toArray()[this.jTableDatosDetaNotaCredito.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualDetaNotaCredito(this.getdetanotacredito(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysDetaNotaCredito(this.detanotacredito);

				this.tipodetanotacreditoBeanSwingJInternalFrame=new TipoDetaNotaCreditoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.tipodetanotacreditoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.tipodetanotacreditoBeanSwingJInternalFrame.getTipoDetaNotaCreditoLogic().setConnexion(this.detanotacreditoLogic.getConnexion());

				if(this.detanotacredito.getid_tipo_deta_nota_credito()!=null) {
					this.tipodetanotacreditoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.tipodetanotacreditoBeanSwingJInternalFrame.setIdActual(this.detanotacredito.getid_tipo_deta_nota_credito());
					this.tipodetanotacreditoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.tipodetanotacreditoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.tipodetanotacreditoBeanSwingJInternalFrame.inicializarActualizarBindingTablaTipoDetaNotaCredito();
				}

				JInternalFrameBase jinternalFrame =this.tipodetanotacreditoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderDetaNotaCredito=(TitledBorder)this.jScrollPanelDatosDetaNotaCredito.getBorder();
				TitledBorder titledBordertipodetanotacredito=(TitledBorder)this.tipodetanotacreditoBeanSwingJInternalFrame.jScrollPanelDatosTipoDetaNotaCredito.getBorder();

				titledBordertipodetanotacredito.setTitle(titledBorderDetaNotaCredito.getTitle() + " -> Tipo Detalle Nota Credito");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_tipo_deta_nota_creditoDetaNotaCreditoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetaNotaCredito.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetaNotaCredito(this.getdetanotacredito(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaNotaCredito(this.detanotacredito);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detanotacredito =(DetaNotaCredito) this.detanotacreditoLogic.getDetaNotaCreditos().toArray()[this.jTableDatosDetaNotaCredito.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detanotacredito =(DetaNotaCredito) this.detanotacreditos.toArray()[this.jTableDatosDetaNotaCredito.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detanotacredito==null) {
						this.detanotacredito = new DetaNotaCredito();
					}

					this.setVariablesFormularioToObjetoActualDetaNotaCredito(this.detanotacredito,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaNotaCredito(this.detanotacredito);
				}

				if(this.detanotacredito.getid_tipo_deta_nota_credito()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_tipo_deta_nota_credito = "+this.detanotacredito.getid_tipo_deta_nota_credito().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetaNotaCredito(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_tipo_devolucion_empresaDetaNotaCreditoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotipodevolucionempresa=true;

			idTienePermisotipodevolucionempresa=this.tienePermisosUsuarioEnPaginaWebDetaNotaCredito(TipoDevolucionEmpresaConstantesFunciones.CLASSNAME);

			if(idTienePermisotipodevolucionempresa) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetaNotaCredito.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosDetaNotaCredito.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosDetaNotaCredito.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacredito =(DetaNotaCredito) this.detanotacreditoLogic.getDetaNotaCreditos().toArray()[this.jTableDatosDetaNotaCredito.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detanotacredito =(DetaNotaCredito) this.detanotacreditos.toArray()[this.jTableDatosDetaNotaCredito.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualDetaNotaCredito(this.getdetanotacredito(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysDetaNotaCredito(this.detanotacredito);

				this.tipodevolucionempresaBeanSwingJInternalFrame=new TipoDevolucionEmpresaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.tipodevolucionempresaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.tipodevolucionempresaBeanSwingJInternalFrame.getTipoDevolucionEmpresaLogic().setConnexion(this.detanotacreditoLogic.getConnexion());

				if(this.detanotacredito.getid_tipo_devolucion_empresa()!=null) {
					this.tipodevolucionempresaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.tipodevolucionempresaBeanSwingJInternalFrame.setIdActual(this.detanotacredito.getid_tipo_devolucion_empresa());
					this.tipodevolucionempresaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.tipodevolucionempresaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.tipodevolucionempresaBeanSwingJInternalFrame.inicializarActualizarBindingTablaTipoDevolucionEmpresa();
				}

				JInternalFrameBase jinternalFrame =this.tipodevolucionempresaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderDetaNotaCredito=(TitledBorder)this.jScrollPanelDatosDetaNotaCredito.getBorder();
				TitledBorder titledBordertipodevolucionempresa=(TitledBorder)this.tipodevolucionempresaBeanSwingJInternalFrame.jScrollPanelDatosTipoDevolucionEmpresa.getBorder();

				titledBordertipodevolucionempresa.setTitle(titledBorderDetaNotaCredito.getTitle() + " -> Tipo Devolucion Empresa");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_tipo_devolucion_empresaDetaNotaCreditoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetaNotaCredito.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetaNotaCredito(this.getdetanotacredito(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaNotaCredito(this.detanotacredito);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detanotacredito =(DetaNotaCredito) this.detanotacreditoLogic.getDetaNotaCreditos().toArray()[this.jTableDatosDetaNotaCredito.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detanotacredito =(DetaNotaCredito) this.detanotacreditos.toArray()[this.jTableDatosDetaNotaCredito.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detanotacredito==null) {
						this.detanotacredito = new DetaNotaCredito();
					}

					this.setVariablesFormularioToObjetoActualDetaNotaCredito(this.detanotacredito,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaNotaCredito(this.detanotacredito);
				}

				if(this.detanotacredito.getid_tipo_devolucion_empresa()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_tipo_devolucion_empresa = "+this.detanotacredito.getid_tipo_devolucion_empresa().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetaNotaCredito(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtondescripcionDetaNotaCreditoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetaNotaCredito.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetaNotaCredito(this.getdetanotacredito(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaNotaCredito(this.detanotacredito);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detanotacredito =(DetaNotaCredito) this.detanotacreditoLogic.getDetaNotaCreditos().toArray()[this.jTableDatosDetaNotaCredito.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detanotacredito =(DetaNotaCredito) this.detanotacreditos.toArray()[this.jTableDatosDetaNotaCredito.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detanotacredito==null) {
						this.detanotacredito = new DetaNotaCredito();
					}

					this.setVariablesFormularioToObjetoActualDetaNotaCredito(this.detanotacredito,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaNotaCredito(this.detanotacredito);
				}

				if(this.detanotacredito.getdescripcion()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where descripcion like '%"+this.detanotacredito.getdescripcion()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetaNotaCredito(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtoncantidadDetaNotaCreditoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetaNotaCredito.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetaNotaCredito(this.getdetanotacredito(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaNotaCredito(this.detanotacredito);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detanotacredito =(DetaNotaCredito) this.detanotacreditoLogic.getDetaNotaCreditos().toArray()[this.jTableDatosDetaNotaCredito.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detanotacredito =(DetaNotaCredito) this.detanotacreditos.toArray()[this.jTableDatosDetaNotaCredito.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detanotacredito==null) {
						this.detanotacredito = new DetaNotaCredito();
					}

					this.setVariablesFormularioToObjetoActualDetaNotaCredito(this.detanotacredito,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaNotaCredito(this.detanotacredito);
				}

				if(this.detanotacredito.getcantidad()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where cantidad = "+this.detanotacredito.getcantidad().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetaNotaCredito(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonprecioDetaNotaCreditoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetaNotaCredito.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetaNotaCredito(this.getdetanotacredito(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaNotaCredito(this.detanotacredito);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detanotacredito =(DetaNotaCredito) this.detanotacreditoLogic.getDetaNotaCreditos().toArray()[this.jTableDatosDetaNotaCredito.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detanotacredito =(DetaNotaCredito) this.detanotacreditos.toArray()[this.jTableDatosDetaNotaCredito.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detanotacredito==null) {
						this.detanotacredito = new DetaNotaCredito();
					}

					this.setVariablesFormularioToObjetoActualDetaNotaCredito(this.detanotacredito,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaNotaCredito(this.detanotacredito);
				}

				if(this.detanotacredito.getprecio()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where precio = "+this.detanotacredito.getprecio().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetaNotaCredito(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonmontoDetaNotaCreditoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetaNotaCredito.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetaNotaCredito(this.getdetanotacredito(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaNotaCredito(this.detanotacredito);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detanotacredito =(DetaNotaCredito) this.detanotacreditoLogic.getDetaNotaCreditos().toArray()[this.jTableDatosDetaNotaCredito.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detanotacredito =(DetaNotaCredito) this.detanotacreditos.toArray()[this.jTableDatosDetaNotaCredito.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detanotacredito==null) {
						this.detanotacredito = new DetaNotaCredito();
					}

					this.setVariablesFormularioToObjetoActualDetaNotaCredito(this.detanotacredito,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaNotaCredito(this.detanotacredito);
				}

				if(this.detanotacredito.getmonto()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where monto = "+this.detanotacredito.getmonto().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetaNotaCredito(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtoncostoDetaNotaCreditoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetaNotaCredito.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetaNotaCredito(this.getdetanotacredito(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaNotaCredito(this.detanotacredito);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detanotacredito =(DetaNotaCredito) this.detanotacreditoLogic.getDetaNotaCreditos().toArray()[this.jTableDatosDetaNotaCredito.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detanotacredito =(DetaNotaCredito) this.detanotacreditos.toArray()[this.jTableDatosDetaNotaCredito.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detanotacredito==null) {
						this.detanotacredito = new DetaNotaCredito();
					}

					this.setVariablesFormularioToObjetoActualDetaNotaCredito(this.detanotacredito,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaNotaCredito(this.detanotacredito);
				}

				if(this.detanotacredito.getcosto()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where costo = "+this.detanotacredito.getcosto().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetaNotaCredito(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtondescuentoDetaNotaCreditoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetaNotaCredito.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetaNotaCredito(this.getdetanotacredito(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaNotaCredito(this.detanotacredito);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detanotacredito =(DetaNotaCredito) this.detanotacreditoLogic.getDetaNotaCreditos().toArray()[this.jTableDatosDetaNotaCredito.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detanotacredito =(DetaNotaCredito) this.detanotacreditos.toArray()[this.jTableDatosDetaNotaCredito.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detanotacredito==null) {
						this.detanotacredito = new DetaNotaCredito();
					}

					this.setVariablesFormularioToObjetoActualDetaNotaCredito(this.detanotacredito,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaNotaCredito(this.detanotacredito);
				}

				if(this.detanotacredito.getdescuento()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where descuento = "+this.detanotacredito.getdescuento().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetaNotaCredito(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtondescuento2DetaNotaCreditoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetaNotaCredito.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetaNotaCredito(this.getdetanotacredito(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaNotaCredito(this.detanotacredito);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detanotacredito =(DetaNotaCredito) this.detanotacreditoLogic.getDetaNotaCreditos().toArray()[this.jTableDatosDetaNotaCredito.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detanotacredito =(DetaNotaCredito) this.detanotacreditos.toArray()[this.jTableDatosDetaNotaCredito.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detanotacredito==null) {
						this.detanotacredito = new DetaNotaCredito();
					}

					this.setVariablesFormularioToObjetoActualDetaNotaCredito(this.detanotacredito,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaNotaCredito(this.detanotacredito);
				}

				if(this.detanotacredito.getdescuento2()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where descuento2 = "+this.detanotacredito.getdescuento2().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetaNotaCredito(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonimpuestoDetaNotaCreditoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetaNotaCredito.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetaNotaCredito(this.getdetanotacredito(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaNotaCredito(this.detanotacredito);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detanotacredito =(DetaNotaCredito) this.detanotacreditoLogic.getDetaNotaCreditos().toArray()[this.jTableDatosDetaNotaCredito.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detanotacredito =(DetaNotaCredito) this.detanotacreditos.toArray()[this.jTableDatosDetaNotaCredito.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detanotacredito==null) {
						this.detanotacredito = new DetaNotaCredito();
					}

					this.setVariablesFormularioToObjetoActualDetaNotaCredito(this.detanotacredito,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaNotaCredito(this.detanotacredito);
				}

				if(this.detanotacredito.getimpuesto()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where impuesto = "+this.detanotacredito.getimpuesto().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetaNotaCredito(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonporcen_ivaDetaNotaCreditoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetaNotaCredito.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetaNotaCredito(this.getdetanotacredito(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaNotaCredito(this.detanotacredito);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detanotacredito =(DetaNotaCredito) this.detanotacreditoLogic.getDetaNotaCreditos().toArray()[this.jTableDatosDetaNotaCredito.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detanotacredito =(DetaNotaCredito) this.detanotacreditos.toArray()[this.jTableDatosDetaNotaCredito.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detanotacredito==null) {
						this.detanotacredito = new DetaNotaCredito();
					}

					this.setVariablesFormularioToObjetoActualDetaNotaCredito(this.detanotacredito,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaNotaCredito(this.detanotacredito);
				}

				if(this.detanotacredito.getporcen_iva()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where porcen_iva = "+this.detanotacredito.getporcen_iva().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetaNotaCredito(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonporcen_descuenDetaNotaCreditoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetaNotaCredito.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetaNotaCredito(this.getdetanotacredito(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaNotaCredito(this.detanotacredito);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detanotacredito =(DetaNotaCredito) this.detanotacreditoLogic.getDetaNotaCreditos().toArray()[this.jTableDatosDetaNotaCredito.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detanotacredito =(DetaNotaCredito) this.detanotacreditos.toArray()[this.jTableDatosDetaNotaCredito.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detanotacredito==null) {
						this.detanotacredito = new DetaNotaCredito();
					}

					this.setVariablesFormularioToObjetoActualDetaNotaCredito(this.detanotacredito,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaNotaCredito(this.detanotacredito);
				}

				if(this.detanotacredito.getporcen_descuen()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where porcen_descuen = "+this.detanotacredito.getporcen_descuen().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetaNotaCredito(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonporcen_iceDetaNotaCreditoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetaNotaCredito.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetaNotaCredito(this.getdetanotacredito(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaNotaCredito(this.detanotacredito);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detanotacredito =(DetaNotaCredito) this.detanotacreditoLogic.getDetaNotaCreditos().toArray()[this.jTableDatosDetaNotaCredito.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detanotacredito =(DetaNotaCredito) this.detanotacreditos.toArray()[this.jTableDatosDetaNotaCredito.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detanotacredito==null) {
						this.detanotacredito = new DetaNotaCredito();
					}

					this.setVariablesFormularioToObjetoActualDetaNotaCredito(this.detanotacredito,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaNotaCredito(this.detanotacredito);
				}

				if(this.detanotacredito.getporcen_ice()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where porcen_ice = "+this.detanotacredito.getporcen_ice().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetaNotaCredito(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonsub_totalDetaNotaCreditoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetaNotaCredito.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetaNotaCredito(this.getdetanotacredito(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaNotaCredito(this.detanotacredito);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detanotacredito =(DetaNotaCredito) this.detanotacreditoLogic.getDetaNotaCreditos().toArray()[this.jTableDatosDetaNotaCredito.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detanotacredito =(DetaNotaCredito) this.detanotacreditos.toArray()[this.jTableDatosDetaNotaCredito.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detanotacredito==null) {
						this.detanotacredito = new DetaNotaCredito();
					}

					this.setVariablesFormularioToObjetoActualDetaNotaCredito(this.detanotacredito,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaNotaCredito(this.detanotacredito);
				}

				if(this.detanotacredito.getsub_total()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where sub_total = "+this.detanotacredito.getsub_total().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetaNotaCredito(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtontotalDetaNotaCreditoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetaNotaCredito.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetaNotaCredito(this.getdetanotacredito(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaNotaCredito(this.detanotacredito);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detanotacredito =(DetaNotaCredito) this.detanotacreditoLogic.getDetaNotaCreditos().toArray()[this.jTableDatosDetaNotaCredito.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detanotacredito =(DetaNotaCredito) this.detanotacreditos.toArray()[this.jTableDatosDetaNotaCredito.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detanotacredito==null) {
						this.detanotacredito = new DetaNotaCredito();
					}

					this.setVariablesFormularioToObjetoActualDetaNotaCredito(this.detanotacredito,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaNotaCredito(this.detanotacredito);
				}

				if(this.detanotacredito.gettotal()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where total = "+this.detanotacredito.gettotal().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetaNotaCredito(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_centro_costoDetaNotaCreditoActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {
			this.centrocostoBeanSwingJInternalFrame=new CentroCostoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
			this.centrocostoBeanSwingJInternalFrame.setJInternalFrameParent(this);
			this.centrocostoBeanSwingJInternalFrame.sTipoBusqueda="CentroCosto";

			if(!this.sFinalQueryGeneral_centrocosto.equals("")) {
				this.centrocostoBeanSwingJInternalFrame.setsFinalQueryGeneral(this.sFinalQueryGeneral_centrocosto);
				this.centrocostoBeanSwingJInternalFrame.sAccionBusqueda="Query";


				this.centrocostoBeanSwingJInternalFrame.procesarBusqueda(this.centrocostoBeanSwingJInternalFrame.sAccionBusqueda);
				this.centrocostoBeanSwingJInternalFrame.inicializarActualizarBindingCentroCosto(false);
			}

			if(!this.sFinalQueryComboCentroCosto.equals("") && false) {
			}


			JInternalFrameBase jinternalFrame =this.centrocostoBeanSwingJInternalFrame;
			jinternalFrame.setAutoscrolls(true);
			//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
			jinternalFrame.setVisible(true); 


			TitledBorder titledBorderDetaNotaCredito=null;
			TitledBorder titledBordercentrocosto=null;

			if(!this.jScrollPanelDatosDetaNotaCredito.getBorder().getClass().equals(EmptyBorder.class)) {
				titledBorderDetaNotaCredito=(TitledBorder)this.jScrollPanelDatosDetaNotaCredito.getBorder();
				titledBordercentrocosto=(TitledBorder)this.centrocostoBeanSwingJInternalFrame.jScrollPanelDatosCentroCosto.getBorder();

				titledBordercentrocosto.setTitle(titledBorderDetaNotaCredito.getTitle() + " -> Centro Costo");
			}

			if(!Constantes.CON_VARIAS_VENTANAS) {
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
			}

			this.jDesktopPane.add(jinternalFrame);

			jinternalFrame.setSelected(true);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);
		}
	}

	public void jButtonid_centro_costoDetaNotaCreditoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisocentrocosto=true;

			idTienePermisocentrocosto=this.tienePermisosUsuarioEnPaginaWebDetaNotaCredito(CentroCostoConstantesFunciones.CLASSNAME);

			if(idTienePermisocentrocosto) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetaNotaCredito.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosDetaNotaCredito.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosDetaNotaCredito.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacredito =(DetaNotaCredito) this.detanotacreditoLogic.getDetaNotaCreditos().toArray()[this.jTableDatosDetaNotaCredito.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detanotacredito =(DetaNotaCredito) this.detanotacreditos.toArray()[this.jTableDatosDetaNotaCredito.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualDetaNotaCredito(this.getdetanotacredito(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysDetaNotaCredito(this.detanotacredito);

				this.centrocostoBeanSwingJInternalFrame=new CentroCostoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.centrocostoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.centrocostoBeanSwingJInternalFrame.getCentroCostoLogic().setConnexion(this.detanotacreditoLogic.getConnexion());

				if(this.detanotacredito.getid_centro_costo()!=null) {
					this.centrocostoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.centrocostoBeanSwingJInternalFrame.setIdActual(this.detanotacredito.getid_centro_costo());
					this.centrocostoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.centrocostoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.centrocostoBeanSwingJInternalFrame.inicializarActualizarBindingTablaCentroCosto();
				}

				JInternalFrameBase jinternalFrame =this.centrocostoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderDetaNotaCredito=(TitledBorder)this.jScrollPanelDatosDetaNotaCredito.getBorder();
				TitledBorder titledBordercentrocosto=(TitledBorder)this.centrocostoBeanSwingJInternalFrame.jScrollPanelDatosCentroCosto.getBorder();

				titledBordercentrocosto.setTitle(titledBorderDetaNotaCredito.getTitle() + " -> Centro Costo");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_centro_costoDetaNotaCreditoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetaNotaCredito.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetaNotaCredito(this.getdetanotacredito(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaNotaCredito(this.detanotacredito);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detanotacredito =(DetaNotaCredito) this.detanotacreditoLogic.getDetaNotaCreditos().toArray()[this.jTableDatosDetaNotaCredito.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detanotacredito =(DetaNotaCredito) this.detanotacreditos.toArray()[this.jTableDatosDetaNotaCredito.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detanotacredito==null) {
						this.detanotacredito = new DetaNotaCredito();
					}

					this.setVariablesFormularioToObjetoActualDetaNotaCredito(this.detanotacredito,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaNotaCredito(this.detanotacredito);
				}

				if(this.detanotacredito.getid_centro_costo()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_centro_costo = "+this.detanotacredito.getid_centro_costo().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetaNotaCredito(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_empaqueDetaNotaCreditoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoempaque=true;

			idTienePermisoempaque=this.tienePermisosUsuarioEnPaginaWebDetaNotaCredito(EmpaqueConstantesFunciones.CLASSNAME);

			if(idTienePermisoempaque) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetaNotaCredito.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosDetaNotaCredito.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosDetaNotaCredito.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacredito =(DetaNotaCredito) this.detanotacreditoLogic.getDetaNotaCreditos().toArray()[this.jTableDatosDetaNotaCredito.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detanotacredito =(DetaNotaCredito) this.detanotacreditos.toArray()[this.jTableDatosDetaNotaCredito.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualDetaNotaCredito(this.getdetanotacredito(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysDetaNotaCredito(this.detanotacredito);

				this.empaqueBeanSwingJInternalFrame=new EmpaqueBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.empaqueBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.empaqueBeanSwingJInternalFrame.getEmpaqueLogic().setConnexion(this.detanotacreditoLogic.getConnexion());

				if(this.detanotacredito.getid_empaque()!=null) {
					this.empaqueBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.empaqueBeanSwingJInternalFrame.setIdActual(this.detanotacredito.getid_empaque());
					this.empaqueBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.empaqueBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.empaqueBeanSwingJInternalFrame.inicializarActualizarBindingTablaEmpaque();
				}

				JInternalFrameBase jinternalFrame =this.empaqueBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderDetaNotaCredito=(TitledBorder)this.jScrollPanelDatosDetaNotaCredito.getBorder();
				TitledBorder titledBorderempaque=(TitledBorder)this.empaqueBeanSwingJInternalFrame.jScrollPanelDatosEmpaque.getBorder();

				titledBorderempaque.setTitle(titledBorderDetaNotaCredito.getTitle() + " -> Empaque");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_empaqueDetaNotaCreditoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetaNotaCredito.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetaNotaCredito(this.getdetanotacredito(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaNotaCredito(this.detanotacredito);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detanotacredito =(DetaNotaCredito) this.detanotacreditoLogic.getDetaNotaCreditos().toArray()[this.jTableDatosDetaNotaCredito.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detanotacredito =(DetaNotaCredito) this.detanotacreditos.toArray()[this.jTableDatosDetaNotaCredito.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detanotacredito==null) {
						this.detanotacredito = new DetaNotaCredito();
					}

					this.setVariablesFormularioToObjetoActualDetaNotaCredito(this.detanotacredito,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaNotaCredito(this.detanotacredito);
				}

				if(this.detanotacredito.getid_empaque()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_empaque = "+this.detanotacredito.getid_empaque().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetaNotaCredito(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonincluye_impuestoDetaNotaCreditoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetaNotaCredito.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetaNotaCredito(this.getdetanotacredito(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaNotaCredito(this.detanotacredito);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detanotacredito =(DetaNotaCredito) this.detanotacreditoLogic.getDetaNotaCreditos().toArray()[this.jTableDatosDetaNotaCredito.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detanotacredito =(DetaNotaCredito) this.detanotacreditos.toArray()[this.jTableDatosDetaNotaCredito.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detanotacredito==null) {
						this.detanotacredito = new DetaNotaCredito();
					}

					this.setVariablesFormularioToObjetoActualDetaNotaCredito(this.detanotacredito,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaNotaCredito(this.detanotacredito);
				}

				if(this.detanotacredito.getincluye_impuesto()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where incluye_impuesto = "+this.detanotacredito.getincluye_impuesto().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetaNotaCredito(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonfecha_emisionDetaNotaCreditoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetaNotaCredito.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetaNotaCredito(this.getdetanotacredito(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaNotaCredito(this.detanotacredito);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detanotacredito =(DetaNotaCredito) this.detanotacreditoLogic.getDetaNotaCreditos().toArray()[this.jTableDatosDetaNotaCredito.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detanotacredito =(DetaNotaCredito) this.detanotacreditos.toArray()[this.jTableDatosDetaNotaCredito.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detanotacredito==null) {
						this.detanotacredito = new DetaNotaCredito();
					}

					this.setVariablesFormularioToObjetoActualDetaNotaCredito(this.detanotacredito,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaNotaCredito(this.detanotacredito);
				}

				if(this.detanotacredito.getfecha_emision()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where fecha_emision = '"+Funciones2.getStringPostgresDate(this.detanotacredito.getfecha_emision())+"' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetaNotaCredito(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtoncodigo_loteDetaNotaCreditoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetaNotaCredito.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetaNotaCredito(this.getdetanotacredito(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaNotaCredito(this.detanotacredito);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detanotacredito =(DetaNotaCredito) this.detanotacreditoLogic.getDetaNotaCreditos().toArray()[this.jTableDatosDetaNotaCredito.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detanotacredito =(DetaNotaCredito) this.detanotacreditos.toArray()[this.jTableDatosDetaNotaCredito.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detanotacredito==null) {
						this.detanotacredito = new DetaNotaCredito();
					}

					this.setVariablesFormularioToObjetoActualDetaNotaCredito(this.detanotacredito,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaNotaCredito(this.detanotacredito);
				}

				if(this.detanotacredito.getcodigo_lote()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where codigo_lote like '%"+this.detanotacredito.getcodigo_lote()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetaNotaCredito(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonnumero_cajaDetaNotaCreditoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetaNotaCredito.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetaNotaCredito(this.getdetanotacredito(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaNotaCredito(this.detanotacredito);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detanotacredito =(DetaNotaCredito) this.detanotacreditoLogic.getDetaNotaCreditos().toArray()[this.jTableDatosDetaNotaCredito.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detanotacredito =(DetaNotaCredito) this.detanotacreditos.toArray()[this.jTableDatosDetaNotaCredito.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detanotacredito==null) {
						this.detanotacredito = new DetaNotaCredito();
					}

					this.setVariablesFormularioToObjetoActualDetaNotaCredito(this.detanotacredito,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaNotaCredito(this.detanotacredito);
				}

				if(this.detanotacredito.getnumero_caja()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where numero_caja like '%"+this.detanotacredito.getnumero_caja()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetaNotaCredito(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditoLogic.closeNewConnexionToDeep();
				}

			}
		}

	
	
	public void jButtonFK_IdAnioDetaNotaCreditoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingDetaNotaCredito(false,false);

			this.getDetaNotaCreditosFK_IdAnio();

			this.inicializarActualizarBindingDetaNotaCredito(false);

			//if(DetaNotaCreditoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingDetaNotaCredito(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdBodegaDetaNotaCreditoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingDetaNotaCredito(false,false);

			this.getDetaNotaCreditosFK_IdBodega();

			this.inicializarActualizarBindingDetaNotaCredito(false);

			//if(DetaNotaCreditoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingDetaNotaCredito(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdCentroCostoDetaNotaCreditoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingDetaNotaCredito(false,false);

			this.getDetaNotaCreditosFK_IdCentroCosto();

			this.inicializarActualizarBindingDetaNotaCredito(false);

			//if(DetaNotaCreditoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingDetaNotaCredito(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdEjercicioDetaNotaCreditoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingDetaNotaCredito(false,false);

			this.getDetaNotaCreditosFK_IdEjercicio();

			this.inicializarActualizarBindingDetaNotaCredito(false);

			//if(DetaNotaCreditoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingDetaNotaCredito(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdEmpaqueDetaNotaCreditoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingDetaNotaCredito(false,false);

			this.getDetaNotaCreditosFK_IdEmpaque();

			this.inicializarActualizarBindingDetaNotaCredito(false);

			//if(DetaNotaCreditoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingDetaNotaCredito(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdEmpresaDetaNotaCreditoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingDetaNotaCredito(false,false);

			this.getDetaNotaCreditosFK_IdEmpresa();

			this.inicializarActualizarBindingDetaNotaCredito(false);

			//if(DetaNotaCreditoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingDetaNotaCredito(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdMesDetaNotaCreditoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingDetaNotaCredito(false,false);

			this.getDetaNotaCreditosFK_IdMes();

			this.inicializarActualizarBindingDetaNotaCredito(false);

			//if(DetaNotaCreditoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingDetaNotaCredito(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdNotaCreditoDetaNotaCreditoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingDetaNotaCredito(false,false);

			this.getDetaNotaCreditosFK_IdNotaCredito();

			this.inicializarActualizarBindingDetaNotaCredito(false);

			//if(DetaNotaCreditoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingDetaNotaCredito(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdPeriodoDetaNotaCreditoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingDetaNotaCredito(false,false);

			this.getDetaNotaCreditosFK_IdPeriodo();

			this.inicializarActualizarBindingDetaNotaCredito(false);

			//if(DetaNotaCreditoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingDetaNotaCredito(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdProductoDetaNotaCreditoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingDetaNotaCredito(false,false);

			this.getDetaNotaCreditosFK_IdProducto();

			this.inicializarActualizarBindingDetaNotaCredito(false);

			//if(DetaNotaCreditoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingDetaNotaCredito(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdSucursalDetaNotaCreditoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingDetaNotaCredito(false,false);

			this.getDetaNotaCreditosFK_IdSucursal();

			this.inicializarActualizarBindingDetaNotaCredito(false);

			//if(DetaNotaCreditoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingDetaNotaCredito(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdTipoDetaNotaCreditoDetaNotaCreditoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingDetaNotaCredito(false,false);

			this.getDetaNotaCreditosFK_IdTipoDetaNotaCredito();

			this.inicializarActualizarBindingDetaNotaCredito(false);

			//if(DetaNotaCreditoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingDetaNotaCredito(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdTipoDevolucionEmpresaDetaNotaCreditoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingDetaNotaCredito(false,false);

			this.getDetaNotaCreditosFK_IdTipoDevolucionEmpresa();

			this.inicializarActualizarBindingDetaNotaCredito(false);

			//if(DetaNotaCreditoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingDetaNotaCredito(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdUnidadDetaNotaCreditoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingDetaNotaCredito(false,false);

			this.getDetaNotaCreditosFK_IdUnidad();

			this.inicializarActualizarBindingDetaNotaCredito(false);

			//if(DetaNotaCreditoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingDetaNotaCredito(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditoLogic.closeNewConnexionToDeep();
			}
		}
	}

	
	public void closingInternalFrameDetaNotaCredito() {
		if(this.jInternalFrameDetalleFormDetaNotaCredito!=null) {
			
		
		
		}
		
		if(this.jInternalFrameDetalleFormDetaNotaCredito!=null) {
			this.jInternalFrameDetalleFormDetaNotaCredito.setVisible(false);	    			
			this.jInternalFrameDetalleFormDetaNotaCredito.dispose();
			this.jInternalFrameDetalleFormDetaNotaCredito=null;
		}
		
		
		if(this.jInternalFrameReporteDinamicoDetaNotaCredito!=null) {
			this.jInternalFrameReporteDinamicoDetaNotaCredito.setVisible(false);	    			
			this.jInternalFrameReporteDinamicoDetaNotaCredito.dispose();
			this.jInternalFrameReporteDinamicoDetaNotaCredito=null;
		}
		
		if(this.jInternalFrameImportacionDetaNotaCredito!=null) {
			this.jInternalFrameImportacionDetaNotaCredito.setVisible(false);	    			
			this.jInternalFrameImportacionDetaNotaCredito.dispose();
			this.jInternalFrameImportacionDetaNotaCredito=null;
		}		
		
		
		this.setVisible(false);
		this.dispose();
		//this=null;
	}
	
	
	
	public void jButtonActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {			
			this.startProcessDetaNotaCredito();
			
			DetaNotaCreditoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.BUTTON,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.detanotacredito,new Object(),this.detanotacreditoParameterGeneral,this.detanotacreditoReturnGeneral);
			
			
			if(sTipo.equals("NuevoDetaNotaCredito")) {
				jButtonNuevoDetaNotaCreditoActionPerformed(evt,false);
			} else if(sTipo.equals("DuplicarDetaNotaCredito")) {
				jButtonDuplicarDetaNotaCreditoActionPerformed(evt,false);
			} else if(sTipo.equals("CopiarDetaNotaCredito")) {
				jButtonCopiarDetaNotaCreditoActionPerformed(evt);
			} else if(sTipo.equals("VerFormDetaNotaCredito")) {
				jButtonVerFormDetaNotaCreditoActionPerformed(evt);
			} else if(sTipo.equals("NuevoToolBarDetaNotaCredito")) {
				jButtonNuevoDetaNotaCreditoActionPerformed(evt,false);
			} else if(sTipo.equals("DuplicarToolBarDetaNotaCredito")) {
				jButtonDuplicarDetaNotaCreditoActionPerformed(evt,false);
			} else if(sTipo.equals("MenuItemNuevoDetaNotaCredito")) {
				jButtonNuevoDetaNotaCreditoActionPerformed(evt,false);
			} else if(sTipo.equals("MenuItemDuplicarDetaNotaCredito")) {
				jButtonDuplicarDetaNotaCreditoActionPerformed(evt,false);
			} else if(sTipo.equals("NuevoRelacionesDetaNotaCredito")) {
				jButtonNuevoDetaNotaCreditoActionPerformed(evt,true);
			} else if(sTipo.equals("NuevoRelacionesToolBarDetaNotaCredito")) {
				jButtonNuevoDetaNotaCreditoActionPerformed(evt,true);
			} else if(sTipo.equals("MenuItemNuevoRelacionesDetaNotaCredito")) {
				jButtonNuevoDetaNotaCreditoActionPerformed(evt,true);
			} else if(sTipo.equals("ModificarDetaNotaCredito")) {
				jButtonModificarDetaNotaCreditoActionPerformed(evt);
			} else if(sTipo.equals("ModificarToolBarDetaNotaCredito")) {
				jButtonModificarDetaNotaCreditoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemModificarDetaNotaCredito")) {
				jButtonModificarDetaNotaCreditoActionPerformed(evt);
			} else if(sTipo.equals("ActualizarDetaNotaCredito")) {
				jButtonActualizarDetaNotaCreditoActionPerformed(evt);
			} else if(sTipo.equals("ActualizarToolBarDetaNotaCredito")) {
				jButtonActualizarDetaNotaCreditoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemActualizarDetaNotaCredito")) {
				jButtonActualizarDetaNotaCreditoActionPerformed(evt);
			} else if(sTipo.equals("EliminarDetaNotaCredito")) {
				jButtonEliminarDetaNotaCreditoActionPerformed(evt);
			} else if(sTipo.equals("EliminarToolBarDetaNotaCredito")) {
				jButtonEliminarDetaNotaCreditoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemEliminarDetaNotaCredito")) {
				jButtonEliminarDetaNotaCreditoActionPerformed(evt);
			} else if(sTipo.equals("CancelarDetaNotaCredito")) {
				jButtonCancelarDetaNotaCreditoActionPerformed(evt);
			} else if(sTipo.equals("CancelarToolBarDetaNotaCredito")) {
				jButtonCancelarDetaNotaCreditoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCancelarDetaNotaCredito")) {
				jButtonCancelarDetaNotaCreditoActionPerformed(evt);
			} else if(sTipo.equals("CerrarDetaNotaCredito")) {
				jButtonCerrarDetaNotaCreditoActionPerformed(evt);
			} else if(sTipo.equals("CerrarToolBarDetaNotaCredito")) {
				jButtonCerrarDetaNotaCreditoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCerrarDetaNotaCredito")) {
				jButtonCerrarDetaNotaCreditoActionPerformed(evt);
			} else if(sTipo.equals("MostrarOcultarToolBarDetaNotaCredito")) {
				jButtonMostrarOcultarDetaNotaCreditoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemDetalleCerrarDetaNotaCredito")) {
				jButtonCancelarDetaNotaCreditoActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosDetaNotaCredito")) {
				jButtonGuardarCambiosDetaNotaCreditoActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosToolBarDetaNotaCredito")) {
				jButtonGuardarCambiosDetaNotaCreditoActionPerformed(evt);
			} else if(sTipo.equals("CopiarToolBarDetaNotaCredito")) {
				jButtonCopiarDetaNotaCreditoActionPerformed(evt);
			} else if(sTipo.equals("VerFormToolBarDetaNotaCredito")) {
				jButtonVerFormDetaNotaCreditoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemGuardarCambiosDetaNotaCredito")) {
				jButtonGuardarCambiosDetaNotaCreditoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCopiarDetaNotaCredito")) {
				jButtonCopiarDetaNotaCreditoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemVerFormDetaNotaCredito")) {
				jButtonVerFormDetaNotaCreditoActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosTablaDetaNotaCredito")) {
				jButtonGuardarCambiosDetaNotaCreditoActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosTablaToolBarDetaNotaCredito")) {
				jButtonGuardarCambiosDetaNotaCreditoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemGuardarCambiosTablaDetaNotaCredito")) {
				jButtonGuardarCambiosDetaNotaCreditoActionPerformed(evt);
			} else if(sTipo.equals("RecargarInformacionDetaNotaCredito")) {
				jButtonRecargarInformacionDetaNotaCreditoActionPerformed(evt);
			} else if(sTipo.equals("RecargarInformacionToolBarDetaNotaCredito")) {
				jButtonRecargarInformacionDetaNotaCreditoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemRecargarInformacionDetaNotaCredito")) {
				jButtonRecargarInformacionDetaNotaCreditoActionPerformed(evt);
			}
			else if(sTipo.equals("AnterioresDetaNotaCredito")) {
				jButtonAnterioresDetaNotaCreditoActionPerformed(evt);
			} else if(sTipo.equals("AnterioresToolBarDetaNotaCredito")) {
				jButtonAnterioresDetaNotaCreditoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemAnterioreDetaNotaCredito")) {
				jButtonAnterioresDetaNotaCreditoActionPerformed(evt);
			} else if(sTipo.equals("SiguientesDetaNotaCredito")) {
				jButtonSiguientesDetaNotaCreditoActionPerformed(evt);
			} else if(sTipo.equals("SiguientesToolBarDetaNotaCredito")) {
				jButtonSiguientesDetaNotaCreditoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemSiguientesDetaNotaCredito")) {
				jButtonSiguientesDetaNotaCreditoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemAbrirOrderByDetaNotaCredito") || sTipo.equals("MenuItemDetalleAbrirOrderByDetaNotaCredito")) {
				jButtonAbrirOrderByDetaNotaCreditoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemMostrarOcultarDetaNotaCredito") || sTipo.equals("MenuItemDetalleMostrarOcultarDetaNotaCredito")) {
				jButtonMostrarOcultarDetaNotaCreditoActionPerformed(evt);
			} else if(sTipo.equals("NuevoGuardarCambiosDetaNotaCredito")) {
				jButtonNuevoGuardarCambiosDetaNotaCreditoActionPerformed(evt);
			} else if(sTipo.equals("NuevoGuardarCambiosToolBarDetaNotaCredito")) {
				jButtonNuevoGuardarCambiosDetaNotaCreditoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemNuevoGuardarCambiosDetaNotaCredito")) {
				jButtonNuevoGuardarCambiosDetaNotaCreditoActionPerformed(evt);
			} 
			else if(sTipo.equals("CerrarReporteDinamicoDetaNotaCredito")) {
				jButtonCerrarReporteDinamicoDetaNotaCreditoActionPerformed(evt);
			} else if(sTipo.equals("GenerarReporteDinamicoDetaNotaCredito")) {
				jButtonGenerarReporteDinamicoDetaNotaCreditoActionPerformed(evt);
			} else if(sTipo.equals("GenerarExcelReporteDinamicoDetaNotaCredito")) {
				
				jButtonGenerarExcelReporteDinamicoDetaNotaCreditoActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarImportacionDetaNotaCredito")) {
				jButtonCerrarImportacionDetaNotaCreditoActionPerformed(evt);
			} else if(sTipo.equals("GenerarImportacionDetaNotaCredito")) {
				
				jButtonGenerarImportacionDetaNotaCreditoActionPerformed(evt);
				
			} else if(sTipo.equals("AbrirImportacionDetaNotaCredito")) {
				
				jButtonAbrirImportacionDetaNotaCreditoActionPerformed(evt);
				
			} else if(sTipo.equals("TiposAccionesDetaNotaCredito")) {
				jComboBoxTiposAccionesDetaNotaCreditoActionListener(evt,false);
			} else if(sTipo.equals("TiposRelacionesDetaNotaCredito")) {
				jComboBoxTiposRelacionesDetaNotaCreditoActionListener(evt);
			} else if(sTipo.equals("TiposAccionesFormularioDetaNotaCredito")) {
				jComboBoxTiposAccionesDetaNotaCreditoActionListener(evt,true);
			} else if(sTipo.equals("TiposSeleccionarDetaNotaCredito")) {
				
				jComboBoxTiposSeleccionarDetaNotaCreditoActionListener(evt);
				
			} else if(sTipo.equals("ValorCampoGeneralDetaNotaCredito")) {
				jTextFieldValorCampoGeneralDetaNotaCreditoActionListener(evt);
			}
			
			else if(sTipo.equals("AbrirTotalesDetaNotaCredito")) {
				jButtonAbrirTotalesDetaNotaCreditoActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarTotalesDetaNotaCredito")) {
				jButtonCerrarTotalesDetaNotaCreditoActionPerformed(evt);
			} 
			
			else if(sTipo.equals("AbrirOrderByDetaNotaCredito")) {
				jButtonAbrirOrderByDetaNotaCreditoActionPerformed(evt);
				
			} else if(sTipo.equals("AbrirOrderByToolBarDetaNotaCredito")) {
				jButtonAbrirOrderByDetaNotaCreditoActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarOrderByDetaNotaCredito")) {
				jButtonCerrarOrderByDetaNotaCreditoActionPerformed(evt);
			} 
						
			
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("idDetaNotaCreditoBusqueda")) {
				this.jButtonidDetaNotaCreditoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_empresaDetaNotaCreditoUpdate")) {
				this.jButtonid_empresaDetaNotaCreditoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_empresaDetaNotaCreditoBusqueda")) {
				this.jButtonid_empresaDetaNotaCreditoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_sucursalDetaNotaCreditoUpdate")) {
				this.jButtonid_sucursalDetaNotaCreditoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_sucursalDetaNotaCreditoBusqueda")) {
				this.jButtonid_sucursalDetaNotaCreditoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_ejercicioDetaNotaCreditoUpdate")) {
				this.jButtonid_ejercicioDetaNotaCreditoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_ejercicioDetaNotaCreditoBusqueda")) {
				this.jButtonid_ejercicioDetaNotaCreditoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_periodoDetaNotaCreditoUpdate")) {
				this.jButtonid_periodoDetaNotaCreditoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_periodoDetaNotaCreditoBusqueda")) {
				this.jButtonid_periodoDetaNotaCreditoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_anioDetaNotaCreditoUpdate")) {
				this.jButtonid_anioDetaNotaCreditoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_anioDetaNotaCreditoBusqueda")) {
				this.jButtonid_anioDetaNotaCreditoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_mesDetaNotaCreditoUpdate")) {
				this.jButtonid_mesDetaNotaCreditoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_mesDetaNotaCreditoBusqueda")) {
				this.jButtonid_mesDetaNotaCreditoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_nota_creditoDetaNotaCreditoUpdate")) {
				this.jButtonid_nota_creditoDetaNotaCreditoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_nota_creditoDetaNotaCreditoBusqueda")) {
				this.jButtonid_nota_creditoDetaNotaCreditoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_bodegaDetaNotaCreditoUpdate")) {
				this.jButtonid_bodegaDetaNotaCreditoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_bodegaDetaNotaCreditoBusqueda")) {
				this.jButtonid_bodegaDetaNotaCreditoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_productoDetaNotaCredito")) {
				this.jButtonid_productoDetaNotaCreditoActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_productoDetaNotaCreditoUpdate")) {
				this.jButtonid_productoDetaNotaCreditoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_productoDetaNotaCreditoBusqueda")) {
				this.jButtonid_productoDetaNotaCreditoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_unidadDetaNotaCreditoUpdate")) {
				this.jButtonid_unidadDetaNotaCreditoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_unidadDetaNotaCreditoBusqueda")) {
				this.jButtonid_unidadDetaNotaCreditoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_deta_nota_creditoDetaNotaCreditoUpdate")) {
				this.jButtonid_tipo_deta_nota_creditoDetaNotaCreditoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_deta_nota_creditoDetaNotaCreditoBusqueda")) {
				this.jButtonid_tipo_deta_nota_creditoDetaNotaCreditoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_devolucion_empresaDetaNotaCreditoUpdate")) {
				this.jButtonid_tipo_devolucion_empresaDetaNotaCreditoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_devolucion_empresaDetaNotaCreditoBusqueda")) {
				this.jButtonid_tipo_devolucion_empresaDetaNotaCreditoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("descripcionDetaNotaCreditoBusqueda")) {
				this.jButtondescripcionDetaNotaCreditoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("cantidadDetaNotaCreditoBusqueda")) {
				this.jButtoncantidadDetaNotaCreditoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("precioDetaNotaCreditoBusqueda")) {
				this.jButtonprecioDetaNotaCreditoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("montoDetaNotaCreditoBusqueda")) {
				this.jButtonmontoDetaNotaCreditoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("costoDetaNotaCreditoBusqueda")) {
				this.jButtoncostoDetaNotaCreditoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("descuentoDetaNotaCreditoBusqueda")) {
				this.jButtondescuentoDetaNotaCreditoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("descuento2DetaNotaCreditoBusqueda")) {
				this.jButtondescuento2DetaNotaCreditoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("impuestoDetaNotaCreditoBusqueda")) {
				this.jButtonimpuestoDetaNotaCreditoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("porcen_ivaDetaNotaCreditoBusqueda")) {
				this.jButtonporcen_ivaDetaNotaCreditoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("porcen_descuenDetaNotaCreditoBusqueda")) {
				this.jButtonporcen_descuenDetaNotaCreditoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("porcen_iceDetaNotaCreditoBusqueda")) {
				this.jButtonporcen_iceDetaNotaCreditoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("sub_totalDetaNotaCreditoBusqueda")) {
				this.jButtonsub_totalDetaNotaCreditoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("totalDetaNotaCreditoBusqueda")) {
				this.jButtontotalDetaNotaCreditoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_centro_costoDetaNotaCredito")) {
				this.jButtonid_centro_costoDetaNotaCreditoActionPerformed(evt);
			}
			//BUSQUEDA ARBOL CAMPO
			else if(sTipo.equals("id_centro_costoDetaNotaCreditoArbol")) {
				this.abrirFrameTreeCentroCosto("BUSQUEDA_FK");
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_centro_costoDetaNotaCreditoUpdate")) {
				this.jButtonid_centro_costoDetaNotaCreditoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_centro_costoDetaNotaCreditoBusqueda")) {
				this.jButtonid_centro_costoDetaNotaCreditoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_empaqueDetaNotaCreditoUpdate")) {
				this.jButtonid_empaqueDetaNotaCreditoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_empaqueDetaNotaCreditoBusqueda")) {
				this.jButtonid_empaqueDetaNotaCreditoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("incluye_impuestoDetaNotaCreditoBusqueda")) {
				this.jButtonincluye_impuestoDetaNotaCreditoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fecha_emisionDetaNotaCreditoBusqueda")) {
				this.jButtonfecha_emisionDetaNotaCreditoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("codigo_loteDetaNotaCreditoBusqueda")) {
				this.jButtoncodigo_loteDetaNotaCreditoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("numero_cajaDetaNotaCreditoBusqueda")) {
				this.jButtonnumero_cajaDetaNotaCreditoBusquedaActionPerformed(evt);
			}
			
			
			else if(sTipo.equals("id_centro_costoDetaNotaCredito")) {
				this.jButtonid_centro_costoDetaNotaCreditoActionPerformed(evt);
			}
			else if(sTipo.equals("id_productoDetaNotaCredito")) {
				this.jButtonid_productoDetaNotaCreditoActionPerformed(evt);
			}
			
			
			else if(sTipo.equals("FK_IdBodegaDetaNotaCredito")) {
				this.jButtonFK_IdBodegaDetaNotaCreditoActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdCentroCostoDetaNotaCredito")) {
				this.jButtonFK_IdCentroCostoDetaNotaCreditoActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdEmpaqueDetaNotaCredito")) {
				this.jButtonFK_IdEmpaqueDetaNotaCreditoActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdNotaCreditoDetaNotaCredito")) {
				this.jButtonFK_IdNotaCreditoDetaNotaCreditoActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdProductoDetaNotaCredito")) {
				this.jButtonFK_IdProductoDetaNotaCreditoActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdTipoDetaNotaCreditoDetaNotaCredito")) {
				this.jButtonFK_IdTipoDetaNotaCreditoDetaNotaCreditoActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdTipoDevolucionEmpresaDetaNotaCredito")) {
				this.jButtonFK_IdTipoDevolucionEmpresaDetaNotaCreditoActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdUnidadDetaNotaCredito")) {
				this.jButtonFK_IdUnidadDetaNotaCreditoActionPerformed(evt);
			}
			
			;
			
			
			DetaNotaCreditoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.BUTTON,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.detanotacredito,new Object(),this.detanotacreditoParameterGeneral,this.detanotacreditoReturnGeneral);
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);
			
  		} finally {
      		this.finishProcessDetaNotaCredito();
      	}
    }
	
	//FUNCIONA AL APLASTAR ENTER
	public void jTextFieldActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaDetaNotaCreditoActual();
			
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				Container containerParent=null;
				JTextField jTextField=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParent=jTextField.getParent();
						
				if(containerParent!=null && containerParent.getClass().equals(JTableMe.class)) {
					esControlTabla=true;
				}
						
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.detanotacredito);
				
				this.actualizarInformacion("INFO_PADRE",false,this.detanotacredito);
				
				DetaNotaCreditoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detanotacredito,new Object(),this.detanotacreditoParameterGeneral,this.detanotacreditoReturnGeneral);
				
				


				
				DetaNotaCreditoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detanotacredito,new Object(),this.detanotacreditoParameterGeneral,this.detanotacreditoReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(DetaNotaCredito.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",DetaNotaCredito.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
				}
				
			} catch(Exception e) {
  				FuncionesSwing.manageException2(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);
  			}
    }
	
	public Boolean existeCambioValor(ControlTipo controlTipo,String sTipo) throws Exception {
		Boolean existeCambio=true;
		
		try {
			DetaNotaCredito detanotacreditoLocal=null;
			
			if(!this.getEsControlTabla()) {
				detanotacreditoLocal=this.detanotacredito;
			} else {
				detanotacreditoLocal=this.detanotacreditoAnterior;
			}
			
			if(controlTipo.equals(ControlTipo.TEXTBOX)) {
				


			}
		
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);
  		}
		
		return existeCambio;
	}
	
	public void jTextFieldFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTBOX,sTipo)) {
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextField jTextField=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParent=jTextField.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.detanotacredito);
				
				this.actualizarInformacion("INFO_PADRE",false,this.detanotacredito);
				
				DetaNotaCreditoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detanotacredito,new Object(),this.detanotacreditoParameterGeneral,this.detanotacreditoReturnGeneral);
							
				
				


				
				DetaNotaCreditoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detanotacredito,new Object(),this.detanotacreditoParameterGeneral,this.detanotacreditoReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(DetaNotaCredito.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",DetaNotaCredito.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextFieldFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaDetaNotaCreditoActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosDetaNotaCredito.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditoAnterior =(DetaNotaCredito) this.detanotacreditoLogic.getDetaNotaCreditos().toArray()[this.jTableDatosDetaNotaCredito.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.detanotacreditoAnterior =(DetaNotaCredito) this.detanotacreditos.toArray()[this.jTableDatosDetaNotaCredito.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);
  		}
    }	
	
	//CUANDO SE CAMBIA ALGUN FORMATO(TIPO DE LETRA,NEGRILLA,ETC)
	public void jTextFieldChangedUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			/*
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			//System.out.println("UPDATE");
			
			Boolean esControlTabla=false;
			//JTextField jTextField=null;
			Container containerParent=null;
			Component componentOpposite=null;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			DetaNotaCreditoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detanotacredito,new Object(),this.detanotacreditoParameterGeneral,this.detanotacreditoReturnGeneral);
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			//jTextField=(JTextField)evt.getSource();
			
			containerParent=jTextField.getParent();
					
			componentOpposite=null;//evt.getOppositeComponent();
			
			if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
				|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
			) {					
				esControlTabla=true;
			}
			
			this.esControlTabla=esControlTabla;
			
			


			
			DetaNotaCreditoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detanotacredito,new Object(),this.detanotacreditoParameterGeneral,this.detanotacreditoReturnGeneral);
			*/
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);
  		}
    }
	
	//CUANDO SE QUITA ALGUN CARACTER
	public void jTextFieldRemoveUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			//System.out.println("REMOVE");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);
  		}
    }
	
	//CUANDO SE INGRESA ALGUN CARACTER
	public void jTextFieldInsertUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			//System.out.println("INSERT");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);
  		}
    }
	
	//FUNCIONA AL APLASTAR ENTER
	public void jFormattedTextFieldActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaDetaNotaCreditoActual();
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				Container containerParent=null;
				Container containerParentAux=null;
				JFormattedTextField JFormattedTextField=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				JFormattedTextField=(JFormattedTextField)evt.getSource();
				
				containerParentAux=JFormattedTextField.getParent();
				
				if(containerParentAux!=null && containerParentAux.getClass().equals(JDateChooser.class)) {
					containerParent=containerParentAux.getParent();
				}
				
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.detanotacredito);
				
				this.actualizarInformacion("INFO_PADRE",false,this.detanotacredito);
				
				DetaNotaCreditoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detanotacredito,new Object(),this.detanotacreditoParameterGeneral,this.detanotacreditoReturnGeneral);
								
						
				


				
				DetaNotaCreditoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detanotacredito,new Object(),this.detanotacreditoParameterGeneral,this.detanotacreditoReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(DetaNotaCredito.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",DetaNotaCredito.class.getName(),sTipo,"DATE",esControlTabla,conIrServidorAplicacionParent,
							id,JFormattedTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jFormattedTextFieldFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTBOX,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextField jTextField=null;
				Container containerParent=null;
				Container containerParentAux=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParentAux=jTextField.getParent();
						
				if(containerParentAux!=null && containerParentAux.getClass().equals(JDateChooser.class)) {
					containerParent=containerParentAux.getParent();
				}
				
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.detanotacredito);
				
				this.actualizarInformacion("INFO_PADRE",false,this.detanotacredito);
				
				DetaNotaCreditoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detanotacredito,new Object(),this.detanotacreditoParameterGeneral,this.detanotacreditoReturnGeneral);
								
				
				


				
				DetaNotaCreditoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detanotacredito,new Object(),this.detanotacreditoParameterGeneral,this.detanotacreditoReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(DetaNotaCredito.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",DetaNotaCredito.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jFormattedTextFieldFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaDetaNotaCreditoActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosDetaNotaCredito.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditoAnterior =(DetaNotaCredito) this.detanotacreditoLogic.getDetaNotaCreditos().toArray()[this.jTableDatosDetaNotaCredito.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.detanotacreditoAnterior =(DetaNotaCredito) this.detanotacreditos.toArray()[this.jTableDatosDetaNotaCredito.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.DATE,sTipo)) {
				this.actualizarInformacion("EVENTO_CONTROL",false,this.detanotacredito);
				
				this.actualizarInformacion("INFO_PADRE",false,this.detanotacredito);
			}	
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaDetaNotaCreditoActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosDetaNotaCredito.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditoAnterior =(DetaNotaCredito) this.detanotacreditoLogic.getDetaNotaCreditos().toArray()[this.jTableDatosDetaNotaCredito.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.detanotacreditoAnterior =(DetaNotaCredito) this.detanotacreditos.toArray()[this.jTableDatosDetaNotaCredito.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaDetaNotaCreditoActual();
				
			this.actualizarInformacion("EVENTO_CONTROL",false,this.detanotacredito);
			
			this.actualizarInformacion("INFO_PADRE",false,this.detanotacredito);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jTextAreaFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTAREA,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextArea jTextArea=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextArea=(JTextArea)evt.getSource();
				
				containerParent=jTextArea.getParent();
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.detanotacredito);
				
				this.actualizarInformacion("INFO_PADRE",false,this.detanotacredito);
				
				DetaNotaCreditoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detanotacredito,new Object(),this.detanotacreditoParameterGeneral,this.detanotacreditoReturnGeneral);
							
				
				


				
				DetaNotaCreditoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detanotacredito,new Object(),this.detanotacreditoParameterGeneral,this.detanotacreditoReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(DetaNotaCredito.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",DetaNotaCredito.class.getName(),sTipo,"TEXTAREA",esControlTabla,conIrServidorAplicacionParent,
							id,jTextArea, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaDetaNotaCreditoActual();
			
				//SELECCIONA FILA A OBJETO ANTERIOR
				Integer intSelectedRow = this.jTableDatosDetaNotaCredito.getSelectedRow();
						
				if(intSelectedRow!=null && intSelectedRow>-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detanotacreditoAnterior =(DetaNotaCredito) this.detanotacreditoLogic.getDetaNotaCreditos().toArray()[this.jTableDatosDetaNotaCredito.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
						this.detanotacreditoAnterior =(DetaNotaCredito) this.detanotacreditos.toArray()[this.jTableDatosDetaNotaCredito.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					//System.out.println(this.banco);
				}
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaChangedUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			/*
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			//System.out.println("UPDATE");
			
			Boolean esControlTabla=false;
			//JTextArea jTextArea=null;
			Container containerParent=null;
			Component componentOpposite=null;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			DetaNotaCreditoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detanotacredito,new Object(),this.detanotacreditoParameterGeneral,this.detanotacreditoReturnGeneral);
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			//jTextArea=(JTextArea)evt.getSource();
			
			containerParent=jTextArea.getParent();
			componentOpposite=null;//evt.getOppositeComponent();
			
			if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
				|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
			) {
				esControlTabla=true;
			}
			
			this.esControlTabla=esControlTabla;
			
			


			
			DetaNotaCreditoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detanotacredito,new Object(),this.detanotacreditoParameterGeneral,this.detanotacreditoReturnGeneral);
			
			*/
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaRemoveUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			//System.out.println("REMOVE");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaInsertUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			
			//System.out.println("INSERT");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO EXISTE O NO ES APLICABLE
	public void jTextAreaActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaDetaNotaCreditoActual();
			
			this.actualizarInformacion("EVENTO_CONTROL",false,this.detanotacredito);
			
			this.actualizarInformacion("INFO_PADRE",false,this.detanotacredito);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jLabelFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JLabel jLabel=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jLabel=(JLabel)evt.getSource();
				
				containerParent=jLabel.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.detanotacredito);
				
				this.actualizarInformacion("INFO_PADRE",false,this.detanotacredito);
				
				DetaNotaCreditoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detanotacredito,new Object(),this.detanotacreditoParameterGeneral,this.detanotacreditoReturnGeneral);
								
				
				


				
				DetaNotaCreditoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detanotacredito,new Object(),this.detanotacreditoParameterGeneral,this.detanotacreditoReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(DetaNotaCredito.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",DetaNotaCredito.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jLabel, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}	
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jLabelFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaDetaNotaCreditoActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosDetaNotaCredito.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditoAnterior =(DetaNotaCredito) this.detanotacreditoLogic.getDetaNotaCreditos().toArray()[this.jTableDatosDetaNotaCredito.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.detanotacreditoAnterior =(DetaNotaCredito) this.detanotacreditos.toArray()[this.jTableDatosDetaNotaCredito.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO EXISTE O NO ES APLICABLE
	public void jLabelActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaDetaNotaCreditoActual();
				
			this.actualizarInformacion("EVENTO_CONTROL",false,this.detanotacredito);
			
			this.actualizarInformacion("INFO_PADRE",false,this.detanotacredito);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxItemListenerGeneral(String sTipo,ItemEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaDetaNotaCreditoActual();
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JCheckBox jCheckBox=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
							
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jCheckBox=(JCheckBox)evt.getSource();
				
				containerParent=jCheckBox.getParent();
						
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.detanotacredito);
				
				this.actualizarInformacion("INFO_PADRE",false,this.detanotacredito);
				
				DetaNotaCreditoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.detanotacredito,new Object(),this.detanotacreditoParameterGeneral,this.detanotacreditoReturnGeneral);
												
				
				if(sTipo.equals("SeleccionarTodosDetaNotaCredito")) {
					jCheckBoxSeleccionarTodosDetaNotaCreditoItemListener(evt);
				
				} else if(sTipo.equals("SeleccionadosDetaNotaCredito")) {
					jCheckBoxSeleccionadosDetaNotaCreditoItemListener(evt);
				
				} else if(sTipo.equals("NuevoToolBarDetaNotaCredito")) {
					
				}
				
				


				
				
				DetaNotaCreditoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.detanotacredito,new Object(),this.detanotacreditoParameterGeneral,this.detanotacreditoReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(DetaNotaCredito.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",DetaNotaCredito.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jCheckBox, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}	
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.CHECKBOX,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JCheckBox jCheckBox=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jCheckBox=(JCheckBox)evt.getSource();
				
				containerParent=jCheckBox.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				//this.actualizarInformacion("EVENTO_CONTROL",false,this.detanotacredito);
				
				//this.actualizarInformacion("INFO_PADRE",false,this.detanotacredito);
				
				DetaNotaCreditoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.detanotacredito,new Object(),this.detanotacreditoParameterGeneral,this.detanotacreditoReturnGeneral);
												
				
				


				
				
				DetaNotaCreditoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.detanotacredito,new Object(),this.detanotacreditoParameterGeneral,this.detanotacreditoReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
				
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(DetaNotaCredito.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",DetaNotaCredito.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jCheckBox, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaDetaNotaCreditoActual();
			
				//SELECCIONA FILA A OBJETO ANTERIOR
				Integer intSelectedRow = this.jTableDatosDetaNotaCredito.getSelectedRow();
						
				if(intSelectedRow!=null && intSelectedRow>-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detanotacreditoAnterior =(DetaNotaCredito) this.detanotacreditoLogic.getDetaNotaCreditos().toArray()[this.jTableDatosDetaNotaCredito.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
						this.detanotacreditoAnterior =(DetaNotaCredito) this.detanotacreditos.toArray()[this.jTableDatosDetaNotaCredito.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					//System.out.println(this.banco);
				}
			}
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaDetaNotaCreditoActual();
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.detanotacredito);
				
				this.actualizarInformacion("INFO_PADRE",false,this.detanotacredito);
				
				DetaNotaCreditoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.detanotacredito,new Object(),this.detanotacreditoParameterGeneral,this.detanotacreditoReturnGeneral);
				
				
				DetaNotaCreditoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.detanotacredito,new Object(),this.detanotacreditoParameterGeneral,this.detanotacreditoReturnGeneral);
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO SE UTILIZA, SE USA EL DE ABAJO, IGUAL SE DEJA EL CODIGO COMO RESPALDO Y ES CASI IGUAL
	//ERROR:SI SE USA,AL HACER CLIC EN EL MISMO ELEMENTO O EJECUTAR SELECTEDITEM, SIEMPRE SE EJECUTA COMO SI ESCOGIERA OTRO ELEMENTO(NO DEBERIA)
	//@SuppressWarnings("rawtypes")
	public void jComboBoxActionPerformedGeneral(String sTipo,ActionEvent evt) {		
		try {
			/*		
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			Container containerParent=null;
			Component componentOpposite=null;
			Boolean esControlTabla=false;
				
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			DetaNotaCreditoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.detanotacredito,new Object(),this.detanotacreditoParameterGeneral,this.detanotacreditoReturnGeneral);
			JComboBox jComboBoxGenerico=null;						
			
			if(evt.getSource().getClass().equals(JComboBox.class)
				|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
					
				jComboBoxGenerico=(JComboBox)evt.getSource();
				
				containerParent=jComboBoxGenerico.getParent();
				
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
			}
			
			String sFinalQueryCombo="";
			
			


			if(sTipo.equals("id_bodegaDetaNotaCredito")) {
				if(jComboBoxGenerico==null) {
					jComboBoxGenerico=this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_bodegaDetaNotaCredito;
				}

				if(this.detanotacreditoSessionBean.getConGuardarRelaciones()) {
					//classes=DetaNotaCreditoConstantesFunciones.getClassesRelationshipsOfDetaNotaCredito(new ArrayList<Classe>(),DeepLoadType.NONE);
				}


				this.procesarActionsCombosForeignKeyBodega(jComboBoxGenerico,"Formulario");

				this.recargarFormDetaNotaCredito(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"COMBOBOX",classes,false,esControlTabla);
			}
			 else if(sTipo.equals("jComboBoxid_bodegaFK_IdBodegaDetaNotaCredito")) {
				this.procesarActionsCombosForeignKeyBodega(jComboBoxid_bodegaFK_IdBodegaDetaNotaCredito,"FK_IdBodega");
				//recargarFormDetaNotaCreditoBodega(jComboBoxid_bodegaFK_IdBodegaDetaNotaCredito,"FK_IdBodega");
			}
			 else if(sTipo.equals("id_productoDetaNotaCredito")) {
				if(jComboBoxGenerico==null) {
					jComboBoxGenerico=this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_productoDetaNotaCredito;
				}

				if(this.detanotacreditoSessionBean.getConGuardarRelaciones()) {
					//classes=DetaNotaCreditoConstantesFunciones.getClassesRelationshipsOfDetaNotaCredito(new ArrayList<Classe>(),DeepLoadType.NONE);
				}


				this.procesarActionsCombosForeignKeyProducto(jComboBoxGenerico,"Formulario");

				this.recargarFormDetaNotaCredito(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"COMBOBOX",classes,false,esControlTabla);
			}
			 else if(sTipo.equals("jComboBoxid_productoFK_IdProductoDetaNotaCredito")) {
				this.procesarActionsCombosForeignKeyProducto(jComboBoxid_productoFK_IdProductoDetaNotaCredito,"FK_IdProducto");
				//recargarFormDetaNotaCreditoProducto(jComboBoxid_productoFK_IdProductoDetaNotaCredito,"FK_IdProducto");
			}
			
			DetaNotaCreditoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detanotacredito,new Object(),this.detanotacreditoParameterGeneral,this.detanotacreditoReturnGeneral);
			*/						
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);
  		}		
    }
	
	@SuppressWarnings("rawtypes")
	public void jComboBoxItemStateChangedGeneral(String sTipo,ItemEvent evt) { 	  
		try {
			if (evt.getStateChange() == ItemEvent.SELECTED && this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaDetaNotaCreditoActual();
			
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
			
			
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				Container containerParent=null;
				Component componentOpposite=null;
				Boolean esControlTabla=false;
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				JComboBox jComboBoxGenerico=null;						
				
				if(evt.getSource().getClass().equals(JComboBox.class)
					|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
						
					jComboBoxGenerico=(JComboBox)evt.getSource();
					
					containerParent=jComboBoxGenerico.getParent();
					
					componentOpposite=null;//evt.getOppositeComponent();
					
					if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
					) {					
						esControlTabla=true;
					}		
					
					this.esControlTabla=esControlTabla;
				}
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.detanotacredito);
				
				this.actualizarInformacion("INFO_PADRE",false,this.detanotacredito);
				
				DetaNotaCreditoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.detanotacredito,new Object(),this.detanotacreditoParameterGeneral,this.detanotacreditoReturnGeneral);
				
				
				String sFinalQueryCombo="";
				
				


			if(sTipo.equals("id_bodegaDetaNotaCredito")) {
				if(jComboBoxGenerico==null) {
					jComboBoxGenerico=this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_bodegaDetaNotaCredito;
				}

				if(this.detanotacreditoSessionBean.getConGuardarRelaciones()) {
					//classes=DetaNotaCreditoConstantesFunciones.getClassesRelationshipsOfDetaNotaCredito(new ArrayList<Classe>(),DeepLoadType.NONE);
				}


				this.procesarActionsCombosForeignKeyBodega(jComboBoxGenerico,"Formulario");

				this.recargarFormDetaNotaCredito(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"COMBOBOX",classes,false,esControlTabla);
			}
			 else if(sTipo.equals("jComboBoxid_bodegaFK_IdBodegaDetaNotaCredito")) {
				this.procesarActionsCombosForeignKeyBodega(jComboBoxid_bodegaFK_IdBodegaDetaNotaCredito,"FK_IdBodega");
				//recargarFormDetaNotaCreditoBodega(jComboBoxid_bodegaFK_IdBodegaDetaNotaCredito,"FK_IdBodega");
			}
			 else if(sTipo.equals("id_productoDetaNotaCredito")) {
				if(jComboBoxGenerico==null) {
					jComboBoxGenerico=this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_productoDetaNotaCredito;
				}

				if(this.detanotacreditoSessionBean.getConGuardarRelaciones()) {
					//classes=DetaNotaCreditoConstantesFunciones.getClassesRelationshipsOfDetaNotaCredito(new ArrayList<Classe>(),DeepLoadType.NONE);
				}


				this.procesarActionsCombosForeignKeyProducto(jComboBoxGenerico,"Formulario");

				this.recargarFormDetaNotaCredito(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"COMBOBOX",classes,false,esControlTabla);
			}
			 else if(sTipo.equals("jComboBoxid_productoFK_IdProductoDetaNotaCredito")) {
				this.procesarActionsCombosForeignKeyProducto(jComboBoxid_productoFK_IdProductoDetaNotaCredito,"FK_IdProducto");
				//recargarFormDetaNotaCreditoProducto(jComboBoxid_productoFK_IdProductoDetaNotaCredito,"FK_IdProducto");
			}
				
				DetaNotaCreditoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detanotacredito,new Object(),this.detanotacreditoParameterGeneral,this.detanotacreditoReturnGeneral);
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
				
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(DetaNotaCredito.class.getName());
								
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",DetaNotaCredito.class.getName(),sTipo,"COMBOBOX",esControlTabla,conIrServidorAplicacionParent,
							id,jComboBoxGenerico, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);
  		}
    }
	
	//@SuppressWarnings("rawtypes")
	public void jComboBoxFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		//MANEJADO EN ITEMLISTENER
		/*
		try {
			if(this.permiteManejarEventosControl()) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				
				//if(this.esUsoDesdeHijo) {
				//	eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				//}
				
				
				Container containerParent=null;
				Component componentOpposite=null;
				Boolean esControlTabla=false;
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
			
				this.actualizarInformacion("EVENTO_CONTROL",false,this.detanotacredito);
				
				this.actualizarInformacion("INFO_PADRE",false,this.detanotacredito);
				
				DetaNotaCreditoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.detanotacredito,new Object(),this.detanotacreditoParameterGeneral,this.detanotacreditoReturnGeneral);
				JComboBox jComboBoxGenerico=null;						
				
				if(evt.getSource().getClass().equals(JComboBox.class)
					|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
						
					jComboBoxGenerico=(JComboBox)evt.getSource();
					
					containerParent=jComboBoxGenerico.getParent();
					
					componentOpposite=evt.getOppositeComponent();
					
					if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
					) {					
						esControlTabla=true;
					}
					
					this.esControlTabla=esControlTabla;
				}
				
				String sFinalQueryCombo="";
				
				


			if(sTipo.equals("id_bodegaDetaNotaCredito")) {
				if(jComboBoxGenerico==null) {
					jComboBoxGenerico=this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_bodegaDetaNotaCredito;
				}

				if(this.detanotacreditoSessionBean.getConGuardarRelaciones()) {
					//classes=DetaNotaCreditoConstantesFunciones.getClassesRelationshipsOfDetaNotaCredito(new ArrayList<Classe>(),DeepLoadType.NONE);
				}


				this.procesarActionsCombosForeignKeyBodega(jComboBoxGenerico,"Formulario");

				this.recargarFormDetaNotaCredito(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"COMBOBOX",classes,false,esControlTabla);
			}
			 else if(sTipo.equals("jComboBoxid_bodegaFK_IdBodegaDetaNotaCredito")) {
				this.procesarActionsCombosForeignKeyBodega(jComboBoxid_bodegaFK_IdBodegaDetaNotaCredito,"FK_IdBodega");
				//recargarFormDetaNotaCreditoBodega(jComboBoxid_bodegaFK_IdBodegaDetaNotaCredito,"FK_IdBodega");
			}
			 else if(sTipo.equals("id_productoDetaNotaCredito")) {
				if(jComboBoxGenerico==null) {
					jComboBoxGenerico=this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_productoDetaNotaCredito;
				}

				if(this.detanotacreditoSessionBean.getConGuardarRelaciones()) {
					//classes=DetaNotaCreditoConstantesFunciones.getClassesRelationshipsOfDetaNotaCredito(new ArrayList<Classe>(),DeepLoadType.NONE);
				}


				this.procesarActionsCombosForeignKeyProducto(jComboBoxGenerico,"Formulario");

				this.recargarFormDetaNotaCredito(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"COMBOBOX",classes,false,esControlTabla);
			}
			 else if(sTipo.equals("jComboBoxid_productoFK_IdProductoDetaNotaCredito")) {
				this.procesarActionsCombosForeignKeyProducto(jComboBoxid_productoFK_IdProductoDetaNotaCredito,"FK_IdProducto");
				//recargarFormDetaNotaCreditoProducto(jComboBoxid_productoFK_IdProductoDetaNotaCredito,"FK_IdProducto");
			}
				
				DetaNotaCreditoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detanotacredito,new Object(),this.detanotacreditoParameterGeneral,this.detanotacreditoReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(DetaNotaCredito.class.getName());
				
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",DetaNotaCredito.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jComboBoxGenerico, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);
  		}
		
		*/
    }
	
	public void jComboBoxFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaDetaNotaCreditoActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosDetaNotaCredito.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditoAnterior =(DetaNotaCredito) this.detanotacreditoLogic.getDetaNotaCreditos().toArray()[this.jTableDatosDetaNotaCredito.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.detanotacreditoAnterior =(DetaNotaCredito) this.detanotacreditos.toArray()[this.jTableDatosDetaNotaCredito.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);
  		}
    }		
	
	public void tableValueChangedGeneral(String sTipo,ListSelectionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				DetaNotaCreditoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TABLE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detanotacredito,new Object(),this.detanotacreditoParameterGeneral,this.detanotacreditoReturnGeneral);
				
				if(sTipo.equals("TableDatosSeleccionarDetaNotaCredito")) {
					//BYDAN_DESHABILITADO
					//try {jTableDatosDetaNotaCreditoListSelectionListener(e);}catch(Exception e1){e1.printStackTrace();}
					
					//SOLO CUANDO MOUSE ES SOLTADO
					if (!evt.getValueIsAdjusting()) {
						//SELECCIONA FILA A OBJETO ACTUAL
						Integer intSelectedRow = this.jTableDatosDetaNotaCredito.getSelectedRow();
						
						if(intSelectedRow!=null && intSelectedRow>-1) {
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								this.detanotacredito =(DetaNotaCredito) this.detanotacreditoLogic.getDetaNotaCreditos().toArray()[this.jTableDatosDetaNotaCredito.convertRowIndexToModel(intSelectedRow)];
							} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
								this.detanotacredito =(DetaNotaCredito) this.detanotacreditos.toArray()[this.jTableDatosDetaNotaCredito.convertRowIndexToModel(intSelectedRow)];
							}
							//ARCHITECTURE
							
							//System.out.println(this.detanotacredito);
						}
					}
					
				} else if(sTipo.equals("jButtonCancelarDetaNotaCredito")) {
				
				}
				
				DetaNotaCreditoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TABLE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detanotacredito,new Object(),this.detanotacreditoParameterGeneral,this.detanotacreditoReturnGeneral);
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void tableMouseAdapterGeneral(String sTipo,MouseEvent evt) { 	  
		try {
			DetaNotaCreditoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TABLE,EventoTipo.MOUSE,EventoSubTipo.CLICKED,sTipo,this.detanotacredito,new Object(),this.detanotacreditoParameterGeneral,this.detanotacreditoReturnGeneral);
			
			if(sTipo.equals("DatosSeleccionarDetaNotaCredito")) {
				if (evt.getClickCount() == 2) {
					jButtonIdActionPerformed(null,jTableDatosDetaNotaCredito.getSelectedRow(),false,false);
				}	
			} else if(sTipo.equals("jButtonCancelarDetaNotaCredito")) {
			
			}
			
			DetaNotaCreditoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TABLE,EventoTipo.MOUSE,EventoSubTipo.CLICKED,sTipo,this.detanotacredito,new Object(),this.detanotacreditoParameterGeneral,this.detanotacreditoReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);
  		}
    }
	
	;
	
	public void jButtonActionPerformedTecladoGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			this.startProcessDetaNotaCredito();
			
			DetaNotaCreditoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.KEY,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.detanotacredito,new Object(),this.detanotacreditoParameterGeneral,this.detanotacreditoReturnGeneral);
			
			if(sTipo.equals("NuevoDetaNotaCredito")) {
				jButtonNuevoDetaNotaCreditoActionPerformed(evt,false);
				
			} else if(sTipo.equals("DuplicarDetaNotaCredito")) {
				jButtonDuplicarDetaNotaCreditoActionPerformed(evt,false);
				
			} else if(sTipo.equals("CopiarDetaNotaCredito")) {
				jButtonCopiarDetaNotaCreditoActionPerformed(evt);
				
			} else if(sTipo.equals("VerFormDetaNotaCredito")) {
				jButtonVerFormDetaNotaCreditoActionPerformed(evt);
				
			} else if(sTipo.equals("NuevoRelacionesDetaNotaCredito")) {
				jButtonNuevoDetaNotaCreditoActionPerformed(evt,true);
				
			} else if(sTipo.equals("ModificarDetaNotaCredito")) {
				jButtonModificarDetaNotaCreditoActionPerformed(evt);
				
			} else if(sTipo.equals("ActualizarDetaNotaCredito")) {
				jButtonActualizarDetaNotaCreditoActionPerformed(evt);
				
			} else if(sTipo.equals("EliminarDetaNotaCredito")) {
				jButtonEliminarDetaNotaCreditoActionPerformed(evt);
				
			} else if(sTipo.equals("GuardarCambiosTablaDetaNotaCredito")) {
				jButtonGuardarCambiosDetaNotaCreditoActionPerformed(evt);
				
			} else if(sTipo.equals("CancelarDetaNotaCredito")) {
				jButtonCancelarDetaNotaCreditoActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarDetaNotaCredito")) {
				jButtonCerrarDetaNotaCreditoActionPerformed(evt);
				
			} else if(sTipo.equals("GuardarCambiosDetaNotaCredito")) {
				jButtonGuardarCambiosDetaNotaCreditoActionPerformed(evt);
			
			} else if(sTipo.equals("NuevoGuardarCambiosDetaNotaCredito")) {
				jButtonNuevoGuardarCambiosDetaNotaCreditoActionPerformed(evt);
			
			} else if(sTipo.equals("AbrirOrderByDetaNotaCredito")) {
				jButtonAbrirOrderByDetaNotaCreditoActionPerformed(evt);
			
			} else if(sTipo.equals("RecargarInformacionDetaNotaCredito")) {
				jButtonRecargarInformacionDetaNotaCreditoActionPerformed(evt);
			
			} else if(sTipo.equals("AnterioresDetaNotaCredito")) {
				jButtonAnterioresDetaNotaCreditoActionPerformed(evt);			
			
			}  else if(sTipo.equals("SiguientesDetaNotaCredito")) {
				jButtonSiguientesDetaNotaCreditoActionPerformed(evt);			
			} 
			
			
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("idDetaNotaCreditoBusqueda")) {
				this.jButtonidDetaNotaCreditoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_empresaDetaNotaCreditoUpdate")) {
				this.jButtonid_empresaDetaNotaCreditoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_empresaDetaNotaCreditoBusqueda")) {
				this.jButtonid_empresaDetaNotaCreditoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_sucursalDetaNotaCreditoUpdate")) {
				this.jButtonid_sucursalDetaNotaCreditoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_sucursalDetaNotaCreditoBusqueda")) {
				this.jButtonid_sucursalDetaNotaCreditoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_ejercicioDetaNotaCreditoUpdate")) {
				this.jButtonid_ejercicioDetaNotaCreditoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_ejercicioDetaNotaCreditoBusqueda")) {
				this.jButtonid_ejercicioDetaNotaCreditoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_periodoDetaNotaCreditoUpdate")) {
				this.jButtonid_periodoDetaNotaCreditoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_periodoDetaNotaCreditoBusqueda")) {
				this.jButtonid_periodoDetaNotaCreditoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_anioDetaNotaCreditoUpdate")) {
				this.jButtonid_anioDetaNotaCreditoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_anioDetaNotaCreditoBusqueda")) {
				this.jButtonid_anioDetaNotaCreditoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_mesDetaNotaCreditoUpdate")) {
				this.jButtonid_mesDetaNotaCreditoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_mesDetaNotaCreditoBusqueda")) {
				this.jButtonid_mesDetaNotaCreditoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_nota_creditoDetaNotaCreditoUpdate")) {
				this.jButtonid_nota_creditoDetaNotaCreditoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_nota_creditoDetaNotaCreditoBusqueda")) {
				this.jButtonid_nota_creditoDetaNotaCreditoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_bodegaDetaNotaCreditoUpdate")) {
				this.jButtonid_bodegaDetaNotaCreditoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_bodegaDetaNotaCreditoBusqueda")) {
				this.jButtonid_bodegaDetaNotaCreditoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_productoDetaNotaCredito")) {
				this.jButtonid_productoDetaNotaCreditoActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_productoDetaNotaCreditoUpdate")) {
				this.jButtonid_productoDetaNotaCreditoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_productoDetaNotaCreditoBusqueda")) {
				this.jButtonid_productoDetaNotaCreditoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_unidadDetaNotaCreditoUpdate")) {
				this.jButtonid_unidadDetaNotaCreditoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_unidadDetaNotaCreditoBusqueda")) {
				this.jButtonid_unidadDetaNotaCreditoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_deta_nota_creditoDetaNotaCreditoUpdate")) {
				this.jButtonid_tipo_deta_nota_creditoDetaNotaCreditoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_deta_nota_creditoDetaNotaCreditoBusqueda")) {
				this.jButtonid_tipo_deta_nota_creditoDetaNotaCreditoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_devolucion_empresaDetaNotaCreditoUpdate")) {
				this.jButtonid_tipo_devolucion_empresaDetaNotaCreditoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_devolucion_empresaDetaNotaCreditoBusqueda")) {
				this.jButtonid_tipo_devolucion_empresaDetaNotaCreditoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("descripcionDetaNotaCreditoBusqueda")) {
				this.jButtondescripcionDetaNotaCreditoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("cantidadDetaNotaCreditoBusqueda")) {
				this.jButtoncantidadDetaNotaCreditoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("precioDetaNotaCreditoBusqueda")) {
				this.jButtonprecioDetaNotaCreditoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("montoDetaNotaCreditoBusqueda")) {
				this.jButtonmontoDetaNotaCreditoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("costoDetaNotaCreditoBusqueda")) {
				this.jButtoncostoDetaNotaCreditoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("descuentoDetaNotaCreditoBusqueda")) {
				this.jButtondescuentoDetaNotaCreditoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("descuento2DetaNotaCreditoBusqueda")) {
				this.jButtondescuento2DetaNotaCreditoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("impuestoDetaNotaCreditoBusqueda")) {
				this.jButtonimpuestoDetaNotaCreditoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("porcen_ivaDetaNotaCreditoBusqueda")) {
				this.jButtonporcen_ivaDetaNotaCreditoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("porcen_descuenDetaNotaCreditoBusqueda")) {
				this.jButtonporcen_descuenDetaNotaCreditoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("porcen_iceDetaNotaCreditoBusqueda")) {
				this.jButtonporcen_iceDetaNotaCreditoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("sub_totalDetaNotaCreditoBusqueda")) {
				this.jButtonsub_totalDetaNotaCreditoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("totalDetaNotaCreditoBusqueda")) {
				this.jButtontotalDetaNotaCreditoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_centro_costoDetaNotaCredito")) {
				this.jButtonid_centro_costoDetaNotaCreditoActionPerformed(evt);
			}
			//BUSQUEDA ARBOL CAMPO
			else if(sTipo.equals("id_centro_costoDetaNotaCreditoArbol")) {
				this.abrirFrameTreeCentroCosto("BUSQUEDA_FK");
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_centro_costoDetaNotaCreditoUpdate")) {
				this.jButtonid_centro_costoDetaNotaCreditoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_centro_costoDetaNotaCreditoBusqueda")) {
				this.jButtonid_centro_costoDetaNotaCreditoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_empaqueDetaNotaCreditoUpdate")) {
				this.jButtonid_empaqueDetaNotaCreditoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_empaqueDetaNotaCreditoBusqueda")) {
				this.jButtonid_empaqueDetaNotaCreditoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("incluye_impuestoDetaNotaCreditoBusqueda")) {
				this.jButtonincluye_impuestoDetaNotaCreditoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fecha_emisionDetaNotaCreditoBusqueda")) {
				this.jButtonfecha_emisionDetaNotaCreditoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("codigo_loteDetaNotaCreditoBusqueda")) {
				this.jButtoncodigo_loteDetaNotaCreditoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("numero_cajaDetaNotaCreditoBusqueda")) {
				this.jButtonnumero_cajaDetaNotaCreditoBusquedaActionPerformed(evt);
			}
			
			DetaNotaCreditoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.KEY,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.detanotacredito,new Object(),this.detanotacreditoParameterGeneral,this.detanotacreditoReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);
			
  		}  finally {
      		this.finishProcessDetaNotaCredito();
      	}
    }
	
	public void internalFrameClosingInternalFrameGeneral(String sTipo,InternalFrameEvent evt) { 	  
		try {
			DetaNotaCreditoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.WINDOW,EventoTipo.CLIC,EventoSubTipo.CLOSING,sTipo,this.detanotacredito,new Object(),this.detanotacreditoParameterGeneral,this.detanotacreditoReturnGeneral);
			
			if(sTipo.equals("CloseInternalFrameDetaNotaCredito")) {
				closingInternalFrameDetaNotaCredito();
				
			} else if(sTipo.equals("jButtonCancelarDetaNotaCredito")) {
				JInternalFrameBase jInternalFrameDetalleFormDetaNotaCredito = (JInternalFrameBase)evt.getSource();
	            	
	            DetaNotaCreditoBeanSwingJInternalFrame jInternalFrameParent=(DetaNotaCreditoBeanSwingJInternalFrame)jInternalFrameDetalleFormDetaNotaCredito.getjInternalFrameParent();
	            
				jInternalFrameParent.jButtonCancelarDetaNotaCreditoActionPerformed(null);
			}
			
			DetaNotaCreditoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.WINDOW,EventoTipo.CLIC,EventoSubTipo.CLOSING,sTipo,this.detanotacredito,new Object(),this.detanotacreditoParameterGeneral,this.detanotacreditoReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void recargarFormDetaNotaCredito(String sTipo,String sDominio,EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,String sTipoGeneral,ArrayList<Classe> classes,Boolean conIrServidorAplicacion) throws Exception {
		this.recargarFormDetaNotaCredito(sTipo,sDominio,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipoGeneral,classes,conIrServidorAplicacion,false);
	}
	
	public void recargarFormDetaNotaCredito(String sTipo,String sDominio,EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,String sTipoGeneral,ArrayList<Classe> classes,Boolean conIrServidorAplicacion,Boolean esControlTabla) throws Exception {
		if(this.permiteRecargarForm && this.permiteMantenimiento(this.detanotacredito)) {
			if(!esControlTabla) {
				if(DetaNotaCreditoJInternalFrame.ISBINDING_MANUAL_TABLA) {			
					this.setVariablesFormularioToObjetoActualDetaNotaCredito(this.detanotacredito,true,false);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaNotaCredito(this.detanotacredito);			
				}
				
				if(this.detanotacreditoSessionBean.getEstaModoGuardarRelaciones()) {
					this.setVariablesFormularioRelacionesToObjetoActualDetaNotaCredito(this.detanotacredito,classes);				
				}
			
				if(conIrServidorAplicacion) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {						
						this.detanotacreditoReturnGeneral=detanotacreditoLogic.procesarEventosDetaNotaCreditosWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.detanotacreditoLogic.getDetaNotaCreditos(),this.detanotacredito,this.detanotacreditoParameterGeneral,this.isEsNuevoDetaNotaCredito,classes);//this.detanotacreditoLogic.getDetaNotaCredito()//sTipoGeneral
									
					} else if(Constantes.ISUSAEJBREMOTE) {
									
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE
					
					//ACTUALIZA VARIABLES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
					//this.setVariablesObjetoReturnGeneralToBeanDetaNotaCredito(this.detanotacreditoReturnGeneral,this.detanotacreditoBean,false);
						
					//ACTUALIZA VARIABLES RELACIONES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
					if(this.detanotacreditoSessionBean.getEstaModoGuardarRelaciones()) {
						//this.setVariablesRelacionesObjetoReturnGeneralToBeanDetaNotaCredito(classes,this.detanotacreditoReturnGeneral,this.detanotacreditoBean,false);
					}
						
					if(this.detanotacreditoReturnGeneral.getConRecargarPropiedades()) {
						//INICIALIZA VARIABLES COMBOS NORMALES (FK)
						this.setVariablesObjetoActualToFormularioForeignKeyDetaNotaCredito(this.detanotacreditoReturnGeneral.getDetaNotaCredito());
							
						//INICIALIZA VARIABLES NORMALES A FORMULARIO(SIN FK)
						this.setVariablesObjetoActualToFormularioDetaNotaCredito(this.detanotacreditoReturnGeneral.getDetaNotaCredito());	
					}
						
					if(this.detanotacreditoReturnGeneral.getConRecargarRelaciones()) {
						//INICIALIZA VARIABLES RELACIONES A FORMULARIO
						this.setVariablesRelacionesObjetoActualToFormularioDetaNotaCredito(this.detanotacreditoReturnGeneral.getDetaNotaCredito(),classes);//this.detanotacreditoBean);	
					}									
					
				} else {				
					//INICIALIZA VARIABLES RELACIONES A FORMULARIO
					this.setVariablesRelacionesObjetoActualToFormularioDetaNotaCredito(this.detanotacredito,classes);//this.detanotacreditoBean);									
				}
			
				if(DetaNotaCreditoJInternalFrame.ISBINDING_MANUAL_TABLA) {
					this.setVariablesFormularioToObjetoActualDetaNotaCredito(this.detanotacredito,true,false);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaNotaCredito(this.detanotacredito);				
				}
				
			} else {
				
				if(((controlTipo.equals(ControlTipo.TEXTBOX) || controlTipo.equals(ControlTipo.DATE)
					|| controlTipo.equals(ControlTipo.TEXTAREA) || controlTipo.equals(ControlTipo.COMBOBOX)
					)				
					&& eventoTipo.equals(EventoTipo.CHANGE)
					)
					
					|| (controlTipo.equals(ControlTipo.CHECKBOX) && eventoTipo.equals(EventoTipo.CLIC))
					
				) { // && sTipoGeneral.equals("TEXTBOX")
					
					if(this.detanotacreditoAnterior!=null) {
						this.detanotacredito=this.detanotacreditoAnterior;
					}
				}
				
				if(conIrServidorAplicacion) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {						
						this.detanotacreditoReturnGeneral=detanotacreditoLogic.procesarEventosDetaNotaCreditosWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.detanotacreditoLogic.getDetaNotaCreditos(),this.detanotacredito,this.detanotacreditoParameterGeneral,this.isEsNuevoDetaNotaCredito,classes);//this.detanotacreditoLogic.getDetaNotaCredito()//sTipoGeneral
									
					} else if(Constantes.ISUSAEJBREMOTE) {
									
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//NO ENTENDIBLE PORQUE PONER
					//if(this.detanotacreditoSessionBean.getEstaModoGuardarRelaciones() 
					//	|| this.detanotacreditoSessionBean.getEsGuardarRelacionado())	{
						actualizarLista(this.detanotacreditoReturnGeneral.getDetaNotaCredito(),detanotacreditoLogic.getDetaNotaCreditos());
					//}
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(this.detanotacreditoReturnGeneral.getDetaNotaCredito(),this.detanotacreditos);
				}
				//ARCHITECTURE
				
				//this.jTableDatosDetaNotaCredito.repaint();
				
				//((AbstractTableModel) this.jTableDatosDetaNotaCredito.getModel()).fireTableDataChanged();
				
				this.actualizarVisualTableDatosDetaNotaCredito();
			}
		}
	}
	
	public void actualizarVisualTableDatosDetaNotaCredito() throws Exception {
		
		DetaNotaCreditoModel detanotacreditoModel=(DetaNotaCreditoModel)this.jTableDatosDetaNotaCredito.getModel();
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			detanotacreditoModel.detanotacreditos=this.detanotacreditoLogic.getDetaNotaCreditos();
		
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
			detanotacreditoModel.detanotacreditos=this.detanotacreditos;
		}
		
		
		((DetaNotaCreditoModel) this.jTableDatosDetaNotaCredito.getModel()).fireTableDataChanged();
	}
	
	public void actualizarVisualTableDatosEventosVistaDetaNotaCredito() throws Exception {
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.actualizarLista(this.getdetanotacreditoAnterior(),this.detanotacreditoLogic.getDetaNotaCreditos());
					
		} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
			this.actualizarLista(this.getdetanotacreditoAnterior(),this.detanotacreditos);
		}
		//ARCHITECTURE
						
		this.actualizarFilaTotales();
						
		this.actualizarVisualTableDatosDetaNotaCredito();	
	}
	
	public void setVariablesRelacionesObjetoActualToFormularioDetaNotaCredito(DetaNotaCredito detanotacredito,ArrayList<Classe> classes) throws Exception { 
		try {
			
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setEventoParentGeneral(Boolean esUsoDesdeHijo,String sDominio,String sDominioTipo,String sTipo,String sTipoGeneral,Boolean esControlTabla,Boolean conIrServidorAplicacion,
						Long id,Component control, EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,ArrayList<String> arrClasses,
						Object evt,GeneralEntityParameterReturnGeneral generalEntityParameterGeneral,Object otro) { 	  
		try {
			
			if(this.permiteManejarEventosControl()) {
				
				//BASE COPIADO DESDE TEXTFIELLOSTFOCUS
				
				//EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				Boolean conTodasRelaciones=false;
				
				this.esUsoDesdeHijo=esUsoDesdeHijo;
										
				DetaNotaCreditoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.detanotacredito,new Object(),generalEntityParameterGeneral,this.detanotacreditoReturnGeneral);
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				for(String sClasse:arrClasses) {
					if(sClasse.equals("TODOS")) {
						conTodasRelaciones=true;
						break;
					}
				}
				
				if(this.detanotacreditoSessionBean.getConGuardarRelaciones()) {
					if(conTodasRelaciones) {
						classes=DetaNotaCreditoConstantesFunciones.getClassesRelationshipsOfDetaNotaCredito(new ArrayList<Classe>(),DeepLoadType.NONE);
					} else {
						classes=DetaNotaCreditoConstantesFunciones.getClassesRelationshipsFromStringsOfDetaNotaCredito(arrClasses,DeepLoadType.NONE);
					}
				}
	
				this.classesActual=new ArrayList<Classe>();
				this.classesActual.addAll(classes);
	
				this.recargarFormDetaNotaCredito(sTipo,sDominio,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipoGeneral,classes,conIrServidorAplicacion,esControlTabla);
										
				DetaNotaCreditoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.detanotacredito,new Object(),generalEntityParameterGeneral,this.detanotacreditoReturnGeneral);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);
  		}
    }
	
	/*
	public void setVariablesRelacionesObjetoBeanActualToFormularioDetaNotaCredito(DetaNotaCreditoBean detanotacreditoBean) throws Exception { 
		try {
			
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesRelacionesObjetoReturnGeneralToBeanDetaNotaCredito(ArrayList<Classe> classes,DetaNotaCreditoReturnGeneral detanotacreditoReturnGeneral,DetaNotaCreditoBean detanotacreditoBean,Boolean conDefault) throws Exception {
		
	}
	*/
	
	public void setVariablesFormularioRelacionesToObjetoActualDetaNotaCredito(DetaNotaCredito detanotacredito,ArrayList<Classe> classes) throws Exception {
		
	}
	
	public Boolean permiteManejarEventosControl() {
		Boolean permite=true;				
		
		if(this.estaModoNuevo || this.estaModoSeleccionar || this.estaModoEliminarGuardarCambios) {
			permite=false;
			
		} 
		
		//NO DEBE MEZCLARSE CONCEPTOS
		/*	
		if(!paraTabla && !this.permiteMantenimiento(this.detanotacredito)) {
			System.out.println("ERROR:EL OBJETO ACTUAL NO PUEDE SER FILA TOTALES");
				
			//JOptionPane.showMessageDialog(this,"EL OBJETO ACTUAL NO PUEDE SER FILA TOTALES","EVENTO",JOptionPane.ERROR_MESSAGE);			
		}
		*/
		
		return permite;
	}
	
	public void inicializarFormDetalle() throws Exception {
		
		this.jInternalFrameDetalleFormDetaNotaCredito = new DetaNotaCreditoDetalleFormJInternalFrame(jDesktopPane,this.detanotacreditoSessionBean.getConGuardarRelaciones(),this.detanotacreditoSessionBean.getEsGuardarRelacionado(),this.cargarRelaciones,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo);
		
		this.jDesktopPane.add(this.jInternalFrameDetalleFormDetaNotaCredito);
		this.jInternalFrameDetalleFormDetaNotaCredito.setVisible(false);
		this.jInternalFrameDetalleFormDetaNotaCredito.setSelected(false);						
		
		this.jInternalFrameDetalleFormDetaNotaCredito.setJInternalFrameParent(this);
		
		this.jInternalFrameDetalleFormDetaNotaCredito.detanotacreditoLogic=this.detanotacreditoLogic;
		
		this.cargarCombosFrameForeignKeyDetaNotaCredito("Formulario");
		
		this.inicializarActualizarBindingBotonesPermisosManualFormDetalleDetaNotaCredito();
		this.inicializarActualizarBindingtiposArchivosReportesAccionesManualFormDetalleDetaNotaCredito();
		
		this.initActionsFormDetalle();		
		
		this.initActionsCombosTodosForeignKeyDetaNotaCredito("Formulario");
		
		//TALVEZ conSetVariablesGlobales COMO if() 
		this.setVariablesGlobalesCombosForeignKeyDetaNotaCredito();
		
		this.cargarMenuRelaciones();
		
	}
	
	public void initActionsFormDetalle() {	
		
		this.jInternalFrameDetalleFormDetaNotaCredito.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"jButtonCancelarDetaNotaCredito"));
		
		this.jInternalFrameDetalleFormDetaNotaCredito.jButtonModificarDetaNotaCredito.addActionListener(new ButtonActionListener(this,"ModificarDetaNotaCredito"));

		
		this.jInternalFrameDetalleFormDetaNotaCredito.jButtonModificarToolBarDetaNotaCredito.addActionListener(new ButtonActionListener(this,"ModificarToolBarDetaNotaCredito"));
					
		this.jInternalFrameDetalleFormDetaNotaCredito.jMenuItemModificarDetaNotaCredito.addActionListener(new ButtonActionListener(this,"MenuItemModificarDetaNotaCredito"));		
		
		
		
		this.jInternalFrameDetalleFormDetaNotaCredito.jButtonActualizarDetaNotaCredito.addActionListener (new ButtonActionListener(this,"ActualizarDetaNotaCredito"));
		
		
		this.jInternalFrameDetalleFormDetaNotaCredito.jButtonActualizarToolBarDetaNotaCredito.addActionListener(new ButtonActionListener(this,"ActualizarToolBarDetaNotaCredito"));
						
		this.jInternalFrameDetalleFormDetaNotaCredito.jMenuItemActualizarDetaNotaCredito.addActionListener (new ButtonActionListener(this,"MenuItemActualizarDetaNotaCredito"));		
		
		
		
		this.jInternalFrameDetalleFormDetaNotaCredito.jButtonEliminarDetaNotaCredito.addActionListener (new ButtonActionListener(this,"EliminarDetaNotaCredito"));
		
		
		this.jInternalFrameDetalleFormDetaNotaCredito.jButtonEliminarToolBarDetaNotaCredito.addActionListener (new ButtonActionListener(this,"EliminarToolBarDetaNotaCredito"));
								
		this.jInternalFrameDetalleFormDetaNotaCredito.jMenuItemEliminarDetaNotaCredito.addActionListener (new ButtonActionListener(this,"MenuItemEliminarDetaNotaCredito"));		
		
		
		
		this.jInternalFrameDetalleFormDetaNotaCredito.jButtonCancelarDetaNotaCredito.addActionListener (new ButtonActionListener(this,"CancelarDetaNotaCredito"));
		
		
		this.jInternalFrameDetalleFormDetaNotaCredito.jButtonCancelarToolBarDetaNotaCredito.addActionListener (new ButtonActionListener(this,"CancelarToolBarDetaNotaCredito"));
					
		this.jInternalFrameDetalleFormDetaNotaCredito.jMenuItemCancelarDetaNotaCredito.addActionListener (new ButtonActionListener(this,"MenuItemCancelarDetaNotaCredito"));		
		
		
		
		
		
		this.jInternalFrameDetalleFormDetaNotaCredito.jMenuItemDetalleCerrarDetaNotaCredito.addActionListener (new ButtonActionListener(this,"MenuItemDetalleCerrarDetaNotaCredito"));		
		
		
		
		this.jInternalFrameDetalleFormDetaNotaCredito.jButtonGuardarCambiosToolBarDetaNotaCredito.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarDetaNotaCredito"));
		
		
		
		this.jInternalFrameDetalleFormDetaNotaCredito.jButtonGuardarCambiosToolBarDetaNotaCredito.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarDetaNotaCredito"));
		
		
		
		this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxTiposAccionesFormularioDetaNotaCredito.addActionListener (new ButtonActionListener(this,"TiposAccionesFormularioDetaNotaCredito"));
		
		
				
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCredito.jButtonidDetaNotaCreditoBusqueda.addActionListener(new ButtonActionListener(this,"idDetaNotaCreditoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetaNotaCredito.jButtonid_empresaDetaNotaCreditoUpdate.addActionListener(new ButtonActionListener(this,"id_empresaDetaNotaCreditoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCredito.jButtonid_empresaDetaNotaCreditoBusqueda.addActionListener(new ButtonActionListener(this,"id_empresaDetaNotaCreditoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetaNotaCredito.jButtonid_sucursalDetaNotaCreditoUpdate.addActionListener(new ButtonActionListener(this,"id_sucursalDetaNotaCreditoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCredito.jButtonid_sucursalDetaNotaCreditoBusqueda.addActionListener(new ButtonActionListener(this,"id_sucursalDetaNotaCreditoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetaNotaCredito.jButtonid_ejercicioDetaNotaCreditoUpdate.addActionListener(new ButtonActionListener(this,"id_ejercicioDetaNotaCreditoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCredito.jButtonid_ejercicioDetaNotaCreditoBusqueda.addActionListener(new ButtonActionListener(this,"id_ejercicioDetaNotaCreditoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetaNotaCredito.jButtonid_periodoDetaNotaCreditoUpdate.addActionListener(new ButtonActionListener(this,"id_periodoDetaNotaCreditoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCredito.jButtonid_periodoDetaNotaCreditoBusqueda.addActionListener(new ButtonActionListener(this,"id_periodoDetaNotaCreditoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetaNotaCredito.jButtonid_anioDetaNotaCreditoUpdate.addActionListener(new ButtonActionListener(this,"id_anioDetaNotaCreditoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCredito.jButtonid_anioDetaNotaCreditoBusqueda.addActionListener(new ButtonActionListener(this,"id_anioDetaNotaCreditoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetaNotaCredito.jButtonid_mesDetaNotaCreditoUpdate.addActionListener(new ButtonActionListener(this,"id_mesDetaNotaCreditoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCredito.jButtonid_mesDetaNotaCreditoBusqueda.addActionListener(new ButtonActionListener(this,"id_mesDetaNotaCreditoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetaNotaCredito.jButtonid_nota_creditoDetaNotaCreditoUpdate.addActionListener(new ButtonActionListener(this,"id_nota_creditoDetaNotaCreditoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCredito.jButtonid_nota_creditoDetaNotaCreditoBusqueda.addActionListener(new ButtonActionListener(this,"id_nota_creditoDetaNotaCreditoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetaNotaCredito.jButtonid_bodegaDetaNotaCreditoUpdate.addActionListener(new ButtonActionListener(this,"id_bodegaDetaNotaCreditoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCredito.jButtonid_bodegaDetaNotaCreditoBusqueda.addActionListener(new ButtonActionListener(this,"id_bodegaDetaNotaCreditoBusqueda"));
		//jButtonid_productoDetaNotaCredito.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_productoDetaNotaCreditoActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormDetaNotaCredito.jButtonid_productoDetaNotaCredito.addActionListener(new ButtonActionListener(this,"id_productoDetaNotaCredito"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetaNotaCredito.jButtonid_productoDetaNotaCreditoUpdate.addActionListener(new ButtonActionListener(this,"id_productoDetaNotaCreditoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCredito.jButtonid_productoDetaNotaCreditoBusqueda.addActionListener(new ButtonActionListener(this,"id_productoDetaNotaCreditoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetaNotaCredito.jButtonid_unidadDetaNotaCreditoUpdate.addActionListener(new ButtonActionListener(this,"id_unidadDetaNotaCreditoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCredito.jButtonid_unidadDetaNotaCreditoBusqueda.addActionListener(new ButtonActionListener(this,"id_unidadDetaNotaCreditoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetaNotaCredito.jButtonid_tipo_deta_nota_creditoDetaNotaCreditoUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_deta_nota_creditoDetaNotaCreditoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCredito.jButtonid_tipo_deta_nota_creditoDetaNotaCreditoBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_deta_nota_creditoDetaNotaCreditoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetaNotaCredito.jButtonid_tipo_devolucion_empresaDetaNotaCreditoUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_devolucion_empresaDetaNotaCreditoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCredito.jButtonid_tipo_devolucion_empresaDetaNotaCreditoBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_devolucion_empresaDetaNotaCreditoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCredito.jButtondescripcionDetaNotaCreditoBusqueda.addActionListener(new ButtonActionListener(this,"descripcionDetaNotaCreditoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCredito.jButtoncantidadDetaNotaCreditoBusqueda.addActionListener(new ButtonActionListener(this,"cantidadDetaNotaCreditoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCredito.jButtonprecioDetaNotaCreditoBusqueda.addActionListener(new ButtonActionListener(this,"precioDetaNotaCreditoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCredito.jButtonmontoDetaNotaCreditoBusqueda.addActionListener(new ButtonActionListener(this,"montoDetaNotaCreditoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCredito.jButtoncostoDetaNotaCreditoBusqueda.addActionListener(new ButtonActionListener(this,"costoDetaNotaCreditoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCredito.jButtondescuentoDetaNotaCreditoBusqueda.addActionListener(new ButtonActionListener(this,"descuentoDetaNotaCreditoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCredito.jButtondescuento2DetaNotaCreditoBusqueda.addActionListener(new ButtonActionListener(this,"descuento2DetaNotaCreditoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCredito.jButtonimpuestoDetaNotaCreditoBusqueda.addActionListener(new ButtonActionListener(this,"impuestoDetaNotaCreditoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCredito.jButtonporcen_ivaDetaNotaCreditoBusqueda.addActionListener(new ButtonActionListener(this,"porcen_ivaDetaNotaCreditoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCredito.jButtonporcen_descuenDetaNotaCreditoBusqueda.addActionListener(new ButtonActionListener(this,"porcen_descuenDetaNotaCreditoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCredito.jButtonporcen_iceDetaNotaCreditoBusqueda.addActionListener(new ButtonActionListener(this,"porcen_iceDetaNotaCreditoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCredito.jButtonsub_totalDetaNotaCreditoBusqueda.addActionListener(new ButtonActionListener(this,"sub_totalDetaNotaCreditoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCredito.jButtontotalDetaNotaCreditoBusqueda.addActionListener(new ButtonActionListener(this,"totalDetaNotaCreditoBusqueda"));
		//jButtonid_centro_costoDetaNotaCredito.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_centro_costoDetaNotaCreditoActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormDetaNotaCredito.jButtonid_centro_costoDetaNotaCredito.addActionListener(new ButtonActionListener(this,"id_centro_costoDetaNotaCredito"));
		//jButtonid_centro_costoDetaNotaCreditoArbol.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			abrirFrameTreeCentroCosto("BUSQUEDA_FK");
		//		}
		//	}
		//);

		//BUSQUEDA ARBOL CAMPO
		this.jInternalFrameDetalleFormDetaNotaCredito.jButtonid_centro_costoDetaNotaCreditoArbol.addActionListener(new ButtonActionListener(this,"id_centro_costoDetaNotaCreditoArbol"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetaNotaCredito.jButtonid_centro_costoDetaNotaCreditoUpdate.addActionListener(new ButtonActionListener(this,"id_centro_costoDetaNotaCreditoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCredito.jButtonid_centro_costoDetaNotaCreditoBusqueda.addActionListener(new ButtonActionListener(this,"id_centro_costoDetaNotaCreditoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetaNotaCredito.jButtonid_empaqueDetaNotaCreditoUpdate.addActionListener(new ButtonActionListener(this,"id_empaqueDetaNotaCreditoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCredito.jButtonid_empaqueDetaNotaCreditoBusqueda.addActionListener(new ButtonActionListener(this,"id_empaqueDetaNotaCreditoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCredito.jButtonincluye_impuestoDetaNotaCreditoBusqueda.addActionListener(new ButtonActionListener(this,"incluye_impuestoDetaNotaCreditoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCredito.jButtonfecha_emisionDetaNotaCreditoBusqueda.addActionListener(new ButtonActionListener(this,"fecha_emisionDetaNotaCreditoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCredito.jButtoncodigo_loteDetaNotaCreditoBusqueda.addActionListener(new ButtonActionListener(this,"codigo_loteDetaNotaCreditoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCredito.jButtonnumero_cajaDetaNotaCreditoBusqueda.addActionListener(new ButtonActionListener(this,"numero_cajaDetaNotaCreditoBusqueda"));
		
		
		;

		//TABBED PANE RELACIONES
		this.jInternalFrameDetalleFormDetaNotaCredito.jTabbedPaneRelacionesDetaNotaCredito.addChangeListener(new TabbedPaneChangeListener(this,"RelacionesDetaNotaCredito"));
		
		;		
		//TABBED PANE RELACIONES FIN(EXTRA TAB)	
	}
	
	public void initActions() {				
		this.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"CloseInternalFrameDetaNotaCredito"));
		
		if(this.jInternalFrameDetalleFormDetaNotaCredito!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetaNotaCredito.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"jButtonCancelarDetaNotaCredito"));
		}
		
		this.jTableDatosDetaNotaCredito.getSelectionModel().addListSelectionListener(new TableListSelectionListener(this,"TableDatosSeleccionarDetaNotaCredito"));
		
		this.jTableDatosDetaNotaCredito.addMouseListener(new TableMouseAdapter(this,"DatosSeleccionarDetaNotaCredito"));
		
		this.jButtonNuevoDetaNotaCredito.addActionListener(new ButtonActionListener(this,"NuevoDetaNotaCredito"));
		
		this.jButtonDuplicarDetaNotaCredito.addActionListener(new ButtonActionListener(this,"DuplicarDetaNotaCredito"));
		
		this.jButtonCopiarDetaNotaCredito.addActionListener(new ButtonActionListener(this,"CopiarDetaNotaCredito"));
		
		this.jButtonVerFormDetaNotaCredito.addActionListener(new ButtonActionListener(this,"VerFormDetaNotaCredito"));
		
		
		this.jButtonNuevoToolBarDetaNotaCredito.addActionListener(new ButtonActionListener(this,"NuevoToolBarDetaNotaCredito"));
			
		this.jButtonDuplicarToolBarDetaNotaCredito.addActionListener(new ButtonActionListener(this,"DuplicarToolBarDetaNotaCredito"));
			
		this.jMenuItemNuevoDetaNotaCredito.addActionListener (new ButtonActionListener(this,"MenuItemNuevoDetaNotaCredito"));
			
		this.jMenuItemDuplicarDetaNotaCredito.addActionListener (new ButtonActionListener(this,"MenuItemDuplicarDetaNotaCredito"));		
		
		
		this.jButtonNuevoRelacionesDetaNotaCredito.addActionListener (new ButtonActionListener(this,"NuevoRelacionesDetaNotaCredito"));
		
		
		this.jButtonNuevoRelacionesToolBarDetaNotaCredito.addActionListener(new ButtonActionListener(this,"NuevoRelacionesToolBarDetaNotaCredito"));
			
		this.jMenuItemNuevoRelacionesDetaNotaCredito.addActionListener(new ButtonActionListener(this,"MenuItemNuevoRelacionesDetaNotaCredito"));		
		
		
		if(this.jInternalFrameDetalleFormDetaNotaCredito!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetaNotaCredito.jButtonModificarDetaNotaCredito.addActionListener(new ButtonActionListener(this,"ModificarDetaNotaCredito"));
		}
		
		
		if(this.jInternalFrameDetalleFormDetaNotaCredito!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetaNotaCredito.jButtonModificarToolBarDetaNotaCredito.addActionListener(new ButtonActionListener(this,"ModificarToolBarDetaNotaCredito"));
			
			this.jInternalFrameDetalleFormDetaNotaCredito.jMenuItemModificarDetaNotaCredito.addActionListener(new ButtonActionListener(this,"MenuItemModificarDetaNotaCredito"));		
		}
		
		
		if(this.jInternalFrameDetalleFormDetaNotaCredito!=null) { //if(this.conCargarFormDetalle) {			
			this.jInternalFrameDetalleFormDetaNotaCredito.jButtonActualizarDetaNotaCredito.addActionListener (new ButtonActionListener(this,"ActualizarDetaNotaCredito"));
		}
		
		
		if(this.jInternalFrameDetalleFormDetaNotaCredito!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetaNotaCredito.jButtonActualizarToolBarDetaNotaCredito.addActionListener(new ButtonActionListener(this,"ActualizarToolBarDetaNotaCredito"));
				
			this.jInternalFrameDetalleFormDetaNotaCredito.jMenuItemActualizarDetaNotaCredito.addActionListener (new ButtonActionListener(this,"MenuItemActualizarDetaNotaCredito"));		
		}
		
		
		if(this.jInternalFrameDetalleFormDetaNotaCredito!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetaNotaCredito.jButtonEliminarDetaNotaCredito.addActionListener (new ButtonActionListener(this,"EliminarDetaNotaCredito"));
		}
		
		
		if(this.jInternalFrameDetalleFormDetaNotaCredito!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetaNotaCredito.jButtonEliminarToolBarDetaNotaCredito.addActionListener (new ButtonActionListener(this,"EliminarToolBarDetaNotaCredito"));
						
			this.jInternalFrameDetalleFormDetaNotaCredito.jMenuItemEliminarDetaNotaCredito.addActionListener (new ButtonActionListener(this,"MenuItemEliminarDetaNotaCredito"));		
		}
		
		
		if(this.jInternalFrameDetalleFormDetaNotaCredito!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetaNotaCredito.jButtonCancelarDetaNotaCredito.addActionListener (new ButtonActionListener(this,"CancelarDetaNotaCredito"));
		}
		
		
		if(this.jInternalFrameDetalleFormDetaNotaCredito!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetaNotaCredito.jButtonCancelarToolBarDetaNotaCredito.addActionListener (new ButtonActionListener(this,"CancelarToolBarDetaNotaCredito"));
			
			this.jInternalFrameDetalleFormDetaNotaCredito.jMenuItemCancelarDetaNotaCredito.addActionListener (new ButtonActionListener(this,"MenuItemCancelarDetaNotaCredito"));		
		}
		
		this.jButtonMostrarOcultarTablaToolBarDetaNotaCredito.addActionListener (new ButtonActionListener(this,"MostrarOcultarToolBarDetaNotaCredito"));		
		
		
		this.jButtonCerrarDetaNotaCredito.addActionListener (new ButtonActionListener(this,"CerrarDetaNotaCredito"));
		
		
		this.jButtonCerrarToolBarDetaNotaCredito.addActionListener (new ButtonActionListener(this,"CerrarToolBarDetaNotaCredito"));
			
		this.jMenuItemCerrarDetaNotaCredito.addActionListener (new ButtonActionListener(this,"MenuItemCerrarDetaNotaCredito"));
			
		if(this.jInternalFrameDetalleFormDetaNotaCredito!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetaNotaCredito.jMenuItemDetalleCerrarDetaNotaCredito.addActionListener (new ButtonActionListener(this,"MenuItemDetalleCerrarDetaNotaCredito"));		
		}
		
		
		if(this.jInternalFrameDetalleFormDetaNotaCredito!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetaNotaCredito.jButtonGuardarCambiosDetaNotaCredito.addActionListener (new ButtonActionListener(this,"GuardarCambiosDetaNotaCredito"));
		}
		
		
		if(this.jInternalFrameDetalleFormDetaNotaCredito!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetaNotaCredito.jButtonGuardarCambiosToolBarDetaNotaCredito.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarDetaNotaCredito"));
		}
		
		this.jButtonCopiarToolBarDetaNotaCredito.addActionListener (new ButtonActionListener(this,"CopiarToolBarDetaNotaCredito"));
			
		this.jButtonVerFormToolBarDetaNotaCredito.addActionListener (new ButtonActionListener(this,"VerFormToolBarDetaNotaCredito"));
		
		this.jMenuItemGuardarCambiosDetaNotaCredito.addActionListener (new ButtonActionListener(this,"MenuItemGuardarCambiosDetaNotaCredito"));
			
		this.jMenuItemCopiarDetaNotaCredito.addActionListener (new ButtonActionListener(this,"MenuItemCopiarDetaNotaCredito"));		
		
		this.jMenuItemVerFormDetaNotaCredito.addActionListener (new ButtonActionListener(this,"MenuItemVerFormDetaNotaCredito"));		
		
		
		this.jButtonGuardarCambiosTablaDetaNotaCredito.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaDetaNotaCredito"));
		
		
		this.jButtonGuardarCambiosTablaToolBarDetaNotaCredito.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaToolBarDetaNotaCredito"));
			
		this.jMenuItemGuardarCambiosTablaDetaNotaCredito.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaDetaNotaCredito"));		
		
		
		
		this.jButtonRecargarInformacionDetaNotaCredito.addActionListener (new ButtonActionListener(this,"RecargarInformacionDetaNotaCredito"));
					
		this.jButtonRecargarInformacionToolBarDetaNotaCredito.addActionListener (new ButtonActionListener(this,"RecargarInformacionToolBarDetaNotaCredito"));
		
		this.jMenuItemRecargarInformacionDetaNotaCredito.addActionListener (new ButtonActionListener(this,"MenuItemRecargarInformacionDetaNotaCredito"));		
		
		
		
		this.jButtonAnterioresDetaNotaCredito.addActionListener (new ButtonActionListener(this,"AnterioresDetaNotaCredito"));
		
		
		this.jButtonAnterioresToolBarDetaNotaCredito.addActionListener (new ButtonActionListener(this,"AnterioresToolBarDetaNotaCredito"));
		
		this.jMenuItemAnterioresDetaNotaCredito.addActionListener (new ButtonActionListener(this,"MenuItemAnterioresDetaNotaCredito"));		
		
		
		this.jButtonSiguientesDetaNotaCredito.addActionListener (new ButtonActionListener(this,"SiguientesDetaNotaCredito"));
		
		
		this.jButtonSiguientesToolBarDetaNotaCredito.addActionListener (new ButtonActionListener(this,"SiguientesToolBarDetaNotaCredito"));
			
		this.jMenuItemSiguientesDetaNotaCredito.addActionListener (new ButtonActionListener(this,"MenuItemSiguientesDetaNotaCredito"));
			
		this.jMenuItemAbrirOrderByDetaNotaCredito.addActionListener (new ButtonActionListener(this,"MenuItemAbrirOrderByDetaNotaCredito"));
			
		this.jMenuItemMostrarOcultarDetaNotaCredito.addActionListener (new ButtonActionListener(this,"MenuItemMostrarOcultarDetaNotaCredito"));
			
		this.jMenuItemDetalleAbrirOrderByDetaNotaCredito.addActionListener (new ButtonActionListener(this,"MenuItemDetalleAbrirOrderByDetaNotaCredito"));
			
		this.jMenuItemDetalleMostarOcultarDetaNotaCredito.addActionListener (new ButtonActionListener(this,"MenuItemDetalleMostrarOcultarDetaNotaCredito"));		
		
		
		this.jButtonNuevoGuardarCambiosDetaNotaCredito.addActionListener (new ButtonActionListener(this,"NuevoGuardarCambiosDetaNotaCredito"));
		
		
		this.jButtonNuevoGuardarCambiosToolBarDetaNotaCredito.addActionListener (new ButtonActionListener(this,"NuevoGuardarCambiosToolBarDetaNotaCredito"));
			
		this.jMenuItemNuevoGuardarCambiosDetaNotaCredito.addActionListener (new ButtonActionListener(this,"MenuItemNuevoGuardarCambiosDetaNotaCredito"));		
		
		
		
		//SELECCIONAR TODOS
		
		this.jCheckBoxSeleccionarTodosDetaNotaCredito.addItemListener(new CheckBoxItemListener(this,"SeleccionarTodosDetaNotaCredito"));

		this.jCheckBoxSeleccionadosDetaNotaCredito.addItemListener(new CheckBoxItemListener(this,"SeleccionadosDetaNotaCredito"));
		
		if(this.jInternalFrameDetalleFormDetaNotaCredito!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxTiposAccionesFormularioDetaNotaCredito.addActionListener (new ButtonActionListener(this,"TiposAccionesFormularioDetaNotaCredito"));
		}
		
		
		this.jComboBoxTiposRelacionesDetaNotaCredito.addActionListener (new ButtonActionListener(this,"TiposRelacionesDetaNotaCredito"));
			
		this.jComboBoxTiposAccionesDetaNotaCredito.addActionListener (new ButtonActionListener(this,"TiposAccionesDetaNotaCredito"));
					
		this.jComboBoxTiposSeleccionarDetaNotaCredito.addActionListener (new ButtonActionListener(this,"TiposSeleccionarDetaNotaCredito"));
			
		this.jTextFieldValorCampoGeneralDetaNotaCredito.addActionListener (new ButtonActionListener(this,"ValorCampoGeneralDetaNotaCredito"));		
		
		
		if(this.jInternalFrameDetalleFormDetaNotaCredito!=null) { //if(this.conCargarFormDetalle) {
		
		
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCredito.jButtonidDetaNotaCreditoBusqueda.addActionListener(new ButtonActionListener(this,"idDetaNotaCreditoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetaNotaCredito.jButtonid_empresaDetaNotaCreditoUpdate.addActionListener(new ButtonActionListener(this,"id_empresaDetaNotaCreditoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCredito.jButtonid_empresaDetaNotaCreditoBusqueda.addActionListener(new ButtonActionListener(this,"id_empresaDetaNotaCreditoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetaNotaCredito.jButtonid_sucursalDetaNotaCreditoUpdate.addActionListener(new ButtonActionListener(this,"id_sucursalDetaNotaCreditoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCredito.jButtonid_sucursalDetaNotaCreditoBusqueda.addActionListener(new ButtonActionListener(this,"id_sucursalDetaNotaCreditoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetaNotaCredito.jButtonid_ejercicioDetaNotaCreditoUpdate.addActionListener(new ButtonActionListener(this,"id_ejercicioDetaNotaCreditoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCredito.jButtonid_ejercicioDetaNotaCreditoBusqueda.addActionListener(new ButtonActionListener(this,"id_ejercicioDetaNotaCreditoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetaNotaCredito.jButtonid_periodoDetaNotaCreditoUpdate.addActionListener(new ButtonActionListener(this,"id_periodoDetaNotaCreditoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCredito.jButtonid_periodoDetaNotaCreditoBusqueda.addActionListener(new ButtonActionListener(this,"id_periodoDetaNotaCreditoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetaNotaCredito.jButtonid_anioDetaNotaCreditoUpdate.addActionListener(new ButtonActionListener(this,"id_anioDetaNotaCreditoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCredito.jButtonid_anioDetaNotaCreditoBusqueda.addActionListener(new ButtonActionListener(this,"id_anioDetaNotaCreditoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetaNotaCredito.jButtonid_mesDetaNotaCreditoUpdate.addActionListener(new ButtonActionListener(this,"id_mesDetaNotaCreditoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCredito.jButtonid_mesDetaNotaCreditoBusqueda.addActionListener(new ButtonActionListener(this,"id_mesDetaNotaCreditoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetaNotaCredito.jButtonid_nota_creditoDetaNotaCreditoUpdate.addActionListener(new ButtonActionListener(this,"id_nota_creditoDetaNotaCreditoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCredito.jButtonid_nota_creditoDetaNotaCreditoBusqueda.addActionListener(new ButtonActionListener(this,"id_nota_creditoDetaNotaCreditoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetaNotaCredito.jButtonid_bodegaDetaNotaCreditoUpdate.addActionListener(new ButtonActionListener(this,"id_bodegaDetaNotaCreditoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCredito.jButtonid_bodegaDetaNotaCreditoBusqueda.addActionListener(new ButtonActionListener(this,"id_bodegaDetaNotaCreditoBusqueda"));
		//jButtonid_productoDetaNotaCredito.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_productoDetaNotaCreditoActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormDetaNotaCredito.jButtonid_productoDetaNotaCredito.addActionListener(new ButtonActionListener(this,"id_productoDetaNotaCredito"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetaNotaCredito.jButtonid_productoDetaNotaCreditoUpdate.addActionListener(new ButtonActionListener(this,"id_productoDetaNotaCreditoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCredito.jButtonid_productoDetaNotaCreditoBusqueda.addActionListener(new ButtonActionListener(this,"id_productoDetaNotaCreditoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetaNotaCredito.jButtonid_unidadDetaNotaCreditoUpdate.addActionListener(new ButtonActionListener(this,"id_unidadDetaNotaCreditoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCredito.jButtonid_unidadDetaNotaCreditoBusqueda.addActionListener(new ButtonActionListener(this,"id_unidadDetaNotaCreditoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetaNotaCredito.jButtonid_tipo_deta_nota_creditoDetaNotaCreditoUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_deta_nota_creditoDetaNotaCreditoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCredito.jButtonid_tipo_deta_nota_creditoDetaNotaCreditoBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_deta_nota_creditoDetaNotaCreditoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetaNotaCredito.jButtonid_tipo_devolucion_empresaDetaNotaCreditoUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_devolucion_empresaDetaNotaCreditoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCredito.jButtonid_tipo_devolucion_empresaDetaNotaCreditoBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_devolucion_empresaDetaNotaCreditoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCredito.jButtondescripcionDetaNotaCreditoBusqueda.addActionListener(new ButtonActionListener(this,"descripcionDetaNotaCreditoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCredito.jButtoncantidadDetaNotaCreditoBusqueda.addActionListener(new ButtonActionListener(this,"cantidadDetaNotaCreditoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCredito.jButtonprecioDetaNotaCreditoBusqueda.addActionListener(new ButtonActionListener(this,"precioDetaNotaCreditoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCredito.jButtonmontoDetaNotaCreditoBusqueda.addActionListener(new ButtonActionListener(this,"montoDetaNotaCreditoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCredito.jButtoncostoDetaNotaCreditoBusqueda.addActionListener(new ButtonActionListener(this,"costoDetaNotaCreditoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCredito.jButtondescuentoDetaNotaCreditoBusqueda.addActionListener(new ButtonActionListener(this,"descuentoDetaNotaCreditoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCredito.jButtondescuento2DetaNotaCreditoBusqueda.addActionListener(new ButtonActionListener(this,"descuento2DetaNotaCreditoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCredito.jButtonimpuestoDetaNotaCreditoBusqueda.addActionListener(new ButtonActionListener(this,"impuestoDetaNotaCreditoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCredito.jButtonporcen_ivaDetaNotaCreditoBusqueda.addActionListener(new ButtonActionListener(this,"porcen_ivaDetaNotaCreditoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCredito.jButtonporcen_descuenDetaNotaCreditoBusqueda.addActionListener(new ButtonActionListener(this,"porcen_descuenDetaNotaCreditoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCredito.jButtonporcen_iceDetaNotaCreditoBusqueda.addActionListener(new ButtonActionListener(this,"porcen_iceDetaNotaCreditoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCredito.jButtonsub_totalDetaNotaCreditoBusqueda.addActionListener(new ButtonActionListener(this,"sub_totalDetaNotaCreditoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCredito.jButtontotalDetaNotaCreditoBusqueda.addActionListener(new ButtonActionListener(this,"totalDetaNotaCreditoBusqueda"));
		//jButtonid_centro_costoDetaNotaCredito.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_centro_costoDetaNotaCreditoActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormDetaNotaCredito.jButtonid_centro_costoDetaNotaCredito.addActionListener(new ButtonActionListener(this,"id_centro_costoDetaNotaCredito"));
		//jButtonid_centro_costoDetaNotaCreditoArbol.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			abrirFrameTreeCentroCosto("BUSQUEDA_FK");
		//		}
		//	}
		//);

		//BUSQUEDA ARBOL CAMPO
		this.jInternalFrameDetalleFormDetaNotaCredito.jButtonid_centro_costoDetaNotaCreditoArbol.addActionListener(new ButtonActionListener(this,"id_centro_costoDetaNotaCreditoArbol"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetaNotaCredito.jButtonid_centro_costoDetaNotaCreditoUpdate.addActionListener(new ButtonActionListener(this,"id_centro_costoDetaNotaCreditoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCredito.jButtonid_centro_costoDetaNotaCreditoBusqueda.addActionListener(new ButtonActionListener(this,"id_centro_costoDetaNotaCreditoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetaNotaCredito.jButtonid_empaqueDetaNotaCreditoUpdate.addActionListener(new ButtonActionListener(this,"id_empaqueDetaNotaCreditoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCredito.jButtonid_empaqueDetaNotaCreditoBusqueda.addActionListener(new ButtonActionListener(this,"id_empaqueDetaNotaCreditoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCredito.jButtonincluye_impuestoDetaNotaCreditoBusqueda.addActionListener(new ButtonActionListener(this,"incluye_impuestoDetaNotaCreditoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCredito.jButtonfecha_emisionDetaNotaCreditoBusqueda.addActionListener(new ButtonActionListener(this,"fecha_emisionDetaNotaCreditoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCredito.jButtoncodigo_loteDetaNotaCreditoBusqueda.addActionListener(new ButtonActionListener(this,"codigo_loteDetaNotaCreditoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCredito.jButtonnumero_cajaDetaNotaCreditoBusqueda.addActionListener(new ButtonActionListener(this,"numero_cajaDetaNotaCreditoBusqueda"));
		}
		
		if(!this.conCargarMinimo) {
		//BYDAN_BUSQUEDAS
		
		
			this.jButtonFK_IdBodegaDetaNotaCredito.addActionListener(new ButtonActionListener(this,"FK_IdBodegaDetaNotaCredito"));

			this.jButtonFK_IdCentroCostoDetaNotaCredito.addActionListener(new ButtonActionListener(this,"FK_IdCentroCostoDetaNotaCredito"));

			this.jButtonBuscarFK_IdCentroCostoid_centro_costoDetaNotaCredito.addActionListener(new ButtonActionListener(this,"id_centro_costoDetaNotaCredito"));

			this.jButtonFK_IdEmpaqueDetaNotaCredito.addActionListener(new ButtonActionListener(this,"FK_IdEmpaqueDetaNotaCredito"));

			this.jButtonFK_IdNotaCreditoDetaNotaCredito.addActionListener(new ButtonActionListener(this,"FK_IdNotaCreditoDetaNotaCredito"));

			this.jButtonFK_IdProductoDetaNotaCredito.addActionListener(new ButtonActionListener(this,"FK_IdProductoDetaNotaCredito"));

			this.jButtonBuscarFK_IdProductoid_productoDetaNotaCredito.addActionListener(new ButtonActionListener(this,"id_productoDetaNotaCredito"));

			this.jButtonFK_IdTipoDetaNotaCreditoDetaNotaCredito.addActionListener(new ButtonActionListener(this,"FK_IdTipoDetaNotaCreditoDetaNotaCredito"));

			this.jButtonFK_IdTipoDevolucionEmpresaDetaNotaCredito.addActionListener(new ButtonActionListener(this,"FK_IdTipoDevolucionEmpresaDetaNotaCredito"));

			this.jButtonFK_IdUnidadDetaNotaCredito.addActionListener(new ButtonActionListener(this,"FK_IdUnidadDetaNotaCredito"));
		
		
		
			//REPORTE DINAMICO
			
			if(this.jInternalFrameReporteDinamicoDetaNotaCredito!=null) {
				this.jInternalFrameReporteDinamicoDetaNotaCredito.getjButtonCerrarReporteDinamico().addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoDetaNotaCredito"));
				this.jInternalFrameReporteDinamicoDetaNotaCredito.getjButtonGenerarReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoDetaNotaCredito"));
				this.jInternalFrameReporteDinamicoDetaNotaCredito.getjButtonGenerarExcelReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoDetaNotaCredito"));
			}
			
			//this.jButtonCerrarReporteDinamicoDetaNotaCredito.addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoDetaNotaCredito"));				
			//this.jButtonGenerarReporteDinamicoDetaNotaCredito.addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoDetaNotaCredito"));
			//this.jButtonGenerarExcelReporteDinamicoDetaNotaCredito.addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoDetaNotaCredito"));
				
				
			//IMPORTACION			
			if(this.jInternalFrameImportacionDetaNotaCredito!=null) {
				this.jInternalFrameImportacionDetaNotaCredito.getjButtonCerrarImportacion().addActionListener (new ButtonActionListener(this,"CerrarImportacionDetaNotaCredito"));
				this.jInternalFrameImportacionDetaNotaCredito.getjButtonGenerarImportacion().addActionListener (new ButtonActionListener(this,"GenerarImportacionDetaNotaCredito"));
				this.jInternalFrameImportacionDetaNotaCredito.getjButtonAbrirImportacion().addActionListener (new ButtonActionListener(this,"AbrirImportacionDetaNotaCredito"));
			}
			
			//ORDER BY
			this.jButtonAbrirOrderByDetaNotaCredito.addActionListener (new ButtonActionListener(this,"AbrirOrderByDetaNotaCredito"));
			
			this.jButtonAbrirOrderByToolBarDetaNotaCredito.addActionListener (new ButtonActionListener(this,"AbrirOrderByToolBarDetaNotaCredito"));			
			
			if(this.jInternalFrameOrderByDetaNotaCredito!=null) {
				this.jInternalFrameOrderByDetaNotaCredito.getjButtonCerrarOrderBy().addActionListener (new ButtonActionListener(this,"CerrarOrderByDetaNotaCredito"));				
			}
			
			
		}
		
		this.jButtonAbrirTotalesDetaNotaCredito.addActionListener (new ButtonActionListener(this,"AbrirTotalesDetaNotaCredito"));
		
		if(this.jInternalFrameTotalesDetaNotaCredito!=null) {
			this.jInternalFrameTotalesDetaNotaCredito.getjButtonCerrarTotales().addActionListener (new ButtonActionListener(this,"CerrarTotalesDetaNotaCredito"));
		}
		
		
		if(!this.conCargarMinimo) {
			if(this.jInternalFrameDetalleFormDetaNotaCredito!=null) { //if(this.conCargarFormDetalle) {
			;
			}
		}
		
		
		//TABBED PANE RELACIONES
		if(this.jInternalFrameDetalleFormDetaNotaCredito!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetaNotaCredito.jTabbedPaneRelacionesDetaNotaCredito.addChangeListener(new TabbedPaneChangeListener(this,"RelacionesDetaNotaCredito"));
		
		;
		}
		//TABBED PANE RELACIONES FIN(EXTRA TAB)		
	}
	
	/*
	public void initActions() {
		String sMapKey = "";
		InputMap inputMap =null;
		
		this.addInternalFrameListener(new javax.swing.event.InternalFrameAdapter() {
            public void internalFrameClosing(InternalFrameEvent event) {          	
            	try {
            		closingInternalFrameDetaNotaCredito();
				} catch (Exception e) {
					e.printStackTrace();
				}
            }
        });
		
		this.jInternalFrameDetalleFormDetaNotaCredito.addInternalFrameListener(new javax.swing.event.InternalFrameAdapter() {
	        public void internalFrameClosing(InternalFrameEvent event) {
	            JInternalFrameBase jInternalFrameDetalleFormDetaNotaCredito = (JInternalFrameBase)event.getSource();
	            	
	            DetaNotaCreditoBeanSwingJInternalFrame jInternalFrameParent=(DetaNotaCreditoBeanSwingJInternalFrame)jInternalFrameDetalleFormDetaNotaCredito.getjInternalFrameParent();
	                
	            try {
					jInternalFrameParent.jButtonCancelarDetaNotaCreditoActionPerformed(null);
					
					//jInternalFrameParent.dispose();
					//jInternalFrameParent=null;
					
				} catch (Exception e) {
					e.printStackTrace();
				}
	        }
	    });
			
		this.jTableDatosDetaNotaCredito.getSelectionModel().addListSelectionListener (
	                new ListSelectionListener() {
	                    public void valueChanged(ListSelectionEvent e) {
							//BYDAN_DESHABILITADO
	                    	//try {jTableDatosDetaNotaCreditoListSelectionListener(e);}catch(Exception e1){e1.printStackTrace();}
	                    }
	                }
	     );
		
		this.jTableDatosDetaNotaCredito.addMouseListener(new MouseAdapter() {
			   public void mouseClicked(MouseEvent evt) {
				      if (evt.getClickCount() == 2) {
				    	  jButtonIdActionPerformed(null,jTableDatosDetaNotaCredito.getSelectedRow(),false,false);
				      }
				   }
		});
		
		this.jButtonNuevoDetaNotaCredito.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoDetaNotaCreditoActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoToolBarDetaNotaCredito.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoDetaNotaCreditoActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoDetaNotaCredito.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoDetaNotaCreditoActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "NuevoDetaNotaCredito";
		inputMap = this.jButtonNuevoDetaNotaCredito.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_N , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonNuevoDetaNotaCredito.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonNuevoDetaNotaCreditoActionPerformed(evt,false);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonNuevoRelacionesDetaNotaCredito.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoDetaNotaCreditoActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoRelacionesToolBarDetaNotaCredito.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoDetaNotaCreditoActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoRelacionesDetaNotaCredito.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoDetaNotaCreditoActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "NuevoRelacionesDetaNotaCredito";
		inputMap = this.jButtonNuevoRelacionesDetaNotaCredito.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_R , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonNuevoRelacionesDetaNotaCredito.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonNuevoDetaNotaCreditoActionPerformed(evt,true);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonModificarDetaNotaCredito.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarDetaNotaCreditoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonModificarToolBarDetaNotaCredito.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarDetaNotaCreditoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemModificarDetaNotaCredito.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarDetaNotaCreditoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "ModificarDetaNotaCredito";
		inputMap = this.jButtonModificarDetaNotaCredito.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_M , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonModificarDetaNotaCredito.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonModificarDetaNotaCreditoActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonActualizarDetaNotaCredito.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarDetaNotaCreditoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonActualizarToolBarDetaNotaCredito.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarDetaNotaCreditoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemActualizarDetaNotaCredito.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarDetaNotaCreditoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "ActualizarDetaNotaCredito";
		inputMap = this.jButtonActualizarDetaNotaCredito.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_G , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonActualizarDetaNotaCredito.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonActualizarDetaNotaCreditoActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonEliminarDetaNotaCredito.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarDetaNotaCreditoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonEliminarToolBarDetaNotaCredito.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarDetaNotaCreditoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
				
		this.jMenuItemEliminarDetaNotaCredito.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarDetaNotaCreditoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "EliminarDetaNotaCredito";
		inputMap = this.jButtonEliminarDetaNotaCredito.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_E , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonEliminarDetaNotaCredito.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonEliminarDetaNotaCreditoActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonCancelarDetaNotaCredito.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarDetaNotaCreditoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonCancelarToolBarDetaNotaCredito.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarDetaNotaCreditoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemCancelarDetaNotaCredito.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarDetaNotaCreditoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "CancelarDetaNotaCredito";
		inputMap = this.jButtonCancelarDetaNotaCredito.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_Q , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonCancelarDetaNotaCredito.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonCancelarDetaNotaCreditoActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonCerrarDetaNotaCredito.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarDetaNotaCreditoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonCerrarToolBarDetaNotaCredito.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarDetaNotaCreditoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemCerrarDetaNotaCredito.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarDetaNotaCreditoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemDetalleCerrarDetaNotaCredito.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  //try {jButtonCerrarDetaNotaCreditoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
					try {jButtonCancelarDetaNotaCreditoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "CerrarDetaNotaCredito";
		inputMap = this.jButtonCerrarDetaNotaCredito.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_C , KeyEvent.ALT_MASK), sMapKey);
			
		this.jButtonCerrarDetaNotaCredito.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonCerrarDetaNotaCreditoActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jInternalFrameDetalleFormDetaNotaCredito.jButtonGuardarCambiosDetaNotaCredito.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosDetaNotaCreditoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosToolBarDetaNotaCredito.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosDetaNotaCreditoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemGuardarCambiosDetaNotaCredito.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosDetaNotaCreditoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosTablaDetaNotaCredito.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosDetaNotaCreditoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosTablaToolBarDetaNotaCredito.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosDetaNotaCreditoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemGuardarCambiosTablaDetaNotaCredito.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosDetaNotaCreditoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "GuardarCambiosDetaNotaCredito";
		inputMap = this.jInternalFrameDetalleFormDetaNotaCredito.jButtonGuardarCambiosDetaNotaCredito.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_G , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jInternalFrameDetalleFormDetaNotaCredito.jButtonGuardarCambiosDetaNotaCredito.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonGuardarCambiosDetaNotaCreditoActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonRecargarInformacionDetaNotaCredito.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionDetaNotaCreditoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonRecargarInformacionToolBarDetaNotaCredito.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionDetaNotaCreditoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemRecargarInformacionDetaNotaCredito.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionDetaNotaCreditoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		
		this.jButtonAnterioresDetaNotaCredito.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresDetaNotaCreditoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonAnterioresToolBarDetaNotaCredito.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresDetaNotaCreditoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemAnterioresDetaNotaCredito.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresDetaNotaCreditoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonSiguientesDetaNotaCredito.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesDetaNotaCreditoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonSiguientesToolBarDetaNotaCredito.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesDetaNotaCreditoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemSiguientesDetaNotaCredito.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesDetaNotaCreditoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoGuardarCambiosDetaNotaCredito.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosDetaNotaCreditoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoGuardarCambiosToolBarDetaNotaCredito.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosDetaNotaCreditoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoGuardarCambiosDetaNotaCredito.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosDetaNotaCreditoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		
		//SELECCIONAR TODOS
		this.jCheckBoxSeleccionarTodosDetaNotaCredito.addItemListener(new ItemListener() {		
			public void itemStateChanged(ItemEvent evt) {
				try {jCheckBoxSeleccionarTodosDetaNotaCreditoItemListener(evt);}catch(Exception e){e.printStackTrace();}
			}
		});

		this.jComboBoxTiposAccionesDetaNotaCredito.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jComboBoxTiposAccionesDetaNotaCreditoActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		this.jComboBoxTiposSeleccionarDetaNotaCredito.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jComboBoxTiposSeleccionarDetaNotaCreditoActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		this.jTextFieldValorCampoGeneralDetaNotaCredito.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jTextFieldValorCampoGeneralDetaNotaCreditoActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCredito.jButtonidDetaNotaCreditoBusqueda.addActionListener(new ButtonActionListener(this,"idDetaNotaCreditoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetaNotaCredito.jButtonid_empresaDetaNotaCreditoUpdate.addActionListener(new ButtonActionListener(this,"id_empresaDetaNotaCreditoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCredito.jButtonid_empresaDetaNotaCreditoBusqueda.addActionListener(new ButtonActionListener(this,"id_empresaDetaNotaCreditoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetaNotaCredito.jButtonid_sucursalDetaNotaCreditoUpdate.addActionListener(new ButtonActionListener(this,"id_sucursalDetaNotaCreditoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCredito.jButtonid_sucursalDetaNotaCreditoBusqueda.addActionListener(new ButtonActionListener(this,"id_sucursalDetaNotaCreditoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetaNotaCredito.jButtonid_ejercicioDetaNotaCreditoUpdate.addActionListener(new ButtonActionListener(this,"id_ejercicioDetaNotaCreditoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCredito.jButtonid_ejercicioDetaNotaCreditoBusqueda.addActionListener(new ButtonActionListener(this,"id_ejercicioDetaNotaCreditoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetaNotaCredito.jButtonid_periodoDetaNotaCreditoUpdate.addActionListener(new ButtonActionListener(this,"id_periodoDetaNotaCreditoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCredito.jButtonid_periodoDetaNotaCreditoBusqueda.addActionListener(new ButtonActionListener(this,"id_periodoDetaNotaCreditoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetaNotaCredito.jButtonid_anioDetaNotaCreditoUpdate.addActionListener(new ButtonActionListener(this,"id_anioDetaNotaCreditoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCredito.jButtonid_anioDetaNotaCreditoBusqueda.addActionListener(new ButtonActionListener(this,"id_anioDetaNotaCreditoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetaNotaCredito.jButtonid_mesDetaNotaCreditoUpdate.addActionListener(new ButtonActionListener(this,"id_mesDetaNotaCreditoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCredito.jButtonid_mesDetaNotaCreditoBusqueda.addActionListener(new ButtonActionListener(this,"id_mesDetaNotaCreditoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetaNotaCredito.jButtonid_nota_creditoDetaNotaCreditoUpdate.addActionListener(new ButtonActionListener(this,"id_nota_creditoDetaNotaCreditoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCredito.jButtonid_nota_creditoDetaNotaCreditoBusqueda.addActionListener(new ButtonActionListener(this,"id_nota_creditoDetaNotaCreditoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetaNotaCredito.jButtonid_bodegaDetaNotaCreditoUpdate.addActionListener(new ButtonActionListener(this,"id_bodegaDetaNotaCreditoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCredito.jButtonid_bodegaDetaNotaCreditoBusqueda.addActionListener(new ButtonActionListener(this,"id_bodegaDetaNotaCreditoBusqueda"));
		//jButtonid_productoDetaNotaCredito.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_productoDetaNotaCreditoActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormDetaNotaCredito.jButtonid_productoDetaNotaCredito.addActionListener(new ButtonActionListener(this,"id_productoDetaNotaCredito"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetaNotaCredito.jButtonid_productoDetaNotaCreditoUpdate.addActionListener(new ButtonActionListener(this,"id_productoDetaNotaCreditoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCredito.jButtonid_productoDetaNotaCreditoBusqueda.addActionListener(new ButtonActionListener(this,"id_productoDetaNotaCreditoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetaNotaCredito.jButtonid_unidadDetaNotaCreditoUpdate.addActionListener(new ButtonActionListener(this,"id_unidadDetaNotaCreditoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCredito.jButtonid_unidadDetaNotaCreditoBusqueda.addActionListener(new ButtonActionListener(this,"id_unidadDetaNotaCreditoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetaNotaCredito.jButtonid_tipo_deta_nota_creditoDetaNotaCreditoUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_deta_nota_creditoDetaNotaCreditoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCredito.jButtonid_tipo_deta_nota_creditoDetaNotaCreditoBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_deta_nota_creditoDetaNotaCreditoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetaNotaCredito.jButtonid_tipo_devolucion_empresaDetaNotaCreditoUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_devolucion_empresaDetaNotaCreditoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCredito.jButtonid_tipo_devolucion_empresaDetaNotaCreditoBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_devolucion_empresaDetaNotaCreditoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCredito.jButtondescripcionDetaNotaCreditoBusqueda.addActionListener(new ButtonActionListener(this,"descripcionDetaNotaCreditoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCredito.jButtoncantidadDetaNotaCreditoBusqueda.addActionListener(new ButtonActionListener(this,"cantidadDetaNotaCreditoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCredito.jButtonprecioDetaNotaCreditoBusqueda.addActionListener(new ButtonActionListener(this,"precioDetaNotaCreditoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCredito.jButtonmontoDetaNotaCreditoBusqueda.addActionListener(new ButtonActionListener(this,"montoDetaNotaCreditoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCredito.jButtoncostoDetaNotaCreditoBusqueda.addActionListener(new ButtonActionListener(this,"costoDetaNotaCreditoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCredito.jButtondescuentoDetaNotaCreditoBusqueda.addActionListener(new ButtonActionListener(this,"descuentoDetaNotaCreditoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCredito.jButtondescuento2DetaNotaCreditoBusqueda.addActionListener(new ButtonActionListener(this,"descuento2DetaNotaCreditoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCredito.jButtonimpuestoDetaNotaCreditoBusqueda.addActionListener(new ButtonActionListener(this,"impuestoDetaNotaCreditoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCredito.jButtonporcen_ivaDetaNotaCreditoBusqueda.addActionListener(new ButtonActionListener(this,"porcen_ivaDetaNotaCreditoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCredito.jButtonporcen_descuenDetaNotaCreditoBusqueda.addActionListener(new ButtonActionListener(this,"porcen_descuenDetaNotaCreditoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCredito.jButtonporcen_iceDetaNotaCreditoBusqueda.addActionListener(new ButtonActionListener(this,"porcen_iceDetaNotaCreditoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCredito.jButtonsub_totalDetaNotaCreditoBusqueda.addActionListener(new ButtonActionListener(this,"sub_totalDetaNotaCreditoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCredito.jButtontotalDetaNotaCreditoBusqueda.addActionListener(new ButtonActionListener(this,"totalDetaNotaCreditoBusqueda"));
		//jButtonid_centro_costoDetaNotaCredito.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_centro_costoDetaNotaCreditoActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormDetaNotaCredito.jButtonid_centro_costoDetaNotaCredito.addActionListener(new ButtonActionListener(this,"id_centro_costoDetaNotaCredito"));
		//jButtonid_centro_costoDetaNotaCreditoArbol.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			abrirFrameTreeCentroCosto("BUSQUEDA_FK");
		//		}
		//	}
		//);

		//BUSQUEDA ARBOL CAMPO
		this.jInternalFrameDetalleFormDetaNotaCredito.jButtonid_centro_costoDetaNotaCreditoArbol.addActionListener(new ButtonActionListener(this,"id_centro_costoDetaNotaCreditoArbol"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetaNotaCredito.jButtonid_centro_costoDetaNotaCreditoUpdate.addActionListener(new ButtonActionListener(this,"id_centro_costoDetaNotaCreditoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCredito.jButtonid_centro_costoDetaNotaCreditoBusqueda.addActionListener(new ButtonActionListener(this,"id_centro_costoDetaNotaCreditoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetaNotaCredito.jButtonid_empaqueDetaNotaCreditoUpdate.addActionListener(new ButtonActionListener(this,"id_empaqueDetaNotaCreditoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCredito.jButtonid_empaqueDetaNotaCreditoBusqueda.addActionListener(new ButtonActionListener(this,"id_empaqueDetaNotaCreditoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCredito.jButtonincluye_impuestoDetaNotaCreditoBusqueda.addActionListener(new ButtonActionListener(this,"incluye_impuestoDetaNotaCreditoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCredito.jButtonfecha_emisionDetaNotaCreditoBusqueda.addActionListener(new ButtonActionListener(this,"fecha_emisionDetaNotaCreditoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCredito.jButtoncodigo_loteDetaNotaCreditoBusqueda.addActionListener(new ButtonActionListener(this,"codigo_loteDetaNotaCreditoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCredito.jButtonnumero_cajaDetaNotaCreditoBusqueda.addActionListener(new ButtonActionListener(this,"numero_cajaDetaNotaCreditoBusqueda"));
		
		
		this.jButtonFK_IdBodegaDetaNotaCredito.addActionListener(new ButtonActionListener(this,"FK_IdBodegaDetaNotaCredito"));

		this.jButtonFK_IdCentroCostoDetaNotaCredito.addActionListener(new ButtonActionListener(this,"FK_IdCentroCostoDetaNotaCredito"));

		this.jButtonBuscarFK_IdCentroCostoid_centro_costoDetaNotaCredito.addActionListener(new ButtonActionListener(this,"id_centro_costoDetaNotaCredito"));

		this.jButtonFK_IdEmpaqueDetaNotaCredito.addActionListener(new ButtonActionListener(this,"FK_IdEmpaqueDetaNotaCredito"));

		this.jButtonFK_IdNotaCreditoDetaNotaCredito.addActionListener(new ButtonActionListener(this,"FK_IdNotaCreditoDetaNotaCredito"));

		this.jButtonFK_IdProductoDetaNotaCredito.addActionListener(new ButtonActionListener(this,"FK_IdProductoDetaNotaCredito"));

		this.jButtonBuscarFK_IdProductoid_productoDetaNotaCredito.addActionListener(new ButtonActionListener(this,"id_productoDetaNotaCredito"));

		this.jButtonFK_IdTipoDetaNotaCreditoDetaNotaCredito.addActionListener(new ButtonActionListener(this,"FK_IdTipoDetaNotaCreditoDetaNotaCredito"));

		this.jButtonFK_IdTipoDevolucionEmpresaDetaNotaCredito.addActionListener(new ButtonActionListener(this,"FK_IdTipoDevolucionEmpresaDetaNotaCredito"));

		this.jButtonFK_IdUnidadDetaNotaCredito.addActionListener(new ButtonActionListener(this,"FK_IdUnidadDetaNotaCredito"));

		
		//REPORTE DINAMICO
		this.jButtonCerrarReporteDinamicoDetaNotaCredito.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarReporteDinamicoDetaNotaCreditoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarReporteDinamicoDetaNotaCredito.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarReporteDinamicoDetaNotaCreditoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarExcelReporteDinamicoDetaNotaCredito.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarExcelReporteDinamicoDetaNotaCreditoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		//IMPORTACION
		this.jButtonCerrarImportacionDetaNotaCredito.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarImportacionDetaNotaCreditoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarImportacionDetaNotaCredito.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarImportacionDetaNotaCreditoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonAbrirImportacionDetaNotaCredito.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAbrirImportacionDetaNotaCreditoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
	}
	*/
	
	
	public void jComboBoxTiposSeleccionarDetaNotaCreditoActionListener(ActionEvent evt) throws Exception {    		
		try {			
			Reporte reporte=(Reporte)this.jComboBoxTiposSeleccionarDetaNotaCredito.getSelectedItem();
			
			//if(reporte.getsCodigo().equals("SELECCIONAR")) {
			//}					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);
		}
	}	
	
	
	
	public void seleccionarTodosDetaNotaCredito(Boolean conSeleccionarTodos) throws Exception {    		
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {				
				for(DetaNotaCredito detanotacreditoAux:this.detanotacreditoLogic.getDetaNotaCreditos()) {
					detanotacreditoAux.setIsSelected(conSeleccionarTodos);
				}			
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(DetaNotaCredito detanotacreditoAux:detanotacreditos) {
					detanotacreditoAux.setIsSelected(conSeleccionarTodos);
				}
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionarTodosDetaNotaCreditoItemListener(ItemEvent evt) throws Exception {    		
		try {			
			this.inicializarActualizarBindingDetaNotaCredito(false,false);
			
			//JCheckBox jCheckBox=(JCheckBox)evt.getSource();			
			//System.out.println("ok");		
			
			Boolean existe=false;
			
			if(sTipoSeleccionar.equals("COLUMNAS")) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					for(DetaNotaCredito detanotacreditoAux:this.detanotacreditoLogic.getDetaNotaCreditos()) {
						detanotacreditoAux.setIsSelected(this.isSeleccionarTodos);
					}			
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(DetaNotaCredito detanotacreditoAux:detanotacreditos) {
						detanotacreditoAux.setIsSelected(this.isSeleccionarTodos);
					}
				}
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					for(DetaNotaCredito detanotacreditoAux:this.detanotacreditoLogic.getDetaNotaCreditos()) {
					
						if(sTipoSeleccionar.equals(DetaNotaCreditoConstantesFunciones.LABEL_INCLUYEIMPUESTO)) {
							existe=true;
							detanotacreditoAux.setincluye_impuesto(this.isSeleccionarTodos);
						}
					}	
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(DetaNotaCredito detanotacreditoAux:detanotacreditos) {
						
						if(sTipoSeleccionar.equals(DetaNotaCreditoConstantesFunciones.LABEL_INCLUYEIMPUESTO)) {
							existe=true;
							detanotacreditoAux.setincluye_impuesto(this.isSeleccionarTodos);
						}
					}
				}
			}
					
			if(existe) {
				this.inicializarActualizarBindingTablaDetaNotaCredito(false);
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}	
			
			//TableCellRenderer tableCellRenderer=null;			
			
			//TableCellEditor tableCellEditor=null;						
						
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			/*
			for(int i = 0; i < this.jTableDatosDetaNotaCredito.getRowCount(); i++) {				
				tableCellRenderer=this.jTableDatosSistema.getCellRenderer(i, 2);
				tableCellEditor=this.jTableDatosSistema.getCellEditor(i, 2);
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellRenderer;				
				idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellEditor;
				
				if(idSeleccionarTableCell.jCheckBoxId!=null) {
					idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				}
				
				//System.out.println(idSeleccionarTableCell.valor);
				
				//this.jTableDatosDetaNotaCredito.getModel().setValueAt(jCheckBox.isSelected(), i, Funciones2.getColumnIndexByName(this.jTableDatosDetaNotaCredito,Constantes2.S_SELECCIONAR));
		    } 
			*/
					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionadosDetaNotaCreditoItemListener(ItemEvent evt) throws Exception {    		
		try {			
			this.inicializarActualizarBindingDetaNotaCredito(false,false);
			
			//JCheckBox jCheckBox=(JCheckBox)evt.getSource();			
			//System.out.println("ok");		
			
			Boolean existe=false;
			int[] arrNumRowsSeleccionados=null;
			
			arrNumRowsSeleccionados=this.jTableDatosDetaNotaCredito.getSelectedRows();
			
			DetaNotaCredito detanotacreditoLocal=new DetaNotaCredito();
			
			//this.seleccionarTodosDetaNotaCredito(false);
			
			for(Integer iNumRowSeleccionado:arrNumRowsSeleccionados) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {
					detanotacreditoLocal =(DetaNotaCredito) this.detanotacreditoLogic.getDetaNotaCreditos().toArray()[this.jTableDatosDetaNotaCredito.convertRowIndexToModel(iNumRowSeleccionado)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					detanotacreditoLocal =(DetaNotaCredito) this.detanotacreditos.toArray()[this.jTableDatosDetaNotaCredito.convertRowIndexToModel(iNumRowSeleccionado)];
				}
				
				detanotacreditoLocal.setIsSelected(this.isSeleccionados);
			}
			
			/*
			if(sTipoSeleccionar.equals("SELECCIONAR")) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					for(DetaNotaCredito detanotacreditoAux:this.detanotacreditoLogic.getDetaNotaCreditos()) {
						detanotacreditoAux.setIsSelected(this.isSeleccionados);
					}			
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(DetaNotaCredito detanotacreditoAux:detanotacreditos) {
						detanotacreditoAux.setIsSelected(this.isSeleccionados);
					}
				}
			}
			*/
			
			//if(existe) {
				this.inicializarActualizarBindingTablaDetaNotaCredito(false);
			/*
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}	
			*/
			
			
			//TableCellRenderer tableCellRenderer=null;			
			
			//TableCellEditor tableCellEditor=null;						
						
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			/*
			for(int i = 0; i < this.jTableDatosDetaNotaCredito.getRowCount(); i++) {				
				tableCellRenderer=this.jTableDatosSistema.getCellRenderer(i, 2);
				tableCellEditor=this.jTableDatosSistema.getCellEditor(i, 2);
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellRenderer;				
				idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellEditor;
				
				if(idSeleccionarTableCell.jCheckBoxId!=null) {
					idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				}
				
				//System.out.println(idSeleccionarTableCell.valor);
				
				//this.jTableDatosDetaNotaCredito.getModel().setValueAt(jCheckBox.isSelected(), i, Funciones2.getColumnIndexByName(this.jTableDatosDetaNotaCredito,Constantes2.S_SELECCIONAR));
		    } 
			*/
					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionarActualDetaNotaCreditoItemListener(ItemEvent evt,Long idActual) throws Exception {    		
		try {
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void ejecutarAuxiliarDetaNotaCreditoParaAjaxPostBack() throws Exception {    		
		try {
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jTextFieldValorCampoGeneralDetaNotaCreditoActionListener(ActionEvent evt) throws Exception {    		
		try {
			this.inicializarActualizarBindingDetaNotaCredito(false,false);
			
			//System.out.println(this.jTextFieldValorCampoGeneralDetaNotaCredito.getText());		
			
			Boolean existe=false;
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				for(DetaNotaCredito detanotacreditoAux:this.detanotacreditoLogic.getDetaNotaCreditos()) {
				
						if(sTipoSeleccionar.equals(DetaNotaCreditoConstantesFunciones.LABEL_DESCRIPCION)) {
							existe=true;
							detanotacreditoAux.setdescripcion(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(DetaNotaCreditoConstantesFunciones.LABEL_CANTIDAD)) {
							existe=true;
							detanotacreditoAux.setcantidad(Integer.parseInt(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetaNotaCreditoConstantesFunciones.LABEL_PRECIO)) {
							existe=true;
							detanotacreditoAux.setprecio(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetaNotaCreditoConstantesFunciones.LABEL_MONTO)) {
							existe=true;
							detanotacreditoAux.setmonto(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetaNotaCreditoConstantesFunciones.LABEL_COSTO)) {
							existe=true;
							detanotacreditoAux.setcosto(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetaNotaCreditoConstantesFunciones.LABEL_DESCUENTO)) {
							existe=true;
							detanotacreditoAux.setdescuento(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetaNotaCreditoConstantesFunciones.LABEL_DESCUENTO2)) {
							existe=true;
							detanotacreditoAux.setdescuento2(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetaNotaCreditoConstantesFunciones.LABEL_IMPUESTO)) {
							existe=true;
							detanotacreditoAux.setimpuesto(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetaNotaCreditoConstantesFunciones.LABEL_PORCENIVA)) {
							existe=true;
							detanotacreditoAux.setporcen_iva(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetaNotaCreditoConstantesFunciones.LABEL_PORCENDESCUEN)) {
							existe=true;
							detanotacreditoAux.setporcen_descuen(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetaNotaCreditoConstantesFunciones.LABEL_PORCENICE)) {
							existe=true;
							detanotacreditoAux.setporcen_ice(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetaNotaCreditoConstantesFunciones.LABEL_SUBTOTAL)) {
							existe=true;
							detanotacreditoAux.setsub_total(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetaNotaCreditoConstantesFunciones.LABEL_TOTAL)) {
							existe=true;
							detanotacreditoAux.settotal(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetaNotaCreditoConstantesFunciones.LABEL_FECHAEMISION)) {
							existe=true;
							detanotacreditoAux.setfecha_emision(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetaNotaCreditoConstantesFunciones.LABEL_CODIGOLOTE)) {
							existe=true;
							detanotacreditoAux.setcodigo_lote(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(DetaNotaCreditoConstantesFunciones.LABEL_NUMEROCAJA)) {
							existe=true;
							detanotacreditoAux.setnumero_caja(this.sValorCampoGeneral);
						}
				}	
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(DetaNotaCredito detanotacreditoAux:detanotacreditos) {
					
						if(sTipoSeleccionar.equals(DetaNotaCreditoConstantesFunciones.LABEL_DESCRIPCION)) {
							existe=true;
							detanotacreditoAux.setdescripcion(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(DetaNotaCreditoConstantesFunciones.LABEL_CANTIDAD)) {
							existe=true;
							detanotacreditoAux.setcantidad(Integer.parseInt(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetaNotaCreditoConstantesFunciones.LABEL_PRECIO)) {
							existe=true;
							detanotacreditoAux.setprecio(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetaNotaCreditoConstantesFunciones.LABEL_MONTO)) {
							existe=true;
							detanotacreditoAux.setmonto(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetaNotaCreditoConstantesFunciones.LABEL_COSTO)) {
							existe=true;
							detanotacreditoAux.setcosto(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetaNotaCreditoConstantesFunciones.LABEL_DESCUENTO)) {
							existe=true;
							detanotacreditoAux.setdescuento(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetaNotaCreditoConstantesFunciones.LABEL_DESCUENTO2)) {
							existe=true;
							detanotacreditoAux.setdescuento2(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetaNotaCreditoConstantesFunciones.LABEL_IMPUESTO)) {
							existe=true;
							detanotacreditoAux.setimpuesto(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetaNotaCreditoConstantesFunciones.LABEL_PORCENIVA)) {
							existe=true;
							detanotacreditoAux.setporcen_iva(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetaNotaCreditoConstantesFunciones.LABEL_PORCENDESCUEN)) {
							existe=true;
							detanotacreditoAux.setporcen_descuen(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetaNotaCreditoConstantesFunciones.LABEL_PORCENICE)) {
							existe=true;
							detanotacreditoAux.setporcen_ice(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetaNotaCreditoConstantesFunciones.LABEL_SUBTOTAL)) {
							existe=true;
							detanotacreditoAux.setsub_total(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetaNotaCreditoConstantesFunciones.LABEL_TOTAL)) {
							existe=true;
							detanotacreditoAux.settotal(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetaNotaCreditoConstantesFunciones.LABEL_FECHAEMISION)) {
							existe=true;
							detanotacreditoAux.setfecha_emision(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetaNotaCreditoConstantesFunciones.LABEL_CODIGOLOTE)) {
							existe=true;
							detanotacreditoAux.setcodigo_lote(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(DetaNotaCreditoConstantesFunciones.LABEL_NUMEROCAJA)) {
							existe=true;
							detanotacreditoAux.setnumero_caja(this.sValorCampoGeneral);
						}
				}
			}
								
			if(existe) {
				this.inicializarActualizarBindingTablaDetaNotaCredito(false);
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jComboBoxTiposAccionesDetaNotaCreditoActionListener(ActionEvent evt,Boolean esParaAccionDesdeFormulario) throws Exception {    				
		Boolean conSplash=true;
		
		try {							
		
			this.inicializarActualizarBindingDetaNotaCredito(false,false);
			
			Reporte reporte=new Reporte();
			
			this.esParaAccionDesdeFormularioDetaNotaCredito=esParaAccionDesdeFormulario;
			
			if(!esParaAccionDesdeFormulario) {
				
				reporte=(Reporte)this.jComboBoxTiposAccionesDetaNotaCredito.getSelectedItem();
				
			} else {
				reporte=(Reporte)this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxTiposAccionesFormularioDetaNotaCredito.getSelectedItem();
			}
			String sTipoAccionLocal=this.sTipoAccion;
			
			if(!esParaAccionDesdeFormulario) {
				sTipoAccionLocal=this.sTipoAccion;
			} else {
				sTipoAccionLocal=this.sTipoAccionFormulario;
			}
			
			if(sTipoAccionLocal.equals("GENERAR REPORTE")) {//reporte.getsCodigo().equals("GENERAR REPORTE")) {
				if(this.isPermisoReporteDetaNotaCredito) {				
					conSplash=true;//false;										
					
					//this.startProcessDetaNotaCredito(conSplash);
				
					this.generarReporteDetaNotaCreditosSeleccionados();
				} else {
					JOptionPane.showMessageDialog(this,"NO TIENE PERMISO PARA GENERAR REPORTES","REPORTE",JOptionPane.ERROR_MESSAGE);					
				}
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesDetaNotaCredito.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxTiposAccionesFormularioDetaNotaCredito.setSelectedIndex(0);					
				}
			} else if(sTipoAccionLocal.equals("GENERAR REPORTE DINAMICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.mostrarReporteDinamicoDetaNotaCreditosSeleccionados();
				//this.jComboBoxTiposAccionesDetaNotaCredito.setSelectedIndex(0);					
			}  else if(sTipoAccionLocal.equals("GENERAR_REPORTE_GROUP_GENERICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.generarReporteGroupGenericoDetaNotaCreditosSeleccionados(false);
				//this.jComboBoxTiposAccionesDetaNotaCredito.setSelectedIndex(0);					
			} else if(sTipoAccionLocal.equals("GENERAR_REPORTE_TOTALES_GROUP_GENERICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.generarReporteGroupGenericoDetaNotaCreditosSeleccionados(true);
				//this.jComboBoxTiposAccionesDetaNotaCredito.setSelectedIndex(0);					
			} else if(sTipoAccionLocal.equals("EXPORTAR_DATOS")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//this.startProcessDetaNotaCredito();
				
				this.exportarDetaNotaCreditosSeleccionados();
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesDetaNotaCredito.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxTiposAccionesFormularioDetaNotaCredito.setSelectedIndex(0);					
				}					
			} else if(sTipoAccionLocal.equals("IMPORTAR_DATOS")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				this.mostrarImportacionDetaNotaCreditos();
				//this.importarDetaNotaCreditos();
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesDetaNotaCredito.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxTiposAccionesFormularioDetaNotaCredito.setSelectedIndex(0);					
				}					
			} else if(sTipoAccionLocal.equals("EXPORTAR_DATOS_EXCEL")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//this.startProcessDetaNotaCredito();
				//SE EXPORTA SEGUN TIPO ARCHIVO SELECCIONADO
				//this.exportarExcelDetaNotaCreditosSeleccionados();
				//this.jComboBoxTiposAccionesDetaNotaCredito.setSelectedIndex(0);					
			}  else if(sTipoAccionLocal.equals("RECARGAR_FK")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {								
				if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE RECARGAR REFERENCIAS ?", "MANTENIMIENTO DE Deta Nota Credito", JOptionPane.OK_CANCEL_OPTION) == 0) {
				
				//this.startProcessDetaNotaCredito();
				
					if(!esParaAccionDesdeFormulario || (esParaAccionDesdeFormulario && this.isEsNuevoDetaNotaCredito)) {
						this.esRecargarFks=true;
						this.cargarCombosForeignKeyDetaNotaCredito(false,false,false);
						this.esRecargarFks=false;
						
						JOptionPane.showMessageDialog(this,"PROCESO EJECUTADO CORRECTAMENTE","MANTENIMIENTO DE Deta Nota Credito",JOptionPane.INFORMATION_MESSAGE);
					} else {
						JOptionPane.showMessageDialog(this,"ESTE PROCESO SOLO FUNCIONA AL INGRESAR UN NUEVO ELEMENTO","MANTENIMIENTO",JOptionPane.ERROR_MESSAGE);	
					}
					
					
				}
				
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesDetaNotaCredito.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxTiposAccionesFormularioDetaNotaCredito.setSelectedIndex(0);					
				}	
			} 			
			else if(DetaNotaCreditoBeanSwingJInternalFrame.EsProcesoReporte(reporte.getsCodigo())){
				if(this.isPermisoReporteDetaNotaCredito) {				
					if(this.tieneElementosSeleccionados()) {
						this.quitarFilaTotales();
						
						conSplash=false;
						
						//this.startProcessDetaNotaCredito(conSplash);
					
						//this.actualizarParametrosGeneralDetaNotaCredito();
						
						this.generarReporteProcesoAccionDetaNotaCreditosSeleccionados(reporte.getsCodigo());
						
						if(!esParaAccionDesdeFormulario) {
							
							this.jComboBoxTiposAccionesDetaNotaCredito.setSelectedIndex(0);					
							
						} else {
							this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxTiposAccionesFormularioDetaNotaCredito.setSelectedIndex(0);					
						}
					} else {
						JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO TIENE PERMISO PARA GENERAR REPORTES","REPORTE",JOptionPane.ERROR_MESSAGE);					
				}
			} 
			else if(DetaNotaCreditoBeanSwingJInternalFrameAdditional.EsProcesoAccionNormal(reporte.getsCodigo())){
				if(this.tieneElementosSeleccionados()) {
					this.quitarFilaTotales();
					
					if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE PROCESAR "+reporte.getsDescripcion()+" EN PROCESO Deta Nota CreditoS SELECCIONADOS?", "MANTENIMIENTO DE Deta Nota Credito", JOptionPane.OK_CANCEL_OPTION) == 0) {
						//this.startProcessDetaNotaCredito();
				
						this.actualizarParametrosGeneralDetaNotaCredito();
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {						
							this.detanotacreditoReturnGeneral=detanotacreditoLogic.procesarAccionDetaNotaCreditosWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,sTipoAccionLocal,this.detanotacreditoLogic.getDetaNotaCreditos(),this.detanotacreditoParameterGeneral);
						
						} else if(Constantes.ISUSAEJBREMOTE) {
						
						} else if(Constantes.ISUSAEJBHOME) {
						}
						//ARCHITECTURE
						
						this.procesarDetaNotaCreditoReturnGeneral();
					
					if(!esParaAccionDesdeFormulario) {
						
						this.jComboBoxTiposAccionesDetaNotaCredito.setSelectedIndex(0);					
						
					} else {
						this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxTiposAccionesFormularioDetaNotaCredito.setSelectedIndex(0);					
					}
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
				}				
			} 
			else {
				if(this.tieneElementosSeleccionados()) {
					this.quitarFilaTotales();
					
					this.actualizarParametrosGeneralDetaNotaCredito();
					
					DetaNotaCreditoBeanSwingJInternalFrameAdditional.ProcesarAccion(reporte.getsCodigo(),reporte.getsDescripcion(),this);
					
					this.procesarDetaNotaCreditoReturnGeneral();
					
					if(!esParaAccionDesdeFormulario) {
						
						this.jComboBoxTiposAccionesDetaNotaCredito.setSelectedIndex(0);					
						
					} else {
						this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxTiposAccionesFormularioDetaNotaCredito.setSelectedIndex(0);					
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
				}
			}
		} catch(Exception e) {
			this.esRecargarFks=false;
			
			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);
		
		}  finally {
      		//this.finishProcessDetaNotaCredito(conSplash);
      	}
	}
	
	public void jComboBoxTiposRelacionesDetaNotaCreditoActionListener(ActionEvent evt) throws Exception {    				
		Boolean conSplash=true;
		
		try {			
			this.startProcessDetaNotaCredito();
			
			if(this.jInternalFrameDetalleFormDetaNotaCredito==null) { //if(!this.conCargarFormDetalle) {			
				this.inicializarFormDetalle();
			}
			
			ArrayList<DetaNotaCredito> detanotacreditosSeleccionados=new ArrayList<DetaNotaCredito>();		
			DetaNotaCredito detanotacredito=new DetaNotaCredito();
			
			int rowIndex=-1;//CON ESTO SE DESHABILITA SELECCION POR INDICE
			
			this.inicializarActualizarBindingDetaNotaCredito(false,false);
			
			Reporte reporte=new Reporte();
			
			
			reporte=(Reporte)this.jComboBoxTiposRelacionesDetaNotaCredito.getSelectedItem();
			
			
			
			
			detanotacreditosSeleccionados=this.getDetaNotaCreditosSeleccionados(true);
			//this.sTipoAccion;
			
			if(detanotacreditosSeleccionados.size()==1) {
				for(DetaNotaCredito detanotacreditoAux:detanotacreditosSeleccionados) {
					detanotacredito=detanotacreditoAux;
				}
				
				if(this.sTipoAccion.equals("NONE")) {
				
				}
				
			} else {
				JOptionPane.showMessageDialog(this,"SELECCIONE SOLO UN REGISTRO","RELACIONES",JOptionPane.ERROR_MESSAGE);
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);
		
		}  finally {
			this.finishProcessDetaNotaCredito();
			
      		//this.finishProcessDetaNotaCredito(conSplash);
      	}
	}
			
	public static Boolean EsProcesoReporte(String sTipoProceso) throws Exception {
		Boolean esProcesoAccionRepoorte=false;

		if(sTipoProceso.contains("REPORTE_")) {
			 esProcesoAccionRepoorte=true;
		}

		return esProcesoAccionRepoorte;
	}
	
	public void procesarDetaNotaCreditoReturnGeneral() throws Exception {
		if(this.detanotacreditoReturnGeneral.getConRetornoEstaProcesado()) {
			JOptionPane.showMessageDialog(this,this.detanotacreditoReturnGeneral.getsMensajeProceso(),"PROCESO",JOptionPane.INFORMATION_MESSAGE);
		}
		
		if(this.detanotacreditoReturnGeneral.getConMostrarMensaje()) {
			JOptionPane.showMessageDialog(this,this.detanotacreditoReturnGeneral.getsMensajeProceso(),"PROCESO",FuncionesSwing.getColorSelectedBackground(this.detanotacreditoReturnGeneral.getsTipoMensaje()));
		}
		
		if(this.detanotacreditoReturnGeneral.getConRecargarInformacion()) {
			this.procesarBusqueda(this.sAccionBusqueda);
			
			this.inicializarActualizarBindingDetaNotaCredito(false);
		}
		
		if(this.detanotacreditoReturnGeneral.getConRetornoLista() || this.detanotacreditoReturnGeneral.getConRetornoObjeto()) {
			if(this.detanotacreditoReturnGeneral.getConRetornoLista()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.detanotacreditoLogic.setDetaNotaCreditos(this.detanotacreditoReturnGeneral.getDetaNotaCreditos());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
			
			if(this.detanotacreditoReturnGeneral.getConRetornoObjeto()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.detanotacreditoLogic.setDetaNotaCredito(this.detanotacreditoReturnGeneral.getDetaNotaCredito());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
			
			this.inicializarActualizarBindingDetaNotaCredito(false);
		}
	}
	
	public void actualizarParametrosGeneralDetaNotaCredito() throws Exception {
		
		
	}
	
	public ArrayList<DetaNotaCredito> getDetaNotaCreditosSeleccionados(Boolean conSeleccionarTodosAutomatico) throws Exception {
		ArrayList<DetaNotaCredito> detanotacreditosSeleccionados=new ArrayList<DetaNotaCredito>();
		Boolean existe=false;
		
		if(!this.esParaAccionDesdeFormularioDetaNotaCredito) {
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				
				for(DetaNotaCredito detanotacreditoAux:detanotacreditoLogic.getDetaNotaCreditos()) {
					if(detanotacreditoAux.getIsSelected()) {
						detanotacreditosSeleccionados.add(detanotacreditoAux);				
					}
				}
				
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(DetaNotaCredito detanotacreditoAux:this.detanotacreditos) {
					if(detanotacreditoAux.getIsSelected()) {
						detanotacreditosSeleccionados.add(detanotacreditoAux);				
					}
				}
			}
			
			if(detanotacreditosSeleccionados.size()>0) {
				existe=true;
			}
			
			//SI NO ESTA NINGUNO SELECCIONADO SE SELECCIONA TODOS
			if(!existe) {
				if(conSeleccionarTodosAutomatico) {
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						detanotacreditosSeleccionados.addAll(this.detanotacreditoLogic.getDetaNotaCreditos());
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						detanotacreditosSeleccionados.addAll(this.detanotacreditos);				
					}
				}
			}
		} else {
			detanotacreditosSeleccionados.add(this.detanotacredito);
		}
		
		return detanotacreditosSeleccionados;
	}
	
	public void actualizarVariablesTipoReporte(Boolean esReporteNormal,Boolean esReporteDinamico,Boolean esReporteAccionProceso,String sPath) {
		if(esReporteNormal) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=false;
			this.sPathReporteDinamico="";
			this.esReporteAccionProceso=false;
			
		} else if(esReporteAccionProceso) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=false;
			this.sPathReporteDinamico="";
			this.esReporteAccionProceso=true;
			
		} else if(esReporteDinamico) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=true;
			this.esReporteAccionProceso=false;
			this.sPathReporteDinamico=sPath.replace(".jrxml",".jasper");			
		}
	}
	
	public void generarReporteDetaNotaCreditosSeleccionados() throws Exception {
		Boolean existe=false;
		
		if(this.sTipoReporte.equals("NORMAL") || this.sTipoReporte.equals("FORMULARIO")) {
			existe=true;								
			this.generarReporteNormalDetaNotaCreditosSeleccionados();
			
		} else if(this.sTipoReporte.equals("DINAMICO")) {
			existe=true;
			this.mostrarReporteDinamicoDetaNotaCreditosSeleccionados();
			
		} else if(this.sTipoReporte.equals("GRUPO_GENERICO")) {
			existe=true;
			this.generarReporteGroupGenericoDetaNotaCreditosSeleccionados(false);
			
		} else if(this.sTipoReporte.equals("TOTALES_GRUPO_GENERICO")) {
			existe=true;
			this.generarReporteGroupGenericoDetaNotaCreditosSeleccionados(true);
		}
		
		if(!existe) {
			JOptionPane.showMessageDialog(this,"SELECCIONE UN TIPO DE REPORTE VALIDO","REPORTE DE Deta Nota Credito",JOptionPane.ERROR_MESSAGE);
		}
	}
	
	public void generarReporteRelacionesDetaNotaCreditosSeleccionados() throws Exception {
		ArrayList<DetaNotaCredito> detanotacreditosSeleccionados=new ArrayList<DetaNotaCredito>();		
		
		detanotacreditosSeleccionados=this.getDetaNotaCreditosSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
					
		//this.sTipoReporteExtra="MasterRelaciones";
		
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		
		this.generarReporteDetaNotaCreditos("Todos",detanotacreditosSeleccionados);
		
	}	
	
	public void generarReporteNormalDetaNotaCreditosSeleccionados() throws Exception {
		ArrayList<DetaNotaCredito> detanotacreditosSeleccionados=new ArrayList<DetaNotaCredito>();		
		
		detanotacreditosSeleccionados=this.getDetaNotaCreditosSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
								
		if(this.sTipoReporte.equals("FORMULARIO")) {
			this.sTipoReporteExtra="Vertical";					
		}
		
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		this.generarReporteDetaNotaCreditos("Todos",detanotacreditosSeleccionados);
	}		
	
	public void generarReporteProcesoAccionDetaNotaCreditosSeleccionados(String sProcesoReporte) throws Exception {
		ArrayList<DetaNotaCredito> detanotacreditosSeleccionados=new ArrayList<DetaNotaCredito>();
		
		detanotacreditosSeleccionados=this.getDetaNotaCreditosSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(false,false,true,"");
		
		/*
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		this.sTipoReporteExtra=sProcesoReporte.toLowerCase();
		
		this.esReporteAccionProceso=true;
		this.generarReporteDetaNotaCreditos("Todos",detanotacreditosSeleccionados);
		this.esReporteAccionProceso=false;
	}
	
	
	public void mostrarReporteDinamicoDetaNotaCreditosSeleccionados() throws Exception {
		ArrayList<DetaNotaCredito> detanotacreditosSeleccionados=new ArrayList<DetaNotaCredito>();		
		
		
		this.abrirInicializarFrameReporteDinamicoDetaNotaCredito();
		
		
		detanotacreditosSeleccionados=this.getDetaNotaCreditosSeleccionados(true);
		
		this.sTipoReporteExtra="";
		//this.actualizarVariablesTipoReporte(true,false,false,"");
		
		
		this.abrirFrameReporteDinamicoDetaNotaCredito();
		
		
		//this.generarReporteDetaNotaCreditos("Todos",detanotacreditosSeleccionados ,detanotacreditoImplementable,detanotacreditoImplementableHome);
	}
	
	public void mostrarImportacionDetaNotaCreditos() throws Exception {
		//this.sTipoReporteExtra="";
		//this.actualizarVariablesTipoReporte(true,false,false,"");
		
		
		this.abrirInicializarFrameImportacionDetaNotaCredito();
		
		this.abrirFrameImportacionDetaNotaCredito();		
		
			
		//this.generarReporteDetaNotaCreditos("Todos",detanotacreditosSeleccionados ,detanotacreditoImplementable,detanotacreditoImplementableHome);
	}
	
	public void importarDetaNotaCreditos() throws Exception {		
	
	}
	
	public void exportarDetaNotaCreditosSeleccionados() throws Exception {
		Boolean existe=false;
		
		if(this.sTipoArchivoReporte.equals("EXCEL")) {
			existe=true;
			this.exportarExcelDetaNotaCreditosSeleccionados();
			
		} else if(this.sTipoArchivoReporte.equals("TEXTO")) {
			existe=true;
			this.exportarTextoDetaNotaCreditosSeleccionados();
		
		} else if(this.sTipoArchivoReporte.equals("XML")) {
			existe=true;
			this.exportarXmlDetaNotaCreditosSeleccionados();
		} 
		
		if(!existe) {
			JOptionPane.showMessageDialog(this,"SELECCIONE UN TIPO DE ARCHIVO VALIDO","EXPORTACION DE Deta Nota Credito",JOptionPane.ERROR_MESSAGE);
		}
	}
	
	public void exportarTextoDetaNotaCreditosSeleccionados() throws Exception {
		ArrayList<DetaNotaCredito> detanotacreditosSeleccionados=new ArrayList<DetaNotaCredito>();		
		
		detanotacreditosSeleccionados=this.getDetaNotaCreditosSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"detanotacredito."+"txt";//Funciones2.getTipoExtensionArchivoExportar(this.parametroGeneralUsuario);
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		BufferedWriter bufferedWriter = null;
		FileWriter fileWriter=null;
		
		fileWriter=new FileWriter(sPath);
		
		bufferedWriter = new BufferedWriter(fileWriter);
		
		try {
			if(conCabecera) {
				sFilaCabecera=this.getFilaCabeceraExportarDetaNotaCredito(sDelimiter);
				
				bufferedWriter.write(sFilaCabecera);
			}				
			
			for(DetaNotaCredito detanotacreditoAux:detanotacreditosSeleccionados) {
				sFilaDatos=this.getFilaDatosExportarDetaNotaCredito(detanotacreditoAux,sDelimiter);
				
				bufferedWriter.write(sFilaDatos);
				
				//detanotacreditoAux.setsDetalleGeneralEntityReporte(detanotacreditoAux.toString());			
			}
			
			bufferedWriter.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.detanotacreditoSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Deta Nota Credito",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {
       		if (bufferedWriter != null) {
				bufferedWriter.close();
			}
		}
	}
	
	public String getFilaCabeceraExportarDetaNotaCredito(String sDelimiter) {
		String sFilaCabecera="";
		
		
		sFilaCabecera+=DetaNotaCreditoConstantesFunciones.LABEL_ID;

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
			sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetaNotaCreditoConstantesFunciones.LABEL_VERSIONROW;
		}

		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetaNotaCreditoConstantesFunciones.LABEL_IDEMPRESA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetaNotaCreditoConstantesFunciones.LABEL_IDSUCURSAL;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetaNotaCreditoConstantesFunciones.LABEL_IDEJERCICIO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetaNotaCreditoConstantesFunciones.LABEL_IDPERIODO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetaNotaCreditoConstantesFunciones.LABEL_IDANIO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetaNotaCreditoConstantesFunciones.LABEL_IDMES;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetaNotaCreditoConstantesFunciones.LABEL_IDNOTACREDITO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetaNotaCreditoConstantesFunciones.LABEL_IDBODEGA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetaNotaCreditoConstantesFunciones.LABEL_IDPRODUCTO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetaNotaCreditoConstantesFunciones.LABEL_IDUNIDAD;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetaNotaCreditoConstantesFunciones.LABEL_IDTIPODETANOTACREDITO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetaNotaCreditoConstantesFunciones.LABEL_IDTIPODEVOLUCIONEMPRESA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetaNotaCreditoConstantesFunciones.LABEL_DESCRIPCION;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetaNotaCreditoConstantesFunciones.LABEL_CANTIDAD;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetaNotaCreditoConstantesFunciones.LABEL_PRECIO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetaNotaCreditoConstantesFunciones.LABEL_MONTO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetaNotaCreditoConstantesFunciones.LABEL_COSTO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetaNotaCreditoConstantesFunciones.LABEL_DESCUENTO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetaNotaCreditoConstantesFunciones.LABEL_DESCUENTO2;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetaNotaCreditoConstantesFunciones.LABEL_IMPUESTO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetaNotaCreditoConstantesFunciones.LABEL_PORCENIVA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetaNotaCreditoConstantesFunciones.LABEL_PORCENDESCUEN;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetaNotaCreditoConstantesFunciones.LABEL_PORCENICE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetaNotaCreditoConstantesFunciones.LABEL_SUBTOTAL;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetaNotaCreditoConstantesFunciones.LABEL_TOTAL;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetaNotaCreditoConstantesFunciones.LABEL_IDCENTROCOSTO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetaNotaCreditoConstantesFunciones.LABEL_IDEMPAQUE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetaNotaCreditoConstantesFunciones.LABEL_INCLUYEIMPUESTO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetaNotaCreditoConstantesFunciones.LABEL_FECHAEMISION;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetaNotaCreditoConstantesFunciones.LABEL_CODIGOLOTE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetaNotaCreditoConstantesFunciones.LABEL_NUMEROCAJA;
		
		return sFilaCabecera;
	}
	
	public String getFilaDatosExportarDetaNotaCredito(DetaNotaCredito detanotacredito,String sDelimiter) {
		String sFilaDatos="";
		
		sFilaDatos+="\r\n";
		
		
		sFilaDatos+=detanotacredito.getId().toString();

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
			sFilaDatos+=sDelimiter;
		sFilaDatos+=detanotacredito.getVersionRow().toString();
		}

		sFilaDatos+=sDelimiter;
		sFilaDatos+=detanotacredito.getempresa_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detanotacredito.getsucursal_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detanotacredito.getejercicio_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detanotacredito.getperiodo_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detanotacredito.getanio_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detanotacredito.getmes_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detanotacredito.getnotacredito_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detanotacredito.getbodega_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detanotacredito.getproducto_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detanotacredito.getunidad_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detanotacredito.gettipodetanotacredito_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detanotacredito.gettipodevolucionempresa_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detanotacredito.getdescripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detanotacredito.getcantidad().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detanotacredito.getprecio().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detanotacredito.getmonto().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detanotacredito.getcosto().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detanotacredito.getdescuento().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detanotacredito.getdescuento2().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detanotacredito.getimpuesto().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detanotacredito.getporcen_iva().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detanotacredito.getporcen_descuen().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detanotacredito.getporcen_ice().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detanotacredito.getsub_total().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detanotacredito.gettotal().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detanotacredito.getcentrocosto_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detanotacredito.getempaque_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detanotacredito.getincluye_impuesto().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detanotacredito.getfecha_emision().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detanotacredito.getcodigo_lote();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detanotacredito.getnumero_caja();
		
		return sFilaDatos;
	}
	
	//@SuppressWarnings("deprecation")
	public void exportarExcelDetaNotaCreditosSeleccionados() throws Exception {
		ArrayList<DetaNotaCredito> detanotacreditosSeleccionados=new ArrayList<DetaNotaCredito>();		
		
		detanotacreditosSeleccionados=this.getDetaNotaCreditosSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"detanotacredito.xls";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		FileOutputStream fileOutputStream=null;
		
		try {
			HSSFWorkbook workbook = new HSSFWorkbook();
			HSSFSheet sheet = workbook.createSheet("DetaNotaCreditos");
						
		    			
			Integer iRow=0;
			Integer iCell=0;
			
			HSSFRow row = sheet.createRow(iRow);
			HSSFCell cell = row.createCell(iCell);
			//cell.setCellValue("Blahblah");

			if(conCabecera) {
				this.getFilaCabeceraExportarExcelDetaNotaCredito(row);				
				iRow++;
			}				
			
			for(DetaNotaCredito detanotacreditoAux:detanotacreditosSeleccionados) {
				row = sheet.createRow(iRow);
				
				this.getFilaDatosExportarExcelDetaNotaCredito(detanotacreditoAux,row);
				
				iRow++;
			}
			
			
			fileOutputStream = new FileOutputStream(new File(sPath));
		    
			workbook.write(fileOutputStream);
			
			//fileOutputStream.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.detanotacreditoSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Deta Nota Credito",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			
       		if (fileOutputStream != null) {
				fileOutputStream.close();
			}			
		}
	}		
	
	public void exportarXmlDetaNotaCreditosSeleccionados() throws Exception {
		ArrayList<DetaNotaCredito> detanotacreditosSeleccionados=new ArrayList<DetaNotaCredito>();		
		
		detanotacreditosSeleccionados=this.getDetaNotaCreditosSeleccionados(true);
		
		//String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		//Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		//String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"detanotacredito.xml";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		DocumentBuilderFactory documentBuilderFactory=null;
		DocumentBuilder documentBuilder =null;
		
		try {
			documentBuilderFactory = DocumentBuilderFactory.newInstance();
			documentBuilder = documentBuilderFactory.newDocumentBuilder();
	
			Document document = documentBuilder.newDocument();
			Element elementRoot = document.createElement("detanotacreditos");
			
			document.appendChild(elementRoot);
		    			
												
			Element element = null;//document.createElement("detanotacredito");
			//elementRoot.appendChild(element);
		
			for(DetaNotaCredito detanotacreditoAux:detanotacreditosSeleccionados) {
				element = document.createElement("detanotacredito");
				elementRoot.appendChild(element);
			
				this.setFilaDatosExportarXmlDetaNotaCredito(detanotacreditoAux,document,element);
			}
			
			TransformerFactory transformerFactory = TransformerFactory.newInstance();
			Transformer transformer = transformerFactory.newTransformer();
			DOMSource domSource = new DOMSource(document);
			
			StreamResult streamResult = new StreamResult(new File(sPath));
	
			transformer.transform(domSource, streamResult);
						
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.detanotacreditoSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Deta Nota Credito",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			       				
		}
	}	
	
	//@SuppressWarnings("deprecation")
	public void getFilaCabeceraExportarExcelDetaNotaCredito(HSSFRow row) {
		Integer iColumn=0;
		
		
		HSSFCell cell =null;
		cell = row.createCell(iColumn++);cell.setCellValue(DetaNotaCreditoConstantesFunciones.LABEL_ID);

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
		cell = row.createCell(iColumn++);cell.setCellValue(DetaNotaCreditoConstantesFunciones.LABEL_VERSIONROW);
		}

		cell = row.createCell(iColumn++);cell.setCellValue(DetaNotaCreditoConstantesFunciones.LABEL_IDEMPRESA);
		cell = row.createCell(iColumn++);cell.setCellValue(DetaNotaCreditoConstantesFunciones.LABEL_IDSUCURSAL);
		cell = row.createCell(iColumn++);cell.setCellValue(DetaNotaCreditoConstantesFunciones.LABEL_IDEJERCICIO);
		cell = row.createCell(iColumn++);cell.setCellValue(DetaNotaCreditoConstantesFunciones.LABEL_IDPERIODO);
		cell = row.createCell(iColumn++);cell.setCellValue(DetaNotaCreditoConstantesFunciones.LABEL_IDANIO);
		cell = row.createCell(iColumn++);cell.setCellValue(DetaNotaCreditoConstantesFunciones.LABEL_IDMES);
		cell = row.createCell(iColumn++);cell.setCellValue(DetaNotaCreditoConstantesFunciones.LABEL_IDNOTACREDITO);
		cell = row.createCell(iColumn++);cell.setCellValue(DetaNotaCreditoConstantesFunciones.LABEL_IDBODEGA);
		cell = row.createCell(iColumn++);cell.setCellValue(DetaNotaCreditoConstantesFunciones.LABEL_IDPRODUCTO);
		cell = row.createCell(iColumn++);cell.setCellValue(DetaNotaCreditoConstantesFunciones.LABEL_IDUNIDAD);
		cell = row.createCell(iColumn++);cell.setCellValue(DetaNotaCreditoConstantesFunciones.LABEL_IDTIPODETANOTACREDITO);
		cell = row.createCell(iColumn++);cell.setCellValue(DetaNotaCreditoConstantesFunciones.LABEL_IDTIPODEVOLUCIONEMPRESA);
		cell = row.createCell(iColumn++);cell.setCellValue(DetaNotaCreditoConstantesFunciones.LABEL_DESCRIPCION);
		cell = row.createCell(iColumn++);cell.setCellValue(DetaNotaCreditoConstantesFunciones.LABEL_CANTIDAD);
		cell = row.createCell(iColumn++);cell.setCellValue(DetaNotaCreditoConstantesFunciones.LABEL_PRECIO);
		cell = row.createCell(iColumn++);cell.setCellValue(DetaNotaCreditoConstantesFunciones.LABEL_MONTO);
		cell = row.createCell(iColumn++);cell.setCellValue(DetaNotaCreditoConstantesFunciones.LABEL_COSTO);
		cell = row.createCell(iColumn++);cell.setCellValue(DetaNotaCreditoConstantesFunciones.LABEL_DESCUENTO);
		cell = row.createCell(iColumn++);cell.setCellValue(DetaNotaCreditoConstantesFunciones.LABEL_DESCUENTO2);
		cell = row.createCell(iColumn++);cell.setCellValue(DetaNotaCreditoConstantesFunciones.LABEL_IMPUESTO);
		cell = row.createCell(iColumn++);cell.setCellValue(DetaNotaCreditoConstantesFunciones.LABEL_PORCENIVA);
		cell = row.createCell(iColumn++);cell.setCellValue(DetaNotaCreditoConstantesFunciones.LABEL_PORCENDESCUEN);
		cell = row.createCell(iColumn++);cell.setCellValue(DetaNotaCreditoConstantesFunciones.LABEL_PORCENICE);
		cell = row.createCell(iColumn++);cell.setCellValue(DetaNotaCreditoConstantesFunciones.LABEL_SUBTOTAL);
		cell = row.createCell(iColumn++);cell.setCellValue(DetaNotaCreditoConstantesFunciones.LABEL_TOTAL);
		cell = row.createCell(iColumn++);cell.setCellValue(DetaNotaCreditoConstantesFunciones.LABEL_IDCENTROCOSTO);
		cell = row.createCell(iColumn++);cell.setCellValue(DetaNotaCreditoConstantesFunciones.LABEL_IDEMPAQUE);
		cell = row.createCell(iColumn++);cell.setCellValue(DetaNotaCreditoConstantesFunciones.LABEL_INCLUYEIMPUESTO);
		cell = row.createCell(iColumn++);cell.setCellValue(DetaNotaCreditoConstantesFunciones.LABEL_FECHAEMISION);
		cell = row.createCell(iColumn++);cell.setCellValue(DetaNotaCreditoConstantesFunciones.LABEL_CODIGOLOTE);
		cell = row.createCell(iColumn++);cell.setCellValue(DetaNotaCreditoConstantesFunciones.LABEL_NUMEROCAJA);
	}
	
	//@SuppressWarnings("deprecation")
	public void getFilaDatosExportarExcelDetaNotaCredito(DetaNotaCredito detanotacredito,HSSFRow row) {
		Integer iColumn=0;
		
		
		HSSFCell cell =null;
		cell = row.createCell(iColumn++);cell.setCellValue(detanotacredito.getId());
		cell = row.createCell(iColumn++);cell.setCellValue(detanotacredito.getempresa_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(detanotacredito.getsucursal_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(detanotacredito.getejercicio_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(detanotacredito.getperiodo_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(detanotacredito.getanio_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(detanotacredito.getmes_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(detanotacredito.getnotacredito_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(detanotacredito.getbodega_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(detanotacredito.getproducto_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(detanotacredito.getunidad_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(detanotacredito.gettipodetanotacredito_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(detanotacredito.gettipodevolucionempresa_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(detanotacredito.getdescripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(detanotacredito.getcantidad());
		cell = row.createCell(iColumn++);cell.setCellValue(detanotacredito.getprecio());
		cell = row.createCell(iColumn++);cell.setCellValue(detanotacredito.getmonto());
		cell = row.createCell(iColumn++);cell.setCellValue(detanotacredito.getcosto());
		cell = row.createCell(iColumn++);cell.setCellValue(detanotacredito.getdescuento());
		cell = row.createCell(iColumn++);cell.setCellValue(detanotacredito.getdescuento2());
		cell = row.createCell(iColumn++);cell.setCellValue(detanotacredito.getimpuesto());
		cell = row.createCell(iColumn++);cell.setCellValue(detanotacredito.getporcen_iva());
		cell = row.createCell(iColumn++);cell.setCellValue(detanotacredito.getporcen_descuen());
		cell = row.createCell(iColumn++);cell.setCellValue(detanotacredito.getporcen_ice());
		cell = row.createCell(iColumn++);cell.setCellValue(detanotacredito.getsub_total());
		cell = row.createCell(iColumn++);cell.setCellValue(detanotacredito.gettotal());
		cell = row.createCell(iColumn++);cell.setCellValue(detanotacredito.getcentrocosto_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(detanotacredito.getempaque_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(detanotacredito.getincluye_impuesto());
		cell = row.createCell(iColumn++);cell.setCellValue(detanotacredito.getfecha_emision());
		cell = row.createCell(iColumn++);cell.setCellValue(detanotacredito.getcodigo_lote());
		cell = row.createCell(iColumn++);cell.setCellValue(detanotacredito.getnumero_caja());				
	}
	
	public void setFilaDatosExportarXmlDetaNotaCredito(DetaNotaCredito detanotacredito,Document document,Element element) {
		/*
		Element lastname = document.createElement("lastname");
		lastname.appendChild(document.createTextNode("mook kim"));
		element.appendChild(lastname);
		*/
		

		Element elementId = document.createElement(DetaNotaCreditoConstantesFunciones.ID);
		elementId.appendChild(document.createTextNode(detanotacredito.getId().toString().trim()));
		element.appendChild(elementId);

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){

		Element elementVersionRow = document.createElement(DetaNotaCreditoConstantesFunciones.VERSIONROW);
		elementVersionRow.appendChild(document.createTextNode(detanotacredito.getVersionRow().toString().trim()));
		element.appendChild(elementVersionRow);
		}


		Element elementempresa_descripcion = document.createElement(DetaNotaCreditoConstantesFunciones.IDEMPRESA);
		elementempresa_descripcion.appendChild(document.createTextNode(detanotacredito.getempresa_descripcion()));
		element.appendChild(elementempresa_descripcion);

		Element elementsucursal_descripcion = document.createElement(DetaNotaCreditoConstantesFunciones.IDSUCURSAL);
		elementsucursal_descripcion.appendChild(document.createTextNode(detanotacredito.getsucursal_descripcion()));
		element.appendChild(elementsucursal_descripcion);

		Element elementejercicio_descripcion = document.createElement(DetaNotaCreditoConstantesFunciones.IDEJERCICIO);
		elementejercicio_descripcion.appendChild(document.createTextNode(detanotacredito.getejercicio_descripcion()));
		element.appendChild(elementejercicio_descripcion);

		Element elementperiodo_descripcion = document.createElement(DetaNotaCreditoConstantesFunciones.IDPERIODO);
		elementperiodo_descripcion.appendChild(document.createTextNode(detanotacredito.getperiodo_descripcion()));
		element.appendChild(elementperiodo_descripcion);

		Element elementanio_descripcion = document.createElement(DetaNotaCreditoConstantesFunciones.IDANIO);
		elementanio_descripcion.appendChild(document.createTextNode(detanotacredito.getanio_descripcion()));
		element.appendChild(elementanio_descripcion);

		Element elementmes_descripcion = document.createElement(DetaNotaCreditoConstantesFunciones.IDMES);
		elementmes_descripcion.appendChild(document.createTextNode(detanotacredito.getmes_descripcion()));
		element.appendChild(elementmes_descripcion);

		Element elementnotacredito_descripcion = document.createElement(DetaNotaCreditoConstantesFunciones.IDNOTACREDITO);
		elementnotacredito_descripcion.appendChild(document.createTextNode(detanotacredito.getnotacredito_descripcion()));
		element.appendChild(elementnotacredito_descripcion);

		Element elementbodega_descripcion = document.createElement(DetaNotaCreditoConstantesFunciones.IDBODEGA);
		elementbodega_descripcion.appendChild(document.createTextNode(detanotacredito.getbodega_descripcion()));
		element.appendChild(elementbodega_descripcion);

		Element elementproducto_descripcion = document.createElement(DetaNotaCreditoConstantesFunciones.IDPRODUCTO);
		elementproducto_descripcion.appendChild(document.createTextNode(detanotacredito.getproducto_descripcion()));
		element.appendChild(elementproducto_descripcion);

		Element elementunidad_descripcion = document.createElement(DetaNotaCreditoConstantesFunciones.IDUNIDAD);
		elementunidad_descripcion.appendChild(document.createTextNode(detanotacredito.getunidad_descripcion()));
		element.appendChild(elementunidad_descripcion);

		Element elementtipodetanotacredito_descripcion = document.createElement(DetaNotaCreditoConstantesFunciones.IDTIPODETANOTACREDITO);
		elementtipodetanotacredito_descripcion.appendChild(document.createTextNode(detanotacredito.gettipodetanotacredito_descripcion()));
		element.appendChild(elementtipodetanotacredito_descripcion);

		Element elementtipodevolucionempresa_descripcion = document.createElement(DetaNotaCreditoConstantesFunciones.IDTIPODEVOLUCIONEMPRESA);
		elementtipodevolucionempresa_descripcion.appendChild(document.createTextNode(detanotacredito.gettipodevolucionempresa_descripcion()));
		element.appendChild(elementtipodevolucionempresa_descripcion);

		Element elementdescripcion = document.createElement(DetaNotaCreditoConstantesFunciones.DESCRIPCION);
		elementdescripcion.appendChild(document.createTextNode(detanotacredito.getdescripcion().trim()));
		element.appendChild(elementdescripcion);

		Element elementcantidad = document.createElement(DetaNotaCreditoConstantesFunciones.CANTIDAD);
		elementcantidad.appendChild(document.createTextNode(detanotacredito.getcantidad().toString().trim()));
		element.appendChild(elementcantidad);

		Element elementprecio = document.createElement(DetaNotaCreditoConstantesFunciones.PRECIO);
		elementprecio.appendChild(document.createTextNode(detanotacredito.getprecio().toString().trim()));
		element.appendChild(elementprecio);

		Element elementmonto = document.createElement(DetaNotaCreditoConstantesFunciones.MONTO);
		elementmonto.appendChild(document.createTextNode(detanotacredito.getmonto().toString().trim()));
		element.appendChild(elementmonto);

		Element elementcosto = document.createElement(DetaNotaCreditoConstantesFunciones.COSTO);
		elementcosto.appendChild(document.createTextNode(detanotacredito.getcosto().toString().trim()));
		element.appendChild(elementcosto);

		Element elementdescuento = document.createElement(DetaNotaCreditoConstantesFunciones.DESCUENTO);
		elementdescuento.appendChild(document.createTextNode(detanotacredito.getdescuento().toString().trim()));
		element.appendChild(elementdescuento);

		Element elementdescuento2 = document.createElement(DetaNotaCreditoConstantesFunciones.DESCUENTO2);
		elementdescuento2.appendChild(document.createTextNode(detanotacredito.getdescuento2().toString().trim()));
		element.appendChild(elementdescuento2);

		Element elementimpuesto = document.createElement(DetaNotaCreditoConstantesFunciones.IMPUESTO);
		elementimpuesto.appendChild(document.createTextNode(detanotacredito.getimpuesto().toString().trim()));
		element.appendChild(elementimpuesto);

		Element elementporcen_iva = document.createElement(DetaNotaCreditoConstantesFunciones.PORCENIVA);
		elementporcen_iva.appendChild(document.createTextNode(detanotacredito.getporcen_iva().toString().trim()));
		element.appendChild(elementporcen_iva);

		Element elementporcen_descuen = document.createElement(DetaNotaCreditoConstantesFunciones.PORCENDESCUEN);
		elementporcen_descuen.appendChild(document.createTextNode(detanotacredito.getporcen_descuen().toString().trim()));
		element.appendChild(elementporcen_descuen);

		Element elementporcen_ice = document.createElement(DetaNotaCreditoConstantesFunciones.PORCENICE);
		elementporcen_ice.appendChild(document.createTextNode(detanotacredito.getporcen_ice().toString().trim()));
		element.appendChild(elementporcen_ice);

		Element elementsub_total = document.createElement(DetaNotaCreditoConstantesFunciones.SUBTOTAL);
		elementsub_total.appendChild(document.createTextNode(detanotacredito.getsub_total().toString().trim()));
		element.appendChild(elementsub_total);

		Element elementtotal = document.createElement(DetaNotaCreditoConstantesFunciones.TOTAL);
		elementtotal.appendChild(document.createTextNode(detanotacredito.gettotal().toString().trim()));
		element.appendChild(elementtotal);

		Element elementcentrocosto_descripcion = document.createElement(DetaNotaCreditoConstantesFunciones.IDCENTROCOSTO);
		elementcentrocosto_descripcion.appendChild(document.createTextNode(detanotacredito.getcentrocosto_descripcion()));
		element.appendChild(elementcentrocosto_descripcion);

		Element elementempaque_descripcion = document.createElement(DetaNotaCreditoConstantesFunciones.IDEMPAQUE);
		elementempaque_descripcion.appendChild(document.createTextNode(detanotacredito.getempaque_descripcion()));
		element.appendChild(elementempaque_descripcion);

		Element elementincluye_impuesto = document.createElement(DetaNotaCreditoConstantesFunciones.INCLUYEIMPUESTO);
		elementincluye_impuesto.appendChild(document.createTextNode(detanotacredito.getincluye_impuesto().toString().trim()));
		element.appendChild(elementincluye_impuesto);

		Element elementfecha_emision = document.createElement(DetaNotaCreditoConstantesFunciones.FECHAEMISION);
		elementfecha_emision.appendChild(document.createTextNode(detanotacredito.getfecha_emision().toString().trim()));
		element.appendChild(elementfecha_emision);

		Element elementcodigo_lote = document.createElement(DetaNotaCreditoConstantesFunciones.CODIGOLOTE);
		elementcodigo_lote.appendChild(document.createTextNode(detanotacredito.getcodigo_lote().trim()));
		element.appendChild(elementcodigo_lote);

		Element elementnumero_caja = document.createElement(DetaNotaCreditoConstantesFunciones.NUMEROCAJA);
		elementnumero_caja.appendChild(document.createTextNode(detanotacredito.getnumero_caja().trim()));
		element.appendChild(elementnumero_caja);
	}
	
	public void generarReporteGroupGenericoDetaNotaCreditosSeleccionados(Boolean soloTotales) throws Exception {
		ArrayList<DetaNotaCredito> detanotacreditosSeleccionados=new ArrayList<DetaNotaCredito>();
		
		detanotacreditosSeleccionados=this.getDetaNotaCreditosSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
		
		/*
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		if(!soloTotales) {
			this.sTipoReporteExtra=Constantes2.S_REPORTE_EXTRA_GROUP_GENERICO;
		} else {
			this.sTipoReporteExtra=Constantes2.S_REPORTE_EXTRA_GROUP_TOTALES_GENERICO;
		}
		
		this.setColumnaDescripcionReporteGroupGenericoDetaNotaCredito(detanotacreditosSeleccionados);
		
		this.generarReporteDetaNotaCreditos("Todos",detanotacreditosSeleccionados);
	}
	
	public void setColumnaDescripcionReporteGroupGenericoDetaNotaCredito(ArrayList<DetaNotaCredito> detanotacreditosSeleccionados) throws Exception {    		
		try {
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			
			Boolean existe=false;
			
			for(DetaNotaCredito detanotacreditoAux:detanotacreditosSeleccionados) {
				detanotacreditoAux.setsDetalleGeneralEntityReporte(detanotacreditoAux.toString());
			
				if(sTipoSeleccionar.equals(DetaNotaCreditoConstantesFunciones.LABEL_IDEMPRESA)) {
					existe=true;
					detanotacreditoAux.setsDescripcionGeneralEntityReporte1(detanotacreditoAux.getempresa_descripcion());
				}
				 else if(sTipoSeleccionar.equals(DetaNotaCreditoConstantesFunciones.LABEL_IDSUCURSAL)) {
					existe=true;
					detanotacreditoAux.setsDescripcionGeneralEntityReporte1(detanotacreditoAux.getsucursal_descripcion());
				}
				 else if(sTipoSeleccionar.equals(DetaNotaCreditoConstantesFunciones.LABEL_IDEJERCICIO)) {
					existe=true;
					detanotacreditoAux.setsDescripcionGeneralEntityReporte1(detanotacreditoAux.getejercicio_descripcion());
				}
				 else if(sTipoSeleccionar.equals(DetaNotaCreditoConstantesFunciones.LABEL_IDPERIODO)) {
					existe=true;
					detanotacreditoAux.setsDescripcionGeneralEntityReporte1(detanotacreditoAux.getperiodo_descripcion());
				}
				 else if(sTipoSeleccionar.equals(DetaNotaCreditoConstantesFunciones.LABEL_IDANIO)) {
					existe=true;
					detanotacreditoAux.setsDescripcionGeneralEntityReporte1(detanotacreditoAux.getanio_descripcion());
				}
				 else if(sTipoSeleccionar.equals(DetaNotaCreditoConstantesFunciones.LABEL_IDMES)) {
					existe=true;
					detanotacreditoAux.setsDescripcionGeneralEntityReporte1(detanotacreditoAux.getmes_descripcion());
				}
				 else if(sTipoSeleccionar.equals(DetaNotaCreditoConstantesFunciones.LABEL_IDNOTACREDITO)) {
					existe=true;
					detanotacreditoAux.setsDescripcionGeneralEntityReporte1(detanotacreditoAux.getnotacredito_descripcion());
				}
				 else if(sTipoSeleccionar.equals(DetaNotaCreditoConstantesFunciones.LABEL_IDBODEGA)) {
					existe=true;
					detanotacreditoAux.setsDescripcionGeneralEntityReporte1(detanotacreditoAux.getbodega_descripcion());
				}
				 else if(sTipoSeleccionar.equals(DetaNotaCreditoConstantesFunciones.LABEL_IDPRODUCTO)) {
					existe=true;
					detanotacreditoAux.setsDescripcionGeneralEntityReporte1(detanotacreditoAux.getproducto_descripcion());
				}
				 else if(sTipoSeleccionar.equals(DetaNotaCreditoConstantesFunciones.LABEL_IDUNIDAD)) {
					existe=true;
					detanotacreditoAux.setsDescripcionGeneralEntityReporte1(detanotacreditoAux.getunidad_descripcion());
				}
				 else if(sTipoSeleccionar.equals(DetaNotaCreditoConstantesFunciones.LABEL_IDTIPODETANOTACREDITO)) {
					existe=true;
					detanotacreditoAux.setsDescripcionGeneralEntityReporte1(detanotacreditoAux.gettipodetanotacredito_descripcion());
				}
				 else if(sTipoSeleccionar.equals(DetaNotaCreditoConstantesFunciones.LABEL_IDTIPODEVOLUCIONEMPRESA)) {
					existe=true;
					detanotacreditoAux.setsDescripcionGeneralEntityReporte1(detanotacreditoAux.gettipodevolucionempresa_descripcion());
				}
				 else if(sTipoSeleccionar.equals(DetaNotaCreditoConstantesFunciones.LABEL_DESCRIPCION)) {
					existe=true;
					detanotacreditoAux.setsDescripcionGeneralEntityReporte1(detanotacreditoAux.getdescripcion());
				}
				 else if(sTipoSeleccionar.equals(DetaNotaCreditoConstantesFunciones.LABEL_CANTIDAD)) {
					existe=true;
					detanotacreditoAux.setsDescripcionGeneralEntityReporte1(detanotacreditoAux.getcantidad().toString());
				}
				 else if(sTipoSeleccionar.equals(DetaNotaCreditoConstantesFunciones.LABEL_IDCENTROCOSTO)) {
					existe=true;
					detanotacreditoAux.setsDescripcionGeneralEntityReporte1(detanotacreditoAux.getcentrocosto_descripcion());
				}
				 else if(sTipoSeleccionar.equals(DetaNotaCreditoConstantesFunciones.LABEL_IDEMPAQUE)) {
					existe=true;
					detanotacreditoAux.setsDescripcionGeneralEntityReporte1(detanotacreditoAux.getempaque_descripcion());
				}
				 else if(sTipoSeleccionar.equals(DetaNotaCreditoConstantesFunciones.LABEL_INCLUYEIMPUESTO)) {
					existe=true;
					detanotacreditoAux.setsDescripcionGeneralEntityReporte1(Funciones2.getDescripcionBoolean(detanotacreditoAux.getincluye_impuesto()));
				}
				 else if(sTipoSeleccionar.equals(DetaNotaCreditoConstantesFunciones.LABEL_FECHAEMISION)) {
					existe=true;
					detanotacreditoAux.setsDescripcionGeneralEntityReporte1(Funciones2.getStringPostgresDate(detanotacreditoAux.getfecha_emision()));
				}
				 else if(sTipoSeleccionar.equals(DetaNotaCreditoConstantesFunciones.LABEL_CODIGOLOTE)) {
					existe=true;
					detanotacreditoAux.setsDescripcionGeneralEntityReporte1(detanotacreditoAux.getcodigo_lote());
				}
				 else if(sTipoSeleccionar.equals(DetaNotaCreditoConstantesFunciones.LABEL_NUMEROCAJA)) {
					existe=true;
					detanotacreditoAux.setsDescripcionGeneralEntityReporte1(detanotacreditoAux.getnumero_caja());
				}
			}	
											
			if(!existe) {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}										
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoConstantesFunciones.CLASSNAME);
		}
	}
	
	
	public void actualizarEstadoCeldasBotonesDetaNotaCredito(String sAccion,Boolean isGuardarCambiosEnLote,Boolean isEsMantenimientoRelacionado) throws Exception {
		if(sAccion=="n") {
			if(!this.esParaBusquedaForeignKey) {
				this.isVisibilidadCeldaNuevoDetaNotaCredito=true;
				this.isVisibilidadCeldaNuevoRelacionesDetaNotaCredito=true;
				this.isVisibilidadCeldaGuardarCambiosDetaNotaCredito=true;
			}
			
			this.isVisibilidadCeldaModificarDetaNotaCredito=false;
			this.isVisibilidadCeldaActualizarDetaNotaCredito=false;
			this.isVisibilidadCeldaEliminarDetaNotaCredito=false;
			this.isVisibilidadCeldaCancelarDetaNotaCredito=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarDetaNotaCredito=true;
				} else {
					this.isVisibilidadCeldaGuardarDetaNotaCredito=false;
				}
			}
		} else if(sAccion=="a") {
			this.isVisibilidadCeldaNuevoDetaNotaCredito=false;
			this.isVisibilidadCeldaNuevoRelacionesDetaNotaCredito=false;
			this.isVisibilidadCeldaGuardarCambiosDetaNotaCredito=false;
			this.isVisibilidadCeldaModificarDetaNotaCredito=false;
			this.isVisibilidadCeldaActualizarDetaNotaCredito=true;
			this.isVisibilidadCeldaEliminarDetaNotaCredito=false;
			this.isVisibilidadCeldaCancelarDetaNotaCredito=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarDetaNotaCredito=true;
				} else {
					this.isVisibilidadCeldaGuardarDetaNotaCredito=false;
				}
			}
		} else if(sAccion=="ae") {
			this.isVisibilidadCeldaNuevoDetaNotaCredito=false;
			this.isVisibilidadCeldaNuevoRelacionesDetaNotaCredito=false;
			this.isVisibilidadCeldaGuardarCambiosDetaNotaCredito=false;
			this.isVisibilidadCeldaModificarDetaNotaCredito=false;
			this.isVisibilidadCeldaActualizarDetaNotaCredito=true;
			this.isVisibilidadCeldaEliminarDetaNotaCredito=true;
			this.isVisibilidadCeldaCancelarDetaNotaCredito=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarDetaNotaCredito=true;
				} else {
					this.isVisibilidadCeldaGuardarDetaNotaCredito=false;
				}
			}
		}
		//Para Mantenimientos de tablas relacionados con mas de columnas minimas
		else if(sAccion=="ae2") {
			this.isVisibilidadCeldaNuevoDetaNotaCredito=false;
			this.isVisibilidadCeldaNuevoRelacionesDetaNotaCredito=false;
			this.isVisibilidadCeldaGuardarCambiosDetaNotaCredito=false;
			this.isVisibilidadCeldaModificarDetaNotaCredito=false;
			this.isVisibilidadCeldaActualizarDetaNotaCredito=true;
			this.isVisibilidadCeldaEliminarDetaNotaCredito=false;
			this.isVisibilidadCeldaCancelarDetaNotaCredito=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarDetaNotaCredito=false;
				} else {
					this.isVisibilidadCeldaGuardarDetaNotaCredito=false;
				}
			}
		} else if(sAccion=="c") {
			this.isVisibilidadCeldaNuevoDetaNotaCredito=true;
			this.isVisibilidadCeldaNuevoRelacionesDetaNotaCredito=true;
			this.isVisibilidadCeldaGuardarCambiosDetaNotaCredito=true;
			this.isVisibilidadCeldaModificarDetaNotaCredito=false;
			this.isVisibilidadCeldaActualizarDetaNotaCredito=false;
			this.isVisibilidadCeldaEliminarDetaNotaCredito=false;
			this.isVisibilidadCeldaCancelarDetaNotaCredito=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarDetaNotaCredito=true;
				} else {
					this.isVisibilidadCeldaGuardarDetaNotaCredito=false;
				}
			}
		} else if(sAccion=="t") {
			this.isVisibilidadCeldaNuevoDetaNotaCredito=false;
			this.isVisibilidadCeldaNuevoRelacionesDetaNotaCredito=false;
			this.isVisibilidadCeldaGuardarCambiosDetaNotaCredito=false;
			this.isVisibilidadCeldaActualizarDetaNotaCredito=false;
			this.isVisibilidadCeldaEliminarDetaNotaCredito=false;
			this.isVisibilidadCeldaCancelarDetaNotaCredito=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarDetaNotaCredito=false;
				} else {
					this.isVisibilidadCeldaGuardarDetaNotaCredito=false;
				}
			}
		}  else if(sAccion=="s"||sAccion=="s2") {
			this.isVisibilidadCeldaNuevoDetaNotaCredito=false;
			this.isVisibilidadCeldaNuevoRelacionesDetaNotaCredito=false;
			this.isVisibilidadCeldaGuardarCambiosDetaNotaCredito=false;
			this.isVisibilidadCeldaModificarDetaNotaCredito=true;
			this.isVisibilidadCeldaActualizarDetaNotaCredito=false;
			this.isVisibilidadCeldaEliminarDetaNotaCredito=false;
			this.isVisibilidadCeldaCancelarDetaNotaCredito=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarDetaNotaCredito=false;
				} else {
					this.isVisibilidadCeldaGuardarDetaNotaCredito=false;
				}
			}
		}
		
		//ACTUALIZA VISIBILIDAD PANELES
		if(DetaNotaCreditoJInternalFrame.CON_DATOS_FRAME && !this.esParaBusquedaForeignKey) {
			//SIEMPRE VISIBLE
			this.isVisibilidadCeldaNuevoDetaNotaCredito=true;
			this.isVisibilidadCeldaNuevoRelacionesDetaNotaCredito=true;
			this.isVisibilidadCeldaGuardarCambiosDetaNotaCredito=true;
		} else {
			this.actualizarEstadoPanelsDetaNotaCredito(sAccion);						
		}
		
		if(this.esParaBusquedaForeignKey) {
			this.isVisibilidadCeldaCopiarDetaNotaCredito=false;
			//this.isVisibilidadCeldaVerFormDetaNotaCredito=false;
			this.isVisibilidadCeldaDuplicarDetaNotaCredito=false;
		}
		
		//SI ES MANTENIMIENTO RELACIONES
		if(!detanotacreditoSessionBean.getConGuardarRelaciones()) {
			this.isVisibilidadCeldaNuevoRelacionesDetaNotaCredito=false;
		} else {
			this.isVisibilidadCeldaNuevoDetaNotaCredito=false;
			this.isVisibilidadCeldaGuardarCambiosDetaNotaCredito=false;
		}
		
		//SI ES MANTENIMIENTO RELACIONADO
		if(detanotacreditoSessionBean.getEsGuardarRelacionado()) {
			if(!detanotacreditoSessionBean.getConGuardarRelaciones()) {	
				this.isVisibilidadCeldaNuevoRelacionesDetaNotaCredito=false;												
			}
			
			this.jButtonCerrarDetaNotaCredito.setVisible(false);
		}
		
		//SI NO TIENE MAXIMO DE RELACIONES PERMITIDAS
		if(!this.conMaximoRelaciones) {
			this.isVisibilidadCeldaNuevoRelacionesDetaNotaCredito=false;
		}
		
		if(!this.permiteMantenimiento(this.detanotacredito)) {
			this.isVisibilidadCeldaActualizarDetaNotaCredito=false;
			this.isVisibilidadCeldaEliminarDetaNotaCredito=false;
		}
		
		
		
	}
	
	public void actualizarEstadoCeldasBotonesConGuardarRelacionesDetaNotaCredito() {
	}
	
	public void actualizarEstadoPanelsDetaNotaCredito(String sAccion) {
		if(sAccion=="n") {
			if(this.jScrollPanelDatosEdicionDetaNotaCredito!=null) {
				this.jScrollPanelDatosEdicionDetaNotaCredito.setVisible(false);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasDetaNotaCredito!=null) {
				this.jTabbedPaneBusquedasDetaNotaCredito.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosDetaNotaCredito!=null) {
				this.jScrollPanelDatosDetaNotaCredito.setVisible(true);
			}
			
			if(this.jPanelPaginacionDetaNotaCredito!=null) {
				this.jPanelPaginacionDetaNotaCredito.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesDetaNotaCredito!=null) {
				this.jPanelParametrosReportesDetaNotaCredito.setVisible(true);		    
			}
			
		} else if(sAccion=="a") {				
			if(this.jScrollPanelDatosEdicionDetaNotaCredito!=null) {
				this.jScrollPanelDatosEdicionDetaNotaCredito.setVisible(true);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasDetaNotaCredito!=null) {
				this.jTabbedPaneBusquedasDetaNotaCredito.setVisible(false);			
			}
			
			
			
			if(this.jScrollPanelDatosDetaNotaCredito!=null) {
				this.jScrollPanelDatosDetaNotaCredito.setVisible(false);
			}
			
			if(this.jPanelPaginacionDetaNotaCredito!=null) {
				this.jPanelPaginacionDetaNotaCredito.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesDetaNotaCredito!=null) {
				this.jPanelParametrosReportesDetaNotaCredito.setVisible(false);
			}
						
		} else if(sAccion=="ae") {		
			if(this.jScrollPanelDatosEdicionDetaNotaCredito!=null) {
				this.jScrollPanelDatosEdicionDetaNotaCredito.setVisible(true);		
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasDetaNotaCredito!=null) {
				this.jTabbedPaneBusquedasDetaNotaCredito.setVisible(false);			
			}
			
			
			if(this.jScrollPanelDatosDetaNotaCredito!=null) {
				this.jScrollPanelDatosDetaNotaCredito.setVisible(false);
			}
			
			if(this.jPanelPaginacionDetaNotaCredito!=null) {
				this.jPanelPaginacionDetaNotaCredito.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesDetaNotaCredito!=null) {
				this.jPanelParametrosReportesDetaNotaCredito.setVisible(false);
			}
						
		}
		//Para Mantenimientos de tablas relacionados con mas de columnas minimas
		else if(sAccion=="ae2") {	
			if(this.jScrollPanelDatosEdicionDetaNotaCredito!=null) {
				this.jScrollPanelDatosEdicionDetaNotaCredito.setVisible(true);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasDetaNotaCredito!=null) {
				this.jTabbedPaneBusquedasDetaNotaCredito.setVisible(false);			
			}
			
			
			if(this.jScrollPanelDatosDetaNotaCredito!=null) {
				this.jScrollPanelDatosDetaNotaCredito.setVisible(false);
			}
			
			if(this.jPanelPaginacionDetaNotaCredito!=null) {
				this.jPanelPaginacionDetaNotaCredito.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesDetaNotaCredito!=null) {
				this.jPanelParametrosReportesDetaNotaCredito.setVisible(false);
			}
						
		} else if(sAccion=="c") {	
			if(this.jScrollPanelDatosEdicionDetaNotaCredito!=null) {
				this.jScrollPanelDatosEdicionDetaNotaCredito.setVisible(false);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasDetaNotaCredito!=null) {
				this.jTabbedPaneBusquedasDetaNotaCredito.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosDetaNotaCredito!=null) {
				this.jScrollPanelDatosDetaNotaCredito.setVisible(true);
			}
			
			if(this.jPanelPaginacionDetaNotaCredito!=null) {
				this.jPanelPaginacionDetaNotaCredito.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesDetaNotaCredito!=null) {
				this.jPanelParametrosReportesDetaNotaCredito.setVisible(true);
			}
						
		} else if(sAccion=="t") {
			
			if(this.jScrollPanelDatosEdicionDetaNotaCredito!=null) {
				this.jScrollPanelDatosEdicionDetaNotaCredito.setVisible(false);
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasDetaNotaCredito!=null) {
				this.jTabbedPaneBusquedasDetaNotaCredito.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosDetaNotaCredito!=null) {
				this.jScrollPanelDatosDetaNotaCredito.setVisible(true);
			}
			
			if(this.jPanelPaginacionDetaNotaCredito!=null) {
				this.jPanelPaginacionDetaNotaCredito.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesDetaNotaCredito!=null) {
				this.jPanelParametrosReportesDetaNotaCredito.setVisible(true);
			}
						
		}  else if(sAccion=="s"||sAccion=="s2") {
			if(this.jScrollPanelDatosEdicionDetaNotaCredito!=null) {
				this.jScrollPanelDatosEdicionDetaNotaCredito.setVisible(false);
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasDetaNotaCredito!=null) {
				this.jTabbedPaneBusquedasDetaNotaCredito.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosDetaNotaCredito!=null) {
				this.jScrollPanelDatosDetaNotaCredito.setVisible(true);
			}
			
			if(this.jPanelPaginacionDetaNotaCredito!=null) {
				this.jPanelPaginacionDetaNotaCredito.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesDetaNotaCredito!=null) {
				this.jPanelParametrosReportesDetaNotaCredito.setVisible(true);
			}
			
		} 
		
		if(sAccion.equals("relacionado") || this.detanotacreditoSessionBean.getEsGuardarRelacionado()) {
			if(!this.conCargarMinimo) {
				//BYDAN_BUSQUEDAS
				
				if(this.jTabbedPaneBusquedasDetaNotaCredito!=null) {
					this.jTabbedPaneBusquedasDetaNotaCredito.setVisible(false);				
				}
				
			}
			
			if(this.jPanelParametrosReportesDetaNotaCredito!=null) {
				this.jPanelParametrosReportesDetaNotaCredito.setVisible(false);
			}
		
		} else if(sAccion.equals("no_relacionado") && !this.detanotacreditoSessionBean.getEsGuardarRelacionado()) {
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasDetaNotaCredito!=null) {
				this.jTabbedPaneBusquedasDetaNotaCredito.setVisible(true);			
			}
			
			if(this.jPanelParametrosReportesDetaNotaCredito!=null) {
				this.jPanelParametrosReportesDetaNotaCredito.setVisible(true);
			}
		}
	}	
	
	

	public void setVisibilidadBusquedasParaEmpresa(Boolean isParaEmpresa){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaEmpresaNegation=!isParaEmpresa;

			this.isVisibilidadFK_IdBodega=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdBodega) {this.jTabbedPaneBusquedasDetaNotaCredito.remove(jPanelFK_IdBodegaDetaNotaCredito);}

			this.isVisibilidadFK_IdCentroCosto=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasDetaNotaCredito.remove(jPanelFK_IdCentroCostoDetaNotaCredito);}

			this.isVisibilidadFK_IdEmpaque=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdEmpaque) {this.jTabbedPaneBusquedasDetaNotaCredito.remove(jPanelFK_IdEmpaqueDetaNotaCredito);}

			this.isVisibilidadFK_IdNotaCredito=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdNotaCredito) {this.jTabbedPaneBusquedasDetaNotaCredito.remove(jPanelFK_IdNotaCreditoDetaNotaCredito);}

			this.isVisibilidadFK_IdProducto=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdProducto) {this.jTabbedPaneBusquedasDetaNotaCredito.remove(jPanelFK_IdProductoDetaNotaCredito);}

			this.isVisibilidadFK_IdTipoDetaNotaCredito=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdTipoDetaNotaCredito) {this.jTabbedPaneBusquedasDetaNotaCredito.remove(jPanelFK_IdTipoDetaNotaCreditoDetaNotaCredito);}

			this.isVisibilidadFK_IdTipoDevolucionEmpresa=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdTipoDevolucionEmpresa) {this.jTabbedPaneBusquedasDetaNotaCredito.remove(jPanelFK_IdTipoDevolucionEmpresaDetaNotaCredito);}

			this.isVisibilidadFK_IdUnidad=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdUnidad) {this.jTabbedPaneBusquedasDetaNotaCredito.remove(jPanelFK_IdUnidadDetaNotaCredito);}
		}
		
	}

	public void setVisibilidadBusquedasParaSucursal(Boolean isParaSucursal){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaSucursalNegation=!isParaSucursal;

			this.isVisibilidadFK_IdBodega=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdBodega) {this.jTabbedPaneBusquedasDetaNotaCredito.remove(jPanelFK_IdBodegaDetaNotaCredito);}

			this.isVisibilidadFK_IdCentroCosto=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasDetaNotaCredito.remove(jPanelFK_IdCentroCostoDetaNotaCredito);}

			this.isVisibilidadFK_IdEmpaque=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdEmpaque) {this.jTabbedPaneBusquedasDetaNotaCredito.remove(jPanelFK_IdEmpaqueDetaNotaCredito);}

			this.isVisibilidadFK_IdNotaCredito=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdNotaCredito) {this.jTabbedPaneBusquedasDetaNotaCredito.remove(jPanelFK_IdNotaCreditoDetaNotaCredito);}

			this.isVisibilidadFK_IdProducto=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdProducto) {this.jTabbedPaneBusquedasDetaNotaCredito.remove(jPanelFK_IdProductoDetaNotaCredito);}

			this.isVisibilidadFK_IdTipoDetaNotaCredito=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdTipoDetaNotaCredito) {this.jTabbedPaneBusquedasDetaNotaCredito.remove(jPanelFK_IdTipoDetaNotaCreditoDetaNotaCredito);}

			this.isVisibilidadFK_IdTipoDevolucionEmpresa=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdTipoDevolucionEmpresa) {this.jTabbedPaneBusquedasDetaNotaCredito.remove(jPanelFK_IdTipoDevolucionEmpresaDetaNotaCredito);}

			this.isVisibilidadFK_IdUnidad=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdUnidad) {this.jTabbedPaneBusquedasDetaNotaCredito.remove(jPanelFK_IdUnidadDetaNotaCredito);}
		}
		
	}

	public void setVisibilidadBusquedasParaEjercicio(Boolean isParaEjercicio){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaEjercicioNegation=!isParaEjercicio;

			this.isVisibilidadFK_IdBodega=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdBodega) {this.jTabbedPaneBusquedasDetaNotaCredito.remove(jPanelFK_IdBodegaDetaNotaCredito);}

			this.isVisibilidadFK_IdCentroCosto=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasDetaNotaCredito.remove(jPanelFK_IdCentroCostoDetaNotaCredito);}

			this.isVisibilidadFK_IdEmpaque=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdEmpaque) {this.jTabbedPaneBusquedasDetaNotaCredito.remove(jPanelFK_IdEmpaqueDetaNotaCredito);}

			this.isVisibilidadFK_IdNotaCredito=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdNotaCredito) {this.jTabbedPaneBusquedasDetaNotaCredito.remove(jPanelFK_IdNotaCreditoDetaNotaCredito);}

			this.isVisibilidadFK_IdProducto=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdProducto) {this.jTabbedPaneBusquedasDetaNotaCredito.remove(jPanelFK_IdProductoDetaNotaCredito);}

			this.isVisibilidadFK_IdTipoDetaNotaCredito=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdTipoDetaNotaCredito) {this.jTabbedPaneBusquedasDetaNotaCredito.remove(jPanelFK_IdTipoDetaNotaCreditoDetaNotaCredito);}

			this.isVisibilidadFK_IdTipoDevolucionEmpresa=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdTipoDevolucionEmpresa) {this.jTabbedPaneBusquedasDetaNotaCredito.remove(jPanelFK_IdTipoDevolucionEmpresaDetaNotaCredito);}

			this.isVisibilidadFK_IdUnidad=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdUnidad) {this.jTabbedPaneBusquedasDetaNotaCredito.remove(jPanelFK_IdUnidadDetaNotaCredito);}
		}
		
	}

	public void setVisibilidadBusquedasParaPeriodo(Boolean isParaPeriodo){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaPeriodoNegation=!isParaPeriodo;

			this.isVisibilidadFK_IdBodega=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdBodega) {this.jTabbedPaneBusquedasDetaNotaCredito.remove(jPanelFK_IdBodegaDetaNotaCredito);}

			this.isVisibilidadFK_IdCentroCosto=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasDetaNotaCredito.remove(jPanelFK_IdCentroCostoDetaNotaCredito);}

			this.isVisibilidadFK_IdEmpaque=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdEmpaque) {this.jTabbedPaneBusquedasDetaNotaCredito.remove(jPanelFK_IdEmpaqueDetaNotaCredito);}

			this.isVisibilidadFK_IdNotaCredito=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdNotaCredito) {this.jTabbedPaneBusquedasDetaNotaCredito.remove(jPanelFK_IdNotaCreditoDetaNotaCredito);}

			this.isVisibilidadFK_IdProducto=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdProducto) {this.jTabbedPaneBusquedasDetaNotaCredito.remove(jPanelFK_IdProductoDetaNotaCredito);}

			this.isVisibilidadFK_IdTipoDetaNotaCredito=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdTipoDetaNotaCredito) {this.jTabbedPaneBusquedasDetaNotaCredito.remove(jPanelFK_IdTipoDetaNotaCreditoDetaNotaCredito);}

			this.isVisibilidadFK_IdTipoDevolucionEmpresa=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdTipoDevolucionEmpresa) {this.jTabbedPaneBusquedasDetaNotaCredito.remove(jPanelFK_IdTipoDevolucionEmpresaDetaNotaCredito);}

			this.isVisibilidadFK_IdUnidad=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdUnidad) {this.jTabbedPaneBusquedasDetaNotaCredito.remove(jPanelFK_IdUnidadDetaNotaCredito);}
		}
		
	}

	public void setVisibilidadBusquedasParaAnio(Boolean isParaAnio){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaAnioNegation=!isParaAnio;

			this.isVisibilidadFK_IdBodega=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdBodega) {this.jTabbedPaneBusquedasDetaNotaCredito.remove(jPanelFK_IdBodegaDetaNotaCredito);}

			this.isVisibilidadFK_IdCentroCosto=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasDetaNotaCredito.remove(jPanelFK_IdCentroCostoDetaNotaCredito);}

			this.isVisibilidadFK_IdEmpaque=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdEmpaque) {this.jTabbedPaneBusquedasDetaNotaCredito.remove(jPanelFK_IdEmpaqueDetaNotaCredito);}

			this.isVisibilidadFK_IdNotaCredito=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdNotaCredito) {this.jTabbedPaneBusquedasDetaNotaCredito.remove(jPanelFK_IdNotaCreditoDetaNotaCredito);}

			this.isVisibilidadFK_IdProducto=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdProducto) {this.jTabbedPaneBusquedasDetaNotaCredito.remove(jPanelFK_IdProductoDetaNotaCredito);}

			this.isVisibilidadFK_IdTipoDetaNotaCredito=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdTipoDetaNotaCredito) {this.jTabbedPaneBusquedasDetaNotaCredito.remove(jPanelFK_IdTipoDetaNotaCreditoDetaNotaCredito);}

			this.isVisibilidadFK_IdTipoDevolucionEmpresa=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdTipoDevolucionEmpresa) {this.jTabbedPaneBusquedasDetaNotaCredito.remove(jPanelFK_IdTipoDevolucionEmpresaDetaNotaCredito);}

			this.isVisibilidadFK_IdUnidad=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdUnidad) {this.jTabbedPaneBusquedasDetaNotaCredito.remove(jPanelFK_IdUnidadDetaNotaCredito);}
		}
		
	}

	public void setVisibilidadBusquedasParaMes(Boolean isParaMes){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaMesNegation=!isParaMes;

			this.isVisibilidadFK_IdBodega=isParaMesNegation;
			if(!this.isVisibilidadFK_IdBodega) {this.jTabbedPaneBusquedasDetaNotaCredito.remove(jPanelFK_IdBodegaDetaNotaCredito);}

			this.isVisibilidadFK_IdCentroCosto=isParaMesNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasDetaNotaCredito.remove(jPanelFK_IdCentroCostoDetaNotaCredito);}

			this.isVisibilidadFK_IdEmpaque=isParaMesNegation;
			if(!this.isVisibilidadFK_IdEmpaque) {this.jTabbedPaneBusquedasDetaNotaCredito.remove(jPanelFK_IdEmpaqueDetaNotaCredito);}

			this.isVisibilidadFK_IdNotaCredito=isParaMesNegation;
			if(!this.isVisibilidadFK_IdNotaCredito) {this.jTabbedPaneBusquedasDetaNotaCredito.remove(jPanelFK_IdNotaCreditoDetaNotaCredito);}

			this.isVisibilidadFK_IdProducto=isParaMesNegation;
			if(!this.isVisibilidadFK_IdProducto) {this.jTabbedPaneBusquedasDetaNotaCredito.remove(jPanelFK_IdProductoDetaNotaCredito);}

			this.isVisibilidadFK_IdTipoDetaNotaCredito=isParaMesNegation;
			if(!this.isVisibilidadFK_IdTipoDetaNotaCredito) {this.jTabbedPaneBusquedasDetaNotaCredito.remove(jPanelFK_IdTipoDetaNotaCreditoDetaNotaCredito);}

			this.isVisibilidadFK_IdTipoDevolucionEmpresa=isParaMesNegation;
			if(!this.isVisibilidadFK_IdTipoDevolucionEmpresa) {this.jTabbedPaneBusquedasDetaNotaCredito.remove(jPanelFK_IdTipoDevolucionEmpresaDetaNotaCredito);}

			this.isVisibilidadFK_IdUnidad=isParaMesNegation;
			if(!this.isVisibilidadFK_IdUnidad) {this.jTabbedPaneBusquedasDetaNotaCredito.remove(jPanelFK_IdUnidadDetaNotaCredito);}
		}
		
	}

	public void setVisibilidadBusquedasParaNotaCredito(Boolean isParaNotaCredito){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaNotaCreditoNegation=!isParaNotaCredito;

			this.isVisibilidadFK_IdBodega=isParaNotaCreditoNegation;
			if(!this.isVisibilidadFK_IdBodega) {this.jTabbedPaneBusquedasDetaNotaCredito.remove(jPanelFK_IdBodegaDetaNotaCredito);}

			this.isVisibilidadFK_IdCentroCosto=isParaNotaCreditoNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasDetaNotaCredito.remove(jPanelFK_IdCentroCostoDetaNotaCredito);}

			this.isVisibilidadFK_IdEmpaque=isParaNotaCreditoNegation;
			if(!this.isVisibilidadFK_IdEmpaque) {this.jTabbedPaneBusquedasDetaNotaCredito.remove(jPanelFK_IdEmpaqueDetaNotaCredito);}

			this.isVisibilidadFK_IdNotaCredito=isParaNotaCredito;
			if(!this.isVisibilidadFK_IdNotaCredito) {this.jTabbedPaneBusquedasDetaNotaCredito.remove(jPanelFK_IdNotaCreditoDetaNotaCredito);}

			this.isVisibilidadFK_IdProducto=isParaNotaCreditoNegation;
			if(!this.isVisibilidadFK_IdProducto) {this.jTabbedPaneBusquedasDetaNotaCredito.remove(jPanelFK_IdProductoDetaNotaCredito);}

			this.isVisibilidadFK_IdTipoDetaNotaCredito=isParaNotaCreditoNegation;
			if(!this.isVisibilidadFK_IdTipoDetaNotaCredito) {this.jTabbedPaneBusquedasDetaNotaCredito.remove(jPanelFK_IdTipoDetaNotaCreditoDetaNotaCredito);}

			this.isVisibilidadFK_IdTipoDevolucionEmpresa=isParaNotaCreditoNegation;
			if(!this.isVisibilidadFK_IdTipoDevolucionEmpresa) {this.jTabbedPaneBusquedasDetaNotaCredito.remove(jPanelFK_IdTipoDevolucionEmpresaDetaNotaCredito);}

			this.isVisibilidadFK_IdUnidad=isParaNotaCreditoNegation;
			if(!this.isVisibilidadFK_IdUnidad) {this.jTabbedPaneBusquedasDetaNotaCredito.remove(jPanelFK_IdUnidadDetaNotaCredito);}
		}
		
	}

	public void setVisibilidadBusquedasParaBodega(Boolean isParaBodega){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaBodegaNegation=!isParaBodega;

			this.isVisibilidadFK_IdBodega=isParaBodega;
			if(!this.isVisibilidadFK_IdBodega) {this.jTabbedPaneBusquedasDetaNotaCredito.remove(jPanelFK_IdBodegaDetaNotaCredito);}

			this.isVisibilidadFK_IdCentroCosto=isParaBodegaNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasDetaNotaCredito.remove(jPanelFK_IdCentroCostoDetaNotaCredito);}

			this.isVisibilidadFK_IdEmpaque=isParaBodegaNegation;
			if(!this.isVisibilidadFK_IdEmpaque) {this.jTabbedPaneBusquedasDetaNotaCredito.remove(jPanelFK_IdEmpaqueDetaNotaCredito);}

			this.isVisibilidadFK_IdNotaCredito=isParaBodegaNegation;
			if(!this.isVisibilidadFK_IdNotaCredito) {this.jTabbedPaneBusquedasDetaNotaCredito.remove(jPanelFK_IdNotaCreditoDetaNotaCredito);}

			this.isVisibilidadFK_IdProducto=isParaBodegaNegation;
			if(!this.isVisibilidadFK_IdProducto) {this.jTabbedPaneBusquedasDetaNotaCredito.remove(jPanelFK_IdProductoDetaNotaCredito);}

			this.isVisibilidadFK_IdTipoDetaNotaCredito=isParaBodegaNegation;
			if(!this.isVisibilidadFK_IdTipoDetaNotaCredito) {this.jTabbedPaneBusquedasDetaNotaCredito.remove(jPanelFK_IdTipoDetaNotaCreditoDetaNotaCredito);}

			this.isVisibilidadFK_IdTipoDevolucionEmpresa=isParaBodegaNegation;
			if(!this.isVisibilidadFK_IdTipoDevolucionEmpresa) {this.jTabbedPaneBusquedasDetaNotaCredito.remove(jPanelFK_IdTipoDevolucionEmpresaDetaNotaCredito);}

			this.isVisibilidadFK_IdUnidad=isParaBodegaNegation;
			if(!this.isVisibilidadFK_IdUnidad) {this.jTabbedPaneBusquedasDetaNotaCredito.remove(jPanelFK_IdUnidadDetaNotaCredito);}
		}
		
	}

	public void setVisibilidadBusquedasParaProducto(Boolean isParaProducto){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaProductoNegation=!isParaProducto;

			this.isVisibilidadFK_IdBodega=isParaProductoNegation;
			if(!this.isVisibilidadFK_IdBodega) {this.jTabbedPaneBusquedasDetaNotaCredito.remove(jPanelFK_IdBodegaDetaNotaCredito);}

			this.isVisibilidadFK_IdCentroCosto=isParaProductoNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasDetaNotaCredito.remove(jPanelFK_IdCentroCostoDetaNotaCredito);}

			this.isVisibilidadFK_IdEmpaque=isParaProductoNegation;
			if(!this.isVisibilidadFK_IdEmpaque) {this.jTabbedPaneBusquedasDetaNotaCredito.remove(jPanelFK_IdEmpaqueDetaNotaCredito);}

			this.isVisibilidadFK_IdNotaCredito=isParaProductoNegation;
			if(!this.isVisibilidadFK_IdNotaCredito) {this.jTabbedPaneBusquedasDetaNotaCredito.remove(jPanelFK_IdNotaCreditoDetaNotaCredito);}

			this.isVisibilidadFK_IdProducto=isParaProducto;
			if(!this.isVisibilidadFK_IdProducto) {this.jTabbedPaneBusquedasDetaNotaCredito.remove(jPanelFK_IdProductoDetaNotaCredito);}

			this.isVisibilidadFK_IdTipoDetaNotaCredito=isParaProductoNegation;
			if(!this.isVisibilidadFK_IdTipoDetaNotaCredito) {this.jTabbedPaneBusquedasDetaNotaCredito.remove(jPanelFK_IdTipoDetaNotaCreditoDetaNotaCredito);}

			this.isVisibilidadFK_IdTipoDevolucionEmpresa=isParaProductoNegation;
			if(!this.isVisibilidadFK_IdTipoDevolucionEmpresa) {this.jTabbedPaneBusquedasDetaNotaCredito.remove(jPanelFK_IdTipoDevolucionEmpresaDetaNotaCredito);}

			this.isVisibilidadFK_IdUnidad=isParaProductoNegation;
			if(!this.isVisibilidadFK_IdUnidad) {this.jTabbedPaneBusquedasDetaNotaCredito.remove(jPanelFK_IdUnidadDetaNotaCredito);}
		}
		
	}

	public void setVisibilidadBusquedasParaUnidad(Boolean isParaUnidad){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaUnidadNegation=!isParaUnidad;

			this.isVisibilidadFK_IdBodega=isParaUnidadNegation;
			if(!this.isVisibilidadFK_IdBodega) {this.jTabbedPaneBusquedasDetaNotaCredito.remove(jPanelFK_IdBodegaDetaNotaCredito);}

			this.isVisibilidadFK_IdCentroCosto=isParaUnidadNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasDetaNotaCredito.remove(jPanelFK_IdCentroCostoDetaNotaCredito);}

			this.isVisibilidadFK_IdEmpaque=isParaUnidadNegation;
			if(!this.isVisibilidadFK_IdEmpaque) {this.jTabbedPaneBusquedasDetaNotaCredito.remove(jPanelFK_IdEmpaqueDetaNotaCredito);}

			this.isVisibilidadFK_IdNotaCredito=isParaUnidadNegation;
			if(!this.isVisibilidadFK_IdNotaCredito) {this.jTabbedPaneBusquedasDetaNotaCredito.remove(jPanelFK_IdNotaCreditoDetaNotaCredito);}

			this.isVisibilidadFK_IdProducto=isParaUnidadNegation;
			if(!this.isVisibilidadFK_IdProducto) {this.jTabbedPaneBusquedasDetaNotaCredito.remove(jPanelFK_IdProductoDetaNotaCredito);}

			this.isVisibilidadFK_IdTipoDetaNotaCredito=isParaUnidadNegation;
			if(!this.isVisibilidadFK_IdTipoDetaNotaCredito) {this.jTabbedPaneBusquedasDetaNotaCredito.remove(jPanelFK_IdTipoDetaNotaCreditoDetaNotaCredito);}

			this.isVisibilidadFK_IdTipoDevolucionEmpresa=isParaUnidadNegation;
			if(!this.isVisibilidadFK_IdTipoDevolucionEmpresa) {this.jTabbedPaneBusquedasDetaNotaCredito.remove(jPanelFK_IdTipoDevolucionEmpresaDetaNotaCredito);}

			this.isVisibilidadFK_IdUnidad=isParaUnidad;
			if(!this.isVisibilidadFK_IdUnidad) {this.jTabbedPaneBusquedasDetaNotaCredito.remove(jPanelFK_IdUnidadDetaNotaCredito);}
		}
		
	}

	public void setVisibilidadBusquedasParaTipoDetaNotaCredito(Boolean isParaTipoDetaNotaCredito){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaTipoDetaNotaCreditoNegation=!isParaTipoDetaNotaCredito;

			this.isVisibilidadFK_IdBodega=isParaTipoDetaNotaCreditoNegation;
			if(!this.isVisibilidadFK_IdBodega) {this.jTabbedPaneBusquedasDetaNotaCredito.remove(jPanelFK_IdBodegaDetaNotaCredito);}

			this.isVisibilidadFK_IdCentroCosto=isParaTipoDetaNotaCreditoNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasDetaNotaCredito.remove(jPanelFK_IdCentroCostoDetaNotaCredito);}

			this.isVisibilidadFK_IdEmpaque=isParaTipoDetaNotaCreditoNegation;
			if(!this.isVisibilidadFK_IdEmpaque) {this.jTabbedPaneBusquedasDetaNotaCredito.remove(jPanelFK_IdEmpaqueDetaNotaCredito);}

			this.isVisibilidadFK_IdNotaCredito=isParaTipoDetaNotaCreditoNegation;
			if(!this.isVisibilidadFK_IdNotaCredito) {this.jTabbedPaneBusquedasDetaNotaCredito.remove(jPanelFK_IdNotaCreditoDetaNotaCredito);}

			this.isVisibilidadFK_IdProducto=isParaTipoDetaNotaCreditoNegation;
			if(!this.isVisibilidadFK_IdProducto) {this.jTabbedPaneBusquedasDetaNotaCredito.remove(jPanelFK_IdProductoDetaNotaCredito);}

			this.isVisibilidadFK_IdTipoDetaNotaCredito=isParaTipoDetaNotaCredito;
			if(!this.isVisibilidadFK_IdTipoDetaNotaCredito) {this.jTabbedPaneBusquedasDetaNotaCredito.remove(jPanelFK_IdTipoDetaNotaCreditoDetaNotaCredito);}

			this.isVisibilidadFK_IdTipoDevolucionEmpresa=isParaTipoDetaNotaCreditoNegation;
			if(!this.isVisibilidadFK_IdTipoDevolucionEmpresa) {this.jTabbedPaneBusquedasDetaNotaCredito.remove(jPanelFK_IdTipoDevolucionEmpresaDetaNotaCredito);}

			this.isVisibilidadFK_IdUnidad=isParaTipoDetaNotaCreditoNegation;
			if(!this.isVisibilidadFK_IdUnidad) {this.jTabbedPaneBusquedasDetaNotaCredito.remove(jPanelFK_IdUnidadDetaNotaCredito);}
		}
		
	}

	public void setVisibilidadBusquedasParaTipoDevolucionEmpresa(Boolean isParaTipoDevolucionEmpresa){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaTipoDevolucionEmpresaNegation=!isParaTipoDevolucionEmpresa;

			this.isVisibilidadFK_IdBodega=isParaTipoDevolucionEmpresaNegation;
			if(!this.isVisibilidadFK_IdBodega) {this.jTabbedPaneBusquedasDetaNotaCredito.remove(jPanelFK_IdBodegaDetaNotaCredito);}

			this.isVisibilidadFK_IdCentroCosto=isParaTipoDevolucionEmpresaNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasDetaNotaCredito.remove(jPanelFK_IdCentroCostoDetaNotaCredito);}

			this.isVisibilidadFK_IdEmpaque=isParaTipoDevolucionEmpresaNegation;
			if(!this.isVisibilidadFK_IdEmpaque) {this.jTabbedPaneBusquedasDetaNotaCredito.remove(jPanelFK_IdEmpaqueDetaNotaCredito);}

			this.isVisibilidadFK_IdNotaCredito=isParaTipoDevolucionEmpresaNegation;
			if(!this.isVisibilidadFK_IdNotaCredito) {this.jTabbedPaneBusquedasDetaNotaCredito.remove(jPanelFK_IdNotaCreditoDetaNotaCredito);}

			this.isVisibilidadFK_IdProducto=isParaTipoDevolucionEmpresaNegation;
			if(!this.isVisibilidadFK_IdProducto) {this.jTabbedPaneBusquedasDetaNotaCredito.remove(jPanelFK_IdProductoDetaNotaCredito);}

			this.isVisibilidadFK_IdTipoDetaNotaCredito=isParaTipoDevolucionEmpresaNegation;
			if(!this.isVisibilidadFK_IdTipoDetaNotaCredito) {this.jTabbedPaneBusquedasDetaNotaCredito.remove(jPanelFK_IdTipoDetaNotaCreditoDetaNotaCredito);}

			this.isVisibilidadFK_IdTipoDevolucionEmpresa=isParaTipoDevolucionEmpresa;
			if(!this.isVisibilidadFK_IdTipoDevolucionEmpresa) {this.jTabbedPaneBusquedasDetaNotaCredito.remove(jPanelFK_IdTipoDevolucionEmpresaDetaNotaCredito);}

			this.isVisibilidadFK_IdUnidad=isParaTipoDevolucionEmpresaNegation;
			if(!this.isVisibilidadFK_IdUnidad) {this.jTabbedPaneBusquedasDetaNotaCredito.remove(jPanelFK_IdUnidadDetaNotaCredito);}
		}
		
	}

	public void setVisibilidadBusquedasParaCentroCosto(Boolean isParaCentroCosto){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaCentroCostoNegation=!isParaCentroCosto;

			this.isVisibilidadFK_IdBodega=isParaCentroCostoNegation;
			if(!this.isVisibilidadFK_IdBodega) {this.jTabbedPaneBusquedasDetaNotaCredito.remove(jPanelFK_IdBodegaDetaNotaCredito);}

			this.isVisibilidadFK_IdCentroCosto=isParaCentroCosto;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasDetaNotaCredito.remove(jPanelFK_IdCentroCostoDetaNotaCredito);}

			this.isVisibilidadFK_IdEmpaque=isParaCentroCostoNegation;
			if(!this.isVisibilidadFK_IdEmpaque) {this.jTabbedPaneBusquedasDetaNotaCredito.remove(jPanelFK_IdEmpaqueDetaNotaCredito);}

			this.isVisibilidadFK_IdNotaCredito=isParaCentroCostoNegation;
			if(!this.isVisibilidadFK_IdNotaCredito) {this.jTabbedPaneBusquedasDetaNotaCredito.remove(jPanelFK_IdNotaCreditoDetaNotaCredito);}

			this.isVisibilidadFK_IdProducto=isParaCentroCostoNegation;
			if(!this.isVisibilidadFK_IdProducto) {this.jTabbedPaneBusquedasDetaNotaCredito.remove(jPanelFK_IdProductoDetaNotaCredito);}

			this.isVisibilidadFK_IdTipoDetaNotaCredito=isParaCentroCostoNegation;
			if(!this.isVisibilidadFK_IdTipoDetaNotaCredito) {this.jTabbedPaneBusquedasDetaNotaCredito.remove(jPanelFK_IdTipoDetaNotaCreditoDetaNotaCredito);}

			this.isVisibilidadFK_IdTipoDevolucionEmpresa=isParaCentroCostoNegation;
			if(!this.isVisibilidadFK_IdTipoDevolucionEmpresa) {this.jTabbedPaneBusquedasDetaNotaCredito.remove(jPanelFK_IdTipoDevolucionEmpresaDetaNotaCredito);}

			this.isVisibilidadFK_IdUnidad=isParaCentroCostoNegation;
			if(!this.isVisibilidadFK_IdUnidad) {this.jTabbedPaneBusquedasDetaNotaCredito.remove(jPanelFK_IdUnidadDetaNotaCredito);}
		}
		
	}

	public void setVisibilidadBusquedasParaEmpaque(Boolean isParaEmpaque){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaEmpaqueNegation=!isParaEmpaque;

			this.isVisibilidadFK_IdBodega=isParaEmpaqueNegation;
			if(!this.isVisibilidadFK_IdBodega) {this.jTabbedPaneBusquedasDetaNotaCredito.remove(jPanelFK_IdBodegaDetaNotaCredito);}

			this.isVisibilidadFK_IdCentroCosto=isParaEmpaqueNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasDetaNotaCredito.remove(jPanelFK_IdCentroCostoDetaNotaCredito);}

			this.isVisibilidadFK_IdEmpaque=isParaEmpaque;
			if(!this.isVisibilidadFK_IdEmpaque) {this.jTabbedPaneBusquedasDetaNotaCredito.remove(jPanelFK_IdEmpaqueDetaNotaCredito);}

			this.isVisibilidadFK_IdNotaCredito=isParaEmpaqueNegation;
			if(!this.isVisibilidadFK_IdNotaCredito) {this.jTabbedPaneBusquedasDetaNotaCredito.remove(jPanelFK_IdNotaCreditoDetaNotaCredito);}

			this.isVisibilidadFK_IdProducto=isParaEmpaqueNegation;
			if(!this.isVisibilidadFK_IdProducto) {this.jTabbedPaneBusquedasDetaNotaCredito.remove(jPanelFK_IdProductoDetaNotaCredito);}

			this.isVisibilidadFK_IdTipoDetaNotaCredito=isParaEmpaqueNegation;
			if(!this.isVisibilidadFK_IdTipoDetaNotaCredito) {this.jTabbedPaneBusquedasDetaNotaCredito.remove(jPanelFK_IdTipoDetaNotaCreditoDetaNotaCredito);}

			this.isVisibilidadFK_IdTipoDevolucionEmpresa=isParaEmpaqueNegation;
			if(!this.isVisibilidadFK_IdTipoDevolucionEmpresa) {this.jTabbedPaneBusquedasDetaNotaCredito.remove(jPanelFK_IdTipoDevolucionEmpresaDetaNotaCredito);}

			this.isVisibilidadFK_IdUnidad=isParaEmpaqueNegation;
			if(!this.isVisibilidadFK_IdUnidad) {this.jTabbedPaneBusquedasDetaNotaCredito.remove(jPanelFK_IdUnidadDetaNotaCredito);}
		}
		
	}
	
	
	
	

	public String registrarSesionDetaNotaCreditoParaBusquedaProductos() throws Exception {
		Boolean isPaginaPopupProducto=false;

		try {

			if(detanotacreditoSessionBean==null) {
				detanotacreditoSessionBean=new DetaNotaCreditoSessionBean();
			}

			if(productoSessionBean==null) {
				productoSessionBean=new ProductoSessionBean();
			}

			productoSessionBean.setsPathNavegacionActual(detanotacreditoSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+ProductoConstantesFunciones.SCLASSWEBTITULO);
			productoSessionBean.setisPermiteRecargarInformacion(false);
			productoSessionBean.setisPaginaPopup(true);
			isPaginaPopupProducto=productoSessionBean.getisPaginaPopup();
			productoSessionBean.setisPaginaPopup(false);
			productoSessionBean.setEstaModoBusqueda(true);
			productoSessionBean.setsFuncionBusquedaRapida("window.opener.detanotacreditoFuncionGeneral.setCombosCodigoDesdeBusquedaid_producto(TO_REPLACE);");
			productoSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeProducto(true);
			productoSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeProducto(DetaNotaCreditoConstantesFunciones.SNOMBREOPCION);
			//productoSessionBean.setisBusquedaDesdeForeignKeySesionDetaNotaCredito(true);
			//productoSessionBean.setlidDetaNotaCreditoActual(this.idDetaNotaCreditoActual);

			detanotacreditoSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyDetaNotaCredito(true);
			detanotacreditoSessionBean.setlIdDetaNotaCreditoActualForeignKey(this.idDetaNotaCreditoActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
			return "";
	}

	public String registrarSesionDetaNotaCreditoParaBusquedaCentroCostos() throws Exception {
		Boolean isPaginaPopupCentroCosto=false;

		try {

			if(detanotacreditoSessionBean==null) {
				detanotacreditoSessionBean=new DetaNotaCreditoSessionBean();
			}

			if(centrocostoSessionBean==null) {
				centrocostoSessionBean=new CentroCostoSessionBean();
			}

			centrocostoSessionBean.setsPathNavegacionActual(detanotacreditoSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+CentroCostoConstantesFunciones.SCLASSWEBTITULO);
			centrocostoSessionBean.setisPermiteRecargarInformacion(false);
			centrocostoSessionBean.setisPaginaPopup(true);
			isPaginaPopupCentroCosto=centrocostoSessionBean.getisPaginaPopup();
			centrocostoSessionBean.setisPaginaPopup(false);
			centrocostoSessionBean.setEstaModoBusqueda(true);
			centrocostoSessionBean.setsFuncionBusquedaRapida("window.opener.detanotacreditoFuncionGeneral.setCombosCodigoDesdeBusquedaid_centro_costo(TO_REPLACE);");
			centrocostoSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeCentroCosto(true);
			centrocostoSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeCentroCosto(DetaNotaCreditoConstantesFunciones.SNOMBREOPCION);
			//centrocostoSessionBean.setisBusquedaDesdeForeignKeySesionDetaNotaCredito(true);
			//centrocostoSessionBean.setlidDetaNotaCreditoActual(this.idDetaNotaCreditoActual);

			detanotacreditoSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyDetaNotaCredito(true);
			detanotacreditoSessionBean.setlIdDetaNotaCreditoActualForeignKey(this.idDetaNotaCreditoActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
			return "";
	}
	
	
	public void guardarDatosBusquedaSession() throws Exception {
		
		//DetaNotaCreditoSessionBean detanotacreditoSessionBean=new DetaNotaCreditoSessionBean();
		
		if(this.detanotacreditoSessionBean==null) {
			this.detanotacreditoSessionBean=new DetaNotaCreditoSessionBean();
		}
		
		this.detanotacreditoSessionBean.setsUltimaBusquedaDetaNotaCredito(this.getsAccionBusqueda());
		this.detanotacreditoSessionBean.setiNumeroPaginacion(this.getiNumeroPaginacion());
		this.detanotacreditoSessionBean.setiNumeroPaginacionPagina(this.getiNumeroPaginacionPagina());
		
		if(this.getsAccionBusqueda().equals("Todos")) {
			;
		}
		

		else if(this.getsAccionBusqueda().equals("FK_IdBodega")) {
			detanotacreditoSessionBean.setid_bodega(this.getid_bodegaFK_IdBodega());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdCentroCosto")) {
			detanotacreditoSessionBean.setid_centro_costo(this.getid_centro_costoFK_IdCentroCosto());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdEjercicio")) {
			detanotacreditoSessionBean.setid_ejercicio(this.getid_ejercicioFK_IdEjercicio());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdEmpaque")) {
			detanotacreditoSessionBean.setid_empaque(this.getid_empaqueFK_IdEmpaque());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdEmpresa")) {
			detanotacreditoSessionBean.setid_empresa(this.getid_empresaFK_IdEmpresa());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdNotaCredito")) {
			detanotacreditoSessionBean.setid_nota_credito(this.getid_nota_creditoFK_IdNotaCredito());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdPeriodo")) {
			detanotacreditoSessionBean.setid_periodo(this.getid_periodoFK_IdPeriodo());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdProducto")) {
			detanotacreditoSessionBean.setid_producto(this.getid_productoFK_IdProducto());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdSucursal")) {
			detanotacreditoSessionBean.setid_sucursal(this.getid_sucursalFK_IdSucursal());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdTipoDetaNotaCredito")) {
			detanotacreditoSessionBean.setid_tipo_deta_nota_credito(this.getid_tipo_deta_nota_creditoFK_IdTipoDetaNotaCredito());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdTipoDevolucionEmpresa")) {
			detanotacreditoSessionBean.setid_tipo_devolucion_empresa(this.getid_tipo_devolucion_empresaFK_IdTipoDevolucionEmpresa());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdUnidad")) {
			detanotacreditoSessionBean.setid_unidad(this.getid_unidadFK_IdUnidad());	
		}
		
	}
	
	public void traerDatosBusquedaDesdeSession() throws Exception {
		//DetaNotaCreditoSessionBean detanotacreditoSessionBean=new DetaNotaCreditoSessionBean();
		
		if(this.detanotacreditoSessionBean==null) {
			this.detanotacreditoSessionBean=new DetaNotaCreditoSessionBean();
		}
		
		if(this.detanotacreditoSessionBean.getsUltimaBusquedaDetaNotaCredito()!=null&&!this.detanotacreditoSessionBean.getsUltimaBusquedaDetaNotaCredito().equals("")) {
			this.setsAccionBusqueda(detanotacreditoSessionBean.getsUltimaBusquedaDetaNotaCredito());
			this.setiNumeroPaginacion(detanotacreditoSessionBean.getiNumeroPaginacion());
			this.setiNumeroPaginacionPagina(detanotacreditoSessionBean.getiNumeroPaginacionPagina());		
				
			if(this.getsAccionBusqueda().equals("Todos")) {
				;
			}
			

			 else if(this.getsAccionBusqueda().equals("FK_IdBodega")) {
				this.setid_bodegaFK_IdBodega(detanotacreditoSessionBean.getid_bodega());
				detanotacreditoSessionBean.setid_bodega(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdCentroCosto")) {
				this.setid_centro_costoFK_IdCentroCosto(detanotacreditoSessionBean.getid_centro_costo());
				detanotacreditoSessionBean.setid_centro_costo(null);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdEjercicio")) {
				this.setid_ejercicioFK_IdEjercicio(detanotacreditoSessionBean.getid_ejercicio());
				detanotacreditoSessionBean.setid_ejercicio(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdEmpaque")) {
				this.setid_empaqueFK_IdEmpaque(detanotacreditoSessionBean.getid_empaque());
				detanotacreditoSessionBean.setid_empaque(null);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdEmpresa")) {
				this.setid_empresaFK_IdEmpresa(detanotacreditoSessionBean.getid_empresa());
				detanotacreditoSessionBean.setid_empresa(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdNotaCredito")) {
				this.setid_nota_creditoFK_IdNotaCredito(detanotacreditoSessionBean.getid_nota_credito());
				detanotacreditoSessionBean.setid_nota_credito(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdPeriodo")) {
				this.setid_periodoFK_IdPeriodo(detanotacreditoSessionBean.getid_periodo());
				detanotacreditoSessionBean.setid_periodo(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdProducto")) {
				this.setid_productoFK_IdProducto(detanotacreditoSessionBean.getid_producto());
				detanotacreditoSessionBean.setid_producto(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdSucursal")) {
				this.setid_sucursalFK_IdSucursal(detanotacreditoSessionBean.getid_sucursal());
				detanotacreditoSessionBean.setid_sucursal(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdTipoDetaNotaCredito")) {
				this.setid_tipo_deta_nota_creditoFK_IdTipoDetaNotaCredito(detanotacreditoSessionBean.getid_tipo_deta_nota_credito());
				detanotacreditoSessionBean.setid_tipo_deta_nota_credito(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdTipoDevolucionEmpresa")) {
				this.setid_tipo_devolucion_empresaFK_IdTipoDevolucionEmpresa(detanotacreditoSessionBean.getid_tipo_devolucion_empresa());
				detanotacreditoSessionBean.setid_tipo_devolucion_empresa(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdUnidad")) {
				this.setid_unidadFK_IdUnidad(detanotacreditoSessionBean.getid_unidad());
				detanotacreditoSessionBean.setid_unidad(-1L);
			}
		}
		
		this.detanotacreditoSessionBean.setsUltimaBusquedaDetaNotaCredito("");
		this.detanotacreditoSessionBean.setiNumeroPaginacion(DetaNotaCreditoConstantesFunciones.INUMEROPAGINACION);
		this.detanotacreditoSessionBean.setiNumeroPaginacionPagina(0);
		
	}
	
	public void procesoActualizarFilaTotales(Boolean esCampoValor,String sTipo) {
		try {
			this.actualizarFilaTotales();
				
			this.traerValoresTablaTotales();
			
			this.inicializarActualizarBindingTablaDetaNotaCredito(false);
			
			
			
			
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	
	
	public void updateBusquedasFormularioDetaNotaCredito() {
		this.updateBorderResaltarBusquedasFormularioDetaNotaCredito();
		this.updateVisibilidadBusquedasFormularioDetaNotaCredito();
		this.updateHabilitarBusquedasFormularioDetaNotaCredito();
	}
	
	public void updateBorderResaltarBusquedasFormularioDetaNotaCredito() {					
	//BYDAN_BUSQUEDAS
		
	int index=0;
		
	if(this.jTabbedPaneBusquedasDetaNotaCredito.getComponents().length>0) {
	

		if(this.detanotacreditoConstantesFunciones.resaltarFK_IdBodegaDetaNotaCredito!=null) {
			index= this.jTabbedPaneBusquedasDetaNotaCredito.indexOfComponent(this.jPanelFK_IdBodegaDetaNotaCredito);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasDetaNotaCredito.getComponent(index);
				jPanel.setBorder(this.detanotacreditoConstantesFunciones.resaltarFK_IdBodegaDetaNotaCredito);
			}
		}

		if(this.detanotacreditoConstantesFunciones.resaltarFK_IdCentroCostoDetaNotaCredito!=null) {
			index= this.jTabbedPaneBusquedasDetaNotaCredito.indexOfComponent(this.jPanelFK_IdCentroCostoDetaNotaCredito);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasDetaNotaCredito.getComponent(index);
				jPanel.setBorder(this.detanotacreditoConstantesFunciones.resaltarFK_IdCentroCostoDetaNotaCredito);
			}
		}

		if(this.detanotacreditoConstantesFunciones.resaltarFK_IdEmpaqueDetaNotaCredito!=null) {
			index= this.jTabbedPaneBusquedasDetaNotaCredito.indexOfComponent(this.jPanelFK_IdEmpaqueDetaNotaCredito);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasDetaNotaCredito.getComponent(index);
				jPanel.setBorder(this.detanotacreditoConstantesFunciones.resaltarFK_IdEmpaqueDetaNotaCredito);
			}
		}

		if(this.detanotacreditoConstantesFunciones.resaltarFK_IdNotaCreditoDetaNotaCredito!=null) {
			index= this.jTabbedPaneBusquedasDetaNotaCredito.indexOfComponent(this.jPanelFK_IdNotaCreditoDetaNotaCredito);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasDetaNotaCredito.getComponent(index);
				jPanel.setBorder(this.detanotacreditoConstantesFunciones.resaltarFK_IdNotaCreditoDetaNotaCredito);
			}
		}

		if(this.detanotacreditoConstantesFunciones.resaltarFK_IdProductoDetaNotaCredito!=null) {
			index= this.jTabbedPaneBusquedasDetaNotaCredito.indexOfComponent(this.jPanelFK_IdProductoDetaNotaCredito);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasDetaNotaCredito.getComponent(index);
				jPanel.setBorder(this.detanotacreditoConstantesFunciones.resaltarFK_IdProductoDetaNotaCredito);
			}
		}

		if(this.detanotacreditoConstantesFunciones.resaltarFK_IdTipoDetaNotaCreditoDetaNotaCredito!=null) {
			index= this.jTabbedPaneBusquedasDetaNotaCredito.indexOfComponent(this.jPanelFK_IdTipoDetaNotaCreditoDetaNotaCredito);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasDetaNotaCredito.getComponent(index);
				jPanel.setBorder(this.detanotacreditoConstantesFunciones.resaltarFK_IdTipoDetaNotaCreditoDetaNotaCredito);
			}
		}

		if(this.detanotacreditoConstantesFunciones.resaltarFK_IdTipoDevolucionEmpresaDetaNotaCredito!=null) {
			index= this.jTabbedPaneBusquedasDetaNotaCredito.indexOfComponent(this.jPanelFK_IdTipoDevolucionEmpresaDetaNotaCredito);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasDetaNotaCredito.getComponent(index);
				jPanel.setBorder(this.detanotacreditoConstantesFunciones.resaltarFK_IdTipoDevolucionEmpresaDetaNotaCredito);
			}
		}

		if(this.detanotacreditoConstantesFunciones.resaltarFK_IdUnidadDetaNotaCredito!=null) {
			index= this.jTabbedPaneBusquedasDetaNotaCredito.indexOfComponent(this.jPanelFK_IdUnidadDetaNotaCredito);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasDetaNotaCredito.getComponent(index);
				jPanel.setBorder(this.detanotacreditoConstantesFunciones.resaltarFK_IdUnidadDetaNotaCredito);
			}
		}
	}	
	
	}
	
	public void updateVisibilidadBusquedasFormularioDetaNotaCredito() {
	//BYDAN_BUSQUEDAS
	
	int index=0;
	JPanel jPanel=null;
		
	if(this.jTabbedPaneBusquedasDetaNotaCredito.getComponents().length>0) {
	

			index= this.jTabbedPaneBusquedasDetaNotaCredito.indexOfComponent(this.jPanelFK_IdBodegaDetaNotaCredito);
			jPanel=(JPanel)this.jTabbedPaneBusquedasDetaNotaCredito.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.detanotacreditoConstantesFunciones.mostrarFK_IdBodegaDetaNotaCredito);
			if(!this.detanotacreditoConstantesFunciones.mostrarFK_IdBodegaDetaNotaCredito && index>-1) {
				this.jTabbedPaneBusquedasDetaNotaCredito.remove(index);
			}

			index= this.jTabbedPaneBusquedasDetaNotaCredito.indexOfComponent(this.jPanelFK_IdCentroCostoDetaNotaCredito);
			jPanel=(JPanel)this.jTabbedPaneBusquedasDetaNotaCredito.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.detanotacreditoConstantesFunciones.mostrarFK_IdCentroCostoDetaNotaCredito);
			if(!this.detanotacreditoConstantesFunciones.mostrarFK_IdCentroCostoDetaNotaCredito && index>-1) {
				this.jTabbedPaneBusquedasDetaNotaCredito.remove(index);
			}

			index= this.jTabbedPaneBusquedasDetaNotaCredito.indexOfComponent(this.jPanelFK_IdEmpaqueDetaNotaCredito);
			jPanel=(JPanel)this.jTabbedPaneBusquedasDetaNotaCredito.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.detanotacreditoConstantesFunciones.mostrarFK_IdEmpaqueDetaNotaCredito);
			if(!this.detanotacreditoConstantesFunciones.mostrarFK_IdEmpaqueDetaNotaCredito && index>-1) {
				this.jTabbedPaneBusquedasDetaNotaCredito.remove(index);
			}

			index= this.jTabbedPaneBusquedasDetaNotaCredito.indexOfComponent(this.jPanelFK_IdNotaCreditoDetaNotaCredito);
			jPanel=(JPanel)this.jTabbedPaneBusquedasDetaNotaCredito.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.detanotacreditoConstantesFunciones.mostrarFK_IdNotaCreditoDetaNotaCredito);
			if(!this.detanotacreditoConstantesFunciones.mostrarFK_IdNotaCreditoDetaNotaCredito && index>-1) {
				this.jTabbedPaneBusquedasDetaNotaCredito.remove(index);
			}

			index= this.jTabbedPaneBusquedasDetaNotaCredito.indexOfComponent(this.jPanelFK_IdProductoDetaNotaCredito);
			jPanel=(JPanel)this.jTabbedPaneBusquedasDetaNotaCredito.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.detanotacreditoConstantesFunciones.mostrarFK_IdProductoDetaNotaCredito);
			if(!this.detanotacreditoConstantesFunciones.mostrarFK_IdProductoDetaNotaCredito && index>-1) {
				this.jTabbedPaneBusquedasDetaNotaCredito.remove(index);
			}

			index= this.jTabbedPaneBusquedasDetaNotaCredito.indexOfComponent(this.jPanelFK_IdTipoDetaNotaCreditoDetaNotaCredito);
			jPanel=(JPanel)this.jTabbedPaneBusquedasDetaNotaCredito.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.detanotacreditoConstantesFunciones.mostrarFK_IdTipoDetaNotaCreditoDetaNotaCredito);
			if(!this.detanotacreditoConstantesFunciones.mostrarFK_IdTipoDetaNotaCreditoDetaNotaCredito && index>-1) {
				this.jTabbedPaneBusquedasDetaNotaCredito.remove(index);
			}

			index= this.jTabbedPaneBusquedasDetaNotaCredito.indexOfComponent(this.jPanelFK_IdTipoDevolucionEmpresaDetaNotaCredito);
			jPanel=(JPanel)this.jTabbedPaneBusquedasDetaNotaCredito.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.detanotacreditoConstantesFunciones.mostrarFK_IdTipoDevolucionEmpresaDetaNotaCredito);
			if(!this.detanotacreditoConstantesFunciones.mostrarFK_IdTipoDevolucionEmpresaDetaNotaCredito && index>-1) {
				this.jTabbedPaneBusquedasDetaNotaCredito.remove(index);
			}

			index= this.jTabbedPaneBusquedasDetaNotaCredito.indexOfComponent(this.jPanelFK_IdUnidadDetaNotaCredito);
			jPanel=(JPanel)this.jTabbedPaneBusquedasDetaNotaCredito.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.detanotacreditoConstantesFunciones.mostrarFK_IdUnidadDetaNotaCredito);
			if(!this.detanotacreditoConstantesFunciones.mostrarFK_IdUnidadDetaNotaCredito && index>-1) {
				this.jTabbedPaneBusquedasDetaNotaCredito.remove(index);
			}
	}	
	
	}
	
	public void updateHabilitarBusquedasFormularioDetaNotaCredito() {
	
	//BYDAN_BUSQUEDAS		
		int index=0;
		JPanel jPanel=null;
			
		if(this.jTabbedPaneBusquedasDetaNotaCredito.getComponents().length>0) {
	

			index= this.jTabbedPaneBusquedasDetaNotaCredito.indexOfComponent(this.jPanelFK_IdBodegaDetaNotaCredito);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasDetaNotaCredito.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.detanotacreditoConstantesFunciones.activarFK_IdBodegaDetaNotaCredito);
				this.jTabbedPaneBusquedasDetaNotaCredito.setEnabledAt(index,this.detanotacreditoConstantesFunciones.activarFK_IdBodegaDetaNotaCredito);
			}

			index= this.jTabbedPaneBusquedasDetaNotaCredito.indexOfComponent(this.jPanelFK_IdCentroCostoDetaNotaCredito);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasDetaNotaCredito.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.detanotacreditoConstantesFunciones.activarFK_IdCentroCostoDetaNotaCredito);
				this.jTabbedPaneBusquedasDetaNotaCredito.setEnabledAt(index,this.detanotacreditoConstantesFunciones.activarFK_IdCentroCostoDetaNotaCredito);
			}

			index= this.jTabbedPaneBusquedasDetaNotaCredito.indexOfComponent(this.jPanelFK_IdEmpaqueDetaNotaCredito);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasDetaNotaCredito.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.detanotacreditoConstantesFunciones.activarFK_IdEmpaqueDetaNotaCredito);
				this.jTabbedPaneBusquedasDetaNotaCredito.setEnabledAt(index,this.detanotacreditoConstantesFunciones.activarFK_IdEmpaqueDetaNotaCredito);
			}

			index= this.jTabbedPaneBusquedasDetaNotaCredito.indexOfComponent(this.jPanelFK_IdNotaCreditoDetaNotaCredito);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasDetaNotaCredito.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.detanotacreditoConstantesFunciones.activarFK_IdNotaCreditoDetaNotaCredito);
				this.jTabbedPaneBusquedasDetaNotaCredito.setEnabledAt(index,this.detanotacreditoConstantesFunciones.activarFK_IdNotaCreditoDetaNotaCredito);
			}

			index= this.jTabbedPaneBusquedasDetaNotaCredito.indexOfComponent(this.jPanelFK_IdProductoDetaNotaCredito);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasDetaNotaCredito.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.detanotacreditoConstantesFunciones.activarFK_IdProductoDetaNotaCredito);
				this.jTabbedPaneBusquedasDetaNotaCredito.setEnabledAt(index,this.detanotacreditoConstantesFunciones.activarFK_IdProductoDetaNotaCredito);
			}

			index= this.jTabbedPaneBusquedasDetaNotaCredito.indexOfComponent(this.jPanelFK_IdTipoDetaNotaCreditoDetaNotaCredito);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasDetaNotaCredito.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.detanotacreditoConstantesFunciones.activarFK_IdTipoDetaNotaCreditoDetaNotaCredito);
				this.jTabbedPaneBusquedasDetaNotaCredito.setEnabledAt(index,this.detanotacreditoConstantesFunciones.activarFK_IdTipoDetaNotaCreditoDetaNotaCredito);
			}

			index= this.jTabbedPaneBusquedasDetaNotaCredito.indexOfComponent(this.jPanelFK_IdTipoDevolucionEmpresaDetaNotaCredito);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasDetaNotaCredito.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.detanotacreditoConstantesFunciones.activarFK_IdTipoDevolucionEmpresaDetaNotaCredito);
				this.jTabbedPaneBusquedasDetaNotaCredito.setEnabledAt(index,this.detanotacreditoConstantesFunciones.activarFK_IdTipoDevolucionEmpresaDetaNotaCredito);
			}

			index= this.jTabbedPaneBusquedasDetaNotaCredito.indexOfComponent(this.jPanelFK_IdUnidadDetaNotaCredito);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasDetaNotaCredito.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.detanotacreditoConstantesFunciones.activarFK_IdUnidadDetaNotaCredito);
				this.jTabbedPaneBusquedasDetaNotaCredito.setEnabledAt(index,this.detanotacreditoConstantesFunciones.activarFK_IdUnidadDetaNotaCredito);
			}
		}	
	
	}
	
	
	public void resaltarPanelBusquedaDetaNotaCredito(String sTipoBusqueda) {
		Boolean existe=false;
		//BYDAN_BUSQUEDAS
		
		int index=0;
		Border resaltar = Funciones2.getBorderResaltar(this.parametroGeneralUsuario,"TAB");

		if(sTipoBusqueda.equals("FK_IdBodega")) {
			index= this.jTabbedPaneBusquedasDetaNotaCredito.indexOfComponent(this.jPanelFK_IdBodegaDetaNotaCredito);

			this.jTabbedPaneBusquedasDetaNotaCredito.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasDetaNotaCredito.getComponent(index);

			this.detanotacreditoConstantesFunciones.setResaltarFK_IdBodegaDetaNotaCredito(resaltar);

			jPanel.setBorder(this.detanotacreditoConstantesFunciones.resaltarFK_IdBodegaDetaNotaCredito);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdCentroCosto")) {
			index= this.jTabbedPaneBusquedasDetaNotaCredito.indexOfComponent(this.jPanelFK_IdCentroCostoDetaNotaCredito);

			this.jTabbedPaneBusquedasDetaNotaCredito.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasDetaNotaCredito.getComponent(index);

			this.detanotacreditoConstantesFunciones.setResaltarFK_IdCentroCostoDetaNotaCredito(resaltar);

			jPanel.setBorder(this.detanotacreditoConstantesFunciones.resaltarFK_IdCentroCostoDetaNotaCredito);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdEmpaque")) {
			index= this.jTabbedPaneBusquedasDetaNotaCredito.indexOfComponent(this.jPanelFK_IdEmpaqueDetaNotaCredito);

			this.jTabbedPaneBusquedasDetaNotaCredito.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasDetaNotaCredito.getComponent(index);

			this.detanotacreditoConstantesFunciones.setResaltarFK_IdEmpaqueDetaNotaCredito(resaltar);

			jPanel.setBorder(this.detanotacreditoConstantesFunciones.resaltarFK_IdEmpaqueDetaNotaCredito);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdNotaCredito")) {
			index= this.jTabbedPaneBusquedasDetaNotaCredito.indexOfComponent(this.jPanelFK_IdNotaCreditoDetaNotaCredito);

			this.jTabbedPaneBusquedasDetaNotaCredito.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasDetaNotaCredito.getComponent(index);

			this.detanotacreditoConstantesFunciones.setResaltarFK_IdNotaCreditoDetaNotaCredito(resaltar);

			jPanel.setBorder(this.detanotacreditoConstantesFunciones.resaltarFK_IdNotaCreditoDetaNotaCredito);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdProducto")) {
			index= this.jTabbedPaneBusquedasDetaNotaCredito.indexOfComponent(this.jPanelFK_IdProductoDetaNotaCredito);

			this.jTabbedPaneBusquedasDetaNotaCredito.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasDetaNotaCredito.getComponent(index);

			this.detanotacreditoConstantesFunciones.setResaltarFK_IdProductoDetaNotaCredito(resaltar);

			jPanel.setBorder(this.detanotacreditoConstantesFunciones.resaltarFK_IdProductoDetaNotaCredito);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdTipoDetaNotaCredito")) {
			index= this.jTabbedPaneBusquedasDetaNotaCredito.indexOfComponent(this.jPanelFK_IdTipoDetaNotaCreditoDetaNotaCredito);

			this.jTabbedPaneBusquedasDetaNotaCredito.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasDetaNotaCredito.getComponent(index);

			this.detanotacreditoConstantesFunciones.setResaltarFK_IdTipoDetaNotaCreditoDetaNotaCredito(resaltar);

			jPanel.setBorder(this.detanotacreditoConstantesFunciones.resaltarFK_IdTipoDetaNotaCreditoDetaNotaCredito);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdTipoDevolucionEmpresa")) {
			index= this.jTabbedPaneBusquedasDetaNotaCredito.indexOfComponent(this.jPanelFK_IdTipoDevolucionEmpresaDetaNotaCredito);

			this.jTabbedPaneBusquedasDetaNotaCredito.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasDetaNotaCredito.getComponent(index);

			this.detanotacreditoConstantesFunciones.setResaltarFK_IdTipoDevolucionEmpresaDetaNotaCredito(resaltar);

			jPanel.setBorder(this.detanotacreditoConstantesFunciones.resaltarFK_IdTipoDevolucionEmpresaDetaNotaCredito);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdUnidad")) {
			index= this.jTabbedPaneBusquedasDetaNotaCredito.indexOfComponent(this.jPanelFK_IdUnidadDetaNotaCredito);

			this.jTabbedPaneBusquedasDetaNotaCredito.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasDetaNotaCredito.getComponent(index);

			this.detanotacreditoConstantesFunciones.setResaltarFK_IdUnidadDetaNotaCredito(resaltar);

			jPanel.setBorder(this.detanotacreditoConstantesFunciones.resaltarFK_IdUnidadDetaNotaCredito);
			existe=true;
		}
		

		if(existe) {
			
			this.jTtoolBarDetaNotaCredito.setBorder(resaltar);
			
		}
	}	
	
	//NO FUNCIONA
	public void windowClosed(WindowEvent e) {	
	}
		
	public void windowClosing(WindowEvent e) {	    	    
	}

	public void windowOpened(WindowEvent e) {	    
	}

	public void windowIconified(WindowEvent e) {	    
	}

	public void windowDeiconified(WindowEvent e) {	    
	}

	public void windowActivated(WindowEvent e) {	    
	}

	public void windowDeactivated(WindowEvent e) {	    
	}

	public void windowGainedFocus(WindowEvent e) {	    
	}

	public void windowLostFocus(WindowEvent e) {	    
	}
	
	public void updateControlesFormularioDetaNotaCredito() throws Exception {

		if(this.jInternalFrameDetalleFormDetaNotaCredito==null) { //if(!this.conCargarFormDetalle) {			
			this.inicializarFormDetalle();
		}
		
		this.updateBorderResaltarControlesFormularioDetaNotaCredito();
		this.updateVisibilidadResaltarControlesFormularioDetaNotaCredito();
		this.updateHabilitarResaltarControlesFormularioDetaNotaCredito();
		
	}
	
	public void updateBorderResaltarControlesFormularioDetaNotaCredito() throws Exception {
		if(this.jInternalFrameDetalleFormDetaNotaCredito==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
	
		if(this.detanotacreditoConstantesFunciones.resaltaridDetaNotaCredito!=null && this.jInternalFrameDetalleFormDetaNotaCredito!=null) {this.jInternalFrameDetalleFormDetaNotaCredito.jLabelidDetaNotaCredito.setBorder(this.detanotacreditoConstantesFunciones.resaltaridDetaNotaCredito);}
		if(this.detanotacreditoConstantesFunciones.resaltarid_empresaDetaNotaCredito!=null && this.jInternalFrameDetalleFormDetaNotaCredito!=null) {this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_empresaDetaNotaCredito.setBorder(this.detanotacreditoConstantesFunciones.resaltarid_empresaDetaNotaCredito);}
		if(this.detanotacreditoConstantesFunciones.resaltarid_sucursalDetaNotaCredito!=null && this.jInternalFrameDetalleFormDetaNotaCredito!=null) {this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_sucursalDetaNotaCredito.setBorder(this.detanotacreditoConstantesFunciones.resaltarid_sucursalDetaNotaCredito);}
		if(this.detanotacreditoConstantesFunciones.resaltarid_ejercicioDetaNotaCredito!=null && this.jInternalFrameDetalleFormDetaNotaCredito!=null) {this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_ejercicioDetaNotaCredito.setBorder(this.detanotacreditoConstantesFunciones.resaltarid_ejercicioDetaNotaCredito);}
		if(this.detanotacreditoConstantesFunciones.resaltarid_periodoDetaNotaCredito!=null && this.jInternalFrameDetalleFormDetaNotaCredito!=null) {this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_periodoDetaNotaCredito.setBorder(this.detanotacreditoConstantesFunciones.resaltarid_periodoDetaNotaCredito);}
		if(this.detanotacreditoConstantesFunciones.resaltarid_anioDetaNotaCredito!=null && this.jInternalFrameDetalleFormDetaNotaCredito!=null) {this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_anioDetaNotaCredito.setBorder(this.detanotacreditoConstantesFunciones.resaltarid_anioDetaNotaCredito);}
		if(this.detanotacreditoConstantesFunciones.resaltarid_mesDetaNotaCredito!=null && this.jInternalFrameDetalleFormDetaNotaCredito!=null) {this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_mesDetaNotaCredito.setBorder(this.detanotacreditoConstantesFunciones.resaltarid_mesDetaNotaCredito);}
		if(this.detanotacreditoConstantesFunciones.resaltarid_nota_creditoDetaNotaCredito!=null && this.jInternalFrameDetalleFormDetaNotaCredito!=null) {this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_nota_creditoDetaNotaCredito.setBorder(this.detanotacreditoConstantesFunciones.resaltarid_nota_creditoDetaNotaCredito);}
		if(this.detanotacreditoConstantesFunciones.resaltarid_bodegaDetaNotaCredito!=null && this.jInternalFrameDetalleFormDetaNotaCredito!=null) {this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_bodegaDetaNotaCredito.setBorder(this.detanotacreditoConstantesFunciones.resaltarid_bodegaDetaNotaCredito);}
		if(this.detanotacreditoConstantesFunciones.resaltarid_productoDetaNotaCredito!=null && this.jInternalFrameDetalleFormDetaNotaCredito!=null) {this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_productoDetaNotaCredito.setBorder(this.detanotacreditoConstantesFunciones.resaltarid_productoDetaNotaCredito);}
		if(this.detanotacreditoConstantesFunciones.resaltarid_unidadDetaNotaCredito!=null && this.jInternalFrameDetalleFormDetaNotaCredito!=null) {this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_unidadDetaNotaCredito.setBorder(this.detanotacreditoConstantesFunciones.resaltarid_unidadDetaNotaCredito);}
		if(this.detanotacreditoConstantesFunciones.resaltarid_tipo_deta_nota_creditoDetaNotaCredito!=null && this.jInternalFrameDetalleFormDetaNotaCredito!=null) {this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_tipo_deta_nota_creditoDetaNotaCredito.setBorder(this.detanotacreditoConstantesFunciones.resaltarid_tipo_deta_nota_creditoDetaNotaCredito);}
		if(this.detanotacreditoConstantesFunciones.resaltarid_tipo_devolucion_empresaDetaNotaCredito!=null && this.jInternalFrameDetalleFormDetaNotaCredito!=null) {this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_tipo_devolucion_empresaDetaNotaCredito.setBorder(this.detanotacreditoConstantesFunciones.resaltarid_tipo_devolucion_empresaDetaNotaCredito);}
		if(this.detanotacreditoConstantesFunciones.resaltardescripcionDetaNotaCredito!=null && this.jInternalFrameDetalleFormDetaNotaCredito!=null) {this.jInternalFrameDetalleFormDetaNotaCredito.jTextAreadescripcionDetaNotaCredito.setBorder(this.detanotacreditoConstantesFunciones.resaltardescripcionDetaNotaCredito);}
		if(this.detanotacreditoConstantesFunciones.resaltarcantidadDetaNotaCredito!=null && this.jInternalFrameDetalleFormDetaNotaCredito!=null) {this.jInternalFrameDetalleFormDetaNotaCredito.jTextFieldcantidadDetaNotaCredito.setBorder(this.detanotacreditoConstantesFunciones.resaltarcantidadDetaNotaCredito);}
		if(this.detanotacreditoConstantesFunciones.resaltarprecioDetaNotaCredito!=null && this.jInternalFrameDetalleFormDetaNotaCredito!=null) {this.jInternalFrameDetalleFormDetaNotaCredito.jTextFieldprecioDetaNotaCredito.setBorder(this.detanotacreditoConstantesFunciones.resaltarprecioDetaNotaCredito);}
		if(this.detanotacreditoConstantesFunciones.resaltarmontoDetaNotaCredito!=null && this.jInternalFrameDetalleFormDetaNotaCredito!=null) {this.jInternalFrameDetalleFormDetaNotaCredito.jTextFieldmontoDetaNotaCredito.setBorder(this.detanotacreditoConstantesFunciones.resaltarmontoDetaNotaCredito);}
		if(this.detanotacreditoConstantesFunciones.resaltarcostoDetaNotaCredito!=null && this.jInternalFrameDetalleFormDetaNotaCredito!=null) {this.jInternalFrameDetalleFormDetaNotaCredito.jTextFieldcostoDetaNotaCredito.setBorder(this.detanotacreditoConstantesFunciones.resaltarcostoDetaNotaCredito);}
		if(this.detanotacreditoConstantesFunciones.resaltardescuentoDetaNotaCredito!=null && this.jInternalFrameDetalleFormDetaNotaCredito!=null) {this.jInternalFrameDetalleFormDetaNotaCredito.jTextFielddescuentoDetaNotaCredito.setBorder(this.detanotacreditoConstantesFunciones.resaltardescuentoDetaNotaCredito);}
		if(this.detanotacreditoConstantesFunciones.resaltardescuento2DetaNotaCredito!=null && this.jInternalFrameDetalleFormDetaNotaCredito!=null) {this.jInternalFrameDetalleFormDetaNotaCredito.jTextFielddescuento2DetaNotaCredito.setBorder(this.detanotacreditoConstantesFunciones.resaltardescuento2DetaNotaCredito);}
		if(this.detanotacreditoConstantesFunciones.resaltarimpuestoDetaNotaCredito!=null && this.jInternalFrameDetalleFormDetaNotaCredito!=null) {this.jInternalFrameDetalleFormDetaNotaCredito.jTextFieldimpuestoDetaNotaCredito.setBorder(this.detanotacreditoConstantesFunciones.resaltarimpuestoDetaNotaCredito);}
		if(this.detanotacreditoConstantesFunciones.resaltarporcen_ivaDetaNotaCredito!=null && this.jInternalFrameDetalleFormDetaNotaCredito!=null) {this.jInternalFrameDetalleFormDetaNotaCredito.jTextFieldporcen_ivaDetaNotaCredito.setBorder(this.detanotacreditoConstantesFunciones.resaltarporcen_ivaDetaNotaCredito);}
		if(this.detanotacreditoConstantesFunciones.resaltarporcen_descuenDetaNotaCredito!=null && this.jInternalFrameDetalleFormDetaNotaCredito!=null) {this.jInternalFrameDetalleFormDetaNotaCredito.jTextFieldporcen_descuenDetaNotaCredito.setBorder(this.detanotacreditoConstantesFunciones.resaltarporcen_descuenDetaNotaCredito);}
		if(this.detanotacreditoConstantesFunciones.resaltarporcen_iceDetaNotaCredito!=null && this.jInternalFrameDetalleFormDetaNotaCredito!=null) {this.jInternalFrameDetalleFormDetaNotaCredito.jTextFieldporcen_iceDetaNotaCredito.setBorder(this.detanotacreditoConstantesFunciones.resaltarporcen_iceDetaNotaCredito);}
		if(this.detanotacreditoConstantesFunciones.resaltarsub_totalDetaNotaCredito!=null && this.jInternalFrameDetalleFormDetaNotaCredito!=null) {this.jInternalFrameDetalleFormDetaNotaCredito.jTextFieldsub_totalDetaNotaCredito.setBorder(this.detanotacreditoConstantesFunciones.resaltarsub_totalDetaNotaCredito);}
		if(this.detanotacreditoConstantesFunciones.resaltartotalDetaNotaCredito!=null && this.jInternalFrameDetalleFormDetaNotaCredito!=null) {this.jInternalFrameDetalleFormDetaNotaCredito.jTextFieldtotalDetaNotaCredito.setBorder(this.detanotacreditoConstantesFunciones.resaltartotalDetaNotaCredito);}
		if(this.detanotacreditoConstantesFunciones.resaltarid_centro_costoDetaNotaCredito!=null && this.jInternalFrameDetalleFormDetaNotaCredito!=null) {this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_centro_costoDetaNotaCredito.setBorder(this.detanotacreditoConstantesFunciones.resaltarid_centro_costoDetaNotaCredito);}
		if(this.detanotacreditoConstantesFunciones.resaltarid_empaqueDetaNotaCredito!=null && this.jInternalFrameDetalleFormDetaNotaCredito!=null) {this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_empaqueDetaNotaCredito.setBorder(this.detanotacreditoConstantesFunciones.resaltarid_empaqueDetaNotaCredito);}
		if(this.detanotacreditoConstantesFunciones.resaltarincluye_impuestoDetaNotaCredito!=null && this.jInternalFrameDetalleFormDetaNotaCredito!=null) {this.jInternalFrameDetalleFormDetaNotaCredito.jCheckBoxincluye_impuestoDetaNotaCredito.setBorderPainted(true);this.jInternalFrameDetalleFormDetaNotaCredito.jCheckBoxincluye_impuestoDetaNotaCredito.setBorder(this.detanotacreditoConstantesFunciones.resaltarincluye_impuestoDetaNotaCredito);}
		if(this.detanotacreditoConstantesFunciones.resaltarfecha_emisionDetaNotaCredito!=null && this.jInternalFrameDetalleFormDetaNotaCredito!=null) {this.jInternalFrameDetalleFormDetaNotaCredito.jDateChooserfecha_emisionDetaNotaCredito.setBorder(this.detanotacreditoConstantesFunciones.resaltarfecha_emisionDetaNotaCredito);}
		if(this.detanotacreditoConstantesFunciones.resaltarcodigo_loteDetaNotaCredito!=null && this.jInternalFrameDetalleFormDetaNotaCredito!=null) {this.jInternalFrameDetalleFormDetaNotaCredito.jTextFieldcodigo_loteDetaNotaCredito.setBorder(this.detanotacreditoConstantesFunciones.resaltarcodigo_loteDetaNotaCredito);}
		if(this.detanotacreditoConstantesFunciones.resaltarnumero_cajaDetaNotaCredito!=null && this.jInternalFrameDetalleFormDetaNotaCredito!=null) {this.jInternalFrameDetalleFormDetaNotaCredito.jTextFieldnumero_cajaDetaNotaCredito.setBorder(this.detanotacreditoConstantesFunciones.resaltarnumero_cajaDetaNotaCredito);}
	}
	
	public void updateVisibilidadResaltarControlesFormularioDetaNotaCredito() throws Exception {		
		if(this.jInternalFrameDetalleFormDetaNotaCredito==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
		if(this.jInternalFrameDetalleFormDetaNotaCredito!=null) {
	
		//this.jInternalFrameDetalleFormDetaNotaCredito.jLabelidDetaNotaCredito.setVisible(this.detanotacreditoConstantesFunciones.mostraridDetaNotaCredito);
		this.jInternalFrameDetalleFormDetaNotaCredito.jPanelidDetaNotaCredito.setVisible(this.detanotacreditoConstantesFunciones.mostraridDetaNotaCredito);
		//this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_empresaDetaNotaCredito.setVisible(this.detanotacreditoConstantesFunciones.mostrarid_empresaDetaNotaCredito);
		this.jInternalFrameDetalleFormDetaNotaCredito.jPanelid_empresaDetaNotaCredito.setVisible(this.detanotacreditoConstantesFunciones.mostrarid_empresaDetaNotaCredito);
		//this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_sucursalDetaNotaCredito.setVisible(this.detanotacreditoConstantesFunciones.mostrarid_sucursalDetaNotaCredito);
		this.jInternalFrameDetalleFormDetaNotaCredito.jPanelid_sucursalDetaNotaCredito.setVisible(this.detanotacreditoConstantesFunciones.mostrarid_sucursalDetaNotaCredito);
		//this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_ejercicioDetaNotaCredito.setVisible(this.detanotacreditoConstantesFunciones.mostrarid_ejercicioDetaNotaCredito);
		this.jInternalFrameDetalleFormDetaNotaCredito.jPanelid_ejercicioDetaNotaCredito.setVisible(this.detanotacreditoConstantesFunciones.mostrarid_ejercicioDetaNotaCredito);
		//this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_periodoDetaNotaCredito.setVisible(this.detanotacreditoConstantesFunciones.mostrarid_periodoDetaNotaCredito);
		this.jInternalFrameDetalleFormDetaNotaCredito.jPanelid_periodoDetaNotaCredito.setVisible(this.detanotacreditoConstantesFunciones.mostrarid_periodoDetaNotaCredito);
		//this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_anioDetaNotaCredito.setVisible(this.detanotacreditoConstantesFunciones.mostrarid_anioDetaNotaCredito);
		this.jInternalFrameDetalleFormDetaNotaCredito.jPanelid_anioDetaNotaCredito.setVisible(this.detanotacreditoConstantesFunciones.mostrarid_anioDetaNotaCredito);
		//this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_mesDetaNotaCredito.setVisible(this.detanotacreditoConstantesFunciones.mostrarid_mesDetaNotaCredito);
		this.jInternalFrameDetalleFormDetaNotaCredito.jPanelid_mesDetaNotaCredito.setVisible(this.detanotacreditoConstantesFunciones.mostrarid_mesDetaNotaCredito);
		//this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_nota_creditoDetaNotaCredito.setVisible(this.detanotacreditoConstantesFunciones.mostrarid_nota_creditoDetaNotaCredito);
		this.jInternalFrameDetalleFormDetaNotaCredito.jPanelid_nota_creditoDetaNotaCredito.setVisible(this.detanotacreditoConstantesFunciones.mostrarid_nota_creditoDetaNotaCredito);
		//this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_bodegaDetaNotaCredito.setVisible(this.detanotacreditoConstantesFunciones.mostrarid_bodegaDetaNotaCredito);
		this.jInternalFrameDetalleFormDetaNotaCredito.jPanelid_bodegaDetaNotaCredito.setVisible(this.detanotacreditoConstantesFunciones.mostrarid_bodegaDetaNotaCredito);
		//this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_productoDetaNotaCredito.setVisible(this.detanotacreditoConstantesFunciones.mostrarid_productoDetaNotaCredito);
		this.jInternalFrameDetalleFormDetaNotaCredito.jPanelid_productoDetaNotaCredito.setVisible(this.detanotacreditoConstantesFunciones.mostrarid_productoDetaNotaCredito);
			this.jInternalFrameDetalleFormDetaNotaCredito.jButtonid_productoDetaNotaCredito.setVisible(this.detanotacreditoConstantesFunciones.mostrarid_productoDetaNotaCredito);
		//this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_unidadDetaNotaCredito.setVisible(this.detanotacreditoConstantesFunciones.mostrarid_unidadDetaNotaCredito);
		this.jInternalFrameDetalleFormDetaNotaCredito.jPanelid_unidadDetaNotaCredito.setVisible(this.detanotacreditoConstantesFunciones.mostrarid_unidadDetaNotaCredito);
		//this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_tipo_deta_nota_creditoDetaNotaCredito.setVisible(this.detanotacreditoConstantesFunciones.mostrarid_tipo_deta_nota_creditoDetaNotaCredito);
		this.jInternalFrameDetalleFormDetaNotaCredito.jPanelid_tipo_deta_nota_creditoDetaNotaCredito.setVisible(this.detanotacreditoConstantesFunciones.mostrarid_tipo_deta_nota_creditoDetaNotaCredito);
		//this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_tipo_devolucion_empresaDetaNotaCredito.setVisible(this.detanotacreditoConstantesFunciones.mostrarid_tipo_devolucion_empresaDetaNotaCredito);
		this.jInternalFrameDetalleFormDetaNotaCredito.jPanelid_tipo_devolucion_empresaDetaNotaCredito.setVisible(this.detanotacreditoConstantesFunciones.mostrarid_tipo_devolucion_empresaDetaNotaCredito);
		//this.jInternalFrameDetalleFormDetaNotaCredito.jTextAreadescripcionDetaNotaCredito.setVisible(this.detanotacreditoConstantesFunciones.mostrardescripcionDetaNotaCredito);
		this.jInternalFrameDetalleFormDetaNotaCredito.jPaneldescripcionDetaNotaCredito.setVisible(this.detanotacreditoConstantesFunciones.mostrardescripcionDetaNotaCredito);
		//this.jInternalFrameDetalleFormDetaNotaCredito.jTextFieldcantidadDetaNotaCredito.setVisible(this.detanotacreditoConstantesFunciones.mostrarcantidadDetaNotaCredito);
		this.jInternalFrameDetalleFormDetaNotaCredito.jPanelcantidadDetaNotaCredito.setVisible(this.detanotacreditoConstantesFunciones.mostrarcantidadDetaNotaCredito);
		//this.jInternalFrameDetalleFormDetaNotaCredito.jTextFieldprecioDetaNotaCredito.setVisible(this.detanotacreditoConstantesFunciones.mostrarprecioDetaNotaCredito);
		this.jInternalFrameDetalleFormDetaNotaCredito.jPanelprecioDetaNotaCredito.setVisible(this.detanotacreditoConstantesFunciones.mostrarprecioDetaNotaCredito);
		//this.jInternalFrameDetalleFormDetaNotaCredito.jTextFieldmontoDetaNotaCredito.setVisible(this.detanotacreditoConstantesFunciones.mostrarmontoDetaNotaCredito);
		this.jInternalFrameDetalleFormDetaNotaCredito.jPanelmontoDetaNotaCredito.setVisible(this.detanotacreditoConstantesFunciones.mostrarmontoDetaNotaCredito);
		//this.jInternalFrameDetalleFormDetaNotaCredito.jTextFieldcostoDetaNotaCredito.setVisible(this.detanotacreditoConstantesFunciones.mostrarcostoDetaNotaCredito);
		this.jInternalFrameDetalleFormDetaNotaCredito.jPanelcostoDetaNotaCredito.setVisible(this.detanotacreditoConstantesFunciones.mostrarcostoDetaNotaCredito);
		//this.jInternalFrameDetalleFormDetaNotaCredito.jTextFielddescuentoDetaNotaCredito.setVisible(this.detanotacreditoConstantesFunciones.mostrardescuentoDetaNotaCredito);
		this.jInternalFrameDetalleFormDetaNotaCredito.jPaneldescuentoDetaNotaCredito.setVisible(this.detanotacreditoConstantesFunciones.mostrardescuentoDetaNotaCredito);
		//this.jInternalFrameDetalleFormDetaNotaCredito.jTextFielddescuento2DetaNotaCredito.setVisible(this.detanotacreditoConstantesFunciones.mostrardescuento2DetaNotaCredito);
		this.jInternalFrameDetalleFormDetaNotaCredito.jPaneldescuento2DetaNotaCredito.setVisible(this.detanotacreditoConstantesFunciones.mostrardescuento2DetaNotaCredito);
		//this.jInternalFrameDetalleFormDetaNotaCredito.jTextFieldimpuestoDetaNotaCredito.setVisible(this.detanotacreditoConstantesFunciones.mostrarimpuestoDetaNotaCredito);
		this.jInternalFrameDetalleFormDetaNotaCredito.jPanelimpuestoDetaNotaCredito.setVisible(this.detanotacreditoConstantesFunciones.mostrarimpuestoDetaNotaCredito);
		//this.jInternalFrameDetalleFormDetaNotaCredito.jTextFieldporcen_ivaDetaNotaCredito.setVisible(this.detanotacreditoConstantesFunciones.mostrarporcen_ivaDetaNotaCredito);
		this.jInternalFrameDetalleFormDetaNotaCredito.jPanelporcen_ivaDetaNotaCredito.setVisible(this.detanotacreditoConstantesFunciones.mostrarporcen_ivaDetaNotaCredito);
		//this.jInternalFrameDetalleFormDetaNotaCredito.jTextFieldporcen_descuenDetaNotaCredito.setVisible(this.detanotacreditoConstantesFunciones.mostrarporcen_descuenDetaNotaCredito);
		this.jInternalFrameDetalleFormDetaNotaCredito.jPanelporcen_descuenDetaNotaCredito.setVisible(this.detanotacreditoConstantesFunciones.mostrarporcen_descuenDetaNotaCredito);
		//this.jInternalFrameDetalleFormDetaNotaCredito.jTextFieldporcen_iceDetaNotaCredito.setVisible(this.detanotacreditoConstantesFunciones.mostrarporcen_iceDetaNotaCredito);
		this.jInternalFrameDetalleFormDetaNotaCredito.jPanelporcen_iceDetaNotaCredito.setVisible(this.detanotacreditoConstantesFunciones.mostrarporcen_iceDetaNotaCredito);
		//this.jInternalFrameDetalleFormDetaNotaCredito.jTextFieldsub_totalDetaNotaCredito.setVisible(this.detanotacreditoConstantesFunciones.mostrarsub_totalDetaNotaCredito);
		this.jInternalFrameDetalleFormDetaNotaCredito.jPanelsub_totalDetaNotaCredito.setVisible(this.detanotacreditoConstantesFunciones.mostrarsub_totalDetaNotaCredito);
		//this.jInternalFrameDetalleFormDetaNotaCredito.jTextFieldtotalDetaNotaCredito.setVisible(this.detanotacreditoConstantesFunciones.mostrartotalDetaNotaCredito);
		this.jInternalFrameDetalleFormDetaNotaCredito.jPaneltotalDetaNotaCredito.setVisible(this.detanotacreditoConstantesFunciones.mostrartotalDetaNotaCredito);
		//this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_centro_costoDetaNotaCredito.setVisible(this.detanotacreditoConstantesFunciones.mostrarid_centro_costoDetaNotaCredito);
		this.jInternalFrameDetalleFormDetaNotaCredito.jPanelid_centro_costoDetaNotaCredito.setVisible(this.detanotacreditoConstantesFunciones.mostrarid_centro_costoDetaNotaCredito);
			this.jInternalFrameDetalleFormDetaNotaCredito.jButtonid_centro_costoDetaNotaCredito.setVisible(this.detanotacreditoConstantesFunciones.mostrarid_centro_costoDetaNotaCredito);
		//this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_empaqueDetaNotaCredito.setVisible(this.detanotacreditoConstantesFunciones.mostrarid_empaqueDetaNotaCredito);
		this.jInternalFrameDetalleFormDetaNotaCredito.jPanelid_empaqueDetaNotaCredito.setVisible(this.detanotacreditoConstantesFunciones.mostrarid_empaqueDetaNotaCredito);
		//this.jInternalFrameDetalleFormDetaNotaCredito.jCheckBoxincluye_impuestoDetaNotaCredito.setVisible(this.detanotacreditoConstantesFunciones.mostrarincluye_impuestoDetaNotaCredito);
		this.jInternalFrameDetalleFormDetaNotaCredito.jPanelincluye_impuestoDetaNotaCredito.setVisible(this.detanotacreditoConstantesFunciones.mostrarincluye_impuestoDetaNotaCredito);
		//this.jInternalFrameDetalleFormDetaNotaCredito.jDateChooserfecha_emisionDetaNotaCredito.setVisible(this.detanotacreditoConstantesFunciones.mostrarfecha_emisionDetaNotaCredito);
		this.jInternalFrameDetalleFormDetaNotaCredito.jPanelfecha_emisionDetaNotaCredito.setVisible(this.detanotacreditoConstantesFunciones.mostrarfecha_emisionDetaNotaCredito);
		//this.jInternalFrameDetalleFormDetaNotaCredito.jTextFieldcodigo_loteDetaNotaCredito.setVisible(this.detanotacreditoConstantesFunciones.mostrarcodigo_loteDetaNotaCredito);
		this.jInternalFrameDetalleFormDetaNotaCredito.jPanelcodigo_loteDetaNotaCredito.setVisible(this.detanotacreditoConstantesFunciones.mostrarcodigo_loteDetaNotaCredito);
		//this.jInternalFrameDetalleFormDetaNotaCredito.jTextFieldnumero_cajaDetaNotaCredito.setVisible(this.detanotacreditoConstantesFunciones.mostrarnumero_cajaDetaNotaCredito);
		this.jInternalFrameDetalleFormDetaNotaCredito.jPanelnumero_cajaDetaNotaCredito.setVisible(this.detanotacreditoConstantesFunciones.mostrarnumero_cajaDetaNotaCredito);
		}
	}
	
	public void updateHabilitarResaltarControlesFormularioDetaNotaCredito() throws Exception {
		if(this.jInternalFrameDetalleFormDetaNotaCredito==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
		if(this.jInternalFrameDetalleFormDetaNotaCredito!=null) {
	
		this.jInternalFrameDetalleFormDetaNotaCredito.jLabelidDetaNotaCredito.setEnabled(this.detanotacreditoConstantesFunciones.activaridDetaNotaCredito);
		this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_empresaDetaNotaCredito.setEnabled(this.detanotacreditoConstantesFunciones.activarid_empresaDetaNotaCredito);
		this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_sucursalDetaNotaCredito.setEnabled(this.detanotacreditoConstantesFunciones.activarid_sucursalDetaNotaCredito);
		this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_ejercicioDetaNotaCredito.setEnabled(this.detanotacreditoConstantesFunciones.activarid_ejercicioDetaNotaCredito);
		this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_periodoDetaNotaCredito.setEnabled(this.detanotacreditoConstantesFunciones.activarid_periodoDetaNotaCredito);
		this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_anioDetaNotaCredito.setEnabled(this.detanotacreditoConstantesFunciones.activarid_anioDetaNotaCredito);
		this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_mesDetaNotaCredito.setEnabled(this.detanotacreditoConstantesFunciones.activarid_mesDetaNotaCredito);
		this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_nota_creditoDetaNotaCredito.setEnabled(this.detanotacreditoConstantesFunciones.activarid_nota_creditoDetaNotaCredito);
		this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_bodegaDetaNotaCredito.setEnabled(this.detanotacreditoConstantesFunciones.activarid_bodegaDetaNotaCredito);
		this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_productoDetaNotaCredito.setEnabled(this.detanotacreditoConstantesFunciones.activarid_productoDetaNotaCredito);
			this.jInternalFrameDetalleFormDetaNotaCredito.jButtonid_productoDetaNotaCredito.setEnabled(this.detanotacreditoConstantesFunciones.activarid_productoDetaNotaCredito);
		this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_unidadDetaNotaCredito.setEnabled(this.detanotacreditoConstantesFunciones.activarid_unidadDetaNotaCredito);
		this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_tipo_deta_nota_creditoDetaNotaCredito.setEnabled(this.detanotacreditoConstantesFunciones.activarid_tipo_deta_nota_creditoDetaNotaCredito);
		this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_tipo_devolucion_empresaDetaNotaCredito.setEnabled(this.detanotacreditoConstantesFunciones.activarid_tipo_devolucion_empresaDetaNotaCredito);
		this.jInternalFrameDetalleFormDetaNotaCredito.jTextAreadescripcionDetaNotaCredito.setEnabled(this.detanotacreditoConstantesFunciones.activardescripcionDetaNotaCredito);
		this.jInternalFrameDetalleFormDetaNotaCredito.jTextFieldcantidadDetaNotaCredito.setEnabled(this.detanotacreditoConstantesFunciones.activarcantidadDetaNotaCredito);
		this.jInternalFrameDetalleFormDetaNotaCredito.jTextFieldprecioDetaNotaCredito.setEnabled(this.detanotacreditoConstantesFunciones.activarprecioDetaNotaCredito);
		this.jInternalFrameDetalleFormDetaNotaCredito.jTextFieldmontoDetaNotaCredito.setEnabled(this.detanotacreditoConstantesFunciones.activarmontoDetaNotaCredito);
		this.jInternalFrameDetalleFormDetaNotaCredito.jTextFieldcostoDetaNotaCredito.setEnabled(this.detanotacreditoConstantesFunciones.activarcostoDetaNotaCredito);
		this.jInternalFrameDetalleFormDetaNotaCredito.jTextFielddescuentoDetaNotaCredito.setEnabled(this.detanotacreditoConstantesFunciones.activardescuentoDetaNotaCredito);
		this.jInternalFrameDetalleFormDetaNotaCredito.jTextFielddescuento2DetaNotaCredito.setEnabled(this.detanotacreditoConstantesFunciones.activardescuento2DetaNotaCredito);
		this.jInternalFrameDetalleFormDetaNotaCredito.jTextFieldimpuestoDetaNotaCredito.setEnabled(this.detanotacreditoConstantesFunciones.activarimpuestoDetaNotaCredito);
		this.jInternalFrameDetalleFormDetaNotaCredito.jTextFieldporcen_ivaDetaNotaCredito.setEnabled(this.detanotacreditoConstantesFunciones.activarporcen_ivaDetaNotaCredito);
		this.jInternalFrameDetalleFormDetaNotaCredito.jTextFieldporcen_descuenDetaNotaCredito.setEnabled(this.detanotacreditoConstantesFunciones.activarporcen_descuenDetaNotaCredito);
		this.jInternalFrameDetalleFormDetaNotaCredito.jTextFieldporcen_iceDetaNotaCredito.setEnabled(this.detanotacreditoConstantesFunciones.activarporcen_iceDetaNotaCredito);
		this.jInternalFrameDetalleFormDetaNotaCredito.jTextFieldsub_totalDetaNotaCredito.setEnabled(this.detanotacreditoConstantesFunciones.activarsub_totalDetaNotaCredito);
		this.jInternalFrameDetalleFormDetaNotaCredito.jTextFieldtotalDetaNotaCredito.setEnabled(this.detanotacreditoConstantesFunciones.activartotalDetaNotaCredito);
		this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_centro_costoDetaNotaCredito.setEnabled(this.detanotacreditoConstantesFunciones.activarid_centro_costoDetaNotaCredito);
			this.jInternalFrameDetalleFormDetaNotaCredito.jButtonid_centro_costoDetaNotaCredito.setEnabled(this.detanotacreditoConstantesFunciones.activarid_centro_costoDetaNotaCredito);
		this.jInternalFrameDetalleFormDetaNotaCredito.jComboBoxid_empaqueDetaNotaCredito.setEnabled(this.detanotacreditoConstantesFunciones.activarid_empaqueDetaNotaCredito);
		this.jInternalFrameDetalleFormDetaNotaCredito.jCheckBoxincluye_impuestoDetaNotaCredito.setEnabled(this.detanotacreditoConstantesFunciones.activarincluye_impuestoDetaNotaCredito);
		this.jInternalFrameDetalleFormDetaNotaCredito.jDateChooserfecha_emisionDetaNotaCredito.setEnabled(this.detanotacreditoConstantesFunciones.activarfecha_emisionDetaNotaCredito);
		this.jInternalFrameDetalleFormDetaNotaCredito.jTextFieldcodigo_loteDetaNotaCredito.setEnabled(this.detanotacreditoConstantesFunciones.activarcodigo_loteDetaNotaCredito);
		this.jInternalFrameDetalleFormDetaNotaCredito.jTextFieldnumero_cajaDetaNotaCredito.setEnabled(this.detanotacreditoConstantesFunciones.activarnumero_cajaDetaNotaCredito);
		}
	}
	
		
}