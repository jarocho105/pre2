/*
*AVISO LEGAL
Â© Copyright
*Este programa esta protegido por la ley de derechos de autor.
*La reproduccion o distribucion ilicita de este programa o de cualquiera de
*sus partes esta penado por la ley con severas sanciones civiles y penales,
*y seran objeto de todas las sanciones legales que correspondan.

*Su contenido no puede copiarse para fines comerciales o de otras,
*ni puede mostrarse, incluso en una version modificada, en otros sitios Web.
Solo esta permitido colocar hipervinculos al sitio web.
*/
package com.bydan.erp.facturacion.presentation.swing.jinternalframes;




import com.bydan.erp.seguridad.business.entity.Usuario;
import com.bydan.erp.seguridad.business.entity.ResumenUsuario;
import com.bydan.erp.seguridad.business.entity.Opcion;
import com.bydan.erp.seguridad.business.entity.PerfilOpcion;
import com.bydan.erp.seguridad.business.entity.PerfilCampo;
import com.bydan.erp.seguridad.business.entity.PerfilAccion;
import com.bydan.erp.seguridad.business.entity.ParametroGeneralSg;
import com.bydan.erp.seguridad.business.entity.ParametroGeneralUsuario;
import com.bydan.erp.seguridad.business.entity.Modulo;
import com.bydan.erp.seguridad.business.entity.Accion;

import com.bydan.erp.seguridad.util.SistemaParameterReturnGeneralAdditional;
import com.bydan.erp.seguridad.util.SistemaParameterReturnGeneral;


//import com.bydan.erp.seguridad.business.entity.PerfilAccion;


import com.bydan.erp.seguridad.util.SistemaConstantesFunciones;
import com.bydan.erp.seguridad.util.SistemaConstantesFuncionesAdditional;
import com.bydan.erp.seguridad.business.logic.SistemaLogicAdditional;

import com.bydan.erp.facturacion.util.DetaFormaPagoConstantesFunciones;
import com.bydan.erp.facturacion.util.DetaFormaPagoParameterReturnGeneral;
//import com.bydan.erp.facturacion.util.DetaFormaPagoParameterGeneral;
//import com.bydan.erp.facturacion.presentation.report.source.DetaFormaPagoBean;
import com.bydan.framework.erp.business.dataaccess.ConstantesSql;
import com.bydan.framework.erp.business.entity.Classe;
import com.bydan.framework.erp.business.entity.DatoGeneral;
import com.bydan.framework.erp.business.entity.GeneralEntityParameterGeneral;
import com.bydan.framework.erp.business.entity.OrderBy;
import com.bydan.framework.erp.business.entity.DatoGeneralMinimo;
import com.bydan.framework.erp.business.entity.GeneralEntity;
import com.bydan.framework.erp.business.entity.Mensajes;
import com.bydan.framework.erp.business.entity.GeneralEntityParameterReturnGeneral;
//import com.bydan.framework.erp.business.entity.MaintenanceType;
import com.bydan.framework.erp.util.MaintenanceType;
import com.bydan.framework.erp.util.FuncionesReporte;
import com.bydan.framework.erp.business.logic.DatosCliente;
import com.bydan.framework.erp.business.logic.Pagination;

import com.bydan.erp.facturacion.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.framework.erp.presentation.desktop.swing.TablaGeneralTotalModel;
import com.bydan.framework.erp.presentation.desktop.swing.TablaGeneralOrderByModel;
import com.bydan.framework.erp.presentation.desktop.swing.DateConverter;
import com.bydan.framework.erp.presentation.desktop.swing.DateConverterFromDate;
import com.bydan.framework.erp.presentation.desktop.swing.DateRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.DateEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.BooleanRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.BooleanEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.TextFieldRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.RunnableProceso;
import com.bydan.framework.erp.presentation.desktop.swing.*;
//import com.bydan.framework.erp.presentation.desktop.swing.TextFieldEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.HeaderRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.JInternalFrameBase;
import com.bydan.framework.erp.presentation.desktop.swing.FuncionesSwing;
import com.bydan.framework.erp.presentation.desktop.swing.MainJFrame;
import com.bydan.framework.erp.resources.imagenes.AuxiliarImagenes;
import com.bydan.erp.facturacion.resources.reportes.AuxiliarReportes;


import com.bydan.erp.facturacion.util.*;
import com.bydan.erp.facturacion.business.logic.*;

import com.bydan.erp.seguridad.business.logic.*;
import com.bydan.erp.contabilidad.business.logic.*;
import com.bydan.erp.tesoreria.business.logic.*;

//EJB

//PARAMETROS


//EJB PARAMETROS

import com.bydan.framework.erp.business.logic.*;
import com.bydan.framework.erp.util.*;

import com.bydan.erp.facturacion.business.entity.*;
//import com.bydan.framework.erp.business.entity.ConexionBeanFace;
//import com.bydan.framework.erp.business.entity.Mensajes;


import com.bydan.erp.seguridad.presentation.swing.jinternalframes.*;
import com.bydan.erp.contabilidad.presentation.swing.jinternalframes.*;
import com.bydan.erp.tesoreria.presentation.swing.jinternalframes.*;

import com.bydan.erp.seguridad.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.contabilidad.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.tesoreria.presentation.swing.jinternalframes.auxiliar.*;






import javax.imageio.ImageIO;
import java.net.NetworkInterface;
import java.net.InterfaceAddress;
import java.net.InetAddress;
import javax.naming.InitialContext;
import java.lang.Long;
import java.util.Date;
import java.util.Enumeration;
import java.util.Iterator;
import java.util.Set;
import java.util.HashSet;
import java.util.List;
import java.util.ArrayList;
import java.io.Serializable;
import java.util.Hashtable;
import java.util.Collections;
import java.io.File;
import java.io.FileInputStream;
import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.io.BufferedReader;
import java.io.FileReader;
import java.util.HashMap;
import java.util.Map;
import java.io.PrintWriter;
import java.sql.SQLException;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.transform.stream.StreamSource;

import org.xml.sax.EntityResolver;
import org.xml.sax.InputSource;
import org.xml.sax.SAXException;

import org.w3c.dom.Document;
import org.w3c.dom.Document;
import org.w3c.dom.NodeList;
import org.w3c.dom.Node;
import org.w3c.dom.Element;

import org.apache.poi.hssf.usermodel.HSSFCell;
import org.apache.poi.hssf.usermodel.HSSFRow;
import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellStyle;
import org.apache.poi.ss.usermodel.IndexedColors;
import org.apache.poi.ss.util.CellRangeAddress;

import javax.xml.transform.Transformer;
import javax.xml.transform.TransformerFactory;
import javax.xml.transform.dom.DOMSource;
import javax.xml.transform.stream.StreamResult;


import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JRRuntimeException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.engine.export.JRHtmlExporter;
import net.sf.jasperreports.j2ee.servlets.BaseHttpServlet;
import net.sf.jasperreports.engine.JRExporterParameter;
import net.sf.jasperreports.engine.data.JRBeanArrayDataSource;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import net.sf.jasperreports.view.JasperViewer;

import org.apache.log4j.Logger;

import com.bydan.framework.erp.business.entity.Reporte;


//VALIDACION
import org.hibernate.validator.ClassValidator;
import org.hibernate.validator.InvalidValue;

import net.sf.jasperreports.engine.JREmptyDataSource;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperExportManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperPrintManager;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.JasperRunManager;
import net.sf.jasperreports.engine.export.JExcelApiExporter;
import net.sf.jasperreports.engine.export.JRCsvExporter;
import net.sf.jasperreports.engine.export.JRRtfExporter;
import net.sf.jasperreports.engine.export.JRXlsExporter;
import net.sf.jasperreports.engine.export.JRXlsExporterParameter;
import net.sf.jasperreports.engine.util.JRSaver;
import net.sf.jasperreports.engine.xml.JRXmlWriter;


import com.bydan.erp.facturacion.presentation.web.jsf.sessionbean.*;

import java.util.EventObject;
import javax.swing.*;
import javax.swing.border.Border;
import javax.swing.border.TitledBorder;
import javax.swing.border.EmptyBorder;
import javax.swing.event.*;
import javax.swing.table.AbstractTableModel;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.TableColumn;
import javax.swing.table.TableCellEditor;
import javax.swing.table.TableCellRenderer;
import java.awt.*;
import java.awt.event.*;

import org.jdesktop.beansbinding.Binding.SyncFailure;
import org.jdesktop.beansbinding.BindingListener;
import org.jdesktop.beansbinding.Bindings;
import org.jdesktop.beansbinding.BeanProperty;
import org.jdesktop.beansbinding.ELProperty;
import org.jdesktop.beansbinding.AutoBinding.UpdateStrategy;
import org.jdesktop.beansbinding.PropertyStateEvent;
import org.jdesktop.swingbinding.JComboBoxBinding;
import org.jdesktop.swingbinding.SwingBindings;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeEvent;

import com.toedter.calendar.JDateChooser;


import com.bydan.erp.seguridad.business.entity.*;
import com.bydan.erp.contabilidad.business.entity.*;
import com.bydan.erp.tesoreria.business.entity.*;
import com.bydan.erp.seguridad.util.*;
import com.bydan.erp.contabilidad.util.*;
import com.bydan.erp.tesoreria.util.*;
import com.bydan.erp.seguridad.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.contabilidad.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.tesoreria.presentation.web.jsf.sessionbean.*;


@SuppressWarnings("unused")
public class DetaFormaPagoBeanSwingJInternalFrame extends DetaFormaPagoJInternalFrame implements WindowListener,WindowFocusListener
{				
	
	public static final long serialVersionUID = 1L;
	
	public static Logger logger = Logger.getLogger(DetaFormaPagoBeanSwingJInternalFrame.class);  
	
	public static ClassValidator<DetaFormaPago> detaformapagoValidator = new ClassValidator<DetaFormaPago>(DetaFormaPago.class);
	
	public InvalidValue[] invalidValues=null;
		

	//Ejb Foreign Keys
	
	public DetaFormaPago detaformapago;	
	public DetaFormaPago detaformapagoAux;
	public DetaFormaPago detaformapagoAnterior;//USADO PARA MANEJAR FOCUS GAINED,LOST
	public DetaFormaPago detaformapagoTotales;
	public Long idDetaFormaPagoActual;
	public Long iIdNuevoDetaFormaPago=0L;
	public int rowIndexActual=0;
	
	
	
	
	public String sFinalQueryComboEmpresa="";

	public List<Empresa> empresasForeignKey;

	public List<Empresa> getempresasForeignKey() {
		return empresasForeignKey;
	}

	public void setempresasForeignKey(List<Empresa> empresasForeignKey) {
		this.empresasForeignKey = empresasForeignKey;
	}

	//OBJETO FK ACTUAL
	public Empresa empresaForeignKey;

	public Empresa getempresaForeignKey() {
		return empresaForeignKey;
	}

	public void setempresaForeignKey(Empresa empresaForeignKey) {
		this.empresaForeignKey = empresaForeignKey;
	}

	public String sFinalQueryComboSucursal="";

	public List<Sucursal> sucursalsForeignKey;

	public List<Sucursal> getsucursalsForeignKey() {
		return sucursalsForeignKey;
	}

	public void setsucursalsForeignKey(List<Sucursal> sucursalsForeignKey) {
		this.sucursalsForeignKey = sucursalsForeignKey;
	}

	//OBJETO FK ACTUAL
	public Sucursal sucursalForeignKey;

	public Sucursal getsucursalForeignKey() {
		return sucursalForeignKey;
	}

	public void setsucursalForeignKey(Sucursal sucursalForeignKey) {
		this.sucursalForeignKey = sucursalForeignKey;
	}

	public String sFinalQueryComboEjercicio="";

	public List<Ejercicio> ejerciciosForeignKey;

	public List<Ejercicio> getejerciciosForeignKey() {
		return ejerciciosForeignKey;
	}

	public void setejerciciosForeignKey(List<Ejercicio> ejerciciosForeignKey) {
		this.ejerciciosForeignKey = ejerciciosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Ejercicio ejercicioForeignKey;

	public Ejercicio getejercicioForeignKey() {
		return ejercicioForeignKey;
	}

	public void setejercicioForeignKey(Ejercicio ejercicioForeignKey) {
		this.ejercicioForeignKey = ejercicioForeignKey;
	}

	public String sFinalQueryComboPeriodo="";

	public List<Periodo> periodosForeignKey;

	public List<Periodo> getperiodosForeignKey() {
		return periodosForeignKey;
	}

	public void setperiodosForeignKey(List<Periodo> periodosForeignKey) {
		this.periodosForeignKey = periodosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Periodo periodoForeignKey;

	public Periodo getperiodoForeignKey() {
		return periodoForeignKey;
	}

	public void setperiodoForeignKey(Periodo periodoForeignKey) {
		this.periodoForeignKey = periodoForeignKey;
	}

	public String sFinalQueryComboFactura="";

	public List<Factura> facturasForeignKey;

	public List<Factura> getfacturasForeignKey() {
		return facturasForeignKey;
	}

	public void setfacturasForeignKey(List<Factura> facturasForeignKey) {
		this.facturasForeignKey = facturasForeignKey;
	}

	//OBJETO FK ACTUAL
	public Factura facturaForeignKey;

	public Factura getfacturaForeignKey() {
		return facturaForeignKey;
	}

	public void setfacturaForeignKey(Factura facturaForeignKey) {
		this.facturaForeignKey = facturaForeignKey;
	}

	public String sFinalQueryComboTipoFormaPago="";

	public List<TipoFormaPago> tipoformapagosForeignKey;

	public List<TipoFormaPago> gettipoformapagosForeignKey() {
		return tipoformapagosForeignKey;
	}

	public void settipoformapagosForeignKey(List<TipoFormaPago> tipoformapagosForeignKey) {
		this.tipoformapagosForeignKey = tipoformapagosForeignKey;
	}

	//OBJETO FK ACTUAL
	public TipoFormaPago tipoformapagoForeignKey;

	public TipoFormaPago gettipoformapagoForeignKey() {
		return tipoformapagoForeignKey;
	}

	public void settipoformapagoForeignKey(TipoFormaPago tipoformapagoForeignKey) {
		this.tipoformapagoForeignKey = tipoformapagoForeignKey;
	}

	public String sFinalQueryComboTipoDetaFormaPago="";

	public List<TipoDetaFormaPago> tipodetaformapagosForeignKey;

	public List<TipoDetaFormaPago> gettipodetaformapagosForeignKey() {
		return tipodetaformapagosForeignKey;
	}

	public void settipodetaformapagosForeignKey(List<TipoDetaFormaPago> tipodetaformapagosForeignKey) {
		this.tipodetaformapagosForeignKey = tipodetaformapagosForeignKey;
	}

	//OBJETO FK ACTUAL
	public TipoDetaFormaPago tipodetaformapagoForeignKey;

	public TipoDetaFormaPago gettipodetaformapagoForeignKey() {
		return tipodetaformapagoForeignKey;
	}

	public void settipodetaformapagoForeignKey(TipoDetaFormaPago tipodetaformapagoForeignKey) {
		this.tipodetaformapagoForeignKey = tipodetaformapagoForeignKey;
	}

	public String sFinalQueryComboDetaFormaPagoFactu="";

	public List<DetaFormaPagoFactu> detaformapagofactusForeignKey;

	public List<DetaFormaPagoFactu> getdetaformapagofactusForeignKey() {
		return detaformapagofactusForeignKey;
	}

	public void setdetaformapagofactusForeignKey(List<DetaFormaPagoFactu> detaformapagofactusForeignKey) {
		this.detaformapagofactusForeignKey = detaformapagofactusForeignKey;
	}

	//OBJETO FK ACTUAL
	public DetaFormaPagoFactu detaformapagofactuForeignKey;

	public DetaFormaPagoFactu getdetaformapagofactuForeignKey() {
		return detaformapagofactuForeignKey;
	}

	public void setdetaformapagofactuForeignKey(DetaFormaPagoFactu detaformapagofactuForeignKey) {
		this.detaformapagofactuForeignKey = detaformapagofactuForeignKey;
	}

	public String sFinalQueryComboCuentaContable="";

	public List<CuentaContable> cuentacontablesForeignKey;

	public List<CuentaContable> getcuentacontablesForeignKey() {
		return cuentacontablesForeignKey;
	}

	public void setcuentacontablesForeignKey(List<CuentaContable> cuentacontablesForeignKey) {
		this.cuentacontablesForeignKey = cuentacontablesForeignKey;
	}

	//OBJETO FK ACTUAL
	public CuentaContable cuentacontableForeignKey;

	public CuentaContable getcuentacontableForeignKey() {
		return cuentacontableForeignKey;
	}

	public void setcuentacontableForeignKey(CuentaContable cuentacontableForeignKey) {
		this.cuentacontableForeignKey = cuentacontableForeignKey;
	}

	public String sFinalQueryComboTipoRetencion="";

	public List<TipoRetencion> tiporetencionsForeignKey;

	public List<TipoRetencion> gettiporetencionsForeignKey() {
		return tiporetencionsForeignKey;
	}

	public void settiporetencionsForeignKey(List<TipoRetencion> tiporetencionsForeignKey) {
		this.tiporetencionsForeignKey = tiporetencionsForeignKey;
	}

	//OBJETO FK ACTUAL
	public TipoRetencion tiporetencionForeignKey;

	public TipoRetencion gettiporetencionForeignKey() {
		return tiporetencionForeignKey;
	}

	public void settiporetencionForeignKey(TipoRetencion tiporetencionForeignKey) {
		this.tiporetencionForeignKey = tiporetencionForeignKey;
	}

	public String sFinalQueryComboAnio="";

	public List<Anio> aniosForeignKey;

	public List<Anio> getaniosForeignKey() {
		return aniosForeignKey;
	}

	public void setaniosForeignKey(List<Anio> aniosForeignKey) {
		this.aniosForeignKey = aniosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Anio anioForeignKey;

	public Anio getanioForeignKey() {
		return anioForeignKey;
	}

	public void setanioForeignKey(Anio anioForeignKey) {
		this.anioForeignKey = anioForeignKey;
	}

	public String sFinalQueryComboMes="";

	public List<Mes> messForeignKey;

	public List<Mes> getmessForeignKey() {
		return messForeignKey;
	}

	public void setmessForeignKey(List<Mes> messForeignKey) {
		this.messForeignKey = messForeignKey;
	}

	//OBJETO FK ACTUAL
	public Mes mesForeignKey;

	public Mes getmesForeignKey() {
		return mesForeignKey;
	}

	public void setmesForeignKey(Mes mesForeignKey) {
		this.mesForeignKey = mesForeignKey;
	}

		
	
	
	
	//BUSQUEDA INTERNA FK
	public Long idFacturaActual=0L;

	public Long getidFacturaActual() {
		return idFacturaActual;
	}

	public void setidFacturaActual(Long idFacturaActual) {
		this.idFacturaActual= idFacturaActual;
	}
	public Long idCuentaContableActual=0L;

	public Long getidCuentaContableActual() {
		return idCuentaContableActual;
	}

	public void setidCuentaContableActual(Long idCuentaContableActual) {
		this.idCuentaContableActual= idCuentaContableActual;
	}
	
	

	public Boolean isTienePermisosBancoFormaPago=false;

	public Boolean getIsTienePermisosBancoFormaPago() {
		return isTienePermisosBancoFormaPago;
	}

	public void setIsTienePermisosBancoFormaPago(Boolean isTienePermisosBancoFormaPago) {
		this.isTienePermisosBancoFormaPago= isTienePermisosBancoFormaPago;
	}

	
	
	//FALTA:PARA BUSQUEDAS POR CAMPO EN FORMULARIO
	public String sFinalQueryGeneral="";
	public Boolean isEntroOnLoad=false;
	public Boolean isErrorGuardar=false;
	
	public Boolean isGuardarCambiosEnLote=false;
	public Boolean isCargarCombosDependencia=false;
	public Boolean isSeleccionarTodos=false;
	public Boolean isSeleccionados=false;
	public Boolean conGraficoReporte=false;
	
	public Boolean isPostAccionNuevo=false;
	public Boolean isPostAccionSinCerrar=false;
	public Boolean isPostAccionSinMensaje=false;
	
	
	public Boolean esControlTabla=false;
	
	public Boolean isPermisoTodoDetaFormaPago;
	public Boolean isPermisoNuevoDetaFormaPago;
	public Boolean isPermisoActualizarDetaFormaPago;
	public Boolean isPermisoActualizarOriginalDetaFormaPago;
	public Boolean isPermisoEliminarDetaFormaPago;
	public Boolean isPermisoGuardarCambiosDetaFormaPago;
	public Boolean isPermisoConsultaDetaFormaPago;
	public Boolean isPermisoBusquedaDetaFormaPago;
	public Boolean isPermisoReporteDetaFormaPago;
	public Boolean isPermisoPaginacionMedioDetaFormaPago;
	public Boolean isPermisoPaginacionAltoDetaFormaPago;
	public Boolean isPermisoPaginacionTodoDetaFormaPago;
	public Boolean isPermisoCopiarDetaFormaPago;
	public Boolean isPermisoVerFormDetaFormaPago;
	public Boolean isPermisoDuplicarDetaFormaPago;
	public Boolean isPermisoOrdenDetaFormaPago;
	
	
	public ArrayList<DatoGeneral> arrDatoGeneral;
	public ArrayList<String> arrDatoGeneralNo;
	ArrayList<Classe> classesActual=new ArrayList<Classe>();
	
	public List<Accion> accions;	
	public List<Accion> accionsFormulario;
	
	
	public ArrayList<DatoGeneralMinimo> arrDatoGeneralMinimos;
	
	public ArrayList<Reporte> tiposArchivosReportes;
	public ArrayList<Reporte> tiposArchivosReportesDinamico;
	public ArrayList<Reporte> tiposReportes;
	public ArrayList<Reporte> tiposReportesDinamico;
	public ArrayList<Reporte> tiposGraficosReportes;
	public ArrayList<Reporte> tiposPaginacion;
	public ArrayList<Reporte> tiposRelaciones;
	public ArrayList<Reporte> tiposAcciones;
	public ArrayList<Reporte> tiposAccionesFormulario;
	public ArrayList<Reporte> tiposSeleccionar;
	
	public ArrayList<Reporte> tiposColumnasSelect;
	public ArrayList<Reporte> tiposRelacionesSelect;
	
	
	public Integer iNumeroPaginacion;
	public Integer iNumeroPaginacionPagina;
	public Pagination pagination;
	public DatosCliente datosCliente;
	public DatosDeep datosDeep;
	public String sTipoArchivoReporte="";
	public String sTipoArchivoReporteDinamico="";
	public String sTipoReporte="";
	public String sTipoReporteDinamico="";
	public String sTipoGraficoReporte="";
	public String sTipoPaginacion="";
	public String sTipoRelacion="";
	public String sTipoAccion="";
	public String sTipoAccionFormulario="";
	public String sTipoSeleccionar="";	
	public String sDetalleReporte="";
	public Boolean isMostrarNumeroPaginacion;
	public String sTipoReporteExtra="";
	public String sValorCampoGeneral="";
	public Boolean esReporteDinamico=false;
	public Boolean esReporteAccionProceso=false;
	public Boolean esRecargarFks=false;
	public String sPathReporteDinamico="";
	
	public DetaFormaPagoParameterReturnGeneral detaformapagoReturnGeneral;
	public DetaFormaPagoParameterReturnGeneral detaformapagoParameterGeneral;
	
	

	public BancoFormaPagoLogic bancoformapagoLogic=null;

	public BancoFormaPagoLogic getBancoFormaPagoLogic() {
		return bancoformapagoLogic;
	}

	public void setBancoFormaPagoLogic(BancoFormaPagoLogic bancoformapagoLogic) {
		this.bancoformapagoLogic = bancoformapagoLogic;
	}
 	
	public JasperPrint jasperPrint = null;
	
	public Long lIdUsuarioSesion=0L;				
	
	public Boolean isEsNuevoDetaFormaPago=false;
	public Boolean esParaAccionDesdeFormularioDetaFormaPago=false;
	public Boolean isEsMantenimientoRelacionesRelacionadoUnico=false;
	public Boolean isEsMantenimientoRelaciones=false;
	public Boolean isEsMantenimientoRelacionado=false;	
	public Boolean isContieneImagenes=false;
		
	//public Boolean conTotales=false; //Viene heredado de JInternalFrameBase
	//public Boolean esParaBusquedaForeignKey=false;
	
	
	protected DetaFormaPagoSessionBeanAdditional detaformapagoSessionBeanAdditional=null;
	
	public DetaFormaPagoSessionBeanAdditional getDetaFormaPagoSessionBeanAdditional() {
		return this.detaformapagoSessionBeanAdditional;
	}
	
	public void setDetaFormaPagoSessionBeanAdditional(DetaFormaPagoSessionBeanAdditional detaformapagoSessionBeanAdditional) {
		try {
			this.detaformapagoSessionBeanAdditional=detaformapagoSessionBeanAdditional;
		} catch(Exception e) {
			;
		}
	}
	
	
	
	
	protected DetaFormaPagoBeanSwingJInternalFrameAdditional detaformapagoBeanSwingJInternalFrameAdditional=null;
	//public class DetaFormaPagoBeanSwingJInternalFrame
	
	public DetaFormaPagoBeanSwingJInternalFrameAdditional getDetaFormaPagoBeanSwingJInternalFrameAdditional() {
		return this.detaformapagoBeanSwingJInternalFrameAdditional;
	}
	
	public void setDetaFormaPagoBeanSwingJInternalFrameAdditional(DetaFormaPagoBeanSwingJInternalFrameAdditional detaformapagoBeanSwingJInternalFrameAdditional) {
		try {
			this.detaformapagoBeanSwingJInternalFrameAdditional=detaformapagoBeanSwingJInternalFrameAdditional;
		} catch(Exception e) {
			;
		}
	}
	
	
	
	
	//ESTA EN PADRE
	
	//public DetaFormaPagoLogic detaformapagoLogic;
	public SistemaLogicAdditional sistemaLogicAdditional;
	
	
	public DetaFormaPago detaformapagoBean;
	public DetaFormaPagoConstantesFunciones detaformapagoConstantesFunciones;
	//public DetaFormaPagoParameterReturnGeneral detaformapagoReturnGeneral;
	
	//FK
	
	public EmpresaLogic empresaLogic;
	public SucursalLogic sucursalLogic;
	public EjercicioLogic ejercicioLogic;
	public PeriodoLogic periodoLogic;
	public FacturaLogic facturaLogic;
	public TipoFormaPagoLogic tipoformapagoLogic;
	public TipoDetaFormaPagoLogic tipodetaformapagoLogic;
	public DetaFormaPagoFactuLogic detaformapagofactuLogic;
	public CuentaContableLogic cuentacontableLogic;
	public TipoRetencionLogic tiporetencionLogic;
	public AnioLogic anioLogic;
	public MesLogic mesLogic;
	
	//PARAMETROS
	
	
	//public List<DetaFormaPago> detaformapagos;	
	//public List<DetaFormaPago> detaformapagosEliminados;
	//public List<DetaFormaPago> detaformapagosAux;
	
	public String sAccionMantenimiento="";
	public String sAccionBusqueda="";
	public String sAccionAdicional="";
	public String sUltimaBusqueda="";
	
	public Mensaje mensaje;
	
	
	public String sVisibilidadTablaBusquedas="";					
	public String sVisibilidadTablaElementos="";	
	public String sVisibilidadTablaAcciones="";			
	
	public Boolean isVisibilidadCeldaNuevoDetaFormaPago=false;
	public Boolean isVisibilidadCeldaDuplicarDetaFormaPago=true;
	public Boolean isVisibilidadCeldaCopiarDetaFormaPago=true;
	public Boolean isVisibilidadCeldaVerFormDetaFormaPago=true;
	public Boolean isVisibilidadCeldaOrdenDetaFormaPago=true;
	public Boolean isVisibilidadCeldaNuevoRelacionesDetaFormaPago=false;
	public Boolean isVisibilidadCeldaModificarDetaFormaPago=false;
	public Boolean isVisibilidadCeldaActualizarDetaFormaPago=false;
	public Boolean isVisibilidadCeldaEliminarDetaFormaPago=false;
	public Boolean isVisibilidadCeldaCancelarDetaFormaPago=false;
	public Boolean isVisibilidadCeldaGuardarDetaFormaPago=false;	
	public Boolean isVisibilidadCeldaGuardarCambiosDetaFormaPago=false;	
	
	
	public Boolean isVisibilidadFK_IdAnio=false;
	public Boolean isVisibilidadFK_IdCuentaContable=false;
	public Boolean isVisibilidadFK_IdDetaFormaPagoFactu=false;
	public Boolean isVisibilidadFK_IdEjercicio=false;
	public Boolean isVisibilidadFK_IdEmpresa=false;
	public Boolean isVisibilidadFK_IdFactura=false;
	public Boolean isVisibilidadFK_IdMes=false;
	public Boolean isVisibilidadFK_IdPeriodo=false;
	public Boolean isVisibilidadFK_IdSucursal=false;
	public Boolean isVisibilidadFK_IdTipoDetaFormaPago=false;
	public Boolean isVisibilidadFK_IdTipoFormaPago=false;
	public Boolean isVisibilidadFK_IdTipoRetencion=false;
	
	public Long getiIdNuevoDetaFormaPago() {
		return this.iIdNuevoDetaFormaPago;
	}

	public void setiIdNuevoDetaFormaPago(Long iIdNuevoDetaFormaPago) {
		this.iIdNuevoDetaFormaPago = iIdNuevoDetaFormaPago;
	}
	
	public Long getidDetaFormaPagoActual() {
		return this.idDetaFormaPagoActual;
	}

	public void setidDetaFormaPagoActual(Long idDetaFormaPagoActual) {
		this.idDetaFormaPagoActual = idDetaFormaPagoActual;
	}
	
	public int getrowIndexActual() {
		return this.rowIndexActual;
	}

	public void setrowIndexActual(int rowIndexActual) {
		this.rowIndexActual=rowIndexActual;
	}
	
	
	public DetaFormaPago getdetaformapago() {
		return this.detaformapago;
	}

	public void setdetaformapago(DetaFormaPago detaformapago) {
		this.detaformapago = detaformapago;
	}
	
	public DetaFormaPago getdetaformapagoAux() {
		return this.detaformapagoAux;
	}

	public void setdetaformapagoAux(DetaFormaPago detaformapagoAux) {
		this.detaformapagoAux = detaformapagoAux;
	}				
	
	public DetaFormaPago getdetaformapagoAnterior() {
		return this.detaformapagoAnterior;
	}

	public void setdetaformapagoAnterior(DetaFormaPago detaformapagoAnterior) {
		this.detaformapagoAnterior = detaformapagoAnterior;
	}	
	
	public DetaFormaPago getdetaformapagoTotales() {
		return this.detaformapagoTotales;
	}

	public void setdetaformapagoTotales(DetaFormaPago detaformapagoTotales) {
		this.detaformapagoTotales = detaformapagoTotales;
	}	
	
	public DetaFormaPago getdetaformapagoBean() {
		return this.detaformapagoBean;
	}

	public void setdetaformapagoBean(DetaFormaPago detaformapagoBean) {
		this.detaformapagoBean = detaformapagoBean;
	}	
	
	public DetaFormaPagoParameterReturnGeneral getdetaformapagoReturnGeneral() {
		return this.detaformapagoReturnGeneral;
	}

	public void setdetaformapagoReturnGeneral(DetaFormaPagoParameterReturnGeneral detaformapagoReturnGeneral) {
		this.detaformapagoReturnGeneral = detaformapagoReturnGeneral;
	}	
	
	
	public Long id_anioFK_IdAnio=null;

	public Long getid_anioFK_IdAnio() {
		return this.id_anioFK_IdAnio;
	}

	public void setid_anioFK_IdAnio(Long id_anioFK_IdAnio) {
		this.id_anioFK_IdAnio = id_anioFK_IdAnio;
	}

	public Long id_cuenta_contableFK_IdCuentaContable=null;

	public Long getid_cuenta_contableFK_IdCuentaContable() {
		return this.id_cuenta_contableFK_IdCuentaContable;
	}

	public void setid_cuenta_contableFK_IdCuentaContable(Long id_cuenta_contableFK_IdCuentaContable) {
		this.id_cuenta_contableFK_IdCuentaContable = id_cuenta_contableFK_IdCuentaContable;
	}

	public Long id_deta_forma_pago_factuFK_IdDetaFormaPagoFactu=-1L;

	public Long getid_deta_forma_pago_factuFK_IdDetaFormaPagoFactu() {
		return this.id_deta_forma_pago_factuFK_IdDetaFormaPagoFactu;
	}

	public void setid_deta_forma_pago_factuFK_IdDetaFormaPagoFactu(Long id_deta_forma_pago_factuFK_IdDetaFormaPagoFactu) {
		this.id_deta_forma_pago_factuFK_IdDetaFormaPagoFactu = id_deta_forma_pago_factuFK_IdDetaFormaPagoFactu;
	}

	public Long id_ejercicioFK_IdEjercicio=-1L;

	public Long getid_ejercicioFK_IdEjercicio() {
		return this.id_ejercicioFK_IdEjercicio;
	}

	public void setid_ejercicioFK_IdEjercicio(Long id_ejercicioFK_IdEjercicio) {
		this.id_ejercicioFK_IdEjercicio = id_ejercicioFK_IdEjercicio;
	}

	public Long id_empresaFK_IdEmpresa=-1L;

	public Long getid_empresaFK_IdEmpresa() {
		return this.id_empresaFK_IdEmpresa;
	}

	public void setid_empresaFK_IdEmpresa(Long id_empresaFK_IdEmpresa) {
		this.id_empresaFK_IdEmpresa = id_empresaFK_IdEmpresa;
	}

	public Long id_facturaFK_IdFactura=-1L;

	public Long getid_facturaFK_IdFactura() {
		return this.id_facturaFK_IdFactura;
	}

	public void setid_facturaFK_IdFactura(Long id_facturaFK_IdFactura) {
		this.id_facturaFK_IdFactura = id_facturaFK_IdFactura;
	}

	public Long id_mesFK_IdMes=null;

	public Long getid_mesFK_IdMes() {
		return this.id_mesFK_IdMes;
	}

	public void setid_mesFK_IdMes(Long id_mesFK_IdMes) {
		this.id_mesFK_IdMes = id_mesFK_IdMes;
	}

	public Long id_periodoFK_IdPeriodo=-1L;

	public Long getid_periodoFK_IdPeriodo() {
		return this.id_periodoFK_IdPeriodo;
	}

	public void setid_periodoFK_IdPeriodo(Long id_periodoFK_IdPeriodo) {
		this.id_periodoFK_IdPeriodo = id_periodoFK_IdPeriodo;
	}

	public Long id_sucursalFK_IdSucursal=-1L;

	public Long getid_sucursalFK_IdSucursal() {
		return this.id_sucursalFK_IdSucursal;
	}

	public void setid_sucursalFK_IdSucursal(Long id_sucursalFK_IdSucursal) {
		this.id_sucursalFK_IdSucursal = id_sucursalFK_IdSucursal;
	}

	public Long id_tipo_deta_forma_pagoFK_IdTipoDetaFormaPago=-1L;

	public Long getid_tipo_deta_forma_pagoFK_IdTipoDetaFormaPago() {
		return this.id_tipo_deta_forma_pagoFK_IdTipoDetaFormaPago;
	}

	public void setid_tipo_deta_forma_pagoFK_IdTipoDetaFormaPago(Long id_tipo_deta_forma_pagoFK_IdTipoDetaFormaPago) {
		this.id_tipo_deta_forma_pagoFK_IdTipoDetaFormaPago = id_tipo_deta_forma_pagoFK_IdTipoDetaFormaPago;
	}

	public Long id_tipo_forma_pagoFK_IdTipoFormaPago=-1L;

	public Long getid_tipo_forma_pagoFK_IdTipoFormaPago() {
		return this.id_tipo_forma_pagoFK_IdTipoFormaPago;
	}

	public void setid_tipo_forma_pagoFK_IdTipoFormaPago(Long id_tipo_forma_pagoFK_IdTipoFormaPago) {
		this.id_tipo_forma_pagoFK_IdTipoFormaPago = id_tipo_forma_pagoFK_IdTipoFormaPago;
	}

	public Long id_tipo_retencionFK_IdTipoRetencion=-1L;

	public Long getid_tipo_retencionFK_IdTipoRetencion() {
		return this.id_tipo_retencionFK_IdTipoRetencion;
	}

	public void setid_tipo_retencionFK_IdTipoRetencion(Long id_tipo_retencionFK_IdTipoRetencion) {
		this.id_tipo_retencionFK_IdTipoRetencion = id_tipo_retencionFK_IdTipoRetencion;
	}

		
	
	//ELEMENTOS TABLAS PARAMETOS
	
	
	
	
	
	
	//ELEMENTOS TABLAS PARAMETOS_FIN
	
	
	public DetaFormaPagoLogic getDetaFormaPagoLogic()	{		
		return detaformapagoLogic;
	}

	public void setDetaFormaPagoLogic(DetaFormaPagoLogic detaformapagoLogic) {
		this.detaformapagoLogic = detaformapagoLogic;
	}
	
	
	public void setsFinalQueryGeneral(String sFinalQueryGeneral) {
		this.sFinalQueryGeneral=sFinalQueryGeneral;
	}
	
	public String getsFinalQueryGeneral() {
		return this.sFinalQueryGeneral;
	}
		
	public Boolean getIsGuardarCambiosEnLote() {
		return isGuardarCambiosEnLote;
	}

	public void setIsGuardarCambiosEnLote(Boolean isGuardarCambiosEnLote) {
		this.isGuardarCambiosEnLote = isGuardarCambiosEnLote;
	}
	
	public Boolean getIsCargarCombosDependencia() {
		return isCargarCombosDependencia;
	}

	public void setIsCargarCombosDependencia(Boolean isCargarCombosDependencia) {
		this.isCargarCombosDependencia = isCargarCombosDependencia;
	}
	
	public Boolean getIsEsNuevoDetaFormaPago() {
		return isEsNuevoDetaFormaPago;
	}

	public void setIsEsNuevoDetaFormaPago(Boolean isEsNuevoDetaFormaPago) {
		this.isEsNuevoDetaFormaPago = isEsNuevoDetaFormaPago;
	}

	public Boolean getEsParaAccionDesdeFormularioDetaFormaPago() {
		return esParaAccionDesdeFormularioDetaFormaPago;
	}
	
	public void setEsParaAccionDesdeFormularioDetaFormaPago(Boolean esParaAccionDesdeFormularioDetaFormaPago) {
		this.esParaAccionDesdeFormularioDetaFormaPago = esParaAccionDesdeFormularioDetaFormaPago;
	}
	
	public Boolean getIsEsMantenimientoRelacionesRelacionadoUnico() {
		return isEsMantenimientoRelacionesRelacionadoUnico;
	}

	public void setIsEsMantenimientoRelacionesRelacionadoUnico(Boolean isEsMantenimientoRelacionesRelacionadoUnico) {
		this.isEsMantenimientoRelacionesRelacionadoUnico = isEsMantenimientoRelacionesRelacionadoUnico;
	}

	public Boolean getIsEsMantenimientoRelaciones() {
		return isEsMantenimientoRelaciones;
	}

	public void setIsEsMantenimientoRelaciones(Boolean isEsMantenimientoRelaciones) {
		this.isEsMantenimientoRelaciones = isEsMantenimientoRelaciones;
	}

	public Boolean getIsEsMantenimientoRelacionado() {
		return isEsMantenimientoRelacionado;
	}

	public void setIsEsMantenimientoRelacionado(Boolean isEsMantenimientoRelacionado) {
		this.isEsMantenimientoRelacionado = isEsMantenimientoRelacionado;
	}

	public Boolean getesParaBusquedaForeignKey() {
		return esParaBusquedaForeignKey;
	}

	public void setesParaBusquedaForeignKey(Boolean esParaBusquedaForeignKey) {
		this.esParaBusquedaForeignKey = esParaBusquedaForeignKey;
	}

	public Boolean getIsContieneImagenes() {
		return isContieneImagenes;
	}

	public void setIsContieneImagenes(Boolean isContieneImagenes) {
		this.isContieneImagenes = isContieneImagenes;
	}		
	
	
	public void cargarCombosEmpresasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.empresasForeignKey=new ArrayList<Empresa>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			EmpresaLogic empresaLogic=new EmpresaLogic();

			//empresaLogic.getEmpresaDataAccess().setIsForForeingKeyData(true);

			if(this.detaformapagoSessionBean==null) {
				this.detaformapagoSessionBean=new DetaFormaPagoSessionBean();
			}

			if(!this.detaformapagoSessionBean.getisBusquedaDesdeForeignKeySesionEmpresa()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//empresaLogic.getEmpresaDataAccess().setIsForForeingKeyData(true);

					empresaLogic.getTodosEmpresasWithConnection(sFinalQuery,new Pagination());

					this.empresasForeignKey=empresaLogic.getEmpresas();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaEmpresa(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					empresaLogic.getEntityWithConnection(detaformapagoSessionBean.getlidEmpresaActual());
					this.empresasForeignKey.add(empresaLogic.getEmpresa());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosSucursalsForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.sucursalsForeignKey=new ArrayList<Sucursal>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			SucursalLogic sucursalLogic=new SucursalLogic();

			//sucursalLogic.getSucursalDataAccess().setIsForForeingKeyData(true);

			if(this.detaformapagoSessionBean==null) {
				this.detaformapagoSessionBean=new DetaFormaPagoSessionBean();
			}

			if(!this.detaformapagoSessionBean.getisBusquedaDesdeForeignKeySesionSucursal()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//sucursalLogic.getSucursalDataAccess().setIsForForeingKeyData(true);

					sucursalLogic.getTodosSucursalsWithConnection(sFinalQuery,new Pagination());

					this.sucursalsForeignKey=sucursalLogic.getSucursals();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaSucursal(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					sucursalLogic.getEntityWithConnection(detaformapagoSessionBean.getlidSucursalActual());
					this.sucursalsForeignKey.add(sucursalLogic.getSucursal());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosEjerciciosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.ejerciciosForeignKey=new ArrayList<Ejercicio>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			EjercicioLogic ejercicioLogic=new EjercicioLogic();

			//ejercicioLogic.getEjercicioDataAccess().setIsForForeingKeyData(true);

			if(this.detaformapagoSessionBean==null) {
				this.detaformapagoSessionBean=new DetaFormaPagoSessionBean();
			}

			if(!this.detaformapagoSessionBean.getisBusquedaDesdeForeignKeySesionEjercicio()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//ejercicioLogic.getEjercicioDataAccess().setIsForForeingKeyData(true);

					ejercicioLogic.getTodosEjerciciosWithConnection(sFinalQuery,new Pagination());

					this.ejerciciosForeignKey=ejercicioLogic.getEjercicios();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaEjercicio(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					ejercicioLogic.getEntityWithConnection(detaformapagoSessionBean.getlidEjercicioActual());
					this.ejerciciosForeignKey.add(ejercicioLogic.getEjercicio());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosPeriodosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.periodosForeignKey=new ArrayList<Periodo>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			PeriodoLogic periodoLogic=new PeriodoLogic();

			//periodoLogic.getPeriodoDataAccess().setIsForForeingKeyData(true);

			if(this.detaformapagoSessionBean==null) {
				this.detaformapagoSessionBean=new DetaFormaPagoSessionBean();
			}

			if(!this.detaformapagoSessionBean.getisBusquedaDesdeForeignKeySesionPeriodo()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//periodoLogic.getPeriodoDataAccess().setIsForForeingKeyData(true);

					periodoLogic.getTodosPeriodosWithConnection(sFinalQuery,new Pagination());

					this.periodosForeignKey=periodoLogic.getPeriodos();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaPeriodo(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					periodoLogic.getEntityWithConnection(detaformapagoSessionBean.getlidPeriodoActual());
					this.periodosForeignKey.add(periodoLogic.getPeriodo());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosFacturasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.facturasForeignKey=new ArrayList<Factura>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			FacturaLogic facturaLogic=new FacturaLogic();

			//facturaLogic.getFacturaDataAccess().setIsForForeingKeyData(true);

			if(this.detaformapagoSessionBean==null) {
				this.detaformapagoSessionBean=new DetaFormaPagoSessionBean();
			}

			if(!this.detaformapagoSessionBean.getisBusquedaDesdeForeignKeySesionFactura()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//facturaLogic.getFacturaDataAccess().setIsForForeingKeyData(true);

					facturaLogic.getTodosFacturasWithConnection(sFinalQuery,new Pagination());

					this.facturasForeignKey=facturaLogic.getFacturas();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaFactura(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					facturaLogic.getEntityWithConnection(detaformapagoSessionBean.getlidFacturaActual());
					this.facturasForeignKey.add(facturaLogic.getFactura());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTipoFormaPagosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.tipoformapagosForeignKey=new ArrayList<TipoFormaPago>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			TipoFormaPagoLogic tipoformapagoLogic=new TipoFormaPagoLogic();

			//tipoformapagoLogic.getTipoFormaPagoDataAccess().setIsForForeingKeyData(true);

			if(this.detaformapagoSessionBean==null) {
				this.detaformapagoSessionBean=new DetaFormaPagoSessionBean();
			}

			if(!this.detaformapagoSessionBean.getisBusquedaDesdeForeignKeySesionTipoFormaPago()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//tipoformapagoLogic.getTipoFormaPagoDataAccess().setIsForForeingKeyData(true);

					tipoformapagoLogic.getTodosTipoFormaPagosWithConnection(sFinalQuery,new Pagination());

					this.tipoformapagosForeignKey=tipoformapagoLogic.getTipoFormaPagos();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTipoFormaPago(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipoformapagoLogic.getEntityWithConnection(detaformapagoSessionBean.getlidTipoFormaPagoActual());
					this.tipoformapagosForeignKey.add(tipoformapagoLogic.getTipoFormaPago());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTipoDetaFormaPagosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.tipodetaformapagosForeignKey=new ArrayList<TipoDetaFormaPago>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			TipoDetaFormaPagoLogic tipodetaformapagoLogic=new TipoDetaFormaPagoLogic();

			//tipodetaformapagoLogic.getTipoDetaFormaPagoDataAccess().setIsForForeingKeyData(true);

			if(this.detaformapagoSessionBean==null) {
				this.detaformapagoSessionBean=new DetaFormaPagoSessionBean();
			}

			if(!this.detaformapagoSessionBean.getisBusquedaDesdeForeignKeySesionTipoDetaFormaPago()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//tipodetaformapagoLogic.getTipoDetaFormaPagoDataAccess().setIsForForeingKeyData(true);

					tipodetaformapagoLogic.getTodosTipoDetaFormaPagosWithConnection(sFinalQuery,new Pagination());

					this.tipodetaformapagosForeignKey=tipodetaformapagoLogic.getTipoDetaFormaPagos();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTipoDetaFormaPago(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipodetaformapagoLogic.getEntityWithConnection(detaformapagoSessionBean.getlidTipoDetaFormaPagoActual());
					this.tipodetaformapagosForeignKey.add(tipodetaformapagoLogic.getTipoDetaFormaPago());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosDetaFormaPagoFactusForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.detaformapagofactusForeignKey=new ArrayList<DetaFormaPagoFactu>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			DetaFormaPagoFactuLogic detaformapagofactuLogic=new DetaFormaPagoFactuLogic();

			//detaformapagofactuLogic.getDetaFormaPagoFactuDataAccess().setIsForForeingKeyData(true);

			if(this.detaformapagoSessionBean==null) {
				this.detaformapagoSessionBean=new DetaFormaPagoSessionBean();
			}

			if(!this.detaformapagoSessionBean.getisBusquedaDesdeForeignKeySesionDetaFormaPagoFactu()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//detaformapagofactuLogic.getDetaFormaPagoFactuDataAccess().setIsForForeingKeyData(true);

					detaformapagofactuLogic.getTodosDetaFormaPagoFactusWithConnection(sFinalQuery,new Pagination());

					this.detaformapagofactusForeignKey=detaformapagofactuLogic.getDetaFormaPagoFactus();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaDetaFormaPagoFactu(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					detaformapagofactuLogic.getEntityWithConnection(detaformapagoSessionBean.getlidDetaFormaPagoFactuActual());
					this.detaformapagofactusForeignKey.add(detaformapagofactuLogic.getDetaFormaPagoFactu());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosCuentaContablesForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.cuentacontablesForeignKey=new ArrayList<CuentaContable>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			CuentaContableLogic cuentacontableLogic=new CuentaContableLogic();

			//cuentacontableLogic.getCuentaContableDataAccess().setIsForForeingKeyData(true);

			if(this.detaformapagoSessionBean==null) {
				this.detaformapagoSessionBean=new DetaFormaPagoSessionBean();
			}

			if(!this.detaformapagoSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContable()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//cuentacontableLogic.getCuentaContableDataAccess().setIsForForeingKeyData(true);

					cuentacontableLogic.getTodosCuentaContablesWithConnection(sFinalQuery,new Pagination());

					this.cuentacontablesForeignKey=cuentacontableLogic.getCuentaContables();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaCuentaContable(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					cuentacontableLogic.getEntityWithConnection(detaformapagoSessionBean.getlidCuentaContableActual());
					this.cuentacontablesForeignKey.add(cuentacontableLogic.getCuentaContable());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTipoRetencionsForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.tiporetencionsForeignKey=new ArrayList<TipoRetencion>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			TipoRetencionLogic tiporetencionLogic=new TipoRetencionLogic();

			//tiporetencionLogic.getTipoRetencionDataAccess().setIsForForeingKeyData(true);

			if(this.detaformapagoSessionBean==null) {
				this.detaformapagoSessionBean=new DetaFormaPagoSessionBean();
			}

			if(!this.detaformapagoSessionBean.getisBusquedaDesdeForeignKeySesionTipoRetencion()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//tiporetencionLogic.getTipoRetencionDataAccess().setIsForForeingKeyData(true);

					tiporetencionLogic.getTodosTipoRetencionsWithConnection(sFinalQuery,new Pagination());

					this.tiporetencionsForeignKey=tiporetencionLogic.getTipoRetencions();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTipoRetencion(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					tiporetencionLogic.getEntityWithConnection(detaformapagoSessionBean.getlidTipoRetencionActual());
					this.tiporetencionsForeignKey.add(tiporetencionLogic.getTipoRetencion());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosAniosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.aniosForeignKey=new ArrayList<Anio>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			AnioLogic anioLogic=new AnioLogic();

			//anioLogic.getAnioDataAccess().setIsForForeingKeyData(true);

			if(this.detaformapagoSessionBean==null) {
				this.detaformapagoSessionBean=new DetaFormaPagoSessionBean();
			}

			if(!this.detaformapagoSessionBean.getisBusquedaDesdeForeignKeySesionAnio()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//anioLogic.getAnioDataAccess().setIsForForeingKeyData(true);

					anioLogic.getTodosAniosWithConnection(sFinalQuery,new Pagination());

					this.aniosForeignKey=anioLogic.getAnios();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaAnio(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					anioLogic.getEntityWithConnection(detaformapagoSessionBean.getlidAnioActual());
					this.aniosForeignKey.add(anioLogic.getAnio());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosMessForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.messForeignKey=new ArrayList<Mes>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			MesLogic mesLogic=new MesLogic();

			//mesLogic.getMesDataAccess().setIsForForeingKeyData(true);

			if(this.detaformapagoSessionBean==null) {
				this.detaformapagoSessionBean=new DetaFormaPagoSessionBean();
			}

			if(!this.detaformapagoSessionBean.getisBusquedaDesdeForeignKeySesionMes()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//mesLogic.getMesDataAccess().setIsForForeingKeyData(true);

					mesLogic.getTodosMessWithConnection(sFinalQuery,new Pagination());

					this.messForeignKey=mesLogic.getMess();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaMes(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					mesLogic.getEntityWithConnection(detaformapagoSessionBean.getlidMesActual());
					this.messForeignKey.add(mesLogic.getMes());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	
	
	public void setActualEmpresaForeignKey(Long idEmpresaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Empresa  empresaTemp=null;

			for(Empresa empresaAux:empresasForeignKey) {
				if(empresaAux.getId()!=null && empresaAux.getId().equals(idEmpresaSeleccionado)) {
					empresaTemp=empresaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(empresaTemp!=null) {

					if(this.detaformapago!=null) {
						this.detaformapago.setEmpresa(empresaTemp);
					}

					if(this.jInternalFrameDetalleFormDetaFormaPago!=null) {
						this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_empresaDetaFormaPago.setSelectedItem(empresaTemp);
					}
				} else {
					//jComboBoxid_empresaDetaFormaPago.setSelectedItem(empresaTemp);
					if(this.jInternalFrameDetalleFormDetaFormaPago!=null) {
						if(this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_empresaDetaFormaPago.getItemCount()>0) {
							this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_empresaDetaFormaPago.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualEmpresaForeignKeyDescripcion(Long idEmpresaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Empresa  empresaTemp=null;

			for(Empresa empresaAux:empresasForeignKey) {
				if(empresaAux.getId()!=null && empresaAux.getId().equals(idEmpresaSeleccionado)) {
					empresaTemp=empresaAux;
					break;
				}
			}


			sDescripcion=EmpresaConstantesFunciones.getEmpresaDescripcion(empresaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualEmpresaForeignKeyGenerico(Long idEmpresaSeleccionado,JComboBox jComboBoxid_empresaDetaFormaPagoGenerico)throws Exception
	{
		try
		{
			Empresa  empresaTemp=null;

			for(Empresa empresaAux:empresasForeignKey) {
				if(empresaAux.getId()!=null && empresaAux.getId().equals(idEmpresaSeleccionado)) {
					empresaTemp=empresaAux;
					break;
				}
			}

			if(empresaTemp!=null) {
				jComboBoxid_empresaDetaFormaPagoGenerico.setSelectedItem(empresaTemp);
			} else {
				if(jComboBoxid_empresaDetaFormaPagoGenerico!=null && jComboBoxid_empresaDetaFormaPagoGenerico.getItemCount()>0) {
					jComboBoxid_empresaDetaFormaPagoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualSucursalForeignKey(Long idSucursalSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Sucursal  sucursalTemp=null;

			for(Sucursal sucursalAux:sucursalsForeignKey) {
				if(sucursalAux.getId()!=null && sucursalAux.getId().equals(idSucursalSeleccionado)) {
					sucursalTemp=sucursalAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(sucursalTemp!=null) {

					if(this.detaformapago!=null) {
						this.detaformapago.setSucursal(sucursalTemp);
					}

					if(this.jInternalFrameDetalleFormDetaFormaPago!=null) {
						this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_sucursalDetaFormaPago.setSelectedItem(sucursalTemp);
					}
				} else {
					//jComboBoxid_sucursalDetaFormaPago.setSelectedItem(sucursalTemp);
					if(this.jInternalFrameDetalleFormDetaFormaPago!=null) {
						if(this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_sucursalDetaFormaPago.getItemCount()>0) {
							this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_sucursalDetaFormaPago.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualSucursalForeignKeyDescripcion(Long idSucursalSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Sucursal  sucursalTemp=null;

			for(Sucursal sucursalAux:sucursalsForeignKey) {
				if(sucursalAux.getId()!=null && sucursalAux.getId().equals(idSucursalSeleccionado)) {
					sucursalTemp=sucursalAux;
					break;
				}
			}


			sDescripcion=SucursalConstantesFunciones.getSucursalDescripcion(sucursalTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualSucursalForeignKeyGenerico(Long idSucursalSeleccionado,JComboBox jComboBoxid_sucursalDetaFormaPagoGenerico)throws Exception
	{
		try
		{
			Sucursal  sucursalTemp=null;

			for(Sucursal sucursalAux:sucursalsForeignKey) {
				if(sucursalAux.getId()!=null && sucursalAux.getId().equals(idSucursalSeleccionado)) {
					sucursalTemp=sucursalAux;
					break;
				}
			}

			if(sucursalTemp!=null) {
				jComboBoxid_sucursalDetaFormaPagoGenerico.setSelectedItem(sucursalTemp);
			} else {
				if(jComboBoxid_sucursalDetaFormaPagoGenerico!=null && jComboBoxid_sucursalDetaFormaPagoGenerico.getItemCount()>0) {
					jComboBoxid_sucursalDetaFormaPagoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualEjercicioForeignKey(Long idEjercicioSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Ejercicio  ejercicioTemp=null;

			for(Ejercicio ejercicioAux:ejerciciosForeignKey) {
				if(ejercicioAux.getId()!=null && ejercicioAux.getId().equals(idEjercicioSeleccionado)) {
					ejercicioTemp=ejercicioAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(ejercicioTemp!=null) {

					if(this.detaformapago!=null) {
						this.detaformapago.setEjercicio(ejercicioTemp);
					}

					if(this.jInternalFrameDetalleFormDetaFormaPago!=null) {
						this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_ejercicioDetaFormaPago.setSelectedItem(ejercicioTemp);
					}
				} else {
					//jComboBoxid_ejercicioDetaFormaPago.setSelectedItem(ejercicioTemp);
					if(this.jInternalFrameDetalleFormDetaFormaPago!=null) {
						if(this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_ejercicioDetaFormaPago.getItemCount()>0) {
							this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_ejercicioDetaFormaPago.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualEjercicioForeignKeyDescripcion(Long idEjercicioSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Ejercicio  ejercicioTemp=null;

			for(Ejercicio ejercicioAux:ejerciciosForeignKey) {
				if(ejercicioAux.getId()!=null && ejercicioAux.getId().equals(idEjercicioSeleccionado)) {
					ejercicioTemp=ejercicioAux;
					break;
				}
			}


			sDescripcion=EjercicioConstantesFunciones.getEjercicioDescripcion(ejercicioTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualEjercicioForeignKeyGenerico(Long idEjercicioSeleccionado,JComboBox jComboBoxid_ejercicioDetaFormaPagoGenerico)throws Exception
	{
		try
		{
			Ejercicio  ejercicioTemp=null;

			for(Ejercicio ejercicioAux:ejerciciosForeignKey) {
				if(ejercicioAux.getId()!=null && ejercicioAux.getId().equals(idEjercicioSeleccionado)) {
					ejercicioTemp=ejercicioAux;
					break;
				}
			}

			if(ejercicioTemp!=null) {
				jComboBoxid_ejercicioDetaFormaPagoGenerico.setSelectedItem(ejercicioTemp);
			} else {
				if(jComboBoxid_ejercicioDetaFormaPagoGenerico!=null && jComboBoxid_ejercicioDetaFormaPagoGenerico.getItemCount()>0) {
					jComboBoxid_ejercicioDetaFormaPagoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualPeriodoForeignKey(Long idPeriodoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Periodo  periodoTemp=null;

			for(Periodo periodoAux:periodosForeignKey) {
				if(periodoAux.getId()!=null && periodoAux.getId().equals(idPeriodoSeleccionado)) {
					periodoTemp=periodoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(periodoTemp!=null) {

					if(this.detaformapago!=null) {
						this.detaformapago.setPeriodo(periodoTemp);
					}

					if(this.jInternalFrameDetalleFormDetaFormaPago!=null) {
						this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_periodoDetaFormaPago.setSelectedItem(periodoTemp);
					}
				} else {
					//jComboBoxid_periodoDetaFormaPago.setSelectedItem(periodoTemp);
					if(this.jInternalFrameDetalleFormDetaFormaPago!=null) {
						if(this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_periodoDetaFormaPago.getItemCount()>0) {
							this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_periodoDetaFormaPago.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualPeriodoForeignKeyDescripcion(Long idPeriodoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Periodo  periodoTemp=null;

			for(Periodo periodoAux:periodosForeignKey) {
				if(periodoAux.getId()!=null && periodoAux.getId().equals(idPeriodoSeleccionado)) {
					periodoTemp=periodoAux;
					break;
				}
			}


			sDescripcion=PeriodoConstantesFunciones.getPeriodoDescripcion(periodoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualPeriodoForeignKeyGenerico(Long idPeriodoSeleccionado,JComboBox jComboBoxid_periodoDetaFormaPagoGenerico)throws Exception
	{
		try
		{
			Periodo  periodoTemp=null;

			for(Periodo periodoAux:periodosForeignKey) {
				if(periodoAux.getId()!=null && periodoAux.getId().equals(idPeriodoSeleccionado)) {
					periodoTemp=periodoAux;
					break;
				}
			}

			if(periodoTemp!=null) {
				jComboBoxid_periodoDetaFormaPagoGenerico.setSelectedItem(periodoTemp);
			} else {
				if(jComboBoxid_periodoDetaFormaPagoGenerico!=null && jComboBoxid_periodoDetaFormaPagoGenerico.getItemCount()>0) {
					jComboBoxid_periodoDetaFormaPagoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualFacturaForeignKey(Long idFacturaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Factura  facturaTemp=null;

			for(Factura facturaAux:facturasForeignKey) {
				if(facturaAux.getId()!=null && facturaAux.getId().equals(idFacturaSeleccionado)) {
					facturaTemp=facturaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(facturaTemp!=null) {

					if(this.detaformapago!=null) {
						this.detaformapago.setFactura(facturaTemp);
					}

					if(this.jInternalFrameDetalleFormDetaFormaPago!=null) {
						this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_facturaDetaFormaPago.setSelectedItem(facturaTemp);
					}
				} else {
					//jComboBoxid_facturaDetaFormaPago.setSelectedItem(facturaTemp);
					if(this.jInternalFrameDetalleFormDetaFormaPago!=null) {
						if(this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_facturaDetaFormaPago.getItemCount()>0) {
							this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_facturaDetaFormaPago.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdFactura") || sFormularioTipoBusqueda.equals("Todos")){
					if(facturaTemp!=null && jComboBoxid_facturaFK_IdFacturaDetaFormaPago!=null) {
						jComboBoxid_facturaFK_IdFacturaDetaFormaPago.setSelectedItem(facturaTemp);
					} else {
						if(jComboBoxid_facturaFK_IdFacturaDetaFormaPago!=null) {
							//jComboBoxid_facturaFK_IdFacturaDetaFormaPago.setSelectedItem(facturaTemp);
							if(jComboBoxid_facturaFK_IdFacturaDetaFormaPago.getItemCount()>0) {
								jComboBoxid_facturaFK_IdFacturaDetaFormaPago.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualFacturaForeignKeyDescripcion(Long idFacturaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Factura  facturaTemp=null;

			for(Factura facturaAux:facturasForeignKey) {
				if(facturaAux.getId()!=null && facturaAux.getId().equals(idFacturaSeleccionado)) {
					facturaTemp=facturaAux;
					break;
				}
			}


			sDescripcion=FacturaConstantesFunciones.getFacturaDescripcion(facturaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualFacturaForeignKeyGenerico(Long idFacturaSeleccionado,JComboBox jComboBoxid_facturaDetaFormaPagoGenerico)throws Exception
	{
		try
		{
			Factura  facturaTemp=null;

			for(Factura facturaAux:facturasForeignKey) {
				if(facturaAux.getId()!=null && facturaAux.getId().equals(idFacturaSeleccionado)) {
					facturaTemp=facturaAux;
					break;
				}
			}

			if(facturaTemp!=null) {
				jComboBoxid_facturaDetaFormaPagoGenerico.setSelectedItem(facturaTemp);
			} else {
				if(jComboBoxid_facturaDetaFormaPagoGenerico!=null && jComboBoxid_facturaDetaFormaPagoGenerico.getItemCount()>0) {
					jComboBoxid_facturaDetaFormaPagoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTipoFormaPagoForeignKey(Long idTipoFormaPagoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			TipoFormaPago  tipoformapagoTemp=null;

			for(TipoFormaPago tipoformapagoAux:tipoformapagosForeignKey) {
				if(tipoformapagoAux.getId()!=null && tipoformapagoAux.getId().equals(idTipoFormaPagoSeleccionado)) {
					tipoformapagoTemp=tipoformapagoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(tipoformapagoTemp!=null) {

					if(this.detaformapago!=null) {
						this.detaformapago.setTipoFormaPago(tipoformapagoTemp);
					}

					if(this.jInternalFrameDetalleFormDetaFormaPago!=null) {
						this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_tipo_forma_pagoDetaFormaPago.setSelectedItem(tipoformapagoTemp);
					}
				} else {
					//jComboBoxid_tipo_forma_pagoDetaFormaPago.setSelectedItem(tipoformapagoTemp);
					if(this.jInternalFrameDetalleFormDetaFormaPago!=null) {
						if(this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_tipo_forma_pagoDetaFormaPago.getItemCount()>0) {
							this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_tipo_forma_pagoDetaFormaPago.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdTipoFormaPago") || sFormularioTipoBusqueda.equals("Todos")){
					if(tipoformapagoTemp!=null && jComboBoxid_tipo_forma_pagoFK_IdTipoFormaPagoDetaFormaPago!=null) {
						jComboBoxid_tipo_forma_pagoFK_IdTipoFormaPagoDetaFormaPago.setSelectedItem(tipoformapagoTemp);
					} else {
						if(jComboBoxid_tipo_forma_pagoFK_IdTipoFormaPagoDetaFormaPago!=null) {
							//jComboBoxid_tipo_forma_pagoFK_IdTipoFormaPagoDetaFormaPago.setSelectedItem(tipoformapagoTemp);
							if(jComboBoxid_tipo_forma_pagoFK_IdTipoFormaPagoDetaFormaPago.getItemCount()>0) {
								jComboBoxid_tipo_forma_pagoFK_IdTipoFormaPagoDetaFormaPago.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTipoFormaPagoForeignKeyDescripcion(Long idTipoFormaPagoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			TipoFormaPago  tipoformapagoTemp=null;

			for(TipoFormaPago tipoformapagoAux:tipoformapagosForeignKey) {
				if(tipoformapagoAux.getId()!=null && tipoformapagoAux.getId().equals(idTipoFormaPagoSeleccionado)) {
					tipoformapagoTemp=tipoformapagoAux;
					break;
				}
			}


			sDescripcion=TipoFormaPagoConstantesFunciones.getTipoFormaPagoDescripcion(tipoformapagoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTipoFormaPagoForeignKeyGenerico(Long idTipoFormaPagoSeleccionado,JComboBox jComboBoxid_tipo_forma_pagoDetaFormaPagoGenerico)throws Exception
	{
		try
		{
			TipoFormaPago  tipoformapagoTemp=null;

			for(TipoFormaPago tipoformapagoAux:tipoformapagosForeignKey) {
				if(tipoformapagoAux.getId()!=null && tipoformapagoAux.getId().equals(idTipoFormaPagoSeleccionado)) {
					tipoformapagoTemp=tipoformapagoAux;
					break;
				}
			}

			if(tipoformapagoTemp!=null) {
				jComboBoxid_tipo_forma_pagoDetaFormaPagoGenerico.setSelectedItem(tipoformapagoTemp);
			} else {
				if(jComboBoxid_tipo_forma_pagoDetaFormaPagoGenerico!=null && jComboBoxid_tipo_forma_pagoDetaFormaPagoGenerico.getItemCount()>0) {
					jComboBoxid_tipo_forma_pagoDetaFormaPagoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTipoDetaFormaPagoForeignKey(Long idTipoDetaFormaPagoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			TipoDetaFormaPago  tipodetaformapagoTemp=null;

			for(TipoDetaFormaPago tipodetaformapagoAux:tipodetaformapagosForeignKey) {
				if(tipodetaformapagoAux.getId()!=null && tipodetaformapagoAux.getId().equals(idTipoDetaFormaPagoSeleccionado)) {
					tipodetaformapagoTemp=tipodetaformapagoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(tipodetaformapagoTemp!=null) {

					if(this.detaformapago!=null) {
						this.detaformapago.setTipoDetaFormaPago(tipodetaformapagoTemp);
					}

					if(this.jInternalFrameDetalleFormDetaFormaPago!=null) {
						this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_tipo_deta_forma_pagoDetaFormaPago.setSelectedItem(tipodetaformapagoTemp);
					}
				} else {
					//jComboBoxid_tipo_deta_forma_pagoDetaFormaPago.setSelectedItem(tipodetaformapagoTemp);
					if(this.jInternalFrameDetalleFormDetaFormaPago!=null) {
						if(this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_tipo_deta_forma_pagoDetaFormaPago.getItemCount()>0) {
							this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_tipo_deta_forma_pagoDetaFormaPago.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdTipoDetaFormaPago") || sFormularioTipoBusqueda.equals("Todos")){
					if(tipodetaformapagoTemp!=null && jComboBoxid_tipo_deta_forma_pagoFK_IdTipoDetaFormaPagoDetaFormaPago!=null) {
						jComboBoxid_tipo_deta_forma_pagoFK_IdTipoDetaFormaPagoDetaFormaPago.setSelectedItem(tipodetaformapagoTemp);
					} else {
						if(jComboBoxid_tipo_deta_forma_pagoFK_IdTipoDetaFormaPagoDetaFormaPago!=null) {
							//jComboBoxid_tipo_deta_forma_pagoFK_IdTipoDetaFormaPagoDetaFormaPago.setSelectedItem(tipodetaformapagoTemp);
							if(jComboBoxid_tipo_deta_forma_pagoFK_IdTipoDetaFormaPagoDetaFormaPago.getItemCount()>0) {
								jComboBoxid_tipo_deta_forma_pagoFK_IdTipoDetaFormaPagoDetaFormaPago.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTipoDetaFormaPagoForeignKeyDescripcion(Long idTipoDetaFormaPagoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			TipoDetaFormaPago  tipodetaformapagoTemp=null;

			for(TipoDetaFormaPago tipodetaformapagoAux:tipodetaformapagosForeignKey) {
				if(tipodetaformapagoAux.getId()!=null && tipodetaformapagoAux.getId().equals(idTipoDetaFormaPagoSeleccionado)) {
					tipodetaformapagoTemp=tipodetaformapagoAux;
					break;
				}
			}


			sDescripcion=TipoDetaFormaPagoConstantesFunciones.getTipoDetaFormaPagoDescripcion(tipodetaformapagoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTipoDetaFormaPagoForeignKeyGenerico(Long idTipoDetaFormaPagoSeleccionado,JComboBox jComboBoxid_tipo_deta_forma_pagoDetaFormaPagoGenerico)throws Exception
	{
		try
		{
			TipoDetaFormaPago  tipodetaformapagoTemp=null;

			for(TipoDetaFormaPago tipodetaformapagoAux:tipodetaformapagosForeignKey) {
				if(tipodetaformapagoAux.getId()!=null && tipodetaformapagoAux.getId().equals(idTipoDetaFormaPagoSeleccionado)) {
					tipodetaformapagoTemp=tipodetaformapagoAux;
					break;
				}
			}

			if(tipodetaformapagoTemp!=null) {
				jComboBoxid_tipo_deta_forma_pagoDetaFormaPagoGenerico.setSelectedItem(tipodetaformapagoTemp);
			} else {
				if(jComboBoxid_tipo_deta_forma_pagoDetaFormaPagoGenerico!=null && jComboBoxid_tipo_deta_forma_pagoDetaFormaPagoGenerico.getItemCount()>0) {
					jComboBoxid_tipo_deta_forma_pagoDetaFormaPagoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualDetaFormaPagoFactuForeignKey(Long idDetaFormaPagoFactuSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			DetaFormaPagoFactu  detaformapagofactuTemp=null;

			for(DetaFormaPagoFactu detaformapagofactuAux:detaformapagofactusForeignKey) {
				if(detaformapagofactuAux.getId()!=null && detaformapagofactuAux.getId().equals(idDetaFormaPagoFactuSeleccionado)) {
					detaformapagofactuTemp=detaformapagofactuAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(detaformapagofactuTemp!=null) {

					if(this.detaformapago!=null) {
						this.detaformapago.setDetaFormaPagoFactu(detaformapagofactuTemp);
					}

					if(this.jInternalFrameDetalleFormDetaFormaPago!=null) {
						this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_deta_forma_pago_factuDetaFormaPago.setSelectedItem(detaformapagofactuTemp);
					}
				} else {
					//jComboBoxid_deta_forma_pago_factuDetaFormaPago.setSelectedItem(detaformapagofactuTemp);
					if(this.jInternalFrameDetalleFormDetaFormaPago!=null) {
						if(this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_deta_forma_pago_factuDetaFormaPago.getItemCount()>0) {
							this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_deta_forma_pago_factuDetaFormaPago.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdDetaFormaPagoFactu") || sFormularioTipoBusqueda.equals("Todos")){
					if(detaformapagofactuTemp!=null && jComboBoxid_deta_forma_pago_factuFK_IdDetaFormaPagoFactuDetaFormaPago!=null) {
						jComboBoxid_deta_forma_pago_factuFK_IdDetaFormaPagoFactuDetaFormaPago.setSelectedItem(detaformapagofactuTemp);
					} else {
						if(jComboBoxid_deta_forma_pago_factuFK_IdDetaFormaPagoFactuDetaFormaPago!=null) {
							//jComboBoxid_deta_forma_pago_factuFK_IdDetaFormaPagoFactuDetaFormaPago.setSelectedItem(detaformapagofactuTemp);
							if(jComboBoxid_deta_forma_pago_factuFK_IdDetaFormaPagoFactuDetaFormaPago.getItemCount()>0) {
								jComboBoxid_deta_forma_pago_factuFK_IdDetaFormaPagoFactuDetaFormaPago.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualDetaFormaPagoFactuForeignKeyDescripcion(Long idDetaFormaPagoFactuSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			DetaFormaPagoFactu  detaformapagofactuTemp=null;

			for(DetaFormaPagoFactu detaformapagofactuAux:detaformapagofactusForeignKey) {
				if(detaformapagofactuAux.getId()!=null && detaformapagofactuAux.getId().equals(idDetaFormaPagoFactuSeleccionado)) {
					detaformapagofactuTemp=detaformapagofactuAux;
					break;
				}
			}


			sDescripcion=DetaFormaPagoFactuConstantesFunciones.getDetaFormaPagoFactuDescripcion(detaformapagofactuTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualDetaFormaPagoFactuForeignKeyGenerico(Long idDetaFormaPagoFactuSeleccionado,JComboBox jComboBoxid_deta_forma_pago_factuDetaFormaPagoGenerico)throws Exception
	{
		try
		{
			DetaFormaPagoFactu  detaformapagofactuTemp=null;

			for(DetaFormaPagoFactu detaformapagofactuAux:detaformapagofactusForeignKey) {
				if(detaformapagofactuAux.getId()!=null && detaformapagofactuAux.getId().equals(idDetaFormaPagoFactuSeleccionado)) {
					detaformapagofactuTemp=detaformapagofactuAux;
					break;
				}
			}

			if(detaformapagofactuTemp!=null) {
				jComboBoxid_deta_forma_pago_factuDetaFormaPagoGenerico.setSelectedItem(detaformapagofactuTemp);
			} else {
				if(jComboBoxid_deta_forma_pago_factuDetaFormaPagoGenerico!=null && jComboBoxid_deta_forma_pago_factuDetaFormaPagoGenerico.getItemCount()>0) {
					jComboBoxid_deta_forma_pago_factuDetaFormaPagoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualCuentaContableForeignKey(Long idCuentaContableSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			CuentaContable  cuentacontableTemp=null;

			for(CuentaContable cuentacontableAux:cuentacontablesForeignKey) {
				if(cuentacontableAux.getId()!=null && cuentacontableAux.getId().equals(idCuentaContableSeleccionado)) {
					cuentacontableTemp=cuentacontableAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(cuentacontableTemp!=null) {

					if(this.detaformapago!=null) {
						this.detaformapago.setCuentaContable(cuentacontableTemp);
					}

					if(this.jInternalFrameDetalleFormDetaFormaPago!=null) {
						this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_cuenta_contableDetaFormaPago.setSelectedItem(cuentacontableTemp);
					}
				} else {
					//jComboBoxid_cuenta_contableDetaFormaPago.setSelectedItem(cuentacontableTemp);
					if(this.jInternalFrameDetalleFormDetaFormaPago!=null) {
						if(this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_cuenta_contableDetaFormaPago.getItemCount()>0) {
							this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_cuenta_contableDetaFormaPago.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdCuentaContable") || sFormularioTipoBusqueda.equals("Todos")){
					if(cuentacontableTemp!=null && jComboBoxid_cuenta_contableFK_IdCuentaContableDetaFormaPago!=null) {
						jComboBoxid_cuenta_contableFK_IdCuentaContableDetaFormaPago.setSelectedItem(cuentacontableTemp);
					} else {
						if(jComboBoxid_cuenta_contableFK_IdCuentaContableDetaFormaPago!=null) {
							//jComboBoxid_cuenta_contableFK_IdCuentaContableDetaFormaPago.setSelectedItem(cuentacontableTemp);
							if(jComboBoxid_cuenta_contableFK_IdCuentaContableDetaFormaPago.getItemCount()>0) {
								jComboBoxid_cuenta_contableFK_IdCuentaContableDetaFormaPago.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualCuentaContableForeignKeyDescripcion(Long idCuentaContableSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			CuentaContable  cuentacontableTemp=null;

			for(CuentaContable cuentacontableAux:cuentacontablesForeignKey) {
				if(cuentacontableAux.getId()!=null && cuentacontableAux.getId().equals(idCuentaContableSeleccionado)) {
					cuentacontableTemp=cuentacontableAux;
					break;
				}
			}


			sDescripcion=CuentaContableConstantesFunciones.getCuentaContableDescripcion(cuentacontableTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualCuentaContableForeignKeyGenerico(Long idCuentaContableSeleccionado,JComboBox jComboBoxid_cuenta_contableDetaFormaPagoGenerico)throws Exception
	{
		try
		{
			CuentaContable  cuentacontableTemp=null;

			for(CuentaContable cuentacontableAux:cuentacontablesForeignKey) {
				if(cuentacontableAux.getId()!=null && cuentacontableAux.getId().equals(idCuentaContableSeleccionado)) {
					cuentacontableTemp=cuentacontableAux;
					break;
				}
			}

			if(cuentacontableTemp!=null) {
				jComboBoxid_cuenta_contableDetaFormaPagoGenerico.setSelectedItem(cuentacontableTemp);
			} else {
				if(jComboBoxid_cuenta_contableDetaFormaPagoGenerico!=null && jComboBoxid_cuenta_contableDetaFormaPagoGenerico.getItemCount()>0) {
					jComboBoxid_cuenta_contableDetaFormaPagoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTipoRetencionForeignKey(Long idTipoRetencionSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			TipoRetencion  tiporetencionTemp=null;

			for(TipoRetencion tiporetencionAux:tiporetencionsForeignKey) {
				if(tiporetencionAux.getId()!=null && tiporetencionAux.getId().equals(idTipoRetencionSeleccionado)) {
					tiporetencionTemp=tiporetencionAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(tiporetencionTemp!=null) {

					if(this.detaformapago!=null) {
						this.detaformapago.setTipoRetencion(tiporetencionTemp);
					}

					if(this.jInternalFrameDetalleFormDetaFormaPago!=null) {
						this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_tipo_retencionDetaFormaPago.setSelectedItem(tiporetencionTemp);
					}
				} else {
					//jComboBoxid_tipo_retencionDetaFormaPago.setSelectedItem(tiporetencionTemp);
					if(this.jInternalFrameDetalleFormDetaFormaPago!=null) {
						if(this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_tipo_retencionDetaFormaPago.getItemCount()>0) {
							this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_tipo_retencionDetaFormaPago.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdTipoRetencion") || sFormularioTipoBusqueda.equals("Todos")){
					if(tiporetencionTemp!=null && jComboBoxid_tipo_retencionFK_IdTipoRetencionDetaFormaPago!=null) {
						jComboBoxid_tipo_retencionFK_IdTipoRetencionDetaFormaPago.setSelectedItem(tiporetencionTemp);
					} else {
						if(jComboBoxid_tipo_retencionFK_IdTipoRetencionDetaFormaPago!=null) {
							//jComboBoxid_tipo_retencionFK_IdTipoRetencionDetaFormaPago.setSelectedItem(tiporetencionTemp);
							if(jComboBoxid_tipo_retencionFK_IdTipoRetencionDetaFormaPago.getItemCount()>0) {
								jComboBoxid_tipo_retencionFK_IdTipoRetencionDetaFormaPago.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTipoRetencionForeignKeyDescripcion(Long idTipoRetencionSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			TipoRetencion  tiporetencionTemp=null;

			for(TipoRetencion tiporetencionAux:tiporetencionsForeignKey) {
				if(tiporetencionAux.getId()!=null && tiporetencionAux.getId().equals(idTipoRetencionSeleccionado)) {
					tiporetencionTemp=tiporetencionAux;
					break;
				}
			}


			sDescripcion=TipoRetencionConstantesFunciones.getTipoRetencionDescripcion(tiporetencionTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTipoRetencionForeignKeyGenerico(Long idTipoRetencionSeleccionado,JComboBox jComboBoxid_tipo_retencionDetaFormaPagoGenerico)throws Exception
	{
		try
		{
			TipoRetencion  tiporetencionTemp=null;

			for(TipoRetencion tiporetencionAux:tiporetencionsForeignKey) {
				if(tiporetencionAux.getId()!=null && tiporetencionAux.getId().equals(idTipoRetencionSeleccionado)) {
					tiporetencionTemp=tiporetencionAux;
					break;
				}
			}

			if(tiporetencionTemp!=null) {
				jComboBoxid_tipo_retencionDetaFormaPagoGenerico.setSelectedItem(tiporetencionTemp);
			} else {
				if(jComboBoxid_tipo_retencionDetaFormaPagoGenerico!=null && jComboBoxid_tipo_retencionDetaFormaPagoGenerico.getItemCount()>0) {
					jComboBoxid_tipo_retencionDetaFormaPagoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualAnioForeignKey(Long idAnioSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Anio  anioTemp=null;

			for(Anio anioAux:aniosForeignKey) {
				if(anioAux.getId()!=null && anioAux.getId().equals(idAnioSeleccionado)) {
					anioTemp=anioAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(anioTemp!=null) {

					if(this.detaformapago!=null) {
						this.detaformapago.setAnio(anioTemp);
					}

					if(this.jInternalFrameDetalleFormDetaFormaPago!=null) {
						this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_anioDetaFormaPago.setSelectedItem(anioTemp);
					}
				} else {
					//jComboBoxid_anioDetaFormaPago.setSelectedItem(anioTemp);
					if(this.jInternalFrameDetalleFormDetaFormaPago!=null) {
						if(this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_anioDetaFormaPago.getItemCount()>0) {
							this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_anioDetaFormaPago.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualAnioForeignKeyDescripcion(Long idAnioSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Anio  anioTemp=null;

			for(Anio anioAux:aniosForeignKey) {
				if(anioAux.getId()!=null && anioAux.getId().equals(idAnioSeleccionado)) {
					anioTemp=anioAux;
					break;
				}
			}


			sDescripcion=AnioConstantesFunciones.getAnioDescripcion(anioTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualAnioForeignKeyGenerico(Long idAnioSeleccionado,JComboBox jComboBoxid_anioDetaFormaPagoGenerico)throws Exception
	{
		try
		{
			Anio  anioTemp=null;

			for(Anio anioAux:aniosForeignKey) {
				if(anioAux.getId()!=null && anioAux.getId().equals(idAnioSeleccionado)) {
					anioTemp=anioAux;
					break;
				}
			}

			if(anioTemp!=null) {
				jComboBoxid_anioDetaFormaPagoGenerico.setSelectedItem(anioTemp);
			} else {
				if(jComboBoxid_anioDetaFormaPagoGenerico!=null && jComboBoxid_anioDetaFormaPagoGenerico.getItemCount()>0) {
					jComboBoxid_anioDetaFormaPagoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualMesForeignKey(Long idMesSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Mes  mesTemp=null;

			for(Mes mesAux:messForeignKey) {
				if(mesAux.getId()!=null && mesAux.getId().equals(idMesSeleccionado)) {
					mesTemp=mesAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(mesTemp!=null) {

					if(this.detaformapago!=null) {
						this.detaformapago.setMes(mesTemp);
					}

					if(this.jInternalFrameDetalleFormDetaFormaPago!=null) {
						this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_mesDetaFormaPago.setSelectedItem(mesTemp);
					}
				} else {
					//jComboBoxid_mesDetaFormaPago.setSelectedItem(mesTemp);
					if(this.jInternalFrameDetalleFormDetaFormaPago!=null) {
						if(this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_mesDetaFormaPago.getItemCount()>0) {
							this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_mesDetaFormaPago.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualMesForeignKeyDescripcion(Long idMesSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Mes  mesTemp=null;

			for(Mes mesAux:messForeignKey) {
				if(mesAux.getId()!=null && mesAux.getId().equals(idMesSeleccionado)) {
					mesTemp=mesAux;
					break;
				}
			}


			sDescripcion=MesConstantesFunciones.getMesDescripcion(mesTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualMesForeignKeyGenerico(Long idMesSeleccionado,JComboBox jComboBoxid_mesDetaFormaPagoGenerico)throws Exception
	{
		try
		{
			Mes  mesTemp=null;

			for(Mes mesAux:messForeignKey) {
				if(mesAux.getId()!=null && mesAux.getId().equals(idMesSeleccionado)) {
					mesTemp=mesAux;
					break;
				}
			}

			if(mesTemp!=null) {
				jComboBoxid_mesDetaFormaPagoGenerico.setSelectedItem(mesTemp);
			} else {
				if(jComboBoxid_mesDetaFormaPagoGenerico!=null && jComboBoxid_mesDetaFormaPagoGenerico.getItemCount()>0) {
					jComboBoxid_mesDetaFormaPagoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	
	
	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarEmpresaForeignKey(DetaFormaPago detaformapago,JComboBox jComboBoxid_empresaDetaFormaPagoGenerico)throws Exception
	{
		try
		{
			Empresa  empresaAux=new Empresa();

			if(jComboBoxid_empresaDetaFormaPagoGenerico==null) {
				empresaAux=(Empresa)this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_empresaDetaFormaPago.getSelectedItem();
			} else {
				empresaAux=(Empresa)jComboBoxid_empresaDetaFormaPagoGenerico.getSelectedItem();
			}

			if(empresaAux!=null && empresaAux.getId()!=null) {
				detaformapago.setid_empresa(empresaAux.getId());
				detaformapago.setempresa_descripcion(DetaFormaPagoConstantesFunciones.getEmpresaDescripcion(empresaAux));
				detaformapago.setEmpresa(empresaAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarSucursalForeignKey(DetaFormaPago detaformapago,JComboBox jComboBoxid_sucursalDetaFormaPagoGenerico)throws Exception
	{
		try
		{
			Sucursal  sucursalAux=new Sucursal();

			if(jComboBoxid_sucursalDetaFormaPagoGenerico==null) {
				sucursalAux=(Sucursal)this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_sucursalDetaFormaPago.getSelectedItem();
			} else {
				sucursalAux=(Sucursal)jComboBoxid_sucursalDetaFormaPagoGenerico.getSelectedItem();
			}

			if(sucursalAux!=null && sucursalAux.getId()!=null) {
				detaformapago.setid_sucursal(sucursalAux.getId());
				detaformapago.setsucursal_descripcion(DetaFormaPagoConstantesFunciones.getSucursalDescripcion(sucursalAux));
				detaformapago.setSucursal(sucursalAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarEjercicioForeignKey(DetaFormaPago detaformapago,JComboBox jComboBoxid_ejercicioDetaFormaPagoGenerico)throws Exception
	{
		try
		{
			Ejercicio  ejercicioAux=new Ejercicio();

			if(jComboBoxid_ejercicioDetaFormaPagoGenerico==null) {
				ejercicioAux=(Ejercicio)this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_ejercicioDetaFormaPago.getSelectedItem();
			} else {
				ejercicioAux=(Ejercicio)jComboBoxid_ejercicioDetaFormaPagoGenerico.getSelectedItem();
			}

			if(ejercicioAux!=null && ejercicioAux.getId()!=null) {
				detaformapago.setid_ejercicio(ejercicioAux.getId());
				detaformapago.setejercicio_descripcion(DetaFormaPagoConstantesFunciones.getEjercicioDescripcion(ejercicioAux));
				detaformapago.setEjercicio(ejercicioAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarPeriodoForeignKey(DetaFormaPago detaformapago,JComboBox jComboBoxid_periodoDetaFormaPagoGenerico)throws Exception
	{
		try
		{
			Periodo  periodoAux=new Periodo();

			if(jComboBoxid_periodoDetaFormaPagoGenerico==null) {
				periodoAux=(Periodo)this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_periodoDetaFormaPago.getSelectedItem();
			} else {
				periodoAux=(Periodo)jComboBoxid_periodoDetaFormaPagoGenerico.getSelectedItem();
			}

			if(periodoAux!=null && periodoAux.getId()!=null) {
				if(periodoAux.getid_estado_periodo().equals(0L)) {
					throw new Exception("Periodo INACTIVO, NO PUEDE GUARDAR LA INFORMACION CONSULTE CON EL ADMINISTRADOR");
				}

				detaformapago.setid_periodo(periodoAux.getId());
				detaformapago.setperiodo_descripcion(DetaFormaPagoConstantesFunciones.getPeriodoDescripcion(periodoAux));
				detaformapago.setPeriodo(periodoAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarFacturaForeignKey(DetaFormaPago detaformapago,JComboBox jComboBoxid_facturaDetaFormaPagoGenerico)throws Exception
	{
		try
		{
			Factura  facturaAux=new Factura();

			if(jComboBoxid_facturaDetaFormaPagoGenerico==null) {
				facturaAux=(Factura)this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_facturaDetaFormaPago.getSelectedItem();
			} else {
				facturaAux=(Factura)jComboBoxid_facturaDetaFormaPagoGenerico.getSelectedItem();
			}

			if(facturaAux!=null && facturaAux.getId()!=null) {
				detaformapago.setid_factura(facturaAux.getId());
				detaformapago.setfactura_descripcion(DetaFormaPagoConstantesFunciones.getFacturaDescripcion(facturaAux));
				detaformapago.setFactura(facturaAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTipoFormaPagoForeignKey(DetaFormaPago detaformapago,JComboBox jComboBoxid_tipo_forma_pagoDetaFormaPagoGenerico)throws Exception
	{
		try
		{
			TipoFormaPago  tipoformapagoAux=new TipoFormaPago();

			if(jComboBoxid_tipo_forma_pagoDetaFormaPagoGenerico==null) {
				tipoformapagoAux=(TipoFormaPago)this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_tipo_forma_pagoDetaFormaPago.getSelectedItem();
			} else {
				tipoformapagoAux=(TipoFormaPago)jComboBoxid_tipo_forma_pagoDetaFormaPagoGenerico.getSelectedItem();
			}

			if(tipoformapagoAux!=null && tipoformapagoAux.getId()!=null) {
				detaformapago.setid_tipo_forma_pago(tipoformapagoAux.getId());
				detaformapago.settipoformapago_descripcion(DetaFormaPagoConstantesFunciones.getTipoFormaPagoDescripcion(tipoformapagoAux));
				detaformapago.setTipoFormaPago(tipoformapagoAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTipoDetaFormaPagoForeignKey(DetaFormaPago detaformapago,JComboBox jComboBoxid_tipo_deta_forma_pagoDetaFormaPagoGenerico)throws Exception
	{
		try
		{
			TipoDetaFormaPago  tipodetaformapagoAux=new TipoDetaFormaPago();

			if(jComboBoxid_tipo_deta_forma_pagoDetaFormaPagoGenerico==null) {
				tipodetaformapagoAux=(TipoDetaFormaPago)this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_tipo_deta_forma_pagoDetaFormaPago.getSelectedItem();
			} else {
				tipodetaformapagoAux=(TipoDetaFormaPago)jComboBoxid_tipo_deta_forma_pagoDetaFormaPagoGenerico.getSelectedItem();
			}

			if(tipodetaformapagoAux!=null && tipodetaformapagoAux.getId()!=null) {
				detaformapago.setid_tipo_deta_forma_pago(tipodetaformapagoAux.getId());
				detaformapago.settipodetaformapago_descripcion(DetaFormaPagoConstantesFunciones.getTipoDetaFormaPagoDescripcion(tipodetaformapagoAux));
				detaformapago.setTipoDetaFormaPago(tipodetaformapagoAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarDetaFormaPagoFactuForeignKey(DetaFormaPago detaformapago,JComboBox jComboBoxid_deta_forma_pago_factuDetaFormaPagoGenerico)throws Exception
	{
		try
		{
			DetaFormaPagoFactu  detaformapagofactuAux=new DetaFormaPagoFactu();

			if(jComboBoxid_deta_forma_pago_factuDetaFormaPagoGenerico==null) {
				detaformapagofactuAux=(DetaFormaPagoFactu)this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_deta_forma_pago_factuDetaFormaPago.getSelectedItem();
			} else {
				detaformapagofactuAux=(DetaFormaPagoFactu)jComboBoxid_deta_forma_pago_factuDetaFormaPagoGenerico.getSelectedItem();
			}

			if(detaformapagofactuAux!=null && detaformapagofactuAux.getId()!=null) {
				detaformapago.setid_deta_forma_pago_factu(detaformapagofactuAux.getId());
				detaformapago.setdetaformapagofactu_descripcion(DetaFormaPagoConstantesFunciones.getDetaFormaPagoFactuDescripcion(detaformapagofactuAux));
				detaformapago.setDetaFormaPagoFactu(detaformapagofactuAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarCuentaContableForeignKey(DetaFormaPago detaformapago,JComboBox jComboBoxid_cuenta_contableDetaFormaPagoGenerico)throws Exception
	{
		try
		{
			CuentaContable  cuentacontableAux=new CuentaContable();

			if(jComboBoxid_cuenta_contableDetaFormaPagoGenerico==null) {
				cuentacontableAux=(CuentaContable)this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_cuenta_contableDetaFormaPago.getSelectedItem();
			} else {
				cuentacontableAux=(CuentaContable)jComboBoxid_cuenta_contableDetaFormaPagoGenerico.getSelectedItem();
			}

			if(cuentacontableAux!=null) {
				detaformapago.setid_cuenta_contable(cuentacontableAux.getId());
				detaformapago.setcuentacontable_descripcion(DetaFormaPagoConstantesFunciones.getCuentaContableDescripcion(cuentacontableAux));
				detaformapago.setCuentaContable(cuentacontableAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTipoRetencionForeignKey(DetaFormaPago detaformapago,JComboBox jComboBoxid_tipo_retencionDetaFormaPagoGenerico)throws Exception
	{
		try
		{
			TipoRetencion  tiporetencionAux=new TipoRetencion();

			if(jComboBoxid_tipo_retencionDetaFormaPagoGenerico==null) {
				tiporetencionAux=(TipoRetencion)this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_tipo_retencionDetaFormaPago.getSelectedItem();
			} else {
				tiporetencionAux=(TipoRetencion)jComboBoxid_tipo_retencionDetaFormaPagoGenerico.getSelectedItem();
			}

			if(tiporetencionAux!=null && tiporetencionAux.getId()!=null) {
				detaformapago.setid_tipo_retencion(tiporetencionAux.getId());
				detaformapago.settiporetencion_descripcion(DetaFormaPagoConstantesFunciones.getTipoRetencionDescripcion(tiporetencionAux));
				detaformapago.setTipoRetencion(tiporetencionAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarAnioForeignKey(DetaFormaPago detaformapago,JComboBox jComboBoxid_anioDetaFormaPagoGenerico)throws Exception
	{
		try
		{
			Anio  anioAux=new Anio();

			if(jComboBoxid_anioDetaFormaPagoGenerico==null) {
				anioAux=(Anio)this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_anioDetaFormaPago.getSelectedItem();
			} else {
				anioAux=(Anio)jComboBoxid_anioDetaFormaPagoGenerico.getSelectedItem();
			}

			if(anioAux!=null) {
				detaformapago.setid_anio(anioAux.getId());
				detaformapago.setanio_descripcion(DetaFormaPagoConstantesFunciones.getAnioDescripcion(anioAux));
				detaformapago.setAnio(anioAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarMesForeignKey(DetaFormaPago detaformapago,JComboBox jComboBoxid_mesDetaFormaPagoGenerico)throws Exception
	{
		try
		{
			Mes  mesAux=new Mes();

			if(jComboBoxid_mesDetaFormaPagoGenerico==null) {
				mesAux=(Mes)this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_mesDetaFormaPago.getSelectedItem();
			} else {
				mesAux=(Mes)jComboBoxid_mesDetaFormaPagoGenerico.getSelectedItem();
			}

			if(mesAux!=null) {
				detaformapago.setid_mes(mesAux.getId());
				detaformapago.setmes_descripcion(DetaFormaPagoConstantesFunciones.getMesDescripcion(mesAux));
				detaformapago.setMes(mesAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	
	


		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameEmpresasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingEmpresa=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!DetaFormaPagoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormDetaFormaPago!=null) { 
							this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_empresaDetaFormaPago.removeAllItems();

							for(Empresa empresa:this.empresasForeignKey) {
								this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_empresaDetaFormaPago.addItem(empresa);
							}
						}
					}

					if(this.jInternalFrameDetalleFormDetaFormaPago!=null) { 
					}

					if(!DetaFormaPagoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameSucursalsForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingSucursal=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!DetaFormaPagoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormDetaFormaPago!=null) { 
							this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_sucursalDetaFormaPago.removeAllItems();

							for(Sucursal sucursal:this.sucursalsForeignKey) {
								this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_sucursalDetaFormaPago.addItem(sucursal);
							}
						}
					}

					if(this.jInternalFrameDetalleFormDetaFormaPago!=null) { 
					}

					if(!DetaFormaPagoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameEjerciciosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingEjercicio=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!DetaFormaPagoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormDetaFormaPago!=null) { 
							this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_ejercicioDetaFormaPago.removeAllItems();

							for(Ejercicio ejercicio:this.ejerciciosForeignKey) {
								this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_ejercicioDetaFormaPago.addItem(ejercicio);
							}
						}
					}

					if(this.jInternalFrameDetalleFormDetaFormaPago!=null) { 
					}

					if(!DetaFormaPagoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFramePeriodosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingPeriodo=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!DetaFormaPagoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormDetaFormaPago!=null) { 
							this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_periodoDetaFormaPago.removeAllItems();

							for(Periodo periodo:this.periodosForeignKey) {
								this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_periodoDetaFormaPago.addItem(periodo);
							}
						}
					}

					if(this.jInternalFrameDetalleFormDetaFormaPago!=null) { 
					}

					if(!DetaFormaPagoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameFacturasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingFactura=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!DetaFormaPagoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormDetaFormaPago!=null) { 
							this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_facturaDetaFormaPago.removeAllItems();

							for(Factura factura:this.facturasForeignKey) {
								this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_facturaDetaFormaPago.addItem(factura);
							}
						}
					}

					if(this.jInternalFrameDetalleFormDetaFormaPago!=null) { 
					}

					if(!DetaFormaPagoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdFactura") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!DetaFormaPagoJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_facturaFK_IdFacturaDetaFormaPago.removeAllItems();

							for(Factura factura:this.facturasForeignKey) {
								this.jComboBoxid_facturaFK_IdFacturaDetaFormaPago.addItem(factura);
							}
						}

						if(!DetaFormaPagoJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTipoFormaPagosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTipoFormaPago=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!DetaFormaPagoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormDetaFormaPago!=null) { 
							this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_tipo_forma_pagoDetaFormaPago.removeAllItems();

							for(TipoFormaPago tipoformapago:this.tipoformapagosForeignKey) {
								this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_tipo_forma_pagoDetaFormaPago.addItem(tipoformapago);
							}
						}
					}

					if(this.jInternalFrameDetalleFormDetaFormaPago!=null) { 
					}

					if(!DetaFormaPagoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdTipoFormaPago") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!DetaFormaPagoJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_tipo_forma_pagoFK_IdTipoFormaPagoDetaFormaPago.removeAllItems();

							for(TipoFormaPago tipoformapago:this.tipoformapagosForeignKey) {
								this.jComboBoxid_tipo_forma_pagoFK_IdTipoFormaPagoDetaFormaPago.addItem(tipoformapago);
							}
						}

						if(!DetaFormaPagoJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTipoDetaFormaPagosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTipoDetaFormaPago=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!DetaFormaPagoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormDetaFormaPago!=null) { 
							this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_tipo_deta_forma_pagoDetaFormaPago.removeAllItems();

							for(TipoDetaFormaPago tipodetaformapago:this.tipodetaformapagosForeignKey) {
								this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_tipo_deta_forma_pagoDetaFormaPago.addItem(tipodetaformapago);
							}
						}
					}

					if(this.jInternalFrameDetalleFormDetaFormaPago!=null) { 
					}

					if(!DetaFormaPagoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdTipoDetaFormaPago") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!DetaFormaPagoJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_tipo_deta_forma_pagoFK_IdTipoDetaFormaPagoDetaFormaPago.removeAllItems();

							for(TipoDetaFormaPago tipodetaformapago:this.tipodetaformapagosForeignKey) {
								this.jComboBoxid_tipo_deta_forma_pagoFK_IdTipoDetaFormaPagoDetaFormaPago.addItem(tipodetaformapago);
							}
						}

						if(!DetaFormaPagoJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameDetaFormaPagoFactusForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingDetaFormaPagoFactu=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!DetaFormaPagoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormDetaFormaPago!=null) { 
							this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_deta_forma_pago_factuDetaFormaPago.removeAllItems();

							for(DetaFormaPagoFactu detaformapagofactu:this.detaformapagofactusForeignKey) {
								this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_deta_forma_pago_factuDetaFormaPago.addItem(detaformapagofactu);
							}
						}
					}

					if(this.jInternalFrameDetalleFormDetaFormaPago!=null) { 
					}

					if(!DetaFormaPagoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdDetaFormaPagoFactu") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!DetaFormaPagoJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_deta_forma_pago_factuFK_IdDetaFormaPagoFactuDetaFormaPago.removeAllItems();

							for(DetaFormaPagoFactu detaformapagofactu:this.detaformapagofactusForeignKey) {
								this.jComboBoxid_deta_forma_pago_factuFK_IdDetaFormaPagoFactuDetaFormaPago.addItem(detaformapagofactu);
							}
						}

						if(!DetaFormaPagoJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameCuentaContablesForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingCuentaContable=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!DetaFormaPagoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormDetaFormaPago!=null) { 
							this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_cuenta_contableDetaFormaPago.removeAllItems();

							for(CuentaContable cuentacontable:this.cuentacontablesForeignKey) {
								this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_cuenta_contableDetaFormaPago.addItem(cuentacontable);
							}
						}
					}

					if(this.jInternalFrameDetalleFormDetaFormaPago!=null) { 
					}

					if(!DetaFormaPagoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdCuentaContable") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!DetaFormaPagoJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_cuenta_contableFK_IdCuentaContableDetaFormaPago.removeAllItems();

							for(CuentaContable cuentacontable:this.cuentacontablesForeignKey) {
								this.jComboBoxid_cuenta_contableFK_IdCuentaContableDetaFormaPago.addItem(cuentacontable);
							}
						}

						if(!DetaFormaPagoJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTipoRetencionsForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTipoRetencion=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!DetaFormaPagoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormDetaFormaPago!=null) { 
							this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_tipo_retencionDetaFormaPago.removeAllItems();

							for(TipoRetencion tiporetencion:this.tiporetencionsForeignKey) {
								this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_tipo_retencionDetaFormaPago.addItem(tiporetencion);
							}
						}
					}

					if(this.jInternalFrameDetalleFormDetaFormaPago!=null) { 
					}

					if(!DetaFormaPagoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdTipoRetencion") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!DetaFormaPagoJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_tipo_retencionFK_IdTipoRetencionDetaFormaPago.removeAllItems();

							for(TipoRetencion tiporetencion:this.tiporetencionsForeignKey) {
								this.jComboBoxid_tipo_retencionFK_IdTipoRetencionDetaFormaPago.addItem(tiporetencion);
							}
						}

						if(!DetaFormaPagoJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameAniosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingAnio=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!DetaFormaPagoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormDetaFormaPago!=null) { 
							this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_anioDetaFormaPago.removeAllItems();

							for(Anio anio:this.aniosForeignKey) {
								this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_anioDetaFormaPago.addItem(anio);
							}
						}
					}

					if(this.jInternalFrameDetalleFormDetaFormaPago!=null) { 
					}

					if(!DetaFormaPagoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameMessForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingMes=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!DetaFormaPagoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormDetaFormaPago!=null) { 
							this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_mesDetaFormaPago.removeAllItems();

							for(Mes mes:this.messForeignKey) {
								this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_mesDetaFormaPago.addItem(mes);
							}
						}
					}

					if(this.jInternalFrameDetalleFormDetaFormaPago!=null) { 
					}

					if(!DetaFormaPagoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

	


		public void setSelectedItemCombosFrameEmpresaForeignKey(Empresa empresa,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormDetaFormaPago!=null) {
							this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_empresaDetaFormaPago.setSelectedItem(empresa);
						}
					} else {
						if(this.jInternalFrameDetalleFormDetaFormaPago!=null) {
							this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_empresaDetaFormaPago.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameSucursalForeignKey(Sucursal sucursal,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormDetaFormaPago!=null) {
							this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_sucursalDetaFormaPago.setSelectedItem(sucursal);
						}
					} else {
						if(this.jInternalFrameDetalleFormDetaFormaPago!=null) {
							this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_sucursalDetaFormaPago.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameEjercicioForeignKey(Ejercicio ejercicio,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormDetaFormaPago!=null) {
							this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_ejercicioDetaFormaPago.setSelectedItem(ejercicio);
						}
					} else {
						if(this.jInternalFrameDetalleFormDetaFormaPago!=null) {
							this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_ejercicioDetaFormaPago.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFramePeriodoForeignKey(Periodo periodo,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormDetaFormaPago!=null) {
							this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_periodoDetaFormaPago.setSelectedItem(periodo);
						}
					} else {
						if(this.jInternalFrameDetalleFormDetaFormaPago!=null) {
							this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_periodoDetaFormaPago.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameFacturaForeignKey(Factura factura,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormDetaFormaPago!=null) {
							this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_facturaDetaFormaPago.setSelectedItem(factura);
						}
					} else {
						if(this.jInternalFrameDetalleFormDetaFormaPago!=null) {
							this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_facturaDetaFormaPago.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_facturaFK_IdFacturaDetaFormaPago.setSelectedItem(factura);
						} else {
							this.jComboBoxid_facturaFK_IdFacturaDetaFormaPago.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTipoFormaPagoForeignKey(TipoFormaPago tipoformapago,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormDetaFormaPago!=null) {
							this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_tipo_forma_pagoDetaFormaPago.setSelectedItem(tipoformapago);
						}
					} else {
						if(this.jInternalFrameDetalleFormDetaFormaPago!=null) {
							this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_tipo_forma_pagoDetaFormaPago.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_tipo_forma_pagoFK_IdTipoFormaPagoDetaFormaPago.setSelectedItem(tipoformapago);
						} else {
							this.jComboBoxid_tipo_forma_pagoFK_IdTipoFormaPagoDetaFormaPago.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTipoDetaFormaPagoForeignKey(TipoDetaFormaPago tipodetaformapago,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormDetaFormaPago!=null) {
							this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_tipo_deta_forma_pagoDetaFormaPago.setSelectedItem(tipodetaformapago);
						}
					} else {
						if(this.jInternalFrameDetalleFormDetaFormaPago!=null) {
							this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_tipo_deta_forma_pagoDetaFormaPago.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_tipo_deta_forma_pagoFK_IdTipoDetaFormaPagoDetaFormaPago.setSelectedItem(tipodetaformapago);
						} else {
							this.jComboBoxid_tipo_deta_forma_pagoFK_IdTipoDetaFormaPagoDetaFormaPago.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameDetaFormaPagoFactuForeignKey(DetaFormaPagoFactu detaformapagofactu,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormDetaFormaPago!=null) {
							this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_deta_forma_pago_factuDetaFormaPago.setSelectedItem(detaformapagofactu);
						}
					} else {
						if(this.jInternalFrameDetalleFormDetaFormaPago!=null) {
							this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_deta_forma_pago_factuDetaFormaPago.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_deta_forma_pago_factuFK_IdDetaFormaPagoFactuDetaFormaPago.setSelectedItem(detaformapagofactu);
						} else {
							this.jComboBoxid_deta_forma_pago_factuFK_IdDetaFormaPagoFactuDetaFormaPago.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameCuentaContableForeignKey(CuentaContable cuentacontable,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormDetaFormaPago!=null) {
							this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_cuenta_contableDetaFormaPago.setSelectedItem(cuentacontable);
						}
					} else {
						if(this.jInternalFrameDetalleFormDetaFormaPago!=null) {
							this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_cuenta_contableDetaFormaPago.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_cuenta_contableFK_IdCuentaContableDetaFormaPago.setSelectedItem(cuentacontable);
						} else {
							this.jComboBoxid_cuenta_contableFK_IdCuentaContableDetaFormaPago.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTipoRetencionForeignKey(TipoRetencion tiporetencion,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormDetaFormaPago!=null) {
							this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_tipo_retencionDetaFormaPago.setSelectedItem(tiporetencion);
						}
					} else {
						if(this.jInternalFrameDetalleFormDetaFormaPago!=null) {
							this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_tipo_retencionDetaFormaPago.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_tipo_retencionFK_IdTipoRetencionDetaFormaPago.setSelectedItem(tiporetencion);
						} else {
							this.jComboBoxid_tipo_retencionFK_IdTipoRetencionDetaFormaPago.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameAnioForeignKey(Anio anio,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormDetaFormaPago!=null) {
							this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_anioDetaFormaPago.setSelectedItem(anio);
						}
					} else {
						if(this.jInternalFrameDetalleFormDetaFormaPago!=null) {
							this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_anioDetaFormaPago.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameMesForeignKey(Mes mes,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormDetaFormaPago!=null) {
							this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_mesDetaFormaPago.setSelectedItem(mes);
						}
					} else {
						if(this.jInternalFrameDetalleFormDetaFormaPago!=null) {
							this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_mesDetaFormaPago.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

	


	
	public void refrescarForeignKeysDescripcionesDetaFormaPago() throws Exception {
		//SI FUNCIONA DEEPLOAD ESTO VA AL ULTIMO
		if(Constantes.ISUSAEJBLOGICLAYER) {
			DetaFormaPagoConstantesFunciones.refrescarForeignKeysDescripcionesDetaFormaPago(this.detaformapagoLogic.getDetaFormaPagos());
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			DetaFormaPagoConstantesFunciones.refrescarForeignKeysDescripcionesDetaFormaPago(this.detaformapagos);
		}
		
		/*
		ArrayList<Classe> classes=new ArrayList<Classe>();
		
		classes.add(new Classe(Empresa.class));
		classes.add(new Classe(Sucursal.class));
		classes.add(new Classe(Ejercicio.class));
		classes.add(new Classe(Periodo.class));
		classes.add(new Classe(Factura.class));
		classes.add(new Classe(TipoFormaPago.class));
		classes.add(new Classe(TipoDetaFormaPago.class));
		classes.add(new Classe(DetaFormaPagoFactu.class));
		classes.add(new Classe(CuentaContable.class));
		classes.add(new Classe(TipoRetencion.class));
		classes.add(new Classe(Anio.class));
		classes.add(new Classe(Mes.class));
			
		if(Constantes.ISUSAEJBLOGICLAYER) {
			//USA LOS OBJETOS DE LOGIC DIRECTAMENTE
			//detaformapagoLogic.setDetaFormaPagos(this.detaformapagos);
			detaformapagoLogic.deepLoadsWithConnection(false, DeepLoadType.INCLUDE, classes,"");
	
		} else if(Constantes.ISUSAEJBREMOTE) {
		} else if(Constantes.ISUSAEJBHOME) {
		}
		*/				
	}	
	
	
	
	public Integer getiNumeroPaginacion() {
		return iNumeroPaginacion;
	}

	public void setiNumeroPaginacion(Integer iNumeroPaginacion) {
		this.iNumeroPaginacion= iNumeroPaginacion;
	}
	
	public Integer getiNumeroPaginacionPagina() {
		return iNumeroPaginacionPagina;
	}

	public void setiNumeroPaginacionPagina(Integer iNumeroPaginacionPagina) {
		this.iNumeroPaginacionPagina= iNumeroPaginacionPagina;
	}
	
	
	public Boolean getIsSeleccionarTodos() {
		return this.isSeleccionarTodos;
	}

	public void setIsSeleccionarTodos(Boolean isSeleccionarTodos) {
		this.isSeleccionarTodos= isSeleccionarTodos;
	}
	
	public Boolean getEsControlTabla() {
		return this.esControlTabla;
	}

	public void setEsControlTabla(Boolean esControlTabla) {
		this.esControlTabla= esControlTabla;
	}
	
	public Boolean getIsSeleccionados() {
		return this.isSeleccionados;
	}

	public void setIsSeleccionados(Boolean isSeleccionados) {
		this.isSeleccionados= isSeleccionados;
	}
	
	public Boolean getIsPostAccionNuevo() {
		return this.isPostAccionNuevo;
	}

	public void setIsPostAccionNuevo(Boolean isPostAccionNuevo) {
		this.isPostAccionNuevo= isPostAccionNuevo;
	}
	
	public Boolean getIsPostAccionSinCerrar() {
		return this.isPostAccionSinCerrar;
	}

	public void setIsPostAccionSinCerrar(Boolean isPostAccionSinCerrar) {
		this.isPostAccionSinCerrar= isPostAccionSinCerrar;
	}
	
	public Boolean getIsPostAccionSinMensaje() {
		return this.isPostAccionSinMensaje;
	}

	public void setIsPostAccionSinMensaje(Boolean isPostAccionSinMensaje) {
		this.isPostAccionSinMensaje= isPostAccionSinMensaje;
	}
	
	public Boolean getConGraficoReporte() {
		return this.conGraficoReporte;
	}

	public void setConGraficoReporte(Boolean conGraficoReporte) {
		this.conGraficoReporte= conGraficoReporte;
	}
	
	
	public ArrayList<Reporte> gettiposArchivosReportes() {
		return this.tiposArchivosReportes;
	}
	
	public void settiposArchivosReportes(ArrayList<Reporte> tiposArchivosReportes) {
		this.tiposArchivosReportes = tiposArchivosReportes;
	}
	
	//TIPOS ARCHIVOS DINAMICOS
	public ArrayList<Reporte> gettiposArchivosReportesDinamico() {
		return this.tiposArchivosReportesDinamico;
	}
	
	public void settiposArchivosReportesDinamico(ArrayList<Reporte> tiposArchivosReportesDinamico) {
		this.tiposArchivosReportesDinamico = tiposArchivosReportesDinamico;
	}
	
	//TIPOS REPORTES
	public ArrayList<Reporte> gettiposReportes() {
		return this.tiposReportes;
	}
	
	public void settiposReportes(ArrayList<Reporte> tiposReportes) {
		this.tiposReportes = tiposReportes;
	}
	
	//TIPOS REPORTES
	public ArrayList<Reporte> gettiposReportesDinamico() {
		return this.tiposReportesDinamico;
	}
	
	public void settiposReportesDinamico(ArrayList<Reporte> tiposReportesDinamico) {
		this.tiposReportesDinamico = tiposReportesDinamico;
	}
	
	//TIPOS GRAFICOS REPORTES
	public ArrayList<Reporte> gettiposGraficosReportes() {
		return this.tiposGraficosReportes;
	}
	
	public void settiposGraficosReportes(ArrayList<Reporte> tiposGraficosReportes) {
		this.tiposGraficosReportes = tiposGraficosReportes;
	}
	
	public ArrayList<Reporte> gettiposPaginacion() {
		return this.tiposPaginacion;
	}
	
	public void settiposPaginacion(ArrayList<Reporte> tiposPaginacion) {
		this.tiposPaginacion = tiposPaginacion;
	}
	
	public ArrayList<Reporte> gettiposRelaciones() {
		return this.tiposRelaciones;
	}
	
	public void settiposRelaciones(ArrayList<Reporte> tiposRelaciones) {
		this.tiposRelaciones= tiposRelaciones;
	}
	
	public ArrayList<Reporte> gettiposAcciones() {
		return this.tiposAcciones;
	}
	
	public void settiposAcciones(ArrayList<Reporte> tiposAcciones) {
		this.tiposAcciones = tiposAcciones;
	}
	
	public ArrayList<Reporte> gettiposAccionesFormulario() {
		return this.tiposAccionesFormulario;
	}
	
	public void settiposAccionesFormulario(ArrayList<Reporte> tiposAccionesFormulario) {
		this.tiposAccionesFormulario = tiposAccionesFormulario;
	}
	
	public ArrayList<Reporte> gettiposSeleccionar() {
		return this.tiposSeleccionar;
	}
	
	public void settiposSeleccionar(ArrayList<Reporte> tiposSeleccionar) {
		this.tiposSeleccionar = tiposSeleccionar;
	}
	
	public ArrayList<Reporte> gettiposColumnasSelect() {
		return this.tiposColumnasSelect;
	}
	
	public void settiposColumnasSelect(ArrayList<Reporte> tiposColumnasSelect) {
		this.tiposColumnasSelect = tiposColumnasSelect;
	}
		
	public ArrayList<Reporte> gettiposRelacionesSelect() {
		return this.tiposRelacionesSelect;
	}
	
	public void settiposRelacionesSelect(ArrayList<Reporte> tiposRelacionesSelect) {
		this.tiposRelacionesSelect = tiposRelacionesSelect;
	}
	
	public Long getIIdUsuarioSesion() {
		return lIdUsuarioSesion;
	}

	public void setIIdUsuarioSesion(Long lIdUsuarioSesion) {
		this.lIdUsuarioSesion = lIdUsuarioSesion;
	}
	
	
	public List<Accion> getAccions() {
		return this.accions;
	}

	public void setAccions(List<Accion> accions) {
		this.accions = accions;
	}
	
	public List<Accion> getAccionsFormulario() {
		return this.accionsFormulario;
	}

	public void setAccionsFormulario(List<Accion> accionsFormulario) {
		this.accionsFormulario = accionsFormulario;
	}
	
	public String getsAccionMantenimiento() {
		return sAccionMantenimiento;
	}

	public void setsAccionMantenimiento(String sAccionMantenimiento) {
		this.sAccionMantenimiento = sAccionMantenimiento;
	}

	public String getsAccionBusqueda() {
		return sAccionBusqueda;
	}

	public void setsAccionBusqueda(String sAccionBusqueda) {
		this.sAccionBusqueda = sAccionBusqueda;
	}

	public String getsAccionAdicional() {
		return sAccionAdicional;
	}

	public void setsAccionAdicional(String sAccionAdicional) {
		this.sAccionAdicional = sAccionAdicional;
	}

	public String getsUltimaBusqueda() {
		return sUltimaBusqueda;
	}

	public void setsUltimaBusqueda(String sUltimaBusqueda) {
		this.sUltimaBusqueda = sUltimaBusqueda;
	}
	
	public String getsTipoArchivoReporte() {
		return sTipoArchivoReporte;
	}

	public void setsTipoArchivoReporte(String sTipoArchivoReporte) {
		this.sTipoArchivoReporte = sTipoArchivoReporte;
	}
	
	public String getsTipoArchivoReporteDinamico() {
		return sTipoArchivoReporteDinamico;
	}

	public void setsTipoArchivoReporteDinamico(String sTipoArchivoReporteDinamico) {
		this.sTipoArchivoReporteDinamico = sTipoArchivoReporteDinamico;
	}
	
	public String getsTipoReporte() {
		return sTipoReporte;
	}

	public void setsTipoReporte(String sTipoReporte) {
		this.sTipoReporte = sTipoReporte;
	}
	
	public String getsTipoReporteDinamico() {
		return sTipoReporteDinamico;
	}

	public void setsTipoReporteDinamico(String sTipoReporteDinamico) {
		this.sTipoReporteDinamico = sTipoReporteDinamico;
	}
	
	public String getsTipoGraficoReporte() {
		return sTipoGraficoReporte;
	}

	public void setsTipoGraficoReporte(String sTipoGraficoReporte) {
		this.sTipoGraficoReporte = sTipoGraficoReporte;
	}
	
	public String getsTipoPaginacion() {
		return sTipoPaginacion;
	}

	public void setsTipoPaginacion(String sTipoPaginacion) {
		this.sTipoPaginacion = sTipoPaginacion;
	}
	
	public String getsTipoRelacion() {
		return sTipoRelacion;
	}

	public void setsTipoRelacion(String sTipoRelacion) {
		this.sTipoRelacion = sTipoRelacion;
	}
	
	public String getsTipoAccion() {
		return sTipoAccion;
	}

	public void setsTipoAccion(String sTipoAccion) {
		this.sTipoAccion = sTipoAccion;
	}
	
	public String getsTipoAccionFormulario() {
		return sTipoAccionFormulario;
	}

	public void setsTipoAccionFormulario(String sTipoAccionFormulario) {
		this.sTipoAccionFormulario = sTipoAccionFormulario;
	}
	
	public String getsTipoSeleccionar() {
		return sTipoSeleccionar;
	}

	public void setsTipoSeleccionar(String sTipoSeleccionar) {
		this.sTipoSeleccionar = sTipoSeleccionar;
	}
	
	public String getsValorCampoGeneral() {
		return sValorCampoGeneral;
	}

	public void setsValorCampoGeneral(String sValorCampoGeneral) {
		this.sValorCampoGeneral = sValorCampoGeneral;
	}			

	public String getsDetalleReporte() {
		return sDetalleReporte;
	}

	public void setsDetalleReporte(String sDetalleReporte) {
		this.sDetalleReporte = sDetalleReporte;
	}
	
	
	public String getsTipoReporteExtra() {
		return sTipoReporteExtra;
	}

	public void setsTipoReporteExtra(String sTipoReporteExtra) {
		this.sTipoReporteExtra = sTipoReporteExtra;
	}
	
	public Boolean getesReporteDinamico() {
		return esReporteDinamico;
	}	
	
	public void setesReporteDinamico(Boolean esReporteDinamico) {
		this.esReporteDinamico = esReporteDinamico;
	}
	
	public Boolean getesRecargarFks() {
		return esRecargarFks;
	}	
	
	public void setesRecargarFks(Boolean esRecargarFks) {
		this.esRecargarFks = esRecargarFks;
	}
	
	public Boolean getesReporteAccionProceso() {
		return esReporteAccionProceso;
	}	
	
	public void setesReporteAccionProceso(Boolean esReporteAccionProceso) {
		this.esReporteAccionProceso= esReporteAccionProceso;
	}
		
	public DetaFormaPagoParameterReturnGeneral getDetaFormaPagoParameterGeneral() {
		return this.detaformapagoParameterGeneral;
	}
	
	public void setDetaFormaPagoParameterGeneral(DetaFormaPagoParameterReturnGeneral detaformapagoParameterGeneral) {
		this.detaformapagoParameterGeneral = detaformapagoParameterGeneral;
	}
	
	public String getsPathReporteDinamico() {
		return sPathReporteDinamico;
	}

	public void setsPathReporteDinamico(String sPathReporteDinamico) {
		this.sPathReporteDinamico = sPathReporteDinamico;
	}
		
	public Boolean getisMostrarNumeroPaginacion() {
		return isMostrarNumeroPaginacion;
	}

	public void setisMostrarNumeroPaginacion(Boolean isMostrarNumeroPaginacion) {
		this.isMostrarNumeroPaginacion = isMostrarNumeroPaginacion;
	}
	
	public Mensaje getMensaje() {
		return mensaje;
	}

	public void setMensaje(Mensaje mensaje) {
		this.mensaje = mensaje;
	}
	
	public Boolean getIsPermisoTodoDetaFormaPago() {
		return isPermisoTodoDetaFormaPago;
	}

	public void setIsPermisoTodoDetaFormaPago(Boolean isPermisoTodoDetaFormaPago) {
		this.isPermisoTodoDetaFormaPago = isPermisoTodoDetaFormaPago;
	}

	public Boolean getIsPermisoNuevoDetaFormaPago() {
		return isPermisoNuevoDetaFormaPago;
	}

	public void setIsPermisoNuevoDetaFormaPago(Boolean isPermisoNuevoDetaFormaPago) {
		this.isPermisoNuevoDetaFormaPago = isPermisoNuevoDetaFormaPago;
	}

	public Boolean getIsPermisoActualizarDetaFormaPago() {
		return isPermisoActualizarDetaFormaPago;
	}

	public void setIsPermisoActualizarDetaFormaPago(Boolean isPermisoActualizarDetaFormaPago) {
		this.isPermisoActualizarDetaFormaPago = isPermisoActualizarDetaFormaPago;
	}

	public Boolean getIsPermisoEliminarDetaFormaPago() {
		return isPermisoEliminarDetaFormaPago;
	}

	public void setIsPermisoEliminarDetaFormaPago(Boolean isPermisoEliminarDetaFormaPago) {
		this.isPermisoEliminarDetaFormaPago = isPermisoEliminarDetaFormaPago;
	}

	public Boolean getIsPermisoGuardarCambiosDetaFormaPago() {
		return isPermisoGuardarCambiosDetaFormaPago;
	}

	public void setIsPermisoGuardarCambiosDetaFormaPago(Boolean isPermisoGuardarCambiosDetaFormaPago) {
		this.isPermisoGuardarCambiosDetaFormaPago = isPermisoGuardarCambiosDetaFormaPago;
	}
	
	public Boolean getIsPermisoConsultaDetaFormaPago() {
		return isPermisoConsultaDetaFormaPago;
	}

	public void setIsPermisoConsultaDetaFormaPago(Boolean isPermisoConsultaDetaFormaPago) {
		this.isPermisoConsultaDetaFormaPago = isPermisoConsultaDetaFormaPago;
	}

	public Boolean getIsPermisoBusquedaDetaFormaPago() {
		return isPermisoBusquedaDetaFormaPago;
	}

	public void setIsPermisoBusquedaDetaFormaPago(Boolean isPermisoBusquedaDetaFormaPago) {
		this.isPermisoBusquedaDetaFormaPago = isPermisoBusquedaDetaFormaPago;
	}

	public Boolean getIsPermisoReporteDetaFormaPago() {
		return isPermisoReporteDetaFormaPago;
	}

	public void setIsPermisoReporteDetaFormaPago(Boolean isPermisoReporteDetaFormaPago) {
		this.isPermisoReporteDetaFormaPago = isPermisoReporteDetaFormaPago;
	}
	
	public Boolean getIsPermisoPaginacionMedioDetaFormaPago() {
		return isPermisoPaginacionMedioDetaFormaPago;
	}

	public void setIsPermisoPaginacionMedioDetaFormaPago(Boolean isPermisoPaginacionMedioDetaFormaPago) {
		this.isPermisoPaginacionMedioDetaFormaPago = isPermisoPaginacionMedioDetaFormaPago;
	}
	
	public Boolean getIsPermisoPaginacionTodoDetaFormaPago() {
		return isPermisoPaginacionTodoDetaFormaPago;
	}

	public void setIsPermisoPaginacionTodoDetaFormaPago(Boolean isPermisoPaginacionTodoDetaFormaPago) {
		this.isPermisoPaginacionTodoDetaFormaPago = isPermisoPaginacionTodoDetaFormaPago;
	}
	
	public Boolean getIsPermisoPaginacionAltoDetaFormaPago() {
		return isPermisoPaginacionAltoDetaFormaPago;
	}

	public void setIsPermisoPaginacionAltoDetaFormaPago(Boolean isPermisoPaginacionAltoDetaFormaPago) {
		this.isPermisoPaginacionAltoDetaFormaPago = isPermisoPaginacionAltoDetaFormaPago;
	}
	
	public Boolean getIsPermisoCopiarDetaFormaPago() {
		return isPermisoCopiarDetaFormaPago;
	}

	public void setIsPermisoCopiarDetaFormaPago(Boolean isPermisoCopiarDetaFormaPago) {
		this.isPermisoCopiarDetaFormaPago = isPermisoCopiarDetaFormaPago;
	}
	
	public Boolean getIsPermisoVerFormDetaFormaPago() {
		return isPermisoVerFormDetaFormaPago;
	}

	public void setIsPermisoVerFormDetaFormaPago(Boolean isPermisoVerFormDetaFormaPago) {
		this.isPermisoVerFormDetaFormaPago = isPermisoVerFormDetaFormaPago;
	}
	
	public Boolean getIsPermisoDuplicarDetaFormaPago() {
		return isPermisoDuplicarDetaFormaPago;
	}

	public void setIsPermisoDuplicarDetaFormaPago(Boolean isPermisoDuplicarDetaFormaPago) {
		this.isPermisoDuplicarDetaFormaPago = isPermisoDuplicarDetaFormaPago;
	}
	
	public Boolean getIsPermisoOrdenDetaFormaPago() {
		return isPermisoOrdenDetaFormaPago;
	}

	public void setIsPermisoOrdenDetaFormaPago(Boolean isPermisoOrdenDetaFormaPago) {
		this.isPermisoOrdenDetaFormaPago = isPermisoOrdenDetaFormaPago;
	}
	
	public String getsVisibilidadTablaBusquedas() {
		return sVisibilidadTablaBusquedas;
	}

	public void setsVisibilidadTablaBusquedas(String sVisibilidadTablaBusquedas) {
		this.sVisibilidadTablaBusquedas = sVisibilidadTablaBusquedas;
	}
	
	public String getsVisibilidadTablaElementos() {
		return sVisibilidadTablaElementos;
	}

	public void setsVisibilidadTablaElementos(String sVisibilidadTablaElementos) {
		this.sVisibilidadTablaElementos = sVisibilidadTablaElementos;
	}

	public String getsVisibilidadTablaAcciones() {
		return sVisibilidadTablaAcciones;
	}

	public void setsVisibilidadTablaAcciones(String sVisibilidadTablaAcciones) {
		this.sVisibilidadTablaAcciones = sVisibilidadTablaAcciones;
	}
	
	public Boolean getIsVisibilidadCeldaNuevoDetaFormaPago() {
		return isVisibilidadCeldaNuevoDetaFormaPago;
	}

	public void setIsVisibilidadCeldaNuevoDetaFormaPago(Boolean isVisibilidadCeldaNuevoDetaFormaPago) {
		this.isVisibilidadCeldaNuevoDetaFormaPago = isVisibilidadCeldaNuevoDetaFormaPago;
	}
	
	public Boolean getIsVisibilidadCeldaDuplicarDetaFormaPago() {
		return isVisibilidadCeldaDuplicarDetaFormaPago;
	}

	public void setIsVisibilidadCeldaDuplicarDetaFormaPago(Boolean isVisibilidadCeldaDuplicarDetaFormaPago) {
		this.isVisibilidadCeldaDuplicarDetaFormaPago = isVisibilidadCeldaDuplicarDetaFormaPago;
	}
	
	public Boolean getIsVisibilidadCeldaCopiarDetaFormaPago() {
		return isVisibilidadCeldaCopiarDetaFormaPago;
	}

	public void setIsVisibilidadCeldaCopiarDetaFormaPago(Boolean isVisibilidadCeldaCopiarDetaFormaPago) {
		this.isVisibilidadCeldaCopiarDetaFormaPago = isVisibilidadCeldaCopiarDetaFormaPago;
	}
	
	public Boolean getIsVisibilidadCeldaVerFormDetaFormaPago() {
		return isVisibilidadCeldaVerFormDetaFormaPago;
	}

	public void setIsVisibilidadCeldaVerFormDetaFormaPago(Boolean isVisibilidadCeldaVerFormDetaFormaPago) {
		this.isVisibilidadCeldaVerFormDetaFormaPago = isVisibilidadCeldaVerFormDetaFormaPago;
	}
	
	public Boolean getIsVisibilidadCeldaOrdenDetaFormaPago() {
		return isVisibilidadCeldaOrdenDetaFormaPago;
	}

	public void setIsVisibilidadCeldaOrdenDetaFormaPago(Boolean isVisibilidadCeldaOrdenDetaFormaPago) {
		this.isVisibilidadCeldaOrdenDetaFormaPago = isVisibilidadCeldaOrdenDetaFormaPago;
	}
	
	public Boolean getIsVisibilidadCeldaNuevoRelacionesDetaFormaPago() {
		return isVisibilidadCeldaNuevoRelacionesDetaFormaPago;
	}

	public void setIsVisibilidadCeldaNuevoRelacionesDetaFormaPago(Boolean isVisibilidadCeldaNuevoRelacionesDetaFormaPago) {
		this.isVisibilidadCeldaNuevoRelacionesDetaFormaPago = isVisibilidadCeldaNuevoRelacionesDetaFormaPago;
	}
	
	public Boolean getIsVisibilidadCeldaModificarDetaFormaPago() {
		return isVisibilidadCeldaModificarDetaFormaPago;
	}

	public void setIsVisibilidadCeldaModificarDetaFormaPago(Boolean isVisibilidadCeldaModificarDetaFormaPago) {
		this.isVisibilidadCeldaModificarDetaFormaPago = isVisibilidadCeldaModificarDetaFormaPago;
	}
	
	public Boolean getIsVisibilidadCeldaActualizarDetaFormaPago() {
		return isVisibilidadCeldaActualizarDetaFormaPago;
	}

	public void setIsVisibilidadCeldaActualizarDetaFormaPago(Boolean isVisibilidadCeldaActualizarDetaFormaPago) {
		this.isVisibilidadCeldaActualizarDetaFormaPago = isVisibilidadCeldaActualizarDetaFormaPago;
	}

	public Boolean getIsVisibilidadCeldaEliminarDetaFormaPago() {
		return isVisibilidadCeldaEliminarDetaFormaPago;
	}

	public void setIsVisibilidadCeldaEliminarDetaFormaPago(Boolean isVisibilidadCeldaEliminarDetaFormaPago) {
		this.isVisibilidadCeldaEliminarDetaFormaPago = isVisibilidadCeldaEliminarDetaFormaPago;
	}

	public Boolean getIsVisibilidadCeldaCancelarDetaFormaPago() {
		return isVisibilidadCeldaCancelarDetaFormaPago;
	}

	public void setIsVisibilidadCeldaCancelarDetaFormaPago(Boolean isVisibilidadCeldaCancelarDetaFormaPago) {
		this.isVisibilidadCeldaCancelarDetaFormaPago = isVisibilidadCeldaCancelarDetaFormaPago;
	}

	public Boolean getIsVisibilidadCeldaGuardarDetaFormaPago() {
		return isVisibilidadCeldaGuardarDetaFormaPago;
	}

	public void setIsVisibilidadCeldaGuardarDetaFormaPago(Boolean isVisibilidadCeldaGuardarDetaFormaPago) {
		this.isVisibilidadCeldaGuardarDetaFormaPago = isVisibilidadCeldaGuardarDetaFormaPago;
	}
	
	public Boolean getIsVisibilidadCeldaGuardarCambiosDetaFormaPago() {
		return isVisibilidadCeldaGuardarCambiosDetaFormaPago;
	}

	public void setIsVisibilidadCeldaGuardarCambiosDetaFormaPago(Boolean isVisibilidadCeldaGuardarCambiosDetaFormaPago) {
		this.isVisibilidadCeldaGuardarCambiosDetaFormaPago = isVisibilidadCeldaGuardarCambiosDetaFormaPago;
	}
		
	public DetaFormaPagoSessionBean getdetaformapagoSessionBean() {
		return this.detaformapagoSessionBean;
	}
	
	public void setdetaformapagoSessionBean(DetaFormaPagoSessionBean detaformapagoSessionBean) {
		this.detaformapagoSessionBean=detaformapagoSessionBean;
	}
	
	
	public Boolean getisVisibilidadFK_IdAnio() {
		return this.isVisibilidadFK_IdAnio;
	}

	public void setisVisibilidadFK_IdAnio(Boolean isVisibilidadFK_IdAnio) {
		this.isVisibilidadFK_IdAnio=isVisibilidadFK_IdAnio;
	}

	public Boolean getisVisibilidadFK_IdCuentaContable() {
		return this.isVisibilidadFK_IdCuentaContable;
	}

	public void setisVisibilidadFK_IdCuentaContable(Boolean isVisibilidadFK_IdCuentaContable) {
		this.isVisibilidadFK_IdCuentaContable=isVisibilidadFK_IdCuentaContable;
	}

	public Boolean getisVisibilidadFK_IdDetaFormaPagoFactu() {
		return this.isVisibilidadFK_IdDetaFormaPagoFactu;
	}

	public void setisVisibilidadFK_IdDetaFormaPagoFactu(Boolean isVisibilidadFK_IdDetaFormaPagoFactu) {
		this.isVisibilidadFK_IdDetaFormaPagoFactu=isVisibilidadFK_IdDetaFormaPagoFactu;
	}

	public Boolean getisVisibilidadFK_IdEjercicio() {
		return this.isVisibilidadFK_IdEjercicio;
	}

	public void setisVisibilidadFK_IdEjercicio(Boolean isVisibilidadFK_IdEjercicio) {
		this.isVisibilidadFK_IdEjercicio=isVisibilidadFK_IdEjercicio;
	}

	public Boolean getisVisibilidadFK_IdEmpresa() {
		return this.isVisibilidadFK_IdEmpresa;
	}

	public void setisVisibilidadFK_IdEmpresa(Boolean isVisibilidadFK_IdEmpresa) {
		this.isVisibilidadFK_IdEmpresa=isVisibilidadFK_IdEmpresa;
	}

	public Boolean getisVisibilidadFK_IdFactura() {
		return this.isVisibilidadFK_IdFactura;
	}

	public void setisVisibilidadFK_IdFactura(Boolean isVisibilidadFK_IdFactura) {
		this.isVisibilidadFK_IdFactura=isVisibilidadFK_IdFactura;
	}

	public Boolean getisVisibilidadFK_IdMes() {
		return this.isVisibilidadFK_IdMes;
	}

	public void setisVisibilidadFK_IdMes(Boolean isVisibilidadFK_IdMes) {
		this.isVisibilidadFK_IdMes=isVisibilidadFK_IdMes;
	}

	public Boolean getisVisibilidadFK_IdPeriodo() {
		return this.isVisibilidadFK_IdPeriodo;
	}

	public void setisVisibilidadFK_IdPeriodo(Boolean isVisibilidadFK_IdPeriodo) {
		this.isVisibilidadFK_IdPeriodo=isVisibilidadFK_IdPeriodo;
	}

	public Boolean getisVisibilidadFK_IdSucursal() {
		return this.isVisibilidadFK_IdSucursal;
	}

	public void setisVisibilidadFK_IdSucursal(Boolean isVisibilidadFK_IdSucursal) {
		this.isVisibilidadFK_IdSucursal=isVisibilidadFK_IdSucursal;
	}

	public Boolean getisVisibilidadFK_IdTipoDetaFormaPago() {
		return this.isVisibilidadFK_IdTipoDetaFormaPago;
	}

	public void setisVisibilidadFK_IdTipoDetaFormaPago(Boolean isVisibilidadFK_IdTipoDetaFormaPago) {
		this.isVisibilidadFK_IdTipoDetaFormaPago=isVisibilidadFK_IdTipoDetaFormaPago;
	}

	public Boolean getisVisibilidadFK_IdTipoFormaPago() {
		return this.isVisibilidadFK_IdTipoFormaPago;
	}

	public void setisVisibilidadFK_IdTipoFormaPago(Boolean isVisibilidadFK_IdTipoFormaPago) {
		this.isVisibilidadFK_IdTipoFormaPago=isVisibilidadFK_IdTipoFormaPago;
	}

	public Boolean getisVisibilidadFK_IdTipoRetencion() {
		return this.isVisibilidadFK_IdTipoRetencion;
	}

	public void setisVisibilidadFK_IdTipoRetencion(Boolean isVisibilidadFK_IdTipoRetencion) {
		this.isVisibilidadFK_IdTipoRetencion=isVisibilidadFK_IdTipoRetencion;
	}

	
	
	public void setVariablesFormularioToObjetoActualForeignKeysDetaFormaPago(DetaFormaPago detaformapago)throws Exception {
		try {
			
				this.setActualParaGuardarEmpresaForeignKey(detaformapago,null);
				this.setActualParaGuardarSucursalForeignKey(detaformapago,null);
				this.setActualParaGuardarEjercicioForeignKey(detaformapago,null);
				this.setActualParaGuardarPeriodoForeignKey(detaformapago,null);
				this.setActualParaGuardarFacturaForeignKey(detaformapago,null);
				this.setActualParaGuardarTipoFormaPagoForeignKey(detaformapago,null);
				this.setActualParaGuardarTipoDetaFormaPagoForeignKey(detaformapago,null);
				this.setActualParaGuardarDetaFormaPagoFactuForeignKey(detaformapago,null);
				this.setActualParaGuardarCuentaContableForeignKey(detaformapago,null);
				this.setActualParaGuardarTipoRetencionForeignKey(detaformapago,null);
				this.setActualParaGuardarAnioForeignKey(detaformapago,null);
				this.setActualParaGuardarMesForeignKey(detaformapago,null);
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void cargarLicenciaCliente(DatosCliente datosCliente) throws Exception {
		Boolean existe=false;
			
		try {
				InputStream reportFile=null;
				
				String sPath=this.parametroGeneralUsuario.getpath_exportar()+"erp_bydan/license/license.xml";
				
				reportFile = new FileInputStream(sPath);
				
				Document documentBuilder=null;
				
				if(this.constantes2.DOCUMENT_BUILDER==null) {
					documentBuilder=Funciones2.parseXml(reportFile);
				} else {
					documentBuilder=this.constantes2.DOCUMENT_BUILDER;
				}
				
				//GlobalSeguridad.readXml(documentBuilder);
				
				String sNamePCServerLicencia="";
				String sClaveSistemaLicencia="";
				Date dFechaServerLicencia=null;
				
				//CARGAR ELEMENTOS DE LICENCIA
				NodeList nodeList = documentBuilder.getElementsByTagName("Licencia");
				
				for (int iIndice = 0; iIndice < nodeList.getLength(); iIndice++) {
					Node node = nodeList.item(iIndice);
				
					if (node.getNodeType() == Node.ELEMENT_NODE) {
						Element element = (Element) node;
						 
						sNamePCServerLicencia=element.getElementsByTagName("NombrePc").item(0).getTextContent();
						sClaveSistemaLicencia=element.getElementsByTagName("ClaveSistema").item(0).getTextContent();
						
						existe=true;
						break;
					}
				}														
			
				
			if(existe) {
				datosCliente.setsClaveSistema(sClaveSistemaLicencia);
				
				if(!datosCliente.getsNamePCServer().equals(sNamePCServerLicencia)
					&& !datosCliente.getsNamePCServer().equals("")) {
					
					datosCliente.setsNamePCServer(sNamePCServerLicencia);
				}
			} else {
				throw new Exception("NO EXISTE LICENCIA O NO ESTA BIEN FORMADO");
			}
		} catch(Exception e) {
			throw new Exception("NO EXISTE LICENCIA O NO ESTA BIEN FORMADO");
		}						
	}
	
	public void cargarDatosCliente() throws Exception {
		String sPrimerMacAddress="";		
		String sHostName="";		 
		String sHostIp="";		  
		String sHostUser="";
		
		
		sPrimerMacAddress=FuncionesNetwork.getPrimerMacAddress();		
		sHostName=FuncionesNetwork.getHostName();		 
		sHostIp=FuncionesNetwork.getHostIp();		  
		sHostUser=FuncionesNetwork.getHostUser();
		
		
		this.datosCliente=new DatosCliente();
		if(lIdUsuarioSesion!=null){datosCliente.setIdUsuario(this.lIdUsuarioSesion);}
		
		//SERVIDOR WEB Y TALVEZ SERVIDOR SWING WINDOWS
		this.datosCliente.setsUsuarioPCServer(sHostUser);
		this.datosCliente.setsNamePCServer(sHostName);
		this.datosCliente.setsIPPCServer(sHostIp);
		this.datosCliente.setsMacAddressPCServer(sPrimerMacAddress);
			
			//CLIENTE SWING WINDOWS
			this.datosCliente.setIsClienteWeb(false);
			
			this.datosCliente.setsUsuarioPC(sHostUser);
			this.datosCliente.setsNamePC(sHostName);
			this.datosCliente.setsIPPC(sHostIp);
			this.datosCliente.setsMacAddressPC(sPrimerMacAddress);	
			
			
			//this.cargarLicenciaCliente(this.datosCliente);
			
	}
	
	public void bugActualizarReferenciaActual(DetaFormaPago detaformapago,DetaFormaPago detaformapagoAux) throws Exception {
		//ARCHITECTURE		
		//EL ID NEGATIVO GUARDADO EN ORIGINAL SIRVE PARA VERIFICAR Y ACTUALIZAR EL REGISTRO NUEVO (ID,VERSIONROW)
		this.setCamposBaseDesdeOriginalDetaFormaPago(detaformapago);
					
		//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
		detaformapagoAux.setId(detaformapago.getId());
		detaformapagoAux.setVersionRow(detaformapago.getVersionRow());					
	}
	
	public void ejecutarMantenimiento(MaintenanceType maintenanceType)throws Exception {	
		try	{								
			
			//this.startProcessDetaFormaPago();
		
			int intSelectedRow = this.jTableDatosDetaFormaPago.getSelectedRow();	       
			
			//PUEDE SER -1 CUANDO SE ELIMINA EN GUARDAR CAMBIOS
			if(intSelectedRow>=0 && maintenanceType!=MaintenanceType.GUARDARCAMBIOS) {
				//SE PIEDE INDICE SELECTED CON FILA TOTALES, ASEGURARSE QUE OBJETO ACTUAL ESTE EN FORMULARIO
					
				//ARCHITECTURE
				
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detaformapago =(DetaFormaPago) this.detaformapagoLogic.getDetaFormaPagos().toArray()[this.jTableDatosDetaFormaPago.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
					this.detaformapago =(DetaFormaPago) this.detaformapagos.toArray()[this.jTableDatosDetaFormaPago.convertRowIndexToModel(intSelectedRow)];
				}
				
				//ARCHITECTURE
				
				if(DetaFormaPagoJInternalFrame.ISBINDING_MANUAL_TABLA) {
					//this.setVariablesFormularioToObjetoActualDetaFormaPago(this.detaformapago,true);
				}
				
				this.setVariablesFormularioToObjetoActualForeignKeysDetaFormaPago(this.detaformapago);
			}
			
			//LUEGO DE TRAER DATOS CORRESPONDIENTES QUE COINCIDA LISTA TABLA QUITO FILA TOTALES
			if(this.conTotales) {
				//MEJOR LO DEJO, SI EXISTE EXCEPCION SE PIEDE FILA TOTALES Y ORDEN INDICE FILA ACTUAL
				//this.quitarFilaTotales();
			}
			
			this.cargarDatosCliente();
			
			this.datosDeep=new DatosDeep();
			
			//SE CAMBIA ESTADOS CON ERROR, ENTONCES SE EJECUTA ANTES
			//this.invalidValues = detaformapagoValidator.getInvalidValues(this.detaformapago);
			
			//if(this.invalidValues==null || this.invalidValues.length<=0) {
			
			detaformapagoLogic.setDatosCliente(datosCliente);
			detaformapagoLogic.setIsConDeep(false);
			
			if(maintenanceType==MaintenanceType.NUEVO) {
				detaformapagoAux=new  DetaFormaPago();
				
				detaformapagoAux.setIsNew(true);
				detaformapagoAux.setIsChanged(true);
				
				detaformapagoAux.setDetaFormaPagoOriginal(this.detaformapago);
				
				detaformapagoAux.setId(this.detaformapago.getId());	
				detaformapagoAux.setVersionRow(this.detaformapago.getVersionRow());	
				detaformapagoAux.setid_empresa(this.detaformapago.getid_empresa());	
				detaformapagoAux.setid_sucursal(this.detaformapago.getid_sucursal());	
				detaformapagoAux.setid_ejercicio(this.detaformapago.getid_ejercicio());	
				detaformapagoAux.setid_periodo(this.detaformapago.getid_periodo());	
				detaformapagoAux.setid_factura(this.detaformapago.getid_factura());	
				detaformapagoAux.setid_tipo_forma_pago(this.detaformapago.getid_tipo_forma_pago());	
				detaformapagoAux.setid_tipo_deta_forma_pago(this.detaformapago.getid_tipo_deta_forma_pago());	
				detaformapagoAux.setid_deta_forma_pago_factu(this.detaformapago.getid_deta_forma_pago_factu());	
				detaformapagoAux.setid_cuenta_contable(this.detaformapago.getid_cuenta_contable());	
				detaformapagoAux.setid_tipo_retencion(this.detaformapago.getid_tipo_retencion());	
				detaformapagoAux.setvalor(this.detaformapago.getvalor());	
				detaformapagoAux.setfecha_inicial(this.detaformapago.getfecha_inicial());	
				detaformapagoAux.setfecha_final(this.detaformapago.getfecha_final());	
				detaformapagoAux.setporcentaje(this.detaformapago.getporcentaje());	
				detaformapagoAux.setretencion(this.detaformapago.getretencion());	
				detaformapagoAux.setporcentaje_retencion(this.detaformapago.getporcentaje_retencion());	
				detaformapagoAux.setbase_retencion(this.detaformapago.getbase_retencion());	
				detaformapagoAux.setvalor_retencion(this.detaformapago.getvalor_retencion());	
				detaformapagoAux.setnumero_retencion(this.detaformapago.getnumero_retencion());	
				detaformapagoAux.setnumero_dias(this.detaformapago.getnumero_dias());	
				detaformapagoAux.setnumero_cuota(this.detaformapago.getnumero_cuota());	
				detaformapagoAux.setdescripcion(this.detaformapago.getdescripcion());	
				detaformapagoAux.setid_anio(this.detaformapago.getid_anio());	
				detaformapagoAux.setid_mes(this.detaformapago.getid_mes());	
								
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//NO ENTENDIBLE PORQUE PONER
					//if(this.detaformapagoSessionBean.getEstaModoGuardarRelaciones() 
					//	|| this.detaformapagoSessionBean.getEsGuardarRelacionado())	{
						actualizarLista(detaformapagoAux,detaformapagoLogic.getDetaFormaPagos());
					//}
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(detaformapagoAux,detaformapagos);
				}
				//ARCHITECTURE
				
				if(!isGuardarCambiosEnLote  && !this.detaformapagoSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.detaformapagoSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						detaformapagoLogic.saveDetaFormaPagos();//WithConnection
						//detaformapagoLogic.getSetVersionRowDetaFormaPagos();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE		
					
					//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
					this.bugActualizarReferenciaActual(this.detaformapago,detaformapagoAux);
					
					this.refrescarForeignKeysDescripcionesDetaFormaPago();
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					if(this.detaformapagoSessionBean.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							
							this.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoBeanSwingJInternalFrame.bancoformapagoLogic.getBancoFormaPagos().addAll(this.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoBeanSwingJInternalFrame.bancoformapagosEliminados);
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
							this.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoBeanSwingJInternalFrame.bancoformapagos.addAll(this.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoBeanSwingJInternalFrame.bancoformapagosEliminados);
						}
						//ARCHITECTURE	
						
						if(!this.detaformapagoSessionBean.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							
								if(this.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoBeanSwingJInternalFrame.quitarFilaTotales();*/}
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
								if(this.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoBeanSwingJInternalFrame.quitarFilaTotales();*/}	
							}
							//ARCHITECTURE
												
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								detaformapagoLogic.saveDetaFormaPagoRelaciones(detaformapagoAux,this.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoBeanSwingJInternalFrame.bancoformapagoLogic.getBancoFormaPagos());//WithConnection
								//detaformapagoLogic.getSetVersionRowDetaFormaPagos();//WithConnection
							} else if(Constantes.ISUSAEJBREMOTE) {
							} else if(Constantes.ISUSAEJBHOME) {
							}
							//ARCHITECTURE
							
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							this.bugActualizarReferenciaActual(this.detaformapago,detaformapagoAux);
					
					
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								
							this.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoBeanSwingJInternalFrame.bancoformapagoLogic.setBancoFormaPagos(new ArrayList<BancoFormaPago>());
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							this.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoBeanSwingJInternalFrame.bancoformapagos= new ArrayList<BancoFormaPago>();
							}
							//ARCHITECTURE	
						} else {
							
							

							if(this.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoBeanSwingJInternalFrame.quitarFilaTotales();}
							detaformapagoAux.setBancoFormaPagos(this.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoBeanSwingJInternalFrame.bancoformapagoLogic.getBancoFormaPagos());
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								if(this.detaformapagoSessionBean.getEstaModoGuardarRelaciones() 
									|| this.detaformapagoSessionBean.getEsGuardarRelacionado())	{
									actualizarLista(detaformapagoAux,detaformapagoLogic.getDetaFormaPagos());
								}
							} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
								actualizarLista(detaformapagoAux,detaformapagos);
							}
							//ARCHITECTURE
							
							//AQUI EL ID NEGATIVO ES EL ID BUSCADO, YA QUE NO SE GENERA OTRO EN LA DB POR INGRESAR UNO NUEVO
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							//this.bugActualizarReferenciaActual(this.detaformapago,detaformapagoAux);												
						}
					}
				}
			} else if(maintenanceType==MaintenanceType.ACTUALIZAR) {
				detaformapagoAux=new  DetaFormaPago();
				
				//PUEDE QUE SE ACTUALIZE ALGUN REGISTRO NUEVO
				if(!this.detaformapagoSessionBean.getEsGuardarRelacionado() 
					|| (this.detaformapagoSessionBean.getEsGuardarRelacionado() && this.detaformapago.getId()>=0)) {
						
					detaformapagoAux.setIsNew(false);
				}
				
				detaformapagoAux.setIsDeleted(false);
			
				detaformapagoAux.setId(this.detaformapago.getId());	
				detaformapagoAux.setVersionRow(this.detaformapago.getVersionRow());	
				detaformapagoAux.setid_empresa(this.detaformapago.getid_empresa());	
				detaformapagoAux.setid_sucursal(this.detaformapago.getid_sucursal());	
				detaformapagoAux.setid_ejercicio(this.detaformapago.getid_ejercicio());	
				detaformapagoAux.setid_periodo(this.detaformapago.getid_periodo());	
				detaformapagoAux.setid_factura(this.detaformapago.getid_factura());	
				detaformapagoAux.setid_tipo_forma_pago(this.detaformapago.getid_tipo_forma_pago());	
				detaformapagoAux.setid_tipo_deta_forma_pago(this.detaformapago.getid_tipo_deta_forma_pago());	
				detaformapagoAux.setid_deta_forma_pago_factu(this.detaformapago.getid_deta_forma_pago_factu());	
				detaformapagoAux.setid_cuenta_contable(this.detaformapago.getid_cuenta_contable());	
				detaformapagoAux.setid_tipo_retencion(this.detaformapago.getid_tipo_retencion());	
				detaformapagoAux.setvalor(this.detaformapago.getvalor());	
				detaformapagoAux.setfecha_inicial(this.detaformapago.getfecha_inicial());	
				detaformapagoAux.setfecha_final(this.detaformapago.getfecha_final());	
				detaformapagoAux.setporcentaje(this.detaformapago.getporcentaje());	
				detaformapagoAux.setretencion(this.detaformapago.getretencion());	
				detaformapagoAux.setporcentaje_retencion(this.detaformapago.getporcentaje_retencion());	
				detaformapagoAux.setbase_retencion(this.detaformapago.getbase_retencion());	
				detaformapagoAux.setvalor_retencion(this.detaformapago.getvalor_retencion());	
				detaformapagoAux.setnumero_retencion(this.detaformapago.getnumero_retencion());	
				detaformapagoAux.setnumero_dias(this.detaformapago.getnumero_dias());	
				detaformapagoAux.setnumero_cuota(this.detaformapago.getnumero_cuota());	
				detaformapagoAux.setdescripcion(this.detaformapago.getdescripcion());	
				detaformapagoAux.setid_anio(this.detaformapago.getid_anio());	
				detaformapagoAux.setid_mes(this.detaformapago.getid_mes());	
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					actualizarLista(detaformapagoAux,detaformapagoLogic.getDetaFormaPagos());
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(detaformapagoAux,detaformapagos);
				}
				//ARCHITECTURE
				
				if(!isGuardarCambiosEnLote && !this.detaformapagoSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.detaformapagoSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						detaformapagoLogic.saveDetaFormaPagos();//WithConnection
						//detaformapagoLogic.getSetVersionRowDetaFormaPagos();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}	
					//ARCHITECTURE
					
					//TALVEZ ESTA DEMAS POR SER UPDATE
					//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
					this.bugActualizarReferenciaActual(this.detaformapago,detaformapagoAux);
					
					this.refrescarForeignKeysDescripcionesDetaFormaPago();
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					if(this.detaformapagoSessionBean.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							
							this.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoBeanSwingJInternalFrame.bancoformapagoLogic.getBancoFormaPagos().addAll(this.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoBeanSwingJInternalFrame.bancoformapagosEliminados);
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
							this.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoBeanSwingJInternalFrame.bancoformapagos.addAll(this.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoBeanSwingJInternalFrame.bancoformapagosEliminados);
						}
						//ARCHITECTURE
						
						if(!this.detaformapagoSessionBean.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							
								if(this.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoBeanSwingJInternalFrame.quitarFilaTotales();*/}
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
								if(this.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoBeanSwingJInternalFrame.quitarFilaTotales();*/}	
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								detaformapagoLogic.saveDetaFormaPagoRelaciones(detaformapagoAux,this.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoBeanSwingJInternalFrame.bancoformapagoLogic.getBancoFormaPagos());//WithConnection
								//detaformapagoLogic.getSetVersionRowDetaFormaPagos();//WithConnection
							} else if(Constantes.ISUSAEJBREMOTE) {
							} else if(Constantes.ISUSAEJBHOME) {
							}
							//ARCHITECTURE
							
							//TALVEZ ESTA DEMAS POR SER UPDATE
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							this.bugActualizarReferenciaActual(this.detaformapago,detaformapagoAux);
					
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								
							this.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoBeanSwingJInternalFrame.bancoformapagoLogic.setBancoFormaPagos(new ArrayList<BancoFormaPago>());
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							this.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoBeanSwingJInternalFrame.bancoformapagos= new ArrayList<BancoFormaPago>();
							}
							//ARCHITECTURE
						} else {
							
							

							if(this.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoBeanSwingJInternalFrame.quitarFilaTotales();}
							detaformapagoAux.setBancoFormaPagos(this.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoBeanSwingJInternalFrame.bancoformapagoLogic.getBancoFormaPagos());
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								if(this.detaformapagoSessionBean.getEstaModoGuardarRelaciones() 
									|| this.detaformapagoSessionBean.getEsGuardarRelacionado())	{
									actualizarLista(detaformapagoAux,detaformapagoLogic.getDetaFormaPagos());
								}
							} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
								actualizarLista(detaformapagoAux,detaformapagos);
							}
							//ARCHITECTURE
							
							//AQUI EL ID NEGATIVO ES EL ID BUSCADO, YA QUE NO SE GENERA OTRO EN LA DB POR INGRESAR UNO NUEVO							
							//TALVEZ ESTA DEMAS POR SER UPDATE
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							//this.bugActualizarReferenciaActual(this.detaformapago,detaformapagoAux);
					
						}
					}
				}				
			} else if(maintenanceType==MaintenanceType.ELIMINAR) {
				detaformapagoAux=new  DetaFormaPago();
				
				detaformapagoAux.setIsNew(false);
				detaformapagoAux.setIsChanged(false);
				
				detaformapagoAux.setIsDeleted(true);
				
				detaformapagoAux.setId(this.detaformapago.getId());	
				detaformapagoAux.setVersionRow(this.detaformapago.getVersionRow());	
				detaformapagoAux.setid_empresa(this.detaformapago.getid_empresa());	
				detaformapagoAux.setid_sucursal(this.detaformapago.getid_sucursal());	
				detaformapagoAux.setid_ejercicio(this.detaformapago.getid_ejercicio());	
				detaformapagoAux.setid_periodo(this.detaformapago.getid_periodo());	
				detaformapagoAux.setid_factura(this.detaformapago.getid_factura());	
				detaformapagoAux.setid_tipo_forma_pago(this.detaformapago.getid_tipo_forma_pago());	
				detaformapagoAux.setid_tipo_deta_forma_pago(this.detaformapago.getid_tipo_deta_forma_pago());	
				detaformapagoAux.setid_deta_forma_pago_factu(this.detaformapago.getid_deta_forma_pago_factu());	
				detaformapagoAux.setid_cuenta_contable(this.detaformapago.getid_cuenta_contable());	
				detaformapagoAux.setid_tipo_retencion(this.detaformapago.getid_tipo_retencion());	
				detaformapagoAux.setvalor(this.detaformapago.getvalor());	
				detaformapagoAux.setfecha_inicial(this.detaformapago.getfecha_inicial());	
				detaformapagoAux.setfecha_final(this.detaformapago.getfecha_final());	
				detaformapagoAux.setporcentaje(this.detaformapago.getporcentaje());	
				detaformapagoAux.setretencion(this.detaformapago.getretencion());	
				detaformapagoAux.setporcentaje_retencion(this.detaformapago.getporcentaje_retencion());	
				detaformapagoAux.setbase_retencion(this.detaformapago.getbase_retencion());	
				detaformapagoAux.setvalor_retencion(this.detaformapago.getvalor_retencion());	
				detaformapagoAux.setnumero_retencion(this.detaformapago.getnumero_retencion());	
				detaformapagoAux.setnumero_dias(this.detaformapago.getnumero_dias());	
				detaformapagoAux.setnumero_cuota(this.detaformapago.getnumero_cuota());	
				detaformapagoAux.setdescripcion(this.detaformapago.getdescripcion());	
				detaformapagoAux.setid_anio(this.detaformapago.getid_anio());	
				detaformapagoAux.setid_mes(this.detaformapago.getid_mes());	
				
				if(this.detaformapagoSessionBean.getEsGuardarRelacionado()) {
					//ELEMENTO ACTUAL NO SE HA INGRESADO AL SISTEMA, NO SE PUEDE ELIMINAR ALGO QUE NO EXISTE
					if(this.detaformapagoAux.getId()>=0) {	
						this.detaformapagosEliminados.add(detaformapagoAux);											
					}
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					actualizarLista(detaformapagoAux,detaformapagoLogic.getDetaFormaPagos());
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(detaformapagoAux,detaformapagos);
				}
				//ARCHITECTURE
				
				
				if(!isGuardarCambiosEnLote && !this.detaformapagoSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.detaformapagoSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						detaformapagoLogic.saveDetaFormaPagos();//WithConnection
						//detaformapagoLogic.getSetVersionRowDetaFormaPagos();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}	
					//ARCHITECTURE
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					if(this.detaformapagoSessionBean.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							
							this.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoBeanSwingJInternalFrame.bancoformapagoLogic.getBancoFormaPagos().addAll(this.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoBeanSwingJInternalFrame.bancoformapagosEliminados);
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
							this.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoBeanSwingJInternalFrame.bancoformapagos.addAll(this.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoBeanSwingJInternalFrame.bancoformapagosEliminados);
						}
						//ARCHITECTURE
						
						
						if(!this.detaformapagoSessionBean.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							
								if(this.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoBeanSwingJInternalFrame.quitarFilaTotales();*/}
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
								if(this.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoBeanSwingJInternalFrame.quitarFilaTotales();*/}	
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								detaformapagoLogic.saveDetaFormaPagoRelaciones(detaformapagoAux,this.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoBeanSwingJInternalFrame.bancoformapagoLogic.getBancoFormaPagos());//WithConnection
								//detaformapagoLogic.getSetVersionRowDetaFormaPagos();//WithConnection
							} else if(Constantes.ISUSAEJBREMOTE) {
							} else if(Constantes.ISUSAEJBHOME) {
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								
							this.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoBeanSwingJInternalFrame.bancoformapagoLogic.setBancoFormaPagos(new ArrayList<BancoFormaPago>());
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							this.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoBeanSwingJInternalFrame.bancoformapagos= new ArrayList<BancoFormaPago>();
							}
							//ARCHITECTURE
						}
					}  else {
							
						

							if(this.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoBeanSwingJInternalFrame.quitarFilaTotales();}
							detaformapagoAux.setBancoFormaPagos(this.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoBeanSwingJInternalFrame.bancoformapagoLogic.getBancoFormaPagos());
								
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							if(this.detaformapagoSessionBean.getEstaModoGuardarRelaciones() 
								|| this.detaformapagoSessionBean.getEsGuardarRelacionado())	{
								actualizarLista(detaformapagoAux,detaformapagoLogic.getDetaFormaPagos());
							}
						} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
							actualizarLista(detaformapagoAux,detaformapagos);
						}
						//ARCHITECTURE
					}
				}				
			} else if(maintenanceType==MaintenanceType.GUARDARCAMBIOS) {		
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detaformapagoLogic.getDetaFormaPagos().addAll(this.detaformapagosEliminados);
					
					detaformapagoLogic.saveDetaFormaPagos();//WithConnection
					//detaformapagoLogic.getSetVersionRowDetaFormaPagos();//WithConnection
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}	
				//ARCHITECTURE
				this.refrescarForeignKeysDescripcionesDetaFormaPago();
				
				this.detaformapagosEliminados= new ArrayList<DetaFormaPago>();		
			}
			
			if(this.detaformapagoSessionBean.getEsGuardarRelacionado()) {
				 this.crearFilaTotales();
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.arrDatoGeneralTotales=DetaFormaPagoConstantesFunciones.getTotalesListaDetaFormaPago(detaformapagoLogic.getDetaFormaPagos());							
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
				this.arrDatoGeneralTotales=DetaFormaPagoConstantesFunciones.getTotalesListaDetaFormaPago(this.detaformapagos);
			}
			
									
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.detaformapagoSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				if(!this.isPostAccionSinMensaje) {
					JOptionPane.showMessageDialog(this,"Deta Forma Pago GUARDADO CORRECTAMENTE","MANTENIMIENTO DE Deta Forma Pago",JOptionPane.INFORMATION_MESSAGE);
					if(maintenanceType==MaintenanceType.NUEVO || maintenanceType==MaintenanceType.ACTUALIZAR) {
						//CUANDO ES NUEVO SE PIERDE REFERENCIA NO SE PORQUE
						this.detaformapago=detaformapagoAux;
					}
				}
			}
			
			this.isErrorGuardar=false;
			
			this.inicializarInvalidValues();
		/*
		} else {
			this.mostrarInvalidValues();	
		}
		*/
			
		} catch(Exception e) {
			this.isErrorGuardar=true;
			
			this.crearFilaTotales();
			
			throw e;
		} finally {
      		//this.finishProcessDetaFormaPago();
      	}
		
	}	
	
	public void actualizarRelaciones(DetaFormaPago detaformapagoLocal) throws Exception {
		
		if(this.detaformapagoSessionBean.getConGuardarRelaciones()) {			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
			
				detaformapagoLocal.setBancoFormaPagos(this.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoBeanSwingJInternalFrame.bancoformapagoLogic.getBancoFormaPagos());
			
			} else {
			
				detaformapagoLocal.setBancoFormaPagos(this.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoBeanSwingJInternalFrame.bancoformapagos);	
			}
		}
	}
	
	public void actualizarRelacionFkPadreActual(DetaFormaPago detaformapagoLocal) throws Exception {	
		if(this.detaformapagoSessionBean.getEsGuardarRelacionado()) {			
			
		
			if(this.jInternalFrameParent.getClass().equals(EmpresaDetalleFormJInternalFrame.class)) {
				EmpresaBeanSwingJInternalFrame empresaBeanSwingJInternalFrameLocal=(EmpresaBeanSwingJInternalFrame) ((EmpresaDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				empresaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoEmpresa(empresaBeanSwingJInternalFrameLocal.getempresa(),true);
				empresaBeanSwingJInternalFrameLocal.actualizarLista(empresaBeanSwingJInternalFrameLocal.empresa,this.empresasForeignKey);

				empresaBeanSwingJInternalFrameLocal.actualizarRelaciones(empresaBeanSwingJInternalFrameLocal.empresa);

				detaformapagoLocal.setEmpresa(empresaBeanSwingJInternalFrameLocal.empresa);

				this.addItemDefectoCombosForeignKeyEmpresa();
				this.cargarCombosFrameEmpresasForeignKey("Formulario");
				this.setActualEmpresaForeignKey(empresaBeanSwingJInternalFrameLocal.empresa.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(SucursalDetalleFormJInternalFrame.class)) {
				SucursalBeanSwingJInternalFrame sucursalBeanSwingJInternalFrameLocal=(SucursalBeanSwingJInternalFrame) ((SucursalDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				sucursalBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoSucursal(sucursalBeanSwingJInternalFrameLocal.getsucursal(),true);
				sucursalBeanSwingJInternalFrameLocal.actualizarLista(sucursalBeanSwingJInternalFrameLocal.sucursal,this.sucursalsForeignKey);

				sucursalBeanSwingJInternalFrameLocal.actualizarRelaciones(sucursalBeanSwingJInternalFrameLocal.sucursal);

				detaformapagoLocal.setSucursal(sucursalBeanSwingJInternalFrameLocal.sucursal);

				this.addItemDefectoCombosForeignKeySucursal();
				this.cargarCombosFrameSucursalsForeignKey("Formulario");
				this.setActualSucursalForeignKey(sucursalBeanSwingJInternalFrameLocal.sucursal.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(EjercicioDetalleFormJInternalFrame.class)) {
				EjercicioBeanSwingJInternalFrame ejercicioBeanSwingJInternalFrameLocal=(EjercicioBeanSwingJInternalFrame) ((EjercicioDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				ejercicioBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoEjercicio(ejercicioBeanSwingJInternalFrameLocal.getejercicio(),true);
				ejercicioBeanSwingJInternalFrameLocal.actualizarLista(ejercicioBeanSwingJInternalFrameLocal.ejercicio,this.ejerciciosForeignKey);

				ejercicioBeanSwingJInternalFrameLocal.actualizarRelaciones(ejercicioBeanSwingJInternalFrameLocal.ejercicio);

				detaformapagoLocal.setEjercicio(ejercicioBeanSwingJInternalFrameLocal.ejercicio);

				this.addItemDefectoCombosForeignKeyEjercicio();
				this.cargarCombosFrameEjerciciosForeignKey("Formulario");
				this.setActualEjercicioForeignKey(ejercicioBeanSwingJInternalFrameLocal.ejercicio.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(PeriodoDetalleFormJInternalFrame.class)) {
				PeriodoBeanSwingJInternalFrame periodoBeanSwingJInternalFrameLocal=(PeriodoBeanSwingJInternalFrame) ((PeriodoDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				periodoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoPeriodo(periodoBeanSwingJInternalFrameLocal.getperiodo(),true);
				periodoBeanSwingJInternalFrameLocal.actualizarLista(periodoBeanSwingJInternalFrameLocal.periodo,this.periodosForeignKey);

				periodoBeanSwingJInternalFrameLocal.actualizarRelaciones(periodoBeanSwingJInternalFrameLocal.periodo);

				detaformapagoLocal.setPeriodo(periodoBeanSwingJInternalFrameLocal.periodo);

				this.addItemDefectoCombosForeignKeyPeriodo();
				this.cargarCombosFramePeriodosForeignKey("Formulario");
				this.setActualPeriodoForeignKey(periodoBeanSwingJInternalFrameLocal.periodo.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(FacturaDetalleFormJInternalFrame.class)) {
				FacturaBeanSwingJInternalFrame facturaBeanSwingJInternalFrameLocal=(FacturaBeanSwingJInternalFrame) ((FacturaDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				facturaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoFactura(facturaBeanSwingJInternalFrameLocal.getfactura(),true);
				facturaBeanSwingJInternalFrameLocal.actualizarLista(facturaBeanSwingJInternalFrameLocal.factura,this.facturasForeignKey);

				facturaBeanSwingJInternalFrameLocal.actualizarRelaciones(facturaBeanSwingJInternalFrameLocal.factura);

				detaformapagoLocal.setFactura(facturaBeanSwingJInternalFrameLocal.factura);

				this.addItemDefectoCombosForeignKeyFactura();
				this.cargarCombosFrameFacturasForeignKey("Formulario");
				this.setActualFacturaForeignKey(facturaBeanSwingJInternalFrameLocal.factura.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TipoFormaPagoDetalleFormJInternalFrame.class)) {
				TipoFormaPagoBeanSwingJInternalFrame tipoformapagoBeanSwingJInternalFrameLocal=(TipoFormaPagoBeanSwingJInternalFrame) ((TipoFormaPagoDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				tipoformapagoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTipoFormaPago(tipoformapagoBeanSwingJInternalFrameLocal.gettipoformapago(),true);
				tipoformapagoBeanSwingJInternalFrameLocal.actualizarLista(tipoformapagoBeanSwingJInternalFrameLocal.tipoformapago,this.tipoformapagosForeignKey);

				tipoformapagoBeanSwingJInternalFrameLocal.actualizarRelaciones(tipoformapagoBeanSwingJInternalFrameLocal.tipoformapago);

				detaformapagoLocal.setTipoFormaPago(tipoformapagoBeanSwingJInternalFrameLocal.tipoformapago);

				this.addItemDefectoCombosForeignKeyTipoFormaPago();
				this.cargarCombosFrameTipoFormaPagosForeignKey("Formulario");
				this.setActualTipoFormaPagoForeignKey(tipoformapagoBeanSwingJInternalFrameLocal.tipoformapago.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TipoDetaFormaPagoDetalleFormJInternalFrame.class)) {
				TipoDetaFormaPagoBeanSwingJInternalFrame tipodetaformapagoBeanSwingJInternalFrameLocal=(TipoDetaFormaPagoBeanSwingJInternalFrame) ((TipoDetaFormaPagoDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				tipodetaformapagoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTipoDetaFormaPago(tipodetaformapagoBeanSwingJInternalFrameLocal.gettipodetaformapago(),true);
				tipodetaformapagoBeanSwingJInternalFrameLocal.actualizarLista(tipodetaformapagoBeanSwingJInternalFrameLocal.tipodetaformapago,this.tipodetaformapagosForeignKey);

				tipodetaformapagoBeanSwingJInternalFrameLocal.actualizarRelaciones(tipodetaformapagoBeanSwingJInternalFrameLocal.tipodetaformapago);

				detaformapagoLocal.setTipoDetaFormaPago(tipodetaformapagoBeanSwingJInternalFrameLocal.tipodetaformapago);

				this.addItemDefectoCombosForeignKeyTipoDetaFormaPago();
				this.cargarCombosFrameTipoDetaFormaPagosForeignKey("Formulario");
				this.setActualTipoDetaFormaPagoForeignKey(tipodetaformapagoBeanSwingJInternalFrameLocal.tipodetaformapago.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(DetaFormaPagoFactuDetalleFormJInternalFrame.class)) {
				DetaFormaPagoFactuBeanSwingJInternalFrame detaformapagofactuBeanSwingJInternalFrameLocal=(DetaFormaPagoFactuBeanSwingJInternalFrame) ((DetaFormaPagoFactuDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				detaformapagofactuBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoDetaFormaPagoFactu(detaformapagofactuBeanSwingJInternalFrameLocal.getdetaformapagofactu(),true);
				detaformapagofactuBeanSwingJInternalFrameLocal.actualizarLista(detaformapagofactuBeanSwingJInternalFrameLocal.detaformapagofactu,this.detaformapagofactusForeignKey);

				detaformapagofactuBeanSwingJInternalFrameLocal.actualizarRelaciones(detaformapagofactuBeanSwingJInternalFrameLocal.detaformapagofactu);

				detaformapagoLocal.setDetaFormaPagoFactu(detaformapagofactuBeanSwingJInternalFrameLocal.detaformapagofactu);

				this.addItemDefectoCombosForeignKeyDetaFormaPagoFactu();
				this.cargarCombosFrameDetaFormaPagoFactusForeignKey("Formulario");
				this.setActualDetaFormaPagoFactuForeignKey(detaformapagofactuBeanSwingJInternalFrameLocal.detaformapagofactu.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(CuentaContableDetalleFormJInternalFrame.class)) {
				CuentaContableBeanSwingJInternalFrame cuentacontableBeanSwingJInternalFrameLocal=(CuentaContableBeanSwingJInternalFrame) ((CuentaContableDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				cuentacontableBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoCuentaContable(cuentacontableBeanSwingJInternalFrameLocal.getcuentacontable(),true);
				cuentacontableBeanSwingJInternalFrameLocal.actualizarLista(cuentacontableBeanSwingJInternalFrameLocal.cuentacontable,this.cuentacontablesForeignKey);

				cuentacontableBeanSwingJInternalFrameLocal.actualizarRelaciones(cuentacontableBeanSwingJInternalFrameLocal.cuentacontable);

				detaformapagoLocal.setCuentaContable(cuentacontableBeanSwingJInternalFrameLocal.cuentacontable);

				this.addItemDefectoCombosForeignKeyCuentaContable();
				this.cargarCombosFrameCuentaContablesForeignKey("Formulario");
				this.setActualCuentaContableForeignKey(cuentacontableBeanSwingJInternalFrameLocal.cuentacontable.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TipoRetencionDetalleFormJInternalFrame.class)) {
				TipoRetencionBeanSwingJInternalFrame tiporetencionBeanSwingJInternalFrameLocal=(TipoRetencionBeanSwingJInternalFrame) ((TipoRetencionDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				tiporetencionBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTipoRetencion(tiporetencionBeanSwingJInternalFrameLocal.gettiporetencion(),true);
				tiporetencionBeanSwingJInternalFrameLocal.actualizarLista(tiporetencionBeanSwingJInternalFrameLocal.tiporetencion,this.tiporetencionsForeignKey);

				tiporetencionBeanSwingJInternalFrameLocal.actualizarRelaciones(tiporetencionBeanSwingJInternalFrameLocal.tiporetencion);

				detaformapagoLocal.setTipoRetencion(tiporetencionBeanSwingJInternalFrameLocal.tiporetencion);

				this.addItemDefectoCombosForeignKeyTipoRetencion();
				this.cargarCombosFrameTipoRetencionsForeignKey("Formulario");
				this.setActualTipoRetencionForeignKey(tiporetencionBeanSwingJInternalFrameLocal.tiporetencion.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(AnioDetalleFormJInternalFrame.class)) {
				AnioBeanSwingJInternalFrame anioBeanSwingJInternalFrameLocal=(AnioBeanSwingJInternalFrame) ((AnioDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				anioBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoAnio(anioBeanSwingJInternalFrameLocal.getanio(),true);
				anioBeanSwingJInternalFrameLocal.actualizarLista(anioBeanSwingJInternalFrameLocal.anio,this.aniosForeignKey);

				anioBeanSwingJInternalFrameLocal.actualizarRelaciones(anioBeanSwingJInternalFrameLocal.anio);

				detaformapagoLocal.setAnio(anioBeanSwingJInternalFrameLocal.anio);

				this.addItemDefectoCombosForeignKeyAnio();
				this.cargarCombosFrameAniosForeignKey("Formulario");
				this.setActualAnioForeignKey(anioBeanSwingJInternalFrameLocal.anio.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(MesDetalleFormJInternalFrame.class)) {
				MesBeanSwingJInternalFrame mesBeanSwingJInternalFrameLocal=(MesBeanSwingJInternalFrame) ((MesDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				mesBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoMes(mesBeanSwingJInternalFrameLocal.getmes(),true);
				mesBeanSwingJInternalFrameLocal.actualizarLista(mesBeanSwingJInternalFrameLocal.mes,this.messForeignKey);

				mesBeanSwingJInternalFrameLocal.actualizarRelaciones(mesBeanSwingJInternalFrameLocal.mes);

				detaformapagoLocal.setMes(mesBeanSwingJInternalFrameLocal.mes);

				this.addItemDefectoCombosForeignKeyMes();
				this.cargarCombosFrameMessForeignKey("Formulario");
				this.setActualMesForeignKey(mesBeanSwingJInternalFrameLocal.mes.getId(),false,"Formulario");
			}
		
		}
	}
	
	public Boolean validarDetaFormaPagoActual() throws Exception {
		Boolean estaValidado=false;
		this.inicializarInvalidValues();
		
		/*
		int intSelectedRow = this.jTableDatosDetaFormaPago.getSelectedRow();
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.detaformapago =(DetaFormaPago) this.detaformapagoLogic.getDetaFormaPagos().toArray()[this.jTableDatosDetaFormaPago.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
			this.detaformapago =(DetaFormaPago) this.detaformapagos.toArray()[this.jTableDatosDetaFormaPago.convertRowIndexToModel(intSelectedRow)];
		}
		//ARCHITECTURE
		*/
		
		this.invalidValues = detaformapagoValidator.getInvalidValues(this.detaformapago);
					
		if(this.invalidValues==null || this.invalidValues.length<=0) {
			estaValidado=true;
		} else {
			this.mostrarInvalidValues();	
		}
		
		return estaValidado;
	}
	
	public void actualizarLista(DetaFormaPago detaformapago,List<DetaFormaPago> detaformapagos) throws Exception {
		try	{		
			DetaFormaPagoConstantesFunciones.actualizarLista(detaformapago,detaformapagos,this.detaformapagoSessionBean.getEsGuardarRelacionado());		
		} catch(Exception e) {
			throw e;
		}
	}		
	
	public void actualizarSelectedLista(DetaFormaPago detaformapago,List<DetaFormaPago> detaformapagos) throws Exception {
		try	{			
			DetaFormaPagoConstantesFunciones.actualizarSelectedLista(detaformapago,detaformapagos);
		} catch(Exception e) {
			throw e;
		}
	}	
	
	public Boolean tieneElementosSeleccionados() throws Exception {
		Boolean tiene=false;
		
		List<DetaFormaPago> detaformapagosLocal=null;
		
		try	{			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				detaformapagosLocal=this.detaformapagoLogic.getDetaFormaPagos();
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
				detaformapagosLocal=this.detaformapagos;
			}
			//ARCHITECTURE
		
			for(DetaFormaPago detaformapagoLocal:detaformapagosLocal) {
				if(this.permiteMantenimiento(detaformapagoLocal) && detaformapagoLocal.getIsSelected()) {
					tiene=true;
					break;
				}
			}
		} catch(Exception e) {
			throw e;
		}
		
		return tiene;
	}			
	
	public void mostrarInvalidValues() throws Exception {
		String sMensaje="";
				
		for (InvalidValue invalidValue : this.invalidValues) {
			sMensaje+="\r\n"+DetaFormaPagoConstantesFunciones.getDetaFormaPagoLabelDesdeNombre(invalidValue.getPropertyName())+"->"+invalidValue.getMessage();
			
			//MOSTRAR CAMPOS INVALIDOS
			if(invalidValue.getPropertyName().equals(DetaFormaPagoConstantesFunciones.IDEMPRESA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetaFormaPago.jLabelid_empresaDetaFormaPago,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetaFormaPagoConstantesFunciones.IDSUCURSAL)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetaFormaPago.jLabelid_sucursalDetaFormaPago,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetaFormaPagoConstantesFunciones.IDEJERCICIO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetaFormaPago.jLabelid_ejercicioDetaFormaPago,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetaFormaPagoConstantesFunciones.IDPERIODO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetaFormaPago.jLabelid_periodoDetaFormaPago,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetaFormaPagoConstantesFunciones.IDFACTURA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetaFormaPago.jLabelid_facturaDetaFormaPago,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetaFormaPagoConstantesFunciones.IDTIPOFORMAPAGO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetaFormaPago.jLabelid_tipo_forma_pagoDetaFormaPago,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetaFormaPagoConstantesFunciones.IDTIPODETAFORMAPAGO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetaFormaPago.jLabelid_tipo_deta_forma_pagoDetaFormaPago,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetaFormaPagoConstantesFunciones.IDDETAFORMAPAGOFACTU)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetaFormaPago.jLabelid_deta_forma_pago_factuDetaFormaPago,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetaFormaPagoConstantesFunciones.IDCUENTACONTABLE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetaFormaPago.jLabelid_cuenta_contableDetaFormaPago,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetaFormaPagoConstantesFunciones.IDTIPORETENCION)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetaFormaPago.jLabelid_tipo_retencionDetaFormaPago,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetaFormaPagoConstantesFunciones.VALOR)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetaFormaPago.jLabelvalorDetaFormaPago,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetaFormaPagoConstantesFunciones.FECHAINICIAL)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetaFormaPago.jLabelfecha_inicialDetaFormaPago,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetaFormaPagoConstantesFunciones.FECHAFINAL)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetaFormaPago.jLabelfecha_finalDetaFormaPago,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetaFormaPagoConstantesFunciones.PORCENTAJE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetaFormaPago.jLabelporcentajeDetaFormaPago,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetaFormaPagoConstantesFunciones.RETENCION)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetaFormaPago.jLabelretencionDetaFormaPago,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetaFormaPagoConstantesFunciones.PORCENTAJERETENCION)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetaFormaPago.jLabelporcentaje_retencionDetaFormaPago,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetaFormaPagoConstantesFunciones.BASERETENCION)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetaFormaPago.jLabelbase_retencionDetaFormaPago,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetaFormaPagoConstantesFunciones.VALORRETENCION)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetaFormaPago.jLabelvalor_retencionDetaFormaPago,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetaFormaPagoConstantesFunciones.NUMERORETENCION)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetaFormaPago.jLabelnumero_retencionDetaFormaPago,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetaFormaPagoConstantesFunciones.NUMERODIAS)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetaFormaPago.jLabelnumero_diasDetaFormaPago,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetaFormaPagoConstantesFunciones.NUMEROCUOTA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetaFormaPago.jLabelnumero_cuotaDetaFormaPago,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetaFormaPagoConstantesFunciones.DESCRIPCION)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetaFormaPago.jLabeldescripcionDetaFormaPago,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetaFormaPagoConstantesFunciones.IDANIO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetaFormaPago.jLabelid_anioDetaFormaPago,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetaFormaPagoConstantesFunciones.IDMES)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetaFormaPago.jLabelid_mesDetaFormaPago,invalidValue.getMessage());}
        }
		
		
		if(!sMensaje.equals("")) {
			//JOptionPane.showMessageDialog(this,sMensaje,"VALIDACION ",JOptionPane.ERROR_MESSAGE);
			throw new Exception(sMensaje);			
		}
		
		/*
		System.out.println(invalidValue);
        System.out.println("message=" + invalidValue.getMessage());
        System.out.println("propertyName=" + invalidValue.getPropertyName());
        System.out.println("propertyPath=" + invalidValue.getPropertyPath());
        System.out.println("value=" + invalidValue.getValue());
        */
	}		
	
	public void inicializarInvalidValues() throws Exception {
		String sMensaje="";	
		
		if(this.jInternalFrameDetalleFormDetaFormaPago!=null) {
		
		//MOSTRAR CAMPOS INVALIDOS
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetaFormaPago.jLabelid_empresaDetaFormaPago,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetaFormaPago.jLabelid_sucursalDetaFormaPago,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetaFormaPago.jLabelid_ejercicioDetaFormaPago,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetaFormaPago.jLabelid_periodoDetaFormaPago,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetaFormaPago.jLabelid_facturaDetaFormaPago,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetaFormaPago.jLabelid_tipo_forma_pagoDetaFormaPago,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetaFormaPago.jLabelid_tipo_deta_forma_pagoDetaFormaPago,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetaFormaPago.jLabelid_deta_forma_pago_factuDetaFormaPago,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetaFormaPago.jLabelid_cuenta_contableDetaFormaPago,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetaFormaPago.jLabelid_tipo_retencionDetaFormaPago,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetaFormaPago.jLabelvalorDetaFormaPago,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetaFormaPago.jLabelfecha_inicialDetaFormaPago,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetaFormaPago.jLabelfecha_finalDetaFormaPago,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetaFormaPago.jLabelporcentajeDetaFormaPago,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetaFormaPago.jLabelretencionDetaFormaPago,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetaFormaPago.jLabelporcentaje_retencionDetaFormaPago,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetaFormaPago.jLabelbase_retencionDetaFormaPago,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetaFormaPago.jLabelvalor_retencionDetaFormaPago,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetaFormaPago.jLabelnumero_retencionDetaFormaPago,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetaFormaPago.jLabelnumero_diasDetaFormaPago,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetaFormaPago.jLabelnumero_cuotaDetaFormaPago,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetaFormaPago.jLabeldescripcionDetaFormaPago,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetaFormaPago.jLabelid_anioDetaFormaPago,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetaFormaPago.jLabelid_mesDetaFormaPago,"");
		
		}
	}
	
	
	
	public void actualizarObjetoPadreFk(String sTipo)  throws Exception {
		if(sTipo.equals("XXXAuxiliar")) {
		
		}
		
		 else  if(sTipo.equals("BancoFormaPago")) {
			if(this.detaformapago==null) {
				this.detaformapago= new DetaFormaPago();
			}

			if(this.detaformapagoSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoDetaFormaPago
				this.setVariablesFormularioToObjetoActualDetaFormaPago(this.detaformapago,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysDetaFormaPago(this.detaformapago);

				this.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoBeanSwingJInternalFrame.getbancoformapago().setDetaFormaPago(this.detaformapago);
			}

			return;
		}
	}
	
	public void nuevoPreparar() throws Exception {
		this.nuevoPreparar(false);
	}
	
	public void nuevoPreparar(Boolean esNuevoGuardarCambios) throws Exception {
		this.iIdNuevoDetaFormaPago--;	
		
		
		this.detaformapagoAux=new DetaFormaPago();
		
		this.detaformapagoAux.setId(this.iIdNuevoDetaFormaPago);
		this.detaformapagoAux.setIsChanged(true);
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.detaformapagoLogic.getDetaFormaPagos().add(this.detaformapagoAux);
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			this.detaformapagos.add(this.detaformapagoAux);
		}
		//ARCHITECTURE
		
		this.detaformapago=this.detaformapagoAux;
		
		if(DetaFormaPagoJInternalFrame.ISBINDING_MANUAL_TABLA) {
			this.setVariablesObjetoActualToFormularioDetaFormaPago(this.detaformapago);
			this.setVariablesObjetoActualToFormularioForeignKeyDetaFormaPago(this.detaformapago);
		}
				
		//this.setDefaultControlesDetaFormaPago();
		
		this.inicializarInvalidValues();
				
		//SELECCIONA ITEM DEFECTO-->SET O SELECTED INDEX
		this.setItemDefectoCombosForeignKeyDetaFormaPago();
		
		
		//INICIALIZA VARIABLES COMBOS GLOBALES A FORMULARIO(ParametroGeneralUsuario)
		this.setVariablesGlobalesCombosForeignKeyDetaFormaPago();
		
		//INICIALIZA VARIABLES COMBOS GLOBALES AUXILIARES A FORMULARIO(Anio,Mes)
		//this.setVariablesGlobalesAuxiliaresCombosForeignKeyDetaFormaPago();
		
		//SI TIENE FOREIGN KEY CON CAMPO esDefecto=true, SE ACTUALIZA A OBJETO ACTUAL
		this.setVariablesForeignKeyObjetoBeanDefectoActualToObjetoActualDetaFormaPago(this.detaformapagoBean,this.detaformapago,false,false);
		
		//ACTUALIZA VALORES PARA EL OBJETO ACTUAL ANTES DE ENVIARLO A ACTUALIZAR
		this.setVariablesFormularioToObjetoActualForeignKeysDetaFormaPago(this.detaformapago);
				
		ArrayList<Classe> classes=new ArrayList<Classe>();
		
		if(this.jInternalFrameParent!=null) {
			this.jInternalFrameParent.actualizarObjetoPadreFk(DetaFormaPagoConstantesFunciones.CLASSNAME);
		}	
		
		
		if(this.detaformapagoSessionBean.getConGuardarRelaciones()) {
			classes=DetaFormaPagoConstantesFunciones.getClassesRelationshipsOfDetaFormaPago(new ArrayList<Classe>(),DeepLoadType.NONE);
		}
		
		this.classesActual=new ArrayList<Classe>();
		this.classesActual.addAll(classes);
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {						
			this.detaformapagoReturnGeneral=detaformapagoLogic.procesarEventosDetaFormaPagosWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,EventoGlobalTipo.FORM_RECARGAR,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.detaformapagoLogic.getDetaFormaPagos(),this.detaformapago,this.detaformapagoParameterGeneral,this.isEsNuevoDetaFormaPago,classes);//this.detaformapagoLogic.getDetaFormaPago()
						
		} else if(Constantes.ISUSAEJBREMOTE) {
						
		} else if(Constantes.ISUSAEJBHOME) {
		}
		//ARCHITECTURE
		
		//ACTUALIZA VARIABLES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
		//this.setVariablesObjetoReturnGeneralToBeanDetaFormaPago(this.detaformapagoReturnGeneral,this.detaformapagoBean,false);
		
		if(this.detaformapagoReturnGeneral.getConRecargarPropiedades()) {
			//INICIALIZA VARIABLES COMBOS NORMALES (FK)
			this.setVariablesObjetoActualToFormularioForeignKeyDetaFormaPago(this.detaformapagoReturnGeneral.getDetaFormaPago());
			
			//INICIALIZA VARIABLES NORMALES A FORMULARIO(SIN FK)
			this.setVariablesObjetoActualToFormularioDetaFormaPago(this.detaformapagoReturnGeneral.getDetaFormaPago());
		}
		
		if(this.detaformapagoReturnGeneral.getConRecargarRelaciones()) {
			//INICIALIZA VARIABLES RELACIONES A FORMULARIO
			this.setVariablesRelacionesObjetoActualToFormularioDetaFormaPago(this.detaformapagoReturnGeneral.getDetaFormaPago(),classes);//this.detaformapagoBean);	
		}
			
		//ACTUALIZA VARIABLES FORMULARIO A OBJETO ACTUAL (PARA NUEVO TABLA O GUARDAR CAMBIOS
		if(esNuevoGuardarCambios) {
			this.setVariablesFormularioToObjetoActualDetaFormaPago(this.detaformapago,false);
		}
		
		//INICIALIZA VARIABLES COMBOS DEFAULT DEL PROYECTO(|DEFAULT para FK)
		//this.setVariablesDefaultCombosForeignKeyDetaFormaPago();
		
		//INICIALIZA VARIABLES COMBOS PARAMETRO DEL PROYECTO(|VALORPARAM Era para ParametroModulo, ahora en logic)
		//this.setVariablesParametroCombosForeignKeyDetaFormaPago();						
		
		if(!esNuevoGuardarCambios) {
			//INICIALIZA VARIABLES POR OPCION MENU
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			DetaFormaPagoBeanSwingJInternalFrameAdditional.RecargarFormDetaFormaPago(this,"NUEVO_PREPARAR","",this.arrDatoGeneral);
		
			//NO FUNCIONA BINDINGS			
			this.inicializarActualizarBindingDetaFormaPago(false);
						
			if(detaformapagoSessionBean.getConGuardarRelaciones()) {
				//DEBERIA YA ESTAR CARGADO LOS COMBOS Y SI SE NECESITA ALGO MAS SE DEBE CREAR FUNCION LIMITADA
				//SI DEBE TRAER Y RESETEAR TABLA
				

				if(this.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoBeanSwingJInternalFrame.bancoformapagoSessionBean.getEsGuardarRelacionado() && BancoFormaPagoJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonBancoFormaPagoActionPerformed(null,-1,false,true,null);
				}				
			}
				
			//SI ES MANUAL
			if(DetaFormaPagoJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualDetaFormaPago();
			}
			
			this.actualizarVisualTableDatosDetaFormaPago();
			
			this.jTableDatosDetaFormaPago.setRowSelectionInterval(this.getIndiceNuevoDetaFormaPago(), this.getIndiceNuevoDetaFormaPago());
			
			this.seleccionarFilaTablaDetaFormaPagoActual();
						
			this.actualizarEstadoCeldasBotonesDetaFormaPago("a", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
		
		}		
	}
	
	public void habilitarDeshabilitarControlesDetaFormaPago(Boolean isHabilitar) throws Exception {
		
		this.jInternalFrameDetalleFormDetaFormaPago.jTextFieldvalorDetaFormaPago.setEnabled(isHabilitar && this.detaformapagoConstantesFunciones.activarvalorDetaFormaPago);
		this.jInternalFrameDetalleFormDetaFormaPago.jDateChooserfecha_inicialDetaFormaPago.setEnabled(isHabilitar && this.detaformapagoConstantesFunciones.activarfecha_inicialDetaFormaPago);
		this.jInternalFrameDetalleFormDetaFormaPago.jDateChooserfecha_finalDetaFormaPago.setEnabled(isHabilitar && this.detaformapagoConstantesFunciones.activarfecha_finalDetaFormaPago);
		this.jInternalFrameDetalleFormDetaFormaPago.jTextFieldporcentajeDetaFormaPago.setEnabled(isHabilitar && this.detaformapagoConstantesFunciones.activarporcentajeDetaFormaPago);
		this.jInternalFrameDetalleFormDetaFormaPago.jTextFieldretencionDetaFormaPago.setEnabled(isHabilitar && this.detaformapagoConstantesFunciones.activarretencionDetaFormaPago);
		this.jInternalFrameDetalleFormDetaFormaPago.jTextFieldporcentaje_retencionDetaFormaPago.setEnabled(isHabilitar && this.detaformapagoConstantesFunciones.activarporcentaje_retencionDetaFormaPago);
		this.jInternalFrameDetalleFormDetaFormaPago.jTextFieldbase_retencionDetaFormaPago.setEnabled(isHabilitar && this.detaformapagoConstantesFunciones.activarbase_retencionDetaFormaPago);
		this.jInternalFrameDetalleFormDetaFormaPago.jTextFieldvalor_retencionDetaFormaPago.setEnabled(isHabilitar && this.detaformapagoConstantesFunciones.activarvalor_retencionDetaFormaPago);
		this.jInternalFrameDetalleFormDetaFormaPago.jTextFieldnumero_retencionDetaFormaPago.setEnabled(isHabilitar && this.detaformapagoConstantesFunciones.activarnumero_retencionDetaFormaPago);
		this.jInternalFrameDetalleFormDetaFormaPago.jTextFieldnumero_diasDetaFormaPago.setEnabled(isHabilitar && this.detaformapagoConstantesFunciones.activarnumero_diasDetaFormaPago);
		this.jInternalFrameDetalleFormDetaFormaPago.jTextFieldnumero_cuotaDetaFormaPago.setEnabled(isHabilitar && this.detaformapagoConstantesFunciones.activarnumero_cuotaDetaFormaPago);
		this.jInternalFrameDetalleFormDetaFormaPago.jTextAreadescripcionDetaFormaPago.setEnabled(isHabilitar && this.detaformapagoConstantesFunciones.activardescripcionDetaFormaPago);	
		//
		this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_empresaDetaFormaPago.setEnabled(isHabilitar && this.detaformapagoConstantesFunciones.activarid_empresaDetaFormaPago);//
		this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_sucursalDetaFormaPago.setEnabled(isHabilitar && this.detaformapagoConstantesFunciones.activarid_sucursalDetaFormaPago);//
		this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_ejercicioDetaFormaPago.setEnabled(isHabilitar && this.detaformapagoConstantesFunciones.activarid_ejercicioDetaFormaPago);//
		this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_periodoDetaFormaPago.setEnabled(isHabilitar && this.detaformapagoConstantesFunciones.activarid_periodoDetaFormaPago);
		this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_facturaDetaFormaPago.setEnabled(isHabilitar && this.detaformapagoConstantesFunciones.activarid_facturaDetaFormaPago);
		this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_tipo_forma_pagoDetaFormaPago.setEnabled(isHabilitar && this.detaformapagoConstantesFunciones.activarid_tipo_forma_pagoDetaFormaPago);
		this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_tipo_deta_forma_pagoDetaFormaPago.setEnabled(isHabilitar && this.detaformapagoConstantesFunciones.activarid_tipo_deta_forma_pagoDetaFormaPago);
		this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_deta_forma_pago_factuDetaFormaPago.setEnabled(isHabilitar && this.detaformapagoConstantesFunciones.activarid_deta_forma_pago_factuDetaFormaPago);
		this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_cuenta_contableDetaFormaPago.setEnabled(isHabilitar && this.detaformapagoConstantesFunciones.activarid_cuenta_contableDetaFormaPago);
		this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_tipo_retencionDetaFormaPago.setEnabled(isHabilitar && this.detaformapagoConstantesFunciones.activarid_tipo_retencionDetaFormaPago);//
		this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_anioDetaFormaPago.setEnabled(isHabilitar && this.detaformapagoConstantesFunciones.activarid_anioDetaFormaPago);//
		this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_mesDetaFormaPago.setEnabled(isHabilitar && this.detaformapagoConstantesFunciones.activarid_mesDetaFormaPago);
	};
	
	public void setDefaultControlesDetaFormaPago() throws Exception {
			
	};
	
	
	public void habilitarDeshabilitarTipoMantenimientoDetaFormaPago(Boolean esRelaciones) throws Exception {
		if(esRelaciones) {
			//this.detaformapagoSessionBean.setConGuardarRelaciones(true);			
			this.detaformapagoSessionBean.setEstaModoGuardarRelaciones(true);				
			this.jInternalFrameDetalleFormDetaFormaPago.jTabbedPaneRelacionesDetaFormaPago.setVisible(true);
			
			

			if(this.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoBeanSwingJInternalFrame.bancoformapagoSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}		
		} else {
			//this.detaformapagoSessionBean.setConGuardarRelaciones(false);			
			this.detaformapagoSessionBean.setEstaModoGuardarRelaciones(false);						
			this.jInternalFrameDetalleFormDetaFormaPago.jTabbedPaneRelacionesDetaFormaPago.setVisible(false);
			
			

			if(this.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoBeanSwingJInternalFrame.bancoformapagoSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}
		}
	};
	
	public int getIndiceNuevoDetaFormaPago() throws Exception {
		int iIndice=0;
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(DetaFormaPago detaformapagoAux:this.detaformapagoLogic.getDetaFormaPagos()) {
				if(detaformapagoAux.getId().equals(this.iIdNuevoDetaFormaPago)) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(DetaFormaPago detaformapagoAux:this.detaformapagos) {
				if(detaformapagoAux.getId().equals(this.iIdNuevoDetaFormaPago)) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
			iIndice=iIndice-1;
		}
		
		return iIndice;
	}
	
	public int getIndiceActualDetaFormaPago(DetaFormaPago detaformapago,Integer iIndiceActual) throws Exception {
		Integer iIndice=0;
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(DetaFormaPago detaformapagoAux:this.detaformapagoLogic.getDetaFormaPagos()) {
				if(detaformapagoAux.getId().equals(detaformapago.getId())) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(DetaFormaPago detaformapagoAux:this.detaformapagos) {
				if(detaformapagoAux.getId().equals(detaformapago.getId())) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
			iIndice=iIndiceActual;
		}
		
		return iIndice;
	}
	
	public void setCamposBaseDesdeOriginalDetaFormaPago(DetaFormaPago detaformapagoOriginal) throws Exception {
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(DetaFormaPago detaformapagoAux:this.detaformapagoLogic.getDetaFormaPagos()) {
				if(detaformapagoAux.getDetaFormaPagoOriginal().getId().equals(detaformapagoOriginal.getId())) {
					existe=true;
					detaformapagoOriginal.setId(detaformapagoAux.getId());
					detaformapagoOriginal.setVersionRow(detaformapagoAux.getVersionRow());
					break;
				}
				
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(DetaFormaPago detaformapagoAux:this.detaformapagos) {
				if(detaformapagoAux.getDetaFormaPagoOriginal().getId().equals(detaformapagoOriginal.getId())) {
					existe=true;
					detaformapagoOriginal.setId(detaformapagoAux.getId());
					detaformapagoOriginal.setVersionRow(detaformapagoAux.getVersionRow());
					break;
				}				
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
		}
	}
	
	public void cancelarNuevosDetaFormaPago(Boolean esParaCancelar) throws Exception {
		detaformapagosAux=new ArrayList<DetaFormaPago>();
		detaformapagoAux=new DetaFormaPago();
		
		if(!this.detaformapagoSessionBean.getEsGuardarRelacionado()) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				for(DetaFormaPago detaformapagoAux:this.detaformapagoLogic.getDetaFormaPagos()) {
					if(detaformapagoAux.getId()<0) {
						detaformapagosAux.add(detaformapagoAux);
					}		
				}
				this.iIdNuevoDetaFormaPago=0L;
				this.detaformapagoLogic.getDetaFormaPagos().removeAll(detaformapagosAux);
					
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(DetaFormaPago detaformapagoAux:this.detaformapagos) {
					if(detaformapagoAux.getId()<0) {
						detaformapagosAux.add(detaformapagoAux);
					}		
				}
				this.iIdNuevoDetaFormaPago=0L;
				this.detaformapagos.removeAll(detaformapagosAux);
			}	
		} else {			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				if(esParaCancelar && this.isEsNuevoDetaFormaPago 
					&& this.detaformapagoLogic.getDetaFormaPagos().size()>0
					) {
					detaformapagoAux=this.detaformapagoLogic.getDetaFormaPagos().get(this.detaformapagoLogic.getDetaFormaPagos().size() - 1);
				
					if(detaformapagoAux.getId()<0) {
						this.detaformapagoLogic.getDetaFormaPagos().remove(detaformapagoAux);
					}
				}
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				if(esParaCancelar && this.isEsNuevoDetaFormaPago && this.detaformapagos.size()>0) {
					detaformapagoAux=this.detaformapagos.get(this.detaformapagos.size() - 1);
				
					if(detaformapagoAux.getId()<0) {
						this.detaformapagos.remove(detaformapagoAux);
					}
				}
			}	
		}
	}
	
	public void cancelarNuevoDetaFormaPago(Boolean esParaCancelar) throws Exception {
		if(Constantes.ISUSAEJBLOGICLAYER) {
			if(detaformapago.getId()<0) {
				this.detaformapagoLogic.getDetaFormaPagos().remove(this.detaformapago);
			}					
		} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
			if(detaformapago.getId()<0) {
				this.detaformapagos.remove(this.detaformapago);
			}
		}			
	}
	
	public void setEstadosInicialesDetaFormaPago(List<DetaFormaPago> detaformapagosAux) throws Exception {
		DetaFormaPagoConstantesFunciones.setEstadosInicialesDetaFormaPago(detaformapagosAux);
	}
	
	public void setEstadosInicialesDetaFormaPago(DetaFormaPago detaformapagoAux) throws Exception {
		DetaFormaPagoConstantesFunciones.setEstadosInicialesDetaFormaPago(detaformapagoAux);		
	}
	
	public void nuevo() throws Exception {
		try	{
			//ESTA VALIDADO EN FUNCION ACTUALIZAR
			//if(this.validarDetaFormaPagoActual()) {
				this.ejecutarMantenimiento(MaintenanceType.NUEVO);
				
				this.actualizarEstadoCeldasBotonesDetaFormaPago("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
				
			//}
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,DetaFormaPagoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void actualizar() throws Exception {
		try	{
			if(this.validarDetaFormaPagoActual()) {
				if(!this.isEsNuevoDetaFormaPago) {
					this.ejecutarMantenimiento(MaintenanceType.ACTUALIZAR);
					
					this.actualizarEstadoCeldasBotonesDetaFormaPago("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
					
				} else {					
					this.nuevo();
					this.isEsNuevoDetaFormaPago=false;
				}
				
				//SE CANCELA AL FINAL DEL PROCESO JBUTTONACTUALIZAR
				//this.cancelar(false);
			}		
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,DetaFormaPagoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void eliminar() throws Exception {
		try	{	
			if(this.validarDetaFormaPagoActual()) {
				if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE ELIMINAR EL/LA Deta Forma Pago ?", "MANTENIMIENTO DE Deta Forma Pago", JOptionPane.OK_CANCEL_OPTION) == 0) {
					this.ejecutarMantenimiento(MaintenanceType.ELIMINAR);			
					this.actualizarEstadoCeldasBotonesDetaFormaPago("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
				}
			
			}
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,DetaFormaPagoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void guardarCambios() throws Exception {
		try	{
			this.ejecutarMantenimiento(MaintenanceType.GUARDARCAMBIOS);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetaFormaPagoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarAsignar(DetaFormaPago detaformapago) throws Exception {
		DetaFormaPagoConstantesFunciones.seleccionarAsignar(this.detaformapago,detaformapago);
	}
	
	public void seleccionar() throws Exception {
		try	{
			//ACTUALIZO EL PERMISO ACTUALIZAR CON EL PERMISO ACTUALIZAR ORIGINAL ESTE PERMISO SE UTILIZA PARA EL NUEVO TAMBIEN
			this.isPermisoActualizarDetaFormaPago=this.isPermisoActualizarOriginalDetaFormaPago;
			
			
			this.seleccionarAsignar(detaformapago);
			
			

			idFacturaActual=detaformapago.getid_factura();
			this.seleccionarFacturaActual();

			idCuentaContableActual=detaformapago.getid_cuenta_contable();
			this.seleccionarCuentaContableActual();
			
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			DetaFormaPagoConstantesFunciones.quitarEspaciosDetaFormaPago(this.detaformapago,this.arrDatoGeneral);
			
			
			this.actualizarEstadoCeldasBotonesDetaFormaPago("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetaFormaPagoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarBusqueda(Long id) throws Exception {
		try	{
			this.detaformapagoSessionBean.setsFuncionBusquedaRapida(this.detaformapagoSessionBean.getsFuncionBusquedaRapida().replace("TO_REPLACE", id.toString()));
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetaFormaPagoConstantesFunciones.CLASSNAME);
		}
	}
	
	
	//BUSQUEDA INTERNA FK
	public void seleccionarFacturaActual() throws Exception {
		try	{
			Factura facturaAux=new Factura();

			if(this.idFacturaActual != null && this.idFacturaActual>0) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					facturaLogic.getEntityWithConnection(this.idFacturaActual);
					facturaAux= facturaLogic.getFactura();
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE

				facturasForeignKey=new ArrayList<Factura>();
				facturasForeignKey.add(facturaAux);
			}

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}
	public void seleccionarCuentaContableActual() throws Exception {
		try	{
			CuentaContable cuentacontableAux=new CuentaContable();

			if(this.idCuentaContableActual != null && this.idCuentaContableActual>0) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					cuentacontableLogic.getEntityWithConnection(this.idCuentaContableActual);
					cuentacontableAux= cuentacontableLogic.getCuentaContable();
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE

				cuentacontablesForeignKey=new ArrayList<CuentaContable>();
				cuentacontablesForeignKey.add(cuentacontableAux);
			}

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}
	
	public void cancelar() throws Exception {
		this.cancelar(true);
	}
	
	public void cancelar(Boolean esParaCancelar) throws Exception {
		try {
														
			
			//SE UTILIZA COLUMNA ELIMINAR EN TABLA
			if(this.isEsNuevoDetaFormaPago) {
				//NO CANCELA TODOS NUEVOS POR FUNCIONALIDAD GUARDAR CAMBIOS
				//this.cancelarNuevosDetaFormaPago(esParaCancelar);				
				this.cancelarNuevoDetaFormaPago(esParaCancelar);								
			}
			
			this.detaformapago=new DetaFormaPago();
			
			this.inicializarDetaFormaPago();
			
			this.actualizarEstadoCeldasBotonesDetaFormaPago("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetaFormaPagoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void inicializarDetaFormaPago() throws Exception {
		try {
			DetaFormaPagoConstantesFunciones.inicializarDetaFormaPago(this.detaformapago);
			
			} catch(Exception e) {
			throw e;
		}
	}
	
	public void anteriores()throws Exception {
		try	{
			//this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina-this.iNumeroPaginacion;
			
			if(this.iNumeroPaginacionPagina-this.iNumeroPaginacion<this.iNumeroPaginacion) {
				this.iNumeroPaginacionPagina=0;		
			} else {
				this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina-this.iNumeroPaginacion;
			}
			
			this.procesarBusqueda(this.sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetaFormaPagoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void siguientes()throws Exception {
		try	{			
			if(this.detaformapagoLogic.getDetaFormaPagos().size()>0) {
					
				this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina+this.iNumeroPaginacion;
			}
				
			this.procesarBusqueda(this.sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetaFormaPagoConstantesFunciones.CLASSNAME);
		}
	}		
	
	public void generarReporteDetaFormaPagos(String sAccionBusqueda,List<DetaFormaPago> detaformapagosParaReportes) throws Exception {
		//HttpSession httpSession = httpServletRequest.getSession();
		Long iIdUsuarioSesion=0L;	
		
		
		if(usuarioActual==null) {
			this.usuarioActual=new Usuario();
		}
		
		iIdUsuarioSesion=usuarioActual.getId();
		
		String sPathReportes="";
		
		InputStream reportFile=null;
		InputStream imageFile=null;
			
		imageFile=AuxiliarImagenes.class.getResourceAsStream("LogoReporte.jpg");			
				
		
		String sPathReporteFinal="";
		
		if(!esReporteAccionProceso) {
			if(!this.sTipoReporte.equals("RELACIONES")) {//!isEsReporteRelaciones
				if(!this.esReporteDinamico) {
					sPathReporteFinal="DetaFormaPago"+this.sTipoReporteExtra+"Design.jasper";
					reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);	
				} else {
					sPathReporteFinal=this.sPathReporteDinamico;
					reportFile = new FileInputStream(sPathReporteFinal);
				}
			} else {
				sPathReporteFinal="DetaFormaPagoMasterRelaciones"+this.sTipoReporteExtra+"Design.jasper";
				reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);
				//sPathReportes=reportFile.getPath().replace("DetaFormaPagoMasterRelacionesDesign.jasper", "");
			}
		} else {
				sPathReporteFinal="DetaFormaPago"+this.sTipoReporteExtra+"Design.jasper";
				reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);	
		}
		
		if(reportFile==null) {
			throw new JRRuntimeException(sPathReporteFinal+" no existe");
		}
		
		String sUsuario="";
		
		if(usuarioActual!=null) {
			sUsuario=usuarioActual.getuser_name();
		}
		
		Map<String, Object> parameters = new HashMap<String, Object>();
		parameters.put("usuario", sUsuario);
		
		parameters.put("titulo", Funciones.GetTituloSistemaReporte(this.parametroGeneralSg,this.moduloActual,this.usuarioActual));
		parameters.put("subtitulo", "Reporte De  Deta Forma Pagos");		
		parameters.put("busquedapor", DetaFormaPagoConstantesFunciones.getNombreIndice(sAccionBusqueda)+sDetalleReporte);
		
		
		if(this.sTipoReporte.equals("RELACIONES")) {//isEsReporteRelaciones
			parameters.put("SUBREPORT_DIR", sPathReportes);
		}
		
		parameters.put("con_grafico", this.conGraficoReporte);
		
		JasperReport jasperReport = (JasperReport)JRLoader.loadObject(reportFile);
				
		this.cargarDatosCliente();
		
		ArrayList<Classe> classes=new ArrayList<Classe>();		
		
		if(this.sTipoReporte.equals("RELACIONES")) {//isEsReporteRelaciones
			
			classes.add(new Classe(BancoFormaPago.class));
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {		
				try	{
					
					DetaFormaPagoLogic detaformapagoLogicAuxiliar=new DetaFormaPagoLogic();
					detaformapagoLogicAuxiliar.setDatosCliente(detaformapagoLogic.getDatosCliente());				
					detaformapagoLogicAuxiliar.setDetaFormaPagos(detaformapagosParaReportes);
					
					detaformapagoLogicAuxiliar.cargarRelacionesLoteForeignKeyDetaFormaPagoWithConnection(); //deepLoadsWithConnection(false, DeepLoadType.INCLUDE, classes, "");
					
					detaformapagosParaReportes=detaformapagoLogicAuxiliar.getDetaFormaPagos();
					
					//detaformapagoLogic.getNewConnexionToDeep();
					
					//for (DetaFormaPago detaformapago:detaformapagosParaReportes) {
					//	detaformapagoLogic.deepLoad(detaformapago, false, DeepLoadType.INCLUDE, classes);
					//}						
					//detaformapagoLogic.commitNewConnexionToDeep();
					
						
				} catch(Exception e) {
					throw e;
					
				} finally {
					//detaformapagoLogic.closeNewConnexionToDeep();
				}
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}
			//ARCHITECTURE		
			
		
			
			

			InputStream reportFileBancoFormaPago = AuxiliarReportes.class.getResourceAsStream("BancoFormaPagoDetalleRelacionesDesign.jasper");
			parameters.put("subreport_bancoformapago", reportFileBancoFormaPago);
		} else {
			//FK DEBERIA TRAERSE DE ANTEMANO
			
		}
								
		
		//CLASSES PARA REPORTES OBJETOS RELACIONADOS
		if(!this.sTipoReporte.equals("RELACIONES")) {//!isEsReporteRelaciones
			classes=new ArrayList<Classe>();
		}
		
		JRBeanArrayDataSource jrbeanArrayDataSourceDetaFormaPago=null;
		
		if(this.sTipoReporteExtra!=null && !this.sTipoReporteExtra.equals("")) {
			DetaFormaPagoConstantesFunciones.S_TIPOREPORTE_EXTRA=this.sTipoReporteExtra;
		} else {
			DetaFormaPagoConstantesFunciones.S_TIPOREPORTE_EXTRA="";
		}
		
		jrbeanArrayDataSourceDetaFormaPago=new JRBeanArrayDataSource(DetaFormaPagoJInternalFrame.TraerDetaFormaPagoBeans(detaformapagosParaReportes,classes).toArray());
		
		jasperPrint = JasperFillManager.fillReport(jasperReport,parameters,jrbeanArrayDataSourceDetaFormaPago);
				
		
		String sPathDest=Constantes.SUNIDAD_ARCHIVOS+":/"+Constantes.SCONTEXTSERVER+"/"+DetaFormaPagoConstantesFunciones.SCHEMA+"/reportes";
		
		File filePathDest = new File(sPathDest);
		
		if(!filePathDest.exists()) {
			filePathDest.mkdirs();				
		}
				
		String sDestFileName=sPathDest+"/"+DetaFormaPagoConstantesFunciones.CLASSNAME;
				
		if(this.sTipoArchivoReporte=="VISUALIZAR") {
			JasperViewer jasperViewer = new JasperViewer(jasperPrint,false) ;
			jasperViewer.setVisible(true) ; 

		} else if(this.sTipoArchivoReporte=="HTML"||this.sTipoArchivoReporte=="PDF"||this.sTipoArchivoReporte=="XML") {	
			//JasperFillManager.fillReportToFile(reportFile.getAbsolutePath(),parameters, new JRBeanArrayDataSource(DetaFormaPagoBean.TraerDetaFormaPagoBeans(detaformapagosParaReportes).toArray()));
							
			if(this.sTipoArchivoReporte=="HTML") {
				sDestFileName+=".html";
				JasperExportManager.exportReportToHtmlFile(jasperPrint,sDestFileName);
					
			} else if(this.sTipoArchivoReporte=="PDF") {
				sDestFileName+=".pdf";
				JasperExportManager.exportReportToPdfFile(jasperPrint,sDestFileName);
			} else {
				sDestFileName+=".xml";
				JasperExportManager.exportReportToXmlFile(jasperPrint,sDestFileName, false);
			}	
			
		} else if(this.sTipoArchivoReporte=="WORD"||this.sTipoArchivoReporte=="EXCEL") {
				
			if(this.sTipoArchivoReporte=="WORD") {
				sDestFileName+=".rtf";
					
				JRRtfExporter exporter = new JRRtfExporter();
		
				exporter.setParameter(JRExporterParameter.JASPER_PRINT, jasperPrint);
				exporter.setParameter(JRExporterParameter.OUTPUT_FILE_NAME, sDestFileName);
		
				exporter.exportReport();
				
			} else	{
				sDestFileName+=".xls";
					
				JRXlsExporter exporterXls = new JRXlsExporter();
		
				exporterXls.setParameter(JRExporterParameter.JASPER_PRINT, jasperPrint);
				exporterXls.setParameter(JRExporterParameter.OUTPUT_FILE_NAME, sDestFileName);
				exporterXls.setParameter(JRXlsExporterParameter.IS_ONE_PAGE_PER_SHEET, Boolean.TRUE);
		
				exporterXls.exportReport();
			}
			
		} else if(this.sTipoArchivoReporte=="EXCEL2"||this.sTipoArchivoReporte=="EXCEL2_2") {
			//sDestFileName+=".xlsx";
			
			if(this.sTipoReporte.equals("NORMAL")) {
				this.generarExcelReporteDetaFormaPagos(sAccionBusqueda,sTipoArchivoReporte,detaformapagosParaReportes);
			
			} else if(this.sTipoReporte.equals("FORMULARIO")){
				this.generarExcelReporteVerticalDetaFormaPagos(sAccionBusqueda,sTipoArchivoReporte,detaformapagosParaReportes,false);
			
			} else if(this.sTipoReporte.equals("DINAMICO")){
				
				if(this.sTipoReporteDinamico.equals("NORMAL")) {
					
					this.jButtonGenerarExcelReporteDinamicoDetaFormaPagoActionPerformed(null);
					//this.generarExcelReporteDetaFormaPagos(sAccionBusqueda,sTipoArchivoReporte,detaformapagosParaReportes);
					
				
				} else if(this.sTipoReporteDinamico.equals("FORMULARIO")){
					this.generarExcelReporteVerticalDetaFormaPagos(sAccionBusqueda,sTipoArchivoReporte,detaformapagosParaReportes,true);
				
				} else if(this.sTipoReporteDinamico.equals("RELACIONES")){
					this.generarExcelReporteRelacionesDetaFormaPagos(sAccionBusqueda,sTipoArchivoReporte,detaformapagosParaReportes,true);
				}
				
			} else if(this.sTipoReporte.equals("RELACIONES")){
				this.generarExcelReporteRelacionesDetaFormaPagos(sAccionBusqueda,sTipoArchivoReporte,detaformapagosParaReportes,false);
			}
		}
		
		if(this.sTipoArchivoReporte=="HTML"||this.sTipoArchivoReporte=="PDF"||this.sTipoArchivoReporte=="XML"||this.sTipoArchivoReporte=="WORD"||this.sTipoArchivoReporte=="EXCEL") {				
			JOptionPane.showMessageDialog(this,"REPORTE "+sDestFileName+" GENERADO SATISFACTORIAMENTE","REPORTES ",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReporteDetaFormaPagos(String sAccionBusqueda,String sTipoArchivoReporte,List<DetaFormaPago> detaformapagosParaReportes) throws Exception {
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"detaformapago";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("DetaFormaPagos");
         
        int iRow = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		this.generarExcelReporteHeaderDetaFormaPago("NORMAL",row,workbook);
		
		CellStyle cellStyleData = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataAux=null;
		
		int i=0;
		
      	for(DetaFormaPago detaformapago : detaformapagosParaReportes) {            
			row = sheet.createRow(iRow++);
			iCell = 0;
			
			cellStyleDataAux=null;
			
			if(i%2==0) {
				cellStyleDataAux=cellStyleData;
			}
			
			DetaFormaPagoConstantesFunciones.generarExcelReporteDataDetaFormaPago("NORMAL",row,workbook,detaformapago,cellStyleDataAux);
		
			
			/*
            Cell cell0 = row.createCell(0);
            cell0.setCellValue(country.getName());
            Cell cell1 = row.createCell(1);
            cell1.setCellValue(country.getShortCode());
			*/
			
			i++;
        }
        
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.detaformapagoSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Deta Forma Pago",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReporteHeaderDetaFormaPago(String sTipo,Row row,Workbook workbook) {
		
		DetaFormaPagoConstantesFunciones.generarExcelReporteHeaderDetaFormaPago(sTipo,row,workbook);
		
		/*
		Cell cell=null;
		int iCell=0;
		
		CellStyle cellStyle = workbook.createCellStyle();
		cellStyle.setFillBackgroundColor(IndexedColors.GREEN.getIndex());
		cellStyle.setFillPattern(CellStyle.ALIGN_FILL);
		*/
		
	}
	
	public void generarExcelReporteVerticalDetaFormaPagos(String sAccionBusqueda,String sTipoArchivoReporte,List<DetaFormaPago> detaformapagosParaReportes,Boolean paraDinamico) throws Exception {
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"detaformapago_vertical";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("DetaFormaPagos");
         
        int iRow = 0;
		int iRowLast = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		CellStyle cellStyle = Funciones2.getStyleTitulo(workbook,"ZEBRA");;
		
		CellStyle cellStyleTitulo = Funciones2.getStyleTitulo(workbook,"PRINCIPAL_VERTICAL");
		
		
		for(DetaFormaPago detaformapago : detaformapagosParaReportes) {
			row = sheet.createRow(iRow++);
			iRowLast=iRow - 1;
			
			cell = row.createCell(0);
			cell.setCellValue(DetaFormaPagoConstantesFunciones.getDetaFormaPagoDescripcion(detaformapago));
			cell.setCellStyle(cellStyleTitulo);
			
			sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,0,2));			
	
			


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetaFormaPagoConstantesFunciones.LABEL_IDEMPRESA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetaFormaPagoConstantesFunciones.LABEL_IDEMPRESA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detaformapago.getempresa_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetaFormaPagoConstantesFunciones.LABEL_IDSUCURSAL))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetaFormaPagoConstantesFunciones.LABEL_IDSUCURSAL);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detaformapago.getsucursal_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetaFormaPagoConstantesFunciones.LABEL_IDEJERCICIO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetaFormaPagoConstantesFunciones.LABEL_IDEJERCICIO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detaformapago.getejercicio_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetaFormaPagoConstantesFunciones.LABEL_IDPERIODO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetaFormaPagoConstantesFunciones.LABEL_IDPERIODO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detaformapago.getperiodo_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetaFormaPagoConstantesFunciones.LABEL_IDFACTURA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetaFormaPagoConstantesFunciones.LABEL_IDFACTURA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detaformapago.getfactura_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetaFormaPagoConstantesFunciones.LABEL_IDTIPOFORMAPAGO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetaFormaPagoConstantesFunciones.LABEL_IDTIPOFORMAPAGO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detaformapago.gettipoformapago_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetaFormaPagoConstantesFunciones.LABEL_IDTIPODETAFORMAPAGO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetaFormaPagoConstantesFunciones.LABEL_IDTIPODETAFORMAPAGO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detaformapago.gettipodetaformapago_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetaFormaPagoConstantesFunciones.LABEL_IDDETAFORMAPAGOFACTU))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetaFormaPagoConstantesFunciones.LABEL_IDDETAFORMAPAGOFACTU);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detaformapago.getdetaformapagofactu_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetaFormaPagoConstantesFunciones.LABEL_IDCUENTACONTABLE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetaFormaPagoConstantesFunciones.LABEL_IDCUENTACONTABLE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detaformapago.getcuentacontable_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetaFormaPagoConstantesFunciones.LABEL_IDTIPORETENCION))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetaFormaPagoConstantesFunciones.LABEL_IDTIPORETENCION);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detaformapago.gettiporetencion_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetaFormaPagoConstantesFunciones.LABEL_VALOR))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetaFormaPagoConstantesFunciones.LABEL_VALOR);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detaformapago.getvalor());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetaFormaPagoConstantesFunciones.LABEL_FECHAINICIAL))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetaFormaPagoConstantesFunciones.LABEL_FECHAINICIAL);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detaformapago.getfecha_inicial());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetaFormaPagoConstantesFunciones.LABEL_FECHAFINAL))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetaFormaPagoConstantesFunciones.LABEL_FECHAFINAL);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detaformapago.getfecha_final());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetaFormaPagoConstantesFunciones.LABEL_PORCENTAJE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetaFormaPagoConstantesFunciones.LABEL_PORCENTAJE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detaformapago.getporcentaje());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetaFormaPagoConstantesFunciones.LABEL_RETENCION))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetaFormaPagoConstantesFunciones.LABEL_RETENCION);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detaformapago.getretencion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetaFormaPagoConstantesFunciones.LABEL_PORCENTAJERETENCION))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetaFormaPagoConstantesFunciones.LABEL_PORCENTAJERETENCION);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detaformapago.getporcentaje_retencion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetaFormaPagoConstantesFunciones.LABEL_BASERETENCION))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetaFormaPagoConstantesFunciones.LABEL_BASERETENCION);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detaformapago.getbase_retencion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetaFormaPagoConstantesFunciones.LABEL_VALORRETENCION))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetaFormaPagoConstantesFunciones.LABEL_VALORRETENCION);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detaformapago.getvalor_retencion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetaFormaPagoConstantesFunciones.LABEL_NUMERORETENCION))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetaFormaPagoConstantesFunciones.LABEL_NUMERORETENCION);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detaformapago.getnumero_retencion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetaFormaPagoConstantesFunciones.LABEL_NUMERODIAS))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetaFormaPagoConstantesFunciones.LABEL_NUMERODIAS);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detaformapago.getnumero_dias());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetaFormaPagoConstantesFunciones.LABEL_NUMEROCUOTA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetaFormaPagoConstantesFunciones.LABEL_NUMEROCUOTA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detaformapago.getnumero_cuota());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetaFormaPagoConstantesFunciones.LABEL_DESCRIPCION))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetaFormaPagoConstantesFunciones.LABEL_DESCRIPCION);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detaformapago.getdescripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetaFormaPagoConstantesFunciones.LABEL_IDANIO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetaFormaPagoConstantesFunciones.LABEL_IDANIO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detaformapago.getanio_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetaFormaPagoConstantesFunciones.LABEL_IDMES))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetaFormaPagoConstantesFunciones.LABEL_IDMES);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detaformapago.getmes_descripcion());


			}						
        }
        
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.detaformapagoSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Deta Forma Pago",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReporteRelacionesDetaFormaPagos(String sAccionBusqueda,String sTipoArchivoReporte,List<DetaFormaPago> detaformapagosParaReportes,Boolean paraDinamico) throws Exception {
		
		ArrayList<Classe> classes=new ArrayList<Classe>();
		List<DetaFormaPago> detaformapagosRespaldo=null;
		
		classes=DetaFormaPagoConstantesFunciones.getClassesRelationshipsOfDetaFormaPago(new ArrayList<Classe>(),DeepLoadType.NONE,false);
					
		this.datosDeep=new DatosDeep();
		
		this.datosDeep.setIsDeep(false);
		this.datosDeep.setDeepLoadType(DeepLoadType.INCLUDE);
		this.datosDeep.setClases(classes);
			
		this.datosCliente.setDatosDeepParametros(false, DeepLoadType.INCLUDE, classes, "");
		this.datosCliente.setIsConDeep(true);	
		this.datosCliente.setIsConExportar(false);
		
						
		this.detaformapagoLogic.setDatosCliente(this.datosCliente);
		this.detaformapagoLogic.setDatosDeep(this.datosDeep);
		this.detaformapagoLogic.setIsConDeep(true);
		
		detaformapagosRespaldo=this.detaformapagoLogic.getDetaFormaPagos();
		
		this.detaformapagoLogic.setDetaFormaPagos(detaformapagosParaReportes);	
		this.detaformapagoLogic.deepLoadsWithConnection(false, DeepLoadType.INCLUDE, classes,"");
		
		detaformapagosParaReportes=this.detaformapagoLogic.getDetaFormaPagos();
		this.detaformapagoLogic.setDetaFormaPagos(detaformapagosRespaldo);
		
		
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"detaformapago_relacion";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("DetaFormaPagos");
         
        int iRow = 0;
		int iRowLast = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		this.generarExcelReporteHeaderDetaFormaPago("NORMAL",row,workbook);
		
		int i=0;
		int i2=0;
		
		CellStyle cellStyleData = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataTitulo = Funciones2.getStyleTitulo(workbook,"PRINCIPAL");
		CellStyle cellStyleDataZebra = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataAux =null;
		CellStyle cellStyleDataAuxHijo =null;
		
		for(DetaFormaPago detaformapago : detaformapagosParaReportes) {			
			if(i!=0) {
				row = sheet.createRow(iRow++);				
				this.generarExcelReporteHeaderDetaFormaPago("NORMAL",row,workbook);
			}
			
			cellStyleDataAux=null;
			
			if(i%2==0) {
				//cellStyleDataAux=cellStyleData;
			}
			
			row = sheet.createRow(iRow++);						
			DetaFormaPagoConstantesFunciones.generarExcelReporteDataDetaFormaPago("NORMAL",row,workbook,detaformapago,cellStyleDataAux);
		
			
			


				//BancoFormaPago
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(BancoFormaPagoConstantesFunciones.SCLASSWEBTITULO))) {

				if(detaformapago.getBancoFormaPagos()!=null && detaformapago.getBancoFormaPagos().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(BancoFormaPagoConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					BancoFormaPagoConstantesFunciones.generarExcelReporteHeaderBancoFormaPago("RELACIONADO",row,workbook);
				}

				if(detaformapago.getBancoFormaPagos()!=null) {
					i2=0;
					for(BancoFormaPago bancoformapago : detaformapago.getBancoFormaPagos()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						BancoFormaPagoConstantesFunciones.generarExcelReporteDataBancoFormaPago("RELACIONADO",row,workbook,bancoformapago,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}
			
			i++;
        }
        
		/*
		row = sheet.createRow(iRow++);
		iRowLast=iRow - 1;
			
		cell = row.createCell(0);
		cell.setCellValue(DetaFormaPagoConstantesFunciones.getDetaFormaPagoDescripcion(detaformapago));
		cell.setCellStyle(cellStyleTitulo);
			
		sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,0,2));			
		*/
		
			
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.detaformapagoSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Deta Forma Pago",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	
	public Boolean existeColumnaReporteDinamico(String sColumna) {
		Boolean existe=false;
		
		Reporte reporte=new Reporte();
		
		
		for(int index:this.jInternalFrameReporteDinamicoDetaFormaPago.getjListColumnasSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoDetaFormaPago.getjListColumnasSelectReporte().getModel().getElementAt(index);
			
			if(sColumna.equals(reporte.getsCodigo())) {
				existe=true;
				break;
			}
		
		}
		
		
		return existe;
	}
	
	public Boolean existeRelacionReporteDinamico(String sColumna) {
		Boolean existe=false;
		
		Reporte reporte=new Reporte();
		
		
		for(int index:this.jInternalFrameReporteDinamicoDetaFormaPago.getjListRelacionesSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoDetaFormaPago.getjListRelacionesSelectReporte().getModel().getElementAt(index);
			
			if(sColumna.equals(reporte.getsCodigo())) {
				existe=true;
				break;
			}
		
		}
		
		
		return existe;
	}
	
	public void startProcessDetaFormaPago() throws Exception {		
		this.startProcessDetaFormaPago(true);
	}
	
	public void startProcessDetaFormaPago(Boolean conSplash) throws Exception {		
		//FuncionesSwing.enableDisablePanels(false,this.jTabbedPaneBusquedasDetaFormaPago ,this.jPanelParametrosReportesDetaFormaPago, this.jScrollPanelDatosDetaFormaPago,this.jPanelPaginacionDetaFormaPago, this.jScrollPanelDatosEdicionDetaFormaPago, this.jPanelAccionesDetaFormaPago,this.jPanelAccionesFormularioDetaFormaPago,this.jmenuBarDetaFormaPago,this.jmenuBarDetalleDetaFormaPago,this.jTtoolBarDetaFormaPago,this.jTtoolBarDetalleDetaFormaPago);		
		
		final JTabbedPane jTabbedPaneBusquedasDetaFormaPago=this.jTabbedPaneBusquedasDetaFormaPago; 
		
		final JPanel jPanelParametrosReportesDetaFormaPago=this.jPanelParametrosReportesDetaFormaPago;
		//final JScrollPane jScrollPanelDatosDetaFormaPago=this.jScrollPanelDatosDetaFormaPago;
		final JTable jTableDatosDetaFormaPago=this.jTableDatosDetaFormaPago;		
		final JPanel jPanelPaginacionDetaFormaPago=this.jPanelPaginacionDetaFormaPago;
		//final JScrollPane jScrollPanelDatosEdicionDetaFormaPago=this.jScrollPanelDatosEdicionDetaFormaPago;
		final JPanel jPanelAccionesDetaFormaPago=this.jPanelAccionesDetaFormaPago;
		
		JPanel jPanelCamposAuxiliarDetaFormaPago=new JPanelMe();
		JPanel jPanelAccionesFormularioAuxiliarDetaFormaPago=new JPanelMe();
		
		if(this.jInternalFrameDetalleFormDetaFormaPago!=null) {
			jPanelCamposAuxiliarDetaFormaPago=this.jInternalFrameDetalleFormDetaFormaPago.jPanelCamposDetaFormaPago;
			jPanelAccionesFormularioAuxiliarDetaFormaPago=this.jInternalFrameDetalleFormDetaFormaPago.jPanelAccionesFormularioDetaFormaPago;
		}
		
		final JPanel jPanelCamposDetaFormaPago=jPanelCamposAuxiliarDetaFormaPago;
		final JPanel jPanelAccionesFormularioDetaFormaPago=jPanelAccionesFormularioAuxiliarDetaFormaPago;
		
		
		final JMenuBar jmenuBarDetaFormaPago=this.jmenuBarDetaFormaPago;
		final JToolBar jTtoolBarDetaFormaPago=this.jTtoolBarDetaFormaPago;		
		
		
		JMenuBar jmenuBarDetalleAuxiliarDetaFormaPago=new JMenuBar();
		JToolBar jTtoolBarDetalleAuxiliarDetaFormaPago=new JToolBar();		
		
		if(this.jInternalFrameDetalleFormDetaFormaPago!=null) {
			jmenuBarDetalleAuxiliarDetaFormaPago=this.jInternalFrameDetalleFormDetaFormaPago.jmenuBarDetalleDetaFormaPago;
			jTtoolBarDetalleAuxiliarDetaFormaPago=this.jInternalFrameDetalleFormDetaFormaPago.jTtoolBarDetalleDetaFormaPago;
		}
		
		final JMenuBar jmenuBarDetalleDetaFormaPago=jmenuBarDetalleAuxiliarDetaFormaPago;
		final JToolBar jTtoolBarDetalleDetaFormaPago=jTtoolBarDetalleAuxiliarDetaFormaPago;		
		
		
		
		
		
		if(Constantes2.CON_PROCESO_HILO) {
			Thread threadRunnableProcess;
			ProcessRunnable processRunnable;
			
			processRunnable=new ProcessRunnable();
			
			processRunnable.setsTipo("START");
			processRunnable.setDesktop(jDesktopPane);
			processRunnable.setModuloActual(moduloActual);
			processRunnable.setModuloUsuarioSeleccionado(moduloActual);
			processRunnable.setOpcionActual(opcionActual);
			processRunnable.setParametroGeneralSg(parametroGeneralSg);
			processRunnable.setParametroGeneralUsuario(parametroGeneralUsuario);
			processRunnable.setResumenUsuarioActual(resumenUsuarioActual);
			processRunnable.setUsuarioActual(usuarioActual);
			
			processRunnable.jTabbedPaneBusquedas=jTabbedPaneBusquedasDetaFormaPago;
			processRunnable.jPanelParametrosReportes=jPanelParametrosReportesDetaFormaPago;
			processRunnable.jTableDatos=jTableDatosDetaFormaPago;
			processRunnable.jPanelCampos=jPanelCamposDetaFormaPago;
			processRunnable.jPanelPaginacion=jPanelPaginacionDetaFormaPago;
			processRunnable.jPanelAcciones=jPanelAccionesDetaFormaPago;
			processRunnable.jPanelAccionesFormulario=jPanelAccionesFormularioDetaFormaPago;
			
			
			processRunnable.jmenuBar=jmenuBarDetaFormaPago;
			processRunnable.jmenuBarDetalle=jmenuBarDetalleDetaFormaPago;
			processRunnable.jTtoolBar=jTtoolBarDetaFormaPago;
			processRunnable.jTtoolBarDetalle=jTtoolBarDetalleDetaFormaPago;
			processRunnable.jInternalFrameBase=this;
			
			//processRunnable.CargarObjetosRendimientoCriticoModuloInventario();
			
			
			threadRunnableProcess=new Thread(processRunnable);//.start();
					
			threadRunnableProcess.start();
			
		} else {
			FuncionesSwing.enableDisablePanels(false,jTabbedPaneBusquedasDetaFormaPago ,jPanelParametrosReportesDetaFormaPago,jTableDatosDetaFormaPago, /*jScrollPanelDatosDetaFormaPago,*/jPanelCamposDetaFormaPago,jPanelPaginacionDetaFormaPago, /*jScrollPanelDatosEdicionDetaFormaPago,*/ jPanelAccionesDetaFormaPago,jPanelAccionesFormularioDetaFormaPago,jmenuBarDetaFormaPago,jmenuBarDetalleDetaFormaPago,jTtoolBarDetaFormaPago,jTtoolBarDetalleDetaFormaPago);
		
			startProcess();//this.
		}
						
		/*
		if(conSplash) {
			SwingUtilities.invokeLater(new Runnable() {
			      public void run() {
			    	  try {
							FuncionesSwing.enableDisablePanels(false,jTabbedPaneBusquedasDetaFormaPago ,jPanelParametrosReportesDetaFormaPago, jScrollPanelDatosDetaFormaPago,jPanelPaginacionDetaFormaPago, jScrollPanelDatosEdicionDetaFormaPago, jPanelAccionesDetaFormaPago,jPanelAccionesFormularioDetaFormaPago,jmenuBarDetaFormaPago,jmenuBarDetalleDetaFormaPago,jTtoolBarDetaFormaPago,jTtoolBarDetalleDetaFormaPago);
						
							startProcess();//this.
							
						} catch (Exception e) {
							// TODO Auto-generated catch block
							e.printStackTrace();
						}
			      }
			});
		}
		*/
	}
	
	public void finishProcessDetaFormaPago() {// throws Exception 
		this.finishProcessDetaFormaPago(true);
	}
	
	public void finishProcessDetaFormaPago(Boolean conSplash) {// throws Exception 
		//FuncionesSwing.enableDisablePanels(true,this.jTabbedPaneBusquedasDetaFormaPago ,this.jPanelParametrosReportesDetaFormaPago, this.jScrollPanelDatosDetaFormaPago,this.jPanelPaginacionDetaFormaPago, this.jScrollPanelDatosEdicionDetaFormaPago, this.jPanelAccionesDetaFormaPago,this.jPanelAccionesFormularioDetaFormaPago,this.jmenuBarDetaFormaPago,this.jmenuBarDetalleDetaFormaPago,this.jTtoolBarDetaFormaPago,this.jTtoolBarDetalleDetaFormaPago);		
		
		final JTabbedPane jTabbedPaneBusquedasDetaFormaPago=this.jTabbedPaneBusquedasDetaFormaPago; 
		
		final JPanel jPanelParametrosReportesDetaFormaPago=this.jPanelParametrosReportesDetaFormaPago;
		//final JScrollPane jScrollPanelDatosDetaFormaPago=this.jScrollPanelDatosDetaFormaPago;
		final JTable jTableDatosDetaFormaPago=this.jTableDatosDetaFormaPago;		
		final JPanel jPanelPaginacionDetaFormaPago=this.jPanelPaginacionDetaFormaPago;
		//final JScrollPane jScrollPanelDatosEdicionDetaFormaPago=this.jScrollPanelDatosEdicionDetaFormaPago;
		final JPanel jPanelAccionesDetaFormaPago=this.jPanelAccionesDetaFormaPago;
		
		JPanel jPanelCamposAuxiliarDetaFormaPago=new JPanel();
		JPanel jPanelAccionesFormularioAuxiliarDetaFormaPago=new JPanel();
		
		if(this.jInternalFrameDetalleFormDetaFormaPago!=null) {
			jPanelCamposAuxiliarDetaFormaPago=this.jInternalFrameDetalleFormDetaFormaPago.jPanelCamposDetaFormaPago;
			jPanelAccionesFormularioAuxiliarDetaFormaPago=this.jInternalFrameDetalleFormDetaFormaPago.jPanelAccionesFormularioDetaFormaPago;
		}
		
		final JPanel jPanelCamposDetaFormaPago=jPanelCamposAuxiliarDetaFormaPago;
		final JPanel jPanelAccionesFormularioDetaFormaPago=jPanelAccionesFormularioAuxiliarDetaFormaPago;
		
		
		final JMenuBar jmenuBarDetaFormaPago=this.jmenuBarDetaFormaPago;		
		final JToolBar jTtoolBarDetaFormaPago=this.jTtoolBarDetaFormaPago;
				
		JMenuBar jmenuBarDetalleAuxiliarDetaFormaPago=new JMenuBar();
		JToolBar jTtoolBarDetalleAuxiliarDetaFormaPago=new JToolBar();
		
		if(this.jInternalFrameDetalleFormDetaFormaPago!=null) {
			jmenuBarDetalleAuxiliarDetaFormaPago=this.jInternalFrameDetalleFormDetaFormaPago.jmenuBarDetalleDetaFormaPago;
			jTtoolBarDetalleAuxiliarDetaFormaPago=this.jInternalFrameDetalleFormDetaFormaPago.jTtoolBarDetalleDetaFormaPago;		
		}
		
		final JMenuBar jmenuBarDetalleDetaFormaPago=jmenuBarDetalleAuxiliarDetaFormaPago;
		final JToolBar jTtoolBarDetalleDetaFormaPago=jTtoolBarDetalleAuxiliarDetaFormaPago;
		
		
		
		if(Constantes2.CON_PROCESO_HILO) {
			Thread threadRunnableProcess;
			ProcessRunnable processRunnable;
			
			processRunnable=new ProcessRunnable();
			
			processRunnable.setsTipo("END");
			processRunnable.setDesktop(jDesktopPane);
			processRunnable.setModuloActual(moduloActual);
			processRunnable.setModuloUsuarioSeleccionado(moduloActual);
			processRunnable.setOpcionActual(opcionActual);
			processRunnable.setParametroGeneralSg(parametroGeneralSg);
			processRunnable.setParametroGeneralUsuario(parametroGeneralUsuario);
			processRunnable.setResumenUsuarioActual(resumenUsuarioActual);
			processRunnable.setUsuarioActual(usuarioActual);
			
			processRunnable.jTabbedPaneBusquedas=jTabbedPaneBusquedasDetaFormaPago;
			processRunnable.jPanelParametrosReportes=jPanelParametrosReportesDetaFormaPago;
			processRunnable.jTableDatos=jTableDatosDetaFormaPago;
			processRunnable.jPanelCampos=jPanelCamposDetaFormaPago;
			processRunnable.jPanelPaginacion=jPanelPaginacionDetaFormaPago;
			processRunnable.jPanelAcciones=jPanelAccionesDetaFormaPago;
			processRunnable.jPanelAccionesFormulario=jPanelAccionesFormularioDetaFormaPago;
			
			
			processRunnable.jmenuBar=jmenuBarDetaFormaPago;
			processRunnable.jmenuBarDetalle=jmenuBarDetalleDetaFormaPago;
			processRunnable.jTtoolBar=jTtoolBarDetaFormaPago;
			processRunnable.jTtoolBarDetalle=jTtoolBarDetalleDetaFormaPago;
			processRunnable.jInternalFrameBase=this;
			
			//processRunnable.CargarObjetosRendimientoCriticoModuloInventario();
			
			
			threadRunnableProcess=new Thread(processRunnable);//.start();
					
			threadRunnableProcess.start();
			
		} else {
			if(conSplash) {
				SwingUtilities.invokeLater(new RunnableProceso(true,this,jTabbedPaneBusquedasDetaFormaPago ,jPanelParametrosReportesDetaFormaPago, jTableDatosDetaFormaPago,/*jScrollPanelDatosDetaFormaPago,*/jPanelCamposDetaFormaPago,jPanelPaginacionDetaFormaPago, /*jScrollPanelDatosEdicionDetaFormaPago,*/ jPanelAccionesDetaFormaPago,jPanelAccionesFormularioDetaFormaPago,jmenuBarDetaFormaPago,jmenuBarDetalleDetaFormaPago,jTtoolBarDetaFormaPago,jTtoolBarDetalleDetaFormaPago));
			}
		}						
	}
	
	/*
	public void habilitarDeshabilitarControlesDetaFormaPago(Boolean esHabilitar,Boolean conDetalle) {
		this.habilitarDeshabilitarToolBarDetaFormaPago(esHabilitar,conDetalle);
		this.habilitarDeshabilitarMenuDetaFormaPago(esHabilitar,conDetalle);
	}
	
	public void habilitarDeshabilitarToolBarDetaFormaPago(Boolean esHabilitar,Boolean conDetalle) {
		FuncionesSwing.enableDisableComponents(this.jTtoolBarDetaFormaPago,esHabilitar,1,1);
		
		if(conDetalle) {
			FuncionesSwing.enableDisableComponents(this.jTtoolBarDetalleDetaFormaPago,esHabilitar,1,1);
		}
	}
	
	public void habilitarDeshabilitarMenuDetaFormaPago(Boolean esHabilitar,Boolean conDetalle) {
		FuncionesSwing.enableDisableComponents(this.jmenuBarDetaFormaPago,esHabilitar,1,1);
		
		if(conDetalle) {
			FuncionesSwing.enableDisableComponents(this.jmenuBarDetalleDetaFormaPago,esHabilitar,1,1);
		}
	}
	*/
	
	
	
	public void procesarBusqueda(String sAccionBusqueda) throws Exception {		
		String  finalQueryPaginacion=this.detaformapagoConstantesFunciones.getsFinalQueryDetaFormaPago();
		String  finalQueryPaginacionTodos=this.detaformapagoConstantesFunciones.getsFinalQueryDetaFormaPago();
		
		Boolean esBusqueda=false;
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		if(!sAccionBusqueda.equals("Todos"))	{
			esBusqueda=true;
		}
		
		this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
		this.arrDatoGeneralNo= new  ArrayList<String>();
		
		ArrayList<String> arrColumnasGlobalesNo=DetaFormaPagoConstantesFunciones.getArrayColumnasGlobalesNoDetaFormaPago(this.arrDatoGeneral);
		ArrayList<String> arrColumnasGlobales=DetaFormaPagoConstantesFunciones.getArrayColumnasGlobalesDetaFormaPago(this.arrDatoGeneral,arrColumnasGlobalesNo);
		
			
		String  finalQueryGlobal="";
		
		finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,!esBusqueda,esBusqueda,arrColumnasGlobales,DetaFormaPagoConstantesFunciones.TABLENAME);
		
		String sOrderBy="";
		
		
		sOrderBy=Funciones2.getFinalQueryOrderBy(this.arrOrderBy);
		
		
		if(!sOrderBy.equals("")) {			
			finalQueryPaginacion=sOrderBy;
			finalQueryPaginacionTodos=sOrderBy;
		}
		
		
		//INICIALIZA ELIMINADOS
		this.detaformapagosEliminados= new ArrayList<DetaFormaPago>();
		
		if(!this.isEntroOnLoad) {
			this.onLoad();
		}/* else {
			this.isEntroOnLoad=false;
		}*/
		
		
		
				
		try	{		
			
			//this.startProcessDetaFormaPago();
		
				///*DetaFormaPagoSessionBean*/this.detaformapagoSessionBean=new DetaFormaPagoSessionBean();
			
			if(this.detaformapagoSessionBean==null) {
				this.detaformapagoSessionBean=new DetaFormaPagoSessionBean();
			}
			
			//ACTUALIZA EL TAMANIO DE PAGINACION DESDE EL COMBO
			if(this.sTipoPaginacion!=null && !this.sTipoPaginacion.equals("")) {
				if(!this.sTipoPaginacion.equals("TODOS")) {
					this.iNumeroPaginacion=Integer.parseInt(this.sTipoPaginacion);
				} else {
					this.iNumeroPaginacion=-1;
					this.iNumeroPaginacionPagina=-1;
				}
			} else {
				if(this.iNumeroPaginacion==null || (this.iNumeroPaginacion!=null && this.iNumeroPaginacion<=0)) {
					this.iNumeroPaginacion=DetaFormaPagoConstantesFunciones.INUMEROPAGINACION;
				}
			}
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);
			
			this.cargarDatosCliente();
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			classes=DetaFormaPagoConstantesFunciones.getClassesForeignKeysOfDetaFormaPago(new ArrayList<Classe>(),DeepLoadType.NONE);
			
		
			this.datosDeep=new DatosDeep();
			this.datosDeep.setIsDeep(false);
			this.datosDeep.setDeepLoadType(DeepLoadType.INCLUDE);
			this.datosDeep.setClases(classes);
			
			this.datosCliente.setDatosDeepParametros(false, DeepLoadType.INCLUDE, classes, "");
			this.datosCliente.setIsConDeep(true);
			
			if(false) {//this.conExportar
				this.datosCliente.setIsConExportar(true);
				this.datosCliente.setDatosExportarParametros(Funciones2.getTipoExportar(this.parametroGeneralUsuario),this.parametroGeneralUsuario.getcon_exportar_cabecera(),Funciones2.getTipoDelimiter(this.parametroGeneralUsuario),this.parametroGeneralUsuario.getpath_exportar()+"/detaformapago."+Funciones2.getTipoExtensionArchivoExportar(this.parametroGeneralUsuario));
			} else {
				this.datosCliente.setIsConExportar(false);
			}
			
			detaformapagosAux= new ArrayList<DetaFormaPago>();
			
				
			detaformapagoLogic.setDatosCliente(this.datosCliente);
			detaformapagoLogic.setDatosDeep(this.datosDeep);
			detaformapagoLogic.setIsConDeep(true);
			
			
			detaformapagoLogic.getDetaFormaPagoDataAccess().setIsForForeingsKeysDataRelationships(true);
			
			if(sAccionBusqueda.equals("Todos") || sAccionBusqueda.equals("Query"))	{	
				if(sAccionBusqueda.equals("Todos")) {
					//FALTA:PARA BUSQUEDAS POR CAMPO EN FORMULARIO
					//this.sFinalQueryGeneral="";
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacionTodos );
					
					detaformapagoLogic.getTodosDetaFormaPagos(finalQueryGlobal,pagination);
					
					//detaformapagoLogic.getTodosDetaFormaPagosWithConnection(finalQueryGlobal,pagination);										
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
				
				if(detaformapagoLogic.getDetaFormaPagos()==null|| detaformapagoLogic.getDetaFormaPagos().size()==0)	{
					
				
				}
				
				if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(-1);
						this.pagination.setiMaxResults(-1);
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							detaformapagosAux= new ArrayList<DetaFormaPago>();
							detaformapagosAux.addAll(detaformapagoLogic.getDetaFormaPagos());						
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detaformapagosAux= new ArrayList<DetaFormaPago>();
							detaformapagosAux.addAll(detaformapagos);
						}
						//ARCHITECTURE
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							detaformapagoLogic.getTodosDetaFormaPagos(finalQueryGlobal+"",this.pagination);												
							
							//detaformapagoLogic.getTodosDetaFormaPagosWithConnection(finalQueryGlobal+"",this.pagination);												
						} else if(Constantes.ISUSAEJBREMOTE) {
						} else if(Constantes.ISUSAEJBHOME) {
						}
						//ARCHITECTURE
						
					}
					
					this.generarReporteDetaFormaPagos("Todos",detaformapagoLogic.getDetaFormaPagos() );
					
					if(false) {//isMostrarTodosResultadosReporte						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							detaformapagoLogic.setDetaFormaPagos(new ArrayList<DetaFormaPago>());					
							detaformapagoLogic.getDetaFormaPagos().addAll(detaformapagosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detaformapagos=new ArrayList<DetaFormaPago>();
							detaformapagos.addAll(detaformapagosAux);
						}
						//ARCHITECTURE
						
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);														
					}
				}
			}
			else if(sAccionBusqueda.equals("PorId")) {
				Long idDetaFormaPago=0L;
				
				if(this.idActual!=null && this.idActual!=0L) {
					idDetaFormaPago=this.idActual;
				
				} else if(this.idDetaFormaPagoActual!=null && this.idDetaFormaPagoActual!=0L) {
					idDetaFormaPago=idDetaFormaPagoActual;
				}
				
					
				this.sDetalleReporte=DetaFormaPagoConstantesFunciones.getDetalleIndicePorId(idDetaFormaPago);
				
				this.detaformapagos=new ArrayList<DetaFormaPago>();
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {					
					detaformapagoLogic.getEntity(idDetaFormaPago);
					
					//detaformapagoLogic.getEntityWithConnection(idDetaFormaPago);
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
								
				if(Constantes.ISUSAEJBLOGICLAYER) {
					detaformapagoLogic.setDetaFormaPagos(new ArrayList<DetaFormaPago>());
					detaformapagoLogic.getDetaFormaPagos().add(detaformapagoLogic.getDetaFormaPago());
				
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detaformapagos=new ArrayList<DetaFormaPago>();
					this.detaformapagos.add(detaformapago);
				}
				
				if(detaformapagoLogic.getDetaFormaPago()==null)	{
					
				
				}			
			}
			
		
			else if(sAccionBusqueda.equals("FK_IdCuentaContable")) {
				this.sDetalleReporte=DetaFormaPagoConstantesFunciones.getDetalleIndiceFK_IdCuentaContable(id_cuenta_contableFK_IdCuentaContable);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					detaformapagoLogic.getDetaFormaPagosFK_IdCuentaContable(finalQueryGlobal,pagination,id_cuenta_contableFK_IdCuentaContable);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetaFormaPagoConstantesFunciones.getDetalleIndiceFK_IdCuentaContable(id_cuenta_contableFK_IdCuentaContable);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetaFormaPagoConstantesFunciones.getDetalleIndiceFK_IdCuentaContable(id_cuenta_contableFK_IdCuentaContable);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=detaformapagoLogic.getDetaFormaPagos()==null||detaformapagoLogic.getDetaFormaPagos().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=detaformapagos==null|| detaformapagos.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						detaformapagosAux=new ArrayList<DetaFormaPago>();
						detaformapagosAux.addAll(detaformapagoLogic.getDetaFormaPagos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detaformapagosAux=new ArrayList<DetaFormaPago>();
							detaformapagosAux.addAll(detaformapagos);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							detaformapagoLogic.getDetaFormaPagosFK_IdCuentaContable(finalQueryGlobal,pagination,id_cuenta_contableFK_IdCuentaContable);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetaFormaPagoConstantesFunciones.getDetalleIndiceFK_IdCuentaContable(id_cuenta_contableFK_IdCuentaContable);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetaFormaPagoConstantesFunciones.getDetalleIndiceFK_IdCuentaContable(id_cuenta_contableFK_IdCuentaContable);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteDetaFormaPagos("FK_IdCuentaContable",detaformapagoLogic.getDetaFormaPagos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteDetaFormaPagos("FK_IdCuentaContable",detaformapagos);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						detaformapagoLogic.setDetaFormaPagos(new ArrayList<DetaFormaPago>());
						detaformapagoLogic.getDetaFormaPagos().addAll(detaformapagosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detaformapagos=new ArrayList<DetaFormaPago>();
							detaformapagos.addAll(detaformapagosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdDetaFormaPagoFactu")) {
				this.sDetalleReporte=DetaFormaPagoConstantesFunciones.getDetalleIndiceFK_IdDetaFormaPagoFactu(id_deta_forma_pago_factuFK_IdDetaFormaPagoFactu);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					detaformapagoLogic.getDetaFormaPagosFK_IdDetaFormaPagoFactu(finalQueryGlobal,pagination,id_deta_forma_pago_factuFK_IdDetaFormaPagoFactu);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetaFormaPagoConstantesFunciones.getDetalleIndiceFK_IdDetaFormaPagoFactu(id_deta_forma_pago_factuFK_IdDetaFormaPagoFactu);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetaFormaPagoConstantesFunciones.getDetalleIndiceFK_IdDetaFormaPagoFactu(id_deta_forma_pago_factuFK_IdDetaFormaPagoFactu);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=detaformapagoLogic.getDetaFormaPagos()==null||detaformapagoLogic.getDetaFormaPagos().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=detaformapagos==null|| detaformapagos.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						detaformapagosAux=new ArrayList<DetaFormaPago>();
						detaformapagosAux.addAll(detaformapagoLogic.getDetaFormaPagos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detaformapagosAux=new ArrayList<DetaFormaPago>();
							detaformapagosAux.addAll(detaformapagos);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							detaformapagoLogic.getDetaFormaPagosFK_IdDetaFormaPagoFactu(finalQueryGlobal,pagination,id_deta_forma_pago_factuFK_IdDetaFormaPagoFactu);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetaFormaPagoConstantesFunciones.getDetalleIndiceFK_IdDetaFormaPagoFactu(id_deta_forma_pago_factuFK_IdDetaFormaPagoFactu);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetaFormaPagoConstantesFunciones.getDetalleIndiceFK_IdDetaFormaPagoFactu(id_deta_forma_pago_factuFK_IdDetaFormaPagoFactu);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteDetaFormaPagos("FK_IdDetaFormaPagoFactu",detaformapagoLogic.getDetaFormaPagos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteDetaFormaPagos("FK_IdDetaFormaPagoFactu",detaformapagos);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						detaformapagoLogic.setDetaFormaPagos(new ArrayList<DetaFormaPago>());
						detaformapagoLogic.getDetaFormaPagos().addAll(detaformapagosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detaformapagos=new ArrayList<DetaFormaPago>();
							detaformapagos.addAll(detaformapagosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdEjercicio")) {
				this.sDetalleReporte=DetaFormaPagoConstantesFunciones.getDetalleIndiceFK_IdEjercicio(id_ejercicioFK_IdEjercicio);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					detaformapagoLogic.getDetaFormaPagosFK_IdEjercicio(finalQueryGlobal,pagination,id_ejercicioFK_IdEjercicio);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetaFormaPagoConstantesFunciones.getDetalleIndiceFK_IdEjercicio(id_ejercicioFK_IdEjercicio);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetaFormaPagoConstantesFunciones.getDetalleIndiceFK_IdEjercicio(id_ejercicioFK_IdEjercicio);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=detaformapagoLogic.getDetaFormaPagos()==null||detaformapagoLogic.getDetaFormaPagos().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=detaformapagos==null|| detaformapagos.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						detaformapagosAux=new ArrayList<DetaFormaPago>();
						detaformapagosAux.addAll(detaformapagoLogic.getDetaFormaPagos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detaformapagosAux=new ArrayList<DetaFormaPago>();
							detaformapagosAux.addAll(detaformapagos);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							detaformapagoLogic.getDetaFormaPagosFK_IdEjercicio(finalQueryGlobal,pagination,id_ejercicioFK_IdEjercicio);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetaFormaPagoConstantesFunciones.getDetalleIndiceFK_IdEjercicio(id_ejercicioFK_IdEjercicio);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetaFormaPagoConstantesFunciones.getDetalleIndiceFK_IdEjercicio(id_ejercicioFK_IdEjercicio);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteDetaFormaPagos("FK_IdEjercicio",detaformapagoLogic.getDetaFormaPagos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteDetaFormaPagos("FK_IdEjercicio",detaformapagos);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						detaformapagoLogic.setDetaFormaPagos(new ArrayList<DetaFormaPago>());
						detaformapagoLogic.getDetaFormaPagos().addAll(detaformapagosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detaformapagos=new ArrayList<DetaFormaPago>();
							detaformapagos.addAll(detaformapagosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdEmpresa")) {
				this.sDetalleReporte=DetaFormaPagoConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					detaformapagoLogic.getDetaFormaPagosFK_IdEmpresa(finalQueryGlobal,pagination,id_empresaFK_IdEmpresa);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetaFormaPagoConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetaFormaPagoConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=detaformapagoLogic.getDetaFormaPagos()==null||detaformapagoLogic.getDetaFormaPagos().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=detaformapagos==null|| detaformapagos.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						detaformapagosAux=new ArrayList<DetaFormaPago>();
						detaformapagosAux.addAll(detaformapagoLogic.getDetaFormaPagos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detaformapagosAux=new ArrayList<DetaFormaPago>();
							detaformapagosAux.addAll(detaformapagos);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							detaformapagoLogic.getDetaFormaPagosFK_IdEmpresa(finalQueryGlobal,pagination,id_empresaFK_IdEmpresa);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetaFormaPagoConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetaFormaPagoConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteDetaFormaPagos("FK_IdEmpresa",detaformapagoLogic.getDetaFormaPagos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteDetaFormaPagos("FK_IdEmpresa",detaformapagos);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						detaformapagoLogic.setDetaFormaPagos(new ArrayList<DetaFormaPago>());
						detaformapagoLogic.getDetaFormaPagos().addAll(detaformapagosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detaformapagos=new ArrayList<DetaFormaPago>();
							detaformapagos.addAll(detaformapagosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdFactura")) {
				this.sDetalleReporte=DetaFormaPagoConstantesFunciones.getDetalleIndiceFK_IdFactura(id_facturaFK_IdFactura);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					detaformapagoLogic.getDetaFormaPagosFK_IdFactura(finalQueryGlobal,pagination,id_facturaFK_IdFactura);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetaFormaPagoConstantesFunciones.getDetalleIndiceFK_IdFactura(id_facturaFK_IdFactura);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetaFormaPagoConstantesFunciones.getDetalleIndiceFK_IdFactura(id_facturaFK_IdFactura);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=detaformapagoLogic.getDetaFormaPagos()==null||detaformapagoLogic.getDetaFormaPagos().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=detaformapagos==null|| detaformapagos.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						detaformapagosAux=new ArrayList<DetaFormaPago>();
						detaformapagosAux.addAll(detaformapagoLogic.getDetaFormaPagos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detaformapagosAux=new ArrayList<DetaFormaPago>();
							detaformapagosAux.addAll(detaformapagos);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							detaformapagoLogic.getDetaFormaPagosFK_IdFactura(finalQueryGlobal,pagination,id_facturaFK_IdFactura);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetaFormaPagoConstantesFunciones.getDetalleIndiceFK_IdFactura(id_facturaFK_IdFactura);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetaFormaPagoConstantesFunciones.getDetalleIndiceFK_IdFactura(id_facturaFK_IdFactura);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteDetaFormaPagos("FK_IdFactura",detaformapagoLogic.getDetaFormaPagos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteDetaFormaPagos("FK_IdFactura",detaformapagos);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						detaformapagoLogic.setDetaFormaPagos(new ArrayList<DetaFormaPago>());
						detaformapagoLogic.getDetaFormaPagos().addAll(detaformapagosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detaformapagos=new ArrayList<DetaFormaPago>();
							detaformapagos.addAll(detaformapagosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdPeriodo")) {
				this.sDetalleReporte=DetaFormaPagoConstantesFunciones.getDetalleIndiceFK_IdPeriodo(id_periodoFK_IdPeriodo);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					detaformapagoLogic.getDetaFormaPagosFK_IdPeriodo(finalQueryGlobal,pagination,id_periodoFK_IdPeriodo);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetaFormaPagoConstantesFunciones.getDetalleIndiceFK_IdPeriodo(id_periodoFK_IdPeriodo);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetaFormaPagoConstantesFunciones.getDetalleIndiceFK_IdPeriodo(id_periodoFK_IdPeriodo);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=detaformapagoLogic.getDetaFormaPagos()==null||detaformapagoLogic.getDetaFormaPagos().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=detaformapagos==null|| detaformapagos.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						detaformapagosAux=new ArrayList<DetaFormaPago>();
						detaformapagosAux.addAll(detaformapagoLogic.getDetaFormaPagos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detaformapagosAux=new ArrayList<DetaFormaPago>();
							detaformapagosAux.addAll(detaformapagos);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							detaformapagoLogic.getDetaFormaPagosFK_IdPeriodo(finalQueryGlobal,pagination,id_periodoFK_IdPeriodo);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetaFormaPagoConstantesFunciones.getDetalleIndiceFK_IdPeriodo(id_periodoFK_IdPeriodo);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetaFormaPagoConstantesFunciones.getDetalleIndiceFK_IdPeriodo(id_periodoFK_IdPeriodo);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteDetaFormaPagos("FK_IdPeriodo",detaformapagoLogic.getDetaFormaPagos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteDetaFormaPagos("FK_IdPeriodo",detaformapagos);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						detaformapagoLogic.setDetaFormaPagos(new ArrayList<DetaFormaPago>());
						detaformapagoLogic.getDetaFormaPagos().addAll(detaformapagosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detaformapagos=new ArrayList<DetaFormaPago>();
							detaformapagos.addAll(detaformapagosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdSucursal")) {
				this.sDetalleReporte=DetaFormaPagoConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					detaformapagoLogic.getDetaFormaPagosFK_IdSucursal(finalQueryGlobal,pagination,id_sucursalFK_IdSucursal);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetaFormaPagoConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetaFormaPagoConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=detaformapagoLogic.getDetaFormaPagos()==null||detaformapagoLogic.getDetaFormaPagos().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=detaformapagos==null|| detaformapagos.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						detaformapagosAux=new ArrayList<DetaFormaPago>();
						detaformapagosAux.addAll(detaformapagoLogic.getDetaFormaPagos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detaformapagosAux=new ArrayList<DetaFormaPago>();
							detaformapagosAux.addAll(detaformapagos);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							detaformapagoLogic.getDetaFormaPagosFK_IdSucursal(finalQueryGlobal,pagination,id_sucursalFK_IdSucursal);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetaFormaPagoConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetaFormaPagoConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteDetaFormaPagos("FK_IdSucursal",detaformapagoLogic.getDetaFormaPagos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteDetaFormaPagos("FK_IdSucursal",detaformapagos);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						detaformapagoLogic.setDetaFormaPagos(new ArrayList<DetaFormaPago>());
						detaformapagoLogic.getDetaFormaPagos().addAll(detaformapagosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detaformapagos=new ArrayList<DetaFormaPago>();
							detaformapagos.addAll(detaformapagosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdTipoDetaFormaPago")) {
				this.sDetalleReporte=DetaFormaPagoConstantesFunciones.getDetalleIndiceFK_IdTipoDetaFormaPago(id_tipo_deta_forma_pagoFK_IdTipoDetaFormaPago);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					detaformapagoLogic.getDetaFormaPagosFK_IdTipoDetaFormaPago(finalQueryGlobal,pagination,id_tipo_deta_forma_pagoFK_IdTipoDetaFormaPago);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetaFormaPagoConstantesFunciones.getDetalleIndiceFK_IdTipoDetaFormaPago(id_tipo_deta_forma_pagoFK_IdTipoDetaFormaPago);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetaFormaPagoConstantesFunciones.getDetalleIndiceFK_IdTipoDetaFormaPago(id_tipo_deta_forma_pagoFK_IdTipoDetaFormaPago);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=detaformapagoLogic.getDetaFormaPagos()==null||detaformapagoLogic.getDetaFormaPagos().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=detaformapagos==null|| detaformapagos.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						detaformapagosAux=new ArrayList<DetaFormaPago>();
						detaformapagosAux.addAll(detaformapagoLogic.getDetaFormaPagos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detaformapagosAux=new ArrayList<DetaFormaPago>();
							detaformapagosAux.addAll(detaformapagos);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							detaformapagoLogic.getDetaFormaPagosFK_IdTipoDetaFormaPago(finalQueryGlobal,pagination,id_tipo_deta_forma_pagoFK_IdTipoDetaFormaPago);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetaFormaPagoConstantesFunciones.getDetalleIndiceFK_IdTipoDetaFormaPago(id_tipo_deta_forma_pagoFK_IdTipoDetaFormaPago);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetaFormaPagoConstantesFunciones.getDetalleIndiceFK_IdTipoDetaFormaPago(id_tipo_deta_forma_pagoFK_IdTipoDetaFormaPago);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteDetaFormaPagos("FK_IdTipoDetaFormaPago",detaformapagoLogic.getDetaFormaPagos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteDetaFormaPagos("FK_IdTipoDetaFormaPago",detaformapagos);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						detaformapagoLogic.setDetaFormaPagos(new ArrayList<DetaFormaPago>());
						detaformapagoLogic.getDetaFormaPagos().addAll(detaformapagosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detaformapagos=new ArrayList<DetaFormaPago>();
							detaformapagos.addAll(detaformapagosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdTipoFormaPago")) {
				this.sDetalleReporte=DetaFormaPagoConstantesFunciones.getDetalleIndiceFK_IdTipoFormaPago(id_tipo_forma_pagoFK_IdTipoFormaPago);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					detaformapagoLogic.getDetaFormaPagosFK_IdTipoFormaPago(finalQueryGlobal,pagination,id_tipo_forma_pagoFK_IdTipoFormaPago);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetaFormaPagoConstantesFunciones.getDetalleIndiceFK_IdTipoFormaPago(id_tipo_forma_pagoFK_IdTipoFormaPago);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetaFormaPagoConstantesFunciones.getDetalleIndiceFK_IdTipoFormaPago(id_tipo_forma_pagoFK_IdTipoFormaPago);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=detaformapagoLogic.getDetaFormaPagos()==null||detaformapagoLogic.getDetaFormaPagos().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=detaformapagos==null|| detaformapagos.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						detaformapagosAux=new ArrayList<DetaFormaPago>();
						detaformapagosAux.addAll(detaformapagoLogic.getDetaFormaPagos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detaformapagosAux=new ArrayList<DetaFormaPago>();
							detaformapagosAux.addAll(detaformapagos);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							detaformapagoLogic.getDetaFormaPagosFK_IdTipoFormaPago(finalQueryGlobal,pagination,id_tipo_forma_pagoFK_IdTipoFormaPago);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetaFormaPagoConstantesFunciones.getDetalleIndiceFK_IdTipoFormaPago(id_tipo_forma_pagoFK_IdTipoFormaPago);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetaFormaPagoConstantesFunciones.getDetalleIndiceFK_IdTipoFormaPago(id_tipo_forma_pagoFK_IdTipoFormaPago);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteDetaFormaPagos("FK_IdTipoFormaPago",detaformapagoLogic.getDetaFormaPagos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteDetaFormaPagos("FK_IdTipoFormaPago",detaformapagos);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						detaformapagoLogic.setDetaFormaPagos(new ArrayList<DetaFormaPago>());
						detaformapagoLogic.getDetaFormaPagos().addAll(detaformapagosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detaformapagos=new ArrayList<DetaFormaPago>();
							detaformapagos.addAll(detaformapagosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdTipoRetencion")) {
				this.sDetalleReporte=DetaFormaPagoConstantesFunciones.getDetalleIndiceFK_IdTipoRetencion(id_tipo_retencionFK_IdTipoRetencion);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					detaformapagoLogic.getDetaFormaPagosFK_IdTipoRetencion(finalQueryGlobal,pagination,id_tipo_retencionFK_IdTipoRetencion);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetaFormaPagoConstantesFunciones.getDetalleIndiceFK_IdTipoRetencion(id_tipo_retencionFK_IdTipoRetencion);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetaFormaPagoConstantesFunciones.getDetalleIndiceFK_IdTipoRetencion(id_tipo_retencionFK_IdTipoRetencion);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=detaformapagoLogic.getDetaFormaPagos()==null||detaformapagoLogic.getDetaFormaPagos().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=detaformapagos==null|| detaformapagos.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						detaformapagosAux=new ArrayList<DetaFormaPago>();
						detaformapagosAux.addAll(detaformapagoLogic.getDetaFormaPagos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detaformapagosAux=new ArrayList<DetaFormaPago>();
							detaformapagosAux.addAll(detaformapagos);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							detaformapagoLogic.getDetaFormaPagosFK_IdTipoRetencion(finalQueryGlobal,pagination,id_tipo_retencionFK_IdTipoRetencion);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetaFormaPagoConstantesFunciones.getDetalleIndiceFK_IdTipoRetencion(id_tipo_retencionFK_IdTipoRetencion);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetaFormaPagoConstantesFunciones.getDetalleIndiceFK_IdTipoRetencion(id_tipo_retencionFK_IdTipoRetencion);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteDetaFormaPagos("FK_IdTipoRetencion",detaformapagoLogic.getDetaFormaPagos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteDetaFormaPagos("FK_IdTipoRetencion",detaformapagos);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						detaformapagoLogic.setDetaFormaPagos(new ArrayList<DetaFormaPago>());
						detaformapagoLogic.getDetaFormaPagos().addAll(detaformapagosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detaformapagos=new ArrayList<DetaFormaPago>();
							detaformapagos.addAll(detaformapagosAux);
						}
						//ARCHITECTURE
					}
				}

			} 
		
		
		
		this.redimensionarTablaDatos();
		//this.refrescarForeignKeysDescripcionesDetaFormaPago();
		
		this.traerValoresTablaTotales();	
		/*
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.arrDatoGeneralTotales=DetaFormaPagoConstantesFunciones.getTotalesListaDetaFormaPago(detaformapagoLogic.getDetaFormaPagos());							
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			this.arrDatoGeneralTotales=DetaFormaPagoConstantesFunciones.getTotalesListaDetaFormaPago(this.detaformapagos);
		}
		*/
		
		if(this.conTotales) {
			this.crearFilaTotales();
		}		
		} catch (JRException e) {
			throw e;
		} catch(Exception e) {
			throw e;
      	} finally {
      		//this.finishProcessDetaFormaPago();
      	}
		
	}				
	
	public void redimensionarTablaDatos() throws Exception {
		int iSizeTabla=0;
				
		iSizeTabla=this.getSizeTablaDatos();
		
		//ARCHITECTURE
		/*
		if(Constantes.ISUSAEJBLOGICLAYER) {	
			iSizeTabla=detaformapagoLogic.getDetaFormaPagos().size();
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			iSizeTabla=detaformapagos.size();
		}
		*/
		//ARCHITECTURE
											
		this.redimensionarTablaDatos(iSizeTabla);		
	}
	
	public Integer getSizeTablaDatos() throws Exception {
		Integer iSizeTabla=0;
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {	
			iSizeTabla=detaformapagoLogic.getDetaFormaPagos().size();
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			iSizeTabla=detaformapagos.size();
		}
		//ARCHITECTURE
											
		return iSizeTabla;		
	}
	
			
	public Boolean permiteMantenimiento(DetaFormaPago detaformapago) {
		Boolean permite=true;
		
		if(this.detaformapago.getsType().equals(Constantes2.S_TOTALES)) {
			permite=false;
		}
		
		return permite;
	}
	
	public void traerValoresTablaTotales() throws Exception {
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.arrDatoGeneralTotales=DetaFormaPagoConstantesFunciones.getTotalesListaDetaFormaPago(detaformapagoLogic.getDetaFormaPagos());							
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			this.arrDatoGeneralTotales=DetaFormaPagoConstantesFunciones.getTotalesListaDetaFormaPago(this.detaformapagos);
		}
	}
	
	
	public void traerValoresTablaOrderBy() throws Exception {
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.arrOrderBy=DetaFormaPagoConstantesFunciones.getOrderByListaDetaFormaPago();							
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			this.arrOrderBy=DetaFormaPagoConstantesFunciones.getOrderByListaDetaFormaPago();
		}		
	}
	
	
	public Boolean existeFilaTotales() throws Exception {
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(DetaFormaPago detaformapago:detaformapagoLogic.getDetaFormaPagos()) {
				if(detaformapago.getsType().equals(Constantes2.S_TOTALES)) {
					detaformapagoTotales=detaformapago;
					existe=true;
					break;
				}
			}
								
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(DetaFormaPago detaformapago:this.detaformapagos) {
				if(detaformapago.getsType().equals(Constantes2.S_TOTALES)) {
					detaformapagoTotales=detaformapago;
					existe=true;
					break;
				}
			}
		}
		
		return existe;
	}
	
	public void crearFilaTotales() throws Exception {
		Boolean existe=false;
		
		existe=this.existeFilaTotales();
		
		if(!existe) {
			//SI NO ES UNO A UNO SE CREA FILA TOTALES
			this.detaformapagoAux=new DetaFormaPago();
			this.detaformapagoAux.setsType(Constantes2.S_TOTALES);
			this.detaformapagoAux.setIsNew(false);
			this.detaformapagoAux.setIsChanged(false);
			this.detaformapagoAux.setIsDeleted(false);
				
			if(Constantes.ISUSAEJBLOGICLAYER) {
				DetaFormaPagoConstantesFunciones.TotalizarValoresFilaDetaFormaPago(this.detaformapagoLogic.getDetaFormaPagos(),this.detaformapagoAux);
				
				this.detaformapagoLogic.getDetaFormaPagos().add(this.detaformapagoAux);
				
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
				DetaFormaPagoConstantesFunciones.TotalizarValoresFilaDetaFormaPago(this.detaformapagos,this.detaformapagoAux);
				
				this.detaformapagos.add(this.detaformapagoAux);
			}
		}
	}
	
	public void quitarFilaTotales() throws Exception {
		detaformapagoTotales=new DetaFormaPago();
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			existe=this.existeFilaTotales();
			
			if(existe) {
				this.detaformapagoLogic.getDetaFormaPagos().remove(detaformapagoTotales);
			}			
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			existe=this.existeFilaTotales();
			
			if(existe) {
				this.detaformapagos.remove(detaformapagoTotales);
			}
		}
	}
	
	public void actualizarFilaTotales() throws Exception {
		detaformapagoTotales=new DetaFormaPago();
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(DetaFormaPago detaformapago:detaformapagoLogic.getDetaFormaPagos()) {
				if(detaformapago.getsType().equals(Constantes2.S_TOTALES)) {
					detaformapagoTotales=detaformapago;
					existe=true;
					break;
				}
			}
			
			if(existe) {
				DetaFormaPagoConstantesFunciones.TotalizarValoresFilaDetaFormaPago(this.detaformapagoLogic.getDetaFormaPagos(),detaformapagoTotales);
			}			
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(DetaFormaPago detaformapago:this.detaformapagos) {
				if(detaformapago.getsType().equals(Constantes2.S_TOTALES)) {
					detaformapagoTotales=detaformapago;
					existe=true;
					break;
				}
			}
			
			if(existe) {
				DetaFormaPagoConstantesFunciones.TotalizarValoresFilaDetaFormaPago(this.detaformapagos,detaformapagoTotales);
			}
		}
	}		
	
	public void recargarInformacion()throws Exception {
		try {
			sAccionBusqueda="Todos";
			this.iNumeroPaginacionPagina=0;
			
			this.procesarBusqueda(sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetaFormaPagoConstantesFunciones.CLASSNAME);
		}	
	}		
	
	
	public void getDetaFormaPagosFK_IdAnio()throws Exception {
		try {
			sAccionBusqueda="FK_IdAnio";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getDetaFormaPagosFK_IdCuentaContable()throws Exception {
		try {
			sAccionBusqueda="FK_IdCuentaContable";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getDetaFormaPagosFK_IdDetaFormaPagoFactu()throws Exception {
		try {
			sAccionBusqueda="FK_IdDetaFormaPagoFactu";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getDetaFormaPagosFK_IdEjercicio()throws Exception {
		try {
			sAccionBusqueda="FK_IdEjercicio";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getDetaFormaPagosFK_IdEmpresa()throws Exception {
		try {
			sAccionBusqueda="FK_IdEmpresa";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getDetaFormaPagosFK_IdFactura()throws Exception {
		try {
			sAccionBusqueda="FK_IdFactura";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getDetaFormaPagosFK_IdMes()throws Exception {
		try {
			sAccionBusqueda="FK_IdMes";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getDetaFormaPagosFK_IdPeriodo()throws Exception {
		try {
			sAccionBusqueda="FK_IdPeriodo";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getDetaFormaPagosFK_IdSucursal()throws Exception {
		try {
			sAccionBusqueda="FK_IdSucursal";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getDetaFormaPagosFK_IdTipoDetaFormaPago()throws Exception {
		try {
			sAccionBusqueda="FK_IdTipoDetaFormaPago";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getDetaFormaPagosFK_IdTipoFormaPago()throws Exception {
		try {
			sAccionBusqueda="FK_IdTipoFormaPago";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getDetaFormaPagosFK_IdTipoRetencion()throws Exception {
		try {
			sAccionBusqueda="FK_IdTipoRetencion";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	
	
	public void getDetaFormaPagosFK_IdAnio(String sFinalQuery,Long id_anio)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					detaformapagoLogic.getDetaFormaPagosFK_IdAnio(sFinalQuery,this.pagination,id_anio);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getDetaFormaPagosFK_IdCuentaContable(String sFinalQuery,Long id_cuenta_contable)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					detaformapagoLogic.getDetaFormaPagosFK_IdCuentaContable(sFinalQuery,this.pagination,id_cuenta_contable);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getDetaFormaPagosFK_IdDetaFormaPagoFactu(String sFinalQuery,Long id_deta_forma_pago_factu)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					detaformapagoLogic.getDetaFormaPagosFK_IdDetaFormaPagoFactu(sFinalQuery,this.pagination,id_deta_forma_pago_factu);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getDetaFormaPagosFK_IdEjercicio(String sFinalQuery,Long id_ejercicio)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					detaformapagoLogic.getDetaFormaPagosFK_IdEjercicio(sFinalQuery,this.pagination,id_ejercicio);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getDetaFormaPagosFK_IdEmpresa(String sFinalQuery,Long id_empresa)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					detaformapagoLogic.getDetaFormaPagosFK_IdEmpresa(sFinalQuery,this.pagination,id_empresa);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getDetaFormaPagosFK_IdFactura(String sFinalQuery,Long id_factura)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					detaformapagoLogic.getDetaFormaPagosFK_IdFactura(sFinalQuery,this.pagination,id_factura);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getDetaFormaPagosFK_IdMes(String sFinalQuery,Long id_mes)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					detaformapagoLogic.getDetaFormaPagosFK_IdMes(sFinalQuery,this.pagination,id_mes);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getDetaFormaPagosFK_IdPeriodo(String sFinalQuery,Long id_periodo)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					detaformapagoLogic.getDetaFormaPagosFK_IdPeriodo(sFinalQuery,this.pagination,id_periodo);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getDetaFormaPagosFK_IdSucursal(String sFinalQuery,Long id_sucursal)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					detaformapagoLogic.getDetaFormaPagosFK_IdSucursal(sFinalQuery,this.pagination,id_sucursal);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getDetaFormaPagosFK_IdTipoDetaFormaPago(String sFinalQuery,Long id_tipo_deta_forma_pago)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					detaformapagoLogic.getDetaFormaPagosFK_IdTipoDetaFormaPago(sFinalQuery,this.pagination,id_tipo_deta_forma_pago);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getDetaFormaPagosFK_IdTipoFormaPago(String sFinalQuery,Long id_tipo_forma_pago)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					detaformapagoLogic.getDetaFormaPagosFK_IdTipoFormaPago(sFinalQuery,this.pagination,id_tipo_forma_pago);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getDetaFormaPagosFK_IdTipoRetencion(String sFinalQuery,Long id_tipo_retencion)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					detaformapagoLogic.getDetaFormaPagosFK_IdTipoRetencion(sFinalQuery,this.pagination,id_tipo_retencion);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	
	public void onLoad()throws Exception {		
		try {		
			isEntroOnLoad=true;
			//INTENTA TRAER DATOS DE BUSQUEDA ANTERIOR
			this.traerDatosBusquedaDesdeSession();
					
			//SINO SE CUMPLE VIENE DE PADRE FOREIGN O BUSQUEDA ANTIGUA
			if(this.sAccionBusqueda.equals("")) {
				this.sAccionBusqueda="Todos";
			}
								
			this.procesarBusqueda(sAccionBusqueda);
			
		} catch (Exception e) {
			throw e;
		}
	}		
	
	public void inicializarPermisosDetaFormaPago() {
		this.isPermisoTodoDetaFormaPago=false;
		this.isPermisoNuevoDetaFormaPago=false;
		this.isPermisoActualizarDetaFormaPago=false;
		this.isPermisoActualizarOriginalDetaFormaPago=false;
		this.isPermisoEliminarDetaFormaPago=false;
		this.isPermisoGuardarCambiosDetaFormaPago=false;
		this.isPermisoConsultaDetaFormaPago=false;
		this.isPermisoBusquedaDetaFormaPago=false;
		this.isPermisoReporteDetaFormaPago=false;		
		this.isPermisoOrdenDetaFormaPago=false;		
		this.isPermisoPaginacionMedioDetaFormaPago=false;		
		this.isPermisoPaginacionAltoDetaFormaPago=false;
		this.isPermisoPaginacionTodoDetaFormaPago=false;
		this.isPermisoCopiarDetaFormaPago=false;		
		this.isPermisoVerFormDetaFormaPago=false;		
		this.isPermisoDuplicarDetaFormaPago=false;		
		this.isPermisoOrdenDetaFormaPago=false;		
	}
	
	public void setPermisosUsuarioDetaFormaPago(Boolean isPermiso) {
		this.isPermisoTodoDetaFormaPago=isPermiso;
		this.isPermisoNuevoDetaFormaPago=isPermiso;
		this.isPermisoActualizarDetaFormaPago=isPermiso;
		this.isPermisoActualizarOriginalDetaFormaPago=isPermiso;
		this.isPermisoEliminarDetaFormaPago=isPermiso;
		this.isPermisoGuardarCambiosDetaFormaPago=isPermiso;
		this.isPermisoConsultaDetaFormaPago=isPermiso;
		this.isPermisoBusquedaDetaFormaPago=isPermiso;
		this.isPermisoReporteDetaFormaPago=isPermiso;
		this.isPermisoOrdenDetaFormaPago=isPermiso;		
		this.isPermisoPaginacionMedioDetaFormaPago=isPermiso;		
		this.isPermisoPaginacionAltoDetaFormaPago=isPermiso;		
		this.isPermisoPaginacionTodoDetaFormaPago=isPermiso;		
		this.isPermisoCopiarDetaFormaPago=isPermiso;		
		this.isPermisoVerFormDetaFormaPago=isPermiso;		
		this.isPermisoDuplicarDetaFormaPago=isPermiso;
		this.isPermisoOrdenDetaFormaPago=isPermiso;
	}
	
	public void setPermisosMantenimientoUsuarioDetaFormaPago(Boolean isPermiso) {
		//this.isPermisoTodoDetaFormaPago=isPermiso;
		this.isPermisoNuevoDetaFormaPago=isPermiso;
		this.isPermisoActualizarDetaFormaPago=isPermiso;
		this.isPermisoActualizarOriginalDetaFormaPago=isPermiso;
		this.isPermisoEliminarDetaFormaPago=isPermiso;
		this.isPermisoGuardarCambiosDetaFormaPago=isPermiso;
		//this.isPermisoConsultaDetaFormaPago=isPermiso;
		//this.isPermisoBusquedaDetaFormaPago=isPermiso;
		//this.isPermisoReporteDetaFormaPago=isPermiso;
		//this.isPermisoOrdenDetaFormaPago=isPermiso;		
		//this.isPermisoPaginacionMedioDetaFormaPago=isPermiso;		
		//this.isPermisoPaginacionAltoDetaFormaPago=isPermiso;		
		//this.isPermisoPaginacionTodoDetaFormaPago=isPermiso;		
		//this.isPermisoCopiarDetaFormaPago=isPermiso;		
		//this.isPermisoDuplicarDetaFormaPago=isPermiso;
		//this.isPermisoOrdenDetaFormaPago=isPermiso;
	}
	
	public void inicializarSetPermisosUsuarioDetaFormaPagoClasesRelacionadas() throws Exception {
		ArrayList<String> arrPaginas=new ArrayList<String>();		
		ArrayList<Opcion> opcionsFinal=new ArrayList<Opcion>();	
		
		arrPaginas.add(BancoFormaPagoConstantesFunciones.SNOMBREOPCION);
		
		if(DetaFormaPagoJInternalFrame.CON_LLAMADA_SIMPLE) {
			this.opcionsRelacionadas.addAll(this.sistemaReturnGeneral.getOpcionsRelacionadas());
			
		} else {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				opcionsFinal=sistemaLogicAdditional.tienePermisosOpcionesEnPaginaWeb(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, arrPaginas);
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}
			
			this.opcionsRelacionadas.addAll(opcionsFinal);
		}
		
		

		this.isTienePermisosBancoFormaPago=false;
		this.isTienePermisosBancoFormaPago=this.verificarGetPermisosUsuarioOpcionDetaFormaPagoClaseRelacionada(this.opcionsRelacionadas,BancoFormaPagoConstantesFunciones.SNOMBREOPCION);
		
	}
	
	public Boolean tienePermisosUsuarioEnPaginaWebDetaFormaPago(String sPagina) throws Exception {
		Boolean tienePermisos=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			tienePermisos=sistemaLogicAdditional.tienePermisosEnPaginaWeb(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, sPagina);
		} else if(Constantes.ISUSAEJBREMOTE) {
		} else if(Constantes.ISUSAEJBHOME) {
		}
		
		return tienePermisos;
	}
	
	public void inicializarSetPermisosUsuarioDetaFormaPagoClasesRelacionadas(Boolean conPermiso) throws Exception {
		
		this.isTienePermisosBancoFormaPago=conPermiso;
	}
	
	public Boolean verificarGetPermisosUsuarioDetaFormaPagoClaseRelacionada(ArrayList<String> arrPaginasFinal,String sPaginaActual) throws Exception {
		Boolean verificado=false;
		
		verificado=Funciones2.verificarGetPermisosUsuarioClaseRelacionada(arrPaginasFinal,sPaginaActual);				
		
		return verificado;
	}
	
	public Boolean verificarGetPermisosUsuarioOpcionDetaFormaPagoClaseRelacionada(List<Opcion> opcionsFinal,String sPaginaActual) throws Exception {
		Boolean verificado=false;
		
		verificado=Funciones2.verificarGetPermisosUsuarioOpcionClaseRelacionada(opcionsFinal,sPaginaActual);				
		
		return verificado;
	}
	
	public void actualizarTabsSetPermisosUsuarioDetaFormaPagoClasesRelacionadas() throws Exception {
		

		if(!this.isTienePermisosBancoFormaPago && this.jInternalFrameDetalleFormDetaFormaPago!=null && this.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormDetaFormaPago.jTabbedPaneRelacionesDetaFormaPago.remove(this.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoBeanSwingJInternalFrame.getContentPane());
		}
	}
	
	public void setPermisosUsuarioDetaFormaPago() throws Exception {
		
		PerfilOpcion perfilOpcionUsuario=new PerfilOpcion();		
		Long idOpcion=this.opcionActual.getId();
		
		if(DetaFormaPagoJInternalFrame.CON_LLAMADA_SIMPLE) {
			perfilOpcionUsuario=this.sistemaReturnGeneral.getPerfilOpcion();
			
		} else {
			if(this.detaformapagoSessionBean.getEsGuardarRelacionado()) {
				idOpcion=0L;
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				perfilOpcionUsuario=sistemaLogicAdditional.traerPermisosPaginaWebPerfilOpcion(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, DetaFormaPagoConstantesFunciones.SNOMBREOPCION,idOpcion);				
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}
		}
		
		if(perfilOpcionUsuario!=null && perfilOpcionUsuario.getId()>0) {
			this.isPermisoNuevoDetaFormaPago=perfilOpcionUsuario.getingreso()||perfilOpcionUsuario.gettodo();
			this.isPermisoActualizarDetaFormaPago=perfilOpcionUsuario.getmodificacion()||perfilOpcionUsuario.gettodo();
			this.isPermisoActualizarOriginalDetaFormaPago=this.isPermisoActualizarDetaFormaPago;
			this.isPermisoEliminarDetaFormaPago=perfilOpcionUsuario.geteliminacion()||perfilOpcionUsuario.gettodo();
			this.isPermisoGuardarCambiosDetaFormaPago=perfilOpcionUsuario.getguardar_cambios()||perfilOpcionUsuario.gettodo();
			this.isPermisoConsultaDetaFormaPago=perfilOpcionUsuario.getconsulta()||perfilOpcionUsuario.gettodo();
			this.isPermisoBusquedaDetaFormaPago=perfilOpcionUsuario.getbusqueda()||perfilOpcionUsuario.gettodo();
			this.isPermisoTodoDetaFormaPago=perfilOpcionUsuario.gettodo()||perfilOpcionUsuario.gettodo();
			this.isPermisoReporteDetaFormaPago=perfilOpcionUsuario.getreporte()||perfilOpcionUsuario.gettodo();
			this.isPermisoOrdenDetaFormaPago=perfilOpcionUsuario.getorden()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionMedioDetaFormaPago=perfilOpcionUsuario.getpaginacion_medio()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionAltoDetaFormaPago=perfilOpcionUsuario.getpaginacion_alto()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionTodoDetaFormaPago=perfilOpcionUsuario.getpaginacion_todo()||perfilOpcionUsuario.gettodo();
			this.isPermisoCopiarDetaFormaPago=perfilOpcionUsuario.getcopiar()||perfilOpcionUsuario.gettodo();
			this.isPermisoVerFormDetaFormaPago=true;//perfilOpcionUsuario.getver_form()||perfilOpcionUsuario.gettodo();
			this.isPermisoDuplicarDetaFormaPago=perfilOpcionUsuario.getduplicar()||perfilOpcionUsuario.gettodo();
			this.isPermisoOrdenDetaFormaPago=perfilOpcionUsuario.getorden()||perfilOpcionUsuario.gettodo();
			
			if(this.detaformapagoSessionBean.getEsGuardarRelacionado()) {
				this.opcionActual.setId(perfilOpcionUsuario.getid_opcion());
				
				this.jTableDatosDetaFormaPago.setToolTipText(this.jTableDatosDetaFormaPago.getToolTipText()+"_"+perfilOpcionUsuario.getid_opcion());		
			}
		} else {
			this.setPermisosUsuarioDetaFormaPago(false);
		}
		
		//SI SE NECESITA PONER TODOS LOS PERMISOS POR DEFECTO
		//
		
	}
	
	public void setAccionesUsuarioDetaFormaPago(Boolean esParaAccionesFormulario) throws Exception {		
		Reporte reporte=null;
		
		if(!esParaAccionesFormulario) {
			this.accions=new ArrayList<Accion>();
			
			if(DetaFormaPagoJInternalFrame.CON_LLAMADA_SIMPLE) {
				this.accions=this.sistemaReturnGeneral.getAccions();
				
				
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.accions=sistemaLogicAdditional.getAccionesUsuario(this.usuarioActual,this.opcionActual,false);				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}
			
			if(this.accions.size()>0) {			
				for(Accion accion:this.accions) {
					reporte=new Reporte();
					reporte.setsCodigo(accion.getcodigo());
					reporte.setsDescripcion(accion.getnombre());
		
		
					this.tiposAcciones.add(reporte);
				}
			}	
			
			

			reporte=new Reporte();
			reporte.setsCodigo("");
			reporte.setsDescripcion("");

			this.tiposAcciones.add(reporte);
			
		} else {
			//ACCIONES FORMULARIO
			this.accionsFormulario=new ArrayList<Accion>();
			
			if(DetaFormaPagoJInternalFrame.CON_LLAMADA_SIMPLE) {
				this.accionsFormulario=this.sistemaReturnGeneral.getAccionsFormulario();
			
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.accionsFormulario=sistemaLogicAdditional.getAccionesUsuario(this.usuarioActual,this.opcionActual,true);				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}
			
			if(this.accionsFormulario.size()>0) {			
				for(Accion accion:this.accionsFormulario) {
					reporte=new Reporte();
					reporte.setsCodigo(accion.getcodigo());
					reporte.setsDescripcion(accion.getnombre());
					
					this.tiposAccionesFormulario.add(reporte);
				}
			}	
			
			

			reporte=new Reporte();
			reporte.setsCodigo("");
			reporte.setsDescripcion("");

			this.tiposAccionesFormulario.add(reporte);
		}				
	}	 	
	
	public void setRelacionesUsuarioDetaFormaPago() throws Exception {
		Reporte reporte=null;
		
		

		if(this.isTienePermisosBancoFormaPago && this.detaformapagoConstantesFunciones.mostrarBancoFormaPagoDetaFormaPago && !DetaFormaPagoConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Banco Forma Pago");
			reporte.setsDescripcion("Banco Forma Pago");
			this.tiposRelaciones.add(reporte);
		}
		
		
		//ORDENAR ALFABETICAMENTE
		Collections.sort(this.tiposRelaciones, new ReporteComparator());
		/*
		reporte=new Reporte();
		reporte.setsCodigo(accion.getcodigo());
		reporte.setsDescripcion(accion.getnombre());
			
		this.tiposRelaciones.add(reporte);
		*/
	}	
	
		
	@SuppressWarnings({ "unchecked", "rawtypes" } )
	public void inicializarCombosForeignKeyDetaFormaPagoListas()throws Exception {
		try	{						
			
				this.empresasForeignKey=new ArrayList();
				this.sucursalsForeignKey=new ArrayList();
				this.ejerciciosForeignKey=new ArrayList();
				this.periodosForeignKey=new ArrayList();
				this.facturasForeignKey=new ArrayList();
				this.tipoformapagosForeignKey=new ArrayList();
				this.tipodetaformapagosForeignKey=new ArrayList();
				this.detaformapagofactusForeignKey=new ArrayList();
				this.cuentacontablesForeignKey=new ArrayList();
				this.tiporetencionsForeignKey=new ArrayList();
				this.aniosForeignKey=new ArrayList();
				this.messForeignKey=new ArrayList();
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void cargarCombosTodosForeignKeyDetaFormaPagoListas(Boolean cargarCombosDependencia)throws Exception {
		try	{
			
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			String sFinalQueryCombo="";
			
			Modulo  moduloActualAux=new Modulo();
			
			if(DetaFormaPagoJInternalFrame.ISLOAD_FKLOTE) {
				this.cargarCombosLoteForeignKeyDetaFormaPagoListas(false);
			} else {
			
				this.cargarCombosForeignKeyEmpresaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeySucursalListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyEjercicioListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyPeriodoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyFacturaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTipoFormaPagoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTipoDetaFormaPagoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyDetaFormaPagoFactuListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyCuentaContableListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTipoRetencionListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyAnioListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyMesListas(cargarCombosDependencia,sFinalQueryCombo);
			}
		} catch(Exception e) {
			throw e;
		}		
	}		
	
	

	public void cargarCombosForeignKeyEmpresaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.empresasForeignKey==null||this.empresasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=EmpresaConstantesFunciones.getArrayColumnasGlobalesEmpresa(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EmpresaConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=EmpresaConstantesFunciones.SFINALQUERY;

				this.cargarCombosEmpresasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeySucursalListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.sucursalsForeignKey==null||this.sucursalsForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=SucursalConstantesFunciones.getArrayColumnasGlobalesSucursal(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,SucursalConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=SucursalConstantesFunciones.SFINALQUERY;

				this.cargarCombosSucursalsForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyEjercicioListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.ejerciciosForeignKey==null||this.ejerciciosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=EjercicioConstantesFunciones.getArrayColumnasGlobalesEjercicio(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EjercicioConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=EjercicioConstantesFunciones.SFINALQUERY;

				this.cargarCombosEjerciciosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyPeriodoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.periodosForeignKey==null||this.periodosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=PeriodoConstantesFunciones.getArrayColumnasGlobalesPeriodo(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,PeriodoConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=PeriodoConstantesFunciones.SFINALQUERY;

				this.cargarCombosPeriodosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyFacturaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.facturasForeignKey==null||this.facturasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=FacturaConstantesFunciones.getArrayColumnasGlobalesFactura(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,FacturaConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=FacturaConstantesFunciones.SFINALQUERY;

				this.cargarCombosFacturasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoFormaPagoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.tipoformapagosForeignKey==null||this.tipoformapagosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TipoFormaPagoConstantesFunciones.getArrayColumnasGlobalesTipoFormaPago(this.arrDatoGeneral,this.arrDatoGeneralNo);
				moduloActualAux.setId(ModuloConstantesFuncionesAdditional.LID_MODULO_CUENTAS_POR_COBRAR);

				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,moduloActualAux,true,false,arrColumnasGlobales,TipoFormaPagoConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TipoFormaPagoConstantesFunciones.SFINALQUERY;

				this.cargarCombosTipoFormaPagosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoDetaFormaPagoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.tipodetaformapagosForeignKey==null||this.tipodetaformapagosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TipoDetaFormaPagoConstantesFunciones.getArrayColumnasGlobalesTipoDetaFormaPago(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoDetaFormaPagoConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TipoDetaFormaPagoConstantesFunciones.SFINALQUERY;

				this.cargarCombosTipoDetaFormaPagosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyDetaFormaPagoFactuListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.detaformapagofactusForeignKey==null||this.detaformapagofactusForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=DetaFormaPagoFactuConstantesFunciones.getArrayColumnasGlobalesDetaFormaPagoFactu(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,DetaFormaPagoFactuConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=DetaFormaPagoFactuConstantesFunciones.SFINALQUERY;

				this.cargarCombosDetaFormaPagoFactusForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCuentaContableListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.cuentacontablesForeignKey==null||this.cuentacontablesForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=CuentaContableConstantesFunciones.getArrayColumnasGlobalesCuentaContable(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CuentaContableConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=CuentaContableConstantesFunciones.SFINALQUERY;

				this.cargarCombosCuentaContablesForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoRetencionListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.tiporetencionsForeignKey==null||this.tiporetencionsForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TipoRetencionConstantesFunciones.getArrayColumnasGlobalesTipoRetencion(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoRetencionConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TipoRetencionConstantesFunciones.SFINALQUERY;

				this.cargarCombosTipoRetencionsForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyAnioListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.aniosForeignKey==null||this.aniosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=AnioConstantesFunciones.getArrayColumnasGlobalesAnio(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,AnioConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=AnioConstantesFunciones.SFINALQUERY;

				this.cargarCombosAniosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyMesListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.messForeignKey==null||this.messForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=MesConstantesFunciones.getArrayColumnasGlobalesMes(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,MesConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=MesConstantesFunciones.SFINALQUERY;

				this.cargarCombosMessForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}
	
	public void cargarCombosLoteForeignKeyDetaFormaPagoListas(Boolean cargarCombosDependencia)throws Exception {
		try	{
			
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			
			Modulo  moduloActualAux=new Modulo();
			
			
			DetaFormaPagoParameterReturnGeneral detaformapagoReturnGeneral=new DetaFormaPagoParameterReturnGeneral();
						
			


				String finalQueryGlobalEmpresa="";

				if(((this.empresasForeignKey==null||this.empresasForeignKey.size()<=0) && this.detaformapagoConstantesFunciones.cargarid_empresaDetaFormaPago)
					 || (this.esRecargarFks && this.detaformapagoConstantesFunciones.cargarid_empresaDetaFormaPago)) {

					if(!this.detaformapagoSessionBean.getisBusquedaDesdeForeignKeySesionEmpresa()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=EmpresaConstantesFunciones.getArrayColumnasGlobalesEmpresa(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalEmpresa=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EmpresaConstantesFunciones.TABLENAME);

						finalQueryGlobalEmpresa=Funciones.GetFinalQueryAppend(finalQueryGlobalEmpresa, "");
						finalQueryGlobalEmpresa+=EmpresaConstantesFunciones.SFINALQUERY;

						//this.cargarCombosEmpresasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalEmpresa=" WHERE " + ConstantesSql.ID + "="+detaformapagoSessionBean.getlidEmpresaActual();
					}
				} else {
					finalQueryGlobalEmpresa="NONE";
				}


				String finalQueryGlobalSucursal="";

				if(((this.sucursalsForeignKey==null||this.sucursalsForeignKey.size()<=0) && this.detaformapagoConstantesFunciones.cargarid_sucursalDetaFormaPago)
					 || (this.esRecargarFks && this.detaformapagoConstantesFunciones.cargarid_sucursalDetaFormaPago)) {

					if(!this.detaformapagoSessionBean.getisBusquedaDesdeForeignKeySesionSucursal()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=SucursalConstantesFunciones.getArrayColumnasGlobalesSucursal(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalSucursal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,SucursalConstantesFunciones.TABLENAME);

						finalQueryGlobalSucursal=Funciones.GetFinalQueryAppend(finalQueryGlobalSucursal, "");
						finalQueryGlobalSucursal+=SucursalConstantesFunciones.SFINALQUERY;

						//this.cargarCombosSucursalsForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalSucursal=" WHERE " + ConstantesSql.ID + "="+detaformapagoSessionBean.getlidSucursalActual();
					}
				} else {
					finalQueryGlobalSucursal="NONE";
				}


				String finalQueryGlobalEjercicio="";

				if(((this.ejerciciosForeignKey==null||this.ejerciciosForeignKey.size()<=0) && this.detaformapagoConstantesFunciones.cargarid_ejercicioDetaFormaPago)
					 || (this.esRecargarFks && this.detaformapagoConstantesFunciones.cargarid_ejercicioDetaFormaPago)) {

					if(!this.detaformapagoSessionBean.getisBusquedaDesdeForeignKeySesionEjercicio()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=EjercicioConstantesFunciones.getArrayColumnasGlobalesEjercicio(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalEjercicio=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EjercicioConstantesFunciones.TABLENAME);

						finalQueryGlobalEjercicio=Funciones.GetFinalQueryAppend(finalQueryGlobalEjercicio, "");
						finalQueryGlobalEjercicio+=EjercicioConstantesFunciones.SFINALQUERY;

						//this.cargarCombosEjerciciosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalEjercicio=" WHERE " + ConstantesSql.ID + "="+detaformapagoSessionBean.getlidEjercicioActual();
					}
				} else {
					finalQueryGlobalEjercicio="NONE";
				}


				String finalQueryGlobalPeriodo="";

				if(((this.periodosForeignKey==null||this.periodosForeignKey.size()<=0) && this.detaformapagoConstantesFunciones.cargarid_periodoDetaFormaPago)
					 || (this.esRecargarFks && this.detaformapagoConstantesFunciones.cargarid_periodoDetaFormaPago)) {

					if(!this.detaformapagoSessionBean.getisBusquedaDesdeForeignKeySesionPeriodo()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=PeriodoConstantesFunciones.getArrayColumnasGlobalesPeriodo(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalPeriodo=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,PeriodoConstantesFunciones.TABLENAME);

						finalQueryGlobalPeriodo=Funciones.GetFinalQueryAppend(finalQueryGlobalPeriodo, "");
						finalQueryGlobalPeriodo+=PeriodoConstantesFunciones.SFINALQUERY;

						//this.cargarCombosPeriodosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalPeriodo=" WHERE " + ConstantesSql.ID + "="+detaformapagoSessionBean.getlidPeriodoActual();
					}
				} else {
					finalQueryGlobalPeriodo="NONE";
				}


				String finalQueryGlobalFactura="";

				if(((this.facturasForeignKey==null||this.facturasForeignKey.size()<=0) && this.detaformapagoConstantesFunciones.cargarid_facturaDetaFormaPago)
					 || (this.esRecargarFks && this.detaformapagoConstantesFunciones.cargarid_facturaDetaFormaPago)) {

					if(!this.detaformapagoSessionBean.getisBusquedaDesdeForeignKeySesionFactura()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=FacturaConstantesFunciones.getArrayColumnasGlobalesFactura(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalFactura=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,FacturaConstantesFunciones.TABLENAME);

						finalQueryGlobalFactura=Funciones.GetFinalQueryAppend(finalQueryGlobalFactura, "");
						finalQueryGlobalFactura+=FacturaConstantesFunciones.SFINALQUERY;

						//this.cargarCombosFacturasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalFactura=" WHERE " + ConstantesSql.ID + "="+detaformapagoSessionBean.getlidFacturaActual();
					}
				} else {
					finalQueryGlobalFactura="NONE";
				}


				String finalQueryGlobalTipoFormaPago="";

				if(((this.tipoformapagosForeignKey==null||this.tipoformapagosForeignKey.size()<=0) && this.detaformapagoConstantesFunciones.cargarid_tipo_forma_pagoDetaFormaPago)
					 || (this.esRecargarFks && this.detaformapagoConstantesFunciones.cargarid_tipo_forma_pagoDetaFormaPago)) {

					if(!this.detaformapagoSessionBean.getisBusquedaDesdeForeignKeySesionTipoFormaPago()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TipoFormaPagoConstantesFunciones.getArrayColumnasGlobalesTipoFormaPago(this.arrDatoGeneral,this.arrDatoGeneralNo);
						moduloActualAux.setId(ModuloConstantesFuncionesAdditional.LID_MODULO_CUENTAS_POR_COBRAR);

						finalQueryGlobalTipoFormaPago=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,moduloActualAux,true,false,arrColumnasGlobales,TipoFormaPagoConstantesFunciones.TABLENAME);

						finalQueryGlobalTipoFormaPago=Funciones.GetFinalQueryAppend(finalQueryGlobalTipoFormaPago, "");
						finalQueryGlobalTipoFormaPago+=TipoFormaPagoConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTipoFormaPagosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTipoFormaPago=" WHERE " + ConstantesSql.ID + "="+detaformapagoSessionBean.getlidTipoFormaPagoActual();
					}
				} else {
					finalQueryGlobalTipoFormaPago="NONE";
				}


				String finalQueryGlobalTipoDetaFormaPago="";

				if(((this.tipodetaformapagosForeignKey==null||this.tipodetaformapagosForeignKey.size()<=0) && this.detaformapagoConstantesFunciones.cargarid_tipo_deta_forma_pagoDetaFormaPago)
					 || (this.esRecargarFks && this.detaformapagoConstantesFunciones.cargarid_tipo_deta_forma_pagoDetaFormaPago)) {

					if(!this.detaformapagoSessionBean.getisBusquedaDesdeForeignKeySesionTipoDetaFormaPago()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TipoDetaFormaPagoConstantesFunciones.getArrayColumnasGlobalesTipoDetaFormaPago(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalTipoDetaFormaPago=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoDetaFormaPagoConstantesFunciones.TABLENAME);

						finalQueryGlobalTipoDetaFormaPago=Funciones.GetFinalQueryAppend(finalQueryGlobalTipoDetaFormaPago, "");
						finalQueryGlobalTipoDetaFormaPago+=TipoDetaFormaPagoConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTipoDetaFormaPagosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTipoDetaFormaPago=" WHERE " + ConstantesSql.ID + "="+detaformapagoSessionBean.getlidTipoDetaFormaPagoActual();
					}
				} else {
					finalQueryGlobalTipoDetaFormaPago="NONE";
				}


				String finalQueryGlobalDetaFormaPagoFactu="";

				if(((this.detaformapagofactusForeignKey==null||this.detaformapagofactusForeignKey.size()<=0) && this.detaformapagoConstantesFunciones.cargarid_deta_forma_pago_factuDetaFormaPago)
					 || (this.esRecargarFks && this.detaformapagoConstantesFunciones.cargarid_deta_forma_pago_factuDetaFormaPago)) {

					if(!this.detaformapagoSessionBean.getisBusquedaDesdeForeignKeySesionDetaFormaPagoFactu()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=DetaFormaPagoFactuConstantesFunciones.getArrayColumnasGlobalesDetaFormaPagoFactu(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalDetaFormaPagoFactu=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,DetaFormaPagoFactuConstantesFunciones.TABLENAME);

						finalQueryGlobalDetaFormaPagoFactu=Funciones.GetFinalQueryAppend(finalQueryGlobalDetaFormaPagoFactu, "");
						finalQueryGlobalDetaFormaPagoFactu+=DetaFormaPagoFactuConstantesFunciones.SFINALQUERY;

						//this.cargarCombosDetaFormaPagoFactusForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalDetaFormaPagoFactu=" WHERE " + ConstantesSql.ID + "="+detaformapagoSessionBean.getlidDetaFormaPagoFactuActual();
					}
				} else {
					finalQueryGlobalDetaFormaPagoFactu="NONE";
				}


				String finalQueryGlobalCuentaContable="";

				if(((this.cuentacontablesForeignKey==null||this.cuentacontablesForeignKey.size()<=0) && this.detaformapagoConstantesFunciones.cargarid_cuenta_contableDetaFormaPago)
					 || (this.esRecargarFks && this.detaformapagoConstantesFunciones.cargarid_cuenta_contableDetaFormaPago)) {

					if(!this.detaformapagoSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContable()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();

						this.arrDatoGeneralNo.add("id_modulo");

						arrColumnasGlobales=CuentaContableConstantesFunciones.getArrayColumnasGlobalesCuentaContable(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalCuentaContable=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CuentaContableConstantesFunciones.TABLENAME);

						finalQueryGlobalCuentaContable=Funciones.GetFinalQueryAppend(finalQueryGlobalCuentaContable, "");
						finalQueryGlobalCuentaContable+=CuentaContableConstantesFunciones.SFINALQUERY;

						//this.cargarCombosCuentaContablesForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalCuentaContable=" WHERE " + ConstantesSql.ID + "="+detaformapagoSessionBean.getlidCuentaContableActual();
					}
				} else {
					finalQueryGlobalCuentaContable="NONE";
				}


				String finalQueryGlobalTipoRetencion="";

				if(((this.tiporetencionsForeignKey==null||this.tiporetencionsForeignKey.size()<=0) && this.detaformapagoConstantesFunciones.cargarid_tipo_retencionDetaFormaPago)
					 || (this.esRecargarFks && this.detaformapagoConstantesFunciones.cargarid_tipo_retencionDetaFormaPago)) {

					if(!this.detaformapagoSessionBean.getisBusquedaDesdeForeignKeySesionTipoRetencion()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TipoRetencionConstantesFunciones.getArrayColumnasGlobalesTipoRetencion(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalTipoRetencion=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoRetencionConstantesFunciones.TABLENAME);

						finalQueryGlobalTipoRetencion=Funciones.GetFinalQueryAppend(finalQueryGlobalTipoRetencion, "");
						finalQueryGlobalTipoRetencion+=TipoRetencionConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTipoRetencionsForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTipoRetencion=" WHERE " + ConstantesSql.ID + "="+detaformapagoSessionBean.getlidTipoRetencionActual();
					}
				} else {
					finalQueryGlobalTipoRetencion="NONE";
				}


				String finalQueryGlobalAnio="";

				if(((this.aniosForeignKey==null||this.aniosForeignKey.size()<=0) && this.detaformapagoConstantesFunciones.cargarid_anioDetaFormaPago)
					 || (this.esRecargarFks && this.detaformapagoConstantesFunciones.cargarid_anioDetaFormaPago)) {

					if(!this.detaformapagoSessionBean.getisBusquedaDesdeForeignKeySesionAnio()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=AnioConstantesFunciones.getArrayColumnasGlobalesAnio(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalAnio=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,AnioConstantesFunciones.TABLENAME);

						finalQueryGlobalAnio=Funciones.GetFinalQueryAppend(finalQueryGlobalAnio, "");
						finalQueryGlobalAnio+=AnioConstantesFunciones.SFINALQUERY;

						//this.cargarCombosAniosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalAnio=" WHERE " + ConstantesSql.ID + "="+detaformapagoSessionBean.getlidAnioActual();
					}
				} else {
					finalQueryGlobalAnio="NONE";
				}


				String finalQueryGlobalMes="";

				if(((this.messForeignKey==null||this.messForeignKey.size()<=0) && this.detaformapagoConstantesFunciones.cargarid_mesDetaFormaPago)
					 || (this.esRecargarFks && this.detaformapagoConstantesFunciones.cargarid_mesDetaFormaPago)) {

					if(!this.detaformapagoSessionBean.getisBusquedaDesdeForeignKeySesionMes()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=MesConstantesFunciones.getArrayColumnasGlobalesMes(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalMes=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,MesConstantesFunciones.TABLENAME);

						finalQueryGlobalMes=Funciones.GetFinalQueryAppend(finalQueryGlobalMes, "");
						finalQueryGlobalMes+=MesConstantesFunciones.SFINALQUERY;

						//this.cargarCombosMessForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalMes=" WHERE " + ConstantesSql.ID + "="+detaformapagoSessionBean.getlidMesActual();
					}
				} else {
					finalQueryGlobalMes="NONE";
				}
			
			//ARCHITECTURE			
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				detaformapagoReturnGeneral=detaformapagoLogic.cargarCombosLoteForeignKeyDetaFormaPago(finalQueryGlobalEmpresa,finalQueryGlobalSucursal,finalQueryGlobalEjercicio,finalQueryGlobalPeriodo,finalQueryGlobalFactura,finalQueryGlobalTipoFormaPago,finalQueryGlobalTipoDetaFormaPago,finalQueryGlobalDetaFormaPagoFactu,finalQueryGlobalCuentaContable,finalQueryGlobalTipoRetencion,finalQueryGlobalAnio,finalQueryGlobalMes);//WithConnection
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}			
			//ARCHITECTURE
			
			

			if(!finalQueryGlobalEmpresa.equals("NONE")) {
				this.empresasForeignKey=detaformapagoReturnGeneral.getempresasForeignKey();
			}

			if(!finalQueryGlobalSucursal.equals("NONE")) {
				this.sucursalsForeignKey=detaformapagoReturnGeneral.getsucursalsForeignKey();
			}

			if(!finalQueryGlobalEjercicio.equals("NONE")) {
				this.ejerciciosForeignKey=detaformapagoReturnGeneral.getejerciciosForeignKey();
			}

			if(!finalQueryGlobalPeriodo.equals("NONE")) {
				this.periodosForeignKey=detaformapagoReturnGeneral.getperiodosForeignKey();
			}

			if(!finalQueryGlobalFactura.equals("NONE")) {
				this.facturasForeignKey=detaformapagoReturnGeneral.getfacturasForeignKey();
			}

			if(!finalQueryGlobalTipoFormaPago.equals("NONE")) {
				this.tipoformapagosForeignKey=detaformapagoReturnGeneral.gettipoformapagosForeignKey();
			}

			if(!finalQueryGlobalTipoDetaFormaPago.equals("NONE")) {
				this.tipodetaformapagosForeignKey=detaformapagoReturnGeneral.gettipodetaformapagosForeignKey();
			}

			if(!finalQueryGlobalDetaFormaPagoFactu.equals("NONE")) {
				this.detaformapagofactusForeignKey=detaformapagoReturnGeneral.getdetaformapagofactusForeignKey();
			}

			if(!finalQueryGlobalCuentaContable.equals("NONE")) {
				this.cuentacontablesForeignKey=detaformapagoReturnGeneral.getcuentacontablesForeignKey();
			}

			if(!finalQueryGlobalTipoRetencion.equals("NONE")) {
				this.tiporetencionsForeignKey=detaformapagoReturnGeneral.gettiporetencionsForeignKey();
			}

			if(!finalQueryGlobalAnio.equals("NONE")) {
				this.aniosForeignKey=detaformapagoReturnGeneral.getaniosForeignKey();
			}

			if(!finalQueryGlobalMes.equals("NONE")) {
				this.messForeignKey=detaformapagoReturnGeneral.getmessForeignKey();
			}
			
			
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void addItemDefectoCombosTodosForeignKeyDetaFormaPago()throws Exception {
		try {
			
			this.addItemDefectoCombosForeignKeyEmpresa();
			this.addItemDefectoCombosForeignKeySucursal();
			this.addItemDefectoCombosForeignKeyEjercicio();
			this.addItemDefectoCombosForeignKeyPeriodo();
			this.addItemDefectoCombosForeignKeyFactura();
			this.addItemDefectoCombosForeignKeyTipoFormaPago();
			this.addItemDefectoCombosForeignKeyTipoDetaFormaPago();
			this.addItemDefectoCombosForeignKeyDetaFormaPagoFactu();
			this.addItemDefectoCombosForeignKeyCuentaContable();
			this.addItemDefectoCombosForeignKeyTipoRetencion();
			this.addItemDefectoCombosForeignKeyAnio();
			this.addItemDefectoCombosForeignKeyMes();
		} catch(Exception e) {
			throw e;
		}		
	}
	
	



	public void addItemDefectoCombosForeignKeyEmpresa()throws Exception {
		try {
			if(this.detaformapagoSessionBean==null) {
				this.detaformapagoSessionBean=new DetaFormaPagoSessionBean();
			}

			if(!this.detaformapagoSessionBean.getisBusquedaDesdeForeignKeySesionEmpresa()) {
				Empresa empresa=new Empresa();
				EmpresaConstantesFunciones.setEmpresaDescripcion(empresa,Constantes.SMENSAJE_ESCOJA_OPCION);
				empresa.setId(null);

				if(!EmpresaConstantesFunciones.ExisteEnLista(this.empresasForeignKey,empresa,true)) {

					this.empresasForeignKey.add(0,empresa);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeySucursal()throws Exception {
		try {

			if(!this.detaformapagoSessionBean.getisBusquedaDesdeForeignKeySesionSucursal()) {
				Sucursal sucursal=new Sucursal();
				SucursalConstantesFunciones.setSucursalDescripcion(sucursal,Constantes.SMENSAJE_ESCOJA_OPCION);
				sucursal.setId(null);

				if(!SucursalConstantesFunciones.ExisteEnLista(this.sucursalsForeignKey,sucursal,true)) {

					this.sucursalsForeignKey.add(0,sucursal);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyEjercicio()throws Exception {
		try {

			if(!this.detaformapagoSessionBean.getisBusquedaDesdeForeignKeySesionEjercicio()) {
				Ejercicio ejercicio=new Ejercicio();
				EjercicioConstantesFunciones.setEjercicioDescripcion(ejercicio,Constantes.SMENSAJE_ESCOJA_OPCION);
				ejercicio.setId(null);

				if(!EjercicioConstantesFunciones.ExisteEnLista(this.ejerciciosForeignKey,ejercicio,true)) {

					this.ejerciciosForeignKey.add(0,ejercicio);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyPeriodo()throws Exception {
		try {

			if(!this.detaformapagoSessionBean.getisBusquedaDesdeForeignKeySesionPeriodo()) {
				Periodo periodo=new Periodo();
				PeriodoConstantesFunciones.setPeriodoDescripcion(periodo,Constantes.SMENSAJE_ESCOJA_OPCION);
				periodo.setId(null);

				if(!PeriodoConstantesFunciones.ExisteEnLista(this.periodosForeignKey,periodo,true)) {

					this.periodosForeignKey.add(0,periodo);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyFactura()throws Exception {
		try {

			if(!this.detaformapagoSessionBean.getisBusquedaDesdeForeignKeySesionFactura()) {
				Factura factura=new Factura();
				FacturaConstantesFunciones.setFacturaDescripcion(factura,Constantes.SMENSAJE_ESCOJA_OPCION);
				factura.setId(null);

				if(!FacturaConstantesFunciones.ExisteEnLista(this.facturasForeignKey,factura,true)) {

					this.facturasForeignKey.add(0,factura);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTipoFormaPago()throws Exception {
		try {

			if(!this.detaformapagoSessionBean.getisBusquedaDesdeForeignKeySesionTipoFormaPago()) {
				TipoFormaPago tipoformapago=new TipoFormaPago();
				TipoFormaPagoConstantesFunciones.setTipoFormaPagoDescripcion(tipoformapago,Constantes.SMENSAJE_ESCOJA_OPCION);
				tipoformapago.setId(null);

				if(!TipoFormaPagoConstantesFunciones.ExisteEnLista(this.tipoformapagosForeignKey,tipoformapago,true)) {

					this.tipoformapagosForeignKey.add(0,tipoformapago);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTipoDetaFormaPago()throws Exception {
		try {

			if(!this.detaformapagoSessionBean.getisBusquedaDesdeForeignKeySesionTipoDetaFormaPago()) {
				TipoDetaFormaPago tipodetaformapago=new TipoDetaFormaPago();
				TipoDetaFormaPagoConstantesFunciones.setTipoDetaFormaPagoDescripcion(tipodetaformapago,Constantes.SMENSAJE_ESCOJA_OPCION);
				tipodetaformapago.setId(null);

				if(!TipoDetaFormaPagoConstantesFunciones.ExisteEnLista(this.tipodetaformapagosForeignKey,tipodetaformapago,true)) {

					this.tipodetaformapagosForeignKey.add(0,tipodetaformapago);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyDetaFormaPagoFactu()throws Exception {
		try {

			if(!this.detaformapagoSessionBean.getisBusquedaDesdeForeignKeySesionDetaFormaPagoFactu()) {
				DetaFormaPagoFactu detaformapagofactu=new DetaFormaPagoFactu();
				DetaFormaPagoFactuConstantesFunciones.setDetaFormaPagoFactuDescripcion(detaformapagofactu,Constantes.SMENSAJE_ESCOJA_OPCION);
				detaformapagofactu.setId(null);

				if(!DetaFormaPagoFactuConstantesFunciones.ExisteEnLista(this.detaformapagofactusForeignKey,detaformapagofactu,true)) {

					this.detaformapagofactusForeignKey.add(0,detaformapagofactu);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyCuentaContable()throws Exception {
		try {

			if(!this.detaformapagoSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContable()) {
				CuentaContable cuentacontable=new CuentaContable();
				CuentaContableConstantesFunciones.setCuentaContableDescripcion(cuentacontable,Constantes.SMENSAJE_ESCOJA_OPCION);
				cuentacontable.setId(null);

				if(!CuentaContableConstantesFunciones.ExisteEnLista(this.cuentacontablesForeignKey,cuentacontable,true)) {

					this.cuentacontablesForeignKey.add(0,cuentacontable);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTipoRetencion()throws Exception {
		try {

			if(!this.detaformapagoSessionBean.getisBusquedaDesdeForeignKeySesionTipoRetencion()) {
				TipoRetencion tiporetencion=new TipoRetencion();
				TipoRetencionConstantesFunciones.setTipoRetencionDescripcion(tiporetencion,Constantes.SMENSAJE_ESCOJA_OPCION);
				tiporetencion.setId(null);

				if(!TipoRetencionConstantesFunciones.ExisteEnLista(this.tiporetencionsForeignKey,tiporetencion,true)) {

					this.tiporetencionsForeignKey.add(0,tiporetencion);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyAnio()throws Exception {
		try {

			if(!this.detaformapagoSessionBean.getisBusquedaDesdeForeignKeySesionAnio()) {
				Anio anio=new Anio();
				AnioConstantesFunciones.setAnioDescripcion(anio,Constantes.SMENSAJE_ESCOJA_OPCION);
				anio.setId(null);

				if(!AnioConstantesFunciones.ExisteEnLista(this.aniosForeignKey,anio,true)) {

					this.aniosForeignKey.add(0,anio);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyMes()throws Exception {
		try {

			if(!this.detaformapagoSessionBean.getisBusquedaDesdeForeignKeySesionMes()) {
				Mes mes=new Mes();
				MesConstantesFunciones.setMesDescripcion(mes,Constantes.SMENSAJE_ESCOJA_OPCION);
				mes.setId(null);

				if(!MesConstantesFunciones.ExisteEnLista(this.messForeignKey,mes,true)) {

					this.messForeignKey.add(0,mes);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void initActionsCombosTodosForeignKeyDetaFormaPago()throws Exception {
		try {
			
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void initActionsCombosTodosForeignKeyDetaFormaPago(String sFormularioTipoBusqueda)throws Exception {
		try {
			
		} catch(Exception e) {
			throw e;
		}		
	}
	
	


	
	


	
	public void setVariablesGlobalesCombosForeignKeyDetaFormaPago()throws Exception {	
		try {
			if(this.parametroGeneralUsuario!=null && this.parametroGeneralUsuario.getId()>0) {
			
				this.setActualEmpresaForeignKey(this.parametroGeneralUsuario.getid_empresa(),false,"Formulario");
				this.setActualSucursalForeignKey(this.parametroGeneralUsuario.getid_sucursal(),false,"Formulario");
				this.setActualEjercicioForeignKey(this.parametroGeneralUsuario.getid_ejercicio(),false,"Formulario");
				this.setActualPeriodoForeignKey(this.parametroGeneralUsuario.getid_periodo(),false,"Formulario");
			
			
				this.detaformapago.setfecha_inicial(this.parametroGeneralUsuario.getfecha_sistema());
				this.detaformapago.setfecha_final(this.parametroGeneralUsuario.getfecha_sistema());
			}
			
			//INICIALIZA VARIABLES COMBOS GLOBALES AUXILIARES A FORMULARIO(Anio,Mes)
			this.setVariablesGlobalesAuxiliaresCombosForeignKeyDetaFormaPago();
		
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesObjetoActualToFormularioForeignKeyDetaFormaPago(DetaFormaPago detaformapago)throws Exception {	
		try {
			
			this.setActualFacturaForeignKey(detaformapago.getid_factura(),false,"Formulario");
			this.setActualTipoFormaPagoForeignKey(detaformapago.getid_tipo_forma_pago(),false,"Formulario");
			this.setActualTipoDetaFormaPagoForeignKey(detaformapago.getid_tipo_deta_forma_pago(),false,"Formulario");
			this.setActualDetaFormaPagoFactuForeignKey(detaformapago.getid_deta_forma_pago_factu(),false,"Formulario");
			this.setActualCuentaContableForeignKey(detaformapago.getid_cuenta_contable(),false,"Formulario");
			this.setActualTipoRetencionForeignKey(detaformapago.getid_tipo_retencion(),false,"Formulario");			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesObjetoActualToListasForeignKeyDetaFormaPago(DetaFormaPago detaformapago,String sTipoEvento)throws Exception {	
		try {
			
			

				if(detaformapago.getFactura()!=null && !sTipoEvento.equals("id_facturaDetaFormaPago")) { //sTipoEvento Evita Bucle Infinito

					this.facturasForeignKey=new ArrayList<Factura>();
					this.facturasForeignKey.add(detaformapago.getFactura());

					this.addItemDefectoCombosForeignKeyFactura();
					this.cargarCombosFrameFacturasForeignKey("Todos");
				}

				if(detaformapago.getCuentaContable()!=null && !sTipoEvento.equals("id_cuenta_contableDetaFormaPago")) { //sTipoEvento Evita Bucle Infinito

					this.cuentacontablesForeignKey=new ArrayList<CuentaContable>();
					this.cuentacontablesForeignKey.add(detaformapago.getCuentaContable());

					this.addItemDefectoCombosForeignKeyCuentaContable();
					this.cargarCombosFrameCuentaContablesForeignKey("Todos");
				}
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	/*
	public void setVariablesCombosFromBeanForeignKeyDetaFormaPago()throws Exception {	
		try {
			
			this.setActualFacturaForeignKey(this.detaformapagoConstantesFunciones.getid_factura(),false,"Formulario");
			this.setActualTipoFormaPagoForeignKey(this.detaformapagoConstantesFunciones.getid_tipo_forma_pago(),false,"Formulario");
			this.setActualTipoDetaFormaPagoForeignKey(this.detaformapagoConstantesFunciones.getid_tipo_deta_forma_pago(),false,"Formulario");
			this.setActualDetaFormaPagoFactuForeignKey(this.detaformapagoConstantesFunciones.getid_deta_forma_pago_factu(),false,"Formulario");
			this.setActualCuentaContableForeignKey(this.detaformapagoConstantesFunciones.getid_cuenta_contable(),false,"Formulario");
			this.setActualTipoRetencionForeignKey(this.detaformapagoConstantesFunciones.getid_tipo_retencion(),false,"Formulario");			
		} catch(Exception e) {
			throw e;
		}
	}
	*/
	
	public void setVariablesGlobalesAuxiliaresCombosForeignKeyDetaFormaPago()throws Exception {	
		try {
			

				if(this.jInternalFrameDetalleFormDetaFormaPago!=null) {
					Ejercicio ejercicioActual=(Ejercicio)this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_ejercicioDetaFormaPago.getSelectedItem();
					this.setActualAnioForeignKey(ejercicioActual.getid_anio(),false,"Formulario");
				}

				if(this.jInternalFrameDetalleFormDetaFormaPago!=null) {
					Periodo periodoActual=(Periodo)this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_periodoDetaFormaPago.getSelectedItem();
					this.setActualMesForeignKey(periodoActual.getid_mes(),false,"Formulario");
				}
		
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesDefaultCombosForeignKeyDetaFormaPago()throws Exception {	
		try {
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesParametroCombosForeignKeyDetaFormaPago()throws Exception {	
		try {
			
		} catch(Exception e) {
			throw e;
		}
	}		
	
	public void cargarCombosParametroDetaFormaPago()throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			
			//this.cargarDatosCliente();
			
			
			
		} catch(Exception e) {
			throw e;
		}		
	}
		
	public void cargarCombosFrameForeignKeyDetaFormaPago()throws Exception {
		try {
			

			this.cargarCombosFrameEmpresasForeignKey("Todos");
			this.cargarCombosFrameSucursalsForeignKey("Todos");
			this.cargarCombosFrameEjerciciosForeignKey("Todos");
			this.cargarCombosFramePeriodosForeignKey("Todos");
			this.cargarCombosFrameFacturasForeignKey("Todos");
			this.cargarCombosFrameTipoFormaPagosForeignKey("Todos");
			this.cargarCombosFrameTipoDetaFormaPagosForeignKey("Todos");
			this.cargarCombosFrameDetaFormaPagoFactusForeignKey("Todos");
			this.cargarCombosFrameCuentaContablesForeignKey("Todos");
			this.cargarCombosFrameTipoRetencionsForeignKey("Todos");
			this.cargarCombosFrameAniosForeignKey("Todos");
			this.cargarCombosFrameMessForeignKey("Todos");

		} catch(Exception e) {
			throw e;
		}		
	}		
	
	public void cargarCombosFrameForeignKeyDetaFormaPago(String sFormularioTipoBusqueda)throws Exception {
		try {
			

			this.cargarCombosFrameEmpresasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameSucursalsForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameEjerciciosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFramePeriodosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameFacturasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTipoFormaPagosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTipoDetaFormaPagosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameDetaFormaPagoFactusForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameCuentaContablesForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTipoRetencionsForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameAniosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameMessForeignKey(sFormularioTipoBusqueda);

		} catch(Exception e) {
			throw e;
		}		
	}	
	
	public void setItemDefectoCombosForeignKeyDetaFormaPago()throws Exception {
		try {
			



			if(this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_empresaDetaFormaPago!=null && this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_empresaDetaFormaPago.getItemCount()>0) {
				this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_empresaDetaFormaPago.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_sucursalDetaFormaPago!=null && this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_sucursalDetaFormaPago.getItemCount()>0) {
				this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_sucursalDetaFormaPago.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_ejercicioDetaFormaPago!=null && this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_ejercicioDetaFormaPago.getItemCount()>0) {
				this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_ejercicioDetaFormaPago.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_periodoDetaFormaPago!=null && this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_periodoDetaFormaPago.getItemCount()>0) {
				this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_periodoDetaFormaPago.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_facturaDetaFormaPago!=null && this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_facturaDetaFormaPago.getItemCount()>0) {
				this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_facturaDetaFormaPago.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_tipo_forma_pagoDetaFormaPago!=null && this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_tipo_forma_pagoDetaFormaPago.getItemCount()>0) {
				this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_tipo_forma_pagoDetaFormaPago.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_tipo_deta_forma_pagoDetaFormaPago!=null && this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_tipo_deta_forma_pagoDetaFormaPago.getItemCount()>0) {
				this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_tipo_deta_forma_pagoDetaFormaPago.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_deta_forma_pago_factuDetaFormaPago!=null && this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_deta_forma_pago_factuDetaFormaPago.getItemCount()>0) {
				this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_deta_forma_pago_factuDetaFormaPago.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_cuenta_contableDetaFormaPago!=null && this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_cuenta_contableDetaFormaPago.getItemCount()>0) {
				this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_cuenta_contableDetaFormaPago.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_tipo_retencionDetaFormaPago!=null && this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_tipo_retencionDetaFormaPago.getItemCount()>0) {
				this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_tipo_retencionDetaFormaPago.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_anioDetaFormaPago!=null && this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_anioDetaFormaPago.getItemCount()>0) {
				this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_anioDetaFormaPago.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_mesDetaFormaPago!=null && this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_mesDetaFormaPago.getItemCount()>0) {
				this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_mesDetaFormaPago.setSelectedIndex(0);
			}
		} catch(Exception e) {
			throw e;
		}		
	}		
	
	
























	
	

	public DetaFormaPagoBeanSwingJInternalFrame() throws Exception {
		super(false,PaginaTipo.PRINCIPAL);
	}
	
	public DetaFormaPagoBeanSwingJInternalFrame(Boolean cargarRelaciones,PaginaTipo paginaTipo) throws Exception {
		super(cargarRelaciones,paginaTipo);
	}
	
	public DetaFormaPagoBeanSwingJInternalFrame(Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,PaginaTipo paginaTipo) throws Exception {
		super(cargarRelaciones,paginaTipo);
		
		this.detaformapagoSessionBean=new DetaFormaPagoSessionBean(); 
		this.detaformapagoConstantesFunciones=new DetaFormaPagoConstantesFunciones(); 
		this.detaformapagoBean=new DetaFormaPago();//(this.detaformapagoConstantesFunciones); 		
		this.detaformapagoReturnGeneral=new DetaFormaPagoParameterReturnGeneral(); 
		
		this.detaformapagoSessionBean.setConGuardarRelaciones(conGuardarRelaciones);
		this.detaformapagoSessionBean.setEsGuardarRelacionado(esGuardarRelacionado);
				
	}
	
	public DetaFormaPagoBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,Boolean cargarTodosDatos,PaginaTipo paginaTipo) throws Exception {
		this(blncargarCombostrForeignKey,blnCargarInformacionInicial,jdesktopPane,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo,conGuardarRelaciones,esGuardarRelacionado,cargarRelaciones,cargarTodosDatos);
	}
		
	public DetaFormaPagoBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,Boolean cargarRelaciones,Boolean cargarTodosDatos,PaginaTipo paginaTipo) throws Exception {
		this(blncargarCombostrForeignKey,blnCargarInformacionInicial,jdesktopPane,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo,false,false,cargarRelaciones,cargarTodosDatos);
	}	
	
	public DetaFormaPagoBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,PaginaTipo paginaTipo,Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,Boolean cargarTodosDatos) throws Exception //Boolean esParaBusquedaForeignKey
    {
		super(jdesktopPane,conGuardarRelaciones,esGuardarRelacionado,cargarRelaciones,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo);
		
		try {
			
			this.permiteRecargarForm=false;
			
			this.startProcessDetaFormaPago(true);
			
			Boolean esParaBusquedaForeignKey=false;//ANTES USADO COMO PARAMETRO DEL CONSTRUCTOR
			
			if(paginaTipo.equals(PaginaTipo.BUSQUEDA)) {
				esParaBusquedaForeignKey=true;
			}
			
			
			
			//SE ASIGNA EN CLASE PADRE
			/*
			this.parametroGeneralSg=parametroGeneralSg;		
			this.parametroGeneralUsuario=parametroGeneralUsuario;	
			this.usuarioActual=usuarioActual;
			this.moduloActual=moduloActual;
			*/						
			
			long start_time=0;
			long end_time=0;
			
			if(Constantes2.ISDEVELOPING2) {
				start_time = System.currentTimeMillis();
			}
			
			if(!cargarTodosDatos) {
				this.sAccionBusqueda="NINGUNO";
			}
			
			this.detaformapagoConstantesFunciones=new DetaFormaPagoConstantesFunciones(); 
			this.detaformapagoBean=new DetaFormaPago();//this.detaformapagoConstantesFunciones); 			
			this.detaformapagoReturnGeneral=new DetaFormaPagoParameterReturnGeneral(); 
		
			DetaFormaPagoBeanSwingJInternalFrameAdditional.CargaInicialInicio(this, "NORMAL", null);
			
			this.setTitle(Funciones.GetTituloSistema(this.parametroGeneralSg,this.moduloActual,this.usuarioActual,"Deta Forma Pago Mantenimiento",paginaTipo));			
			
			this.conTotales=false;
			
			this.conTotales=true;
			
			
			this.detaformapago=new DetaFormaPago();
			this.detaformapagos = new ArrayList<DetaFormaPago>();
			this.detaformapagosAux = new ArrayList<DetaFormaPago>();
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detaformapagoLogic=new DetaFormaPagoLogic();
				this.detaformapagoLogic.getNewConnexionToDeep("");
			}
			
			//this.detaformapagoSessionBean.setConGuardarRelaciones(conGuardarRelaciones);
			//this.detaformapagoSessionBean.setEsGuardarRelacionado(esGuardarRelacionado);
			
			this.jDesktopPane=jdesktopPane;
			
			if(this.jDesktopPane.getClass().equals(JDesktopPaneMe.class)) {
				this.constantes2=((JDesktopPaneMe)this.jDesktopPane).constantes2;
			}
			
			if(!Constantes.CON_VARIAS_VENTANAS) {
    			MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameDetalleFormDetaFormaPago);
				
				if(!this.conCargarMinimo) {
					
					if(this.jInternalFrameReporteDinamicoDetaFormaPago!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameReporteDinamicoDetaFormaPago);	
					}
					
					if(this.jInternalFrameImportacionDetaFormaPago!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameImportacionDetaFormaPago);							
					}
					
				}
				
				if(this.jInternalFrameTotalesDetaFormaPago!=null) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameTotalesDetaFormaPago);
				}
				
				if(!this.conCargarMinimo) {
					
					if(this.jInternalFrameOrderByDetaFormaPago!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameOrderByDetaFormaPago);					
					}
					
				}
			}
			
			//DETALLE DATOS
			if(this.jInternalFrameDetalleFormDetaFormaPago!=null) { //this.conCargarFormDetalle) {
				this.jDesktopPane.add(this.jInternalFrameDetalleFormDetaFormaPago);
				this.jInternalFrameDetalleFormDetaFormaPago.setVisible(false);
				this.jInternalFrameDetalleFormDetaFormaPago.setSelected(false);						
			}
			
			if(!this.conCargarMinimo) {
				
				//REPORTE DINAMICO
				if(this.jInternalFrameReporteDinamicoDetaFormaPago!=null) {
					this.jDesktopPane.add(this.jInternalFrameReporteDinamicoDetaFormaPago);
					this.jInternalFrameReporteDinamicoDetaFormaPago.setVisible(false);
					this.jInternalFrameReporteDinamicoDetaFormaPago.setSelected(false);
				}
				
				//IMPORTACION
				if(this.jInternalFrameImportacionDetaFormaPago!=null) {
					this.jDesktopPane.add(this.jInternalFrameImportacionDetaFormaPago);
					this.jInternalFrameImportacionDetaFormaPago.setVisible(false);
					this.jInternalFrameImportacionDetaFormaPago.setSelected(false);
				}
				
				
			}
			
			if(this.jInternalFrameTotalesDetaFormaPago!=null) {
				//TOTALES
				this.jDesktopPane.add(this.jInternalFrameTotalesDetaFormaPago);
				this.jInternalFrameTotalesDetaFormaPago.setVisible(false);
				this.jInternalFrameTotalesDetaFormaPago.setSelected(false);
			}
			
			if(!this.conCargarMinimo) {
				
				if(this.jInternalFrameOrderByDetaFormaPago!=null) {
					this.jDesktopPane.add(this.jInternalFrameOrderByDetaFormaPago);
					this.jInternalFrameOrderByDetaFormaPago.setVisible(false);
					this.jInternalFrameOrderByDetaFormaPago.setSelected(false);				
				}
				
			}
			
			
			//this.esParaBusquedaForeignKey=false;
			this.esParaBusquedaForeignKey=esParaBusquedaForeignKey;
			
			this.invalidValues=new InvalidValue[0];
			
			
			
			this.idDetaFormaPagoActual=0L;
			this.rowIndexActual=0;
			
			
			this.iNumeroPaginacionPagina=0;
			this.iNumeroPaginacion=DetaFormaPagoConstantesFunciones.INUMEROPAGINACION;
			this.pagination=new Pagination();
			this.datosCliente=new DatosCliente();
			this.lIdUsuarioSesion=0L;	
			this.sTipoArchivoReporte="";
			this.sTipoArchivoReporteDinamico="";
			this.sTipoReporte="";
			this.sTipoReporteDinamico="";
			this.sTipoPaginacion="";
			this.sTipoRelacion="";
			this.sTipoAccion="";
			this.sTipoAccionFormulario="";
			this.sTipoSeleccionar="";			
			this.sDetalleReporte="";
			this.sTipoReporteExtra="";
			this.sValorCampoGeneral="";
			this.sPathReporteDinamico="";			
			
			this.isMostrarNumeroPaginacion=false;
			this.isSeleccionarTodos=false;
			this.isSeleccionados=false;
			this.conGraficoReporte=false;
			this.isPostAccionNuevo=false;
			this.isPostAccionSinCerrar=false;
			this.isPostAccionSinMensaje=false;
			this.esReporteDinamico=false;
			this.esRecargarFks=false;
			this.esReporteAccionProceso=false;
			
			this.detaformapagoReturnGeneral=new DetaFormaPagoParameterReturnGeneral();
			
			this.detaformapagoParameterGeneral=new DetaFormaPagoParameterReturnGeneral();
			
			
			
			this.sistemaLogicAdditional=new SistemaLogicAdditional();
			
			this.sistemaLogicAdditional.setConnexion(this.detaformapagoLogic.getConnexion());			
			
			
			
			
			
			
			
			//VERIFICAR GLOBAL
			this.cargarDatosCliente();			
			
			
			if(!this.detaformapagoSessionBean.getEsGuardarRelacionado()) {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					if(!sistemaLogicAdditional.validarLicenciaCliente(this.datosCliente,this.moduloActual,this.usuarioActual)) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_CONTROLGLOBAL);
					}
					
				} else if(Constantes.ISUSAEJBREMOTE) {
					
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}			
			
			//VERIFICAR GLOBAL
			
			//VERIFICAR SESSION ACTUAL
			//this.cargarDatosCliente();
			
			this.sistemaReturnGeneral=new SistemaParameterReturnGeneral();
			
			SistemaParameterReturnGeneralAdditional.inicializarSinSeguridad(this.sistemaReturnGeneral);
			
			if(DetaFormaPagoJInternalFrame.CON_LLAMADA_SIMPLE) {
				if(this.detaformapagoSessionBean.getEsGuardarRelacionado()) {
					this.opcionActual.setId(0L);
					
					//idOpcion=0L;					
				}
				
				ArrayList<String> arrPaginas=new ArrayList<String>();		
				ArrayList<Opcion> opcionsFinal=new ArrayList<Opcion>();	
				
				arrPaginas.add(BancoFormaPagoConstantesFunciones.SNOMBREOPCION);
		
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					//this.sistemaReturnGeneral=sistemaLogicAdditional.validarCargarSesionUsuarioActualWithConnection(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual,Constantes.LIDSISTEMAACTUAL,DetaFormaPagoConstantesFunciones.SNOMBREOPCION,this.opcionActual,this.detaformapagoSessionBean.getEsGuardarRelacionado(),this.detaformapagoSessionBean.getConGuardarRelaciones(),arrPaginas);
					
					this.sistemaReturnGeneral=sistemaLogicAdditional.validarCargarSesionUsuarioActual(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual,Constantes.LIDSISTEMAACTUAL,DetaFormaPagoConstantesFunciones.SNOMBREOPCION,this.opcionActual,this.detaformapagoSessionBean.getEsGuardarRelacionado(),this.detaformapagoSessionBean.getConGuardarRelaciones(),arrPaginas);
					
					if(!this.sistemaReturnGeneral.getEsValidado()) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_SESIONACTUAL);
					}
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
					//FALTA
				}
			} else { 
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					if(!sistemaLogicAdditional.validarSesionUsuarioActual(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual)) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_SESIONACTUAL);
					}
				
				} else if(Constantes.ISUSAEJBREMOTE) {
					
				} else if(Constantes.ISUSAEJBHOME) {
				}
			} 
			//VERIFICAR SESSION ACTUAL
			
			
			this.sVisibilidadTablaBusquedas="table-row";
			this.sVisibilidadTablaElementos="none";
			this.sVisibilidadTablaAcciones="none";
			
			this.isVisibilidadCeldaNuevoDetaFormaPago=false;
			this.isVisibilidadCeldaDuplicarDetaFormaPago=true;
			this.isVisibilidadCeldaCopiarDetaFormaPago=true;
			this.isVisibilidadCeldaVerFormDetaFormaPago=true;
			this.isVisibilidadCeldaOrdenDetaFormaPago=true;
			this.isVisibilidadCeldaNuevoRelacionesDetaFormaPago=false;
			this.isVisibilidadCeldaModificarDetaFormaPago=false;
			this.isVisibilidadCeldaActualizarDetaFormaPago=false;
			this.isVisibilidadCeldaEliminarDetaFormaPago=false;
			this.isVisibilidadCeldaCancelarDetaFormaPago=false;
			this.isVisibilidadCeldaGuardarDetaFormaPago=false;
			this.isVisibilidadCeldaGuardarCambiosDetaFormaPago=false;
			
			
			this.isVisibilidadFK_IdAnio=true;
			this.isVisibilidadFK_IdCuentaContable=true;
			this.isVisibilidadFK_IdDetaFormaPagoFactu=true;
			this.isVisibilidadFK_IdEjercicio=true;
			this.isVisibilidadFK_IdEmpresa=true;
			this.isVisibilidadFK_IdFactura=true;
			this.isVisibilidadFK_IdMes=true;
			this.isVisibilidadFK_IdPeriodo=true;
			this.isVisibilidadFK_IdSucursal=true;
			this.isVisibilidadFK_IdTipoDetaFormaPago=true;
			this.isVisibilidadFK_IdTipoFormaPago=true;
			this.isVisibilidadFK_IdTipoRetencion=true;
			
			//ELEMENTOS TABLAS PARAMETOS
			
			
			
			//ELEMENTOS TABLAS PARAMETOS_FIN
			
			//this.actualizarEstadoCeldasBotonesDetaFormaPago("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
						
			
			
			this.inicializarPermisosDetaFormaPago();
			
			//INICIALIZAR FALSE, TALVEZ COMENTAR
			this.setPermisosUsuarioDetaFormaPago(false);
			
			this.setPermisosUsuarioDetaFormaPago();
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.detaformapagoSessionBean.getEsGuardarRelacionado() 
				|| (this.detaformapagoSessionBean.getEsGuardarRelacionado() && this.detaformapagoSessionBean.getConGuardarRelaciones())) {
				
				this.inicializarSetPermisosUsuarioDetaFormaPagoClasesRelacionadas();
			}
			
			if(this.detaformapagoSessionBean.getConGuardarRelaciones()) {
				this.actualizarTabsSetPermisosUsuarioDetaFormaPagoClasesRelacionadas();
			}
			
			
			
			//SOLO SE EJECUTA LA PRIMERA VEZ, BINDINGS SI FUNCIONA
			if(!DetaFormaPagoJInternalFrame.ISBINDING_MANUAL) {
				this.inicializarActualizarBindingBotonesPermisosDetaFormaPago();
			} else {
				this.inicializarActualizarBindingBotonesPermisosManualDetaFormaPago();
			}
			
			if(!this.isPermisoBusquedaDetaFormaPago) {
				//BYDAN_BUSQUEDAS
				
				this.jTabbedPaneBusquedasDetaFormaPago.setVisible(false);				
				
			}
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.detaformapagoSessionBean.getEsGuardarRelacionado()) {				
				this.tiposArchivosReportes=Funciones.getListTiposArchivosReportes();
				this.tiposArchivosReportesDinamico=Funciones.getListTiposArchivosReportes();
				this.tiposReportes=Funciones.getListTiposReportes(true);
				this.tiposReportesDinamico=Funciones.getListTiposReportesDinamico(true);
				
				
				this.tiposReportes.add(new Reporte("RELACIONES","RELACIONES"));
				this.tiposReportesDinamico.add(new Reporte("RELACIONES","RELACIONES"));
				
				this.tiposGraficosReportes=Funciones2.getListTiposGraficosReportes();
				this.tiposPaginacion=Funciones2.getListTiposPaginacion(this.isPermisoPaginacionMedioDetaFormaPago,this.isPermisoPaginacionMedioDetaFormaPago,this.isPermisoPaginacionTodoDetaFormaPago);
				this.tiposSeleccionar=Funciones2.getListTiposSeleccionar();
				this.tiposSeleccionar.addAll(DetaFormaPagoConstantesFunciones.getTiposSeleccionarDetaFormaPago());
				
				this.tiposColumnasSelect=DetaFormaPagoConstantesFunciones.getTiposSeleccionarDetaFormaPago(true);
				
				this.tiposRelacionesSelect=new ArrayList<Reporte>();								
				
				this.cargarTiposRelacionesSelectDetaFormaPago();				
				//this.tiposRelacionesSelect=DetaFormaPagoConstantesFunciones.getTiposRelacionesDetaFormaPago(true);
				
			} else {
				this.tiposArchivosReportes=new ArrayList<Reporte>();
				this.tiposArchivosReportesDinamico=new ArrayList<Reporte>();
				this.tiposReportes=new ArrayList<Reporte>();
				this.tiposReportesDinamico=new ArrayList<Reporte>();
				this.tiposGraficosReportes=new ArrayList<Reporte>();
				this.tiposPaginacion=new ArrayList<Reporte>();
				this.tiposSeleccionar=new ArrayList<Reporte>();			
				this.tiposColumnasSelect=new ArrayList<Reporte>();	
				this.tiposRelacionesSelect=new ArrayList<Reporte>();	
			}
						
			
			//FUNCIONALIDAD_RELACIONADO
			//if(!this.detaformapagoSessionBean.getEsGuardarRelacionado()) {
				//SE ENCUENTRA MAS ADELANTE CON ACCIONES POR USUARIO
				//ACCIONES GENERALES Y POR USUARIO
				this.tiposRelaciones=Funciones2.getListTiposRelaciones();
				this.setRelacionesUsuarioDetaFormaPago();
				
				this.tiposAcciones=Funciones2.getListTiposAcciones(true,false,true);
				this.setAccionesUsuarioDetaFormaPago(false);	
				
				this.tiposAccionesFormulario=Funciones2.getListTiposAccionesFormulario(true,false,true);							
				this.setAccionesUsuarioDetaFormaPago(true);	
				
				this.inicializarActualizarBindingtiposArchivosReportesAccionesDetaFormaPago() ;
			
			/*
			} else {
				this.tiposAcciones=new ArrayList<Reporte>();
				this.tiposAccionesFormulario=new ArrayList<Reporte>();
			}
			*/						
			
			this.inicializarInvalidValues();
						
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			this.arrDatoGeneralTotales= new  ArrayList<DatoGeneral>();
			
			
			this.arrOrderBy= new  ArrayList<OrderBy>();
			
			
			this.arrDatoGeneralMinimos= new  ArrayList<DatoGeneralMinimo>();
			
			
			this.traerValoresTablaOrderBy();			
			
			
			this.isGuardarCambiosEnLote=false;
			this.isCargarCombosDependencia=false;
			
			
			this.bancoformapagoLogic=new BancoFormaPagoLogic(); 
			jasperPrint = null;												
			
			//FK
			
			this.empresaLogic=new EmpresaLogic();
			this.sucursalLogic=new SucursalLogic();
			this.ejercicioLogic=new EjercicioLogic();
			this.periodoLogic=new PeriodoLogic();
			this.facturaLogic=new FacturaLogic();
			this.tipoformapagoLogic=new TipoFormaPagoLogic();
			this.tipodetaformapagoLogic=new TipoDetaFormaPagoLogic();
			this.detaformapagofactuLogic=new DetaFormaPagoFactuLogic();
			this.cuentacontableLogic=new CuentaContableLogic();
			this.tiporetencionLogic=new TipoRetencionLogic();
			this.anioLogic=new AnioLogic();
			this.mesLogic=new MesLogic();
			
			//PARAMETROS
			
			
			/*
			if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {		
				hashtableEnv =  Funciones.getHashtableEnv();		
				initialContext = new InitialContext(hashtableEnv);	
			}
			*/
			/*
			if(Constantes.ISUSAEJBREMOTE) {
				detaformapagoImplementable= (DetaFormaPagoImplementable) initialContext.lookup(Constantes.SEJBPACKAGE+Constantes.SEJBSEPARATOR+DetaFormaPagoConstantesFunciones.SEJBNAME+Constantes.SEJBSEPARATOR+Constantes.SEJBREMOTE);
			} else if(Constantes.ISUSAEJBHOME) {
				detaformapagoImplementableHome= (DetaFormaPagoImplementableHome) initialContext.lookup(Constantes.SEJBPACKAGE+Constantes.SEJBSEPARATOR+DetaFormaPagoConstantesFunciones.SEJBNAME+Constantes.SEJBSEPARATOR+Constantes.SEJBLOCAL);
			}			
			*/
			
			
			this.detaformapagos= new ArrayList<DetaFormaPago>();
			this.detaformapagosEliminados= new ArrayList<DetaFormaPago>();
						
			this.isEsNuevoDetaFormaPago=false;
			this.esParaAccionDesdeFormularioDetaFormaPago=false;
			this.isEsMantenimientoRelacionesRelacionadoUnico=false;
			this.isEsMantenimientoRelaciones=false;
			this.isEsMantenimientoRelacionado=false;
			this.isContieneImagenes=false;
			
			
			
			
			//BUSQUEDA INTERNA FK
			this.idFacturaActual=0L;
			this.idCuentaContableActual=0L;
			
			//INICIALIZAR LISTAS FK
			
			this.empresasForeignKey=new ArrayList<Empresa>() ;
			this.sucursalsForeignKey=new ArrayList<Sucursal>() ;
			this.ejerciciosForeignKey=new ArrayList<Ejercicio>() ;
			this.periodosForeignKey=new ArrayList<Periodo>() ;
			this.facturasForeignKey=new ArrayList<Factura>() ;
			this.tipoformapagosForeignKey=new ArrayList<TipoFormaPago>() ;
			this.tipodetaformapagosForeignKey=new ArrayList<TipoDetaFormaPago>() ;
			this.detaformapagofactusForeignKey=new ArrayList<DetaFormaPagoFactu>() ;
			this.cuentacontablesForeignKey=new ArrayList<CuentaContable>() ;
			this.tiporetencionsForeignKey=new ArrayList<TipoRetencion>() ;
			this.aniosForeignKey=new ArrayList<Anio>() ;
			this.messForeignKey=new ArrayList<Mes>() ;
			
			
			
			
			if(blncargarCombostrForeignKey) {
				this.cargarCombosForeignKeyDetaFormaPago(this.isCargarCombosDependencia);
			}
			
			this.cargarCombosParametroDetaFormaPago();
			
			
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.detaformapagoSessionBean.getEsGuardarRelacionado()) {
				this.onLoad();
			}
						
			DetaFormaPagoBeanSwingJInternalFrameAdditional.RecargarVentanaSegunOpcion(this,opcionActual);
			
			/*
			if(blnCargarInformacionInicial) {
				this.recargarInformacion();
			}
			*/
			//this.iNumeroPaginacionPagina=0;
			//this.iNumeroPaginacion=DetaFormaPagoConstantesFunciones.INUMEROPAGINACION;
			
			this.actualizarEstadoCeldasBotonesDetaFormaPago("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			//SOLO LA PRIMERA VEZ HACE LOS BINDINGS, SOLO AHI FUNCIONA
			this.inicializarActualizarBindingDetaFormaPago(true); 
			
			//SE REDIMENSIONA SINO NO SE ACTUALIZA
			this.redimensionarTablaDatos();
			
			
			this.initActions();
			
			;
						
			if(this.jInternalFrameDetalleFormDetaFormaPago!=null) {//if(this.conCargarFormDetalle) {
				this.cargarMenuRelaciones();
			}
			
			//OBLIGA CARGAR DETALLE, MEJOR DESHABILITAR, FALTA TALVEZ PONER EN SELECCIONAR
			//MAYBE
			//this.updateControlesFormularioDetaFormaPago();
			
			if(!this.conCargarMinimo) {
				this.updateBusquedasFormularioDetaFormaPago();
			}
			
			DetaFormaPagoBeanSwingJInternalFrameAdditional.CargaInicial(this, "NORMAL", null);
			
			
			//SE REALIZA ESTO PARA QUE SE PUEDA RECORRER TAB SIN IMPORTAR ORDEN
			Boolean existeTabBusqueda=false;
			
			if(!this.conCargarMinimo) {
				//BYDAN_BUSQUEDAS
				
				
				for(int i=0; i<this.jTabbedPaneBusquedasDetaFormaPago.getTabCount(); i++) {
					this.jTabbedPaneBusquedasDetaFormaPago.setSelectedIndex(i);
						
					if(!existeTabBusqueda) {
						existeTabBusqueda=true;
					}
				}
					
				if(existeTabBusqueda) {
					this.jTabbedPaneBusquedasDetaFormaPago.setSelectedIndex(0);
				}	
				
				
			}
			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detaformapagoLogic.commitNewConnexionToDeep();
			}
			
			
			if(Constantes2.ISDEVELOPING2) {
				end_time = System.currentTimeMillis();			
				String sTipo="Load Ventana";
				Funciones2.getMensajeTiempoEjecucion(start_time, end_time, sTipo,false);
			}  
			
			this.finishProcessDetaFormaPago(true);
			
			this.dEnd=(double)System.currentTimeMillis();
			
			this.dDif=this.dEnd - this.dStart;
			
			if(Constantes.ISDEVELOPING) {
				System.out.println("Tiempo(ms) Carga DetaFormaPago: " + this.dDif); 
			}
			
			this.permiteRecargarForm=true;
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detaformapagoLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,DetaFormaPagoConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detaformapagoLogic.closeNewConnexionToDeep();
			}
		}	 
    }
	
	public void cargarTiposRelacionesSelectDetaFormaPago() {
		Reporte reporte=new Reporte();
		
	

		reporte=new Reporte();
		reporte.setsCodigo(BancoFormaPagoConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(BancoFormaPagoConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);
	}
	
	
	
	public void jTabbedPaneChangeListenerGeneral(String sTipo,ChangeEvent evt) { 	  
		Boolean procesaCargarParteTab=false;
			
		try {
			int iIndex=0;		    			
			String sTitle="";
			
			//TABBED PANE RELACIONES
			if(sTipo.equals("RelacionesDetaFormaPago")) {
				iIndex=this.jInternalFrameDetalleFormDetaFormaPago.jTabbedPaneRelacionesDetaFormaPago.getSelectedIndex();		    
			
				sTitle=this.jInternalFrameDetalleFormDetaFormaPago.jTabbedPaneRelacionesDetaFormaPago.getTitleAt(iIndex);
				
				Integer intSelectedRow = 0;	
			
				intSelectedRow = this.jTableDatosDetaFormaPago.getSelectedRow();	
				
				

				if(sTitle.equals("Banco Forma Pagos")) {
					if(!BancoFormaPagoJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessDetaFormaPago();

						this.cargarParteTabPanelRelacionadaBancoFormaPago(iIndex,intSelectedRow);
					}
					
				}
				
			}
			
			//TABBED PANE RELACIONES FIN(EXTRA TAB)
			;
			
  		} catch(Exception e) {
  			e.printStackTrace();
  		} finally {
			if(procesaCargarParteTab) {				
				this.finishProcessDetaFormaPago();	
			}
		}
    }
	
	

	public void cargarParteTabPanelRelacionadaBancoFormaPago(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormDetaFormaPago.cargarSessionConBeanSwingJInternalFrameBancoFormaPago(false,true,iIndex);
		this.jButtonBancoFormaPagoActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaBancoFormaPago();

		//this.jTabbedPaneRelacionesDetaFormaPago.updateUI();
		//this.jTabbedPaneRelacionesDetaFormaPago.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesDetaFormaPago.setSelectedIndex(iIndex);


	}
	
	public void jButtonRelacionActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
				 if(sTipo.equals("BancoFormaPago")) {
				int row=this.jTableDatosDetaFormaPago.getSelectedRow();
				jButtonBancoFormaPagoActionPerformed(evt,row,true,false,null);
				}
  		} catch(Exception e) {
  			e.printStackTrace();
  		}
    }
	
	public void cargarMenuRelaciones() {	
		JMenuItem jmenuItem= new JMenuItem("General");
		String sLabelMenu="";
		
		if(!this.detaformapagoSessionBean.getEsGuardarRelacionado()) {
			for(Reporte reporte:this.tiposRelaciones) {
			

				if(reporte.getsCodigo().equals("Banco Forma Pago")) {

					if(this.isTienePermisosBancoFormaPago && this.detaformapagoConstantesFunciones.mostrarBancoFormaPagoDetaFormaPago && !DetaFormaPagoConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Banco Forma Pagos"+"("+BancoFormaPagoConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Banco Forma Pagos");

						if(detaformapagoConstantesFunciones.resaltarBancoFormaPagoDetaFormaPago!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(detaformapagoConstantesFunciones.resaltarBancoFormaPagoDetaFormaPago);
						}

						jmenuItem.setEnabled(this.detaformapagoConstantesFunciones.activarBancoFormaPagoDetaFormaPago);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"BancoFormaPago"));

						

						this.jInternalFrameDetalleFormDetaFormaPago.jmenuDetalleDetaFormaPago.add(jmenuItem);

						
					}

					continue;
				}
			}
		}
	}		
	
	public void cargarCombosForeignKeyDetaFormaPago(Boolean cargarCombosDependencia) throws Exception {   
		this.cargarCombosForeignKeyDetaFormaPago(cargarCombosDependencia,true,true);
	}
	
	//CARGAR COMBOS EN LOTE
	public void cargarCombosForeignKeyDetaFormaPago(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales) throws Exception {   
		this.cargarCombosTodosForeignKeyDetaFormaPagoListas(cargarCombosDependencia);
				
		this.addItemDefectoCombosTodosForeignKeyDetaFormaPago();
		
		this.cargarCombosFrameForeignKeyDetaFormaPago();						
		
		if(conInitActions) {
			this.initActionsCombosTodosForeignKeyDetaFormaPago();
		}
		
		if(conSetVariablesGlobales) {
			this.setVariablesGlobalesCombosForeignKeyDetaFormaPago();
		}
	}
	
	

	public void cargarCombosForeignKeyFactura(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyFacturaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyFactura();
				this.cargarCombosFrameFacturasForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaFactura(this.facturasForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoFormaPago(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTipoFormaPagoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTipoFormaPago();
				this.cargarCombosFrameTipoFormaPagosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaTipoFormaPago(this.tipoformapagosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoDetaFormaPago(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTipoDetaFormaPagoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTipoDetaFormaPago();
				this.cargarCombosFrameTipoDetaFormaPagosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaTipoDetaFormaPago(this.tipodetaformapagosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyDetaFormaPagoFactu(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyDetaFormaPagoFactuListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyDetaFormaPagoFactu();
				this.cargarCombosFrameDetaFormaPagoFactusForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaDetaFormaPagoFactu(this.detaformapagofactusForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCuentaContable(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyCuentaContableListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyCuentaContable();
				this.cargarCombosFrameCuentaContablesForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaCuentaContable(this.cuentacontablesForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoRetencion(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTipoRetencionListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTipoRetencion();
				this.cargarCombosFrameTipoRetencionsForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaTipoRetencion(this.tiporetencionsForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyAnio(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyAnioListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyAnio();
				this.cargarCombosFrameAniosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaAnio(this.aniosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyMes(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyMesListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyMes();
				this.cargarCombosFrameMessForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaMes(this.messForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}
	
	public void jButtonNuevoDetaFormaPagoActionPerformed(ActionEvent evt,Boolean esRelaciones) throws Exception {   
		try {
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.FORM_RECARGAR;
			String sTipo="NUEVO_NORMAL";
			
			this.estaModoNuevo=true;
			
			if(this.detaformapagoSessionBean.getConGuardarRelaciones()) {
				this.dStart=(double)System.currentTimeMillis();
			}
				
			//if(this.esUsoDesdeHijo) {
			//	eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			//}
											
			if(this.jInternalFrameDetalleFormDetaFormaPago==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}			
				
			DetaFormaPagoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.detaformapago,new Object(),this.detaformapagoParameterGeneral,this.detaformapagoReturnGeneral);
			
			
			if(jTableDatosDetaFormaPago.getRowCount()>=1) {
				jTableDatosDetaFormaPago.removeRowSelectionInterval(0, jTableDatosDetaFormaPago.getRowCount()-1);						
			}
			
			this.isEsNuevoDetaFormaPago=true;
			
			//ESTABLECE SI ES RELACIONADO O NO 
			this.habilitarDeshabilitarTipoMantenimientoDetaFormaPago(esRelaciones);
			
			this.nuevoPreparar(false); 
			this.habilitarDeshabilitarControlesDetaFormaPago(true);			
			//this.detaformapago=new DetaFormaPago();
			//this.detaformapago.setIsChanged(true);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesDetaFormaPago(false) ;						
			 
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualDetaFormaPago() ;
			
			if(DetaFormaPagoJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetalleDetaFormaPago(esRelaciones);
			}
					
			//Se Duplica, sin sentido
			//this.actualizarInformacion("EVENTO_NUEVO",false,this.detaformapago);	
			this.actualizarInformacion("INFO_PADRE",false,this.detaformapago);				
			
			DetaFormaPagoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.detaformapago,new Object(),this.detaformapagoParameterGeneral,this.detaformapagoReturnGeneral);
			
			if(this.detaformapagoSessionBean.getConGuardarRelaciones()) {
				this.dEnd=(double)System.currentTimeMillis();					
				this.dDif=this.dEnd - this.dStart;
					
				if(Constantes.ISDEVELOPING) {
					System.out.println("Tiempo(ms) Nuevo Preparar DetaFormaPago: " + this.dDif); 
				}
			}
			
			//false para que pueda generar eventos
			this.estaModoNuevo=false;
							
			//Con this.estaModoNuevo=false;, se permite actualizar y usar eventos control al mismo tiempo (FuncionTipo.LAST)			
			DetaFormaPagoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.LAST,ControlTipo.FORM,EventoTipo.CLIC,EventoSubTipo.NEW,sTipo,this.detaformapago,new Object(),this.detaformapagoParameterGeneral,this.detaformapagoReturnGeneral);
			
		} catch(Exception e) {									
			FuncionesSwing.manageException(this, e,logger,DetaFormaPagoConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoNuevo=false;			
		}
	}
	
	public void jButtonDuplicarDetaFormaPagoActionPerformed(ActionEvent evt,Boolean esRelaciones) throws Exception {   
		try {
			Boolean soloDuplicarUno=false;
			Boolean conSeleccionarFilaTabla=false;
			
			this.estaModoNuevo=true;
			this.estaModoDuplicar=true;
			
			ArrayList<DetaFormaPago> detaformapagosSeleccionados=new ArrayList<DetaFormaPago>();
			int intSelectedRow =-1;
			Integer iNumRowsSeleccionados=0;
			int[] arrNumRowsSeleccionados=null;
			
			//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
			if(conSeleccionarFilaTabla) {
				arrNumRowsSeleccionados=this.jTableDatosDetaFormaPago.getSelectedRows();
				iNumRowsSeleccionados=this.jTableDatosDetaFormaPago.getSelectedRows().length;			
			}
			
			detaformapagosSeleccionados=this.getDetaFormaPagosSeleccionados(false);
				
			if((soloDuplicarUno && iNumRowsSeleccionados.equals(1)) || !soloDuplicarUno) {
				//LO HACE NUEVOPREPARAR
				//this.iIdNuevoDetaFormaPago--;			
				//DetaFormaPago detaformapagoAux= new DetaFormaPago();			
				//detaformapagoAux.setId(this.iIdNuevoDetaFormaPago);																
				
				//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
				//DetaFormaPago detaformapagoOrigen=new DetaFormaPago();
				//for(Integer iNumRowSeleccionado:arrNumRowsSeleccionados) {				
				
				for(DetaFormaPago detaformapagoOrigen : detaformapagosSeleccionados) {
					if(conSeleccionarFilaTabla) {
						if(!soloDuplicarUno) {
							//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
							//intSelectedRow =iNumRowSeleccionado;
						} else {
							intSelectedRow = this.jTableDatosDetaFormaPago.getSelectedRow();
						}
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							detaformapagoOrigen =(DetaFormaPago) this.detaformapagoLogic.getDetaFormaPagos().toArray()[this.jTableDatosDetaFormaPago.convertRowIndexToModel(intSelectedRow)];
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detaformapagoOrigen =(DetaFormaPago) this.detaformapagos.toArray()[this.jTableDatosDetaFormaPago.convertRowIndexToModel(intSelectedRow)];
						}
					}
					
					this.aumentarTamanioFilaNuevaTablaDetaFormaPago();
					
					if(this.conTotales) {
						this.quitarFilaTotales();
					}
					
					this.nuevoPreparar(true);
					
					this.detaformapago.setsType("DUPLICADO");
					
					this.setCopiarVariablesObjetosDetaFormaPago(detaformapagoOrigen,this.detaformapago,true,true);
					
					this.setVariablesFormularioToObjetoActualForeignKeysDetaFormaPago(this.detaformapago);
					
					//LO HACE NUEVOPREPARAR
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						this.detaformapagoLogic.getDetaFormaPagos().add(this.detaformapagoAux);
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						this.detaformapagos.add(this.detaformapagoAux);				
					}
					*/
				}
				
				this.inicializarActualizarBindingTablaDetaFormaPago(false);
				
				this.jTableDatosDetaFormaPago.setRowSelectionInterval(this.getIndiceNuevoDetaFormaPago(), this.getIndiceNuevoDetaFormaPago());
				
				int iLastRow =  this.jTableDatosDetaFormaPago.getRowCount () - 1;
				Rectangle rectangle = this.jTableDatosDetaFormaPago.getCellRect(iLastRow, 0, true);
				
				this.jTableDatosDetaFormaPago.scrollRectToVisible(rectangle);
				
				//FILA TOTALES
				if(this.conTotales) {
					this.crearFilaTotales();
					
					this.inicializarActualizarBindingTablaDetaFormaPago(false);
				}
			} else {
				throw new Exception("DEBE ESTAR SELECCIONADO 1 REGISTRO");
			}
			
		} catch(Exception e) {			
			FuncionesSwing.manageException(this, e,logger,DetaFormaPagoConstantesFunciones.CLASSNAME);
		
		} finally {
			this.estaModoNuevo=false;
			this.estaModoDuplicar=false;
		}
	}
	
	public void jButtonCopiarDetaFormaPagoActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			Boolean conSeleccionarFilaTabla=false;
			Integer iNumRowsSeleccionados=0;
			int[] intSelectedRows =null;
			int intSelectedRow =0;
			
			this.estaModoCopiar=true;
			
			ArrayList<DetaFormaPago> detaformapagosSeleccionados=new ArrayList<DetaFormaPago>();									
		
			DetaFormaPago detaformapagoOrigen=new DetaFormaPago();
			DetaFormaPago detaformapagoDestino=new DetaFormaPago();
				
			detaformapagosSeleccionados=this.getDetaFormaPagosSeleccionados(false);
			
			if(conSeleccionarFilaTabla) {
				iNumRowsSeleccionados=this.jTableDatosDetaFormaPago.getSelectedRows().length;	
			}
			
			if(iNumRowsSeleccionados.equals(2) || detaformapagosSeleccionados.size()==2) {
				if(conSeleccionarFilaTabla) {
					intSelectedRows =this.jTableDatosDetaFormaPago.getSelectedRows();
					intSelectedRow = intSelectedRows[0];	
									
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						detaformapagoOrigen =(DetaFormaPago) this.detaformapagoLogic.getDetaFormaPagos().toArray()[this.jTableDatosDetaFormaPago.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						detaformapagoOrigen =(DetaFormaPago) this.detaformapagos.toArray()[this.jTableDatosDetaFormaPago.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					intSelectedRow = intSelectedRows[1];
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						detaformapagoDestino =(DetaFormaPago) this.detaformapagoLogic.getDetaFormaPagos().toArray()[this.jTableDatosDetaFormaPago.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						detaformapagoDestino =(DetaFormaPago) this.detaformapagos.toArray()[this.jTableDatosDetaFormaPago.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				}
				
				detaformapagoOrigen =detaformapagosSeleccionados.get(0);
				detaformapagoDestino =detaformapagosSeleccionados.get(1);
				
				this.setCopiarVariablesObjetosDetaFormaPago(detaformapagoOrigen,detaformapagoDestino,true,false);
				
				detaformapagoDestino.setsType("DUPLICADO");
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					actualizarLista(detaformapagoDestino,detaformapagoLogic.getDetaFormaPagos());					
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(detaformapagoDestino,detaformapagos);
				}
				//ARCHITECTURE
				
				this.inicializarActualizarBindingTablaDetaFormaPago(false);
				
				//this.jTableDatosDetaFormaPago.setRowSelectionInterval(this.getIndiceNuevoDetaFormaPago(), this.getIndiceNuevoDetaFormaPago());
				
				int iLastRow =  this.jTableDatosDetaFormaPago.getRowCount () - 1;
				Rectangle rectangle = this.jTableDatosDetaFormaPago.getCellRect(iLastRow, 0, true);
				
				this.jTableDatosDetaFormaPago.scrollRectToVisible(rectangle);
				
				//FILA TOTALES
				if(this.conTotales) {
					//this.crearFilaTotales();
					
					this.inicializarActualizarBindingTablaDetaFormaPago(false);
				}
			} else {
				throw new Exception("DEBEN ESTAR SELECCIONADOS 2 REGISTROS");
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetaFormaPagoConstantesFunciones.CLASSNAME);
		
		}  finally {
			this.estaModoCopiar=false;
		}
	}
	
	public void jButtonVerFormDetaFormaPagoActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			if(this.jInternalFrameDetalleFormDetaFormaPago==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			this.jInternalFrameDetalleFormDetaFormaPago.setSelected(true);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetaFormaPagoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonMostrarOcultarDetaFormaPagoActionPerformed(ActionEvent evt) throws Exception {   
		try {
			Boolean isVisible=this.jPanelParametrosReportesDetaFormaPago.isVisible();
			
			//BYDAN_BUSQUEDAS
			
			this.jTabbedPaneBusquedasDetaFormaPago.setVisible(!isVisible);			
			
			
			this.jPanelParametrosReportesDetaFormaPago.setVisible(!isVisible);
			this.jPanelPaginacionDetaFormaPago.setVisible(!isVisible);
			this.jPanelAccionesDetaFormaPago.setVisible(!isVisible);
							
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetaFormaPagoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarDetaFormaPagoActionPerformed(ActionEvent evt) throws Exception {   
		try {
			this.closingInternalFrameDetaFormaPago();
			
			//if(this.jInternalFrameParent==null) {
				//this.dispose();
			/*} else {
				this.setVisible(false);
	        	this.setSelected(false);	
			}*/			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetaFormaPagoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarReporteDinamicoDetaFormaPagoActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.cerrarFrameReporteDinamicoDetaFormaPago();
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetaFormaPagoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarImportacionDetaFormaPagoActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.cerrarFrameImportacionDetaFormaPago();
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetaFormaPagoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonAbrirTotalesDetaFormaPagoActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.abrirInicializarFrameTotalesDetaFormaPago();
			
			this.abrirFrameTotalesDetaFormaPago();
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetaFormaPagoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarTotalesDetaFormaPagoActionPerformed(ActionEvent evt) throws Exception {   
		try {
			this.cerrarFrameTotalesDetaFormaPago();
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetaFormaPagoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonAbrirOrderByDetaFormaPagoActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			
			this.abrirInicializarFrameOrderByDetaFormaPago();
			
			this.abrirFrameOrderByDetaFormaPago();
			
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetaFormaPagoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarOrderByDetaFormaPagoActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.cerrarFrameOrderByDetaFormaPago();
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetaFormaPagoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void abrirFrameDetalleDetaFormaPago(Boolean esRelaciones) throws Exception {	    	        
	    try {
			//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false
			//this.jDesktopPane.add(jInternalFrameDetalleFormDetaFormaPago);
			
			if(!esRelaciones) {
				if(this.jInternalFrameDetalleFormDetaFormaPago.isMaximum()) {
					this.jInternalFrameDetalleFormDetaFormaPago.setMaximum(false);
				}								
				
	    		this.jInternalFrameDetalleFormDetaFormaPago.setSize(this.jInternalFrameDetalleFormDetaFormaPago.iWidthFormulario,this.jInternalFrameDetalleFormDetaFormaPago.iHeightFormulario);
	    	} else {
				if(this.iWidthScroll<this.jInternalFrameDetalleFormDetaFormaPago.iWidthFormularioMaximo) {
	    			this.jInternalFrameDetalleFormDetaFormaPago.setSize(this.iWidthScroll,this.iHeightScroll);
				} else {
					if(!this.jInternalFrameDetalleFormDetaFormaPago.isMaximum()) {
						this.jInternalFrameDetalleFormDetaFormaPago.setMaximum(true);
					}
				}
				
				if(this.jInternalFrameDetalleFormDetaFormaPago.jContentPaneDetalleDetaFormaPago.getWidth() > this.getWidth()) {
					this.jInternalFrameDetalleFormDetaFormaPago.jTabbedPaneRelacionesDetaFormaPago.setMinimumSize(new Dimension(this.jInternalFrameDetalleFormDetaFormaPago.jContentPaneDetalleDetaFormaPago.getWidth(),DetaFormaPagoConstantesFunciones.ALTO_TABPANE_RELACIONES));
					this.jInternalFrameDetalleFormDetaFormaPago.jTabbedPaneRelacionesDetaFormaPago.setMaximumSize(new Dimension(this.jInternalFrameDetalleFormDetaFormaPago.jContentPaneDetalleDetaFormaPago.getWidth(),DetaFormaPagoConstantesFunciones.ALTO_TABPANE_RELACIONES));
					this.jInternalFrameDetalleFormDetaFormaPago.jTabbedPaneRelacionesDetaFormaPago.setPreferredSize(new Dimension(this.jInternalFrameDetalleFormDetaFormaPago.jContentPaneDetalleDetaFormaPago.getWidth(),DetaFormaPagoConstantesFunciones.ALTO_TABPANE_RELACIONES));
					
					Dimension dimension=new Dimension(); 
					
					

					if(BancoFormaPagoJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaBancoFormaPago();
					}
					
				}
	    	}
			
		
	       	this.jInternalFrameDetalleFormDetaFormaPago.setVisible(true);
	        this.jInternalFrameDetalleFormDetaFormaPago.setSelected(true);
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,DetaFormaPagoConstantesFunciones.CLASSNAME);
	    }
	}
	
	
	public void abrirInicializarFrameOrderByDetaFormaPago() throws Exception {	    	        
	    try {
			if(this.jInternalFrameOrderByDetaFormaPago==null) {
				
				if(!this.conCargarMinimo) {
					this.jInternalFrameOrderByDetaFormaPago=new OrderByJInternalFrame(STIPO_TAMANIO_GENERAL,this.jButtonAbrirOrderByDetaFormaPago,false,this);
				} else {
					this.jInternalFrameOrderByDetaFormaPago=new OrderByJInternalFrame(STIPO_TAMANIO_GENERAL,this.jButtonAbrirOrderByDetaFormaPago,true,this);
				}
				
				this.jDesktopPane.add(this.jInternalFrameOrderByDetaFormaPago);
				this.jInternalFrameOrderByDetaFormaPago.setVisible(false);
				this.jInternalFrameOrderByDetaFormaPago.setSelected(false);
				
				this.jInternalFrameOrderByDetaFormaPago.getjButtonCerrarOrderBy().addActionListener (new ButtonActionListener(this,"CerrarOrderByDetaFormaPago"));
				
				this.inicializarActualizarBindingTablaOrderByDetaFormaPago();
			}
		} catch (final Exception e) {
			
		}
	}
	
	
	
	public void abrirInicializarFrameImportacionDetaFormaPago() throws Exception {	    	        
	    try {
			if(this.jInternalFrameImportacionDetaFormaPago==null) {
				
				this.jInternalFrameImportacionDetaFormaPago=new ImportacionJInternalFrame(DetaFormaPagoConstantesFunciones.SCLASSWEBTITULO,this);			
				
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameImportacionDetaFormaPago);							
				
				this.jDesktopPane.add(this.jInternalFrameImportacionDetaFormaPago);
				this.jInternalFrameImportacionDetaFormaPago.setVisible(false);
				this.jInternalFrameImportacionDetaFormaPago.setSelected(false);


				this.jInternalFrameImportacionDetaFormaPago.getjButtonCerrarImportacion().addActionListener (new ButtonActionListener(this,"CerrarImportacionDetaFormaPago"));
				this.jInternalFrameImportacionDetaFormaPago.getjButtonGenerarImportacion().addActionListener (new ButtonActionListener(this,"GenerarImportacionDetaFormaPago"));
				this.jInternalFrameImportacionDetaFormaPago.getjButtonAbrirImportacion().addActionListener (new ButtonActionListener(this,"AbrirImportacionDetaFormaPago"));


			}
		} catch (final Exception e) {
			
		}
	}		
	
	
	
	public void abrirInicializarFrameReporteDinamicoDetaFormaPago() throws Exception {	    	        
	    try {
			
			if(this.jInternalFrameReporteDinamicoDetaFormaPago==null) {
				this.jInternalFrameReporteDinamicoDetaFormaPago=new ReporteDinamicoJInternalFrame(DetaFormaPagoConstantesFunciones.SCLASSWEBTITULO,this);	
				
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameReporteDinamicoDetaFormaPago);	
	
	
				this.jDesktopPane.add(this.jInternalFrameReporteDinamicoDetaFormaPago);
				this.jInternalFrameReporteDinamicoDetaFormaPago.setVisible(false);
				this.jInternalFrameReporteDinamicoDetaFormaPago.setSelected(false);
	
	
	
				this.jInternalFrameReporteDinamicoDetaFormaPago.getjButtonCerrarReporteDinamico().addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoDetaFormaPago"));
				this.jInternalFrameReporteDinamicoDetaFormaPago.getjButtonGenerarReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoDetaFormaPago"));
				this.jInternalFrameReporteDinamicoDetaFormaPago.getjButtonGenerarExcelReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoDetaFormaPago"));
	
				this.inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualDetaFormaPago();
			}

		} catch (final Exception e) {
			
		}
	}	
	
	
	public void abrirInicializarFrameTotalesDetaFormaPago() throws Exception {	    	        
	    try {			
			if(this.jInternalFrameTotalesDetaFormaPago==null) {
				this.jInternalFrameTotalesDetaFormaPago=new TotalesJInternalFrame(this.jButtonAbrirTotalesDetaFormaPago,STIPO_TAMANIO_GENERAL,this);
				
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameTotalesDetaFormaPago);

				//TOTALES
				this.jDesktopPane.add(this.jInternalFrameTotalesDetaFormaPago);
				this.jInternalFrameTotalesDetaFormaPago.setVisible(false);
				this.jInternalFrameTotalesDetaFormaPago.setSelected(false);


				this.jInternalFrameTotalesDetaFormaPago.getjButtonCerrarTotales().addActionListener (new ButtonActionListener(this,"CerrarTotalesDetaFormaPago"));
								
				this.inicializarActualizarBindingTablaTotalesDetaFormaPago();
				
				this.redimensionarTablaTotales();
			}			
		} catch (final Exception e) {
			
		}
	}	
	
		

	public void redimensionarTablaPanelRelacionadaBancoFormaPago() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoBeanSwingJInternalFrame.jScrollPanelDatosBancoFormaPago.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormDetaFormaPago.jContentPaneDetalleDetaFormaPago.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoBeanSwingJInternalFrame.jScrollPanelDatosBancoFormaPago.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoBeanSwingJInternalFrame.jScrollPanelDatosBancoFormaPago.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoBeanSwingJInternalFrame.jScrollPanelDatosBancoFormaPago.setPreferredSize(dimension);


	}
					
	public void cerrarFrameDetalleDetaFormaPago() throws Exception {	    	        
	    try {
			//this.jDesktopPane.add(jInternalFrameDetalleFormDetaFormaPago);
			
	       	this.jInternalFrameDetalleFormDetaFormaPago.setVisible(false);
	        this.jInternalFrameDetalleFormDetaFormaPago.setSelected(false);
			
			//this.jInternalFrameDetalleFormDetaFormaPago.dispose();
			//this.jInternalFrameDetalleFormDetaFormaPago=null;
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,DetaFormaPagoConstantesFunciones.CLASSNAME);
	    }
	}
	
	
	public void abrirFrameReporteDinamicoDetaFormaPago() throws Exception {	    	        
	    try {
			
			this.jInternalFrameReporteDinamicoDetaFormaPago.setVisible(true);
	        this.jInternalFrameReporteDinamicoDetaFormaPago.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,DetaFormaPagoConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void abrirFrameImportacionDetaFormaPago() throws Exception {	    	        		
	    try {			
			this.jInternalFrameImportacionDetaFormaPago.setVisible(true);
	        this.jInternalFrameImportacionDetaFormaPago.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,DetaFormaPagoConstantesFunciones.CLASSNAME);
	    }		
	}	
	
	
	public void abrirFrameTotalesDetaFormaPago() throws Exception {	    	        
	    try {
			this.jInternalFrameTotalesDetaFormaPago.setVisible(true);
	        this.jInternalFrameTotalesDetaFormaPago.setSelected(true);
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,DetaFormaPagoConstantesFunciones.CLASSNAME);
	    }
	}
	
	public void cerrarFrameTotalesDetaFormaPago() throws Exception {	    	        
	    try {
			this.jInternalFrameTotalesDetaFormaPago.setVisible(false);
	        this.jInternalFrameTotalesDetaFormaPago.setSelected(false);
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,DetaFormaPagoConstantesFunciones.CLASSNAME);
	    }
	}
	
	
	
	public void abrirFrameOrderByDetaFormaPago() throws Exception {	    	        		
	    try {
			this.jInternalFrameOrderByDetaFormaPago.setVisible(true);
	        this.jInternalFrameOrderByDetaFormaPago.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,DetaFormaPagoConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void cerrarFrameOrderByDetaFormaPago() throws Exception {	    	        		
	    try {			
			this.jInternalFrameOrderByDetaFormaPago.setVisible(false);
	        this.jInternalFrameOrderByDetaFormaPago.setSelected(false);			
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,DetaFormaPagoConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void cerrarFrameReporteDinamicoDetaFormaPago() throws Exception {			
	    try {
			this.jInternalFrameReporteDinamicoDetaFormaPago.setVisible(false);
	        this.jInternalFrameReporteDinamicoDetaFormaPago.setSelected(false);			
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,DetaFormaPagoConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void cerrarFrameImportacionDetaFormaPago() throws Exception {	    	        		
	    try {
			this.jInternalFrameImportacionDetaFormaPago.setVisible(false);
	        this.jInternalFrameImportacionDetaFormaPago.setSelected(false);
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,DetaFormaPagoConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	

				public void abrirFrameTreeCuentaContable(String sTipoProceso) { //throws Exception
					try {
						//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false
						//this.jDesktopPane.add(jInternalFrameTreeCuentaContable);
						CuentaContableBeanSwingJInternalFrame cuentacontableBeanSwingJInternalFrame=new CuentaContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
						cuentacontableBeanSwingJInternalFrame.setJInternalFrameParent(this);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setsTipoProceso(sTipoProceso);

						if(sTipoProceso.equals("BUSQUEDA_FK")) {
							cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.sTipoBusqueda="CuentaContable";
						}

						cuentacontableBeanSwingJInternalFrame.getTodosCuentaContableArbol();
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setCuentaContables(cuentacontableBeanSwingJInternalFrame.cuentacontablesArbol);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.CargarTreeCuentaContable();
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setVisible(true);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setSelected(true);

						//SE CAMBIA PARENT ORIGINAL PARA QUE RETORNE EN ESTE FORMULARIO
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.jInternalFrameParent=this;
						TitledBorder titledBorderDetaFormaPago=(TitledBorder)this.jScrollPanelDatosDetaFormaPago.getBorder();
						TitledBorder titledBorderCuentaContable=(TitledBorder)cuentacontableBeanSwingJInternalFrame.jScrollPanelDatosCuentaContable.getBorder();

						titledBorderCuentaContable.setTitle(titledBorderDetaFormaPago.getTitle() + " -> Cuenta Contable");


						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,cuentacontableBeanSwingJInternalFrame);
						}
						this.jDesktopPane.add(cuentacontableBeanSwingJInternalFrame);

					} catch (Exception e) {
						e.getStackTrace();
						//Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
					}
				}

				public void cerrarFrameTreeCuentaContable(CuentaContableBeanSwingJInternalFrame jInternalFrameTreeCuentaContable) throws Exception {
					try {
						//jDesktopPane.add(jInternalFrameTreeCuentaContable);
						jInternalFrameTreeCuentaContable.setVisible(false);
						jInternalFrameTreeCuentaContable.setSelected(false);
						//jInternalFrameTreeCuentaContable.dispose();
						//jInternalFrameTreeCuentaContable=null;
					} catch (final java.beans.PropertyVetoException e) {
						FuncionesSwing.manageException(this, e,logger);
					}
				}
	
	public void jButtonModificarDetaFormaPagoActionPerformed(ActionEvent evt) throws Exception {   
		try {
			this.modificarDetaFormaPago(evt,-1,false);
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetaFormaPagoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void modificarDetaFormaPago(ActionEvent evt,int rowIndex,Boolean esRelaciones) throws Exception {   
		try {
			int intSelectedRow = 0;	
			
			if(rowIndex>=0) {
				intSelectedRow=rowIndex;
			} else {
				intSelectedRow = this.jTableDatosDetaFormaPago.getSelectedRow();
			}
			
			this.habilitarDeshabilitarControlesDetaFormaPago(true);
			//this.isEsNuevoDetaFormaPago=false;
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detaformapago =(DetaFormaPago) this.detaformapagoLogic.getDetaFormaPagos().toArray()[this.jTableDatosDetaFormaPago.convertRowIndexToModel(intSelectedRow)];
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.detaformapago =(DetaFormaPago) this.detaformapagos.toArray()[this.jTableDatosDetaFormaPago.convertRowIndexToModel(intSelectedRow)];
			}
			//ARCHITECTURE
			
			this.actualizarEstadoCeldasBotonesDetaFormaPago("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesDetaFormaPago(false) ;
			
			if(detaformapagoSessionBean.getConGuardarRelaciones()) {
			

				if(this.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoBeanSwingJInternalFrame.bancoformapagoSessionBean.getEsGuardarRelacionado() && BancoFormaPagoJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonBancoFormaPagoActionPerformed(null,intSelectedRow,false,true,null);
				}
			}
			
			if(DetaFormaPagoJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetalleDetaFormaPago(esRelaciones);
			}
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualDetaFormaPago(false) ;
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetaFormaPagoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarFilaTablaDetaFormaPagoActual() { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL
			Integer intSelectedRow = this.jTableDatosDetaFormaPago.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detaformapago =(DetaFormaPago) this.detaformapagoLogic.getDetaFormaPagos().toArray()[this.jTableDatosDetaFormaPago.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.detaformapago =(DetaFormaPago) this.detaformapagos.toArray()[this.jTableDatosDetaFormaPago.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetaFormaPagoConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void seleccionarDetaFormaPago(ActionEvent evt,int rowIndex) throws Exception {   
		try {
			
			if(this.jInternalFrameDetalleFormDetaFormaPago==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			int intSelectedRow = 0;	
			
			if(rowIndex>=0) {
				intSelectedRow=rowIndex;
			} else {
				intSelectedRow = this.jTableDatosDetaFormaPago.getSelectedRow();
			}
			
			//this.habilitarDeshabilitarControlesDetaFormaPago(true);
			//this.isEsNuevoDetaFormaPago=false;
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detaformapago =(DetaFormaPago) this.detaformapagoLogic.getDetaFormaPagos().toArray()[this.jTableDatosDetaFormaPago.convertRowIndexToModel(intSelectedRow)];
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.detaformapago =(DetaFormaPago) this.detaformapagos.toArray()[this.jTableDatosDetaFormaPago.convertRowIndexToModel(intSelectedRow)];
			}
			//ARCHITECTURE
			
			this.jInternalFrameParent.setIdCombosCodigoDesdeBusquedaForeignKey(this.detaformapago.getId(),this.sTipoBusqueda);
			
			this.dispose();
			
			//this.actualizarEstadoCeldasBotonesDetaFormaPago("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
			//NO FUNCIONA BINDINGS
			/*
			this.inicializarActualizarBindingBotonesDetaFormaPago(false) ;
			
			if(DetaFormaPagoJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetalleDetaFormaPago(esRelaciones);
			}
			*/
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualDetaFormaPago(false) ;
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetaFormaPagoConstantesFunciones.CLASSNAME);
		}
	}		
	
	public void setIdCombosCodigoDesdeBusquedaForeignKey(Long id,String sType)throws Exception{
		
		try {
			
			if(sType.equals("Factura")) {
				if(!this.detaformapagoConstantesFunciones.cargarid_facturaDetaFormaPago) {
					this.cargarCombosFacturasForeignKeyLista(" where id="+id);
					//this.inicializarActualizarBindingDetaFormaPago(false,false);
					this.cargarCombosFrameFacturasForeignKey("Todos");
				}

				this.setCombosCodigoDesdeBusquedaid_factura (id);

				this.recargarComboTablaFactura(this.facturasForeignKey);

			}
			
			if(sType.equals("CuentaContable")) {
				if(!this.detaformapagoConstantesFunciones.cargarid_cuenta_contableDetaFormaPago) {
					this.cargarCombosCuentaContablesForeignKeyLista(" where id="+id);
					//this.inicializarActualizarBindingDetaFormaPago(false,false);
					this.cargarCombosFrameCuentaContablesForeignKey("Todos");
				}

				this.setCombosCodigoDesdeBusquedaid_cuenta_contable (id);

				this.recargarComboTablaCuentaContable(this.cuentacontablesForeignKey);

			}
		} catch(Exception e) {
			throw e;
		}
	}
	
					
	
	public void recargarComboTablaFactura(List<Factura> facturasForeignKey)throws Exception{
		TableColumn tableColumnFactura=this.jTableDatosDetaFormaPago.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetaFormaPago,DetaFormaPagoConstantesFunciones.LABEL_IDFACTURA));
		TableCellEditor tableCellEditorFactura =tableColumnFactura.getCellEditor();

		FacturaTableCell facturaTableCellFk=(FacturaTableCell)tableCellEditorFactura;

		if(facturaTableCellFk!=null) {
			facturaTableCellFk.setfacturasForeignKey(facturasForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosDetaFormaPago.getSelectedRow();

		//if(intSelectedRow<=0) {
			//facturaTableCellFk.setRowActual(intSelectedRow);
			//facturaTableCellFk.setfacturasForeignKeyActual(facturasForeignKey);
		//}


		if(facturaTableCellFk!=null) {
			facturaTableCellFk.RecargarFacturasForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaTipoFormaPago(List<TipoFormaPago> tipoformapagosForeignKey)throws Exception{
		TableColumn tableColumnTipoFormaPago=this.jTableDatosDetaFormaPago.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetaFormaPago,DetaFormaPagoConstantesFunciones.LABEL_IDTIPOFORMAPAGO));
		TableCellEditor tableCellEditorTipoFormaPago =tableColumnTipoFormaPago.getCellEditor();

		TipoFormaPagoTableCell tipoformapagoTableCellFk=(TipoFormaPagoTableCell)tableCellEditorTipoFormaPago;

		if(tipoformapagoTableCellFk!=null) {
			tipoformapagoTableCellFk.settipoformapagosForeignKey(tipoformapagosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosDetaFormaPago.getSelectedRow();

		//if(intSelectedRow<=0) {
			//tipoformapagoTableCellFk.setRowActual(intSelectedRow);
			//tipoformapagoTableCellFk.settipoformapagosForeignKeyActual(tipoformapagosForeignKey);
		//}


		if(tipoformapagoTableCellFk!=null) {
			tipoformapagoTableCellFk.RecargarTipoFormaPagosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaTipoDetaFormaPago(List<TipoDetaFormaPago> tipodetaformapagosForeignKey)throws Exception{
		TableColumn tableColumnTipoDetaFormaPago=this.jTableDatosDetaFormaPago.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetaFormaPago,DetaFormaPagoConstantesFunciones.LABEL_IDTIPODETAFORMAPAGO));
		TableCellEditor tableCellEditorTipoDetaFormaPago =tableColumnTipoDetaFormaPago.getCellEditor();

		TipoDetaFormaPagoTableCell tipodetaformapagoTableCellFk=(TipoDetaFormaPagoTableCell)tableCellEditorTipoDetaFormaPago;

		if(tipodetaformapagoTableCellFk!=null) {
			tipodetaformapagoTableCellFk.settipodetaformapagosForeignKey(tipodetaformapagosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosDetaFormaPago.getSelectedRow();

		//if(intSelectedRow<=0) {
			//tipodetaformapagoTableCellFk.setRowActual(intSelectedRow);
			//tipodetaformapagoTableCellFk.settipodetaformapagosForeignKeyActual(tipodetaformapagosForeignKey);
		//}


		if(tipodetaformapagoTableCellFk!=null) {
			tipodetaformapagoTableCellFk.RecargarTipoDetaFormaPagosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaDetaFormaPagoFactu(List<DetaFormaPagoFactu> detaformapagofactusForeignKey)throws Exception{
		TableColumn tableColumnDetaFormaPagoFactu=this.jTableDatosDetaFormaPago.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetaFormaPago,DetaFormaPagoConstantesFunciones.LABEL_IDDETAFORMAPAGOFACTU));
		TableCellEditor tableCellEditorDetaFormaPagoFactu =tableColumnDetaFormaPagoFactu.getCellEditor();

		DetaFormaPagoFactuTableCell detaformapagofactuTableCellFk=(DetaFormaPagoFactuTableCell)tableCellEditorDetaFormaPagoFactu;

		if(detaformapagofactuTableCellFk!=null) {
			detaformapagofactuTableCellFk.setdetaformapagofactusForeignKey(detaformapagofactusForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosDetaFormaPago.getSelectedRow();

		//if(intSelectedRow<=0) {
			//detaformapagofactuTableCellFk.setRowActual(intSelectedRow);
			//detaformapagofactuTableCellFk.setdetaformapagofactusForeignKeyActual(detaformapagofactusForeignKey);
		//}


		if(detaformapagofactuTableCellFk!=null) {
			detaformapagofactuTableCellFk.RecargarDetaFormaPagoFactusForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaCuentaContable(List<CuentaContable> cuentacontablesForeignKey)throws Exception{
		TableColumn tableColumnCuentaContable=this.jTableDatosDetaFormaPago.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetaFormaPago,DetaFormaPagoConstantesFunciones.LABEL_IDCUENTACONTABLE));
		TableCellEditor tableCellEditorCuentaContable =tableColumnCuentaContable.getCellEditor();

		CuentaContableTableCell cuentacontableTableCellFk=(CuentaContableTableCell)tableCellEditorCuentaContable;

		if(cuentacontableTableCellFk!=null) {
			cuentacontableTableCellFk.setcuentacontablesForeignKey(cuentacontablesForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosDetaFormaPago.getSelectedRow();

		//if(intSelectedRow<=0) {
			//cuentacontableTableCellFk.setRowActual(intSelectedRow);
			//cuentacontableTableCellFk.setcuentacontablesForeignKeyActual(cuentacontablesForeignKey);
		//}


		if(cuentacontableTableCellFk!=null) {
			cuentacontableTableCellFk.RecargarCuentaContablesForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaTipoRetencion(List<TipoRetencion> tiporetencionsForeignKey)throws Exception{
		TableColumn tableColumnTipoRetencion=this.jTableDatosDetaFormaPago.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetaFormaPago,DetaFormaPagoConstantesFunciones.LABEL_IDTIPORETENCION));
		TableCellEditor tableCellEditorTipoRetencion =tableColumnTipoRetencion.getCellEditor();

		TipoRetencionTableCell tiporetencionTableCellFk=(TipoRetencionTableCell)tableCellEditorTipoRetencion;

		if(tiporetencionTableCellFk!=null) {
			tiporetencionTableCellFk.settiporetencionsForeignKey(tiporetencionsForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosDetaFormaPago.getSelectedRow();

		//if(intSelectedRow<=0) {
			//tiporetencionTableCellFk.setRowActual(intSelectedRow);
			//tiporetencionTableCellFk.settiporetencionsForeignKeyActual(tiporetencionsForeignKey);
		//}


		if(tiporetencionTableCellFk!=null) {
			tiporetencionTableCellFk.RecargarTipoRetencionsForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaAnio(List<Anio> aniosForeignKey)throws Exception{
		TableColumn tableColumnAnio=this.jTableDatosDetaFormaPago.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetaFormaPago,DetaFormaPagoConstantesFunciones.LABEL_IDANIO));
		TableCellEditor tableCellEditorAnio =tableColumnAnio.getCellEditor();

		AnioTableCell anioTableCellFk=(AnioTableCell)tableCellEditorAnio;

		if(anioTableCellFk!=null) {
			anioTableCellFk.setaniosForeignKey(aniosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosDetaFormaPago.getSelectedRow();

		//if(intSelectedRow<=0) {
			//anioTableCellFk.setRowActual(intSelectedRow);
			//anioTableCellFk.setaniosForeignKeyActual(aniosForeignKey);
		//}


		if(anioTableCellFk!=null) {
			anioTableCellFk.RecargarAniosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaMes(List<Mes> messForeignKey)throws Exception{
		TableColumn tableColumnMes=this.jTableDatosDetaFormaPago.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetaFormaPago,DetaFormaPagoConstantesFunciones.LABEL_IDMES));
		TableCellEditor tableCellEditorMes =tableColumnMes.getCellEditor();

		MesTableCell mesTableCellFk=(MesTableCell)tableCellEditorMes;

		if(mesTableCellFk!=null) {
			mesTableCellFk.setmessForeignKey(messForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosDetaFormaPago.getSelectedRow();

		//if(intSelectedRow<=0) {
			//mesTableCellFk.setRowActual(intSelectedRow);
			//mesTableCellFk.setmessForeignKeyActual(messForeignKey);
		//}


		if(mesTableCellFk!=null) {
			mesTableCellFk.RecargarMessForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	

	public void setCombosCodigoDesdeBusquedaid_factura (Long id) throws Exception {
		this.setActualFacturaForeignKey(id,true,"Todos");

	};
	

	public void setCombosCodigoDesdeBusquedaid_cuenta_contable (Long id) throws Exception {
		this.setActualCuentaContableForeignKey(id,true,"Todos");

	};
	
	public void jButtonActualizarDetaFormaPagoActionPerformed(ActionEvent evt) throws Exception {   
		try	{
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detaformapagoLogic.getNewConnexionToDeep("");
			}
			
			this.inicializarActualizarBindingParametrosReportesDetaFormaPago(false);
			
			//if(!this.isEsNuevoDetaFormaPago) {								
				int intSelectedRow = this.jTableDatosDetaFormaPago.getSelectedRow();	
				
				//SE PIEDE INDICE SELECTED CON FILA TOTALES, ASEGURARSE QUE OBJETO ACTUAL ESTE EN FORMULARIO
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detaformapago =(DetaFormaPago) this.detaformapagoLogic.getDetaFormaPagos().toArray()[this.jTableDatosDetaFormaPago.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detaformapago =(DetaFormaPago) this.detaformapagos.toArray()[this.jTableDatosDetaFormaPago.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
			//}
				
			if(DetaFormaPagoJInternalFrame.ISBINDING_MANUAL_TABLA) {
				this.setVariablesFormularioToObjetoActualDetaFormaPago(this.detaformapago,true);
				this.setVariablesFormularioToObjetoActualForeignKeysDetaFormaPago(this.detaformapago);
				
			}
			
			if(this.permiteMantenimiento(this.detaformapago)) {	
				this.actualizar();
				
				if(!this.isGuardarCambiosEnLote && !this.detaformapagoSessionBean.getEsGuardarRelacionado()) {
					this.procesarBusqueda(sAccionBusqueda);
					
					this.isEsNuevoDetaFormaPago=true;
					this.inicializarActualizarBindingTablaDetaFormaPago(false);
					this.isEsNuevoDetaFormaPago=false;
				
				} else {					
					
					//PARA RELACIONADO ACTUALIZAR FILA TOTALES
					this.isEsNuevoDetaFormaPago=true;
					this.procesoActualizarFilaTotales(false,"MANTENIMIENTO");
					this.isEsNuevoDetaFormaPago=false;
				}
						
								
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingBotonesDetaFormaPago(false);
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualDetaFormaPago(false);
				
				this.habilitarDeshabilitarControlesDetaFormaPago(false);
			
												
				
				if(DetaFormaPagoJInternalFrame.CON_DATOS_FRAME) {
					if(!this.isPostAccionSinCerrar) {
						this.cerrarFrameDetalleDetaFormaPago();
					}
				}
				
				if(this.isPostAccionNuevo) {
					this.jButtonNuevoDetaFormaPagoActionPerformed(evt,detaformapagoSessionBean.getConGuardarRelaciones());
				} else {
					if(this.isPostAccionSinCerrar) {
						Integer intSelectedRowActual=this.getIndiceActualDetaFormaPago(this.detaformapago,intSelectedRow);
						
						if(intSelectedRow>-1) {
							this.jTableDatosDetaFormaPago.setRowSelectionInterval(intSelectedRowActual, intSelectedRowActual);
							this.jButtonIdActionPerformed(evt,intSelectedRowActual,detaformapagoSessionBean.getConGuardarRelaciones(),false);
						}
					}
				}
				
				this.cancelar(false);
				
			} else {
				JOptionPane.showMessageDialog(this,"ESTE REGISTRO NO PUEDE ACTUALIZARSE","EDITAR",JOptionPane.ERROR_MESSAGE);
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detaformapagoLogic.commitNewConnexionToDeep();
			}
			
			
			if(this.jInternalFrameParent!=null) { //&& this.isEsMantenimientoRelacionado) {
				Boolean esUsoDesdeHijoLocal=true;
				String sTipo="Formulario";
				Boolean conIrServidorAplicacionParent=false;
				Long id=this.detaformapago.getId();
				ArrayList<String> arrClasses=new ArrayList<String>();
				
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();
				
				generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
				generalEntityParameterGeneral.setsDominio("Formulario");
				generalEntityParameterGeneral.setsDominioTipo(DetaFormaPago.class.getName());
				
				this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",DetaFormaPago.class.getName(),sTipo,"FORMULARIO",esControlTabla,conIrServidorAplicacionParent,
					id,this, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.FORM,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
					evt,generalEntityParameterGeneral,this);
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detaformapagoLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,DetaFormaPagoConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detaformapagoLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonEliminarDetaFormaPagoActionPerformed(ActionEvent evt) throws Exception {   
		try	{
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detaformapagoLogic.getNewConnexionToDeep("");
			}
			
			int intSelectedRow = this.jTableDatosDetaFormaPago.getSelectedRow();	       
							
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detaformapago =(DetaFormaPago) this.detaformapagoLogic.getDetaFormaPagos().toArray()[this.jTableDatosDetaFormaPago.convertRowIndexToModel(intSelectedRow)];
				this.detaformapago.setIsDeleted(true);
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.detaformapago =(DetaFormaPago) this.detaformapagos.toArray()[this.jTableDatosDetaFormaPago.convertRowIndexToModel(intSelectedRow)];
				this.detaformapago.setIsDeleted(true);
			}
			//ARCHITECTURE
			
			if(this.permiteMantenimiento(this.detaformapago)) {
				this.eliminar();
				
				if(!this.isGuardarCambiosEnLote && !this.detaformapagoSessionBean.getEsGuardarRelacionado()) {
					this.procesarBusqueda(sAccionBusqueda);
				}
				
				((DetaFormaPagoModel) this.jTableDatosDetaFormaPago.getModel()).fireTableRowsDeleted(intSelectedRow,intSelectedRow);
				
				this.isEsNuevoDetaFormaPago=true;
				this.inicializarActualizarBindingTablaDetaFormaPago(false);
				this.isEsNuevoDetaFormaPago=false;									
					
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingBotonesDetaFormaPago(false);
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualDetaFormaPago(false);
				
				this.habilitarDeshabilitarControlesDetaFormaPago(false);
				
				
				
				if(DetaFormaPagoJInternalFrame.CON_DATOS_FRAME) {
					this.cerrarFrameDetalleDetaFormaPago();
				}
			} else {
				JOptionPane.showMessageDialog(this,"ESTE REGISTRO NO PUEDE ACTUALIZARSE","EDITAR",JOptionPane.ERROR_MESSAGE);
			}	
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detaformapagoLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detaformapagoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetaFormaPagoConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detaformapagoLogic.closeNewConnexionToDeep();
			}
		}		
	}
		
	public void jButtonCancelarDetaFormaPagoActionPerformed(ActionEvent evt) throws Exception {                                         	   	       
	  	try {
			if(jTableDatosDetaFormaPago.getRowCount()>=1) {
				jTableDatosDetaFormaPago.removeRowSelectionInterval(0, jTableDatosDetaFormaPago.getRowCount()-1);						
			}
						
			this.invalidValues=new InvalidValue[0];
			this.habilitarDeshabilitarControlesDetaFormaPago(false);
			this.cancelar(true);			
			this.inicializarActualizarBindingTablaDetaFormaPago(false);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesDetaFormaPago(false) ;
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualDetaFormaPago(false) ;
			
			this.isEsNuevoDetaFormaPago=false;
			
			if(DetaFormaPagoJInternalFrame.CON_DATOS_FRAME) {
				this.cerrarFrameDetalleDetaFormaPago();
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetaFormaPagoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonGuardarCambiosDetaFormaPagoActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detaformapagoLogic.getNewConnexionToDeep("");
			}
			
			//this.estaModoGuardarCambios=true;
			
	    	this.guardarCambios();
			
			if(!this.isErrorGuardar) {
				this.procesarBusqueda(this.sAccionBusqueda);
				
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingDetaFormaPago(false);
				
				//SI ES MANUAL
				if(DetaFormaPagoJInternalFrame.ISBINDING_MANUAL) {				
					//this.inicializarActualizarBindingManualDetaFormaPago();				
				}
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detaformapagoLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detaformapagoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetaFormaPagoConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detaformapagoLogic.closeNewConnexionToDeep();
			}
			
			//this.estaModoGuardarCambios=false;
		}
	}
	
	public void jButtonNuevoGuardarCambiosDetaFormaPagoActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			
			this.estaModoNuevo=true;
			this.estaModoNuevoGuardarCambios=true;
			
			//LO HACE NUEVOPREPARAR
			//this.iIdNuevoDetaFormaPago--;			
			//DetaFormaPago detaformapagoAux= new DetaFormaPago();			
			//detaformapagoAux.setId(this.iIdNuevoDetaFormaPago);
			
			if(this.jInternalFrameDetalleFormDetaFormaPago==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			this.aumentarTamanioFilaNuevaTablaDetaFormaPago();
			
			if(this.conTotales) {
				this.quitarFilaTotales();
			}
			
			this.nuevoPreparar(true);
			
			this.setVariablesFormularioToObjetoActualForeignKeysDetaFormaPago(this.detaformapago);
			
			this.detaformapago.setsType("NUEVO_GUARDAR_CAMBIOS");
			
			//LO HACE NUEVOPREPARAR
			/*
			if(Constantes.ISUSAEJBLOGICLAYER) {				
				this.detaformapagoLogic.getDetaFormaPagos().add(this.detaformapagoAux);
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				this.detaformapagos.add(this.detaformapagoAux);				
			}
			*/
			
			this.inicializarActualizarBindingTablaDetaFormaPago(false);
			
			this.jTableDatosDetaFormaPago.setRowSelectionInterval(this.getIndiceNuevoDetaFormaPago(), this.getIndiceNuevoDetaFormaPago());
			
			int iLastRow =  this.jTableDatosDetaFormaPago.getRowCount () - 1;
			Rectangle rectangle = this.jTableDatosDetaFormaPago.getCellRect(iLastRow, 0, true);
			
			this.jTableDatosDetaFormaPago.scrollRectToVisible(rectangle);
			
			//FILA TOTALES
			if(this.conTotales) {
				this.crearFilaTotales();
				
				this.inicializarActualizarBindingTablaDetaFormaPago(false);
			}

		} catch(Exception e) {									
			FuncionesSwing.manageException(this, e,logger,DetaFormaPagoConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoNuevo=false;
			this.estaModoNuevoGuardarCambios=false;
		}
	}		
	
	public void jButtonRecargarInformacionDetaFormaPagoActionPerformed(ActionEvent evt) throws Exception {    		
		try {
			this.iNumeroPaginacionPagina=0;
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detaformapagoLogic.getNewConnexionToDeep("");
			}
			
			this.inicializarActualizarBindingDetaFormaPago(false,false);
			
	    	this.recargarInformacion();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingDetaFormaPago(false);
			
			//SI ES MANUAL
			if(DetaFormaPagoJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualDetaFormaPago();
			}
			
			//this.abrirFrameTreeDetaFormaPago();
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detaformapagoLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detaformapagoLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,DetaFormaPagoConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detaformapagoLogic.closeNewConnexionToDeep();
			}
		}	
	}
	
	
	public void jButtonGenerarImportacionDetaFormaPagoActionPerformed(ActionEvent evt) throws Exception {    				
		BufferedReader bufferedReader = null;
		String sXmlStringFile="";
		String sPath="";
		this.arrDatoGeneralMinimos= new  ArrayList<DatoGeneralMinimo>();
		DatoGeneralMinimo datoGeneralMinimo=new DatoGeneralMinimo();
		String sLine="";
		
		try {			
			if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE PROCESAR IMPORTACION DE Deta Forma PagoS ?", "MANTENIMIENTO DE Deta Forma Pago", JOptionPane.OK_CANCEL_OPTION) == 0) {
				bufferedReader = new BufferedReader(new FileReader(this.jInternalFrameImportacionDetaFormaPago.getFileImportacion().getAbsolutePath()));
								
				while ((sLine = bufferedReader.readLine()) != null) {
					datoGeneralMinimo=new DatoGeneralMinimo();
					datoGeneralMinimo.setsDescripcion(sLine);
					
					this.arrDatoGeneralMinimos.add(datoGeneralMinimo);
				}
				
				this.actualizarParametrosGeneralDetaFormaPago();
						
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {						
					this.detaformapagoReturnGeneral=detaformapagoLogic.procesarImportacionDetaFormaPagosWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this.arrDatoGeneralMinimos,this.detaformapagoParameterGeneral);
						
				} else if(Constantes.ISUSAEJBREMOTE) {
						
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
						
				this.procesarDetaFormaPagoReturnGeneral();
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetaFormaPagoConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedReader != null) {
				bufferedReader.close();
			}	
		}				
	}
	
	
	
	public void jButtonAbrirImportacionDetaFormaPagoActionPerformed(ActionEvent evt) throws Exception {    				
		BufferedWriter bufferedWriter = null;
		String sXmlStringFile="";
		String sPath="";
		
		try {
			int iReturnArchivo = this.jInternalFrameImportacionDetaFormaPago.getjFileChooserImportacion().showOpenDialog(this);
 
            if (iReturnArchivo == JFileChooser.APPROVE_OPTION) {
            	this.jInternalFrameImportacionDetaFormaPago.setFileImportacion(this.jInternalFrameImportacionDetaFormaPago.getjFileChooserImportacion().getSelectedFile());
            	
				this.jInternalFrameImportacionDetaFormaPago.getjTextFieldPathArchivoImportacion().setText(this.jInternalFrameImportacionDetaFormaPago.getFileImportacion().getName());
				
				//System.out.println("ARCHIVO ESCOGIDO: "+this.fileImportacionDetaFormaPago.getName());
				
            } else {
                //System.out.println("CANCELAR SELECCION");
				this.jInternalFrameImportacionDetaFormaPago.getjTextFieldPathArchivoImportacion().setText("SELECCION CANCELADA");
            }			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetaFormaPagoConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedWriter != null) {
				bufferedWriter.close();
			}	
		}		
	}
	
	
	public void jButtonGenerarReporteDinamicoDetaFormaPagoActionPerformed(ActionEvent evt) throws Exception {    		
		BufferedWriter bufferedWriter = null;
		String sXmlStringFile="";
		String sPath="";
		
		try {	
		
		ArrayList<DetaFormaPago> detaformapagosSeleccionados=new ArrayList<DetaFormaPago>();		

		detaformapagosSeleccionados=this.getDetaFormaPagosSeleccionados(true);
		
		
		this.sTipoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoDetaFormaPago.getjComboBoxTiposReportesDinamico().getSelectedItem()).getsCodigo();
		
		this.sTipoArchivoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoDetaFormaPago.getjComboBoxTiposArchivosReportesDinamico().getSelectedItem()).getsCodigo();			
		
		
		this.sTipoArchivoReporte=this.sTipoArchivoReporteDinamico;
		
		//this.sTipoReporteExtra="Base";
		
			InputStream reportFile=null;
			InputStream imageFile=null;
			
			imageFile=AuxiliarImagenes.class.getResourceAsStream("LogoReporte.jpg");			
				
		
		
			reportFile = AuxiliarReportes.class.getResourceAsStream("DetaFormaPagoBaseDesign.jrxml");	
			
			sPath=this.parametroGeneralUsuario.getpath_exportar()+"DetaFormaPagoBaseDesign.jrxml";
			
			sXmlStringFile=Funciones2.getStringFromInputStream(reportFile);
						
			bufferedWriter = new BufferedWriter(new FileWriter(sPath));
			
			
			sXmlStringFile=this.actualizarReporteDinamico(sXmlStringFile);
			
			
			bufferedWriter.write(sXmlStringFile);
			
			bufferedWriter.close();
			
			try{JasperCompileManager.compileReportToFile(sPath);}catch(Exception e){e.printStackTrace();}
			
			this.actualizarVariablesTipoReporte(false,true,false,sPath);
			
			/*
			this.esReporteDinamico=true;
			this.sPathReporteDinamico=sPath.replace(".jrxml",".jasper");
			this.sTipoReporteExtra="";
			*/
			
			this.generarReporteDetaFormaPagos("Todos",detaformapagosSeleccionados );

			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.detaformapagoSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				//DEBE APARECER EL REPORTE DIRECTAMENTE
				//JOptionPane.showMessageDialog(this,"GENERADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Deta Forma Pago",JOptionPane.INFORMATION_MESSAGE);
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetaFormaPagoConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedWriter != null) {
				bufferedWriter.close();
			}	
		}
	}		
	
	
	public String actualizarReporteDinamico(String sXmlStringFile) {				
		Reporte reporte=new Reporte();
		Integer iAnchoMaximoVertical=535;//781,782
		Integer iAnchoMaximoHorizontal=782;
		Integer iAnchoSum=0;
		Integer iAnchoColumna=0;
		
		Integer iAnchoMargenes=60;
		String sWidthGrafico="535";
		
		for(int index:this.jInternalFrameReporteDinamicoDetaFormaPago.getjListColumnasSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoDetaFormaPago.getjListColumnasSelectReporte().getModel().getElementAt(index);
			
			switch(reporte.getsCodigo()) {
				
				case DetaFormaPagoConstantesFunciones.LABEL_IDEMPRESA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Empresa_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Empresa_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Empresa_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Empresa_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetaFormaPagoConstantesFunciones.LABEL_IDSUCURSAL:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Sucursal_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Sucursal_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Sucursal_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Sucursal_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetaFormaPagoConstantesFunciones.LABEL_IDEJERCICIO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Ejercicio_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Ejercicio_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Ejercicio_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Ejercicio_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetaFormaPagoConstantesFunciones.LABEL_IDPERIODO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Periodo_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Periodo_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Periodo_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Periodo_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetaFormaPagoConstantesFunciones.LABEL_IDFACTURA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Factura_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Factura_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Factura_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Factura_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetaFormaPagoConstantesFunciones.LABEL_IDTIPOFORMAPAGO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_TipoFormaPago_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_TipoFormaPago_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_TipoFormaPago_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_TipoFormaPago_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetaFormaPagoConstantesFunciones.LABEL_IDTIPODETAFORMAPAGO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_TipoDetaFormaPago_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_TipoDetaFormaPago_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_TipoDetaFormaPago_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_TipoDetaFormaPago_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetaFormaPagoConstantesFunciones.LABEL_IDDETAFORMAPAGOFACTU:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_DetaFormaPagoFactu_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_DetaFormaPagoFactu_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_DetaFormaPagoFactu_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_DetaFormaPagoFactu_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetaFormaPagoConstantesFunciones.LABEL_IDCUENTACONTABLE:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_CuentaContable_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_CuentaContable_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_CuentaContable_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_CuentaContable_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetaFormaPagoConstantesFunciones.LABEL_IDTIPORETENCION:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_TipoRetencion_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_TipoRetencion_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_TipoRetencion_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_TipoRetencion_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetaFormaPagoConstantesFunciones.LABEL_VALOR:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_lor_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_lor_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_lor_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_lor_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetaFormaPagoConstantesFunciones.LABEL_FECHAINICIAL:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_chaInicial_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_chaInicial_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_chaInicial_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_chaInicial_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetaFormaPagoConstantesFunciones.LABEL_FECHAFINAL:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_chaFinal_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_chaFinal_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_chaFinal_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_chaFinal_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetaFormaPagoConstantesFunciones.LABEL_PORCENTAJE:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_rcentaje_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_rcentaje_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_rcentaje_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_rcentaje_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetaFormaPagoConstantesFunciones.LABEL_RETENCION:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_tencion_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_tencion_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_tencion_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_tencion_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetaFormaPagoConstantesFunciones.LABEL_PORCENTAJERETENCION:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_rcentajeRetencion_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_rcentajeRetencion_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_rcentajeRetencion_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_rcentajeRetencion_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetaFormaPagoConstantesFunciones.LABEL_BASERETENCION:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_seRetencion_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_seRetencion_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_seRetencion_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_seRetencion_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetaFormaPagoConstantesFunciones.LABEL_VALORRETENCION:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_lorRetencion_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_lorRetencion_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_lorRetencion_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_lorRetencion_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetaFormaPagoConstantesFunciones.LABEL_NUMERORETENCION:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_meroRetencion_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_meroRetencion_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_meroRetencion_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_meroRetencion_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetaFormaPagoConstantesFunciones.LABEL_NUMERODIAS:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_meroDias_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_meroDias_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_meroDias_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_meroDias_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetaFormaPagoConstantesFunciones.LABEL_NUMEROCUOTA:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_meroCuota_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_meroCuota_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_meroCuota_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_meroCuota_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetaFormaPagoConstantesFunciones.LABEL_DESCRIPCION:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_scripcion_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_scripcion_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_scripcion_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_scripcion_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetaFormaPagoConstantesFunciones.LABEL_IDANIO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Anio_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Anio_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Anio_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Anio_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetaFormaPagoConstantesFunciones.LABEL_IDMES:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Mes_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Mes_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Mes_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Mes_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;
					
				default :
					break;
			}
		}
		
		iAnchoSum+=iAnchoMargenes;
		
		if(iAnchoSum>iAnchoMaximoVertical) {
			sXmlStringFile=sXmlStringFile.replace("595", "842");
			//sXmlStringFile=sXmlStringFile.replace("842", "595");
			sXmlStringFile=sXmlStringFile.replace("535", "782");
			sXmlStringFile=sXmlStringFile.replace("Portrait", "Landscape");			
			sWidthGrafico="782";
		
		} else {
			sXmlStringFile=sXmlStringFile.replace("842", "595");
			//sXmlStringFile=sXmlStringFile.replace("595", "842");
			sXmlStringFile=sXmlStringFile.replace("782", "535");
			sXmlStringFile=sXmlStringFile.replace("Landscape", "Portrait");
			sWidthGrafico="535";
		}
		
		if(this.jInternalFrameReporteDinamicoDetaFormaPago.getjCheckBoxConGraficoDinamico().isSelected()) {
			sXmlStringFile=this.actualizarGraficoReporteDinamico(sXmlStringFile,sWidthGrafico);
		} else {
			sXmlStringFile=sXmlStringFile.replace("colancho_summary_colancho", "30");
		}
		
		return sXmlStringFile;
	}
	
	
	
	public String actualizarGraficoReporteDinamico(String sXmlStringFile,String sWidthGrafico) {		
		String strGrafico="";		
		String sTipo="NORMAL";
		String strCategorySeries="";
		String sNombreCampoCategoria="";
		String sNombreCampoCategoriaValor="";
		Reporte reporte=new Reporte();
		Reporte reporteCategoriaValor=new Reporte();
		Reporte reporteTipoGraficoReporte=new Reporte();
		Boolean existe=false;
		
		sXmlStringFile=sXmlStringFile.replace("colancho_summary_colancho", "280");
		
		//CATEGORIA GRAFICO				
		reporte=((Reporte)this.jInternalFrameReporteDinamicoDetaFormaPago.getjComboBoxColumnaCategoriaGrafico().getSelectedItem());
				
		//TIPO GRAFICO REPORTE
		reporteTipoGraficoReporte=((Reporte)this.jInternalFrameReporteDinamicoDetaFormaPago.getjComboBoxTiposGraficosReportesDinamico().getSelectedItem());
		
		String sTipoGraficoReporte=reporteTipoGraficoReporte.getsCodigo();
		
		switch(reporte.getsCodigo()) {
			
				case DetaFormaPagoConstantesFunciones.LABEL_IDEMPRESA:
					sNombreCampoCategoria="id_empresa";
					break;

				case DetaFormaPagoConstantesFunciones.LABEL_IDSUCURSAL:
					sNombreCampoCategoria="id_sucursal";
					break;

				case DetaFormaPagoConstantesFunciones.LABEL_IDEJERCICIO:
					sNombreCampoCategoria="id_ejercicio";
					break;

				case DetaFormaPagoConstantesFunciones.LABEL_IDPERIODO:
					sNombreCampoCategoria="id_periodo";
					break;

				case DetaFormaPagoConstantesFunciones.LABEL_IDFACTURA:
					sNombreCampoCategoria="id_factura";
					break;

				case DetaFormaPagoConstantesFunciones.LABEL_IDTIPOFORMAPAGO:
					sNombreCampoCategoria="id_tipo_forma_pago";
					break;

				case DetaFormaPagoConstantesFunciones.LABEL_IDTIPODETAFORMAPAGO:
					sNombreCampoCategoria="id_tipo_deta_forma_pago";
					break;

				case DetaFormaPagoConstantesFunciones.LABEL_IDDETAFORMAPAGOFACTU:
					sNombreCampoCategoria="id_deta_forma_pago_factu";
					break;

				case DetaFormaPagoConstantesFunciones.LABEL_IDCUENTACONTABLE:
					sNombreCampoCategoria="id_cuenta_contable";
					break;

				case DetaFormaPagoConstantesFunciones.LABEL_IDTIPORETENCION:
					sNombreCampoCategoria="id_tipo_retencion";
					break;

				case DetaFormaPagoConstantesFunciones.LABEL_VALOR:
					sNombreCampoCategoria="valor";
					break;

				case DetaFormaPagoConstantesFunciones.LABEL_FECHAINICIAL:
					sNombreCampoCategoria="fecha_inicial";
					break;

				case DetaFormaPagoConstantesFunciones.LABEL_FECHAFINAL:
					sNombreCampoCategoria="fecha_final";
					break;

				case DetaFormaPagoConstantesFunciones.LABEL_PORCENTAJE:
					sNombreCampoCategoria="porcentaje";
					break;

				case DetaFormaPagoConstantesFunciones.LABEL_RETENCION:
					sNombreCampoCategoria="retencion";
					break;

				case DetaFormaPagoConstantesFunciones.LABEL_PORCENTAJERETENCION:
					sNombreCampoCategoria="porcentaje_retencion";
					break;

				case DetaFormaPagoConstantesFunciones.LABEL_BASERETENCION:
					sNombreCampoCategoria="base_retencion";
					break;

				case DetaFormaPagoConstantesFunciones.LABEL_VALORRETENCION:
					sNombreCampoCategoria="valor_retencion";
					break;

				case DetaFormaPagoConstantesFunciones.LABEL_NUMERORETENCION:
					sNombreCampoCategoria="numero_retencion";
					break;

				case DetaFormaPagoConstantesFunciones.LABEL_NUMERODIAS:
					sNombreCampoCategoria="numero_dias";
					break;

				case DetaFormaPagoConstantesFunciones.LABEL_NUMEROCUOTA:
					sNombreCampoCategoria="numero_cuota";
					break;

				case DetaFormaPagoConstantesFunciones.LABEL_DESCRIPCION:
					sNombreCampoCategoria="descripcion";
					break;

				case DetaFormaPagoConstantesFunciones.LABEL_IDANIO:
					sNombreCampoCategoria="id_anio";
					break;

				case DetaFormaPagoConstantesFunciones.LABEL_IDMES:
					sNombreCampoCategoria="id_mes";
					break;
					
			default :
				break;
		}		
		//CATEGORIA GRAFICO
		
		//CATEGORIA VALOR				
		reporteCategoriaValor=((Reporte)this.jInternalFrameReporteDinamicoDetaFormaPago.getjComboBoxColumnaCategoriaValor().getSelectedItem());
		
		switch(reporteCategoriaValor.getsCodigo()) {
			
				case DetaFormaPagoConstantesFunciones.LABEL_IDEMPRESA:
					sNombreCampoCategoriaValor="id_empresa";
					break;

				case DetaFormaPagoConstantesFunciones.LABEL_IDSUCURSAL:
					sNombreCampoCategoriaValor="id_sucursal";
					break;

				case DetaFormaPagoConstantesFunciones.LABEL_IDEJERCICIO:
					sNombreCampoCategoriaValor="id_ejercicio";
					break;

				case DetaFormaPagoConstantesFunciones.LABEL_IDPERIODO:
					sNombreCampoCategoriaValor="id_periodo";
					break;

				case DetaFormaPagoConstantesFunciones.LABEL_IDFACTURA:
					sNombreCampoCategoriaValor="id_factura";
					break;

				case DetaFormaPagoConstantesFunciones.LABEL_IDTIPOFORMAPAGO:
					sNombreCampoCategoriaValor="id_tipo_forma_pago";
					break;

				case DetaFormaPagoConstantesFunciones.LABEL_IDTIPODETAFORMAPAGO:
					sNombreCampoCategoriaValor="id_tipo_deta_forma_pago";
					break;

				case DetaFormaPagoConstantesFunciones.LABEL_IDDETAFORMAPAGOFACTU:
					sNombreCampoCategoriaValor="id_deta_forma_pago_factu";
					break;

				case DetaFormaPagoConstantesFunciones.LABEL_IDCUENTACONTABLE:
					sNombreCampoCategoriaValor="id_cuenta_contable";
					break;

				case DetaFormaPagoConstantesFunciones.LABEL_IDTIPORETENCION:
					sNombreCampoCategoriaValor="id_tipo_retencion";
					break;

				case DetaFormaPagoConstantesFunciones.LABEL_VALOR:
					sNombreCampoCategoriaValor="valor";
					break;

				case DetaFormaPagoConstantesFunciones.LABEL_FECHAINICIAL:
					sNombreCampoCategoriaValor="fecha_inicial";
					break;

				case DetaFormaPagoConstantesFunciones.LABEL_FECHAFINAL:
					sNombreCampoCategoriaValor="fecha_final";
					break;

				case DetaFormaPagoConstantesFunciones.LABEL_PORCENTAJE:
					sNombreCampoCategoriaValor="porcentaje";
					break;

				case DetaFormaPagoConstantesFunciones.LABEL_RETENCION:
					sNombreCampoCategoriaValor="retencion";
					break;

				case DetaFormaPagoConstantesFunciones.LABEL_PORCENTAJERETENCION:
					sNombreCampoCategoriaValor="porcentaje_retencion";
					break;

				case DetaFormaPagoConstantesFunciones.LABEL_BASERETENCION:
					sNombreCampoCategoriaValor="base_retencion";
					break;

				case DetaFormaPagoConstantesFunciones.LABEL_VALORRETENCION:
					sNombreCampoCategoriaValor="valor_retencion";
					break;

				case DetaFormaPagoConstantesFunciones.LABEL_NUMERORETENCION:
					sNombreCampoCategoriaValor="numero_retencion";
					break;

				case DetaFormaPagoConstantesFunciones.LABEL_NUMERODIAS:
					sNombreCampoCategoriaValor="numero_dias";
					break;

				case DetaFormaPagoConstantesFunciones.LABEL_NUMEROCUOTA:
					sNombreCampoCategoriaValor="numero_cuota";
					break;

				case DetaFormaPagoConstantesFunciones.LABEL_DESCRIPCION:
					sNombreCampoCategoriaValor="descripcion";
					break;

				case DetaFormaPagoConstantesFunciones.LABEL_IDANIO:
					sNombreCampoCategoriaValor="id_anio";
					break;

				case DetaFormaPagoConstantesFunciones.LABEL_IDMES:
					sNombreCampoCategoriaValor="id_mes";
					break;
					
			default :
				break;
		}	
		//CATEGORIA VALOR
		
		//VALORES GRAFICO
		for(int index:this.jInternalFrameReporteDinamicoDetaFormaPago.getjListColumnasValoresGrafico().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoDetaFormaPago.getjListColumnasValoresGrafico().getModel().getElementAt(index);
			
			switch(reporte.getsCodigo()) {
				
				case DetaFormaPagoConstantesFunciones.LABEL_IDEMPRESA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Empresa",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_empresa");
					break;

				case DetaFormaPagoConstantesFunciones.LABEL_IDSUCURSAL:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Sucursal",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_sucursal");
					break;

				case DetaFormaPagoConstantesFunciones.LABEL_IDEJERCICIO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Ejercicio",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_ejercicio");
					break;

				case DetaFormaPagoConstantesFunciones.LABEL_IDPERIODO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Periodo",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_periodo");
					break;

				case DetaFormaPagoConstantesFunciones.LABEL_IDFACTURA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Factura",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_factura");
					break;

				case DetaFormaPagoConstantesFunciones.LABEL_IDTIPOFORMAPAGO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Tipo Forma Pago",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_tipo_forma_pago");
					break;

				case DetaFormaPagoConstantesFunciones.LABEL_IDTIPODETAFORMAPAGO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Tipo Deta Forma Pago",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_tipo_deta_forma_pago");
					break;

				case DetaFormaPagoConstantesFunciones.LABEL_IDDETAFORMAPAGOFACTU:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Deta Forma Pago Factu",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_deta_forma_pago_factu");
					break;

				case DetaFormaPagoConstantesFunciones.LABEL_IDCUENTACONTABLE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Cuenta Contable",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_cuenta_contable");
					break;

				case DetaFormaPagoConstantesFunciones.LABEL_IDTIPORETENCION:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Tipo Retencion",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_tipo_retencion");
					break;

				case DetaFormaPagoConstantesFunciones.LABEL_VALOR:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Valor",sNombreCampoCategoria,sNombreCampoCategoriaValor,"valor");
					break;

				case DetaFormaPagoConstantesFunciones.LABEL_FECHAINICIAL:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Fecha Inicial",sNombreCampoCategoria,sNombreCampoCategoriaValor,"fecha_inicial");
					break;

				case DetaFormaPagoConstantesFunciones.LABEL_FECHAFINAL:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Fecha Final",sNombreCampoCategoria,sNombreCampoCategoriaValor,"fecha_final");
					break;

				case DetaFormaPagoConstantesFunciones.LABEL_PORCENTAJE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Porcentaje",sNombreCampoCategoria,sNombreCampoCategoriaValor,"porcentaje");
					break;

				case DetaFormaPagoConstantesFunciones.LABEL_RETENCION:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Retencion",sNombreCampoCategoria,sNombreCampoCategoriaValor,"retencion");
					break;

				case DetaFormaPagoConstantesFunciones.LABEL_PORCENTAJERETENCION:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Porcentaje Retencion",sNombreCampoCategoria,sNombreCampoCategoriaValor,"porcentaje_retencion");
					break;

				case DetaFormaPagoConstantesFunciones.LABEL_BASERETENCION:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Base",sNombreCampoCategoria,sNombreCampoCategoriaValor,"base_retencion");
					break;

				case DetaFormaPagoConstantesFunciones.LABEL_VALORRETENCION:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Valor Retencion",sNombreCampoCategoria,sNombreCampoCategoriaValor,"valor_retencion");
					break;

				case DetaFormaPagoConstantesFunciones.LABEL_NUMERORETENCION:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Numero Retencion",sNombreCampoCategoria,sNombreCampoCategoriaValor,"numero_retencion");
					break;

				case DetaFormaPagoConstantesFunciones.LABEL_NUMERODIAS:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Numero Dias",sNombreCampoCategoria,sNombreCampoCategoriaValor,"numero_dias");
					break;

				case DetaFormaPagoConstantesFunciones.LABEL_NUMEROCUOTA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Numero Cuota",sNombreCampoCategoria,sNombreCampoCategoriaValor,"numero_cuota");
					break;

				case DetaFormaPagoConstantesFunciones.LABEL_DESCRIPCION:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Descripcion",sNombreCampoCategoria,sNombreCampoCategoriaValor,"descripcion");
					break;

				case DetaFormaPagoConstantesFunciones.LABEL_IDANIO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Anio",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_anio");
					break;

				case DetaFormaPagoConstantesFunciones.LABEL_IDMES:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Mes",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_mes");
					break;
					
				default :
					break;
			}
		}
		//VALORES GRAFICO
		//if(sTipoGraficoReporte.equals("BARRAS") || sTipoGraficoReporte.equals("BARRAS_3D") || sTipoGraficoReporte.equals("BARRAS_XY") ||
		//   sTipoGraficoReporte.equals("PASTEL") || sTipoGraficoReporte.equals("PASTEL_3D") || sTipoGraficoReporte.equals("APILADO")) {
			
			existe=true;
			strGrafico=FuncionesReporte.getStringGraficoReporte(sTipoGraficoReporte,sWidthGrafico,strCategorySeries);			
		//}
		
		if(existe) {
			sXmlStringFile=sXmlStringFile.replace("<!--GRAFICO-->", strGrafico);
		}												
		
		return sXmlStringFile;
	}
	
	
	//@SuppressWarnings("deprecation")
	
	public void jButtonGenerarExcelReporteDinamicoDetaFormaPagoActionPerformed(ActionEvent evt) throws Exception {		
		ArrayList<DetaFormaPago> detaformapagosSeleccionados=new ArrayList<DetaFormaPago>();		
		
		detaformapagosSeleccionados=this.getDetaFormaPagosSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"detaformapago";//.xls";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		Boolean existeFilas=false;
		
		Workbook workbook = null;
		FileOutputStream fileOutputStream=null;
		Reporte reporte=new Reporte();
		
		try {
			
			if(sTipoArchivoReporte=="EXCEL2") {
				workbook = new HSSFWorkbook();
				sPath+=".xls";
			
			} else if(sTipoArchivoReporte=="EXCEL2_2") {
				workbook = new XSSFWorkbook();
				sPath+=".xlsx";			
			}
		
			Sheet sheet = workbook.createSheet("DetaFormaPagos");
						
		    			
			Integer iRow=0;
			Integer iCell=0;
			
			Row row = sheet.createRow(iRow);
			Cell cell = row.createCell(iCell);
			//cell.setCellValue("Blahblah");
			
			for(int index:this.jInternalFrameReporteDinamicoDetaFormaPago.getjListColumnasSelectReporte().getSelectedIndices()) {
				reporte=(Reporte)this.jInternalFrameReporteDinamicoDetaFormaPago.getjListColumnasSelectReporte().getModel().getElementAt(index);
				
				switch(reporte.getsCodigo()) {
					
				case DetaFormaPagoConstantesFunciones.LABEL_IDEMPRESA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetaFormaPagoConstantesFunciones.LABEL_IDEMPRESA);
					iRow++;

					for(DetaFormaPago detaformapago:detaformapagosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detaformapago.getempresa_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetaFormaPagoConstantesFunciones.LABEL_IDSUCURSAL:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetaFormaPagoConstantesFunciones.LABEL_IDSUCURSAL);
					iRow++;

					for(DetaFormaPago detaformapago:detaformapagosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detaformapago.getsucursal_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetaFormaPagoConstantesFunciones.LABEL_IDEJERCICIO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetaFormaPagoConstantesFunciones.LABEL_IDEJERCICIO);
					iRow++;

					for(DetaFormaPago detaformapago:detaformapagosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detaformapago.getejercicio_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetaFormaPagoConstantesFunciones.LABEL_IDPERIODO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetaFormaPagoConstantesFunciones.LABEL_IDPERIODO);
					iRow++;

					for(DetaFormaPago detaformapago:detaformapagosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detaformapago.getperiodo_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetaFormaPagoConstantesFunciones.LABEL_IDFACTURA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetaFormaPagoConstantesFunciones.LABEL_IDFACTURA);
					iRow++;

					for(DetaFormaPago detaformapago:detaformapagosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detaformapago.getfactura_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetaFormaPagoConstantesFunciones.LABEL_IDTIPOFORMAPAGO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetaFormaPagoConstantesFunciones.LABEL_IDTIPOFORMAPAGO);
					iRow++;

					for(DetaFormaPago detaformapago:detaformapagosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detaformapago.gettipoformapago_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetaFormaPagoConstantesFunciones.LABEL_IDTIPODETAFORMAPAGO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetaFormaPagoConstantesFunciones.LABEL_IDTIPODETAFORMAPAGO);
					iRow++;

					for(DetaFormaPago detaformapago:detaformapagosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detaformapago.gettipodetaformapago_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetaFormaPagoConstantesFunciones.LABEL_IDDETAFORMAPAGOFACTU:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetaFormaPagoConstantesFunciones.LABEL_IDDETAFORMAPAGOFACTU);
					iRow++;

					for(DetaFormaPago detaformapago:detaformapagosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detaformapago.getdetaformapagofactu_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetaFormaPagoConstantesFunciones.LABEL_IDCUENTACONTABLE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetaFormaPagoConstantesFunciones.LABEL_IDCUENTACONTABLE);
					iRow++;

					for(DetaFormaPago detaformapago:detaformapagosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detaformapago.getcuentacontable_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetaFormaPagoConstantesFunciones.LABEL_IDTIPORETENCION:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetaFormaPagoConstantesFunciones.LABEL_IDTIPORETENCION);
					iRow++;

					for(DetaFormaPago detaformapago:detaformapagosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detaformapago.gettiporetencion_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetaFormaPagoConstantesFunciones.LABEL_VALOR:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetaFormaPagoConstantesFunciones.LABEL_VALOR);
					iRow++;

					for(DetaFormaPago detaformapago:detaformapagosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detaformapago.getvalor());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetaFormaPagoConstantesFunciones.LABEL_FECHAINICIAL:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetaFormaPagoConstantesFunciones.LABEL_FECHAINICIAL);
					iRow++;

					for(DetaFormaPago detaformapago:detaformapagosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detaformapago.getfecha_inicial());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetaFormaPagoConstantesFunciones.LABEL_FECHAFINAL:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetaFormaPagoConstantesFunciones.LABEL_FECHAFINAL);
					iRow++;

					for(DetaFormaPago detaformapago:detaformapagosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detaformapago.getfecha_final());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetaFormaPagoConstantesFunciones.LABEL_PORCENTAJE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetaFormaPagoConstantesFunciones.LABEL_PORCENTAJE);
					iRow++;

					for(DetaFormaPago detaformapago:detaformapagosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detaformapago.getporcentaje());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetaFormaPagoConstantesFunciones.LABEL_RETENCION:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetaFormaPagoConstantesFunciones.LABEL_RETENCION);
					iRow++;

					for(DetaFormaPago detaformapago:detaformapagosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detaformapago.getretencion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetaFormaPagoConstantesFunciones.LABEL_PORCENTAJERETENCION:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetaFormaPagoConstantesFunciones.LABEL_PORCENTAJERETENCION);
					iRow++;

					for(DetaFormaPago detaformapago:detaformapagosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detaformapago.getporcentaje_retencion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetaFormaPagoConstantesFunciones.LABEL_BASERETENCION:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetaFormaPagoConstantesFunciones.LABEL_BASERETENCION);
					iRow++;

					for(DetaFormaPago detaformapago:detaformapagosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detaformapago.getbase_retencion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetaFormaPagoConstantesFunciones.LABEL_VALORRETENCION:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetaFormaPagoConstantesFunciones.LABEL_VALORRETENCION);
					iRow++;

					for(DetaFormaPago detaformapago:detaformapagosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detaformapago.getvalor_retencion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetaFormaPagoConstantesFunciones.LABEL_NUMERORETENCION:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetaFormaPagoConstantesFunciones.LABEL_NUMERORETENCION);
					iRow++;

					for(DetaFormaPago detaformapago:detaformapagosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detaformapago.getnumero_retencion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetaFormaPagoConstantesFunciones.LABEL_NUMERODIAS:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetaFormaPagoConstantesFunciones.LABEL_NUMERODIAS);
					iRow++;

					for(DetaFormaPago detaformapago:detaformapagosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detaformapago.getnumero_dias());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetaFormaPagoConstantesFunciones.LABEL_NUMEROCUOTA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetaFormaPagoConstantesFunciones.LABEL_NUMEROCUOTA);
					iRow++;

					for(DetaFormaPago detaformapago:detaformapagosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detaformapago.getnumero_cuota());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetaFormaPagoConstantesFunciones.LABEL_DESCRIPCION:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetaFormaPagoConstantesFunciones.LABEL_DESCRIPCION);
					iRow++;

					for(DetaFormaPago detaformapago:detaformapagosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detaformapago.getdescripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetaFormaPagoConstantesFunciones.LABEL_IDANIO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetaFormaPagoConstantesFunciones.LABEL_IDANIO);
					iRow++;

					for(DetaFormaPago detaformapago:detaformapagosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detaformapago.getanio_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetaFormaPagoConstantesFunciones.LABEL_IDMES:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetaFormaPagoConstantesFunciones.LABEL_IDMES);
					iRow++;

					for(DetaFormaPago detaformapago:detaformapagosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detaformapago.getmes_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;
					
					default :
						break;
				}
			}
			
			
			//if(conCabecera) {
			//	this.getFilaCabeceraExportarExcelDetaFormaPago(row);				
			//	iRow++;
			//}				
			
			//for(DetaFormaPago detaformapagoAux:detaformapagosSeleccionados) {
			//	row = sheet.createRow(iRow);
				
			//	this.getFilaDatosExportarExcelDetaFormaPago(detaformapagoAux,row);
				
			//	iRow++;
			//}
			
			
			
			fileOutputStream = new FileOutputStream(new File(sPath));
		    
			workbook.write(fileOutputStream);
			
			//fileOutputStream.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.detaformapagoSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Deta Forma Pago",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			
       		if (fileOutputStream != null) {
				fileOutputStream.close();
			}			
		}				
	}	
	
	
	
	
	public void buscarPorId(Long idActual) throws Exception {    		
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detaformapagoLogic.getNewConnexionToDeep("");
			}
			
			this.idActual=idActual;
			this.iNumeroPaginacionPagina=0;
			
			this.procesarBusqueda("PorId");
				    	
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingDetaFormaPago(false);
			
			//SI ES MANUAL
			if(DetaFormaPagoJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualDetaFormaPago();
			}	
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detaformapagoLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detaformapagoLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger);
			
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detaformapagoLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonAnterioresDetaFormaPagoActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			//this.iNumeroPaginacion-=this.iNumeroPaginacion;
			/*
			if(this.iNumeroPaginacion<0) {
				this.iNumeroPaginacion=0;
			}
			*/
			//this.iNumeroPaginacionPagina=10;			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detaformapagoLogic.getNewConnexionToDeep("");
			}
			
			this.anteriores();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingDetaFormaPago(false);
			
			//SI ES MANUAL
			if(DetaFormaPagoJInternalFrame.ISBINDING_MANUAL) {
	    		//this.inicializarActualizarBindingManualDetaFormaPago();
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detaformapagoLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detaformapagoLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,DetaFormaPagoConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detaformapagoLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonSiguientesDetaFormaPagoActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			//this.iNumeroPaginacion+=this.iNumeroPaginacion;
			//this.iNumeroPaginacionPagina=10;			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detaformapagoLogic.getNewConnexionToDeep("");
			}
			
			this.siguientes();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingDetaFormaPago(false);
			
			//SI ES MANUAL
			if(DetaFormaPagoJInternalFrame.ISBINDING_MANUAL) {
	    		//this.inicializarActualizarBindingManualDetaFormaPago();
			}		
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detaformapagoLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detaformapagoLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,DetaFormaPagoConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detaformapagoLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void aumentarTamanioFilaNuevaTablaDetaFormaPago() throws Exception {		
		Dimension dimensionMinimum=this.jTableDatosDetaFormaPago.getMinimumSize();
		Dimension dimensionMaximum=this.jTableDatosDetaFormaPago.getMaximumSize();
		Dimension dimensionPreferred=this.jTableDatosDetaFormaPago.getPreferredSize();
	
		double iHeightConFilaNueva=dimensionPreferred.getHeight();
		
		iHeightConFilaNueva+=this.jTableDatosDetaFormaPago.getRowHeight();
		
		dimensionMinimum.setSize(dimensionMinimum.getWidth(),iHeightConFilaNueva);
		dimensionMaximum.setSize(dimensionMaximum.getWidth(),iHeightConFilaNueva);
		dimensionPreferred.setSize(dimensionPreferred.getWidth(),iHeightConFilaNueva);
		
		this.jTableDatosDetaFormaPago.setMinimumSize(dimensionMinimum);
		this.jTableDatosDetaFormaPago.setMaximumSize(dimensionMaximum);
		this.jTableDatosDetaFormaPago.setPreferredSize(dimensionPreferred);	
	}
	
	public void inicializarActualizarBindingDetaFormaPago(Boolean esInicializar) throws Exception {
		this.inicializarActualizarBindingDetaFormaPago(esInicializar,true);
	}
	
	public void inicializarActualizarBindingDetaFormaPago(Boolean esInicializar,Boolean conTabla) throws Exception {		
		if(conTabla) {
			this.inicializarActualizarBindingTablaDetaFormaPago(esInicializar);
		}
		
		this.inicializarActualizarBindingBotonesDetaFormaPago(esInicializar);
		
		//FUNCIONALIDAD_RELACIONADO
		if(!this.detaformapagoSessionBean.getEsGuardarRelacionado()) {
			try{this.inicializarActualizarBindingBusquedasDetaFormaPago(esInicializar);}catch(Exception e){e.printStackTrace();}
			
			//this.inicializarActualizarBindingtiposArchivosReportesAccionesDetaFormaPago(esInicializar) ;
			
			this.inicializarActualizarBindingParametrosReportesDetaFormaPago(esInicializar) ;
		}
		
		if(esInicializar) {
			if( !DetaFormaPagoJInternalFrame.ISBINDING_MANUAL_TABLA ||
			   	!DetaFormaPagoJInternalFrame.ISBINDING_MANUAL) {
			   	
			}
		}
	}
	
	public void inicializarActualizarBindingManualDetaFormaPago() throws Exception {		
		//NO SE NECESITA HACER BINDING OTRA VEZ
		//this.inicializarActualizarBindingTablaDetaFormaPago();
		
		this.inicializarActualizarBindingBotonesManualDetaFormaPago(true);
		
		//FUNCIONALIDAD_RELACIONADO
		if(!this.detaformapagoSessionBean.getEsGuardarRelacionado()) {
			
			this.inicializarActualizarBindingBusquedasManualDetaFormaPago();			
			
			
			//this.inicializarActualizarBindingtiposArchivosReportesAccionesDetaFormaPago() ;
			
			this.inicializarActualizarBindingParametrosReportesPostAccionesManualDetaFormaPago(false) ;			
			
		}
	}
	
	public void inicializarActualizarBindingParametrosReportesPostAccionesManualDetaFormaPago(Boolean esSetControles) throws Exception {
		try	{					
			if(!esSetControles) {
				this.isSeleccionarTodos=this.jCheckBoxSeleccionarTodosDetaFormaPago.isSelected();
				this.isSeleccionados=this.jCheckBoxSeleccionadosDetaFormaPago.isSelected();
				
				
				this.conGraficoReporte=this.jCheckBoxConGraficoReporteDetaFormaPago.isSelected();															
				
				
				if(this.jInternalFrameDetalleFormDetaFormaPago!=null) {
				this.isPostAccionNuevo=this.jInternalFrameDetalleFormDetaFormaPago.jCheckBoxPostAccionNuevoDetaFormaPago.isSelected();
				this.isPostAccionSinCerrar=this.jInternalFrameDetalleFormDetaFormaPago.jCheckBoxPostAccionSinCerrarDetaFormaPago.isSelected();
				this.isPostAccionSinMensaje=this.jInternalFrameDetalleFormDetaFormaPago.jCheckBoxPostAccionSinMensajeDetaFormaPago.isSelected();
				}
			
			} else {
				this.jCheckBoxSeleccionarTodosDetaFormaPago.setSelected(this.isSeleccionarTodos);
				this.jCheckBoxSeleccionadosDetaFormaPago.setSelected(this.isSeleccionados);
				
				
				this.jCheckBoxConGraficoReporteDetaFormaPago.setSelected(this.conGraficoReporte);				
				
				
				if(this.jInternalFrameDetalleFormDetaFormaPago!=null) {
				this.jInternalFrameDetalleFormDetaFormaPago.jCheckBoxPostAccionNuevoDetaFormaPago.setSelected(this.isPostAccionNuevo);
				this.jInternalFrameDetalleFormDetaFormaPago.jCheckBoxPostAccionSinCerrarDetaFormaPago.setSelected(this.isPostAccionSinCerrar);
				this.jInternalFrameDetalleFormDetaFormaPago.jCheckBoxPostAccionSinMensajeDetaFormaPago.setSelected(this.isPostAccionSinMensaje);
				}
			}
			
			
			if(this.jComboBoxTiposPaginacionDetaFormaPago.getSelectedItem()!=null) {
				this.sTipoPaginacion=((Reporte)this.jComboBoxTiposPaginacionDetaFormaPago.getSelectedItem()).getsCodigo();			
			}
			
			
			
			if(this.jInternalFrameDetalleFormDetaFormaPago!=null) {
			this.sTipoAccionFormulario=((Reporte)this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxTiposAccionesFormularioDetaFormaPago.getSelectedItem()).getsCodigo();
			}
			
			
			
			if(!this.conCargarMinimo) {
				this.sTipoArchivoReporte=((Reporte)this.jComboBoxTiposArchivosReportesDetaFormaPago.getSelectedItem()).getsCodigo();			
				
				if(this.jInternalFrameReporteDinamicoDetaFormaPago!=null) {
					this.sTipoArchivoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoDetaFormaPago.getjComboBoxTiposArchivosReportesDinamico().getSelectedItem()).getsCodigo();			
				}
				
				this.sTipoRelacion=((Reporte)this.jComboBoxTiposRelacionesDetaFormaPago.getSelectedItem()).getsCodigo();
									
				this.sTipoAccion=((Reporte)this.jComboBoxTiposAccionesDetaFormaPago.getSelectedItem()).getsCodigo();
													
				this.sTipoSeleccionar=((Reporte)this.jComboBoxTiposSeleccionarDetaFormaPago.getSelectedItem()).getsCodigo();
									
				this.sTipoReporte=((Reporte)this.jComboBoxTiposReportesDetaFormaPago.getSelectedItem()).getsCodigo();							
					
				if(this.jInternalFrameReporteDinamicoDetaFormaPago!=null) {
					this.sTipoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoDetaFormaPago.getjComboBoxTiposReportesDinamico().getSelectedItem()).getsCodigo();							
				}
				
				this.sTipoGraficoReporte=((Reporte)this.jComboBoxTiposGraficosReportesDetaFormaPago.getSelectedItem()).getsCodigo();											
			}			
			
			this.sValorCampoGeneral=this.jTextFieldValorCampoGeneralDetaFormaPago.getText();						
			
			
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void inicializarActualizarBindingParametrosReportesDetaFormaPago(Boolean esInicializar) throws Exception {
		try	{	
			if(DetaFormaPagoJInternalFrame.ISBINDING_MANUAL) {
				this. inicializarActualizarBindingParametrosReportesPostAccionesManualDetaFormaPago(false);
			} else {
			}
		} catch(Exception e) {
			throw e;
		}
	}	
	
	public void inicializarActualizarBindingtiposArchivosReportesAccionesDetaFormaPago() throws Exception {
		try	{
			if(DetaFormaPagoJInternalFrame.ISBINDING_MANUAL) {
				this.inicializarActualizarBindingtiposArchivosReportesAccionesManualDetaFormaPago();
			} else {
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesAccionesManualFormDetalleDetaFormaPago() throws Exception {
		//TIPOS ACCIONES FORMULARIO	
		this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxTiposAccionesFormularioDetaFormaPago.removeAllItems();
				
		for(Reporte reporte:this.tiposAccionesFormulario) {
			this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxTiposAccionesFormularioDetaFormaPago.addItem(reporte);
		}
		
		//TIPOS ACCIONES FORMULARIO
	}
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesAccionesManualDetaFormaPago() throws Exception {
		try	{
			
			//TIPOS ARCHIVOS REPORTES
			this.jComboBoxTiposArchivosReportesDetaFormaPago.removeAllItems();
				
			for(Reporte reporte:this.tiposArchivosReportes) {
				this.jComboBoxTiposArchivosReportesDetaFormaPago.addItem(reporte);
			}
			
			
				
			//TIPOS REPORTES
			this.jComboBoxTiposReportesDetaFormaPago.removeAllItems();
				
			for(Reporte reporte:this.tiposReportes) {
				this.jComboBoxTiposReportesDetaFormaPago.addItem(reporte);
			}
			
			
			//TIPOS GRAFICOS REPORTES
			this.jComboBoxTiposGraficosReportesDetaFormaPago.removeAllItems();
				
			for(Reporte reporte:this.tiposGraficosReportes) {
				this.jComboBoxTiposGraficosReportesDetaFormaPago.addItem(reporte);
			}
			
			
			//TIPOS PAGINACION
			this.jComboBoxTiposPaginacionDetaFormaPago.removeAllItems();
				
			for(Reporte reporte:this.tiposPaginacion) {
				this.jComboBoxTiposPaginacionDetaFormaPago.addItem(reporte);
			}
			
			
			if(!this.detaformapagoSessionBean.getEsGuardarRelacionado()) {
				this.jComboBoxTiposPaginacionDetaFormaPago.setSelectedItem(Funciones2.getTipoPaginacionDefecto("NORMAL",this.tiposPaginacion));
			} else {
				this.jComboBoxTiposPaginacionDetaFormaPago.setSelectedItem(Funciones2.getTipoPaginacionDefecto("RELACIONADO",this.tiposPaginacion));
			}
				
				
			//TIPOS ACCIONES	
			this.jComboBoxTiposRelacionesDetaFormaPago.removeAllItems();
				
			for(Reporte reporte:this.tiposRelaciones) {
				this.jComboBoxTiposRelacionesDetaFormaPago.addItem(reporte);
			}
			
			//TIPOS ACCIONES
				
				
			//TIPOS ACCIONES	
			this.jComboBoxTiposAccionesDetaFormaPago.removeAllItems();
				
			for(Reporte reporte:this.tiposAcciones) {
				this.jComboBoxTiposAccionesDetaFormaPago.addItem(reporte);
			}
			
			//TIPOS ACCIONES			
			
			
			
			//TIPOS ACCIONES FORMULARIO	
			if(this.jInternalFrameDetalleFormDetaFormaPago!=null) { //if(this.conCargarFormDetalle) {
				this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxTiposAccionesFormularioDetaFormaPago.removeAllItems();
				
				for(Reporte reporte:this.tiposAccionesFormulario) {
					this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxTiposAccionesFormularioDetaFormaPago.addItem(reporte);
				}
				
			}
			//TIPOS ACCIONES FORMULARIO
			
			
			
			//TIPOS SELECCIONAR
			this.jComboBoxTiposSeleccionarDetaFormaPago.removeAllItems();
				
			for(Reporte reporte:this.tiposSeleccionar) {
				this.jComboBoxTiposSeleccionarDetaFormaPago.addItem(reporte);
			}
			
			
			if(this.tiposSeleccionar!=null && this.tiposSeleccionar.size()>1) {
				this.jComboBoxTiposSeleccionarDetaFormaPago.setSelectedIndex(1);
			}
				
			//REPORTE DINAMICO
			this.inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualDetaFormaPago();
							
			//TIPOS COLUMNAS SELECT
			//TIPOS SELECCIONAR
			
			
		} catch(Exception e) {
			throw e;
		}
	}		
	
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualDetaFormaPago() throws Exception {
		try	{
			DefaultListModel<Reporte> defaultListModel=new DefaultListModel<Reporte>();
			
			
			//TIPOS ARCHIVOS REPORTES DINAMICO
			if(this.jInternalFrameReporteDinamicoDetaFormaPago!=null) {
				this.jInternalFrameReporteDinamicoDetaFormaPago.getjComboBoxTiposArchivosReportesDinamico().removeAllItems();
					
				for(Reporte reporte:this.tiposArchivosReportesDinamico) {
					this.jInternalFrameReporteDinamicoDetaFormaPago.getjComboBoxTiposArchivosReportesDinamico().addItem(reporte);
				}
				
			}
			
			//TIPOS REPORTES DINAMICO
			if(this.jInternalFrameReporteDinamicoDetaFormaPago!=null) {
				this.jInternalFrameReporteDinamicoDetaFormaPago.getjComboBoxTiposReportesDinamico().removeAllItems();
					
				for(Reporte reporte:this.tiposReportesDinamico) {
					this.jInternalFrameReporteDinamicoDetaFormaPago.getjComboBoxTiposReportesDinamico().addItem(reporte);
				}
				
			}
			
			defaultListModel=new DefaultListModel<Reporte>();
			
			if(this.jInternalFrameReporteDinamicoDetaFormaPago!=null) {
				
				if(this.jInternalFrameReporteDinamicoDetaFormaPago.getjListColumnasSelectReporte()!=null) {
					this.jInternalFrameReporteDinamicoDetaFormaPago.getjListColumnasSelectReporte().removeAll();
						
					for(Reporte reporte:this.tiposColumnasSelect) {
						defaultListModel.addElement(reporte);
					}						
						
					this.jInternalFrameReporteDinamicoDetaFormaPago.getjListColumnasSelectReporte().setModel(defaultListModel);									
						
				}	
					
				//TIPOS RELACIONES SELECT
				//TIPOS SELECCIONAR
				defaultListModel=new DefaultListModel<Reporte>();
				if(this.jInternalFrameReporteDinamicoDetaFormaPago.getjListRelacionesSelectReporte()!=null) {
					this.jInternalFrameReporteDinamicoDetaFormaPago.getjListRelacionesSelectReporte().removeAll();
						
					for(Reporte reporte:this.tiposRelacionesSelect) {
						defaultListModel.addElement(reporte);
					}						
						
					this.jInternalFrameReporteDinamicoDetaFormaPago.getjListRelacionesSelectReporte().setModel(defaultListModel);									
						
				}	
				
				
				//TIPOS COLUMNAS CATEGORIA DINAMICO
				if(this.jInternalFrameReporteDinamicoDetaFormaPago.getjComboBoxColumnaCategoriaGrafico()!=null) {
					this.jInternalFrameReporteDinamicoDetaFormaPago.getjComboBoxColumnaCategoriaGrafico().removeAllItems();
						
					ArrayList<Reporte> tiposColumnasCategoria=DetaFormaPagoConstantesFunciones.getTiposSeleccionarDetaFormaPago(true,true,false,true,true);
						
					for(Reporte reporte:tiposColumnasCategoria) {//this.tiposSeleccionar
						this.jInternalFrameReporteDinamicoDetaFormaPago.getjComboBoxColumnaCategoriaGrafico().addItem(reporte);
					}
					
				}
					
				//TIPOS COLUMNAS CATEGORIA VALOR DINAMICO
				if(this.jInternalFrameReporteDinamicoDetaFormaPago.getjComboBoxColumnaCategoriaValor()!=null) {
					this.jInternalFrameReporteDinamicoDetaFormaPago.getjComboBoxColumnaCategoriaValor().removeAllItems();
						
					ArrayList<Reporte> tiposColumnasCategoriaValor=DetaFormaPagoConstantesFunciones.getTiposSeleccionarDetaFormaPago(false,false,true,false,false);
						
					for(Reporte reporte:tiposColumnasCategoriaValor) {//this.tiposSeleccionar
						this.jInternalFrameReporteDinamicoDetaFormaPago.getjComboBoxColumnaCategoriaValor().addItem(reporte);
					}
					
				}
					
				//TIPOS COLUMNAS VALOR
				defaultListModel=new DefaultListModel<Reporte>();
					
				if(this.jInternalFrameReporteDinamicoDetaFormaPago.getjListColumnasValoresGrafico()!=null) {
					this.jInternalFrameReporteDinamicoDetaFormaPago.getjListColumnasValoresGrafico().removeAll();
						
					ArrayList<Reporte> tiposColumnasValor=DetaFormaPagoConstantesFunciones.getTiposSeleccionarDetaFormaPago(false,false,true,false,false);
						
					for(Reporte reporte:tiposColumnasValor) {//this.tiposSeleccionar
						defaultListModel.addElement(reporte);
					}						
						
					this.jInternalFrameReporteDinamicoDetaFormaPago.getjListColumnasValoresGrafico().setModel(defaultListModel);									
						
				}
					
				//TIPOS GRAFICOS REPORTES DINAMICOS
				if(this.jInternalFrameReporteDinamicoDetaFormaPago.getjComboBoxTiposGraficosReportesDinamico()!=null) {
					this.jInternalFrameReporteDinamicoDetaFormaPago.getjComboBoxTiposGraficosReportesDinamico().removeAllItems();
						
					for(Reporte reporte:this.tiposGraficosReportes) {
						this.jInternalFrameReporteDinamicoDetaFormaPago.getjComboBoxTiposGraficosReportesDinamico().addItem(reporte);
					}
					
				}
			
			
			}
		} catch(Exception e) {
			throw e;
		}
	}	
	
	
	
	public void inicializarActualizarBindingBusquedasManualDetaFormaPago()  throws Exception {				
		//BYDAN_BUSQUEDAS		
		
		if(this.jComboBoxid_cuenta_contableFK_IdCuentaContableDetaFormaPago.getSelectedItem()!=null){this.id_cuenta_contableFK_IdCuentaContable=((CuentaContable)this.jComboBoxid_cuenta_contableFK_IdCuentaContableDetaFormaPago.getSelectedItem()).getId();}
		if(this.jComboBoxid_deta_forma_pago_factuFK_IdDetaFormaPagoFactuDetaFormaPago.getSelectedItem()!=null){this.id_deta_forma_pago_factuFK_IdDetaFormaPagoFactu=((DetaFormaPagoFactu)this.jComboBoxid_deta_forma_pago_factuFK_IdDetaFormaPagoFactuDetaFormaPago.getSelectedItem()).getId();}
		if(this.jComboBoxid_facturaFK_IdFacturaDetaFormaPago.getSelectedItem()!=null){this.id_facturaFK_IdFactura=((Factura)this.jComboBoxid_facturaFK_IdFacturaDetaFormaPago.getSelectedItem()).getId();}
		if(this.jComboBoxid_tipo_deta_forma_pagoFK_IdTipoDetaFormaPagoDetaFormaPago.getSelectedItem()!=null){this.id_tipo_deta_forma_pagoFK_IdTipoDetaFormaPago=((TipoDetaFormaPago)this.jComboBoxid_tipo_deta_forma_pagoFK_IdTipoDetaFormaPagoDetaFormaPago.getSelectedItem()).getId();}
		if(this.jComboBoxid_tipo_forma_pagoFK_IdTipoFormaPagoDetaFormaPago.getSelectedItem()!=null){this.id_tipo_forma_pagoFK_IdTipoFormaPago=((TipoFormaPago)this.jComboBoxid_tipo_forma_pagoFK_IdTipoFormaPagoDetaFormaPago.getSelectedItem()).getId();}
		if(this.jComboBoxid_tipo_retencionFK_IdTipoRetencionDetaFormaPago.getSelectedItem()!=null){this.id_tipo_retencionFK_IdTipoRetencion=((TipoRetencion)this.jComboBoxid_tipo_retencionFK_IdTipoRetencionDetaFormaPago.getSelectedItem()).getId();}
		
	}
	
	
	
	
	public void inicializarActualizarBindingBusquedasDetaFormaPago(Boolean esInicializar) throws Exception {				
		if(DetaFormaPagoJInternalFrame.ISBINDING_MANUAL) {
			
			this.inicializarActualizarBindingBusquedasManualDetaFormaPago();			
			
		} else {
		}
	}		
		
	public void inicializarActualizarBindingTablaDetaFormaPago() throws Exception {
		this.inicializarActualizarBindingTablaDetaFormaPago(false);
	}
	
	
	public void inicializarActualizarBindingTablaOrderByDetaFormaPago() {
		//TABLA OrderBy	
		TableColumn tableColumn=new TableColumn();
		Integer iWidthTableDefinicionOrderBy=0;			
			
		this.jInternalFrameOrderByDetaFormaPago.getjTableDatosOrderBy().setModel(new TablaGeneralOrderByModel(this.arrOrderBy));
					
		//DEFINIR RENDERERS OrderBy
		tableColumn=this.jInternalFrameOrderByDetaFormaPago.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderByDetaFormaPago.getjTableDatosOrderBy(),OrderBy.ISSELECTED));			
		//tableColumn.addPropertyChangeListener(new DetaFormaPagoPropertyChangeListener());
					
		tableColumn.setPreferredWidth(50); 	 
		tableColumn.setWidth(50); 	 
		tableColumn.setMinWidth(50);
		tableColumn.setMaxWidth(50);
				
		iWidthTableDefinicionOrderBy+=50;
					
		tableColumn=this.jInternalFrameOrderByDetaFormaPago.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderByDetaFormaPago.getjTableDatosOrderBy(),OrderBy.NOMBRE));
		//tableColumn.addPropertyChangeListener(new DetaFormaPagoPropertyChangeListener());
					
		tableColumn.setPreferredWidth(150); 	 
		tableColumn.setWidth(150); 	 
		tableColumn.setMinWidth(150);
		tableColumn.setMaxWidth(150);
				
		iWidthTableDefinicionOrderBy+=150;
					
		//tableColumn=this.jTableDatosDetaFormaPagoOrderBy.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetaFormaPagoOrderBy,OrderBy.NOMBREDB));			
		////tableColumn.addPropertyChangeListener(new DetaFormaPagoPropertyChangeListener());
								
		tableColumn=this.jInternalFrameOrderByDetaFormaPago.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderByDetaFormaPago.getjTableDatosOrderBy(),OrderBy.ESDESC));
		//tableColumn.addPropertyChangeListener(new DetaFormaPagoPropertyChangeListener());
												
		tableColumn.setPreferredWidth(50); 	 
		tableColumn.setWidth(50); 	 
		tableColumn.setMinWidth(50);
		tableColumn.setMaxWidth(50);
				
		((AbstractTableModel) this.jInternalFrameOrderByDetaFormaPago.getjTableDatosOrderBy().getModel()).fireTableDataChanged();
				
		iWidthTableDefinicionOrderBy+=50;
	}
	
	
	public void inicializarActualizarBindingTablaTotalesDetaFormaPago() {		
		//TABLA OrderBy	
		TableColumn tableColumn=new TableColumn();
		
		//TABLA TOTALES
		this.jInternalFrameTotalesDetaFormaPago.getjTableDatosTotales().setModel(new TablaGeneralTotalModel(this.arrDatoGeneralTotales));
				
		//DEFINIR RENDERERS TOTALES
		tableColumn=this.jInternalFrameTotalesDetaFormaPago.getjTableDatosTotales().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameTotalesDetaFormaPago.getjTableDatosTotales(),Constantes2.S_TIPO));			
		//tableColumn.addPropertyChangeListener(new DetaFormaPagoPropertyChangeListener());
				
				
		tableColumn=this.jInternalFrameTotalesDetaFormaPago.getjTableDatosTotales().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameTotalesDetaFormaPago.getjTableDatosTotales(),Constantes2.S_TOTAL));
		//tableColumn.addPropertyChangeListener(new DetaFormaPagoPropertyChangeListener());		
	}
	
	public void inicializarActualizarBindingTablaDetaFormaPago(Boolean esInicializar) throws Exception {
		Boolean isNoExiste=false;
		Integer iCountNumeroColumnasNormal=0;
		Integer iCountNumeroColumnasFk=0;
		
		this.iWidthTableDefinicion=0;
		
		int iSizeTabla=0;
		
		iSizeTabla=this.getSizeTablaDatos();
		
	if(esInicializar || ConstantesSwing.FORZAR_INICIALIZAR_TABLA) {//esInicializar
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			isNoExiste=detaformapagoLogic.getDetaFormaPagos().size()==0;
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			isNoExiste=detaformapagos.size()==0;
		}
		//ARCHITECTURE
			
		if(isNoExiste) {
			if(this.iNumeroPaginacion-this.iNumeroPaginacion>0) {
				this.iNumeroPaginacion-=this.iNumeroPaginacion;
			}
		}
		
		TableColumn tableColumn=new TableColumn();
		
		if(DetaFormaPagoJInternalFrame.ISBINDING_MANUAL_TABLA) {
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.jTableDatosDetaFormaPago.setModel(new DetaFormaPagoModel(this.detaformapagoLogic.getDetaFormaPagos(),this));
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.jTableDatosDetaFormaPago.setModel(new DetaFormaPagoModel(this.detaformapagos,this));
			}
			//ARCHITECTURE
			
			if(this.jInternalFrameTotalesDetaFormaPago!=null) {
				//TABLA TOTALES
				this.jInternalFrameTotalesDetaFormaPago.getjTableDatosTotales().setModel(new TablaGeneralTotalModel(this.arrDatoGeneralTotales));
				
				//DEFINIR RENDERERS TOTALES
				tableColumn=this.jInternalFrameTotalesDetaFormaPago.getjTableDatosTotales().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameTotalesDetaFormaPago.getjTableDatosTotales(),Constantes2.S_TIPO));			
				//tableColumn.addPropertyChangeListener(new DetaFormaPagoPropertyChangeListener());
				
				
				tableColumn=this.jInternalFrameTotalesDetaFormaPago.getjTableDatosTotales().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameTotalesDetaFormaPago.getjTableDatosTotales(),Constantes2.S_TOTAL));
				//tableColumn.addPropertyChangeListener(new DetaFormaPagoPropertyChangeListener());
			}
							
			
			
			if(this.jInternalFrameOrderByDetaFormaPago!=null && this.jInternalFrameOrderByDetaFormaPago.getjTableDatosOrderBy()!=null) {
				this.inicializarActualizarBindingTablaOrderByDetaFormaPago();
			}
			
								
			//DEFINIR RENDERERS
			tableColumn=this.jTableDatosDetaFormaPago.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetaFormaPago,Constantes2.S_SELECCIONAR));
			//tableColumn.addPropertyChangeListener(new DetaFormaPagoPropertyChangeListener());
			tableColumn.setCellRenderer(new BooleanRenderer(true,"Seleccionar "+DetaFormaPagoConstantesFunciones.SCLASSWEBTITULO,detaformapagoConstantesFunciones.resaltarSeleccionarDetaFormaPago,iSizeTabla,true,false,"","",this));
			tableColumn.setCellEditor(new BooleanEditorRenderer(true,"Seleccionar "+DetaFormaPagoConstantesFunciones.SCLASSWEBTITULO,detaformapagoConstantesFunciones.resaltarSeleccionarDetaFormaPago,false,"","",this));			
			
			tableColumn.setPreferredWidth(50); 	 
			tableColumn.setWidth(50); 	 
			tableColumn.setMinWidth(50); 
			tableColumn.setMaxWidth(50); 
			
			this.iWidthTableDefinicion+=50;
			
			


			tableColumn=this.jTableDatosDetaFormaPago.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetaFormaPago,DetaFormaPagoConstantesFunciones.LABEL_ID));

		if(this.detaformapagoConstantesFunciones.mostraridDetaFormaPago && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetaFormaPagoConstantesFunciones.LABEL_ID,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.detaformapagoConstantesFunciones.resaltaridDetaFormaPago,this.detaformapagoConstantesFunciones.activaridDetaFormaPago,iSizeTabla,this,true,"idDetaFormaPago","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.detaformapagoConstantesFunciones.resaltaridDetaFormaPago,this.detaformapagoConstantesFunciones.activaridDetaFormaPago,this,true,"idDetaFormaPago","BASICO",false));

			tableColumn.setPreferredWidth(50);
			tableColumn.setWidth(50);
			tableColumn.setMinWidth(50);
			tableColumn.setMaxWidth(50);

			this.iWidthTableDefinicion+=50;
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetaFormaPago.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetaFormaPago,DetaFormaPagoConstantesFunciones.LABEL_IDEMPRESA));

		if(this.detaformapagoConstantesFunciones.mostrarid_empresaDetaFormaPago && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetaFormaPagoConstantesFunciones.LABEL_IDEMPRESA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new EmpresaTableCell(this.empresasForeignKey,this.detaformapagoConstantesFunciones.resaltarid_empresaDetaFormaPago,this,this.detaformapagoConstantesFunciones.activarid_empresaDetaFormaPago,iSizeTabla));
			tableColumn.setCellEditor(new EmpresaTableCell(this.empresasForeignKey,this.detaformapagoConstantesFunciones.resaltarid_empresaDetaFormaPago,this,this.detaformapagoConstantesFunciones.activarid_empresaDetaFormaPago,false,"id_empresaDetaFormaPago","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new DetaFormaPagoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetaFormaPago.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetaFormaPago,DetaFormaPagoConstantesFunciones.LABEL_IDSUCURSAL));

		if(this.detaformapagoConstantesFunciones.mostrarid_sucursalDetaFormaPago && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetaFormaPagoConstantesFunciones.LABEL_IDSUCURSAL,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new SucursalTableCell(this.sucursalsForeignKey,this.detaformapagoConstantesFunciones.resaltarid_sucursalDetaFormaPago,this,this.detaformapagoConstantesFunciones.activarid_sucursalDetaFormaPago,iSizeTabla));
			tableColumn.setCellEditor(new SucursalTableCell(this.sucursalsForeignKey,this.detaformapagoConstantesFunciones.resaltarid_sucursalDetaFormaPago,this,this.detaformapagoConstantesFunciones.activarid_sucursalDetaFormaPago,false,"id_sucursalDetaFormaPago","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new DetaFormaPagoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetaFormaPago.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetaFormaPago,DetaFormaPagoConstantesFunciones.LABEL_IDEJERCICIO));

		if(this.detaformapagoConstantesFunciones.mostrarid_ejercicioDetaFormaPago && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetaFormaPagoConstantesFunciones.LABEL_IDEJERCICIO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new EjercicioTableCell(this.ejerciciosForeignKey,this.detaformapagoConstantesFunciones.resaltarid_ejercicioDetaFormaPago,this,this.detaformapagoConstantesFunciones.activarid_ejercicioDetaFormaPago,iSizeTabla));
			tableColumn.setCellEditor(new EjercicioTableCell(this.ejerciciosForeignKey,this.detaformapagoConstantesFunciones.resaltarid_ejercicioDetaFormaPago,this,this.detaformapagoConstantesFunciones.activarid_ejercicioDetaFormaPago,false,"id_ejercicioDetaFormaPago","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new DetaFormaPagoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetaFormaPago.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetaFormaPago,DetaFormaPagoConstantesFunciones.LABEL_IDPERIODO));

		if(this.detaformapagoConstantesFunciones.mostrarid_periodoDetaFormaPago && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetaFormaPagoConstantesFunciones.LABEL_IDPERIODO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new PeriodoTableCell(this.periodosForeignKey,this.detaformapagoConstantesFunciones.resaltarid_periodoDetaFormaPago,this,this.detaformapagoConstantesFunciones.activarid_periodoDetaFormaPago,iSizeTabla));
			tableColumn.setCellEditor(new PeriodoTableCell(this.periodosForeignKey,this.detaformapagoConstantesFunciones.resaltarid_periodoDetaFormaPago,this,this.detaformapagoConstantesFunciones.activarid_periodoDetaFormaPago,false,"id_periodoDetaFormaPago","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new DetaFormaPagoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetaFormaPago.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetaFormaPago,DetaFormaPagoConstantesFunciones.LABEL_IDFACTURA));

		if(this.detaformapagoConstantesFunciones.mostrarid_facturaDetaFormaPago && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetaFormaPagoConstantesFunciones.LABEL_IDFACTURA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new FacturaTableCell(this.facturasForeignKey,this.detaformapagoConstantesFunciones.resaltarid_facturaDetaFormaPago,this,this.detaformapagoConstantesFunciones.activarid_facturaDetaFormaPago,iSizeTabla));
			tableColumn.setCellEditor(new FacturaTableCell(this.facturasForeignKey,this.detaformapagoConstantesFunciones.resaltarid_facturaDetaFormaPago,this,this.detaformapagoConstantesFunciones.activarid_facturaDetaFormaPago,true,"id_facturaDetaFormaPago","CON_BUSQUEDA"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new DetaFormaPagoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetaFormaPago.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetaFormaPago,DetaFormaPagoConstantesFunciones.LABEL_IDTIPOFORMAPAGO));

		if(this.detaformapagoConstantesFunciones.mostrarid_tipo_forma_pagoDetaFormaPago && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetaFormaPagoConstantesFunciones.LABEL_IDTIPOFORMAPAGO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new TipoFormaPagoTableCell(this.tipoformapagosForeignKey,this.detaformapagoConstantesFunciones.resaltarid_tipo_forma_pagoDetaFormaPago,this,this.detaformapagoConstantesFunciones.activarid_tipo_forma_pagoDetaFormaPago,iSizeTabla));
			tableColumn.setCellEditor(new TipoFormaPagoTableCell(this.tipoformapagosForeignKey,this.detaformapagoConstantesFunciones.resaltarid_tipo_forma_pagoDetaFormaPago,this,this.detaformapagoConstantesFunciones.activarid_tipo_forma_pagoDetaFormaPago,true,"id_tipo_forma_pagoDetaFormaPago","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new DetaFormaPagoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetaFormaPago.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetaFormaPago,DetaFormaPagoConstantesFunciones.LABEL_IDTIPODETAFORMAPAGO));

		if(this.detaformapagoConstantesFunciones.mostrarid_tipo_deta_forma_pagoDetaFormaPago && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetaFormaPagoConstantesFunciones.LABEL_IDTIPODETAFORMAPAGO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new TipoDetaFormaPagoTableCell(this.tipodetaformapagosForeignKey,this.detaformapagoConstantesFunciones.resaltarid_tipo_deta_forma_pagoDetaFormaPago,this,this.detaformapagoConstantesFunciones.activarid_tipo_deta_forma_pagoDetaFormaPago,iSizeTabla));
			tableColumn.setCellEditor(new TipoDetaFormaPagoTableCell(this.tipodetaformapagosForeignKey,this.detaformapagoConstantesFunciones.resaltarid_tipo_deta_forma_pagoDetaFormaPago,this,this.detaformapagoConstantesFunciones.activarid_tipo_deta_forma_pagoDetaFormaPago,true,"id_tipo_deta_forma_pagoDetaFormaPago","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new DetaFormaPagoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetaFormaPago.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetaFormaPago,DetaFormaPagoConstantesFunciones.LABEL_IDDETAFORMAPAGOFACTU));

		if(this.detaformapagoConstantesFunciones.mostrarid_deta_forma_pago_factuDetaFormaPago && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetaFormaPagoConstantesFunciones.LABEL_IDDETAFORMAPAGOFACTU,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new DetaFormaPagoFactuTableCell(this.detaformapagofactusForeignKey,this.detaformapagoConstantesFunciones.resaltarid_deta_forma_pago_factuDetaFormaPago,this,this.detaformapagoConstantesFunciones.activarid_deta_forma_pago_factuDetaFormaPago,iSizeTabla));
			tableColumn.setCellEditor(new DetaFormaPagoFactuTableCell(this.detaformapagofactusForeignKey,this.detaformapagoConstantesFunciones.resaltarid_deta_forma_pago_factuDetaFormaPago,this,this.detaformapagoConstantesFunciones.activarid_deta_forma_pago_factuDetaFormaPago,true,"id_deta_forma_pago_factuDetaFormaPago","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new DetaFormaPagoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetaFormaPago.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetaFormaPago,DetaFormaPagoConstantesFunciones.LABEL_IDCUENTACONTABLE));

		if(this.detaformapagoConstantesFunciones.mostrarid_cuenta_contableDetaFormaPago && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetaFormaPagoConstantesFunciones.LABEL_IDCUENTACONTABLE,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new CuentaContableTableCell(this.cuentacontablesForeignKey,this.detaformapagoConstantesFunciones.resaltarid_cuenta_contableDetaFormaPago,this,this.detaformapagoConstantesFunciones.activarid_cuenta_contableDetaFormaPago,iSizeTabla));
			tableColumn.setCellEditor(new CuentaContableTableCell(this.cuentacontablesForeignKey,this.detaformapagoConstantesFunciones.resaltarid_cuenta_contableDetaFormaPago,this,this.detaformapagoConstantesFunciones.activarid_cuenta_contableDetaFormaPago,true,"id_cuenta_contableDetaFormaPago","CON_BUSQUEDA"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70);
			//tableColumn.addPropertyChangeListener(new DetaFormaPagoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetaFormaPago.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetaFormaPago,DetaFormaPagoConstantesFunciones.LABEL_IDTIPORETENCION));

		if(this.detaformapagoConstantesFunciones.mostrarid_tipo_retencionDetaFormaPago && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetaFormaPagoConstantesFunciones.LABEL_IDTIPORETENCION,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new TipoRetencionTableCell(this.tiporetencionsForeignKey,this.detaformapagoConstantesFunciones.resaltarid_tipo_retencionDetaFormaPago,this,this.detaformapagoConstantesFunciones.activarid_tipo_retencionDetaFormaPago,iSizeTabla));
			tableColumn.setCellEditor(new TipoRetencionTableCell(this.tiporetencionsForeignKey,this.detaformapagoConstantesFunciones.resaltarid_tipo_retencionDetaFormaPago,this,this.detaformapagoConstantesFunciones.activarid_tipo_retencionDetaFormaPago,true,"id_tipo_retencionDetaFormaPago","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new DetaFormaPagoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetaFormaPago.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetaFormaPago,DetaFormaPagoConstantesFunciones.LABEL_VALOR));

		if(this.detaformapagoConstantesFunciones.mostrarvalorDetaFormaPago && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetaFormaPagoConstantesFunciones.LABEL_VALOR,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.detaformapagoConstantesFunciones.resaltarvalorDetaFormaPago,this.detaformapagoConstantesFunciones.activarvalorDetaFormaPago,iSizeTabla,this,true,"valorDetaFormaPago","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.detaformapagoConstantesFunciones.resaltarvalorDetaFormaPago,this.detaformapagoConstantesFunciones.activarvalorDetaFormaPago,this,true,"valorDetaFormaPago","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new DetaFormaPagoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetaFormaPago.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetaFormaPago,DetaFormaPagoConstantesFunciones.LABEL_FECHAINICIAL));

		if(this.detaformapagoConstantesFunciones.mostrarfecha_inicialDetaFormaPago && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetaFormaPagoConstantesFunciones.LABEL_FECHAINICIAL,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new DateRenderer(this.detaformapagoConstantesFunciones.resaltarfecha_inicialDetaFormaPago,this.detaformapagoConstantesFunciones.activarfecha_inicialDetaFormaPago,iSizeTabla,this,true,"fecha_inicialDetaFormaPago","BASICO"));
			tableColumn.setCellEditor(new DateEditorRenderer(this.detaformapagoConstantesFunciones.resaltarfecha_inicialDetaFormaPago,this.detaformapagoConstantesFunciones.activarfecha_inicialDetaFormaPago,this,true,"fecha_inicialDetaFormaPago","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30);
			//tableColumn.addPropertyChangeListener(new DetaFormaPagoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetaFormaPago.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetaFormaPago,DetaFormaPagoConstantesFunciones.LABEL_FECHAFINAL));

		if(this.detaformapagoConstantesFunciones.mostrarfecha_finalDetaFormaPago && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetaFormaPagoConstantesFunciones.LABEL_FECHAFINAL,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new DateRenderer(this.detaformapagoConstantesFunciones.resaltarfecha_finalDetaFormaPago,this.detaformapagoConstantesFunciones.activarfecha_finalDetaFormaPago,iSizeTabla,this,true,"fecha_finalDetaFormaPago","BASICO"));
			tableColumn.setCellEditor(new DateEditorRenderer(this.detaformapagoConstantesFunciones.resaltarfecha_finalDetaFormaPago,this.detaformapagoConstantesFunciones.activarfecha_finalDetaFormaPago,this,true,"fecha_finalDetaFormaPago","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30);
			//tableColumn.addPropertyChangeListener(new DetaFormaPagoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetaFormaPago.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetaFormaPago,DetaFormaPagoConstantesFunciones.LABEL_PORCENTAJE));

		if(this.detaformapagoConstantesFunciones.mostrarporcentajeDetaFormaPago && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetaFormaPagoConstantesFunciones.LABEL_PORCENTAJE,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.detaformapagoConstantesFunciones.resaltarporcentajeDetaFormaPago,this.detaformapagoConstantesFunciones.activarporcentajeDetaFormaPago,iSizeTabla,this,true,"porcentajeDetaFormaPago","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.detaformapagoConstantesFunciones.resaltarporcentajeDetaFormaPago,this.detaformapagoConstantesFunciones.activarporcentajeDetaFormaPago,this,true,"porcentajeDetaFormaPago","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new DetaFormaPagoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetaFormaPago.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetaFormaPago,DetaFormaPagoConstantesFunciones.LABEL_RETENCION));

		if(this.detaformapagoConstantesFunciones.mostrarretencionDetaFormaPago && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetaFormaPagoConstantesFunciones.LABEL_RETENCION,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.detaformapagoConstantesFunciones.resaltarretencionDetaFormaPago,this.detaformapagoConstantesFunciones.activarretencionDetaFormaPago,iSizeTabla,this,true,"retencionDetaFormaPago","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.detaformapagoConstantesFunciones.resaltarretencionDetaFormaPago,this.detaformapagoConstantesFunciones.activarretencionDetaFormaPago,this,true,"retencionDetaFormaPago","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new DetaFormaPagoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetaFormaPago.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetaFormaPago,DetaFormaPagoConstantesFunciones.LABEL_PORCENTAJERETENCION));

		if(this.detaformapagoConstantesFunciones.mostrarporcentaje_retencionDetaFormaPago && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetaFormaPagoConstantesFunciones.LABEL_PORCENTAJERETENCION,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.detaformapagoConstantesFunciones.resaltarporcentaje_retencionDetaFormaPago,this.detaformapagoConstantesFunciones.activarporcentaje_retencionDetaFormaPago,iSizeTabla,this,true,"porcentaje_retencionDetaFormaPago","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.detaformapagoConstantesFunciones.resaltarporcentaje_retencionDetaFormaPago,this.detaformapagoConstantesFunciones.activarporcentaje_retencionDetaFormaPago,this,true,"porcentaje_retencionDetaFormaPago","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new DetaFormaPagoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetaFormaPago.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetaFormaPago,DetaFormaPagoConstantesFunciones.LABEL_BASERETENCION));

		if(this.detaformapagoConstantesFunciones.mostrarbase_retencionDetaFormaPago && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetaFormaPagoConstantesFunciones.LABEL_BASERETENCION,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.detaformapagoConstantesFunciones.resaltarbase_retencionDetaFormaPago,this.detaformapagoConstantesFunciones.activarbase_retencionDetaFormaPago,iSizeTabla,this,true,"base_retencionDetaFormaPago","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.detaformapagoConstantesFunciones.resaltarbase_retencionDetaFormaPago,this.detaformapagoConstantesFunciones.activarbase_retencionDetaFormaPago,this,true,"base_retencionDetaFormaPago","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new DetaFormaPagoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetaFormaPago.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetaFormaPago,DetaFormaPagoConstantesFunciones.LABEL_VALORRETENCION));

		if(this.detaformapagoConstantesFunciones.mostrarvalor_retencionDetaFormaPago && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetaFormaPagoConstantesFunciones.LABEL_VALORRETENCION,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.detaformapagoConstantesFunciones.resaltarvalor_retencionDetaFormaPago,this.detaformapagoConstantesFunciones.activarvalor_retencionDetaFormaPago,iSizeTabla,this,true,"valor_retencionDetaFormaPago","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.detaformapagoConstantesFunciones.resaltarvalor_retencionDetaFormaPago,this.detaformapagoConstantesFunciones.activarvalor_retencionDetaFormaPago,this,true,"valor_retencionDetaFormaPago","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new DetaFormaPagoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetaFormaPago.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetaFormaPago,DetaFormaPagoConstantesFunciones.LABEL_NUMERORETENCION));

		if(this.detaformapagoConstantesFunciones.mostrarnumero_retencionDetaFormaPago && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetaFormaPagoConstantesFunciones.LABEL_NUMERORETENCION,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.detaformapagoConstantesFunciones.resaltarnumero_retencionDetaFormaPago,this.detaformapagoConstantesFunciones.activarnumero_retencionDetaFormaPago,iSizeTabla,this,true,"numero_retencionDetaFormaPago","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.detaformapagoConstantesFunciones.resaltarnumero_retencionDetaFormaPago,this.detaformapagoConstantesFunciones.activarnumero_retencionDetaFormaPago,this,true,"numero_retencionDetaFormaPago","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new DetaFormaPagoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetaFormaPago.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetaFormaPago,DetaFormaPagoConstantesFunciones.LABEL_NUMERODIAS));

		if(this.detaformapagoConstantesFunciones.mostrarnumero_diasDetaFormaPago && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetaFormaPagoConstantesFunciones.LABEL_NUMERODIAS,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.detaformapagoConstantesFunciones.resaltarnumero_diasDetaFormaPago,this.detaformapagoConstantesFunciones.activarnumero_diasDetaFormaPago,iSizeTabla,this,true,"numero_diasDetaFormaPago","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.detaformapagoConstantesFunciones.resaltarnumero_diasDetaFormaPago,this.detaformapagoConstantesFunciones.activarnumero_diasDetaFormaPago,this,true,"numero_diasDetaFormaPago","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new DetaFormaPagoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetaFormaPago.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetaFormaPago,DetaFormaPagoConstantesFunciones.LABEL_NUMEROCUOTA));

		if(this.detaformapagoConstantesFunciones.mostrarnumero_cuotaDetaFormaPago && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetaFormaPagoConstantesFunciones.LABEL_NUMEROCUOTA,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.detaformapagoConstantesFunciones.resaltarnumero_cuotaDetaFormaPago,this.detaformapagoConstantesFunciones.activarnumero_cuotaDetaFormaPago,iSizeTabla,this,true,"numero_cuotaDetaFormaPago","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.detaformapagoConstantesFunciones.resaltarnumero_cuotaDetaFormaPago,this.detaformapagoConstantesFunciones.activarnumero_cuotaDetaFormaPago,this,true,"numero_cuotaDetaFormaPago","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new DetaFormaPagoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetaFormaPago.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetaFormaPago,DetaFormaPagoConstantesFunciones.LABEL_DESCRIPCION));

		if(this.detaformapagoConstantesFunciones.mostrardescripcionDetaFormaPago && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetaFormaPagoConstantesFunciones.LABEL_DESCRIPCION,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.detaformapagoConstantesFunciones.resaltardescripcionDetaFormaPago,this.detaformapagoConstantesFunciones.activardescripcionDetaFormaPago,iSizeTabla,this,true,"descripcionDetaFormaPago","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.detaformapagoConstantesFunciones.resaltardescripcionDetaFormaPago,this.detaformapagoConstantesFunciones.activardescripcionDetaFormaPago,this,true,"descripcionDetaFormaPago","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new DetaFormaPagoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetaFormaPago.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetaFormaPago,DetaFormaPagoConstantesFunciones.LABEL_IDANIO));

		if(this.detaformapagoConstantesFunciones.mostrarid_anioDetaFormaPago && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetaFormaPagoConstantesFunciones.LABEL_IDANIO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new AnioTableCell(this.aniosForeignKey,this.detaformapagoConstantesFunciones.resaltarid_anioDetaFormaPago,this,this.detaformapagoConstantesFunciones.activarid_anioDetaFormaPago,iSizeTabla));
			tableColumn.setCellEditor(new AnioTableCell(this.aniosForeignKey,this.detaformapagoConstantesFunciones.resaltarid_anioDetaFormaPago,this,this.detaformapagoConstantesFunciones.activarid_anioDetaFormaPago,true,"id_anioDetaFormaPago","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new DetaFormaPagoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetaFormaPago.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetaFormaPago,DetaFormaPagoConstantesFunciones.LABEL_IDMES));

		if(this.detaformapagoConstantesFunciones.mostrarid_mesDetaFormaPago && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetaFormaPagoConstantesFunciones.LABEL_IDMES,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new MesTableCell(this.messForeignKey,this.detaformapagoConstantesFunciones.resaltarid_mesDetaFormaPago,this,this.detaformapagoConstantesFunciones.activarid_mesDetaFormaPago,iSizeTabla));
			tableColumn.setCellEditor(new MesTableCell(this.messForeignKey,this.detaformapagoConstantesFunciones.resaltarid_mesDetaFormaPago,this,this.detaformapagoConstantesFunciones.activarid_mesDetaFormaPago,true,"id_mesDetaFormaPago","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new DetaFormaPagoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}
			
		} else {
		}			
					
		if(!this.detaformapagoSessionBean.getEsGuardarRelacionado()
			&& !this.esParaBusquedaForeignKey) {
			

			if(this.isTienePermisosBancoFormaPago && this.detaformapagoConstantesFunciones.mostrarBancoFormaPagoDetaFormaPago && !DetaFormaPagoConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Banco Forma Pagos");
				tableColumn.setHeaderValue("Banco Forma Pagos");
				tableColumn.setCellRenderer(new BancoFormaPagoTableCell(detaformapagoConstantesFunciones.resaltarBancoFormaPagoDetaFormaPago,this,this.detaformapagoConstantesFunciones.activarBancoFormaPagoDetaFormaPago));
				tableColumn.setCellEditor(new BancoFormaPagoTableCell(detaformapagoConstantesFunciones.resaltarBancoFormaPagoDetaFormaPago,this,this.detaformapagoConstantesFunciones.activarBancoFormaPagoDetaFormaPago));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosDetaFormaPago.addColumn(tableColumn);
			}
		}
		
		if(true) {
			String sLabelColumnAccion="Editar";
			String sLabelColumnAccionEli="Eli";
			
			if(this.esParaBusquedaForeignKey)  {
				sLabelColumnAccion="Seleccionar";
				
				//LO MISMO QUE ELSE
				tableColumn= new TableColumn();
				tableColumn.setIdentifier(sLabelColumnAccion);
				tableColumn.setHeaderValue(sLabelColumnAccion);
				tableColumn.setCellRenderer(new IdTableCell(this,false,false,this.detaformapagoSessionBean.getEsGuardarRelacionado(),iSizeTabla));
				tableColumn.setCellEditor(new IdTableCell(this,false,false,this.detaformapagoSessionBean.getEsGuardarRelacionado(),iSizeTabla));
	
				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				
				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
				
				this.jTableDatosDetaFormaPago.addColumn(tableColumn);
			
			} else {				
				
				//LO MISMO QUE IF
				
				tableColumn= new TableColumn();
				tableColumn.setIdentifier(sLabelColumnAccion);
				tableColumn.setHeaderValue(sLabelColumnAccion);
				tableColumn.setCellRenderer(new IdTableCell(this,false,false,this.detaformapagoSessionBean.getEsGuardarRelacionado(),iSizeTabla));
				tableColumn.setCellEditor(new IdTableCell(this,false,false,this.detaformapagoSessionBean.getEsGuardarRelacionado(),iSizeTabla));
		
				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				
				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
				
				this.jTableDatosDetaFormaPago.addColumn(tableColumn);				
					
				//ELIMINAR
				if(this.isPermisoEliminarDetaFormaPago && this.isPermisoGuardarCambiosDetaFormaPago) {
					tableColumn= new TableColumn();
					tableColumn.setIdentifier(Constantes2.S_ELI);
					tableColumn.setHeaderValue(sLabelColumnAccionEli);
					tableColumn.setCellRenderer(new IdTableCell(this,false,true,this.detaformapagoSessionBean.getEsGuardarRelacionado(),iSizeTabla));
					tableColumn.setCellEditor(new IdTableCell(this,false,true,this.detaformapagoSessionBean.getEsGuardarRelacionado(),iSizeTabla));
			
					tableColumn.setPreferredWidth(65); 	 
					tableColumn.setWidth(65); 	 
					tableColumn.setMinWidth(65); 
					tableColumn.setMaxWidth(65);
					
					this.iWidthTableDefinicion+=65;
						
					this.jTableDatosDetaFormaPago.addColumn(tableColumn);
				}
			}			
						
			if(this.conMaximoRelaciones && this.detaformapagoSessionBean.getConGuardarRelaciones()) {
				if(this.conFuncionalidadRelaciones) {
					tableColumn= new TableColumn();
					tableColumn.setIdentifier("Editar Rel");
					tableColumn.setHeaderValue("Editar Rel");
					tableColumn.setCellRenderer(new IdTableCell(this,true,false,iSizeTabla));
					tableColumn.setCellEditor(new IdTableCell(this,true,false,iSizeTabla));
		
					tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
					tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
					tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 
					tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 
					
					this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
				
					this.jTableDatosDetaFormaPago.addColumn(tableColumn);
				}
			}
			
			/*
			tableColumn= new TableColumn();
			tableColumn.setIdentifier(Constantes2.S_SELECCIONAR);
			tableColumn.setHeaderValue(Constantes2.S_SELECCIONAR);
			tableColumn.setCellRenderer(new IdSeleccionarTableCell(this));
			tableColumn.setCellEditor(new IdSeleccionarTableCell(this));
			
			tableColumn.setPreferredWidth(30); 	 
			tableColumn.setWidth(30); 	 
			tableColumn.setMinWidth(30); 
			
			this.iWidthTableDefinicion+=30;
			
			this.jTableDatosDetaFormaPago.addColumn(tableColumn);
			*/
		}
		
		Integer iUltimaColumna=0;//1
		Integer iNuevaPosicionColumna=0;
		
		
		//PERMITE ELIMINAR SIMPLE
		if(!this.esParaBusquedaForeignKey)  {
			if(this.isPermisoEliminarDetaFormaPago && this.isPermisoGuardarCambiosDetaFormaPago) {
				iUltimaColumna++;
			}	
		}
		
		//PERMITE EDITAR SIMPLE
		iUltimaColumna++;	
		
				
		if(this.conFuncionalidadRelaciones) {
			if(this.conMaximoRelaciones && this.detaformapagoSessionBean.getConGuardarRelaciones()) {			
				//PERMITE EDITAR RELACIONES
				iUltimaColumna++;//2
			}
		}
		
		//MOVIA SELECCIONAR
		//iUltimaColumna++;
		
		if(!this.esParaBusquedaForeignKey)  {
			if(this.isPermisoEliminarDetaFormaPago && this.isPermisoGuardarCambiosDetaFormaPago) {
				//REUBICA ELIMINAR SIMPLE
				jTableDatosDetaFormaPago.moveColumn(this.jTableDatosDetaFormaPago.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1,-2 o -3
					
				iUltimaColumna--;
			}
		}
		//REUBICA EDITAR SIMPLE
		jTableDatosDetaFormaPago.moveColumn(this.jTableDatosDetaFormaPago.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1,-2 o -3				
		
		
		if(this.conFuncionalidadRelaciones) {
			if(this.conMaximoRelaciones && this.detaformapagoSessionBean.getConGuardarRelaciones()) {	
				if(iUltimaColumna>1) {
					iUltimaColumna--;
				}
				
				//iNuevaPosicionColumna++;
				
				//REUBICA EDITAR RELACIONES
				jTableDatosDetaFormaPago.moveColumn(this.jTableDatosDetaFormaPago.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1
			}
		}
		
		
		//REUBICABA SELECCIONAR
		/*
		if(iUltimaColumna>1) {
			iUltimaColumna--;
		}
		
		//iNuevaPosicionColumna++;
			
		//REUBICA SELECCIONAR FILA CHECK
		jTableDatosDetaFormaPago.moveColumn(this.jTableDatosDetaFormaPago.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1		
		*/
		
		//DEFINEN HEADERS
		final TableCellRenderer tableHeaderDefaultCellRenderer = this.jTableDatosDetaFormaPago.getTableHeader().getDefaultRenderer();
		
		this.jTableDatosDetaFormaPago.getTableHeader().setDefaultRenderer(new TableCellRendererHeader(this.jTableDatosDetaFormaPago,tableHeaderDefaultCellRenderer));
	    
		TableColumn column=null;
		
		if(!DetaFormaPagoJInternalFrame.ISBINDING_MANUAL_TABLA) {
			for(int i = 0; i < this.jTableDatosDetaFormaPago.getColumnModel().getColumnCount(); i++) { 
				column = this.jTableDatosDetaFormaPago.getColumnModel().getColumn(i); 
				
				if(column.getIdentifier()!=null) {
					//SI SE UTILIZA UN HEADER ES GENERICO
					//column.setHeaderRenderer(new HeaderRenderer(column.getIdentifier().toString()));
				}
				
				if(column.getIdentifier()!=null && column.getIdentifier().equals(Constantes2.S_ELI)) {
					continue;
				}
				
				if(column.getIdentifier()!=null && column.getIdentifier().equals(Constantes2.S_SELECCIONAR)) {
					if(!DetaFormaPagoJInternalFrame.ISBINDING_MANUAL_TABLA) {
						column.setPreferredWidth(50); 	 
						column.setWidth(50); 	 
						column.setMinWidth(50); 	
						column.setMaxWidth(50); 
						
						this.iWidthTableDefinicion+=50;
					}
					
				} else {
					if(!DetaFormaPagoJInternalFrame.ISBINDING_MANUAL_TABLA) {
						column.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
						column.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
						column.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 	
						column.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 	
						
						this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
					}
				}
			}
		}
		
		this.jTableDatosDetaFormaPago.setSelectionBackground(FuncionesSwing.getColorSelectedBackground());
		this.jTableDatosDetaFormaPago.setSelectionForeground(FuncionesSwing.getColorSelectedForeground());
		
		/*
		this.jTableDatosDetaFormaPago.setDefaultRenderer(Object.class, new DefaultTableCellRenderer() {
			private static final long serialVersionUID = 1L;
			
		    @Override
		    public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
		        final Component component= super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
		        //POR DEFECTO ES MEJOR, SE PIERDE DATOS AL SELECCIONAR BLANCO LETRAS BLANCAS
				component.setBackground(row % 2 == 0 ? FuncionesSwing.getColorTextFields(Constantes2.S_FONDOCONTROL_COLOR) : Funciones2.getColorFilaTabla2()); //FuncionesSwing.getColorTextFields(Constantes2.S_FONDOCONTROL_COLOR)
				component.setForeground(Funciones2.getColorTextoFilaTabla1());
				
				try {
		        	int iSize=-999;
		        	
		        	if(conTotales) {
						//FILA TOTALES OTRO COLOR, SI TABLA NO ES UNO A UNO
			        	if(Constantes.ISUSAEJBLOGICLAYER) {
							iSize=detaformapagoLogic.getDetaFormaPagos().size()-1;
								
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							iSize=detaformapagos.size()-1;
						}
						
						if(iSize==row) {
							component.setBackground(Funciones2.getColorFilaTablaTotales());
						}
		        	}
					
					//POR EFICIENCIA NO UTILIZAR					
					//if (component instanceof JComponent) {
		            //    JComponent jcomponent = (JComponent) component;		                 		                
		        	//}				
					
				} catch (Exception e) {
					e.printStackTrace();
				}
				
		        return component;
		    }
		});
		*/
		
		//ESTA EN LA DEFINICION DE LA TABLA
		//this.jTableDatosDetaFormaPago.setRowHeight(Constantes.ISWING_ALTO_FILA_TABLA);
		
		/*
		column=this.jTableDatosDetaFormaPago.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSistema,Constantes2.S_SELECCIONAR));
		
		if(column!=null) {
			column.setPreferredWidth(25); 	 
			column.setWidth(25); 	 
			column.setMinWidth(25); 	
		}
		*/
			
			//CopyTableToTableTotal();
		} else {
			
			this.actualizarVisualTableDatosDetaFormaPago();
			
		}
	}
	
	/*
	//COPY_TABLES
	/* FALTARIA RESOLVER:
	   1 SOLO SCROLL PARA 2 TABLAS
	   COPIA EXACTA DE COLUMNAS DE UNA TABLA A OTRA, SI SE MODIFICA TAMANIO TAMBIEN LA OTRA
	*/
	
	public void jButtonIdActionPerformed(ActionEvent evt,int rowIndex,Boolean esRelaciones,Boolean esEliminar) { 
		try {
			if(!esEliminar) {
				this.estaModoSeleccionar=true;
				
				//this.isEsNuevoDetaFormaPago=false;
					
				DetaFormaPagoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.SELECTED,"FORM",this.detaformapago,new Object(),this.detaformapagoParameterGeneral,this.detaformapagoReturnGeneral);
			
				if(this.detaformapagoSessionBean.getConGuardarRelaciones()) {
					this.dStart=(double)System.currentTimeMillis();
				}
				
				if(this.jInternalFrameDetalleFormDetaFormaPago==null) {
					this.inicializarFormDetalle();
				}
				
				this.inicializarInvalidValues();
				
				int intSelectedRow = 0;
				
				if(rowIndex>=0) {
					intSelectedRow=rowIndex;
					this.jTableDatosDetaFormaPago.getSelectionModel().setSelectionInterval(intSelectedRow, intSelectedRow);
				} else {	
					intSelectedRow=this.jTableDatosDetaFormaPago.getSelectedRow();	       
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detaformapago =(DetaFormaPago) this.detaformapagoLogic.getDetaFormaPagos().toArray()[this.jTableDatosDetaFormaPago.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.detaformapago =(DetaFormaPago) this.detaformapagos.toArray()[this.jTableDatosDetaFormaPago.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//PUEDE SER PARA DUPLICADO O NUEVO TABLA
				
				if(this.detaformapago.getsType().equals("DUPLICADO")
				   || this.detaformapago.getsType().equals("NUEVO_GUARDAR_CAMBIOS")) {
					
					this.isEsNuevoDetaFormaPago=true;
				
				} else {
					this.isEsNuevoDetaFormaPago=false;	
				}
				
				//CONTROL VERSION ANTERIOR
				/*
				if(!this.detaformapagoSessionBean.getEsGuardarRelacionado()) {
					if(this.detaformapago.getId()>=0 && !this.detaformapago.getIsNew()) {						
						this.isEsNuevoDetaFormaPago=false;
						
					} else {
						this.isEsNuevoDetaFormaPago=true;
					}
					
				} else {
					//CONTROLAR PARA RELACIONADO
				}
				*/
				
				//ESTABLECE SI ES RELACIONADO O NO 
				this.habilitarDeshabilitarTipoMantenimientoDetaFormaPago(esRelaciones);						
				
				this.seleccionarDetaFormaPago(evt,null,rowIndex);
				
				//SELECCIONA ACTUAL PERO AUN NO SE HA INGRESADO AL SISTEMA
				//SE DESHABILITA POR GUARDAR CAMBIOS
				/*
				if(this.detaformapago.getId()<0) {
					this.isEsNuevoDetaFormaPago=true;
				}
				*/
				
				if(!this.esParaBusquedaForeignKey) {
					this.modificarDetaFormaPago(evt,rowIndex,esRelaciones);
				} else {
					this.seleccionarDetaFormaPago(evt,rowIndex);
				}	
				
				if(this.detaformapagoSessionBean.getConGuardarRelaciones()) {
					this.dEnd=(double)System.currentTimeMillis();					
					this.dDif=this.dEnd - this.dStart;
					
					if(Constantes.ISDEVELOPING) {
						System.out.println("Tiempo(ms) Seleccion DetaFormaPago: " + this.dDif); 
					}
				}								
				
				DetaFormaPagoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.SELECTED,"FORM",this.detaformapago,new Object(),this.detaformapagoParameterGeneral,this.detaformapagoReturnGeneral);
				
			} else {
				this.estaModoEliminarGuardarCambios=true;
				
				this.seleccionarDetaFormaPago(evt,null,rowIndex);
				
				if(this.permiteMantenimiento(this.detaformapago)) {
					if(this.detaformapago.getId()>0) {
						this.detaformapago.setIsDeleted(true);
						
						this.detaformapagosEliminados.add(this.detaformapago);
					}
					
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						this.detaformapagoLogic.getDetaFormaPagos().remove(this.detaformapago);
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						this.detaformapagos.remove(this.detaformapago);				
					}
					
					
					((DetaFormaPagoModel) this.jTableDatosDetaFormaPago.getModel()).fireTableRowsDeleted(rowIndex,rowIndex);
					
					this.actualizarFilaTotales();
					
					this.inicializarActualizarBindingTablaDetaFormaPago(false);					
				}								
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException2(this, e,logger,DetaFormaPagoConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoSeleccionar=false;				
			this.estaModoEliminarGuardarCambios=false;
		}
	}
	
	
	public void seleccionarDetaFormaPago(ActionEvent evt,javax.swing.event.ListSelectionEvent evt2,int rowIndex) throws Exception { 
		try {
			//SI PUEDE SER NUEVO Y SELECCIONAR (PARA DUPLICAR Y NUEVO TABLA)
			//if(!this.isEsNuevoDetaFormaPago) {
			
			if(this.jInternalFrameDetalleFormDetaFormaPago==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
				int intSelectedRow = 0;
				
				if(rowIndex>=0) {
					intSelectedRow=rowIndex;
					this.jTableDatosDetaFormaPago.getSelectionModel().setSelectionInterval(intSelectedRow, intSelectedRow);
				} else {	
					intSelectedRow=this.jTableDatosDetaFormaPago.getSelectedRow();	       
				}
				
				//CUANDO SE RECARGA TABLA TAMBIEN SE SELECCIONA PERO CON -1 POR LO QUE SE NECESITA VALIDAR ANTES
				if(intSelectedRow<0) {
					return;
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detaformapago =(DetaFormaPago) this.detaformapagoLogic.getDetaFormaPagos().toArray()[this.jTableDatosDetaFormaPago.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.detaformapago =(DetaFormaPago) this.detaformapagos.toArray()[this.jTableDatosDetaFormaPago.convertRowIndexToModel(intSelectedRow)];
				}
				
				if(DetaFormaPagoJInternalFrame.ISBINDING_MANUAL_TABLA) {
					this.setVariablesObjetoActualToFormularioDetaFormaPago(this.detaformapago);
				}
				
				//ARCHITECTURE
				try {
					

					//Empresa
					if(!this.detaformapagoConstantesFunciones.cargarid_empresaDetaFormaPago || this.detaformapagoConstantesFunciones.event_dependid_empresaDetaFormaPago) {
						//this.cargarCombosEmpresasForeignKeyLista(" where id="+this.detaformapago.getid_empresa());
									//this.inicializarActualizarBindingDetaFormaPago(false,false);
						this.empresasForeignKey=new ArrayList<Empresa>();

						if(detaformapago.getEmpresa()!=null) {
							this.empresasForeignKey.add(detaformapago.getEmpresa());
						}

						this.addItemDefectoCombosForeignKeyEmpresa();
						this.cargarCombosFrameEmpresasForeignKey("Todos");
					}
					this.setActualEmpresaForeignKey(this.detaformapago.getid_empresa(),false,"Formulario");

					//Sucursal
					if(!this.detaformapagoConstantesFunciones.cargarid_sucursalDetaFormaPago || this.detaformapagoConstantesFunciones.event_dependid_sucursalDetaFormaPago) {
						//this.cargarCombosSucursalsForeignKeyLista(" where id="+this.detaformapago.getid_sucursal());
									//this.inicializarActualizarBindingDetaFormaPago(false,false);
						this.sucursalsForeignKey=new ArrayList<Sucursal>();

						if(detaformapago.getSucursal()!=null) {
							this.sucursalsForeignKey.add(detaformapago.getSucursal());
						}

						this.addItemDefectoCombosForeignKeySucursal();
						this.cargarCombosFrameSucursalsForeignKey("Todos");
					}
					this.setActualSucursalForeignKey(this.detaformapago.getid_sucursal(),false,"Formulario");

					//Ejercicio
					if(!this.detaformapagoConstantesFunciones.cargarid_ejercicioDetaFormaPago || this.detaformapagoConstantesFunciones.event_dependid_ejercicioDetaFormaPago) {
						//this.cargarCombosEjerciciosForeignKeyLista(" where id="+this.detaformapago.getid_ejercicio());
									//this.inicializarActualizarBindingDetaFormaPago(false,false);
						this.ejerciciosForeignKey=new ArrayList<Ejercicio>();

						if(detaformapago.getEjercicio()!=null) {
							this.ejerciciosForeignKey.add(detaformapago.getEjercicio());
						}

						this.addItemDefectoCombosForeignKeyEjercicio();
						this.cargarCombosFrameEjerciciosForeignKey("Todos");
					}
					this.setActualEjercicioForeignKey(this.detaformapago.getid_ejercicio(),false,"Formulario");

					//Periodo
					if(!this.detaformapagoConstantesFunciones.cargarid_periodoDetaFormaPago || this.detaformapagoConstantesFunciones.event_dependid_periodoDetaFormaPago) {
						//this.cargarCombosPeriodosForeignKeyLista(" where id="+this.detaformapago.getid_periodo());
									//this.inicializarActualizarBindingDetaFormaPago(false,false);
						this.periodosForeignKey=new ArrayList<Periodo>();

						if(detaformapago.getPeriodo()!=null) {
							this.periodosForeignKey.add(detaformapago.getPeriodo());
						}

						this.addItemDefectoCombosForeignKeyPeriodo();
						this.cargarCombosFramePeriodosForeignKey("Todos");
					}
					this.setActualPeriodoForeignKey(this.detaformapago.getid_periodo(),false,"Formulario");

					//Factura
					if(!this.detaformapagoConstantesFunciones.cargarid_facturaDetaFormaPago || this.detaformapagoConstantesFunciones.event_dependid_facturaDetaFormaPago) {
						//this.cargarCombosFacturasForeignKeyLista(" where id="+this.detaformapago.getid_factura());
									//this.inicializarActualizarBindingDetaFormaPago(false,false);
						this.facturasForeignKey=new ArrayList<Factura>();

						if(detaformapago.getFactura()!=null) {
							this.facturasForeignKey.add(detaformapago.getFactura());
						}

						this.addItemDefectoCombosForeignKeyFactura();
						this.cargarCombosFrameFacturasForeignKey("Todos");
					}
					this.setActualFacturaForeignKey(this.detaformapago.getid_factura(),false,"Formulario");

					//TipoFormaPago
					if(!this.detaformapagoConstantesFunciones.cargarid_tipo_forma_pagoDetaFormaPago || this.detaformapagoConstantesFunciones.event_dependid_tipo_forma_pagoDetaFormaPago) {
						//this.cargarCombosTipoFormaPagosForeignKeyLista(" where id="+this.detaformapago.getid_tipo_forma_pago());
									//this.inicializarActualizarBindingDetaFormaPago(false,false);
						this.tipoformapagosForeignKey=new ArrayList<TipoFormaPago>();

						if(detaformapago.getTipoFormaPago()!=null) {
							this.tipoformapagosForeignKey.add(detaformapago.getTipoFormaPago());
						}

						this.addItemDefectoCombosForeignKeyTipoFormaPago();
						this.cargarCombosFrameTipoFormaPagosForeignKey("Todos");
					}
					this.setActualTipoFormaPagoForeignKey(this.detaformapago.getid_tipo_forma_pago(),false,"Formulario");

					//TipoDetaFormaPago
					if(!this.detaformapagoConstantesFunciones.cargarid_tipo_deta_forma_pagoDetaFormaPago || this.detaformapagoConstantesFunciones.event_dependid_tipo_deta_forma_pagoDetaFormaPago) {
						//this.cargarCombosTipoDetaFormaPagosForeignKeyLista(" where id="+this.detaformapago.getid_tipo_deta_forma_pago());
									//this.inicializarActualizarBindingDetaFormaPago(false,false);
						this.tipodetaformapagosForeignKey=new ArrayList<TipoDetaFormaPago>();

						if(detaformapago.getTipoDetaFormaPago()!=null) {
							this.tipodetaformapagosForeignKey.add(detaformapago.getTipoDetaFormaPago());
						}

						this.addItemDefectoCombosForeignKeyTipoDetaFormaPago();
						this.cargarCombosFrameTipoDetaFormaPagosForeignKey("Todos");
					}
					this.setActualTipoDetaFormaPagoForeignKey(this.detaformapago.getid_tipo_deta_forma_pago(),false,"Formulario");

					//DetaFormaPagoFactu
					if(!this.detaformapagoConstantesFunciones.cargarid_deta_forma_pago_factuDetaFormaPago || this.detaformapagoConstantesFunciones.event_dependid_deta_forma_pago_factuDetaFormaPago) {
						//this.cargarCombosDetaFormaPagoFactusForeignKeyLista(" where id="+this.detaformapago.getid_deta_forma_pago_factu());
									//this.inicializarActualizarBindingDetaFormaPago(false,false);
						this.detaformapagofactusForeignKey=new ArrayList<DetaFormaPagoFactu>();

						if(detaformapago.getDetaFormaPagoFactu()!=null) {
							this.detaformapagofactusForeignKey.add(detaformapago.getDetaFormaPagoFactu());
						}

						this.addItemDefectoCombosForeignKeyDetaFormaPagoFactu();
						this.cargarCombosFrameDetaFormaPagoFactusForeignKey("Todos");
					}
					this.setActualDetaFormaPagoFactuForeignKey(this.detaformapago.getid_deta_forma_pago_factu(),false,"Formulario");

					//CuentaContable
					if(!this.detaformapagoConstantesFunciones.cargarid_cuenta_contableDetaFormaPago || this.detaformapagoConstantesFunciones.event_dependid_cuenta_contableDetaFormaPago) {
						//this.cargarCombosCuentaContablesForeignKeyLista(" where id="+this.detaformapago.getid_cuenta_contable());
									//this.inicializarActualizarBindingDetaFormaPago(false,false);
						this.cuentacontablesForeignKey=new ArrayList<CuentaContable>();

						if(detaformapago.getCuentaContable()!=null) {
							this.cuentacontablesForeignKey.add(detaformapago.getCuentaContable());
						}

						this.addItemDefectoCombosForeignKeyCuentaContable();
						this.cargarCombosFrameCuentaContablesForeignKey("Todos");
					}
					this.setActualCuentaContableForeignKey(this.detaformapago.getid_cuenta_contable(),false,"Formulario");

					//TipoRetencion
					if(!this.detaformapagoConstantesFunciones.cargarid_tipo_retencionDetaFormaPago || this.detaformapagoConstantesFunciones.event_dependid_tipo_retencionDetaFormaPago) {
						//this.cargarCombosTipoRetencionsForeignKeyLista(" where id="+this.detaformapago.getid_tipo_retencion());
									//this.inicializarActualizarBindingDetaFormaPago(false,false);
						this.tiporetencionsForeignKey=new ArrayList<TipoRetencion>();

						if(detaformapago.getTipoRetencion()!=null) {
							this.tiporetencionsForeignKey.add(detaformapago.getTipoRetencion());
						}

						this.addItemDefectoCombosForeignKeyTipoRetencion();
						this.cargarCombosFrameTipoRetencionsForeignKey("Todos");
					}
					this.setActualTipoRetencionForeignKey(this.detaformapago.getid_tipo_retencion(),false,"Formulario");

					//Anio
					if(!this.detaformapagoConstantesFunciones.cargarid_anioDetaFormaPago || this.detaformapagoConstantesFunciones.event_dependid_anioDetaFormaPago) {
						//this.cargarCombosAniosForeignKeyLista(" where id="+this.detaformapago.getid_anio());
									//this.inicializarActualizarBindingDetaFormaPago(false,false);
						this.aniosForeignKey=new ArrayList<Anio>();

						if(detaformapago.getAnio()!=null) {
							this.aniosForeignKey.add(detaformapago.getAnio());
						}

						this.addItemDefectoCombosForeignKeyAnio();
						this.cargarCombosFrameAniosForeignKey("Todos");
					}
					this.setActualAnioForeignKey(this.detaformapago.getid_anio(),false,"Formulario");

					//Mes
					if(!this.detaformapagoConstantesFunciones.cargarid_mesDetaFormaPago || this.detaformapagoConstantesFunciones.event_dependid_mesDetaFormaPago) {
						//this.cargarCombosMessForeignKeyLista(" where id="+this.detaformapago.getid_mes());
									//this.inicializarActualizarBindingDetaFormaPago(false,false);
						this.messForeignKey=new ArrayList<Mes>();

						if(detaformapago.getMes()!=null) {
							this.messForeignKey.add(detaformapago.getMes());
						}

						this.addItemDefectoCombosForeignKeyMes();
						this.cargarCombosFrameMessForeignKey("Todos");
					}
					this.setActualMesForeignKey(this.detaformapago.getid_mes(),false,"Formulario");
				} catch(Exception e) {
					throw e;
				}
				
				this.actualizarEstadoCeldasBotonesDetaFormaPago("s", this.isGuardarCambiosEnLote, this.isEsMantenimientoRelacionado);
				
				//NO FUNCIONA BINDING PERO SE MANTIENE
				this.inicializarActualizarBindingBotonesDetaFormaPago(false) ;
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualDetaFormaPago() ;
			//}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetaFormaPagoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setVariablesObjetoActualToFormularioTodoDetaFormaPago(DetaFormaPago detaformapago) throws Exception { 
		this.setVariablesObjetoActualToFormularioTodoDetaFormaPago(detaformapago,false,"NINGUNO");
	}
	
	public void setVariablesObjetoActualToFormularioTodoDetaFormaPago(DetaFormaPago detaformapago,Boolean conCargarListasDesdeObjetoActual,String sTipoEvento) throws Exception { 
		this.setVariablesObjetoActualToFormularioDetaFormaPago(detaformapago);
		
		if(conCargarListasDesdeObjetoActual) {
			this.setVariablesObjetoActualToListasForeignKeyDetaFormaPago(detaformapago,sTipoEvento);
		}
		
		this.setVariablesObjetoActualToFormularioForeignKeyDetaFormaPago(detaformapago);
	}
	
	public void setVariablesObjetoActualToFormularioDetaFormaPago(DetaFormaPago detaformapago) throws Exception { 
		try {			
			Image imageActual=null;
			ImageIcon imageIcon = null;
			
			if(this.jInternalFrameDetalleFormDetaFormaPago==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			
			this.jInternalFrameDetalleFormDetaFormaPago.jLabelidDetaFormaPago.setText(detaformapago.getId().toString());
			this.jInternalFrameDetalleFormDetaFormaPago.jTextFieldvalorDetaFormaPago.setText(detaformapago.getvalor().toString());
			this.jInternalFrameDetalleFormDetaFormaPago.jDateChooserfecha_inicialDetaFormaPago.setDate(detaformapago.getfecha_inicial());
			this.jInternalFrameDetalleFormDetaFormaPago.jDateChooserfecha_finalDetaFormaPago.setDate(detaformapago.getfecha_final());
			this.jInternalFrameDetalleFormDetaFormaPago.jTextFieldporcentajeDetaFormaPago.setText(detaformapago.getporcentaje().toString());
			this.jInternalFrameDetalleFormDetaFormaPago.jTextFieldretencionDetaFormaPago.setText(detaformapago.getretencion().toString());
			this.jInternalFrameDetalleFormDetaFormaPago.jTextFieldporcentaje_retencionDetaFormaPago.setText(detaformapago.getporcentaje_retencion().toString());
			this.jInternalFrameDetalleFormDetaFormaPago.jTextFieldbase_retencionDetaFormaPago.setText(detaformapago.getbase_retencion().toString());
			this.jInternalFrameDetalleFormDetaFormaPago.jTextFieldvalor_retencionDetaFormaPago.setText(detaformapago.getvalor_retencion().toString());
			this.jInternalFrameDetalleFormDetaFormaPago.jTextFieldnumero_retencionDetaFormaPago.setText(detaformapago.getnumero_retencion());
			this.jInternalFrameDetalleFormDetaFormaPago.jTextFieldnumero_diasDetaFormaPago.setText(detaformapago.getnumero_dias().toString());
			this.jInternalFrameDetalleFormDetaFormaPago.jTextFieldnumero_cuotaDetaFormaPago.setText(detaformapago.getnumero_cuota().toString());
			this.jInternalFrameDetalleFormDetaFormaPago.jTextAreadescripcionDetaFormaPago.setText(detaformapago.getdescripcion());
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,DetaFormaPagoConstantesFunciones.CLASSNAME);
		}
	}
		
	public void actualizarInformacion(String sTipo,DetaFormaPago detaformapagoLocal) throws Exception {
		this.actualizarInformacion(sTipo,false,detaformapagoLocal);
	}	
	
	public void actualizarInformacion(String sTipo,Boolean conParametroObjeto,DetaFormaPago detaformapagoLocal) throws Exception {
		
		if(!conParametroObjeto) {
			if(!this.getEsControlTabla()) {
				detaformapagoLocal=this.detaformapago;
			} else {
				detaformapagoLocal=this.detaformapagoAnterior;
			}
		}
		
		if(this.permiteMantenimiento(detaformapagoLocal)) {
			if(sTipo.equals("EVENTO_CONTROL")) { // || sTipo.equals("EVENTO_NUEVO")
				if(!this.esControlTabla) {
					this.setVariablesFormularioToObjetoActualTodoDetaFormaPago(detaformapagoLocal,true);
					
					if(detaformapagoSessionBean.getConGuardarRelaciones()) {
						this.actualizarRelaciones(detaformapagoLocal);
					}
				}
			
			} else if(sTipo.equals("INFO_PADRE")) {
				
				if(this.detaformapagoSessionBean.getEsGuardarRelacionado()) {
					this.actualizarRelacionFkPadreActual(detaformapagoLocal);
				}
			}
		}
	}
	
	public void setVariablesFormularioToObjetoActualTodoDetaFormaPago(DetaFormaPago detaformapago,Boolean conColumnasBase) throws Exception { 
		this.setVariablesFormularioToObjetoActualDetaFormaPago(detaformapago,conColumnasBase);
		this.setVariablesFormularioToObjetoActualForeignKeysDetaFormaPago(detaformapago);
	}
	
	public void setVariablesFormularioToObjetoActualDetaFormaPago(DetaFormaPago detaformapago,Boolean conColumnasBase) throws Exception { 
		this.setVariablesFormularioToObjetoActualDetaFormaPago(detaformapago,conColumnasBase,true);
	}
	
	public void setVariablesFormularioToObjetoActualDetaFormaPago(DetaFormaPago detaformapago,Boolean conColumnasBase,Boolean conInicializarInvalidValues) throws Exception { 
		String sMensajeCampoActual="";
		Boolean estaValidado=true;
		try {
			
			if(this.jInternalFrameDetalleFormDetaFormaPago==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			if(conInicializarInvalidValues) {
				this.inicializarInvalidValues();
			}
			
			

		try {
			if(this.jInternalFrameDetalleFormDetaFormaPago.jLabelidDetaFormaPago.getText()==null || this.jInternalFrameDetalleFormDetaFormaPago.jLabelidDetaFormaPago.getText()=="" || this.jInternalFrameDetalleFormDetaFormaPago.jLabelidDetaFormaPago.getText()=="Id") {
				this.jInternalFrameDetalleFormDetaFormaPago.jLabelidDetaFormaPago.setText("0");
			}

			if(conColumnasBase) {detaformapago.setId(Long.parseLong(this.jInternalFrameDetalleFormDetaFormaPago.jLabelidDetaFormaPago.getText()));}
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+DetaFormaPagoConstantesFunciones.LABEL_ID+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetaFormaPago.jLabelIdDetaFormaPago,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			detaformapago.setvalor(Double.parseDouble(this.jInternalFrameDetalleFormDetaFormaPago.jTextFieldvalorDetaFormaPago.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+DetaFormaPagoConstantesFunciones.LABEL_VALOR+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetaFormaPago.jLabelvalorDetaFormaPago,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			detaformapago.setfecha_inicial(this.jInternalFrameDetalleFormDetaFormaPago.jDateChooserfecha_inicialDetaFormaPago.getDate());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+DetaFormaPagoConstantesFunciones.LABEL_FECHAINICIAL+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetaFormaPago.jLabelfecha_inicialDetaFormaPago,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			detaformapago.setfecha_final(this.jInternalFrameDetalleFormDetaFormaPago.jDateChooserfecha_finalDetaFormaPago.getDate());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+DetaFormaPagoConstantesFunciones.LABEL_FECHAFINAL+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetaFormaPago.jLabelfecha_finalDetaFormaPago,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			detaformapago.setporcentaje(Double.parseDouble(this.jInternalFrameDetalleFormDetaFormaPago.jTextFieldporcentajeDetaFormaPago.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+DetaFormaPagoConstantesFunciones.LABEL_PORCENTAJE+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetaFormaPago.jLabelporcentajeDetaFormaPago,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			detaformapago.setretencion(Double.parseDouble(this.jInternalFrameDetalleFormDetaFormaPago.jTextFieldretencionDetaFormaPago.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+DetaFormaPagoConstantesFunciones.LABEL_RETENCION+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetaFormaPago.jLabelretencionDetaFormaPago,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			detaformapago.setporcentaje_retencion(Double.parseDouble(this.jInternalFrameDetalleFormDetaFormaPago.jTextFieldporcentaje_retencionDetaFormaPago.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+DetaFormaPagoConstantesFunciones.LABEL_PORCENTAJERETENCION+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetaFormaPago.jLabelporcentaje_retencionDetaFormaPago,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			detaformapago.setbase_retencion(Double.parseDouble(this.jInternalFrameDetalleFormDetaFormaPago.jTextFieldbase_retencionDetaFormaPago.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+DetaFormaPagoConstantesFunciones.LABEL_BASERETENCION+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetaFormaPago.jLabelbase_retencionDetaFormaPago,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			detaformapago.setvalor_retencion(Double.parseDouble(this.jInternalFrameDetalleFormDetaFormaPago.jTextFieldvalor_retencionDetaFormaPago.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+DetaFormaPagoConstantesFunciones.LABEL_VALORRETENCION+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetaFormaPago.jLabelvalor_retencionDetaFormaPago,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			detaformapago.setnumero_retencion(this.jInternalFrameDetalleFormDetaFormaPago.jTextFieldnumero_retencionDetaFormaPago.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+DetaFormaPagoConstantesFunciones.LABEL_NUMERORETENCION+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetaFormaPago.jLabelnumero_retencionDetaFormaPago,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			detaformapago.setnumero_dias(Integer.parseInt(this.jInternalFrameDetalleFormDetaFormaPago.jTextFieldnumero_diasDetaFormaPago.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+DetaFormaPagoConstantesFunciones.LABEL_NUMERODIAS+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetaFormaPago.jLabelnumero_diasDetaFormaPago,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			detaformapago.setnumero_cuota(Integer.parseInt(this.jInternalFrameDetalleFormDetaFormaPago.jTextFieldnumero_cuotaDetaFormaPago.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+DetaFormaPagoConstantesFunciones.LABEL_NUMEROCUOTA+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetaFormaPago.jLabelnumero_cuotaDetaFormaPago,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			detaformapago.setdescripcion(this.jInternalFrameDetalleFormDetaFormaPago.jTextAreadescripcionDetaFormaPago.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+DetaFormaPagoConstantesFunciones.LABEL_DESCRIPCION+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetaFormaPago.jLabeldescripcionDetaFormaPago,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}
			
			if(!estaValidado) {
				throw new Exception(sMensajeCampoActual);
			}
		} catch(NumberFormatException e) {
			throw new Exception(sMensajeCampoActual);
			//FuncionesSwing.manageException(this, e,logger,MovimientoInventarioConstantesFunciones.CLASSNAME);
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,DetaFormaPagoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setVariablesForeignKeyObjetoBeanDefectoActualToObjetoActualDetaFormaPago(DetaFormaPago detaformapagoBean,DetaFormaPago detaformapago,Boolean conDefault,Boolean conColumnasBase) throws Exception { 
		try {
			
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,DetaFormaPagoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setCopiarVariablesObjetosDetaFormaPago(DetaFormaPago detaformapagoOrigen,DetaFormaPago detaformapago,Boolean conDefault,Boolean conColumnasBase) throws Exception { 
		try {
			
			if(conColumnasBase) {if(conDefault || (!conDefault && detaformapagoOrigen.getId()!=null && !detaformapagoOrigen.getId().equals(0L))) {detaformapago.setId(detaformapagoOrigen.getId());}}
			if(conDefault || (!conDefault && detaformapagoOrigen.getvalor()!=null && !detaformapagoOrigen.getvalor().equals(0.0))) {detaformapago.setvalor(detaformapagoOrigen.getvalor());}
			if(conDefault || (!conDefault && detaformapagoOrigen.getfecha_inicial()!=null && !detaformapagoOrigen.getfecha_inicial().equals(new Date()))) {detaformapago.setfecha_inicial(detaformapagoOrigen.getfecha_inicial());}
			if(conDefault || (!conDefault && detaformapagoOrigen.getfecha_final()!=null && !detaformapagoOrigen.getfecha_final().equals(new Date()))) {detaformapago.setfecha_final(detaformapagoOrigen.getfecha_final());}
			if(conDefault || (!conDefault && detaformapagoOrigen.getporcentaje()!=null && !detaformapagoOrigen.getporcentaje().equals(0.0))) {detaformapago.setporcentaje(detaformapagoOrigen.getporcentaje());}
			if(conDefault || (!conDefault && detaformapagoOrigen.getretencion()!=null && !detaformapagoOrigen.getretencion().equals(0.0))) {detaformapago.setretencion(detaformapagoOrigen.getretencion());}
			if(conDefault || (!conDefault && detaformapagoOrigen.getporcentaje_retencion()!=null && !detaformapagoOrigen.getporcentaje_retencion().equals(0.0))) {detaformapago.setporcentaje_retencion(detaformapagoOrigen.getporcentaje_retencion());}
			if(conDefault || (!conDefault && detaformapagoOrigen.getbase_retencion()!=null && !detaformapagoOrigen.getbase_retencion().equals(0.0))) {detaformapago.setbase_retencion(detaformapagoOrigen.getbase_retencion());}
			if(conDefault || (!conDefault && detaformapagoOrigen.getvalor_retencion()!=null && !detaformapagoOrigen.getvalor_retencion().equals(0.0))) {detaformapago.setvalor_retencion(detaformapagoOrigen.getvalor_retencion());}
			if(conDefault || (!conDefault && detaformapagoOrigen.getnumero_retencion()!=null && !detaformapagoOrigen.getnumero_retencion().equals(""))) {detaformapago.setnumero_retencion(detaformapagoOrigen.getnumero_retencion());}
			if(conDefault || (!conDefault && detaformapagoOrigen.getnumero_dias()!=null && !detaformapagoOrigen.getnumero_dias().equals(0))) {detaformapago.setnumero_dias(detaformapagoOrigen.getnumero_dias());}
			if(conDefault || (!conDefault && detaformapagoOrigen.getnumero_cuota()!=null && !detaformapagoOrigen.getnumero_cuota().equals(0))) {detaformapago.setnumero_cuota(detaformapagoOrigen.getnumero_cuota());}
			if(conDefault || (!conDefault && detaformapagoOrigen.getdescripcion()!=null && !detaformapagoOrigen.getdescripcion().equals(""))) {detaformapago.setdescripcion(detaformapagoOrigen.getdescripcion());}
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,DetaFormaPagoConstantesFunciones.CLASSNAME);
		}
	}
	
	/*
	public void setVariablesObjetoBeanActualToFormularioDetaFormaPago(DetaFormaPago detaformapago) throws Exception { 
		try {
			
			this.jInternalFrameDetalleFormDetaFormaPago.jLabelidDetaFormaPago.setText(detaformapago.getId().toString());
			this.jInternalFrameDetalleFormDetaFormaPago.jTextFieldvalorDetaFormaPago.setText(detaformapago.getvalor().toString());
			this.jInternalFrameDetalleFormDetaFormaPago.jDateChooserfecha_inicialDetaFormaPago.setDate(detaformapago.getfecha_inicial());
			this.jInternalFrameDetalleFormDetaFormaPago.jDateChooserfecha_finalDetaFormaPago.setDate(detaformapago.getfecha_final());
			this.jInternalFrameDetalleFormDetaFormaPago.jTextFieldporcentajeDetaFormaPago.setText(detaformapago.getporcentaje().toString());
			this.jInternalFrameDetalleFormDetaFormaPago.jTextFieldretencionDetaFormaPago.setText(detaformapago.getretencion().toString());
			this.jInternalFrameDetalleFormDetaFormaPago.jTextFieldporcentaje_retencionDetaFormaPago.setText(detaformapago.getporcentaje_retencion().toString());
			this.jInternalFrameDetalleFormDetaFormaPago.jTextFieldbase_retencionDetaFormaPago.setText(detaformapago.getbase_retencion().toString());
			this.jInternalFrameDetalleFormDetaFormaPago.jTextFieldvalor_retencionDetaFormaPago.setText(detaformapago.getvalor_retencion().toString());
			this.jInternalFrameDetalleFormDetaFormaPago.jTextFieldnumero_retencionDetaFormaPago.setText(detaformapago.getnumero_retencion());
			this.jInternalFrameDetalleFormDetaFormaPago.jTextFieldnumero_diasDetaFormaPago.setText(detaformapago.getnumero_dias().toString());
			this.jInternalFrameDetalleFormDetaFormaPago.jTextFieldnumero_cuotaDetaFormaPago.setText(detaformapago.getnumero_cuota().toString());
			this.jInternalFrameDetalleFormDetaFormaPago.jTextAreadescripcionDetaFormaPago.setText(detaformapago.getdescripcion());
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetaFormaPagoConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesObjetoBeanActualToFormularioDetaFormaPago(DetaFormaPagoBean detaformapagoBean) throws Exception { 
		try {
			
			this.jInternalFrameDetalleFormDetaFormaPago.jLabelidDetaFormaPago.setText(detaformapagoBean.getId().toString());
			this.jInternalFrameDetalleFormDetaFormaPago.jTextFieldvalorDetaFormaPago.setText(detaformapagoBean.getvalor().toString());
			this.jInternalFrameDetalleFormDetaFormaPago.jDateChooserfecha_inicialDetaFormaPago.setDate(detaformapagoBean.getfecha_inicial());
			this.jInternalFrameDetalleFormDetaFormaPago.jDateChooserfecha_finalDetaFormaPago.setDate(detaformapagoBean.getfecha_final());
			this.jInternalFrameDetalleFormDetaFormaPago.jTextFieldporcentajeDetaFormaPago.setText(detaformapagoBean.getporcentaje().toString());
			this.jInternalFrameDetalleFormDetaFormaPago.jTextFieldretencionDetaFormaPago.setText(detaformapagoBean.getretencion().toString());
			this.jInternalFrameDetalleFormDetaFormaPago.jTextFieldporcentaje_retencionDetaFormaPago.setText(detaformapagoBean.getporcentaje_retencion().toString());
			this.jInternalFrameDetalleFormDetaFormaPago.jTextFieldbase_retencionDetaFormaPago.setText(detaformapagoBean.getbase_retencion().toString());
			this.jInternalFrameDetalleFormDetaFormaPago.jTextFieldvalor_retencionDetaFormaPago.setText(detaformapagoBean.getvalor_retencion().toString());
			this.jInternalFrameDetalleFormDetaFormaPago.jTextFieldnumero_retencionDetaFormaPago.setText(detaformapagoBean.getnumero_retencion());
			this.jInternalFrameDetalleFormDetaFormaPago.jTextFieldnumero_diasDetaFormaPago.setText(detaformapagoBean.getnumero_dias().toString());
			this.jInternalFrameDetalleFormDetaFormaPago.jTextFieldnumero_cuotaDetaFormaPago.setText(detaformapagoBean.getnumero_cuota().toString());
			this.jInternalFrameDetalleFormDetaFormaPago.jTextAreadescripcionDetaFormaPago.setText(detaformapagoBean.getdescripcion());
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetaFormaPagoConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesObjetoReturnGeneralToBeanDetaFormaPago(DetaFormaPagoParameterReturnGeneral detaformapagoReturnGeneral,DetaFormaPagoBean detaformapagoBean,Boolean conDefault) throws Exception { 
		try {
			DetaFormaPago detaformapagoLocal=new DetaFormaPago();
			
			detaformapagoLocal=detaformapagoReturnGeneral.getDetaFormaPago();
			
			
			if(conColumnasBase) {if(conDefault || (!conDefault && detaformapagoLocal.getId()!=null && !detaformapagoLocal.getId().equals(0L))) {detaformapagoBean.setId(detaformapagoLocal.getId());}}
			if(conDefault || (!conDefault && detaformapagoLocal.getvalor()!=null && !detaformapagoLocal.getvalor().equals(0.0))) {detaformapagoBean.setvalor(detaformapagoLocal.getvalor());}
			if(conDefault || (!conDefault && detaformapagoLocal.getfecha_inicial()!=null && !detaformapagoLocal.getfecha_inicial().equals(new Date()))) {detaformapagoBean.setfecha_inicial(detaformapagoLocal.getfecha_inicial());}
			if(conDefault || (!conDefault && detaformapagoLocal.getfecha_final()!=null && !detaformapagoLocal.getfecha_final().equals(new Date()))) {detaformapagoBean.setfecha_final(detaformapagoLocal.getfecha_final());}
			if(conDefault || (!conDefault && detaformapagoLocal.getporcentaje()!=null && !detaformapagoLocal.getporcentaje().equals(0.0))) {detaformapagoBean.setporcentaje(detaformapagoLocal.getporcentaje());}
			if(conDefault || (!conDefault && detaformapagoLocal.getretencion()!=null && !detaformapagoLocal.getretencion().equals(0.0))) {detaformapagoBean.setretencion(detaformapagoLocal.getretencion());}
			if(conDefault || (!conDefault && detaformapagoLocal.getporcentaje_retencion()!=null && !detaformapagoLocal.getporcentaje_retencion().equals(0.0))) {detaformapagoBean.setporcentaje_retencion(detaformapagoLocal.getporcentaje_retencion());}
			if(conDefault || (!conDefault && detaformapagoLocal.getbase_retencion()!=null && !detaformapagoLocal.getbase_retencion().equals(0.0))) {detaformapagoBean.setbase_retencion(detaformapagoLocal.getbase_retencion());}
			if(conDefault || (!conDefault && detaformapagoLocal.getvalor_retencion()!=null && !detaformapagoLocal.getvalor_retencion().equals(0.0))) {detaformapagoBean.setvalor_retencion(detaformapagoLocal.getvalor_retencion());}
			if(conDefault || (!conDefault && detaformapagoLocal.getnumero_retencion()!=null && !detaformapagoLocal.getnumero_retencion().equals(""))) {detaformapagoBean.setnumero_retencion(detaformapagoLocal.getnumero_retencion());}
			if(conDefault || (!conDefault && detaformapagoLocal.getnumero_dias()!=null && !detaformapagoLocal.getnumero_dias().equals(0))) {detaformapagoBean.setnumero_dias(detaformapagoLocal.getnumero_dias());}
			if(conDefault || (!conDefault && detaformapagoLocal.getnumero_cuota()!=null && !detaformapagoLocal.getnumero_cuota().equals(0))) {detaformapagoBean.setnumero_cuota(detaformapagoLocal.getnumero_cuota());}
			if(conDefault || (!conDefault && detaformapagoLocal.getdescripcion()!=null && !detaformapagoLocal.getdescripcion().equals(""))) {detaformapagoBean.setdescripcion(detaformapagoLocal.getdescripcion());}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetaFormaPagoConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	@SuppressWarnings("rawtypes")
	public static void setActualComboBoxDetaFormaPagoGenerico(Long idDetaFormaPagoSeleccionado,JComboBox jComboBoxDetaFormaPago,List<DetaFormaPago> detaformapagosLocal)throws Exception {
		try {
			DetaFormaPago  detaformapagoTemp=null;

			for(DetaFormaPago detaformapagoAux:detaformapagosLocal) {
				if(detaformapagoAux.getId()!=null && detaformapagoAux.getId().equals(idDetaFormaPagoSeleccionado)) {
					detaformapagoTemp=detaformapagoAux;
					break;
				}
			}

			jComboBoxDetaFormaPago.setSelectedItem(detaformapagoTemp);

		} catch(Exception e) {
			throw e;
		}
	}
	
	@SuppressWarnings("rawtypes")
	public static void setHotKeysComboBoxDetaFormaPagoGenerico(JComboBox jComboBoxDetaFormaPago,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda)throws Exception {
		try {
			//GLOBAL(id_empresa,id_sucursal,id_ejercicio)
			//BASICO(normal)
			//CON_BUSQUEDA(Permite buscar Fk)
			
			String sKeyStrokeName="";
			KeyStroke keyStrokeControl=null;
			
			if(!sTipoBusqueda.equals("GLOBAL")) {
				
				//BUSCAR
				sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_BUSCAR");
				keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_BUSCAR");
				
				jComboBoxDetaFormaPago.getInputMap().put(keyStrokeControl, sKeyStrokeName);
				jComboBoxDetaFormaPago.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction+"Busqueda"));
				//BUSCAR
				
				
				//ACTUALIZAR
				sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_ACTUALIZAR");
				keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_ACTUALIZAR");
				
				jComboBoxDetaFormaPago.getInputMap().put(keyStrokeControl, sKeyStrokeName);
				jComboBoxDetaFormaPago.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction+"Update"));
				//ACTUALIZAR
				
				if(sTipoBusqueda.contains("CON_EVENT_CHANGE")) {
					if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
						jComboBoxDetaFormaPago.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
						jComboBoxDetaFormaPago.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));						
					}
					
					/*
					if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
						jComboBoxDetaFormaPago.addItemListener(new ComboBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
					} else {
						jComboBoxDetaFormaPago.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
					}
					*/
				}								
				
				//CON_BUSQUEDA								
				if(sTipoBusqueda.contains("CON_BUSQUEDA")) {
					sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_BUSQUEDA");
					keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_BUSQUEDA");
							
					jComboBoxDetaFormaPago.getInputMap().put(keyStrokeControl, sKeyStrokeName);
					jComboBoxDetaFormaPago.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction));
				}
				//CON_BUSQUEDA
				
				
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	@SuppressWarnings("rawtypes")
	public void setHotKeysComboBoxGenerico(JComboBox jComboBox,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		if(sTipoBusqueda.contains("CON_EVENT_CHANGE")) {
			if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
				jComboBox.addItemListener(new ComboBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
				jComboBox.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
			} else {
				jComboBox.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
				jComboBox.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
			}
		}
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJTextFieldGenerico(JTextField jTextField,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jTextField.addFocusListener(new TextFieldFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		jTextField.addActionListener(new TextFieldActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJTextAreaGenerico(JTextArea jTextArea,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jTextArea.addFocusListener(new TextAreaFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//NO EXISTE
		//jTextArea.addActionListener(new TextAreaActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJLabelGenerico(JLabel jLabel,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jLabel.addFocusListener(new LabelFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//NO EXISTE
		//jLabel.addActionListener(new LabelActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJCheckBoxGenerico(JCheckBox jCheckBox,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jCheckBox.addFocusListener(new CheckBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//SI SE DEFINE AL CAMBIAR VALOR, ESTE NUEVO VALOR NO SE ENVIA AL EVENTO
		//jCheckBox.addItemListener(new CheckBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJDateChooserGenerico(JDateChooser jDateChooser,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		FuncionesSwing.addDateListener(jDateChooser, jInternalFrameBase, sNombreHotKeyAbstractAction);
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJButtonGenerico(JButton jButton,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jButton.addActionListener(new ButtonActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	public void jButtonRelacionActionPerformed(String sTipo,ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado) {
		//ABRIR RELACIONES
		try {
			
		if(sTipo.equals("BancoFormaPago")) {
			jButtonBancoFormaPagoActionPerformed(evt,rowIndex,true,false,null);
		}
		} catch (Exception e) {
			FuncionesSwing.manageException2(this, e,logger,DetaFormaPagoConstantesFunciones.CLASSNAME);
		}
	}
	
	public String getDescripcionFk(String sTipo,JTable table,Object value,int intSelectedRow) throws Exception {
		//DESCRIPCIONES FK		
		String sDescripcion="";
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			detaformapago=(DetaFormaPago) detaformapagoLogic.getDetaFormaPagos().toArray()[table.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE) {
			detaformapago =(DetaFormaPago) detaformapagos.toArray()[table.convertRowIndexToModel(intSelectedRow)];
		}
					
		
		if(sTipo.equals("Empresa")) {
			//sDescripcion=this.getActualEmpresaForeignKeyDescripcion((Long)value);
			if(!detaformapago.getIsNew() && !detaformapago.getIsChanged() && !detaformapago.getIsDeleted()) {
				sDescripcion=detaformapago.getempresa_descripcion();
			} else {
				//sDescripcion=this.getActualEmpresaForeignKeyDescripcion((Long)value);
				sDescripcion=detaformapago.getempresa_descripcion();
			}
		}

		if(sTipo.equals("Sucursal")) {
			//sDescripcion=this.getActualSucursalForeignKeyDescripcion((Long)value);
			if(!detaformapago.getIsNew() && !detaformapago.getIsChanged() && !detaformapago.getIsDeleted()) {
				sDescripcion=detaformapago.getsucursal_descripcion();
			} else {
				//sDescripcion=this.getActualSucursalForeignKeyDescripcion((Long)value);
				sDescripcion=detaformapago.getsucursal_descripcion();
			}
		}

		if(sTipo.equals("Ejercicio")) {
			//sDescripcion=this.getActualEjercicioForeignKeyDescripcion((Long)value);
			if(!detaformapago.getIsNew() && !detaformapago.getIsChanged() && !detaformapago.getIsDeleted()) {
				sDescripcion=detaformapago.getejercicio_descripcion();
			} else {
				//sDescripcion=this.getActualEjercicioForeignKeyDescripcion((Long)value);
				sDescripcion=detaformapago.getejercicio_descripcion();
			}
		}

		if(sTipo.equals("Periodo")) {
			//sDescripcion=this.getActualPeriodoForeignKeyDescripcion((Long)value);
			if(!detaformapago.getIsNew() && !detaformapago.getIsChanged() && !detaformapago.getIsDeleted()) {
				sDescripcion=detaformapago.getperiodo_descripcion();
			} else {
				//sDescripcion=this.getActualPeriodoForeignKeyDescripcion((Long)value);
				sDescripcion=detaformapago.getperiodo_descripcion();
			}
		}

		if(sTipo.equals("Factura")) {
			//sDescripcion=this.getActualFacturaForeignKeyDescripcion((Long)value);
			if(!detaformapago.getIsNew() && !detaformapago.getIsChanged() && !detaformapago.getIsDeleted()) {
				sDescripcion=detaformapago.getfactura_descripcion();
			} else {
				//sDescripcion=this.getActualFacturaForeignKeyDescripcion((Long)value);
				sDescripcion=detaformapago.getfactura_descripcion();
			}
		}

		if(sTipo.equals("TipoFormaPago")) {
			//sDescripcion=this.getActualTipoFormaPagoForeignKeyDescripcion((Long)value);
			if(!detaformapago.getIsNew() && !detaformapago.getIsChanged() && !detaformapago.getIsDeleted()) {
				sDescripcion=detaformapago.gettipoformapago_descripcion();
			} else {
				//sDescripcion=this.getActualTipoFormaPagoForeignKeyDescripcion((Long)value);
				sDescripcion=detaformapago.gettipoformapago_descripcion();
			}
		}

		if(sTipo.equals("TipoDetaFormaPago")) {
			//sDescripcion=this.getActualTipoDetaFormaPagoForeignKeyDescripcion((Long)value);
			if(!detaformapago.getIsNew() && !detaformapago.getIsChanged() && !detaformapago.getIsDeleted()) {
				sDescripcion=detaformapago.gettipodetaformapago_descripcion();
			} else {
				//sDescripcion=this.getActualTipoDetaFormaPagoForeignKeyDescripcion((Long)value);
				sDescripcion=detaformapago.gettipodetaformapago_descripcion();
			}
		}

		if(sTipo.equals("DetaFormaPagoFactu")) {
			//sDescripcion=this.getActualDetaFormaPagoFactuForeignKeyDescripcion((Long)value);
			if(!detaformapago.getIsNew() && !detaformapago.getIsChanged() && !detaformapago.getIsDeleted()) {
				sDescripcion=detaformapago.getdetaformapagofactu_descripcion();
			} else {
				//sDescripcion=this.getActualDetaFormaPagoFactuForeignKeyDescripcion((Long)value);
				sDescripcion=detaformapago.getdetaformapagofactu_descripcion();
			}
		}

		if(sTipo.equals("CuentaContable")) {
			//sDescripcion=this.getActualCuentaContableForeignKeyDescripcion((Long)value);
			if(!detaformapago.getIsNew() && !detaformapago.getIsChanged() && !detaformapago.getIsDeleted()) {
				sDescripcion=detaformapago.getcuentacontable_descripcion();
			} else {
				//sDescripcion=this.getActualCuentaContableForeignKeyDescripcion((Long)value);
				sDescripcion=detaformapago.getcuentacontable_descripcion();
			}
		}

		if(sTipo.equals("TipoRetencion")) {
			//sDescripcion=this.getActualTipoRetencionForeignKeyDescripcion((Long)value);
			if(!detaformapago.getIsNew() && !detaformapago.getIsChanged() && !detaformapago.getIsDeleted()) {
				sDescripcion=detaformapago.gettiporetencion_descripcion();
			} else {
				//sDescripcion=this.getActualTipoRetencionForeignKeyDescripcion((Long)value);
				sDescripcion=detaformapago.gettiporetencion_descripcion();
			}
		}

		if(sTipo.equals("Anio")) {
			//sDescripcion=this.getActualAnioForeignKeyDescripcion((Long)value);
			if(!detaformapago.getIsNew() && !detaformapago.getIsChanged() && !detaformapago.getIsDeleted()) {
				sDescripcion=detaformapago.getanio_descripcion();
			} else {
				//sDescripcion=this.getActualAnioForeignKeyDescripcion((Long)value);
				sDescripcion=detaformapago.getanio_descripcion();
			}
		}

		if(sTipo.equals("Mes")) {
			//sDescripcion=this.getActualMesForeignKeyDescripcion((Long)value);
			if(!detaformapago.getIsNew() && !detaformapago.getIsChanged() && !detaformapago.getIsDeleted()) {
				sDescripcion=detaformapago.getmes_descripcion();
			} else {
				//sDescripcion=this.getActualMesForeignKeyDescripcion((Long)value);
				sDescripcion=detaformapago.getmes_descripcion();
			}
		}

		
		return sDescripcion;
	}
	
	public Color getColorFk(String sTipo,JTable table,Object value,int intSelectedRow) throws Exception {
		//DESCRIPCIONES FK		
		Color color=Color.WHITE;
		
		DetaFormaPago detaformapagoRow=new DetaFormaPago();
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			detaformapagoRow=(DetaFormaPago) detaformapagoLogic.getDetaFormaPagos().toArray()[table.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE) {
			detaformapagoRow=(DetaFormaPago) detaformapagos.toArray()[table.convertRowIndexToModel(intSelectedRow)];
		}
					
		
		
		return color;
	}
	
	
	
	
	public void jButtonBancoFormaPagoActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,DetaFormaPago detaformapago) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormDetaFormaPago==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detaformapagoLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detaformapago = (DetaFormaPago)this.detaformapagoLogic.getDetaFormaPagos().toArray()[this.jTableDatosDetaFormaPago.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.detaformapago = (DetaFormaPago)this.detaformapagos.toArray()[this.jTableDatosDetaFormaPago.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(detaformapago!=null) {
						this.detaformapago = detaformapago;
					} else {
						this.detaformapago = new DetaFormaPago();
					}
				}

				if(this.isTienePermisosBancoFormaPago && this.permiteMantenimiento(this.detaformapago)) {
					BancoFormaPagoBeanSwingJInternalFrame bancoformapagoBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoBeanSwingJInternalFramePopup=new BancoFormaPagoBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						bancoformapagoBeanSwingJInternalFrame=this.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoBeanSwingJInternalFramePopup;
					} else {
						bancoformapagoBeanSwingJInternalFrame=this.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoBeanSwingJInternalFrame;
					}

					List<DetaFormaPago> detaformapagos=new ArrayList<DetaFormaPago>();
					detaformapagos.add(this.detaformapago);
					if(!esRelacionado) {
						//bancoformapagoBeanSwingJInternalFrame.bancoformapagoSessionBean.setConGuardarRelaciones(false);
						//bancoformapagoBeanSwingJInternalFrame.bancoformapagoSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					bancoformapagoBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormDetaFormaPago.cargarBancoFormaPagoBeanSwingJInternalFrame(detaformapagos,this.detaformapago,bancoformapagoBeanSwingJInternalFrame,/*conInicializar,*/bancoformapagoBeanSwingJInternalFrame.bancoformapagoSessionBean.getConGuardarRelaciones(),bancoformapagoBeanSwingJInternalFrame.bancoformapagoSessionBean.getEsGuardarRelacionado());
					bancoformapagoBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						bancoformapagoBeanSwingJInternalFrame.actualizarEstadoPanelsBancoFormaPago("no_relacionado");

						bancoformapagoBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(BancoFormaPagoConstantesFunciones.ITAMANIOFILATABLA + (BancoFormaPagoConstantesFunciones.ITAMANIOFILATABLA/2));

						bancoformapagoBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderDetaFormaPago=(TitledBorder)this.jScrollPanelDatosDetaFormaPago.getBorder();
						TitledBorder titledBorderBancoFormaPago=(TitledBorder)bancoformapagoBeanSwingJInternalFrame.jScrollPanelDatosBancoFormaPago.getBorder();

						titledBorderBancoFormaPago.setTitle(titledBorderDetaFormaPago.getTitle() + " -> Banco Forma Pago");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,bancoformapagoBeanSwingJInternalFrame);
						}

						bancoformapagoBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(bancoformapagoBeanSwingJInternalFrame);

						bancoformapagoBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.detaformapagoSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Banco Forma Pago",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detaformapagoLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detaformapagoLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,DetaFormaPagoConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detaformapagoLogic.closeNewConnexionToDeep();
				}

			}
		}

	
	
	
	public void refrescarBindingTabla(Boolean blnSoloTabla) {
	}
	
	public void inicializarActualizarBindingBotonesManualDetaFormaPago(Boolean esSetControles) {						
		if(esSetControles) {
			this.jButtonNuevoDetaFormaPago.setVisible((this.isVisibilidadCeldaNuevoDetaFormaPago && this.isPermisoNuevoDetaFormaPago));			
			this.jButtonDuplicarDetaFormaPago.setVisible((this.isVisibilidadCeldaDuplicarDetaFormaPago && this.isPermisoDuplicarDetaFormaPago));			
			this.jButtonCopiarDetaFormaPago.setVisible((this.isVisibilidadCeldaCopiarDetaFormaPago && this.isPermisoCopiarDetaFormaPago));
			this.jButtonVerFormDetaFormaPago.setVisible((this.isVisibilidadCeldaVerFormDetaFormaPago && this.isPermisoVerFormDetaFormaPago));
			
			this.jButtonAbrirOrderByDetaFormaPago.setVisible((this.isVisibilidadCeldaOrdenDetaFormaPago && this.isPermisoOrdenDetaFormaPago));			
			
			this.jButtonNuevoRelacionesDetaFormaPago.setVisible((this.isVisibilidadCeldaNuevoRelacionesDetaFormaPago && this.isPermisoNuevoDetaFormaPago));			
			this.jButtonNuevoGuardarCambiosDetaFormaPago.setVisible((this.isVisibilidadCeldaNuevoDetaFormaPago && this.isPermisoNuevoDetaFormaPago && this.isPermisoGuardarCambiosDetaFormaPago));
			
			if(this.jInternalFrameDetalleFormDetaFormaPago!=null) {
			this.jInternalFrameDetalleFormDetaFormaPago.jButtonModificarDetaFormaPago.setVisible((this.isVisibilidadCeldaModificarDetaFormaPago && this.isPermisoActualizarDetaFormaPago));	
			this.jInternalFrameDetalleFormDetaFormaPago.jButtonActualizarDetaFormaPago.setVisible((this.isVisibilidadCeldaActualizarDetaFormaPago && this.isPermisoActualizarDetaFormaPago));	
			this.jInternalFrameDetalleFormDetaFormaPago.jButtonEliminarDetaFormaPago.setVisible((this.isVisibilidadCeldaEliminarDetaFormaPago && this.isPermisoEliminarDetaFormaPago));
			this.jInternalFrameDetalleFormDetaFormaPago.jButtonCancelarDetaFormaPago.setVisible(this.isVisibilidadCeldaCancelarDetaFormaPago);							
			this.jInternalFrameDetalleFormDetaFormaPago.jButtonGuardarCambiosDetaFormaPago.setVisible((this.isVisibilidadCeldaGuardarDetaFormaPago && this.isPermisoGuardarCambiosDetaFormaPago));			
			
			}
						
			this.jButtonGuardarCambiosTablaDetaFormaPago.setVisible((this.isVisibilidadCeldaGuardarCambiosDetaFormaPago && this.isPermisoGuardarCambiosDetaFormaPago));							
			
			//TOOLBAR
			
			this.jButtonNuevoToolBarDetaFormaPago.setVisible((this.isVisibilidadCeldaNuevoDetaFormaPago && this.isPermisoNuevoDetaFormaPago));						
			this.jButtonDuplicarToolBarDetaFormaPago.setVisible((this.isVisibilidadCeldaDuplicarDetaFormaPago && this.isPermisoDuplicarDetaFormaPago));						
			this.jButtonCopiarToolBarDetaFormaPago.setVisible((this.isVisibilidadCeldaCopiarDetaFormaPago && this.isPermisoCopiarDetaFormaPago));			
			this.jButtonVerFormToolBarDetaFormaPago.setVisible((this.isVisibilidadCeldaVerFormDetaFormaPago && this.isPermisoVerFormDetaFormaPago));			
			this.jButtonAbrirOrderByToolBarDetaFormaPago.setVisible((this.isVisibilidadCeldaOrdenDetaFormaPago && this.isPermisoOrdenDetaFormaPago));
			this.jButtonNuevoRelacionesToolBarDetaFormaPago.setVisible((this.isVisibilidadCeldaNuevoRelacionesDetaFormaPago && this.isPermisoNuevoDetaFormaPago));			
			this.jButtonNuevoGuardarCambiosToolBarDetaFormaPago.setVisible((this.isVisibilidadCeldaNuevoDetaFormaPago && this.isPermisoNuevoDetaFormaPago && this.isPermisoGuardarCambiosDetaFormaPago));			
			
			if(this.jInternalFrameDetalleFormDetaFormaPago!=null) {
			this.jInternalFrameDetalleFormDetaFormaPago.jButtonModificarToolBarDetaFormaPago.setVisible((this.isVisibilidadCeldaModificarDetaFormaPago && this.isPermisoActualizarDetaFormaPago));	
			this.jInternalFrameDetalleFormDetaFormaPago.jButtonActualizarToolBarDetaFormaPago.setVisible((this.isVisibilidadCeldaActualizarDetaFormaPago  && this.isPermisoActualizarDetaFormaPago));	
			this.jInternalFrameDetalleFormDetaFormaPago.jButtonEliminarToolBarDetaFormaPago.setVisible((this.isVisibilidadCeldaEliminarDetaFormaPago && this.isPermisoEliminarDetaFormaPago));
			this.jInternalFrameDetalleFormDetaFormaPago.jButtonCancelarToolBarDetaFormaPago.setVisible(this.isVisibilidadCeldaCancelarDetaFormaPago);				
			this.jInternalFrameDetalleFormDetaFormaPago.jButtonGuardarCambiosToolBarDetaFormaPago.setVisible((this.isVisibilidadCeldaGuardarDetaFormaPago && this.isPermisoGuardarCambiosDetaFormaPago));									
			}
			
			this.jButtonGuardarCambiosTablaToolBarDetaFormaPago.setVisible((this.isVisibilidadCeldaGuardarCambiosDetaFormaPago && this.isPermisoGuardarCambiosDetaFormaPago));									
			
			//TOOLBAR
			
			//MENUS
			
			this.jMenuItemNuevoDetaFormaPago.setVisible((this.isVisibilidadCeldaNuevoDetaFormaPago && this.isPermisoNuevoDetaFormaPago));			
			this.jMenuItemDuplicarDetaFormaPago.setVisible((this.isVisibilidadCeldaDuplicarDetaFormaPago && this.isPermisoDuplicarDetaFormaPago));			
			this.jMenuItemCopiarDetaFormaPago.setVisible((this.isVisibilidadCeldaCopiarDetaFormaPago && this.isPermisoCopiarDetaFormaPago));			
			this.jMenuItemVerFormDetaFormaPago.setVisible((this.isVisibilidadCeldaVerFormDetaFormaPago && this.isPermisoVerFormDetaFormaPago));			
			this.jMenuItemAbrirOrderByDetaFormaPago.setVisible((this.isVisibilidadCeldaOrdenDetaFormaPago && this.isPermisoOrdenDetaFormaPago));			
			//this.jMenuItemMostrarOcultarDetaFormaPago.setVisible((this.isVisibilidadCeldaOrdenDetaFormaPago && this.isPermisoOrdenDetaFormaPago));
			this.jMenuItemDetalleAbrirOrderByDetaFormaPago.setVisible((this.isVisibilidadCeldaOrdenDetaFormaPago && this.isPermisoOrdenDetaFormaPago));			
			//this.jMenuItemDetalleMostrarOcultarDetaFormaPago.setVisible((this.isVisibilidadCeldaOrdenDetaFormaPago && this.isPermisoOrdenDetaFormaPago));			
			this.jMenuItemNuevoRelacionesDetaFormaPago.setVisible((this.isVisibilidadCeldaNuevoRelacionesDetaFormaPago && this.isPermisoNuevoDetaFormaPago));			
			this.jMenuItemNuevoGuardarCambiosDetaFormaPago.setVisible((this.isVisibilidadCeldaNuevoDetaFormaPago && this.isPermisoNuevoDetaFormaPago && this.isPermisoGuardarCambiosDetaFormaPago));									
			
			if(this.jInternalFrameDetalleFormDetaFormaPago!=null) {
			this.jInternalFrameDetalleFormDetaFormaPago.jMenuItemModificarDetaFormaPago.setVisible((this.isVisibilidadCeldaModificarDetaFormaPago && this.isPermisoActualizarDetaFormaPago));	
			this.jInternalFrameDetalleFormDetaFormaPago.jMenuItemActualizarDetaFormaPago.setVisible((this.isVisibilidadCeldaActualizarDetaFormaPago && this.isPermisoActualizarDetaFormaPago));	
			this.jInternalFrameDetalleFormDetaFormaPago.jMenuItemEliminarDetaFormaPago.setVisible((this.isVisibilidadCeldaEliminarDetaFormaPago && this.isPermisoEliminarDetaFormaPago));
			this.jInternalFrameDetalleFormDetaFormaPago.jMenuItemCancelarDetaFormaPago.setVisible(this.isVisibilidadCeldaCancelarDetaFormaPago);				
			}
			
			this.jMenuItemGuardarCambiosDetaFormaPago.setVisible((this.isVisibilidadCeldaGuardarDetaFormaPago && this.isPermisoGuardarCambiosDetaFormaPago));						
			this.jMenuItemGuardarCambiosTablaDetaFormaPago.setVisible((this.isVisibilidadCeldaGuardarCambiosDetaFormaPago && this.isPermisoGuardarCambiosDetaFormaPago));						
			
			//MENUS
			
		} else {
			this.isVisibilidadCeldaNuevoDetaFormaPago=this.jButtonNuevoDetaFormaPago.isVisible();
			this.isVisibilidadCeldaDuplicarDetaFormaPago=this.jButtonDuplicarDetaFormaPago.isVisible();
			this.isVisibilidadCeldaCopiarDetaFormaPago=this.jButtonCopiarDetaFormaPago.isVisible();
			this.isVisibilidadCeldaVerFormDetaFormaPago=this.jButtonVerFormDetaFormaPago.isVisible();
			
			this.isVisibilidadCeldaOrdenDetaFormaPago=this.jButtonAbrirOrderByDetaFormaPago.isVisible();			
			
			this.isVisibilidadCeldaNuevoRelacionesDetaFormaPago=this.jButtonNuevoRelacionesDetaFormaPago.isVisible();
			this.isVisibilidadCeldaModificarDetaFormaPago=this.jButtonModificarDetaFormaPago.isVisible();
			
			if(this.jInternalFrameDetalleFormDetaFormaPago!=null) {
			this.isVisibilidadCeldaActualizarDetaFormaPago=this.jInternalFrameDetalleFormDetaFormaPago.jButtonActualizarDetaFormaPago.isVisible();
			this.isVisibilidadCeldaEliminarDetaFormaPago=this.jInternalFrameDetalleFormDetaFormaPago.jButtonEliminarDetaFormaPago.isVisible();
			this.isVisibilidadCeldaCancelarDetaFormaPago=this.jInternalFrameDetalleFormDetaFormaPago.jButtonCancelarDetaFormaPago.isVisible();
			this.isVisibilidadCeldaGuardarDetaFormaPago=this.jInternalFrameDetalleFormDetaFormaPago.jButtonGuardarCambiosDetaFormaPago.isVisible();			
			}
			
			this.isVisibilidadCeldaGuardarCambiosDetaFormaPago=this.jButtonGuardarCambiosTablaDetaFormaPago.isVisible();
			
			//TOOLBAR
			
			this.isVisibilidadCeldaNuevoDetaFormaPago=this.jButtonNuevoToolBarDetaFormaPago.isVisible();
			this.isVisibilidadCeldaNuevoRelacionesDetaFormaPago=this.jButtonNuevoRelacionesToolBarDetaFormaPago.isVisible();
			
			if(this.jInternalFrameDetalleFormDetaFormaPago!=null) {
			this.isVisibilidadCeldaModificarDetaFormaPago=this.jInternalFrameDetalleFormDetaFormaPago.jButtonModificarToolBarDetaFormaPago.isVisible();
			this.isVisibilidadCeldaActualizarDetaFormaPago=this.jInternalFrameDetalleFormDetaFormaPago.jButtonActualizarToolBarDetaFormaPago.isVisible();
			this.isVisibilidadCeldaEliminarDetaFormaPago=this.jInternalFrameDetalleFormDetaFormaPago.jButtonEliminarToolBarDetaFormaPago.isVisible();
			this.isVisibilidadCeldaCancelarDetaFormaPago=this.jInternalFrameDetalleFormDetaFormaPago.jButtonCancelarToolBarDetaFormaPago.isVisible();
			}
			
			this.isVisibilidadCeldaGuardarDetaFormaPago=this.jButtonGuardarCambiosToolBarDetaFormaPago.isVisible();
			this.isVisibilidadCeldaGuardarCambiosDetaFormaPago=this.jButtonGuardarCambiosTablaToolBarDetaFormaPago.isVisible();						
			
			//TOOLBAR
			
			//MENUS
			
			this.isVisibilidadCeldaNuevoDetaFormaPago=this.jMenuItemNuevoDetaFormaPago.isVisible();
			this.isVisibilidadCeldaNuevoRelacionesDetaFormaPago=this.jMenuItemNuevoRelacionesDetaFormaPago.isVisible();
			
			if(this.jInternalFrameDetalleFormDetaFormaPago!=null) {
			this.isVisibilidadCeldaModificarDetaFormaPago=this.jInternalFrameDetalleFormDetaFormaPago.jMenuItemModificarDetaFormaPago.isVisible();
			this.isVisibilidadCeldaActualizarDetaFormaPago=this.jInternalFrameDetalleFormDetaFormaPago.jMenuItemActualizarDetaFormaPago.isVisible();
			this.isVisibilidadCeldaEliminarDetaFormaPago=this.jInternalFrameDetalleFormDetaFormaPago.jMenuItemEliminarDetaFormaPago.isVisible();
			this.isVisibilidadCeldaCancelarDetaFormaPago=this.jInternalFrameDetalleFormDetaFormaPago.jMenuItemCancelarDetaFormaPago.isVisible();
			}
			
			this.isVisibilidadCeldaGuardarDetaFormaPago=this.jMenuItemGuardarCambiosDetaFormaPago.isVisible();
			this.isVisibilidadCeldaGuardarCambiosDetaFormaPago=this.jMenuItemGuardarCambiosTablaDetaFormaPago.isVisible();						
			
			//MENUS
		}
	}
	
	public void inicializarActualizarBindingBotonesDetaFormaPago(Boolean esInicializar) {
		if(DetaFormaPagoJInternalFrame.ISBINDING_MANUAL) {			
			if(this.detaformapagoSessionBean.getConGuardarRelaciones()) {
				//if(this.detaformapagoSessionBean.getEsGuardarRelacionado()) {
				
				this.actualizarEstadoCeldasBotonesConGuardarRelacionesDetaFormaPago();
			}
			
			this.inicializarActualizarBindingBotonesManualDetaFormaPago(true);
			
		} else {	
		}
	}		
	
	public void inicializarActualizarBindingBotonesPermisosManualDetaFormaPago() {
		this.jButtonNuevoDetaFormaPago.setVisible(this.isPermisoNuevoDetaFormaPago);			
		this.jButtonDuplicarDetaFormaPago.setVisible(this.isPermisoDuplicarDetaFormaPago);			
		this.jButtonCopiarDetaFormaPago.setVisible(this.isPermisoCopiarDetaFormaPago);			
		this.jButtonVerFormDetaFormaPago.setVisible(this.isPermisoVerFormDetaFormaPago);			
		
		this.jButtonAbrirOrderByDetaFormaPago.setVisible(this.isPermisoOrdenDetaFormaPago);					
		
		this.jButtonNuevoRelacionesDetaFormaPago.setVisible(this.isPermisoNuevoDetaFormaPago);			
		
		if(this.jInternalFrameDetalleFormDetaFormaPago!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetaFormaPago.jButtonModificarDetaFormaPago.setVisible(this.isPermisoActualizarDetaFormaPago);	
			this.jInternalFrameDetalleFormDetaFormaPago.jButtonActualizarDetaFormaPago.setVisible(this.isPermisoActualizarDetaFormaPago);	
			this.jInternalFrameDetalleFormDetaFormaPago.jButtonEliminarDetaFormaPago.setVisible(this.isPermisoEliminarDetaFormaPago);
			this.jInternalFrameDetalleFormDetaFormaPago.jButtonCancelarDetaFormaPago.setVisible(this.isVisibilidadCeldaCancelarDetaFormaPago);						
			this.jInternalFrameDetalleFormDetaFormaPago.jButtonGuardarCambiosDetaFormaPago.setVisible(this.isPermisoGuardarCambiosDetaFormaPago);							
		}
		
		this.jButtonGuardarCambiosTablaDetaFormaPago.setVisible(this.isPermisoActualizarDetaFormaPago);
	}
	
	public void inicializarActualizarBindingBotonesPermisosManualFormDetalleDetaFormaPago() {
		this.jInternalFrameDetalleFormDetaFormaPago.jButtonModificarDetaFormaPago.setVisible(this.isPermisoActualizarDetaFormaPago);	
		this.jInternalFrameDetalleFormDetaFormaPago.jButtonActualizarDetaFormaPago.setVisible(this.isPermisoActualizarDetaFormaPago);	
		this.jInternalFrameDetalleFormDetaFormaPago.jButtonEliminarDetaFormaPago.setVisible(this.isPermisoEliminarDetaFormaPago);
		this.jInternalFrameDetalleFormDetaFormaPago.jButtonCancelarDetaFormaPago.setVisible(this.isVisibilidadCeldaCancelarDetaFormaPago);							
		this.jInternalFrameDetalleFormDetaFormaPago.jButtonGuardarCambiosDetaFormaPago.setVisible((this.isVisibilidadCeldaGuardarDetaFormaPago && this.isPermisoGuardarCambiosDetaFormaPago));			
	}
	
	public void inicializarActualizarBindingBotonesPermisosDetaFormaPago() {
		if(DetaFormaPagoJInternalFrame.ISBINDING_MANUAL) {
			this.inicializarActualizarBindingBotonesPermisosManualDetaFormaPago();
		} else {
		}
	}
	
	
	public void refrescarBindingBotonesDetaFormaPago() {
	}
	
	public void jTableDatosDetaFormaPagoListSelectionListener(javax.swing.event.ListSelectionEvent evt) throws Exception { 
		try {
			this.seleccionarDetaFormaPago(null,evt,-1);
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetaFormaPagoConstantesFunciones.CLASSNAME);
		}
	}
	
	
	public void jButtonidDetaFormaPagoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detaformapagoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetaFormaPago.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetaFormaPago(this.getdetaformapago(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaFormaPago(this.detaformapago);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detaformapago =(DetaFormaPago) this.detaformapagoLogic.getDetaFormaPagos().toArray()[this.jTableDatosDetaFormaPago.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detaformapago =(DetaFormaPago) this.detaformapagos.toArray()[this.jTableDatosDetaFormaPago.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detaformapago==null) {
						this.detaformapago = new DetaFormaPago();
					}

					this.setVariablesFormularioToObjetoActualDetaFormaPago(this.detaformapago,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaFormaPago(this.detaformapago);
				}

				if(this.detaformapago.getId()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id = "+this.detaformapago.getId().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetaFormaPago(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detaformapagoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detaformapagoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetaFormaPagoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detaformapagoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_empresaDetaFormaPagoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detaformapagoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoempresa=true;

			idTienePermisoempresa=this.tienePermisosUsuarioEnPaginaWebDetaFormaPago(EmpresaConstantesFunciones.CLASSNAME);

			if(idTienePermisoempresa) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetaFormaPago.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosDetaFormaPago.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosDetaFormaPago.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detaformapago =(DetaFormaPago) this.detaformapagoLogic.getDetaFormaPagos().toArray()[this.jTableDatosDetaFormaPago.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detaformapago =(DetaFormaPago) this.detaformapagos.toArray()[this.jTableDatosDetaFormaPago.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualDetaFormaPago(this.getdetaformapago(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysDetaFormaPago(this.detaformapago);

				this.empresaBeanSwingJInternalFrame=new EmpresaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.empresaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.empresaBeanSwingJInternalFrame.getEmpresaLogic().setConnexion(this.detaformapagoLogic.getConnexion());

				if(this.detaformapago.getid_empresa()!=null) {
					this.empresaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.empresaBeanSwingJInternalFrame.setIdActual(this.detaformapago.getid_empresa());
					this.empresaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.empresaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.empresaBeanSwingJInternalFrame.inicializarActualizarBindingTablaEmpresa();
				}

				JInternalFrameBase jinternalFrame =this.empresaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderDetaFormaPago=(TitledBorder)this.jScrollPanelDatosDetaFormaPago.getBorder();
				TitledBorder titledBorderempresa=(TitledBorder)this.empresaBeanSwingJInternalFrame.jScrollPanelDatosEmpresa.getBorder();

				titledBorderempresa.setTitle(titledBorderDetaFormaPago.getTitle() + " -> Empresa");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detaformapagoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detaformapagoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetaFormaPagoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detaformapagoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_empresaDetaFormaPagoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detaformapagoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetaFormaPago.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetaFormaPago(this.getdetaformapago(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaFormaPago(this.detaformapago);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detaformapago =(DetaFormaPago) this.detaformapagoLogic.getDetaFormaPagos().toArray()[this.jTableDatosDetaFormaPago.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detaformapago =(DetaFormaPago) this.detaformapagos.toArray()[this.jTableDatosDetaFormaPago.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detaformapago==null) {
						this.detaformapago = new DetaFormaPago();
					}

					this.setVariablesFormularioToObjetoActualDetaFormaPago(this.detaformapago,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaFormaPago(this.detaformapago);
				}

				if(this.detaformapago.getid_empresa()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_empresa = "+this.detaformapago.getid_empresa().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetaFormaPago(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detaformapagoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detaformapagoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetaFormaPagoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detaformapagoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_sucursalDetaFormaPagoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detaformapagoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisosucursal=true;

			idTienePermisosucursal=this.tienePermisosUsuarioEnPaginaWebDetaFormaPago(SucursalConstantesFunciones.CLASSNAME);

			if(idTienePermisosucursal) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetaFormaPago.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosDetaFormaPago.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosDetaFormaPago.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detaformapago =(DetaFormaPago) this.detaformapagoLogic.getDetaFormaPagos().toArray()[this.jTableDatosDetaFormaPago.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detaformapago =(DetaFormaPago) this.detaformapagos.toArray()[this.jTableDatosDetaFormaPago.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualDetaFormaPago(this.getdetaformapago(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysDetaFormaPago(this.detaformapago);

				this.sucursalBeanSwingJInternalFrame=new SucursalBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.sucursalBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.sucursalBeanSwingJInternalFrame.getSucursalLogic().setConnexion(this.detaformapagoLogic.getConnexion());

				if(this.detaformapago.getid_sucursal()!=null) {
					this.sucursalBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.sucursalBeanSwingJInternalFrame.setIdActual(this.detaformapago.getid_sucursal());
					this.sucursalBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.sucursalBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.sucursalBeanSwingJInternalFrame.inicializarActualizarBindingTablaSucursal();
				}

				JInternalFrameBase jinternalFrame =this.sucursalBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderDetaFormaPago=(TitledBorder)this.jScrollPanelDatosDetaFormaPago.getBorder();
				TitledBorder titledBordersucursal=(TitledBorder)this.sucursalBeanSwingJInternalFrame.jScrollPanelDatosSucursal.getBorder();

				titledBordersucursal.setTitle(titledBorderDetaFormaPago.getTitle() + " -> Sucursal");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detaformapagoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detaformapagoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetaFormaPagoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detaformapagoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_sucursalDetaFormaPagoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detaformapagoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetaFormaPago.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetaFormaPago(this.getdetaformapago(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaFormaPago(this.detaformapago);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detaformapago =(DetaFormaPago) this.detaformapagoLogic.getDetaFormaPagos().toArray()[this.jTableDatosDetaFormaPago.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detaformapago =(DetaFormaPago) this.detaformapagos.toArray()[this.jTableDatosDetaFormaPago.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detaformapago==null) {
						this.detaformapago = new DetaFormaPago();
					}

					this.setVariablesFormularioToObjetoActualDetaFormaPago(this.detaformapago,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaFormaPago(this.detaformapago);
				}

				if(this.detaformapago.getid_sucursal()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_sucursal = "+this.detaformapago.getid_sucursal().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetaFormaPago(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detaformapagoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detaformapagoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetaFormaPagoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detaformapagoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_ejercicioDetaFormaPagoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detaformapagoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoejercicio=true;

			idTienePermisoejercicio=this.tienePermisosUsuarioEnPaginaWebDetaFormaPago(EjercicioConstantesFunciones.CLASSNAME);

			if(idTienePermisoejercicio) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetaFormaPago.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosDetaFormaPago.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosDetaFormaPago.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detaformapago =(DetaFormaPago) this.detaformapagoLogic.getDetaFormaPagos().toArray()[this.jTableDatosDetaFormaPago.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detaformapago =(DetaFormaPago) this.detaformapagos.toArray()[this.jTableDatosDetaFormaPago.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualDetaFormaPago(this.getdetaformapago(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysDetaFormaPago(this.detaformapago);

				this.ejercicioBeanSwingJInternalFrame=new EjercicioBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.ejercicioBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.ejercicioBeanSwingJInternalFrame.getEjercicioLogic().setConnexion(this.detaformapagoLogic.getConnexion());

				if(this.detaformapago.getid_ejercicio()!=null) {
					this.ejercicioBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.ejercicioBeanSwingJInternalFrame.setIdActual(this.detaformapago.getid_ejercicio());
					this.ejercicioBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.ejercicioBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.ejercicioBeanSwingJInternalFrame.inicializarActualizarBindingTablaEjercicio();
				}

				JInternalFrameBase jinternalFrame =this.ejercicioBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderDetaFormaPago=(TitledBorder)this.jScrollPanelDatosDetaFormaPago.getBorder();
				TitledBorder titledBorderejercicio=(TitledBorder)this.ejercicioBeanSwingJInternalFrame.jScrollPanelDatosEjercicio.getBorder();

				titledBorderejercicio.setTitle(titledBorderDetaFormaPago.getTitle() + " -> Ejercicio");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detaformapagoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detaformapagoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetaFormaPagoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detaformapagoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_ejercicioDetaFormaPagoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detaformapagoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetaFormaPago.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetaFormaPago(this.getdetaformapago(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaFormaPago(this.detaformapago);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detaformapago =(DetaFormaPago) this.detaformapagoLogic.getDetaFormaPagos().toArray()[this.jTableDatosDetaFormaPago.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detaformapago =(DetaFormaPago) this.detaformapagos.toArray()[this.jTableDatosDetaFormaPago.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detaformapago==null) {
						this.detaformapago = new DetaFormaPago();
					}

					this.setVariablesFormularioToObjetoActualDetaFormaPago(this.detaformapago,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaFormaPago(this.detaformapago);
				}

				if(this.detaformapago.getid_ejercicio()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_ejercicio = "+this.detaformapago.getid_ejercicio().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetaFormaPago(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detaformapagoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detaformapagoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetaFormaPagoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detaformapagoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_periodoDetaFormaPagoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detaformapagoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoperiodo=true;

			idTienePermisoperiodo=this.tienePermisosUsuarioEnPaginaWebDetaFormaPago(PeriodoConstantesFunciones.CLASSNAME);

			if(idTienePermisoperiodo) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetaFormaPago.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosDetaFormaPago.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosDetaFormaPago.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detaformapago =(DetaFormaPago) this.detaformapagoLogic.getDetaFormaPagos().toArray()[this.jTableDatosDetaFormaPago.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detaformapago =(DetaFormaPago) this.detaformapagos.toArray()[this.jTableDatosDetaFormaPago.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualDetaFormaPago(this.getdetaformapago(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysDetaFormaPago(this.detaformapago);

				this.periodoBeanSwingJInternalFrame=new PeriodoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.periodoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.periodoBeanSwingJInternalFrame.getPeriodoLogic().setConnexion(this.detaformapagoLogic.getConnexion());

				if(this.detaformapago.getid_periodo()!=null) {
					this.periodoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.periodoBeanSwingJInternalFrame.setIdActual(this.detaformapago.getid_periodo());
					this.periodoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.periodoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.periodoBeanSwingJInternalFrame.inicializarActualizarBindingTablaPeriodo();
				}

				JInternalFrameBase jinternalFrame =this.periodoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderDetaFormaPago=(TitledBorder)this.jScrollPanelDatosDetaFormaPago.getBorder();
				TitledBorder titledBorderperiodo=(TitledBorder)this.periodoBeanSwingJInternalFrame.jScrollPanelDatosPeriodo.getBorder();

				titledBorderperiodo.setTitle(titledBorderDetaFormaPago.getTitle() + " -> Periodo");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detaformapagoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detaformapagoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetaFormaPagoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detaformapagoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_periodoDetaFormaPagoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detaformapagoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetaFormaPago.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetaFormaPago(this.getdetaformapago(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaFormaPago(this.detaformapago);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detaformapago =(DetaFormaPago) this.detaformapagoLogic.getDetaFormaPagos().toArray()[this.jTableDatosDetaFormaPago.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detaformapago =(DetaFormaPago) this.detaformapagos.toArray()[this.jTableDatosDetaFormaPago.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detaformapago==null) {
						this.detaformapago = new DetaFormaPago();
					}

					this.setVariablesFormularioToObjetoActualDetaFormaPago(this.detaformapago,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaFormaPago(this.detaformapago);
				}

				if(this.detaformapago.getid_periodo()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_periodo = "+this.detaformapago.getid_periodo().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetaFormaPago(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detaformapagoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detaformapagoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetaFormaPagoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detaformapagoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_facturaDetaFormaPagoActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {
			this.facturaBeanSwingJInternalFrame=new FacturaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
			this.facturaBeanSwingJInternalFrame.setJInternalFrameParent(this);
			this.facturaBeanSwingJInternalFrame.sTipoBusqueda="Factura";

			if(!this.sFinalQueryGeneral_factura.equals("")) {
				this.facturaBeanSwingJInternalFrame.setsFinalQueryGeneral(this.sFinalQueryGeneral_factura);
				this.facturaBeanSwingJInternalFrame.sAccionBusqueda="Query";


				this.facturaBeanSwingJInternalFrame.procesarBusqueda(this.facturaBeanSwingJInternalFrame.sAccionBusqueda);
				this.facturaBeanSwingJInternalFrame.inicializarActualizarBindingFactura(false);
			}

			if(!this.sFinalQueryComboFactura.equals("") && false) {
			}


			JInternalFrameBase jinternalFrame =this.facturaBeanSwingJInternalFrame;
			jinternalFrame.setAutoscrolls(true);
			//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
			jinternalFrame.setVisible(true); 


			TitledBorder titledBorderDetaFormaPago=null;
			TitledBorder titledBorderfactura=null;

			if(!this.jScrollPanelDatosDetaFormaPago.getBorder().getClass().equals(EmptyBorder.class)) {
				titledBorderDetaFormaPago=(TitledBorder)this.jScrollPanelDatosDetaFormaPago.getBorder();
				titledBorderfactura=(TitledBorder)this.facturaBeanSwingJInternalFrame.jScrollPanelDatosFactura.getBorder();

				titledBorderfactura.setTitle(titledBorderDetaFormaPago.getTitle() + " -> Factura");
			}

			if(!Constantes.CON_VARIAS_VENTANAS) {
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
			}

			this.jDesktopPane.add(jinternalFrame);

			jinternalFrame.setSelected(true);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetaFormaPagoConstantesFunciones.CLASSNAME);
		}
	}

	public void jButtonid_facturaDetaFormaPagoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detaformapagoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisofactura=true;

			idTienePermisofactura=this.tienePermisosUsuarioEnPaginaWebDetaFormaPago(FacturaConstantesFunciones.CLASSNAME);

			if(idTienePermisofactura) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetaFormaPago.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosDetaFormaPago.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosDetaFormaPago.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detaformapago =(DetaFormaPago) this.detaformapagoLogic.getDetaFormaPagos().toArray()[this.jTableDatosDetaFormaPago.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detaformapago =(DetaFormaPago) this.detaformapagos.toArray()[this.jTableDatosDetaFormaPago.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualDetaFormaPago(this.getdetaformapago(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysDetaFormaPago(this.detaformapago);

				this.facturaBeanSwingJInternalFrame=new FacturaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.facturaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.facturaBeanSwingJInternalFrame.getFacturaLogic().setConnexion(this.detaformapagoLogic.getConnexion());

				if(this.detaformapago.getid_factura()!=null) {
					this.facturaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.facturaBeanSwingJInternalFrame.setIdActual(this.detaformapago.getid_factura());
					this.facturaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.facturaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.facturaBeanSwingJInternalFrame.inicializarActualizarBindingTablaFactura();
				}

				JInternalFrameBase jinternalFrame =this.facturaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderDetaFormaPago=(TitledBorder)this.jScrollPanelDatosDetaFormaPago.getBorder();
				TitledBorder titledBorderfactura=(TitledBorder)this.facturaBeanSwingJInternalFrame.jScrollPanelDatosFactura.getBorder();

				titledBorderfactura.setTitle(titledBorderDetaFormaPago.getTitle() + " -> Factura");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detaformapagoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detaformapagoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetaFormaPagoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detaformapagoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_facturaDetaFormaPagoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detaformapagoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetaFormaPago.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetaFormaPago(this.getdetaformapago(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaFormaPago(this.detaformapago);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detaformapago =(DetaFormaPago) this.detaformapagoLogic.getDetaFormaPagos().toArray()[this.jTableDatosDetaFormaPago.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detaformapago =(DetaFormaPago) this.detaformapagos.toArray()[this.jTableDatosDetaFormaPago.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detaformapago==null) {
						this.detaformapago = new DetaFormaPago();
					}

					this.setVariablesFormularioToObjetoActualDetaFormaPago(this.detaformapago,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaFormaPago(this.detaformapago);
				}

				if(this.detaformapago.getid_factura()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_factura = "+this.detaformapago.getid_factura().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetaFormaPago(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detaformapagoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detaformapagoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetaFormaPagoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detaformapagoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_tipo_forma_pagoDetaFormaPagoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detaformapagoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotipoformapago=true;

			idTienePermisotipoformapago=this.tienePermisosUsuarioEnPaginaWebDetaFormaPago(TipoFormaPagoConstantesFunciones.CLASSNAME);

			if(idTienePermisotipoformapago) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetaFormaPago.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosDetaFormaPago.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosDetaFormaPago.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detaformapago =(DetaFormaPago) this.detaformapagoLogic.getDetaFormaPagos().toArray()[this.jTableDatosDetaFormaPago.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detaformapago =(DetaFormaPago) this.detaformapagos.toArray()[this.jTableDatosDetaFormaPago.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualDetaFormaPago(this.getdetaformapago(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysDetaFormaPago(this.detaformapago);

				this.tipoformapagoBeanSwingJInternalFrame=new TipoFormaPagoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.tipoformapagoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.tipoformapagoBeanSwingJInternalFrame.getTipoFormaPagoLogic().setConnexion(this.detaformapagoLogic.getConnexion());

				if(this.detaformapago.getid_tipo_forma_pago()!=null) {
					this.tipoformapagoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.tipoformapagoBeanSwingJInternalFrame.setIdActual(this.detaformapago.getid_tipo_forma_pago());
					this.tipoformapagoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.tipoformapagoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.tipoformapagoBeanSwingJInternalFrame.inicializarActualizarBindingTablaTipoFormaPago();
				}

				JInternalFrameBase jinternalFrame =this.tipoformapagoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderDetaFormaPago=(TitledBorder)this.jScrollPanelDatosDetaFormaPago.getBorder();
				TitledBorder titledBordertipoformapago=(TitledBorder)this.tipoformapagoBeanSwingJInternalFrame.jScrollPanelDatosTipoFormaPago.getBorder();

				titledBordertipoformapago.setTitle(titledBorderDetaFormaPago.getTitle() + " -> Tipo Forma Pago");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detaformapagoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detaformapagoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetaFormaPagoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detaformapagoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_tipo_forma_pagoDetaFormaPagoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detaformapagoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetaFormaPago.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetaFormaPago(this.getdetaformapago(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaFormaPago(this.detaformapago);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detaformapago =(DetaFormaPago) this.detaformapagoLogic.getDetaFormaPagos().toArray()[this.jTableDatosDetaFormaPago.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detaformapago =(DetaFormaPago) this.detaformapagos.toArray()[this.jTableDatosDetaFormaPago.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detaformapago==null) {
						this.detaformapago = new DetaFormaPago();
					}

					this.setVariablesFormularioToObjetoActualDetaFormaPago(this.detaformapago,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaFormaPago(this.detaformapago);
				}

				if(this.detaformapago.getid_tipo_forma_pago()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_tipo_forma_pago = "+this.detaformapago.getid_tipo_forma_pago().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetaFormaPago(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detaformapagoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detaformapagoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetaFormaPagoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detaformapagoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_tipo_deta_forma_pagoDetaFormaPagoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detaformapagoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotipodetaformapago=true;

			idTienePermisotipodetaformapago=this.tienePermisosUsuarioEnPaginaWebDetaFormaPago(TipoDetaFormaPagoConstantesFunciones.CLASSNAME);

			if(idTienePermisotipodetaformapago) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetaFormaPago.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosDetaFormaPago.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosDetaFormaPago.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detaformapago =(DetaFormaPago) this.detaformapagoLogic.getDetaFormaPagos().toArray()[this.jTableDatosDetaFormaPago.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detaformapago =(DetaFormaPago) this.detaformapagos.toArray()[this.jTableDatosDetaFormaPago.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualDetaFormaPago(this.getdetaformapago(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysDetaFormaPago(this.detaformapago);

				this.tipodetaformapagoBeanSwingJInternalFrame=new TipoDetaFormaPagoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.tipodetaformapagoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.tipodetaformapagoBeanSwingJInternalFrame.getTipoDetaFormaPagoLogic().setConnexion(this.detaformapagoLogic.getConnexion());

				if(this.detaformapago.getid_tipo_deta_forma_pago()!=null) {
					this.tipodetaformapagoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.tipodetaformapagoBeanSwingJInternalFrame.setIdActual(this.detaformapago.getid_tipo_deta_forma_pago());
					this.tipodetaformapagoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.tipodetaformapagoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.tipodetaformapagoBeanSwingJInternalFrame.inicializarActualizarBindingTablaTipoDetaFormaPago();
				}

				JInternalFrameBase jinternalFrame =this.tipodetaformapagoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderDetaFormaPago=(TitledBorder)this.jScrollPanelDatosDetaFormaPago.getBorder();
				TitledBorder titledBordertipodetaformapago=(TitledBorder)this.tipodetaformapagoBeanSwingJInternalFrame.jScrollPanelDatosTipoDetaFormaPago.getBorder();

				titledBordertipodetaformapago.setTitle(titledBorderDetaFormaPago.getTitle() + " -> Tipo Detalle Forma Pago");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detaformapagoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detaformapagoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetaFormaPagoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detaformapagoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_tipo_deta_forma_pagoDetaFormaPagoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detaformapagoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetaFormaPago.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetaFormaPago(this.getdetaformapago(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaFormaPago(this.detaformapago);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detaformapago =(DetaFormaPago) this.detaformapagoLogic.getDetaFormaPagos().toArray()[this.jTableDatosDetaFormaPago.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detaformapago =(DetaFormaPago) this.detaformapagos.toArray()[this.jTableDatosDetaFormaPago.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detaformapago==null) {
						this.detaformapago = new DetaFormaPago();
					}

					this.setVariablesFormularioToObjetoActualDetaFormaPago(this.detaformapago,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaFormaPago(this.detaformapago);
				}

				if(this.detaformapago.getid_tipo_deta_forma_pago()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_tipo_deta_forma_pago = "+this.detaformapago.getid_tipo_deta_forma_pago().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetaFormaPago(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detaformapagoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detaformapagoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetaFormaPagoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detaformapagoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_deta_forma_pago_factuDetaFormaPagoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detaformapagoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisodetaformapagofactu=true;

			idTienePermisodetaformapagofactu=this.tienePermisosUsuarioEnPaginaWebDetaFormaPago(DetaFormaPagoFactuConstantesFunciones.CLASSNAME);

			if(idTienePermisodetaformapagofactu) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetaFormaPago.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosDetaFormaPago.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosDetaFormaPago.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detaformapago =(DetaFormaPago) this.detaformapagoLogic.getDetaFormaPagos().toArray()[this.jTableDatosDetaFormaPago.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detaformapago =(DetaFormaPago) this.detaformapagos.toArray()[this.jTableDatosDetaFormaPago.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualDetaFormaPago(this.getdetaformapago(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysDetaFormaPago(this.detaformapago);

				this.detaformapagofactuBeanSwingJInternalFrame=new DetaFormaPagoFactuBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.detaformapagofactuBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.detaformapagofactuBeanSwingJInternalFrame.getDetaFormaPagoFactuLogic().setConnexion(this.detaformapagoLogic.getConnexion());

				if(this.detaformapago.getid_deta_forma_pago_factu()!=null) {
					this.detaformapagofactuBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.detaformapagofactuBeanSwingJInternalFrame.setIdActual(this.detaformapago.getid_deta_forma_pago_factu());
					this.detaformapagofactuBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.detaformapagofactuBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.detaformapagofactuBeanSwingJInternalFrame.inicializarActualizarBindingTablaDetaFormaPagoFactu();
				}

				JInternalFrameBase jinternalFrame =this.detaformapagofactuBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderDetaFormaPago=(TitledBorder)this.jScrollPanelDatosDetaFormaPago.getBorder();
				TitledBorder titledBorderdetaformapagofactu=(TitledBorder)this.detaformapagofactuBeanSwingJInternalFrame.jScrollPanelDatosDetaFormaPagoFactu.getBorder();

				titledBorderdetaformapagofactu.setTitle(titledBorderDetaFormaPago.getTitle() + " -> Deta Forma Pago Factu");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detaformapagoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detaformapagoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetaFormaPagoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detaformapagoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_deta_forma_pago_factuDetaFormaPagoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detaformapagoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetaFormaPago.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetaFormaPago(this.getdetaformapago(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaFormaPago(this.detaformapago);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detaformapago =(DetaFormaPago) this.detaformapagoLogic.getDetaFormaPagos().toArray()[this.jTableDatosDetaFormaPago.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detaformapago =(DetaFormaPago) this.detaformapagos.toArray()[this.jTableDatosDetaFormaPago.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detaformapago==null) {
						this.detaformapago = new DetaFormaPago();
					}

					this.setVariablesFormularioToObjetoActualDetaFormaPago(this.detaformapago,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaFormaPago(this.detaformapago);
				}

				if(this.detaformapago.getid_deta_forma_pago_factu()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_deta_forma_pago_factu = "+this.detaformapago.getid_deta_forma_pago_factu().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetaFormaPago(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detaformapagoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detaformapagoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetaFormaPagoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detaformapagoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_cuenta_contableDetaFormaPagoActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {
			this.cuentacontableBeanSwingJInternalFrame=new CuentaContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
			this.cuentacontableBeanSwingJInternalFrame.setJInternalFrameParent(this);
			this.cuentacontableBeanSwingJInternalFrame.sTipoBusqueda="CuentaContable";

			if(!this.sFinalQueryGeneral_cuentacontable.equals("")) {
				this.cuentacontableBeanSwingJInternalFrame.setsFinalQueryGeneral(this.sFinalQueryGeneral_cuentacontable);
				this.cuentacontableBeanSwingJInternalFrame.sAccionBusqueda="Query";


				this.cuentacontableBeanSwingJInternalFrame.procesarBusqueda(this.cuentacontableBeanSwingJInternalFrame.sAccionBusqueda);
				this.cuentacontableBeanSwingJInternalFrame.inicializarActualizarBindingCuentaContable(false);
			}

			if(!this.sFinalQueryComboCuentaContable.equals("") && false) {
			}


			JInternalFrameBase jinternalFrame =this.cuentacontableBeanSwingJInternalFrame;
			jinternalFrame.setAutoscrolls(true);
			//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
			jinternalFrame.setVisible(true); 


			TitledBorder titledBorderDetaFormaPago=null;
			TitledBorder titledBordercuentacontable=null;

			if(!this.jScrollPanelDatosDetaFormaPago.getBorder().getClass().equals(EmptyBorder.class)) {
				titledBorderDetaFormaPago=(TitledBorder)this.jScrollPanelDatosDetaFormaPago.getBorder();
				titledBordercuentacontable=(TitledBorder)this.cuentacontableBeanSwingJInternalFrame.jScrollPanelDatosCuentaContable.getBorder();

				titledBordercuentacontable.setTitle(titledBorderDetaFormaPago.getTitle() + " -> Cuenta Contable");
			}

			if(!Constantes.CON_VARIAS_VENTANAS) {
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
			}

			this.jDesktopPane.add(jinternalFrame);

			jinternalFrame.setSelected(true);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetaFormaPagoConstantesFunciones.CLASSNAME);
		}
	}

	public void jButtonid_cuenta_contableDetaFormaPagoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detaformapagoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisocuentacontable=true;

			idTienePermisocuentacontable=this.tienePermisosUsuarioEnPaginaWebDetaFormaPago(CuentaContableConstantesFunciones.CLASSNAME);

			if(idTienePermisocuentacontable) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetaFormaPago.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosDetaFormaPago.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosDetaFormaPago.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detaformapago =(DetaFormaPago) this.detaformapagoLogic.getDetaFormaPagos().toArray()[this.jTableDatosDetaFormaPago.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detaformapago =(DetaFormaPago) this.detaformapagos.toArray()[this.jTableDatosDetaFormaPago.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualDetaFormaPago(this.getdetaformapago(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysDetaFormaPago(this.detaformapago);

				this.cuentacontableBeanSwingJInternalFrame=new CuentaContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.cuentacontableBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.cuentacontableBeanSwingJInternalFrame.getCuentaContableLogic().setConnexion(this.detaformapagoLogic.getConnexion());

				if(this.detaformapago.getid_cuenta_contable()!=null) {
					this.cuentacontableBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.cuentacontableBeanSwingJInternalFrame.setIdActual(this.detaformapago.getid_cuenta_contable());
					this.cuentacontableBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.cuentacontableBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.cuentacontableBeanSwingJInternalFrame.inicializarActualizarBindingTablaCuentaContable();
				}

				JInternalFrameBase jinternalFrame =this.cuentacontableBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderDetaFormaPago=(TitledBorder)this.jScrollPanelDatosDetaFormaPago.getBorder();
				TitledBorder titledBordercuentacontable=(TitledBorder)this.cuentacontableBeanSwingJInternalFrame.jScrollPanelDatosCuentaContable.getBorder();

				titledBordercuentacontable.setTitle(titledBorderDetaFormaPago.getTitle() + " -> Cuenta Contable");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detaformapagoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detaformapagoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetaFormaPagoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detaformapagoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_cuenta_contableDetaFormaPagoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detaformapagoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetaFormaPago.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetaFormaPago(this.getdetaformapago(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaFormaPago(this.detaformapago);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detaformapago =(DetaFormaPago) this.detaformapagoLogic.getDetaFormaPagos().toArray()[this.jTableDatosDetaFormaPago.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detaformapago =(DetaFormaPago) this.detaformapagos.toArray()[this.jTableDatosDetaFormaPago.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detaformapago==null) {
						this.detaformapago = new DetaFormaPago();
					}

					this.setVariablesFormularioToObjetoActualDetaFormaPago(this.detaformapago,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaFormaPago(this.detaformapago);
				}

				if(this.detaformapago.getid_cuenta_contable()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_cuenta_contable = "+this.detaformapago.getid_cuenta_contable().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetaFormaPago(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detaformapagoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detaformapagoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetaFormaPagoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detaformapagoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_tipo_retencionDetaFormaPagoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detaformapagoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotiporetencion=true;

			idTienePermisotiporetencion=this.tienePermisosUsuarioEnPaginaWebDetaFormaPago(TipoRetencionConstantesFunciones.CLASSNAME);

			if(idTienePermisotiporetencion) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetaFormaPago.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosDetaFormaPago.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosDetaFormaPago.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detaformapago =(DetaFormaPago) this.detaformapagoLogic.getDetaFormaPagos().toArray()[this.jTableDatosDetaFormaPago.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detaformapago =(DetaFormaPago) this.detaformapagos.toArray()[this.jTableDatosDetaFormaPago.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualDetaFormaPago(this.getdetaformapago(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysDetaFormaPago(this.detaformapago);

				this.tiporetencionBeanSwingJInternalFrame=new TipoRetencionBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.tiporetencionBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.tiporetencionBeanSwingJInternalFrame.getTipoRetencionLogic().setConnexion(this.detaformapagoLogic.getConnexion());

				if(this.detaformapago.getid_tipo_retencion()!=null) {
					this.tiporetencionBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.tiporetencionBeanSwingJInternalFrame.setIdActual(this.detaformapago.getid_tipo_retencion());
					this.tiporetencionBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.tiporetencionBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.tiporetencionBeanSwingJInternalFrame.inicializarActualizarBindingTablaTipoRetencion();
				}

				JInternalFrameBase jinternalFrame =this.tiporetencionBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderDetaFormaPago=(TitledBorder)this.jScrollPanelDatosDetaFormaPago.getBorder();
				TitledBorder titledBordertiporetencion=(TitledBorder)this.tiporetencionBeanSwingJInternalFrame.jScrollPanelDatosTipoRetencion.getBorder();

				titledBordertiporetencion.setTitle(titledBorderDetaFormaPago.getTitle() + " -> Tipo Retencion ");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detaformapagoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detaformapagoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetaFormaPagoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detaformapagoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_tipo_retencionDetaFormaPagoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detaformapagoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetaFormaPago.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetaFormaPago(this.getdetaformapago(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaFormaPago(this.detaformapago);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detaformapago =(DetaFormaPago) this.detaformapagoLogic.getDetaFormaPagos().toArray()[this.jTableDatosDetaFormaPago.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detaformapago =(DetaFormaPago) this.detaformapagos.toArray()[this.jTableDatosDetaFormaPago.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detaformapago==null) {
						this.detaformapago = new DetaFormaPago();
					}

					this.setVariablesFormularioToObjetoActualDetaFormaPago(this.detaformapago,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaFormaPago(this.detaformapago);
				}

				if(this.detaformapago.getid_tipo_retencion()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_tipo_retencion = "+this.detaformapago.getid_tipo_retencion().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetaFormaPago(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detaformapagoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detaformapagoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetaFormaPagoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detaformapagoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonvalorDetaFormaPagoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detaformapagoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetaFormaPago.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetaFormaPago(this.getdetaformapago(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaFormaPago(this.detaformapago);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detaformapago =(DetaFormaPago) this.detaformapagoLogic.getDetaFormaPagos().toArray()[this.jTableDatosDetaFormaPago.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detaformapago =(DetaFormaPago) this.detaformapagos.toArray()[this.jTableDatosDetaFormaPago.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detaformapago==null) {
						this.detaformapago = new DetaFormaPago();
					}

					this.setVariablesFormularioToObjetoActualDetaFormaPago(this.detaformapago,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaFormaPago(this.detaformapago);
				}

				if(this.detaformapago.getvalor()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where valor = "+this.detaformapago.getvalor().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetaFormaPago(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detaformapagoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detaformapagoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetaFormaPagoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detaformapagoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonfecha_inicialDetaFormaPagoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detaformapagoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetaFormaPago.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetaFormaPago(this.getdetaformapago(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaFormaPago(this.detaformapago);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detaformapago =(DetaFormaPago) this.detaformapagoLogic.getDetaFormaPagos().toArray()[this.jTableDatosDetaFormaPago.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detaformapago =(DetaFormaPago) this.detaformapagos.toArray()[this.jTableDatosDetaFormaPago.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detaformapago==null) {
						this.detaformapago = new DetaFormaPago();
					}

					this.setVariablesFormularioToObjetoActualDetaFormaPago(this.detaformapago,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaFormaPago(this.detaformapago);
				}

				if(this.detaformapago.getfecha_inicial()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where fecha_inicial = '"+Funciones2.getStringPostgresDate(this.detaformapago.getfecha_inicial())+"' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetaFormaPago(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detaformapagoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detaformapagoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetaFormaPagoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detaformapagoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonfecha_finalDetaFormaPagoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detaformapagoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetaFormaPago.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetaFormaPago(this.getdetaformapago(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaFormaPago(this.detaformapago);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detaformapago =(DetaFormaPago) this.detaformapagoLogic.getDetaFormaPagos().toArray()[this.jTableDatosDetaFormaPago.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detaformapago =(DetaFormaPago) this.detaformapagos.toArray()[this.jTableDatosDetaFormaPago.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detaformapago==null) {
						this.detaformapago = new DetaFormaPago();
					}

					this.setVariablesFormularioToObjetoActualDetaFormaPago(this.detaformapago,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaFormaPago(this.detaformapago);
				}

				if(this.detaformapago.getfecha_final()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where fecha_final = '"+Funciones2.getStringPostgresDate(this.detaformapago.getfecha_final())+"' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetaFormaPago(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detaformapagoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detaformapagoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetaFormaPagoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detaformapagoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonporcentajeDetaFormaPagoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detaformapagoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetaFormaPago.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetaFormaPago(this.getdetaformapago(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaFormaPago(this.detaformapago);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detaformapago =(DetaFormaPago) this.detaformapagoLogic.getDetaFormaPagos().toArray()[this.jTableDatosDetaFormaPago.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detaformapago =(DetaFormaPago) this.detaformapagos.toArray()[this.jTableDatosDetaFormaPago.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detaformapago==null) {
						this.detaformapago = new DetaFormaPago();
					}

					this.setVariablesFormularioToObjetoActualDetaFormaPago(this.detaformapago,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaFormaPago(this.detaformapago);
				}

				if(this.detaformapago.getporcentaje()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where porcentaje = "+this.detaformapago.getporcentaje().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetaFormaPago(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detaformapagoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detaformapagoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetaFormaPagoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detaformapagoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonretencionDetaFormaPagoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detaformapagoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetaFormaPago.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetaFormaPago(this.getdetaformapago(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaFormaPago(this.detaformapago);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detaformapago =(DetaFormaPago) this.detaformapagoLogic.getDetaFormaPagos().toArray()[this.jTableDatosDetaFormaPago.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detaformapago =(DetaFormaPago) this.detaformapagos.toArray()[this.jTableDatosDetaFormaPago.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detaformapago==null) {
						this.detaformapago = new DetaFormaPago();
					}

					this.setVariablesFormularioToObjetoActualDetaFormaPago(this.detaformapago,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaFormaPago(this.detaformapago);
				}

				if(this.detaformapago.getretencion()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where retencion = "+this.detaformapago.getretencion().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetaFormaPago(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detaformapagoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detaformapagoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetaFormaPagoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detaformapagoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonporcentaje_retencionDetaFormaPagoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detaformapagoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetaFormaPago.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetaFormaPago(this.getdetaformapago(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaFormaPago(this.detaformapago);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detaformapago =(DetaFormaPago) this.detaformapagoLogic.getDetaFormaPagos().toArray()[this.jTableDatosDetaFormaPago.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detaformapago =(DetaFormaPago) this.detaformapagos.toArray()[this.jTableDatosDetaFormaPago.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detaformapago==null) {
						this.detaformapago = new DetaFormaPago();
					}

					this.setVariablesFormularioToObjetoActualDetaFormaPago(this.detaformapago,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaFormaPago(this.detaformapago);
				}

				if(this.detaformapago.getporcentaje_retencion()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where porcentaje_retencion = "+this.detaformapago.getporcentaje_retencion().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetaFormaPago(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detaformapagoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detaformapagoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetaFormaPagoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detaformapagoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonbase_retencionDetaFormaPagoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detaformapagoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetaFormaPago.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetaFormaPago(this.getdetaformapago(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaFormaPago(this.detaformapago);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detaformapago =(DetaFormaPago) this.detaformapagoLogic.getDetaFormaPagos().toArray()[this.jTableDatosDetaFormaPago.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detaformapago =(DetaFormaPago) this.detaformapagos.toArray()[this.jTableDatosDetaFormaPago.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detaformapago==null) {
						this.detaformapago = new DetaFormaPago();
					}

					this.setVariablesFormularioToObjetoActualDetaFormaPago(this.detaformapago,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaFormaPago(this.detaformapago);
				}

				if(this.detaformapago.getbase_retencion()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where base_retencion = "+this.detaformapago.getbase_retencion().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetaFormaPago(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detaformapagoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detaformapagoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetaFormaPagoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detaformapagoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonvalor_retencionDetaFormaPagoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detaformapagoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetaFormaPago.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetaFormaPago(this.getdetaformapago(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaFormaPago(this.detaformapago);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detaformapago =(DetaFormaPago) this.detaformapagoLogic.getDetaFormaPagos().toArray()[this.jTableDatosDetaFormaPago.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detaformapago =(DetaFormaPago) this.detaformapagos.toArray()[this.jTableDatosDetaFormaPago.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detaformapago==null) {
						this.detaformapago = new DetaFormaPago();
					}

					this.setVariablesFormularioToObjetoActualDetaFormaPago(this.detaformapago,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaFormaPago(this.detaformapago);
				}

				if(this.detaformapago.getvalor_retencion()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where valor_retencion = "+this.detaformapago.getvalor_retencion().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetaFormaPago(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detaformapagoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detaformapagoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetaFormaPagoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detaformapagoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonnumero_retencionDetaFormaPagoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detaformapagoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetaFormaPago.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetaFormaPago(this.getdetaformapago(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaFormaPago(this.detaformapago);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detaformapago =(DetaFormaPago) this.detaformapagoLogic.getDetaFormaPagos().toArray()[this.jTableDatosDetaFormaPago.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detaformapago =(DetaFormaPago) this.detaformapagos.toArray()[this.jTableDatosDetaFormaPago.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detaformapago==null) {
						this.detaformapago = new DetaFormaPago();
					}

					this.setVariablesFormularioToObjetoActualDetaFormaPago(this.detaformapago,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaFormaPago(this.detaformapago);
				}

				if(this.detaformapago.getnumero_retencion()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where numero_retencion like '%"+this.detaformapago.getnumero_retencion()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetaFormaPago(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detaformapagoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detaformapagoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetaFormaPagoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detaformapagoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonnumero_diasDetaFormaPagoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detaformapagoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetaFormaPago.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetaFormaPago(this.getdetaformapago(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaFormaPago(this.detaformapago);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detaformapago =(DetaFormaPago) this.detaformapagoLogic.getDetaFormaPagos().toArray()[this.jTableDatosDetaFormaPago.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detaformapago =(DetaFormaPago) this.detaformapagos.toArray()[this.jTableDatosDetaFormaPago.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detaformapago==null) {
						this.detaformapago = new DetaFormaPago();
					}

					this.setVariablesFormularioToObjetoActualDetaFormaPago(this.detaformapago,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaFormaPago(this.detaformapago);
				}

				if(this.detaformapago.getnumero_dias()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where numero_dias = "+this.detaformapago.getnumero_dias().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetaFormaPago(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detaformapagoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detaformapagoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetaFormaPagoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detaformapagoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonnumero_cuotaDetaFormaPagoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detaformapagoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetaFormaPago.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetaFormaPago(this.getdetaformapago(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaFormaPago(this.detaformapago);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detaformapago =(DetaFormaPago) this.detaformapagoLogic.getDetaFormaPagos().toArray()[this.jTableDatosDetaFormaPago.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detaformapago =(DetaFormaPago) this.detaformapagos.toArray()[this.jTableDatosDetaFormaPago.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detaformapago==null) {
						this.detaformapago = new DetaFormaPago();
					}

					this.setVariablesFormularioToObjetoActualDetaFormaPago(this.detaformapago,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaFormaPago(this.detaformapago);
				}

				if(this.detaformapago.getnumero_cuota()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where numero_cuota = "+this.detaformapago.getnumero_cuota().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetaFormaPago(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detaformapagoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detaformapagoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetaFormaPagoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detaformapagoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtondescripcionDetaFormaPagoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detaformapagoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetaFormaPago.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetaFormaPago(this.getdetaformapago(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaFormaPago(this.detaformapago);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detaformapago =(DetaFormaPago) this.detaformapagoLogic.getDetaFormaPagos().toArray()[this.jTableDatosDetaFormaPago.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detaformapago =(DetaFormaPago) this.detaformapagos.toArray()[this.jTableDatosDetaFormaPago.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detaformapago==null) {
						this.detaformapago = new DetaFormaPago();
					}

					this.setVariablesFormularioToObjetoActualDetaFormaPago(this.detaformapago,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaFormaPago(this.detaformapago);
				}

				if(this.detaformapago.getdescripcion()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where descripcion like '%"+this.detaformapago.getdescripcion()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetaFormaPago(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detaformapagoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detaformapagoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetaFormaPagoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detaformapagoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_anioDetaFormaPagoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detaformapagoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoanio=true;

			idTienePermisoanio=this.tienePermisosUsuarioEnPaginaWebDetaFormaPago(AnioConstantesFunciones.CLASSNAME);

			if(idTienePermisoanio) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetaFormaPago.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosDetaFormaPago.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosDetaFormaPago.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detaformapago =(DetaFormaPago) this.detaformapagoLogic.getDetaFormaPagos().toArray()[this.jTableDatosDetaFormaPago.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detaformapago =(DetaFormaPago) this.detaformapagos.toArray()[this.jTableDatosDetaFormaPago.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualDetaFormaPago(this.getdetaformapago(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysDetaFormaPago(this.detaformapago);

				this.anioBeanSwingJInternalFrame=new AnioBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.anioBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.anioBeanSwingJInternalFrame.getAnioLogic().setConnexion(this.detaformapagoLogic.getConnexion());

				if(this.detaformapago.getid_anio()!=null) {
					this.anioBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.anioBeanSwingJInternalFrame.setIdActual(this.detaformapago.getid_anio());
					this.anioBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.anioBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.anioBeanSwingJInternalFrame.inicializarActualizarBindingTablaAnio();
				}

				JInternalFrameBase jinternalFrame =this.anioBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderDetaFormaPago=(TitledBorder)this.jScrollPanelDatosDetaFormaPago.getBorder();
				TitledBorder titledBorderanio=(TitledBorder)this.anioBeanSwingJInternalFrame.jScrollPanelDatosAnio.getBorder();

				titledBorderanio.setTitle(titledBorderDetaFormaPago.getTitle() + " -> Anio");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detaformapagoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detaformapagoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetaFormaPagoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detaformapagoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_anioDetaFormaPagoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detaformapagoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetaFormaPago.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetaFormaPago(this.getdetaformapago(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaFormaPago(this.detaformapago);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detaformapago =(DetaFormaPago) this.detaformapagoLogic.getDetaFormaPagos().toArray()[this.jTableDatosDetaFormaPago.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detaformapago =(DetaFormaPago) this.detaformapagos.toArray()[this.jTableDatosDetaFormaPago.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detaformapago==null) {
						this.detaformapago = new DetaFormaPago();
					}

					this.setVariablesFormularioToObjetoActualDetaFormaPago(this.detaformapago,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaFormaPago(this.detaformapago);
				}

				if(this.detaformapago.getid_anio()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_anio = "+this.detaformapago.getid_anio().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetaFormaPago(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detaformapagoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detaformapagoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetaFormaPagoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detaformapagoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_mesDetaFormaPagoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detaformapagoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisomes=true;

			idTienePermisomes=this.tienePermisosUsuarioEnPaginaWebDetaFormaPago(MesConstantesFunciones.CLASSNAME);

			if(idTienePermisomes) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetaFormaPago.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosDetaFormaPago.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosDetaFormaPago.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detaformapago =(DetaFormaPago) this.detaformapagoLogic.getDetaFormaPagos().toArray()[this.jTableDatosDetaFormaPago.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detaformapago =(DetaFormaPago) this.detaformapagos.toArray()[this.jTableDatosDetaFormaPago.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualDetaFormaPago(this.getdetaformapago(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysDetaFormaPago(this.detaformapago);

				this.mesBeanSwingJInternalFrame=new MesBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.mesBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.mesBeanSwingJInternalFrame.getMesLogic().setConnexion(this.detaformapagoLogic.getConnexion());

				if(this.detaformapago.getid_mes()!=null) {
					this.mesBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.mesBeanSwingJInternalFrame.setIdActual(this.detaformapago.getid_mes());
					this.mesBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.mesBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.mesBeanSwingJInternalFrame.inicializarActualizarBindingTablaMes();
				}

				JInternalFrameBase jinternalFrame =this.mesBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderDetaFormaPago=(TitledBorder)this.jScrollPanelDatosDetaFormaPago.getBorder();
				TitledBorder titledBordermes=(TitledBorder)this.mesBeanSwingJInternalFrame.jScrollPanelDatosMes.getBorder();

				titledBordermes.setTitle(titledBorderDetaFormaPago.getTitle() + " -> Mes");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detaformapagoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detaformapagoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetaFormaPagoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detaformapagoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_mesDetaFormaPagoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detaformapagoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetaFormaPago.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetaFormaPago(this.getdetaformapago(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaFormaPago(this.detaformapago);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detaformapago =(DetaFormaPago) this.detaformapagoLogic.getDetaFormaPagos().toArray()[this.jTableDatosDetaFormaPago.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detaformapago =(DetaFormaPago) this.detaformapagos.toArray()[this.jTableDatosDetaFormaPago.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detaformapago==null) {
						this.detaformapago = new DetaFormaPago();
					}

					this.setVariablesFormularioToObjetoActualDetaFormaPago(this.detaformapago,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaFormaPago(this.detaformapago);
				}

				if(this.detaformapago.getid_mes()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_mes = "+this.detaformapago.getid_mes().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetaFormaPago(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detaformapagoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detaformapagoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetaFormaPagoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detaformapagoLogic.closeNewConnexionToDeep();
				}

			}
		}

	
	
	public void jButtonFK_IdAnioDetaFormaPagoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detaformapagoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingDetaFormaPago(false,false);

			this.getDetaFormaPagosFK_IdAnio();

			this.inicializarActualizarBindingDetaFormaPago(false);

			//if(DetaFormaPagoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingDetaFormaPago(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detaformapagoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detaformapagoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetaFormaPagoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detaformapagoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdCuentaContableDetaFormaPagoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detaformapagoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingDetaFormaPago(false,false);

			this.getDetaFormaPagosFK_IdCuentaContable();

			this.inicializarActualizarBindingDetaFormaPago(false);

			//if(DetaFormaPagoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingDetaFormaPago(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detaformapagoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detaformapagoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetaFormaPagoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detaformapagoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdDetaFormaPagoFactuDetaFormaPagoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detaformapagoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingDetaFormaPago(false,false);

			this.getDetaFormaPagosFK_IdDetaFormaPagoFactu();

			this.inicializarActualizarBindingDetaFormaPago(false);

			//if(DetaFormaPagoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingDetaFormaPago(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detaformapagoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detaformapagoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetaFormaPagoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detaformapagoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdEjercicioDetaFormaPagoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detaformapagoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingDetaFormaPago(false,false);

			this.getDetaFormaPagosFK_IdEjercicio();

			this.inicializarActualizarBindingDetaFormaPago(false);

			//if(DetaFormaPagoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingDetaFormaPago(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detaformapagoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detaformapagoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetaFormaPagoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detaformapagoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdEmpresaDetaFormaPagoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detaformapagoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingDetaFormaPago(false,false);

			this.getDetaFormaPagosFK_IdEmpresa();

			this.inicializarActualizarBindingDetaFormaPago(false);

			//if(DetaFormaPagoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingDetaFormaPago(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detaformapagoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detaformapagoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetaFormaPagoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detaformapagoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdFacturaDetaFormaPagoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detaformapagoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingDetaFormaPago(false,false);

			this.getDetaFormaPagosFK_IdFactura();

			this.inicializarActualizarBindingDetaFormaPago(false);

			//if(DetaFormaPagoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingDetaFormaPago(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detaformapagoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detaformapagoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetaFormaPagoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detaformapagoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdMesDetaFormaPagoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detaformapagoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingDetaFormaPago(false,false);

			this.getDetaFormaPagosFK_IdMes();

			this.inicializarActualizarBindingDetaFormaPago(false);

			//if(DetaFormaPagoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingDetaFormaPago(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detaformapagoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detaformapagoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetaFormaPagoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detaformapagoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdPeriodoDetaFormaPagoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detaformapagoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingDetaFormaPago(false,false);

			this.getDetaFormaPagosFK_IdPeriodo();

			this.inicializarActualizarBindingDetaFormaPago(false);

			//if(DetaFormaPagoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingDetaFormaPago(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detaformapagoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detaformapagoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetaFormaPagoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detaformapagoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdSucursalDetaFormaPagoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detaformapagoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingDetaFormaPago(false,false);

			this.getDetaFormaPagosFK_IdSucursal();

			this.inicializarActualizarBindingDetaFormaPago(false);

			//if(DetaFormaPagoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingDetaFormaPago(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detaformapagoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detaformapagoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetaFormaPagoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detaformapagoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdTipoDetaFormaPagoDetaFormaPagoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detaformapagoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingDetaFormaPago(false,false);

			this.getDetaFormaPagosFK_IdTipoDetaFormaPago();

			this.inicializarActualizarBindingDetaFormaPago(false);

			//if(DetaFormaPagoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingDetaFormaPago(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detaformapagoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detaformapagoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetaFormaPagoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detaformapagoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdTipoFormaPagoDetaFormaPagoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detaformapagoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingDetaFormaPago(false,false);

			this.getDetaFormaPagosFK_IdTipoFormaPago();

			this.inicializarActualizarBindingDetaFormaPago(false);

			//if(DetaFormaPagoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingDetaFormaPago(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detaformapagoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detaformapagoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetaFormaPagoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detaformapagoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdTipoRetencionDetaFormaPagoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detaformapagoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingDetaFormaPago(false,false);

			this.getDetaFormaPagosFK_IdTipoRetencion();

			this.inicializarActualizarBindingDetaFormaPago(false);

			//if(DetaFormaPagoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingDetaFormaPago(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detaformapagoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detaformapagoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetaFormaPagoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detaformapagoLogic.closeNewConnexionToDeep();
			}
		}
	}

	
	public void closingInternalFrameDetaFormaPago() {
		if(this.jInternalFrameDetalleFormDetaFormaPago!=null) {
		

		if(this.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoBeanSwingJInternalFramePopup=null;
		}	
		
		
		}
		
		if(this.jInternalFrameDetalleFormDetaFormaPago!=null) {
			this.jInternalFrameDetalleFormDetaFormaPago.setVisible(false);	    			
			this.jInternalFrameDetalleFormDetaFormaPago.dispose();
			this.jInternalFrameDetalleFormDetaFormaPago=null;
		}
		
		
		if(this.jInternalFrameReporteDinamicoDetaFormaPago!=null) {
			this.jInternalFrameReporteDinamicoDetaFormaPago.setVisible(false);	    			
			this.jInternalFrameReporteDinamicoDetaFormaPago.dispose();
			this.jInternalFrameReporteDinamicoDetaFormaPago=null;
		}
		
		if(this.jInternalFrameImportacionDetaFormaPago!=null) {
			this.jInternalFrameImportacionDetaFormaPago.setVisible(false);	    			
			this.jInternalFrameImportacionDetaFormaPago.dispose();
			this.jInternalFrameImportacionDetaFormaPago=null;
		}		
		
		
		this.setVisible(false);
		this.dispose();
		//this=null;
	}
	
	
	
	public void jButtonActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {			
			this.startProcessDetaFormaPago();
			
			DetaFormaPagoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.BUTTON,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.detaformapago,new Object(),this.detaformapagoParameterGeneral,this.detaformapagoReturnGeneral);
			
			
			if(sTipo.equals("NuevoDetaFormaPago")) {
				jButtonNuevoDetaFormaPagoActionPerformed(evt,false);
			} else if(sTipo.equals("DuplicarDetaFormaPago")) {
				jButtonDuplicarDetaFormaPagoActionPerformed(evt,false);
			} else if(sTipo.equals("CopiarDetaFormaPago")) {
				jButtonCopiarDetaFormaPagoActionPerformed(evt);
			} else if(sTipo.equals("VerFormDetaFormaPago")) {
				jButtonVerFormDetaFormaPagoActionPerformed(evt);
			} else if(sTipo.equals("NuevoToolBarDetaFormaPago")) {
				jButtonNuevoDetaFormaPagoActionPerformed(evt,false);
			} else if(sTipo.equals("DuplicarToolBarDetaFormaPago")) {
				jButtonDuplicarDetaFormaPagoActionPerformed(evt,false);
			} else if(sTipo.equals("MenuItemNuevoDetaFormaPago")) {
				jButtonNuevoDetaFormaPagoActionPerformed(evt,false);
			} else if(sTipo.equals("MenuItemDuplicarDetaFormaPago")) {
				jButtonDuplicarDetaFormaPagoActionPerformed(evt,false);
			} else if(sTipo.equals("NuevoRelacionesDetaFormaPago")) {
				jButtonNuevoDetaFormaPagoActionPerformed(evt,true);
			} else if(sTipo.equals("NuevoRelacionesToolBarDetaFormaPago")) {
				jButtonNuevoDetaFormaPagoActionPerformed(evt,true);
			} else if(sTipo.equals("MenuItemNuevoRelacionesDetaFormaPago")) {
				jButtonNuevoDetaFormaPagoActionPerformed(evt,true);
			} else if(sTipo.equals("ModificarDetaFormaPago")) {
				jButtonModificarDetaFormaPagoActionPerformed(evt);
			} else if(sTipo.equals("ModificarToolBarDetaFormaPago")) {
				jButtonModificarDetaFormaPagoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemModificarDetaFormaPago")) {
				jButtonModificarDetaFormaPagoActionPerformed(evt);
			} else if(sTipo.equals("ActualizarDetaFormaPago")) {
				jButtonActualizarDetaFormaPagoActionPerformed(evt);
			} else if(sTipo.equals("ActualizarToolBarDetaFormaPago")) {
				jButtonActualizarDetaFormaPagoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemActualizarDetaFormaPago")) {
				jButtonActualizarDetaFormaPagoActionPerformed(evt);
			} else if(sTipo.equals("EliminarDetaFormaPago")) {
				jButtonEliminarDetaFormaPagoActionPerformed(evt);
			} else if(sTipo.equals("EliminarToolBarDetaFormaPago")) {
				jButtonEliminarDetaFormaPagoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemEliminarDetaFormaPago")) {
				jButtonEliminarDetaFormaPagoActionPerformed(evt);
			} else if(sTipo.equals("CancelarDetaFormaPago")) {
				jButtonCancelarDetaFormaPagoActionPerformed(evt);
			} else if(sTipo.equals("CancelarToolBarDetaFormaPago")) {
				jButtonCancelarDetaFormaPagoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCancelarDetaFormaPago")) {
				jButtonCancelarDetaFormaPagoActionPerformed(evt);
			} else if(sTipo.equals("CerrarDetaFormaPago")) {
				jButtonCerrarDetaFormaPagoActionPerformed(evt);
			} else if(sTipo.equals("CerrarToolBarDetaFormaPago")) {
				jButtonCerrarDetaFormaPagoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCerrarDetaFormaPago")) {
				jButtonCerrarDetaFormaPagoActionPerformed(evt);
			} else if(sTipo.equals("MostrarOcultarToolBarDetaFormaPago")) {
				jButtonMostrarOcultarDetaFormaPagoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemDetalleCerrarDetaFormaPago")) {
				jButtonCancelarDetaFormaPagoActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosDetaFormaPago")) {
				jButtonGuardarCambiosDetaFormaPagoActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosToolBarDetaFormaPago")) {
				jButtonGuardarCambiosDetaFormaPagoActionPerformed(evt);
			} else if(sTipo.equals("CopiarToolBarDetaFormaPago")) {
				jButtonCopiarDetaFormaPagoActionPerformed(evt);
			} else if(sTipo.equals("VerFormToolBarDetaFormaPago")) {
				jButtonVerFormDetaFormaPagoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemGuardarCambiosDetaFormaPago")) {
				jButtonGuardarCambiosDetaFormaPagoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCopiarDetaFormaPago")) {
				jButtonCopiarDetaFormaPagoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemVerFormDetaFormaPago")) {
				jButtonVerFormDetaFormaPagoActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosTablaDetaFormaPago")) {
				jButtonGuardarCambiosDetaFormaPagoActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosTablaToolBarDetaFormaPago")) {
				jButtonGuardarCambiosDetaFormaPagoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemGuardarCambiosTablaDetaFormaPago")) {
				jButtonGuardarCambiosDetaFormaPagoActionPerformed(evt);
			} else if(sTipo.equals("RecargarInformacionDetaFormaPago")) {
				jButtonRecargarInformacionDetaFormaPagoActionPerformed(evt);
			} else if(sTipo.equals("RecargarInformacionToolBarDetaFormaPago")) {
				jButtonRecargarInformacionDetaFormaPagoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemRecargarInformacionDetaFormaPago")) {
				jButtonRecargarInformacionDetaFormaPagoActionPerformed(evt);
			}
			else if(sTipo.equals("AnterioresDetaFormaPago")) {
				jButtonAnterioresDetaFormaPagoActionPerformed(evt);
			} else if(sTipo.equals("AnterioresToolBarDetaFormaPago")) {
				jButtonAnterioresDetaFormaPagoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemAnterioreDetaFormaPago")) {
				jButtonAnterioresDetaFormaPagoActionPerformed(evt);
			} else if(sTipo.equals("SiguientesDetaFormaPago")) {
				jButtonSiguientesDetaFormaPagoActionPerformed(evt);
			} else if(sTipo.equals("SiguientesToolBarDetaFormaPago")) {
				jButtonSiguientesDetaFormaPagoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemSiguientesDetaFormaPago")) {
				jButtonSiguientesDetaFormaPagoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemAbrirOrderByDetaFormaPago") || sTipo.equals("MenuItemDetalleAbrirOrderByDetaFormaPago")) {
				jButtonAbrirOrderByDetaFormaPagoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemMostrarOcultarDetaFormaPago") || sTipo.equals("MenuItemDetalleMostrarOcultarDetaFormaPago")) {
				jButtonMostrarOcultarDetaFormaPagoActionPerformed(evt);
			} else if(sTipo.equals("NuevoGuardarCambiosDetaFormaPago")) {
				jButtonNuevoGuardarCambiosDetaFormaPagoActionPerformed(evt);
			} else if(sTipo.equals("NuevoGuardarCambiosToolBarDetaFormaPago")) {
				jButtonNuevoGuardarCambiosDetaFormaPagoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemNuevoGuardarCambiosDetaFormaPago")) {
				jButtonNuevoGuardarCambiosDetaFormaPagoActionPerformed(evt);
			} 
			else if(sTipo.equals("CerrarReporteDinamicoDetaFormaPago")) {
				jButtonCerrarReporteDinamicoDetaFormaPagoActionPerformed(evt);
			} else if(sTipo.equals("GenerarReporteDinamicoDetaFormaPago")) {
				jButtonGenerarReporteDinamicoDetaFormaPagoActionPerformed(evt);
			} else if(sTipo.equals("GenerarExcelReporteDinamicoDetaFormaPago")) {
				
				jButtonGenerarExcelReporteDinamicoDetaFormaPagoActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarImportacionDetaFormaPago")) {
				jButtonCerrarImportacionDetaFormaPagoActionPerformed(evt);
			} else if(sTipo.equals("GenerarImportacionDetaFormaPago")) {
				
				jButtonGenerarImportacionDetaFormaPagoActionPerformed(evt);
				
			} else if(sTipo.equals("AbrirImportacionDetaFormaPago")) {
				
				jButtonAbrirImportacionDetaFormaPagoActionPerformed(evt);
				
			} else if(sTipo.equals("TiposAccionesDetaFormaPago")) {
				jComboBoxTiposAccionesDetaFormaPagoActionListener(evt,false);
			} else if(sTipo.equals("TiposRelacionesDetaFormaPago")) {
				jComboBoxTiposRelacionesDetaFormaPagoActionListener(evt);
			} else if(sTipo.equals("TiposAccionesFormularioDetaFormaPago")) {
				jComboBoxTiposAccionesDetaFormaPagoActionListener(evt,true);
			} else if(sTipo.equals("TiposSeleccionarDetaFormaPago")) {
				
				jComboBoxTiposSeleccionarDetaFormaPagoActionListener(evt);
				
			} else if(sTipo.equals("ValorCampoGeneralDetaFormaPago")) {
				jTextFieldValorCampoGeneralDetaFormaPagoActionListener(evt);
			}
			
			else if(sTipo.equals("AbrirTotalesDetaFormaPago")) {
				jButtonAbrirTotalesDetaFormaPagoActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarTotalesDetaFormaPago")) {
				jButtonCerrarTotalesDetaFormaPagoActionPerformed(evt);
			} 
			
			else if(sTipo.equals("AbrirOrderByDetaFormaPago")) {
				jButtonAbrirOrderByDetaFormaPagoActionPerformed(evt);
				
			} else if(sTipo.equals("AbrirOrderByToolBarDetaFormaPago")) {
				jButtonAbrirOrderByDetaFormaPagoActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarOrderByDetaFormaPago")) {
				jButtonCerrarOrderByDetaFormaPagoActionPerformed(evt);
			} 
						
			
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("idDetaFormaPagoBusqueda")) {
				this.jButtonidDetaFormaPagoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_empresaDetaFormaPagoUpdate")) {
				this.jButtonid_empresaDetaFormaPagoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_empresaDetaFormaPagoBusqueda")) {
				this.jButtonid_empresaDetaFormaPagoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_sucursalDetaFormaPagoUpdate")) {
				this.jButtonid_sucursalDetaFormaPagoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_sucursalDetaFormaPagoBusqueda")) {
				this.jButtonid_sucursalDetaFormaPagoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_ejercicioDetaFormaPagoUpdate")) {
				this.jButtonid_ejercicioDetaFormaPagoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_ejercicioDetaFormaPagoBusqueda")) {
				this.jButtonid_ejercicioDetaFormaPagoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_periodoDetaFormaPagoUpdate")) {
				this.jButtonid_periodoDetaFormaPagoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_periodoDetaFormaPagoBusqueda")) {
				this.jButtonid_periodoDetaFormaPagoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_facturaDetaFormaPago")) {
				this.jButtonid_facturaDetaFormaPagoActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_facturaDetaFormaPagoUpdate")) {
				this.jButtonid_facturaDetaFormaPagoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_facturaDetaFormaPagoBusqueda")) {
				this.jButtonid_facturaDetaFormaPagoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_forma_pagoDetaFormaPagoUpdate")) {
				this.jButtonid_tipo_forma_pagoDetaFormaPagoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_forma_pagoDetaFormaPagoBusqueda")) {
				this.jButtonid_tipo_forma_pagoDetaFormaPagoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_deta_forma_pagoDetaFormaPagoUpdate")) {
				this.jButtonid_tipo_deta_forma_pagoDetaFormaPagoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_deta_forma_pagoDetaFormaPagoBusqueda")) {
				this.jButtonid_tipo_deta_forma_pagoDetaFormaPagoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_deta_forma_pago_factuDetaFormaPagoUpdate")) {
				this.jButtonid_deta_forma_pago_factuDetaFormaPagoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_deta_forma_pago_factuDetaFormaPagoBusqueda")) {
				this.jButtonid_deta_forma_pago_factuDetaFormaPagoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_cuenta_contableDetaFormaPago")) {
				this.jButtonid_cuenta_contableDetaFormaPagoActionPerformed(evt);
			}
			//BUSQUEDA ARBOL CAMPO
			else if(sTipo.equals("id_cuenta_contableDetaFormaPagoArbol")) {
				this.abrirFrameTreeCuentaContable("BUSQUEDA_FK");
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_cuenta_contableDetaFormaPagoUpdate")) {
				this.jButtonid_cuenta_contableDetaFormaPagoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_cuenta_contableDetaFormaPagoBusqueda")) {
				this.jButtonid_cuenta_contableDetaFormaPagoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_retencionDetaFormaPagoUpdate")) {
				this.jButtonid_tipo_retencionDetaFormaPagoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_retencionDetaFormaPagoBusqueda")) {
				this.jButtonid_tipo_retencionDetaFormaPagoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("valorDetaFormaPagoBusqueda")) {
				this.jButtonvalorDetaFormaPagoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fecha_inicialDetaFormaPagoBusqueda")) {
				this.jButtonfecha_inicialDetaFormaPagoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fecha_finalDetaFormaPagoBusqueda")) {
				this.jButtonfecha_finalDetaFormaPagoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("porcentajeDetaFormaPagoBusqueda")) {
				this.jButtonporcentajeDetaFormaPagoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("retencionDetaFormaPagoBusqueda")) {
				this.jButtonretencionDetaFormaPagoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("porcentaje_retencionDetaFormaPagoBusqueda")) {
				this.jButtonporcentaje_retencionDetaFormaPagoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("base_retencionDetaFormaPagoBusqueda")) {
				this.jButtonbase_retencionDetaFormaPagoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("valor_retencionDetaFormaPagoBusqueda")) {
				this.jButtonvalor_retencionDetaFormaPagoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("numero_retencionDetaFormaPagoBusqueda")) {
				this.jButtonnumero_retencionDetaFormaPagoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("numero_diasDetaFormaPagoBusqueda")) {
				this.jButtonnumero_diasDetaFormaPagoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("numero_cuotaDetaFormaPagoBusqueda")) {
				this.jButtonnumero_cuotaDetaFormaPagoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("descripcionDetaFormaPagoBusqueda")) {
				this.jButtondescripcionDetaFormaPagoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_anioDetaFormaPagoUpdate")) {
				this.jButtonid_anioDetaFormaPagoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_anioDetaFormaPagoBusqueda")) {
				this.jButtonid_anioDetaFormaPagoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_mesDetaFormaPagoUpdate")) {
				this.jButtonid_mesDetaFormaPagoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_mesDetaFormaPagoBusqueda")) {
				this.jButtonid_mesDetaFormaPagoBusquedaActionPerformed(evt);
			}
			
			
			else if(sTipo.equals("id_cuenta_contableDetaFormaPago")) {
				this.jButtonid_cuenta_contableDetaFormaPagoActionPerformed(evt);
			}
			else if(sTipo.equals("id_facturaDetaFormaPago")) {
				this.jButtonid_facturaDetaFormaPagoActionPerformed(evt);
			}
			
			
			else if(sTipo.equals("FK_IdCuentaContableDetaFormaPago")) {
				this.jButtonFK_IdCuentaContableDetaFormaPagoActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdDetaFormaPagoFactuDetaFormaPago")) {
				this.jButtonFK_IdDetaFormaPagoFactuDetaFormaPagoActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdFacturaDetaFormaPago")) {
				this.jButtonFK_IdFacturaDetaFormaPagoActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdTipoDetaFormaPagoDetaFormaPago")) {
				this.jButtonFK_IdTipoDetaFormaPagoDetaFormaPagoActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdTipoFormaPagoDetaFormaPago")) {
				this.jButtonFK_IdTipoFormaPagoDetaFormaPagoActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdTipoRetencionDetaFormaPago")) {
				this.jButtonFK_IdTipoRetencionDetaFormaPagoActionPerformed(evt);
			}
			
			;
			
			
			DetaFormaPagoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.BUTTON,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.detaformapago,new Object(),this.detaformapagoParameterGeneral,this.detaformapagoReturnGeneral);
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetaFormaPagoConstantesFunciones.CLASSNAME);
			
  		} finally {
      		this.finishProcessDetaFormaPago();
      	}
    }
	
	//FUNCIONA AL APLASTAR ENTER
	public void jTextFieldActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaDetaFormaPagoActual();
			
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				Container containerParent=null;
				JTextField jTextField=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParent=jTextField.getParent();
						
				if(containerParent!=null && containerParent.getClass().equals(JTableMe.class)) {
					esControlTabla=true;
				}
						
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.detaformapago);
				
				this.actualizarInformacion("INFO_PADRE",false,this.detaformapago);
				
				DetaFormaPagoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detaformapago,new Object(),this.detaformapagoParameterGeneral,this.detaformapagoReturnGeneral);
				
				


				
				DetaFormaPagoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detaformapago,new Object(),this.detaformapagoParameterGeneral,this.detaformapagoReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(DetaFormaPago.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",DetaFormaPago.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
				}
				
			} catch(Exception e) {
  				FuncionesSwing.manageException2(this, e,logger,DetaFormaPagoConstantesFunciones.CLASSNAME);
  			}
    }
	
	public Boolean existeCambioValor(ControlTipo controlTipo,String sTipo) throws Exception {
		Boolean existeCambio=true;
		
		try {
			DetaFormaPago detaformapagoLocal=null;
			
			if(!this.getEsControlTabla()) {
				detaformapagoLocal=this.detaformapago;
			} else {
				detaformapagoLocal=this.detaformapagoAnterior;
			}
			
			if(controlTipo.equals(ControlTipo.TEXTBOX)) {
				


			}
		
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetaFormaPagoConstantesFunciones.CLASSNAME);
  		}
		
		return existeCambio;
	}
	
	public void jTextFieldFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTBOX,sTipo)) {
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextField jTextField=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParent=jTextField.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.detaformapago);
				
				this.actualizarInformacion("INFO_PADRE",false,this.detaformapago);
				
				DetaFormaPagoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detaformapago,new Object(),this.detaformapagoParameterGeneral,this.detaformapagoReturnGeneral);
							
				
				


				
				DetaFormaPagoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detaformapago,new Object(),this.detaformapagoParameterGeneral,this.detaformapagoReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(DetaFormaPago.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",DetaFormaPago.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetaFormaPagoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextFieldFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaDetaFormaPagoActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosDetaFormaPago.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detaformapagoAnterior =(DetaFormaPago) this.detaformapagoLogic.getDetaFormaPagos().toArray()[this.jTableDatosDetaFormaPago.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.detaformapagoAnterior =(DetaFormaPago) this.detaformapagos.toArray()[this.jTableDatosDetaFormaPago.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetaFormaPagoConstantesFunciones.CLASSNAME);
  		}
    }	
	
	//CUANDO SE CAMBIA ALGUN FORMATO(TIPO DE LETRA,NEGRILLA,ETC)
	public void jTextFieldChangedUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			/*
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			//System.out.println("UPDATE");
			
			Boolean esControlTabla=false;
			//JTextField jTextField=null;
			Container containerParent=null;
			Component componentOpposite=null;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			DetaFormaPagoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detaformapago,new Object(),this.detaformapagoParameterGeneral,this.detaformapagoReturnGeneral);
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			//jTextField=(JTextField)evt.getSource();
			
			containerParent=jTextField.getParent();
					
			componentOpposite=null;//evt.getOppositeComponent();
			
			if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
				|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
			) {					
				esControlTabla=true;
			}
			
			this.esControlTabla=esControlTabla;
			
			


			
			DetaFormaPagoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detaformapago,new Object(),this.detaformapagoParameterGeneral,this.detaformapagoReturnGeneral);
			*/
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetaFormaPagoConstantesFunciones.CLASSNAME);
  		}
    }
	
	//CUANDO SE QUITA ALGUN CARACTER
	public void jTextFieldRemoveUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			//System.out.println("REMOVE");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetaFormaPagoConstantesFunciones.CLASSNAME);
  		}
    }
	
	//CUANDO SE INGRESA ALGUN CARACTER
	public void jTextFieldInsertUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			//System.out.println("INSERT");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetaFormaPagoConstantesFunciones.CLASSNAME);
  		}
    }
	
	//FUNCIONA AL APLASTAR ENTER
	public void jFormattedTextFieldActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaDetaFormaPagoActual();
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				Container containerParent=null;
				Container containerParentAux=null;
				JFormattedTextField JFormattedTextField=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				JFormattedTextField=(JFormattedTextField)evt.getSource();
				
				containerParentAux=JFormattedTextField.getParent();
				
				if(containerParentAux!=null && containerParentAux.getClass().equals(JDateChooser.class)) {
					containerParent=containerParentAux.getParent();
				}
				
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.detaformapago);
				
				this.actualizarInformacion("INFO_PADRE",false,this.detaformapago);
				
				DetaFormaPagoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detaformapago,new Object(),this.detaformapagoParameterGeneral,this.detaformapagoReturnGeneral);
								
						
				


				
				DetaFormaPagoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detaformapago,new Object(),this.detaformapagoParameterGeneral,this.detaformapagoReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(DetaFormaPago.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",DetaFormaPago.class.getName(),sTipo,"DATE",esControlTabla,conIrServidorAplicacionParent,
							id,JFormattedTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetaFormaPagoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jFormattedTextFieldFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTBOX,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextField jTextField=null;
				Container containerParent=null;
				Container containerParentAux=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParentAux=jTextField.getParent();
						
				if(containerParentAux!=null && containerParentAux.getClass().equals(JDateChooser.class)) {
					containerParent=containerParentAux.getParent();
				}
				
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.detaformapago);
				
				this.actualizarInformacion("INFO_PADRE",false,this.detaformapago);
				
				DetaFormaPagoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detaformapago,new Object(),this.detaformapagoParameterGeneral,this.detaformapagoReturnGeneral);
								
				
				


				
				DetaFormaPagoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detaformapago,new Object(),this.detaformapagoParameterGeneral,this.detaformapagoReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(DetaFormaPago.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",DetaFormaPago.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetaFormaPagoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jFormattedTextFieldFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaDetaFormaPagoActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosDetaFormaPago.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detaformapagoAnterior =(DetaFormaPago) this.detaformapagoLogic.getDetaFormaPagos().toArray()[this.jTableDatosDetaFormaPago.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.detaformapagoAnterior =(DetaFormaPago) this.detaformapagos.toArray()[this.jTableDatosDetaFormaPago.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetaFormaPagoConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.DATE,sTipo)) {
				this.actualizarInformacion("EVENTO_CONTROL",false,this.detaformapago);
				
				this.actualizarInformacion("INFO_PADRE",false,this.detaformapago);
			}	
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetaFormaPagoConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaDetaFormaPagoActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosDetaFormaPago.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detaformapagoAnterior =(DetaFormaPago) this.detaformapagoLogic.getDetaFormaPagos().toArray()[this.jTableDatosDetaFormaPago.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.detaformapagoAnterior =(DetaFormaPago) this.detaformapagos.toArray()[this.jTableDatosDetaFormaPago.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetaFormaPagoConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaDetaFormaPagoActual();
				
			this.actualizarInformacion("EVENTO_CONTROL",false,this.detaformapago);
			
			this.actualizarInformacion("INFO_PADRE",false,this.detaformapago);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetaFormaPagoConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jTextAreaFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTAREA,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextArea jTextArea=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextArea=(JTextArea)evt.getSource();
				
				containerParent=jTextArea.getParent();
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.detaformapago);
				
				this.actualizarInformacion("INFO_PADRE",false,this.detaformapago);
				
				DetaFormaPagoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detaformapago,new Object(),this.detaformapagoParameterGeneral,this.detaformapagoReturnGeneral);
							
				
				


				
				DetaFormaPagoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detaformapago,new Object(),this.detaformapagoParameterGeneral,this.detaformapagoReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(DetaFormaPago.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",DetaFormaPago.class.getName(),sTipo,"TEXTAREA",esControlTabla,conIrServidorAplicacionParent,
							id,jTextArea, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetaFormaPagoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaDetaFormaPagoActual();
			
				//SELECCIONA FILA A OBJETO ANTERIOR
				Integer intSelectedRow = this.jTableDatosDetaFormaPago.getSelectedRow();
						
				if(intSelectedRow!=null && intSelectedRow>-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detaformapagoAnterior =(DetaFormaPago) this.detaformapagoLogic.getDetaFormaPagos().toArray()[this.jTableDatosDetaFormaPago.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
						this.detaformapagoAnterior =(DetaFormaPago) this.detaformapagos.toArray()[this.jTableDatosDetaFormaPago.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					//System.out.println(this.banco);
				}
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetaFormaPagoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaChangedUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			/*
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			//System.out.println("UPDATE");
			
			Boolean esControlTabla=false;
			//JTextArea jTextArea=null;
			Container containerParent=null;
			Component componentOpposite=null;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			DetaFormaPagoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detaformapago,new Object(),this.detaformapagoParameterGeneral,this.detaformapagoReturnGeneral);
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			//jTextArea=(JTextArea)evt.getSource();
			
			containerParent=jTextArea.getParent();
			componentOpposite=null;//evt.getOppositeComponent();
			
			if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
				|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
			) {
				esControlTabla=true;
			}
			
			this.esControlTabla=esControlTabla;
			
			


			
			DetaFormaPagoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detaformapago,new Object(),this.detaformapagoParameterGeneral,this.detaformapagoReturnGeneral);
			
			*/
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetaFormaPagoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaRemoveUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			//System.out.println("REMOVE");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetaFormaPagoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaInsertUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			
			//System.out.println("INSERT");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetaFormaPagoConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO EXISTE O NO ES APLICABLE
	public void jTextAreaActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaDetaFormaPagoActual();
			
			this.actualizarInformacion("EVENTO_CONTROL",false,this.detaformapago);
			
			this.actualizarInformacion("INFO_PADRE",false,this.detaformapago);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetaFormaPagoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jLabelFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JLabel jLabel=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jLabel=(JLabel)evt.getSource();
				
				containerParent=jLabel.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.detaformapago);
				
				this.actualizarInformacion("INFO_PADRE",false,this.detaformapago);
				
				DetaFormaPagoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detaformapago,new Object(),this.detaformapagoParameterGeneral,this.detaformapagoReturnGeneral);
								
				
				


				
				DetaFormaPagoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detaformapago,new Object(),this.detaformapagoParameterGeneral,this.detaformapagoReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(DetaFormaPago.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",DetaFormaPago.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jLabel, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}	
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetaFormaPagoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jLabelFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaDetaFormaPagoActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosDetaFormaPago.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detaformapagoAnterior =(DetaFormaPago) this.detaformapagoLogic.getDetaFormaPagos().toArray()[this.jTableDatosDetaFormaPago.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.detaformapagoAnterior =(DetaFormaPago) this.detaformapagos.toArray()[this.jTableDatosDetaFormaPago.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetaFormaPagoConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO EXISTE O NO ES APLICABLE
	public void jLabelActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaDetaFormaPagoActual();
				
			this.actualizarInformacion("EVENTO_CONTROL",false,this.detaformapago);
			
			this.actualizarInformacion("INFO_PADRE",false,this.detaformapago);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetaFormaPagoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxItemListenerGeneral(String sTipo,ItemEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaDetaFormaPagoActual();
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JCheckBox jCheckBox=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
							
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jCheckBox=(JCheckBox)evt.getSource();
				
				containerParent=jCheckBox.getParent();
						
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.detaformapago);
				
				this.actualizarInformacion("INFO_PADRE",false,this.detaformapago);
				
				DetaFormaPagoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.detaformapago,new Object(),this.detaformapagoParameterGeneral,this.detaformapagoReturnGeneral);
												
				
				if(sTipo.equals("SeleccionarTodosDetaFormaPago")) {
					jCheckBoxSeleccionarTodosDetaFormaPagoItemListener(evt);
				
				} else if(sTipo.equals("SeleccionadosDetaFormaPago")) {
					jCheckBoxSeleccionadosDetaFormaPagoItemListener(evt);
				
				} else if(sTipo.equals("NuevoToolBarDetaFormaPago")) {
					
				}
				
				


				
				
				DetaFormaPagoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.detaformapago,new Object(),this.detaformapagoParameterGeneral,this.detaformapagoReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(DetaFormaPago.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",DetaFormaPago.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jCheckBox, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}	
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetaFormaPagoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.CHECKBOX,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JCheckBox jCheckBox=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jCheckBox=(JCheckBox)evt.getSource();
				
				containerParent=jCheckBox.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				//this.actualizarInformacion("EVENTO_CONTROL",false,this.detaformapago);
				
				//this.actualizarInformacion("INFO_PADRE",false,this.detaformapago);
				
				DetaFormaPagoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.detaformapago,new Object(),this.detaformapagoParameterGeneral,this.detaformapagoReturnGeneral);
												
				
				


				
				
				DetaFormaPagoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.detaformapago,new Object(),this.detaformapagoParameterGeneral,this.detaformapagoReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
				
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(DetaFormaPago.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",DetaFormaPago.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jCheckBox, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetaFormaPagoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaDetaFormaPagoActual();
			
				//SELECCIONA FILA A OBJETO ANTERIOR
				Integer intSelectedRow = this.jTableDatosDetaFormaPago.getSelectedRow();
						
				if(intSelectedRow!=null && intSelectedRow>-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detaformapagoAnterior =(DetaFormaPago) this.detaformapagoLogic.getDetaFormaPagos().toArray()[this.jTableDatosDetaFormaPago.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
						this.detaformapagoAnterior =(DetaFormaPago) this.detaformapagos.toArray()[this.jTableDatosDetaFormaPago.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					//System.out.println(this.banco);
				}
			}
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetaFormaPagoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaDetaFormaPagoActual();
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.detaformapago);
				
				this.actualizarInformacion("INFO_PADRE",false,this.detaformapago);
				
				DetaFormaPagoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.detaformapago,new Object(),this.detaformapagoParameterGeneral,this.detaformapagoReturnGeneral);
				
				
				DetaFormaPagoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.detaformapago,new Object(),this.detaformapagoParameterGeneral,this.detaformapagoReturnGeneral);
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetaFormaPagoConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO SE UTILIZA, SE USA EL DE ABAJO, IGUAL SE DEJA EL CODIGO COMO RESPALDO Y ES CASI IGUAL
	//ERROR:SI SE USA,AL HACER CLIC EN EL MISMO ELEMENTO O EJECUTAR SELECTEDITEM, SIEMPRE SE EJECUTA COMO SI ESCOGIERA OTRO ELEMENTO(NO DEBERIA)
	//@SuppressWarnings("rawtypes")
	public void jComboBoxActionPerformedGeneral(String sTipo,ActionEvent evt) {		
		try {
			/*		
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			Container containerParent=null;
			Component componentOpposite=null;
			Boolean esControlTabla=false;
				
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			DetaFormaPagoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.detaformapago,new Object(),this.detaformapagoParameterGeneral,this.detaformapagoReturnGeneral);
			JComboBox jComboBoxGenerico=null;						
			
			if(evt.getSource().getClass().equals(JComboBox.class)
				|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
					
				jComboBoxGenerico=(JComboBox)evt.getSource();
				
				containerParent=jComboBoxGenerico.getParent();
				
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
			}
			
			String sFinalQueryCombo="";
			
			


			
			DetaFormaPagoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detaformapago,new Object(),this.detaformapagoParameterGeneral,this.detaformapagoReturnGeneral);
			*/						
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetaFormaPagoConstantesFunciones.CLASSNAME);
  		}		
    }
	
	@SuppressWarnings("rawtypes")
	public void jComboBoxItemStateChangedGeneral(String sTipo,ItemEvent evt) { 	  
		try {
			if (evt.getStateChange() == ItemEvent.SELECTED && this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaDetaFormaPagoActual();
			
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
			
			
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				Container containerParent=null;
				Component componentOpposite=null;
				Boolean esControlTabla=false;
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				JComboBox jComboBoxGenerico=null;						
				
				if(evt.getSource().getClass().equals(JComboBox.class)
					|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
						
					jComboBoxGenerico=(JComboBox)evt.getSource();
					
					containerParent=jComboBoxGenerico.getParent();
					
					componentOpposite=null;//evt.getOppositeComponent();
					
					if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
					) {					
						esControlTabla=true;
					}		
					
					this.esControlTabla=esControlTabla;
				}
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.detaformapago);
				
				this.actualizarInformacion("INFO_PADRE",false,this.detaformapago);
				
				DetaFormaPagoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.detaformapago,new Object(),this.detaformapagoParameterGeneral,this.detaformapagoReturnGeneral);
				
				
				String sFinalQueryCombo="";
				
				


				
				DetaFormaPagoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detaformapago,new Object(),this.detaformapagoParameterGeneral,this.detaformapagoReturnGeneral);
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
				
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(DetaFormaPago.class.getName());
								
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",DetaFormaPago.class.getName(),sTipo,"COMBOBOX",esControlTabla,conIrServidorAplicacionParent,
							id,jComboBoxGenerico, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetaFormaPagoConstantesFunciones.CLASSNAME);
  		}
    }
	
	//@SuppressWarnings("rawtypes")
	public void jComboBoxFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		//MANEJADO EN ITEMLISTENER
		/*
		try {
			if(this.permiteManejarEventosControl()) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				
				//if(this.esUsoDesdeHijo) {
				//	eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				//}
				
				
				Container containerParent=null;
				Component componentOpposite=null;
				Boolean esControlTabla=false;
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
			
				this.actualizarInformacion("EVENTO_CONTROL",false,this.detaformapago);
				
				this.actualizarInformacion("INFO_PADRE",false,this.detaformapago);
				
				DetaFormaPagoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.detaformapago,new Object(),this.detaformapagoParameterGeneral,this.detaformapagoReturnGeneral);
				JComboBox jComboBoxGenerico=null;						
				
				if(evt.getSource().getClass().equals(JComboBox.class)
					|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
						
					jComboBoxGenerico=(JComboBox)evt.getSource();
					
					containerParent=jComboBoxGenerico.getParent();
					
					componentOpposite=evt.getOppositeComponent();
					
					if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
					) {					
						esControlTabla=true;
					}
					
					this.esControlTabla=esControlTabla;
				}
				
				String sFinalQueryCombo="";
				
				


				
				DetaFormaPagoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detaformapago,new Object(),this.detaformapagoParameterGeneral,this.detaformapagoReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(DetaFormaPago.class.getName());
				
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",DetaFormaPago.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jComboBoxGenerico, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetaFormaPagoConstantesFunciones.CLASSNAME);
  		}
		
		*/
    }
	
	public void jComboBoxFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaDetaFormaPagoActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosDetaFormaPago.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detaformapagoAnterior =(DetaFormaPago) this.detaformapagoLogic.getDetaFormaPagos().toArray()[this.jTableDatosDetaFormaPago.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.detaformapagoAnterior =(DetaFormaPago) this.detaformapagos.toArray()[this.jTableDatosDetaFormaPago.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetaFormaPagoConstantesFunciones.CLASSNAME);
  		}
    }		
	
	public void tableValueChangedGeneral(String sTipo,ListSelectionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				DetaFormaPagoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TABLE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detaformapago,new Object(),this.detaformapagoParameterGeneral,this.detaformapagoReturnGeneral);
				
				if(sTipo.equals("TableDatosSeleccionarDetaFormaPago")) {
					//BYDAN_DESHABILITADO
					//try {jTableDatosDetaFormaPagoListSelectionListener(e);}catch(Exception e1){e1.printStackTrace();}
					
					//SOLO CUANDO MOUSE ES SOLTADO
					if (!evt.getValueIsAdjusting()) {
						//SELECCIONA FILA A OBJETO ACTUAL
						Integer intSelectedRow = this.jTableDatosDetaFormaPago.getSelectedRow();
						
						if(intSelectedRow!=null && intSelectedRow>-1) {
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								this.detaformapago =(DetaFormaPago) this.detaformapagoLogic.getDetaFormaPagos().toArray()[this.jTableDatosDetaFormaPago.convertRowIndexToModel(intSelectedRow)];
							} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
								this.detaformapago =(DetaFormaPago) this.detaformapagos.toArray()[this.jTableDatosDetaFormaPago.convertRowIndexToModel(intSelectedRow)];
							}
							//ARCHITECTURE
							
							//System.out.println(this.detaformapago);
						}
					}
					
				} else if(sTipo.equals("jButtonCancelarDetaFormaPago")) {
				
				}
				
				DetaFormaPagoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TABLE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detaformapago,new Object(),this.detaformapagoParameterGeneral,this.detaformapagoReturnGeneral);
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetaFormaPagoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void tableMouseAdapterGeneral(String sTipo,MouseEvent evt) { 	  
		try {
			DetaFormaPagoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TABLE,EventoTipo.MOUSE,EventoSubTipo.CLICKED,sTipo,this.detaformapago,new Object(),this.detaformapagoParameterGeneral,this.detaformapagoReturnGeneral);
			
			if(sTipo.equals("DatosSeleccionarDetaFormaPago")) {
				if (evt.getClickCount() == 2) {
					jButtonIdActionPerformed(null,jTableDatosDetaFormaPago.getSelectedRow(),false,false);
				}	
			} else if(sTipo.equals("jButtonCancelarDetaFormaPago")) {
			
			}
			
			DetaFormaPagoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TABLE,EventoTipo.MOUSE,EventoSubTipo.CLICKED,sTipo,this.detaformapago,new Object(),this.detaformapagoParameterGeneral,this.detaformapagoReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetaFormaPagoConstantesFunciones.CLASSNAME);
  		}
    }
	
	;
	
	public void jButtonActionPerformedTecladoGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			this.startProcessDetaFormaPago();
			
			DetaFormaPagoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.KEY,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.detaformapago,new Object(),this.detaformapagoParameterGeneral,this.detaformapagoReturnGeneral);
			
			if(sTipo.equals("NuevoDetaFormaPago")) {
				jButtonNuevoDetaFormaPagoActionPerformed(evt,false);
				
			} else if(sTipo.equals("DuplicarDetaFormaPago")) {
				jButtonDuplicarDetaFormaPagoActionPerformed(evt,false);
				
			} else if(sTipo.equals("CopiarDetaFormaPago")) {
				jButtonCopiarDetaFormaPagoActionPerformed(evt);
				
			} else if(sTipo.equals("VerFormDetaFormaPago")) {
				jButtonVerFormDetaFormaPagoActionPerformed(evt);
				
			} else if(sTipo.equals("NuevoRelacionesDetaFormaPago")) {
				jButtonNuevoDetaFormaPagoActionPerformed(evt,true);
				
			} else if(sTipo.equals("ModificarDetaFormaPago")) {
				jButtonModificarDetaFormaPagoActionPerformed(evt);
				
			} else if(sTipo.equals("ActualizarDetaFormaPago")) {
				jButtonActualizarDetaFormaPagoActionPerformed(evt);
				
			} else if(sTipo.equals("EliminarDetaFormaPago")) {
				jButtonEliminarDetaFormaPagoActionPerformed(evt);
				
			} else if(sTipo.equals("GuardarCambiosTablaDetaFormaPago")) {
				jButtonGuardarCambiosDetaFormaPagoActionPerformed(evt);
				
			} else if(sTipo.equals("CancelarDetaFormaPago")) {
				jButtonCancelarDetaFormaPagoActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarDetaFormaPago")) {
				jButtonCerrarDetaFormaPagoActionPerformed(evt);
				
			} else if(sTipo.equals("GuardarCambiosDetaFormaPago")) {
				jButtonGuardarCambiosDetaFormaPagoActionPerformed(evt);
			
			} else if(sTipo.equals("NuevoGuardarCambiosDetaFormaPago")) {
				jButtonNuevoGuardarCambiosDetaFormaPagoActionPerformed(evt);
			
			} else if(sTipo.equals("AbrirOrderByDetaFormaPago")) {
				jButtonAbrirOrderByDetaFormaPagoActionPerformed(evt);
			
			} else if(sTipo.equals("RecargarInformacionDetaFormaPago")) {
				jButtonRecargarInformacionDetaFormaPagoActionPerformed(evt);
			
			} else if(sTipo.equals("AnterioresDetaFormaPago")) {
				jButtonAnterioresDetaFormaPagoActionPerformed(evt);			
			
			}  else if(sTipo.equals("SiguientesDetaFormaPago")) {
				jButtonSiguientesDetaFormaPagoActionPerformed(evt);			
			} 
			
			
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("idDetaFormaPagoBusqueda")) {
				this.jButtonidDetaFormaPagoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_empresaDetaFormaPagoUpdate")) {
				this.jButtonid_empresaDetaFormaPagoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_empresaDetaFormaPagoBusqueda")) {
				this.jButtonid_empresaDetaFormaPagoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_sucursalDetaFormaPagoUpdate")) {
				this.jButtonid_sucursalDetaFormaPagoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_sucursalDetaFormaPagoBusqueda")) {
				this.jButtonid_sucursalDetaFormaPagoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_ejercicioDetaFormaPagoUpdate")) {
				this.jButtonid_ejercicioDetaFormaPagoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_ejercicioDetaFormaPagoBusqueda")) {
				this.jButtonid_ejercicioDetaFormaPagoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_periodoDetaFormaPagoUpdate")) {
				this.jButtonid_periodoDetaFormaPagoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_periodoDetaFormaPagoBusqueda")) {
				this.jButtonid_periodoDetaFormaPagoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_facturaDetaFormaPago")) {
				this.jButtonid_facturaDetaFormaPagoActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_facturaDetaFormaPagoUpdate")) {
				this.jButtonid_facturaDetaFormaPagoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_facturaDetaFormaPagoBusqueda")) {
				this.jButtonid_facturaDetaFormaPagoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_forma_pagoDetaFormaPagoUpdate")) {
				this.jButtonid_tipo_forma_pagoDetaFormaPagoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_forma_pagoDetaFormaPagoBusqueda")) {
				this.jButtonid_tipo_forma_pagoDetaFormaPagoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_deta_forma_pagoDetaFormaPagoUpdate")) {
				this.jButtonid_tipo_deta_forma_pagoDetaFormaPagoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_deta_forma_pagoDetaFormaPagoBusqueda")) {
				this.jButtonid_tipo_deta_forma_pagoDetaFormaPagoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_deta_forma_pago_factuDetaFormaPagoUpdate")) {
				this.jButtonid_deta_forma_pago_factuDetaFormaPagoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_deta_forma_pago_factuDetaFormaPagoBusqueda")) {
				this.jButtonid_deta_forma_pago_factuDetaFormaPagoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_cuenta_contableDetaFormaPago")) {
				this.jButtonid_cuenta_contableDetaFormaPagoActionPerformed(evt);
			}
			//BUSQUEDA ARBOL CAMPO
			else if(sTipo.equals("id_cuenta_contableDetaFormaPagoArbol")) {
				this.abrirFrameTreeCuentaContable("BUSQUEDA_FK");
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_cuenta_contableDetaFormaPagoUpdate")) {
				this.jButtonid_cuenta_contableDetaFormaPagoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_cuenta_contableDetaFormaPagoBusqueda")) {
				this.jButtonid_cuenta_contableDetaFormaPagoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_retencionDetaFormaPagoUpdate")) {
				this.jButtonid_tipo_retencionDetaFormaPagoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_retencionDetaFormaPagoBusqueda")) {
				this.jButtonid_tipo_retencionDetaFormaPagoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("valorDetaFormaPagoBusqueda")) {
				this.jButtonvalorDetaFormaPagoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fecha_inicialDetaFormaPagoBusqueda")) {
				this.jButtonfecha_inicialDetaFormaPagoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fecha_finalDetaFormaPagoBusqueda")) {
				this.jButtonfecha_finalDetaFormaPagoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("porcentajeDetaFormaPagoBusqueda")) {
				this.jButtonporcentajeDetaFormaPagoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("retencionDetaFormaPagoBusqueda")) {
				this.jButtonretencionDetaFormaPagoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("porcentaje_retencionDetaFormaPagoBusqueda")) {
				this.jButtonporcentaje_retencionDetaFormaPagoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("base_retencionDetaFormaPagoBusqueda")) {
				this.jButtonbase_retencionDetaFormaPagoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("valor_retencionDetaFormaPagoBusqueda")) {
				this.jButtonvalor_retencionDetaFormaPagoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("numero_retencionDetaFormaPagoBusqueda")) {
				this.jButtonnumero_retencionDetaFormaPagoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("numero_diasDetaFormaPagoBusqueda")) {
				this.jButtonnumero_diasDetaFormaPagoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("numero_cuotaDetaFormaPagoBusqueda")) {
				this.jButtonnumero_cuotaDetaFormaPagoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("descripcionDetaFormaPagoBusqueda")) {
				this.jButtondescripcionDetaFormaPagoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_anioDetaFormaPagoUpdate")) {
				this.jButtonid_anioDetaFormaPagoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_anioDetaFormaPagoBusqueda")) {
				this.jButtonid_anioDetaFormaPagoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_mesDetaFormaPagoUpdate")) {
				this.jButtonid_mesDetaFormaPagoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_mesDetaFormaPagoBusqueda")) {
				this.jButtonid_mesDetaFormaPagoBusquedaActionPerformed(evt);
			}
			
			DetaFormaPagoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.KEY,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.detaformapago,new Object(),this.detaformapagoParameterGeneral,this.detaformapagoReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetaFormaPagoConstantesFunciones.CLASSNAME);
			
  		}  finally {
      		this.finishProcessDetaFormaPago();
      	}
    }
	
	public void internalFrameClosingInternalFrameGeneral(String sTipo,InternalFrameEvent evt) { 	  
		try {
			DetaFormaPagoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.WINDOW,EventoTipo.CLIC,EventoSubTipo.CLOSING,sTipo,this.detaformapago,new Object(),this.detaformapagoParameterGeneral,this.detaformapagoReturnGeneral);
			
			if(sTipo.equals("CloseInternalFrameDetaFormaPago")) {
				closingInternalFrameDetaFormaPago();
				
			} else if(sTipo.equals("jButtonCancelarDetaFormaPago")) {
				JInternalFrameBase jInternalFrameDetalleFormDetaFormaPago = (JInternalFrameBase)evt.getSource();
	            	
	            DetaFormaPagoBeanSwingJInternalFrame jInternalFrameParent=(DetaFormaPagoBeanSwingJInternalFrame)jInternalFrameDetalleFormDetaFormaPago.getjInternalFrameParent();
	            
				jInternalFrameParent.jButtonCancelarDetaFormaPagoActionPerformed(null);
			}
			
			DetaFormaPagoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.WINDOW,EventoTipo.CLIC,EventoSubTipo.CLOSING,sTipo,this.detaformapago,new Object(),this.detaformapagoParameterGeneral,this.detaformapagoReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetaFormaPagoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void recargarFormDetaFormaPago(String sTipo,String sDominio,EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,String sTipoGeneral,ArrayList<Classe> classes,Boolean conIrServidorAplicacion) throws Exception {
		this.recargarFormDetaFormaPago(sTipo,sDominio,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipoGeneral,classes,conIrServidorAplicacion,false);
	}
	
	public void recargarFormDetaFormaPago(String sTipo,String sDominio,EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,String sTipoGeneral,ArrayList<Classe> classes,Boolean conIrServidorAplicacion,Boolean esControlTabla) throws Exception {
		if(this.permiteRecargarForm && this.permiteMantenimiento(this.detaformapago)) {
			if(!esControlTabla) {
				if(DetaFormaPagoJInternalFrame.ISBINDING_MANUAL_TABLA) {			
					this.setVariablesFormularioToObjetoActualDetaFormaPago(this.detaformapago,true,false);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaFormaPago(this.detaformapago);			
				}
				
				if(this.detaformapagoSessionBean.getEstaModoGuardarRelaciones()) {
					this.setVariablesFormularioRelacionesToObjetoActualDetaFormaPago(this.detaformapago,classes);				
				}
			
				if(conIrServidorAplicacion) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {						
						this.detaformapagoReturnGeneral=detaformapagoLogic.procesarEventosDetaFormaPagosWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.detaformapagoLogic.getDetaFormaPagos(),this.detaformapago,this.detaformapagoParameterGeneral,this.isEsNuevoDetaFormaPago,classes);//this.detaformapagoLogic.getDetaFormaPago()//sTipoGeneral
									
					} else if(Constantes.ISUSAEJBREMOTE) {
									
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE
					
					//ACTUALIZA VARIABLES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
					//this.setVariablesObjetoReturnGeneralToBeanDetaFormaPago(this.detaformapagoReturnGeneral,this.detaformapagoBean,false);
						
					//ACTUALIZA VARIABLES RELACIONES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
					if(this.detaformapagoSessionBean.getEstaModoGuardarRelaciones()) {
						//this.setVariablesRelacionesObjetoReturnGeneralToBeanDetaFormaPago(classes,this.detaformapagoReturnGeneral,this.detaformapagoBean,false);
					}
						
					if(this.detaformapagoReturnGeneral.getConRecargarPropiedades()) {
						//INICIALIZA VARIABLES COMBOS NORMALES (FK)
						this.setVariablesObjetoActualToFormularioForeignKeyDetaFormaPago(this.detaformapagoReturnGeneral.getDetaFormaPago());
							
						//INICIALIZA VARIABLES NORMALES A FORMULARIO(SIN FK)
						this.setVariablesObjetoActualToFormularioDetaFormaPago(this.detaformapagoReturnGeneral.getDetaFormaPago());	
					}
						
					if(this.detaformapagoReturnGeneral.getConRecargarRelaciones()) {
						//INICIALIZA VARIABLES RELACIONES A FORMULARIO
						this.setVariablesRelacionesObjetoActualToFormularioDetaFormaPago(this.detaformapagoReturnGeneral.getDetaFormaPago(),classes);//this.detaformapagoBean);	
					}									
					
				} else {				
					//INICIALIZA VARIABLES RELACIONES A FORMULARIO
					this.setVariablesRelacionesObjetoActualToFormularioDetaFormaPago(this.detaformapago,classes);//this.detaformapagoBean);									
				}
			
				if(DetaFormaPagoJInternalFrame.ISBINDING_MANUAL_TABLA) {
					this.setVariablesFormularioToObjetoActualDetaFormaPago(this.detaformapago,true,false);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaFormaPago(this.detaformapago);				
				}
				
			} else {
				
				if(((controlTipo.equals(ControlTipo.TEXTBOX) || controlTipo.equals(ControlTipo.DATE)
					|| controlTipo.equals(ControlTipo.TEXTAREA) || controlTipo.equals(ControlTipo.COMBOBOX)
					)				
					&& eventoTipo.equals(EventoTipo.CHANGE)
					)
					
					|| (controlTipo.equals(ControlTipo.CHECKBOX) && eventoTipo.equals(EventoTipo.CLIC))
					
				) { // && sTipoGeneral.equals("TEXTBOX")
					
					if(this.detaformapagoAnterior!=null) {
						this.detaformapago=this.detaformapagoAnterior;
					}
				}
				
				if(conIrServidorAplicacion) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {						
						this.detaformapagoReturnGeneral=detaformapagoLogic.procesarEventosDetaFormaPagosWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.detaformapagoLogic.getDetaFormaPagos(),this.detaformapago,this.detaformapagoParameterGeneral,this.isEsNuevoDetaFormaPago,classes);//this.detaformapagoLogic.getDetaFormaPago()//sTipoGeneral
									
					} else if(Constantes.ISUSAEJBREMOTE) {
									
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//NO ENTENDIBLE PORQUE PONER
					//if(this.detaformapagoSessionBean.getEstaModoGuardarRelaciones() 
					//	|| this.detaformapagoSessionBean.getEsGuardarRelacionado())	{
						actualizarLista(this.detaformapagoReturnGeneral.getDetaFormaPago(),detaformapagoLogic.getDetaFormaPagos());
					//}
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(this.detaformapagoReturnGeneral.getDetaFormaPago(),this.detaformapagos);
				}
				//ARCHITECTURE
				
				//this.jTableDatosDetaFormaPago.repaint();
				
				//((AbstractTableModel) this.jTableDatosDetaFormaPago.getModel()).fireTableDataChanged();
				
				this.actualizarVisualTableDatosDetaFormaPago();
			}
		}
	}
	
	public void actualizarVisualTableDatosDetaFormaPago() throws Exception {
		
		DetaFormaPagoModel detaformapagoModel=(DetaFormaPagoModel)this.jTableDatosDetaFormaPago.getModel();
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			detaformapagoModel.detaformapagos=this.detaformapagoLogic.getDetaFormaPagos();
		
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
			detaformapagoModel.detaformapagos=this.detaformapagos;
		}
		
		
		((DetaFormaPagoModel) this.jTableDatosDetaFormaPago.getModel()).fireTableDataChanged();
	}
	
	public void actualizarVisualTableDatosEventosVistaDetaFormaPago() throws Exception {
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.actualizarLista(this.getdetaformapagoAnterior(),this.detaformapagoLogic.getDetaFormaPagos());
					
		} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
			this.actualizarLista(this.getdetaformapagoAnterior(),this.detaformapagos);
		}
		//ARCHITECTURE
						
		this.actualizarFilaTotales();
						
		this.actualizarVisualTableDatosDetaFormaPago();	
	}
	
	public void setVariablesRelacionesObjetoActualToFormularioDetaFormaPago(DetaFormaPago detaformapago,ArrayList<Classe> classes) throws Exception { 
		try {
			
			for(Classe clas:classes) {
				if(clas.clas.equals(BancoFormaPago.class)) {
					this.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoBeanSwingJInternalFrame.bancoformapagoLogic.setBancoFormaPagos(detaformapago.getBancoFormaPagos());
					this.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoBeanSwingJInternalFrame.inicializarActualizarBindingTablaBancoFormaPago(false);
					break;
				}
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetaFormaPagoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setEventoParentGeneral(Boolean esUsoDesdeHijo,String sDominio,String sDominioTipo,String sTipo,String sTipoGeneral,Boolean esControlTabla,Boolean conIrServidorAplicacion,
						Long id,Component control, EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,ArrayList<String> arrClasses,
						Object evt,GeneralEntityParameterReturnGeneral generalEntityParameterGeneral,Object otro) { 	  
		try {
			
			if(this.permiteManejarEventosControl()) {
				
				//BASE COPIADO DESDE TEXTFIELLOSTFOCUS
				
				//EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				Boolean conTodasRelaciones=false;
				
				this.esUsoDesdeHijo=esUsoDesdeHijo;
										
				DetaFormaPagoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.detaformapago,new Object(),generalEntityParameterGeneral,this.detaformapagoReturnGeneral);
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				for(String sClasse:arrClasses) {
					if(sClasse.equals("TODOS")) {
						conTodasRelaciones=true;
						break;
					}
				}
				
				if(this.detaformapagoSessionBean.getConGuardarRelaciones()) {
					if(conTodasRelaciones) {
						classes=DetaFormaPagoConstantesFunciones.getClassesRelationshipsOfDetaFormaPago(new ArrayList<Classe>(),DeepLoadType.NONE);
					} else {
						classes=DetaFormaPagoConstantesFunciones.getClassesRelationshipsFromStringsOfDetaFormaPago(arrClasses,DeepLoadType.NONE);
					}
				}
	
				this.classesActual=new ArrayList<Classe>();
				this.classesActual.addAll(classes);
	
				this.recargarFormDetaFormaPago(sTipo,sDominio,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipoGeneral,classes,conIrServidorAplicacion,esControlTabla);
										
				DetaFormaPagoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.detaformapago,new Object(),generalEntityParameterGeneral,this.detaformapagoReturnGeneral);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetaFormaPagoConstantesFunciones.CLASSNAME);
  		}
    }
	
	/*
	public void setVariablesRelacionesObjetoBeanActualToFormularioDetaFormaPago(DetaFormaPagoBean detaformapagoBean) throws Exception { 
		try {
			
			for(Classe clas:classes) {
				if(clas.clas.equals(BancoFormaPago.class)) {
					this.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoBeanSwingJInternalFrame.bancoformapagoLogic.setBancoFormaPagos(detaformapago.getBancoFormaPagos());
					this.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoBeanSwingJInternalFrame.inicializarActualizarBindingTablaBancoFormaPago(false);
					break;
				}
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetaFormaPagoConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesRelacionesObjetoReturnGeneralToBeanDetaFormaPago(ArrayList<Classe> classes,DetaFormaPagoReturnGeneral detaformapagoReturnGeneral,DetaFormaPagoBean detaformapagoBean,Boolean conDefault) throws Exception {
		
			this.detaformapagoBean.setBancoFormaPagos(detaformapagoReturnGeneral.getDetaFormaPago().getBancoFormaPagos());
	}
	*/
	
	public void setVariablesFormularioRelacionesToObjetoActualDetaFormaPago(DetaFormaPago detaformapago,ArrayList<Classe> classes) throws Exception {
		
			for(Classe clas:classes) {
				if(clas.clas.equals(BancoFormaPago.class)) {
					detaformapago.setBancoFormaPagos(this.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoBeanSwingJInternalFrame.bancoformapagoLogic.getBancoFormaPagos());
					break;
				}
			}
	}
	
	public Boolean permiteManejarEventosControl() {
		Boolean permite=true;				
		
		if(this.estaModoNuevo || this.estaModoSeleccionar || this.estaModoEliminarGuardarCambios) {
			permite=false;
			
		} 
		
		//NO DEBE MEZCLARSE CONCEPTOS
		/*	
		if(!paraTabla && !this.permiteMantenimiento(this.detaformapago)) {
			System.out.println("ERROR:EL OBJETO ACTUAL NO PUEDE SER FILA TOTALES");
				
			//JOptionPane.showMessageDialog(this,"EL OBJETO ACTUAL NO PUEDE SER FILA TOTALES","EVENTO",JOptionPane.ERROR_MESSAGE);			
		}
		*/
		
		return permite;
	}
	
	public void inicializarFormDetalle() throws Exception {
		
		this.jInternalFrameDetalleFormDetaFormaPago = new DetaFormaPagoDetalleFormJInternalFrame(jDesktopPane,this.detaformapagoSessionBean.getConGuardarRelaciones(),this.detaformapagoSessionBean.getEsGuardarRelacionado(),this.cargarRelaciones,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo);
		
		this.jDesktopPane.add(this.jInternalFrameDetalleFormDetaFormaPago);
		this.jInternalFrameDetalleFormDetaFormaPago.setVisible(false);
		this.jInternalFrameDetalleFormDetaFormaPago.setSelected(false);						
		
		this.jInternalFrameDetalleFormDetaFormaPago.setJInternalFrameParent(this);
		
		this.jInternalFrameDetalleFormDetaFormaPago.detaformapagoLogic=this.detaformapagoLogic;
		
		this.cargarCombosFrameForeignKeyDetaFormaPago("Formulario");
		
		this.inicializarActualizarBindingBotonesPermisosManualFormDetalleDetaFormaPago();
		this.inicializarActualizarBindingtiposArchivosReportesAccionesManualFormDetalleDetaFormaPago();
		
		this.initActionsFormDetalle();		
		
		this.initActionsCombosTodosForeignKeyDetaFormaPago("Formulario");
		
		//TALVEZ conSetVariablesGlobales COMO if() 
		this.setVariablesGlobalesCombosForeignKeyDetaFormaPago();
		
		this.cargarMenuRelaciones();
		
	}
	
	public void initActionsFormDetalle() {	
		
		this.jInternalFrameDetalleFormDetaFormaPago.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"jButtonCancelarDetaFormaPago"));
		
		this.jInternalFrameDetalleFormDetaFormaPago.jButtonModificarDetaFormaPago.addActionListener(new ButtonActionListener(this,"ModificarDetaFormaPago"));

		
		this.jInternalFrameDetalleFormDetaFormaPago.jButtonModificarToolBarDetaFormaPago.addActionListener(new ButtonActionListener(this,"ModificarToolBarDetaFormaPago"));
					
		this.jInternalFrameDetalleFormDetaFormaPago.jMenuItemModificarDetaFormaPago.addActionListener(new ButtonActionListener(this,"MenuItemModificarDetaFormaPago"));		
		
		
		
		this.jInternalFrameDetalleFormDetaFormaPago.jButtonActualizarDetaFormaPago.addActionListener (new ButtonActionListener(this,"ActualizarDetaFormaPago"));
		
		
		this.jInternalFrameDetalleFormDetaFormaPago.jButtonActualizarToolBarDetaFormaPago.addActionListener(new ButtonActionListener(this,"ActualizarToolBarDetaFormaPago"));
						
		this.jInternalFrameDetalleFormDetaFormaPago.jMenuItemActualizarDetaFormaPago.addActionListener (new ButtonActionListener(this,"MenuItemActualizarDetaFormaPago"));		
		
		
		
		this.jInternalFrameDetalleFormDetaFormaPago.jButtonEliminarDetaFormaPago.addActionListener (new ButtonActionListener(this,"EliminarDetaFormaPago"));
		
		
		this.jInternalFrameDetalleFormDetaFormaPago.jButtonEliminarToolBarDetaFormaPago.addActionListener (new ButtonActionListener(this,"EliminarToolBarDetaFormaPago"));
								
		this.jInternalFrameDetalleFormDetaFormaPago.jMenuItemEliminarDetaFormaPago.addActionListener (new ButtonActionListener(this,"MenuItemEliminarDetaFormaPago"));		
		
		
		
		this.jInternalFrameDetalleFormDetaFormaPago.jButtonCancelarDetaFormaPago.addActionListener (new ButtonActionListener(this,"CancelarDetaFormaPago"));
		
		
		this.jInternalFrameDetalleFormDetaFormaPago.jButtonCancelarToolBarDetaFormaPago.addActionListener (new ButtonActionListener(this,"CancelarToolBarDetaFormaPago"));
					
		this.jInternalFrameDetalleFormDetaFormaPago.jMenuItemCancelarDetaFormaPago.addActionListener (new ButtonActionListener(this,"MenuItemCancelarDetaFormaPago"));		
		
		
		
		
		
		this.jInternalFrameDetalleFormDetaFormaPago.jMenuItemDetalleCerrarDetaFormaPago.addActionListener (new ButtonActionListener(this,"MenuItemDetalleCerrarDetaFormaPago"));		
		
		
		
		this.jInternalFrameDetalleFormDetaFormaPago.jButtonGuardarCambiosToolBarDetaFormaPago.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarDetaFormaPago"));
		
		
		
		this.jInternalFrameDetalleFormDetaFormaPago.jButtonGuardarCambiosToolBarDetaFormaPago.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarDetaFormaPago"));
		
		
		
		this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxTiposAccionesFormularioDetaFormaPago.addActionListener (new ButtonActionListener(this,"TiposAccionesFormularioDetaFormaPago"));
		
		
				
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaFormaPago.jButtonidDetaFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"idDetaFormaPagoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetaFormaPago.jButtonid_empresaDetaFormaPagoUpdate.addActionListener(new ButtonActionListener(this,"id_empresaDetaFormaPagoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaFormaPago.jButtonid_empresaDetaFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"id_empresaDetaFormaPagoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetaFormaPago.jButtonid_sucursalDetaFormaPagoUpdate.addActionListener(new ButtonActionListener(this,"id_sucursalDetaFormaPagoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaFormaPago.jButtonid_sucursalDetaFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"id_sucursalDetaFormaPagoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetaFormaPago.jButtonid_ejercicioDetaFormaPagoUpdate.addActionListener(new ButtonActionListener(this,"id_ejercicioDetaFormaPagoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaFormaPago.jButtonid_ejercicioDetaFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"id_ejercicioDetaFormaPagoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetaFormaPago.jButtonid_periodoDetaFormaPagoUpdate.addActionListener(new ButtonActionListener(this,"id_periodoDetaFormaPagoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaFormaPago.jButtonid_periodoDetaFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"id_periodoDetaFormaPagoBusqueda"));
		//jButtonid_facturaDetaFormaPago.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_facturaDetaFormaPagoActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormDetaFormaPago.jButtonid_facturaDetaFormaPago.addActionListener(new ButtonActionListener(this,"id_facturaDetaFormaPago"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetaFormaPago.jButtonid_facturaDetaFormaPagoUpdate.addActionListener(new ButtonActionListener(this,"id_facturaDetaFormaPagoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaFormaPago.jButtonid_facturaDetaFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"id_facturaDetaFormaPagoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetaFormaPago.jButtonid_tipo_forma_pagoDetaFormaPagoUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_forma_pagoDetaFormaPagoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaFormaPago.jButtonid_tipo_forma_pagoDetaFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_forma_pagoDetaFormaPagoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetaFormaPago.jButtonid_tipo_deta_forma_pagoDetaFormaPagoUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_deta_forma_pagoDetaFormaPagoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaFormaPago.jButtonid_tipo_deta_forma_pagoDetaFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_deta_forma_pagoDetaFormaPagoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetaFormaPago.jButtonid_deta_forma_pago_factuDetaFormaPagoUpdate.addActionListener(new ButtonActionListener(this,"id_deta_forma_pago_factuDetaFormaPagoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaFormaPago.jButtonid_deta_forma_pago_factuDetaFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"id_deta_forma_pago_factuDetaFormaPagoBusqueda"));
		//jButtonid_cuenta_contableDetaFormaPago.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_cuenta_contableDetaFormaPagoActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormDetaFormaPago.jButtonid_cuenta_contableDetaFormaPago.addActionListener(new ButtonActionListener(this,"id_cuenta_contableDetaFormaPago"));
		//jButtonid_cuenta_contableDetaFormaPagoArbol.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			abrirFrameTreeCuentaContable("BUSQUEDA_FK");
		//		}
		//	}
		//);

		//BUSQUEDA ARBOL CAMPO
		this.jInternalFrameDetalleFormDetaFormaPago.jButtonid_cuenta_contableDetaFormaPagoArbol.addActionListener(new ButtonActionListener(this,"id_cuenta_contableDetaFormaPagoArbol"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetaFormaPago.jButtonid_cuenta_contableDetaFormaPagoUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contableDetaFormaPagoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaFormaPago.jButtonid_cuenta_contableDetaFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contableDetaFormaPagoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetaFormaPago.jButtonid_tipo_retencionDetaFormaPagoUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_retencionDetaFormaPagoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaFormaPago.jButtonid_tipo_retencionDetaFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_retencionDetaFormaPagoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaFormaPago.jButtonvalorDetaFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"valorDetaFormaPagoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaFormaPago.jButtonfecha_inicialDetaFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"fecha_inicialDetaFormaPagoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaFormaPago.jButtonfecha_finalDetaFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"fecha_finalDetaFormaPagoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaFormaPago.jButtonporcentajeDetaFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"porcentajeDetaFormaPagoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaFormaPago.jButtonretencionDetaFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"retencionDetaFormaPagoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaFormaPago.jButtonporcentaje_retencionDetaFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"porcentaje_retencionDetaFormaPagoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaFormaPago.jButtonbase_retencionDetaFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"base_retencionDetaFormaPagoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaFormaPago.jButtonvalor_retencionDetaFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"valor_retencionDetaFormaPagoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaFormaPago.jButtonnumero_retencionDetaFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"numero_retencionDetaFormaPagoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaFormaPago.jButtonnumero_diasDetaFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"numero_diasDetaFormaPagoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaFormaPago.jButtonnumero_cuotaDetaFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"numero_cuotaDetaFormaPagoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaFormaPago.jButtondescripcionDetaFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"descripcionDetaFormaPagoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetaFormaPago.jButtonid_anioDetaFormaPagoUpdate.addActionListener(new ButtonActionListener(this,"id_anioDetaFormaPagoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaFormaPago.jButtonid_anioDetaFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"id_anioDetaFormaPagoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetaFormaPago.jButtonid_mesDetaFormaPagoUpdate.addActionListener(new ButtonActionListener(this,"id_mesDetaFormaPagoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaFormaPago.jButtonid_mesDetaFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"id_mesDetaFormaPagoBusqueda"));
		
		
		;

		//TABBED PANE RELACIONES
		this.jInternalFrameDetalleFormDetaFormaPago.jTabbedPaneRelacionesDetaFormaPago.addChangeListener(new TabbedPaneChangeListener(this,"RelacionesDetaFormaPago"));
		
		;		
		//TABBED PANE RELACIONES FIN(EXTRA TAB)	
	}
	
	public void initActions() {				
		this.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"CloseInternalFrameDetaFormaPago"));
		
		if(this.jInternalFrameDetalleFormDetaFormaPago!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetaFormaPago.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"jButtonCancelarDetaFormaPago"));
		}
		
		this.jTableDatosDetaFormaPago.getSelectionModel().addListSelectionListener(new TableListSelectionListener(this,"TableDatosSeleccionarDetaFormaPago"));
		
		this.jTableDatosDetaFormaPago.addMouseListener(new TableMouseAdapter(this,"DatosSeleccionarDetaFormaPago"));
		
		this.jButtonNuevoDetaFormaPago.addActionListener(new ButtonActionListener(this,"NuevoDetaFormaPago"));
		
		this.jButtonDuplicarDetaFormaPago.addActionListener(new ButtonActionListener(this,"DuplicarDetaFormaPago"));
		
		this.jButtonCopiarDetaFormaPago.addActionListener(new ButtonActionListener(this,"CopiarDetaFormaPago"));
		
		this.jButtonVerFormDetaFormaPago.addActionListener(new ButtonActionListener(this,"VerFormDetaFormaPago"));
		
		
		this.jButtonNuevoToolBarDetaFormaPago.addActionListener(new ButtonActionListener(this,"NuevoToolBarDetaFormaPago"));
			
		this.jButtonDuplicarToolBarDetaFormaPago.addActionListener(new ButtonActionListener(this,"DuplicarToolBarDetaFormaPago"));
			
		this.jMenuItemNuevoDetaFormaPago.addActionListener (new ButtonActionListener(this,"MenuItemNuevoDetaFormaPago"));
			
		this.jMenuItemDuplicarDetaFormaPago.addActionListener (new ButtonActionListener(this,"MenuItemDuplicarDetaFormaPago"));		
		
		
		this.jButtonNuevoRelacionesDetaFormaPago.addActionListener (new ButtonActionListener(this,"NuevoRelacionesDetaFormaPago"));
		
		
		this.jButtonNuevoRelacionesToolBarDetaFormaPago.addActionListener(new ButtonActionListener(this,"NuevoRelacionesToolBarDetaFormaPago"));
			
		this.jMenuItemNuevoRelacionesDetaFormaPago.addActionListener(new ButtonActionListener(this,"MenuItemNuevoRelacionesDetaFormaPago"));		
		
		
		if(this.jInternalFrameDetalleFormDetaFormaPago!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetaFormaPago.jButtonModificarDetaFormaPago.addActionListener(new ButtonActionListener(this,"ModificarDetaFormaPago"));
		}
		
		
		if(this.jInternalFrameDetalleFormDetaFormaPago!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetaFormaPago.jButtonModificarToolBarDetaFormaPago.addActionListener(new ButtonActionListener(this,"ModificarToolBarDetaFormaPago"));
			
			this.jInternalFrameDetalleFormDetaFormaPago.jMenuItemModificarDetaFormaPago.addActionListener(new ButtonActionListener(this,"MenuItemModificarDetaFormaPago"));		
		}
		
		
		if(this.jInternalFrameDetalleFormDetaFormaPago!=null) { //if(this.conCargarFormDetalle) {			
			this.jInternalFrameDetalleFormDetaFormaPago.jButtonActualizarDetaFormaPago.addActionListener (new ButtonActionListener(this,"ActualizarDetaFormaPago"));
		}
		
		
		if(this.jInternalFrameDetalleFormDetaFormaPago!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetaFormaPago.jButtonActualizarToolBarDetaFormaPago.addActionListener(new ButtonActionListener(this,"ActualizarToolBarDetaFormaPago"));
				
			this.jInternalFrameDetalleFormDetaFormaPago.jMenuItemActualizarDetaFormaPago.addActionListener (new ButtonActionListener(this,"MenuItemActualizarDetaFormaPago"));		
		}
		
		
		if(this.jInternalFrameDetalleFormDetaFormaPago!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetaFormaPago.jButtonEliminarDetaFormaPago.addActionListener (new ButtonActionListener(this,"EliminarDetaFormaPago"));
		}
		
		
		if(this.jInternalFrameDetalleFormDetaFormaPago!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetaFormaPago.jButtonEliminarToolBarDetaFormaPago.addActionListener (new ButtonActionListener(this,"EliminarToolBarDetaFormaPago"));
						
			this.jInternalFrameDetalleFormDetaFormaPago.jMenuItemEliminarDetaFormaPago.addActionListener (new ButtonActionListener(this,"MenuItemEliminarDetaFormaPago"));		
		}
		
		
		if(this.jInternalFrameDetalleFormDetaFormaPago!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetaFormaPago.jButtonCancelarDetaFormaPago.addActionListener (new ButtonActionListener(this,"CancelarDetaFormaPago"));
		}
		
		
		if(this.jInternalFrameDetalleFormDetaFormaPago!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetaFormaPago.jButtonCancelarToolBarDetaFormaPago.addActionListener (new ButtonActionListener(this,"CancelarToolBarDetaFormaPago"));
			
			this.jInternalFrameDetalleFormDetaFormaPago.jMenuItemCancelarDetaFormaPago.addActionListener (new ButtonActionListener(this,"MenuItemCancelarDetaFormaPago"));		
		}
		
		this.jButtonMostrarOcultarTablaToolBarDetaFormaPago.addActionListener (new ButtonActionListener(this,"MostrarOcultarToolBarDetaFormaPago"));		
		
		
		this.jButtonCerrarDetaFormaPago.addActionListener (new ButtonActionListener(this,"CerrarDetaFormaPago"));
		
		
		this.jButtonCerrarToolBarDetaFormaPago.addActionListener (new ButtonActionListener(this,"CerrarToolBarDetaFormaPago"));
			
		this.jMenuItemCerrarDetaFormaPago.addActionListener (new ButtonActionListener(this,"MenuItemCerrarDetaFormaPago"));
			
		if(this.jInternalFrameDetalleFormDetaFormaPago!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetaFormaPago.jMenuItemDetalleCerrarDetaFormaPago.addActionListener (new ButtonActionListener(this,"MenuItemDetalleCerrarDetaFormaPago"));		
		}
		
		
		if(this.jInternalFrameDetalleFormDetaFormaPago!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetaFormaPago.jButtonGuardarCambiosDetaFormaPago.addActionListener (new ButtonActionListener(this,"GuardarCambiosDetaFormaPago"));
		}
		
		
		if(this.jInternalFrameDetalleFormDetaFormaPago!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetaFormaPago.jButtonGuardarCambiosToolBarDetaFormaPago.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarDetaFormaPago"));
		}
		
		this.jButtonCopiarToolBarDetaFormaPago.addActionListener (new ButtonActionListener(this,"CopiarToolBarDetaFormaPago"));
			
		this.jButtonVerFormToolBarDetaFormaPago.addActionListener (new ButtonActionListener(this,"VerFormToolBarDetaFormaPago"));
		
		this.jMenuItemGuardarCambiosDetaFormaPago.addActionListener (new ButtonActionListener(this,"MenuItemGuardarCambiosDetaFormaPago"));
			
		this.jMenuItemCopiarDetaFormaPago.addActionListener (new ButtonActionListener(this,"MenuItemCopiarDetaFormaPago"));		
		
		this.jMenuItemVerFormDetaFormaPago.addActionListener (new ButtonActionListener(this,"MenuItemVerFormDetaFormaPago"));		
		
		
		this.jButtonGuardarCambiosTablaDetaFormaPago.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaDetaFormaPago"));
		
		
		this.jButtonGuardarCambiosTablaToolBarDetaFormaPago.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaToolBarDetaFormaPago"));
			
		this.jMenuItemGuardarCambiosTablaDetaFormaPago.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaDetaFormaPago"));		
		
		
		
		this.jButtonRecargarInformacionDetaFormaPago.addActionListener (new ButtonActionListener(this,"RecargarInformacionDetaFormaPago"));
					
		this.jButtonRecargarInformacionToolBarDetaFormaPago.addActionListener (new ButtonActionListener(this,"RecargarInformacionToolBarDetaFormaPago"));
		
		this.jMenuItemRecargarInformacionDetaFormaPago.addActionListener (new ButtonActionListener(this,"MenuItemRecargarInformacionDetaFormaPago"));		
		
		
		
		this.jButtonAnterioresDetaFormaPago.addActionListener (new ButtonActionListener(this,"AnterioresDetaFormaPago"));
		
		
		this.jButtonAnterioresToolBarDetaFormaPago.addActionListener (new ButtonActionListener(this,"AnterioresToolBarDetaFormaPago"));
		
		this.jMenuItemAnterioresDetaFormaPago.addActionListener (new ButtonActionListener(this,"MenuItemAnterioresDetaFormaPago"));		
		
		
		this.jButtonSiguientesDetaFormaPago.addActionListener (new ButtonActionListener(this,"SiguientesDetaFormaPago"));
		
		
		this.jButtonSiguientesToolBarDetaFormaPago.addActionListener (new ButtonActionListener(this,"SiguientesToolBarDetaFormaPago"));
			
		this.jMenuItemSiguientesDetaFormaPago.addActionListener (new ButtonActionListener(this,"MenuItemSiguientesDetaFormaPago"));
			
		this.jMenuItemAbrirOrderByDetaFormaPago.addActionListener (new ButtonActionListener(this,"MenuItemAbrirOrderByDetaFormaPago"));
			
		this.jMenuItemMostrarOcultarDetaFormaPago.addActionListener (new ButtonActionListener(this,"MenuItemMostrarOcultarDetaFormaPago"));
			
		this.jMenuItemDetalleAbrirOrderByDetaFormaPago.addActionListener (new ButtonActionListener(this,"MenuItemDetalleAbrirOrderByDetaFormaPago"));
			
		this.jMenuItemDetalleMostarOcultarDetaFormaPago.addActionListener (new ButtonActionListener(this,"MenuItemDetalleMostrarOcultarDetaFormaPago"));		
		
		
		this.jButtonNuevoGuardarCambiosDetaFormaPago.addActionListener (new ButtonActionListener(this,"NuevoGuardarCambiosDetaFormaPago"));
		
		
		this.jButtonNuevoGuardarCambiosToolBarDetaFormaPago.addActionListener (new ButtonActionListener(this,"NuevoGuardarCambiosToolBarDetaFormaPago"));
			
		this.jMenuItemNuevoGuardarCambiosDetaFormaPago.addActionListener (new ButtonActionListener(this,"MenuItemNuevoGuardarCambiosDetaFormaPago"));		
		
		
		
		//SELECCIONAR TODOS
		
		this.jCheckBoxSeleccionarTodosDetaFormaPago.addItemListener(new CheckBoxItemListener(this,"SeleccionarTodosDetaFormaPago"));

		this.jCheckBoxSeleccionadosDetaFormaPago.addItemListener(new CheckBoxItemListener(this,"SeleccionadosDetaFormaPago"));
		
		if(this.jInternalFrameDetalleFormDetaFormaPago!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxTiposAccionesFormularioDetaFormaPago.addActionListener (new ButtonActionListener(this,"TiposAccionesFormularioDetaFormaPago"));
		}
		
		
		this.jComboBoxTiposRelacionesDetaFormaPago.addActionListener (new ButtonActionListener(this,"TiposRelacionesDetaFormaPago"));
			
		this.jComboBoxTiposAccionesDetaFormaPago.addActionListener (new ButtonActionListener(this,"TiposAccionesDetaFormaPago"));
					
		this.jComboBoxTiposSeleccionarDetaFormaPago.addActionListener (new ButtonActionListener(this,"TiposSeleccionarDetaFormaPago"));
			
		this.jTextFieldValorCampoGeneralDetaFormaPago.addActionListener (new ButtonActionListener(this,"ValorCampoGeneralDetaFormaPago"));		
		
		
		if(this.jInternalFrameDetalleFormDetaFormaPago!=null) { //if(this.conCargarFormDetalle) {
		
		
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaFormaPago.jButtonidDetaFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"idDetaFormaPagoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetaFormaPago.jButtonid_empresaDetaFormaPagoUpdate.addActionListener(new ButtonActionListener(this,"id_empresaDetaFormaPagoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaFormaPago.jButtonid_empresaDetaFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"id_empresaDetaFormaPagoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetaFormaPago.jButtonid_sucursalDetaFormaPagoUpdate.addActionListener(new ButtonActionListener(this,"id_sucursalDetaFormaPagoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaFormaPago.jButtonid_sucursalDetaFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"id_sucursalDetaFormaPagoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetaFormaPago.jButtonid_ejercicioDetaFormaPagoUpdate.addActionListener(new ButtonActionListener(this,"id_ejercicioDetaFormaPagoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaFormaPago.jButtonid_ejercicioDetaFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"id_ejercicioDetaFormaPagoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetaFormaPago.jButtonid_periodoDetaFormaPagoUpdate.addActionListener(new ButtonActionListener(this,"id_periodoDetaFormaPagoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaFormaPago.jButtonid_periodoDetaFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"id_periodoDetaFormaPagoBusqueda"));
		//jButtonid_facturaDetaFormaPago.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_facturaDetaFormaPagoActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormDetaFormaPago.jButtonid_facturaDetaFormaPago.addActionListener(new ButtonActionListener(this,"id_facturaDetaFormaPago"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetaFormaPago.jButtonid_facturaDetaFormaPagoUpdate.addActionListener(new ButtonActionListener(this,"id_facturaDetaFormaPagoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaFormaPago.jButtonid_facturaDetaFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"id_facturaDetaFormaPagoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetaFormaPago.jButtonid_tipo_forma_pagoDetaFormaPagoUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_forma_pagoDetaFormaPagoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaFormaPago.jButtonid_tipo_forma_pagoDetaFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_forma_pagoDetaFormaPagoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetaFormaPago.jButtonid_tipo_deta_forma_pagoDetaFormaPagoUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_deta_forma_pagoDetaFormaPagoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaFormaPago.jButtonid_tipo_deta_forma_pagoDetaFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_deta_forma_pagoDetaFormaPagoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetaFormaPago.jButtonid_deta_forma_pago_factuDetaFormaPagoUpdate.addActionListener(new ButtonActionListener(this,"id_deta_forma_pago_factuDetaFormaPagoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaFormaPago.jButtonid_deta_forma_pago_factuDetaFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"id_deta_forma_pago_factuDetaFormaPagoBusqueda"));
		//jButtonid_cuenta_contableDetaFormaPago.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_cuenta_contableDetaFormaPagoActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormDetaFormaPago.jButtonid_cuenta_contableDetaFormaPago.addActionListener(new ButtonActionListener(this,"id_cuenta_contableDetaFormaPago"));
		//jButtonid_cuenta_contableDetaFormaPagoArbol.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			abrirFrameTreeCuentaContable("BUSQUEDA_FK");
		//		}
		//	}
		//);

		//BUSQUEDA ARBOL CAMPO
		this.jInternalFrameDetalleFormDetaFormaPago.jButtonid_cuenta_contableDetaFormaPagoArbol.addActionListener(new ButtonActionListener(this,"id_cuenta_contableDetaFormaPagoArbol"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetaFormaPago.jButtonid_cuenta_contableDetaFormaPagoUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contableDetaFormaPagoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaFormaPago.jButtonid_cuenta_contableDetaFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contableDetaFormaPagoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetaFormaPago.jButtonid_tipo_retencionDetaFormaPagoUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_retencionDetaFormaPagoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaFormaPago.jButtonid_tipo_retencionDetaFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_retencionDetaFormaPagoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaFormaPago.jButtonvalorDetaFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"valorDetaFormaPagoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaFormaPago.jButtonfecha_inicialDetaFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"fecha_inicialDetaFormaPagoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaFormaPago.jButtonfecha_finalDetaFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"fecha_finalDetaFormaPagoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaFormaPago.jButtonporcentajeDetaFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"porcentajeDetaFormaPagoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaFormaPago.jButtonretencionDetaFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"retencionDetaFormaPagoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaFormaPago.jButtonporcentaje_retencionDetaFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"porcentaje_retencionDetaFormaPagoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaFormaPago.jButtonbase_retencionDetaFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"base_retencionDetaFormaPagoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaFormaPago.jButtonvalor_retencionDetaFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"valor_retencionDetaFormaPagoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaFormaPago.jButtonnumero_retencionDetaFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"numero_retencionDetaFormaPagoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaFormaPago.jButtonnumero_diasDetaFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"numero_diasDetaFormaPagoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaFormaPago.jButtonnumero_cuotaDetaFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"numero_cuotaDetaFormaPagoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaFormaPago.jButtondescripcionDetaFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"descripcionDetaFormaPagoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetaFormaPago.jButtonid_anioDetaFormaPagoUpdate.addActionListener(new ButtonActionListener(this,"id_anioDetaFormaPagoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaFormaPago.jButtonid_anioDetaFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"id_anioDetaFormaPagoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetaFormaPago.jButtonid_mesDetaFormaPagoUpdate.addActionListener(new ButtonActionListener(this,"id_mesDetaFormaPagoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaFormaPago.jButtonid_mesDetaFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"id_mesDetaFormaPagoBusqueda"));
		}
		
		if(!this.conCargarMinimo) {
		//BYDAN_BUSQUEDAS
		
		
			this.jButtonFK_IdCuentaContableDetaFormaPago.addActionListener(new ButtonActionListener(this,"FK_IdCuentaContableDetaFormaPago"));

			this.jButtonBuscarFK_IdCuentaContableid_cuenta_contableDetaFormaPago.addActionListener(new ButtonActionListener(this,"id_cuenta_contableDetaFormaPago"));

			this.jButtonFK_IdDetaFormaPagoFactuDetaFormaPago.addActionListener(new ButtonActionListener(this,"FK_IdDetaFormaPagoFactuDetaFormaPago"));

			this.jButtonFK_IdFacturaDetaFormaPago.addActionListener(new ButtonActionListener(this,"FK_IdFacturaDetaFormaPago"));

			this.jButtonBuscarFK_IdFacturaid_facturaDetaFormaPago.addActionListener(new ButtonActionListener(this,"id_facturaDetaFormaPago"));

			this.jButtonFK_IdTipoDetaFormaPagoDetaFormaPago.addActionListener(new ButtonActionListener(this,"FK_IdTipoDetaFormaPagoDetaFormaPago"));

			this.jButtonFK_IdTipoFormaPagoDetaFormaPago.addActionListener(new ButtonActionListener(this,"FK_IdTipoFormaPagoDetaFormaPago"));

			this.jButtonFK_IdTipoRetencionDetaFormaPago.addActionListener(new ButtonActionListener(this,"FK_IdTipoRetencionDetaFormaPago"));
		
		
		
			//REPORTE DINAMICO
			
			if(this.jInternalFrameReporteDinamicoDetaFormaPago!=null) {
				this.jInternalFrameReporteDinamicoDetaFormaPago.getjButtonCerrarReporteDinamico().addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoDetaFormaPago"));
				this.jInternalFrameReporteDinamicoDetaFormaPago.getjButtonGenerarReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoDetaFormaPago"));
				this.jInternalFrameReporteDinamicoDetaFormaPago.getjButtonGenerarExcelReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoDetaFormaPago"));
			}
			
			//this.jButtonCerrarReporteDinamicoDetaFormaPago.addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoDetaFormaPago"));				
			//this.jButtonGenerarReporteDinamicoDetaFormaPago.addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoDetaFormaPago"));
			//this.jButtonGenerarExcelReporteDinamicoDetaFormaPago.addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoDetaFormaPago"));
				
				
			//IMPORTACION			
			if(this.jInternalFrameImportacionDetaFormaPago!=null) {
				this.jInternalFrameImportacionDetaFormaPago.getjButtonCerrarImportacion().addActionListener (new ButtonActionListener(this,"CerrarImportacionDetaFormaPago"));
				this.jInternalFrameImportacionDetaFormaPago.getjButtonGenerarImportacion().addActionListener (new ButtonActionListener(this,"GenerarImportacionDetaFormaPago"));
				this.jInternalFrameImportacionDetaFormaPago.getjButtonAbrirImportacion().addActionListener (new ButtonActionListener(this,"AbrirImportacionDetaFormaPago"));
			}
			
			//ORDER BY
			this.jButtonAbrirOrderByDetaFormaPago.addActionListener (new ButtonActionListener(this,"AbrirOrderByDetaFormaPago"));
			
			this.jButtonAbrirOrderByToolBarDetaFormaPago.addActionListener (new ButtonActionListener(this,"AbrirOrderByToolBarDetaFormaPago"));			
			
			if(this.jInternalFrameOrderByDetaFormaPago!=null) {
				this.jInternalFrameOrderByDetaFormaPago.getjButtonCerrarOrderBy().addActionListener (new ButtonActionListener(this,"CerrarOrderByDetaFormaPago"));				
			}
			
			
		}
		
		this.jButtonAbrirTotalesDetaFormaPago.addActionListener (new ButtonActionListener(this,"AbrirTotalesDetaFormaPago"));
		
		if(this.jInternalFrameTotalesDetaFormaPago!=null) {
			this.jInternalFrameTotalesDetaFormaPago.getjButtonCerrarTotales().addActionListener (new ButtonActionListener(this,"CerrarTotalesDetaFormaPago"));
		}
		
		
		if(!this.conCargarMinimo) {
			if(this.jInternalFrameDetalleFormDetaFormaPago!=null) { //if(this.conCargarFormDetalle) {
			;
			}
		}
		
		
		//TABBED PANE RELACIONES
		if(this.jInternalFrameDetalleFormDetaFormaPago!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetaFormaPago.jTabbedPaneRelacionesDetaFormaPago.addChangeListener(new TabbedPaneChangeListener(this,"RelacionesDetaFormaPago"));
		
		;
		}
		//TABBED PANE RELACIONES FIN(EXTRA TAB)		
	}
	
	/*
	public void initActions() {
		String sMapKey = "";
		InputMap inputMap =null;
		
		this.addInternalFrameListener(new javax.swing.event.InternalFrameAdapter() {
            public void internalFrameClosing(InternalFrameEvent event) {          	
            	try {
            		closingInternalFrameDetaFormaPago();
				} catch (Exception e) {
					e.printStackTrace();
				}
            }
        });
		
		this.jInternalFrameDetalleFormDetaFormaPago.addInternalFrameListener(new javax.swing.event.InternalFrameAdapter() {
	        public void internalFrameClosing(InternalFrameEvent event) {
	            JInternalFrameBase jInternalFrameDetalleFormDetaFormaPago = (JInternalFrameBase)event.getSource();
	            	
	            DetaFormaPagoBeanSwingJInternalFrame jInternalFrameParent=(DetaFormaPagoBeanSwingJInternalFrame)jInternalFrameDetalleFormDetaFormaPago.getjInternalFrameParent();
	                
	            try {
					jInternalFrameParent.jButtonCancelarDetaFormaPagoActionPerformed(null);
					
					//jInternalFrameParent.dispose();
					//jInternalFrameParent=null;
					
				} catch (Exception e) {
					e.printStackTrace();
				}
	        }
	    });
			
		this.jTableDatosDetaFormaPago.getSelectionModel().addListSelectionListener (
	                new ListSelectionListener() {
	                    public void valueChanged(ListSelectionEvent e) {
							//BYDAN_DESHABILITADO
	                    	//try {jTableDatosDetaFormaPagoListSelectionListener(e);}catch(Exception e1){e1.printStackTrace();}
	                    }
	                }
	     );
		
		this.jTableDatosDetaFormaPago.addMouseListener(new MouseAdapter() {
			   public void mouseClicked(MouseEvent evt) {
				      if (evt.getClickCount() == 2) {
				    	  jButtonIdActionPerformed(null,jTableDatosDetaFormaPago.getSelectedRow(),false,false);
				      }
				   }
		});
		
		this.jButtonNuevoDetaFormaPago.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoDetaFormaPagoActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoToolBarDetaFormaPago.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoDetaFormaPagoActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoDetaFormaPago.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoDetaFormaPagoActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "NuevoDetaFormaPago";
		inputMap = this.jButtonNuevoDetaFormaPago.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_N , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonNuevoDetaFormaPago.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonNuevoDetaFormaPagoActionPerformed(evt,false);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonNuevoRelacionesDetaFormaPago.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoDetaFormaPagoActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoRelacionesToolBarDetaFormaPago.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoDetaFormaPagoActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoRelacionesDetaFormaPago.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoDetaFormaPagoActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "NuevoRelacionesDetaFormaPago";
		inputMap = this.jButtonNuevoRelacionesDetaFormaPago.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_R , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonNuevoRelacionesDetaFormaPago.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonNuevoDetaFormaPagoActionPerformed(evt,true);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonModificarDetaFormaPago.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarDetaFormaPagoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonModificarToolBarDetaFormaPago.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarDetaFormaPagoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemModificarDetaFormaPago.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarDetaFormaPagoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "ModificarDetaFormaPago";
		inputMap = this.jButtonModificarDetaFormaPago.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_M , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonModificarDetaFormaPago.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonModificarDetaFormaPagoActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonActualizarDetaFormaPago.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarDetaFormaPagoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonActualizarToolBarDetaFormaPago.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarDetaFormaPagoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemActualizarDetaFormaPago.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarDetaFormaPagoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "ActualizarDetaFormaPago";
		inputMap = this.jButtonActualizarDetaFormaPago.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_G , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonActualizarDetaFormaPago.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonActualizarDetaFormaPagoActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonEliminarDetaFormaPago.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarDetaFormaPagoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonEliminarToolBarDetaFormaPago.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarDetaFormaPagoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
				
		this.jMenuItemEliminarDetaFormaPago.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarDetaFormaPagoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "EliminarDetaFormaPago";
		inputMap = this.jButtonEliminarDetaFormaPago.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_E , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonEliminarDetaFormaPago.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonEliminarDetaFormaPagoActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonCancelarDetaFormaPago.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarDetaFormaPagoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonCancelarToolBarDetaFormaPago.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarDetaFormaPagoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemCancelarDetaFormaPago.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarDetaFormaPagoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "CancelarDetaFormaPago";
		inputMap = this.jButtonCancelarDetaFormaPago.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_Q , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonCancelarDetaFormaPago.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonCancelarDetaFormaPagoActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonCerrarDetaFormaPago.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarDetaFormaPagoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonCerrarToolBarDetaFormaPago.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarDetaFormaPagoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemCerrarDetaFormaPago.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarDetaFormaPagoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemDetalleCerrarDetaFormaPago.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  //try {jButtonCerrarDetaFormaPagoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
					try {jButtonCancelarDetaFormaPagoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "CerrarDetaFormaPago";
		inputMap = this.jButtonCerrarDetaFormaPago.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_C , KeyEvent.ALT_MASK), sMapKey);
			
		this.jButtonCerrarDetaFormaPago.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonCerrarDetaFormaPagoActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jInternalFrameDetalleFormDetaFormaPago.jButtonGuardarCambiosDetaFormaPago.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosDetaFormaPagoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosToolBarDetaFormaPago.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosDetaFormaPagoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemGuardarCambiosDetaFormaPago.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosDetaFormaPagoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosTablaDetaFormaPago.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosDetaFormaPagoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosTablaToolBarDetaFormaPago.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosDetaFormaPagoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemGuardarCambiosTablaDetaFormaPago.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosDetaFormaPagoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "GuardarCambiosDetaFormaPago";
		inputMap = this.jInternalFrameDetalleFormDetaFormaPago.jButtonGuardarCambiosDetaFormaPago.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_G , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jInternalFrameDetalleFormDetaFormaPago.jButtonGuardarCambiosDetaFormaPago.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonGuardarCambiosDetaFormaPagoActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonRecargarInformacionDetaFormaPago.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionDetaFormaPagoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonRecargarInformacionToolBarDetaFormaPago.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionDetaFormaPagoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemRecargarInformacionDetaFormaPago.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionDetaFormaPagoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		
		this.jButtonAnterioresDetaFormaPago.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresDetaFormaPagoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonAnterioresToolBarDetaFormaPago.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresDetaFormaPagoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemAnterioresDetaFormaPago.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresDetaFormaPagoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonSiguientesDetaFormaPago.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesDetaFormaPagoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonSiguientesToolBarDetaFormaPago.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesDetaFormaPagoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemSiguientesDetaFormaPago.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesDetaFormaPagoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoGuardarCambiosDetaFormaPago.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosDetaFormaPagoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoGuardarCambiosToolBarDetaFormaPago.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosDetaFormaPagoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoGuardarCambiosDetaFormaPago.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosDetaFormaPagoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		
		//SELECCIONAR TODOS
		this.jCheckBoxSeleccionarTodosDetaFormaPago.addItemListener(new ItemListener() {		
			public void itemStateChanged(ItemEvent evt) {
				try {jCheckBoxSeleccionarTodosDetaFormaPagoItemListener(evt);}catch(Exception e){e.printStackTrace();}
			}
		});

		this.jComboBoxTiposAccionesDetaFormaPago.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jComboBoxTiposAccionesDetaFormaPagoActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		this.jComboBoxTiposSeleccionarDetaFormaPago.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jComboBoxTiposSeleccionarDetaFormaPagoActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		this.jTextFieldValorCampoGeneralDetaFormaPago.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jTextFieldValorCampoGeneralDetaFormaPagoActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaFormaPago.jButtonidDetaFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"idDetaFormaPagoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetaFormaPago.jButtonid_empresaDetaFormaPagoUpdate.addActionListener(new ButtonActionListener(this,"id_empresaDetaFormaPagoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaFormaPago.jButtonid_empresaDetaFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"id_empresaDetaFormaPagoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetaFormaPago.jButtonid_sucursalDetaFormaPagoUpdate.addActionListener(new ButtonActionListener(this,"id_sucursalDetaFormaPagoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaFormaPago.jButtonid_sucursalDetaFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"id_sucursalDetaFormaPagoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetaFormaPago.jButtonid_ejercicioDetaFormaPagoUpdate.addActionListener(new ButtonActionListener(this,"id_ejercicioDetaFormaPagoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaFormaPago.jButtonid_ejercicioDetaFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"id_ejercicioDetaFormaPagoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetaFormaPago.jButtonid_periodoDetaFormaPagoUpdate.addActionListener(new ButtonActionListener(this,"id_periodoDetaFormaPagoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaFormaPago.jButtonid_periodoDetaFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"id_periodoDetaFormaPagoBusqueda"));
		//jButtonid_facturaDetaFormaPago.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_facturaDetaFormaPagoActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormDetaFormaPago.jButtonid_facturaDetaFormaPago.addActionListener(new ButtonActionListener(this,"id_facturaDetaFormaPago"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetaFormaPago.jButtonid_facturaDetaFormaPagoUpdate.addActionListener(new ButtonActionListener(this,"id_facturaDetaFormaPagoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaFormaPago.jButtonid_facturaDetaFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"id_facturaDetaFormaPagoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetaFormaPago.jButtonid_tipo_forma_pagoDetaFormaPagoUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_forma_pagoDetaFormaPagoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaFormaPago.jButtonid_tipo_forma_pagoDetaFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_forma_pagoDetaFormaPagoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetaFormaPago.jButtonid_tipo_deta_forma_pagoDetaFormaPagoUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_deta_forma_pagoDetaFormaPagoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaFormaPago.jButtonid_tipo_deta_forma_pagoDetaFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_deta_forma_pagoDetaFormaPagoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetaFormaPago.jButtonid_deta_forma_pago_factuDetaFormaPagoUpdate.addActionListener(new ButtonActionListener(this,"id_deta_forma_pago_factuDetaFormaPagoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaFormaPago.jButtonid_deta_forma_pago_factuDetaFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"id_deta_forma_pago_factuDetaFormaPagoBusqueda"));
		//jButtonid_cuenta_contableDetaFormaPago.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_cuenta_contableDetaFormaPagoActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormDetaFormaPago.jButtonid_cuenta_contableDetaFormaPago.addActionListener(new ButtonActionListener(this,"id_cuenta_contableDetaFormaPago"));
		//jButtonid_cuenta_contableDetaFormaPagoArbol.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			abrirFrameTreeCuentaContable("BUSQUEDA_FK");
		//		}
		//	}
		//);

		//BUSQUEDA ARBOL CAMPO
		this.jInternalFrameDetalleFormDetaFormaPago.jButtonid_cuenta_contableDetaFormaPagoArbol.addActionListener(new ButtonActionListener(this,"id_cuenta_contableDetaFormaPagoArbol"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetaFormaPago.jButtonid_cuenta_contableDetaFormaPagoUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contableDetaFormaPagoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaFormaPago.jButtonid_cuenta_contableDetaFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contableDetaFormaPagoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetaFormaPago.jButtonid_tipo_retencionDetaFormaPagoUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_retencionDetaFormaPagoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaFormaPago.jButtonid_tipo_retencionDetaFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_retencionDetaFormaPagoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaFormaPago.jButtonvalorDetaFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"valorDetaFormaPagoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaFormaPago.jButtonfecha_inicialDetaFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"fecha_inicialDetaFormaPagoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaFormaPago.jButtonfecha_finalDetaFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"fecha_finalDetaFormaPagoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaFormaPago.jButtonporcentajeDetaFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"porcentajeDetaFormaPagoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaFormaPago.jButtonretencionDetaFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"retencionDetaFormaPagoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaFormaPago.jButtonporcentaje_retencionDetaFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"porcentaje_retencionDetaFormaPagoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaFormaPago.jButtonbase_retencionDetaFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"base_retencionDetaFormaPagoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaFormaPago.jButtonvalor_retencionDetaFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"valor_retencionDetaFormaPagoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaFormaPago.jButtonnumero_retencionDetaFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"numero_retencionDetaFormaPagoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaFormaPago.jButtonnumero_diasDetaFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"numero_diasDetaFormaPagoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaFormaPago.jButtonnumero_cuotaDetaFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"numero_cuotaDetaFormaPagoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaFormaPago.jButtondescripcionDetaFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"descripcionDetaFormaPagoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetaFormaPago.jButtonid_anioDetaFormaPagoUpdate.addActionListener(new ButtonActionListener(this,"id_anioDetaFormaPagoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaFormaPago.jButtonid_anioDetaFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"id_anioDetaFormaPagoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetaFormaPago.jButtonid_mesDetaFormaPagoUpdate.addActionListener(new ButtonActionListener(this,"id_mesDetaFormaPagoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaFormaPago.jButtonid_mesDetaFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"id_mesDetaFormaPagoBusqueda"));
		
		
		this.jButtonFK_IdCuentaContableDetaFormaPago.addActionListener(new ButtonActionListener(this,"FK_IdCuentaContableDetaFormaPago"));

		this.jButtonBuscarFK_IdCuentaContableid_cuenta_contableDetaFormaPago.addActionListener(new ButtonActionListener(this,"id_cuenta_contableDetaFormaPago"));

		this.jButtonFK_IdDetaFormaPagoFactuDetaFormaPago.addActionListener(new ButtonActionListener(this,"FK_IdDetaFormaPagoFactuDetaFormaPago"));

		this.jButtonFK_IdFacturaDetaFormaPago.addActionListener(new ButtonActionListener(this,"FK_IdFacturaDetaFormaPago"));

		this.jButtonBuscarFK_IdFacturaid_facturaDetaFormaPago.addActionListener(new ButtonActionListener(this,"id_facturaDetaFormaPago"));

		this.jButtonFK_IdTipoDetaFormaPagoDetaFormaPago.addActionListener(new ButtonActionListener(this,"FK_IdTipoDetaFormaPagoDetaFormaPago"));

		this.jButtonFK_IdTipoFormaPagoDetaFormaPago.addActionListener(new ButtonActionListener(this,"FK_IdTipoFormaPagoDetaFormaPago"));

		this.jButtonFK_IdTipoRetencionDetaFormaPago.addActionListener(new ButtonActionListener(this,"FK_IdTipoRetencionDetaFormaPago"));

		
		//REPORTE DINAMICO
		this.jButtonCerrarReporteDinamicoDetaFormaPago.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarReporteDinamicoDetaFormaPagoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarReporteDinamicoDetaFormaPago.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarReporteDinamicoDetaFormaPagoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarExcelReporteDinamicoDetaFormaPago.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarExcelReporteDinamicoDetaFormaPagoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		//IMPORTACION
		this.jButtonCerrarImportacionDetaFormaPago.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarImportacionDetaFormaPagoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarImportacionDetaFormaPago.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarImportacionDetaFormaPagoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonAbrirImportacionDetaFormaPago.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAbrirImportacionDetaFormaPagoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
	}
	*/
	
	
	public void jComboBoxTiposSeleccionarDetaFormaPagoActionListener(ActionEvent evt) throws Exception {    		
		try {			
			Reporte reporte=(Reporte)this.jComboBoxTiposSeleccionarDetaFormaPago.getSelectedItem();
			
			//if(reporte.getsCodigo().equals("SELECCIONAR")) {
			//}					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetaFormaPagoConstantesFunciones.CLASSNAME);
		}
	}	
	
	
	
	public void seleccionarTodosDetaFormaPago(Boolean conSeleccionarTodos) throws Exception {    		
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {				
				for(DetaFormaPago detaformapagoAux:this.detaformapagoLogic.getDetaFormaPagos()) {
					detaformapagoAux.setIsSelected(conSeleccionarTodos);
				}			
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(DetaFormaPago detaformapagoAux:detaformapagos) {
					detaformapagoAux.setIsSelected(conSeleccionarTodos);
				}
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetaFormaPagoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionarTodosDetaFormaPagoItemListener(ItemEvent evt) throws Exception {    		
		try {			
			this.inicializarActualizarBindingDetaFormaPago(false,false);
			
			//JCheckBox jCheckBox=(JCheckBox)evt.getSource();			
			//System.out.println("ok");		
			
			Boolean existe=false;
			
			if(sTipoSeleccionar.equals("COLUMNAS")) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					for(DetaFormaPago detaformapagoAux:this.detaformapagoLogic.getDetaFormaPagos()) {
						detaformapagoAux.setIsSelected(this.isSeleccionarTodos);
					}			
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(DetaFormaPago detaformapagoAux:detaformapagos) {
						detaformapagoAux.setIsSelected(this.isSeleccionarTodos);
					}
				}
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					for(DetaFormaPago detaformapagoAux:this.detaformapagoLogic.getDetaFormaPagos()) {
					
					}	
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(DetaFormaPago detaformapagoAux:detaformapagos) {
						
					}
				}
			}
					
			if(existe) {
				this.inicializarActualizarBindingTablaDetaFormaPago(false);
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}	
			
			//TableCellRenderer tableCellRenderer=null;			
			
			//TableCellEditor tableCellEditor=null;						
						
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			/*
			for(int i = 0; i < this.jTableDatosDetaFormaPago.getRowCount(); i++) {				
				tableCellRenderer=this.jTableDatosSistema.getCellRenderer(i, 2);
				tableCellEditor=this.jTableDatosSistema.getCellEditor(i, 2);
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellRenderer;				
				idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellEditor;
				
				if(idSeleccionarTableCell.jCheckBoxId!=null) {
					idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				}
				
				//System.out.println(idSeleccionarTableCell.valor);
				
				//this.jTableDatosDetaFormaPago.getModel().setValueAt(jCheckBox.isSelected(), i, Funciones2.getColumnIndexByName(this.jTableDatosDetaFormaPago,Constantes2.S_SELECCIONAR));
		    } 
			*/
					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetaFormaPagoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionadosDetaFormaPagoItemListener(ItemEvent evt) throws Exception {    		
		try {			
			this.inicializarActualizarBindingDetaFormaPago(false,false);
			
			//JCheckBox jCheckBox=(JCheckBox)evt.getSource();			
			//System.out.println("ok");		
			
			Boolean existe=false;
			int[] arrNumRowsSeleccionados=null;
			
			arrNumRowsSeleccionados=this.jTableDatosDetaFormaPago.getSelectedRows();
			
			DetaFormaPago detaformapagoLocal=new DetaFormaPago();
			
			//this.seleccionarTodosDetaFormaPago(false);
			
			for(Integer iNumRowSeleccionado:arrNumRowsSeleccionados) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {
					detaformapagoLocal =(DetaFormaPago) this.detaformapagoLogic.getDetaFormaPagos().toArray()[this.jTableDatosDetaFormaPago.convertRowIndexToModel(iNumRowSeleccionado)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					detaformapagoLocal =(DetaFormaPago) this.detaformapagos.toArray()[this.jTableDatosDetaFormaPago.convertRowIndexToModel(iNumRowSeleccionado)];
				}
				
				detaformapagoLocal.setIsSelected(this.isSeleccionados);
			}
			
			/*
			if(sTipoSeleccionar.equals("SELECCIONAR")) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					for(DetaFormaPago detaformapagoAux:this.detaformapagoLogic.getDetaFormaPagos()) {
						detaformapagoAux.setIsSelected(this.isSeleccionados);
					}			
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(DetaFormaPago detaformapagoAux:detaformapagos) {
						detaformapagoAux.setIsSelected(this.isSeleccionados);
					}
				}
			}
			*/
			
			//if(existe) {
				this.inicializarActualizarBindingTablaDetaFormaPago(false);
			/*
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}	
			*/
			
			
			//TableCellRenderer tableCellRenderer=null;			
			
			//TableCellEditor tableCellEditor=null;						
						
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			/*
			for(int i = 0; i < this.jTableDatosDetaFormaPago.getRowCount(); i++) {				
				tableCellRenderer=this.jTableDatosSistema.getCellRenderer(i, 2);
				tableCellEditor=this.jTableDatosSistema.getCellEditor(i, 2);
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellRenderer;				
				idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellEditor;
				
				if(idSeleccionarTableCell.jCheckBoxId!=null) {
					idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				}
				
				//System.out.println(idSeleccionarTableCell.valor);
				
				//this.jTableDatosDetaFormaPago.getModel().setValueAt(jCheckBox.isSelected(), i, Funciones2.getColumnIndexByName(this.jTableDatosDetaFormaPago,Constantes2.S_SELECCIONAR));
		    } 
			*/
					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetaFormaPagoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionarActualDetaFormaPagoItemListener(ItemEvent evt,Long idActual) throws Exception {    		
		try {
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetaFormaPagoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void ejecutarAuxiliarDetaFormaPagoParaAjaxPostBack() throws Exception {    		
		try {
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetaFormaPagoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jTextFieldValorCampoGeneralDetaFormaPagoActionListener(ActionEvent evt) throws Exception {    		
		try {
			this.inicializarActualizarBindingDetaFormaPago(false,false);
			
			//System.out.println(this.jTextFieldValorCampoGeneralDetaFormaPago.getText());		
			
			Boolean existe=false;
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				for(DetaFormaPago detaformapagoAux:this.detaformapagoLogic.getDetaFormaPagos()) {
				
						if(sTipoSeleccionar.equals(DetaFormaPagoConstantesFunciones.LABEL_VALOR)) {
							existe=true;
							detaformapagoAux.setvalor(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetaFormaPagoConstantesFunciones.LABEL_FECHAINICIAL)) {
							existe=true;
							detaformapagoAux.setfecha_inicial(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetaFormaPagoConstantesFunciones.LABEL_FECHAFINAL)) {
							existe=true;
							detaformapagoAux.setfecha_final(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetaFormaPagoConstantesFunciones.LABEL_PORCENTAJE)) {
							existe=true;
							detaformapagoAux.setporcentaje(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetaFormaPagoConstantesFunciones.LABEL_RETENCION)) {
							existe=true;
							detaformapagoAux.setretencion(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetaFormaPagoConstantesFunciones.LABEL_PORCENTAJERETENCION)) {
							existe=true;
							detaformapagoAux.setporcentaje_retencion(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetaFormaPagoConstantesFunciones.LABEL_BASERETENCION)) {
							existe=true;
							detaformapagoAux.setbase_retencion(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetaFormaPagoConstantesFunciones.LABEL_VALORRETENCION)) {
							existe=true;
							detaformapagoAux.setvalor_retencion(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetaFormaPagoConstantesFunciones.LABEL_NUMERORETENCION)) {
							existe=true;
							detaformapagoAux.setnumero_retencion(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(DetaFormaPagoConstantesFunciones.LABEL_NUMERODIAS)) {
							existe=true;
							detaformapagoAux.setnumero_dias(Integer.parseInt(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetaFormaPagoConstantesFunciones.LABEL_NUMEROCUOTA)) {
							existe=true;
							detaformapagoAux.setnumero_cuota(Integer.parseInt(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetaFormaPagoConstantesFunciones.LABEL_DESCRIPCION)) {
							existe=true;
							detaformapagoAux.setdescripcion(this.sValorCampoGeneral);
						}
				}	
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(DetaFormaPago detaformapagoAux:detaformapagos) {
					
						if(sTipoSeleccionar.equals(DetaFormaPagoConstantesFunciones.LABEL_VALOR)) {
							existe=true;
							detaformapagoAux.setvalor(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetaFormaPagoConstantesFunciones.LABEL_FECHAINICIAL)) {
							existe=true;
							detaformapagoAux.setfecha_inicial(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetaFormaPagoConstantesFunciones.LABEL_FECHAFINAL)) {
							existe=true;
							detaformapagoAux.setfecha_final(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetaFormaPagoConstantesFunciones.LABEL_PORCENTAJE)) {
							existe=true;
							detaformapagoAux.setporcentaje(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetaFormaPagoConstantesFunciones.LABEL_RETENCION)) {
							existe=true;
							detaformapagoAux.setretencion(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetaFormaPagoConstantesFunciones.LABEL_PORCENTAJERETENCION)) {
							existe=true;
							detaformapagoAux.setporcentaje_retencion(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetaFormaPagoConstantesFunciones.LABEL_BASERETENCION)) {
							existe=true;
							detaformapagoAux.setbase_retencion(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetaFormaPagoConstantesFunciones.LABEL_VALORRETENCION)) {
							existe=true;
							detaformapagoAux.setvalor_retencion(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetaFormaPagoConstantesFunciones.LABEL_NUMERORETENCION)) {
							existe=true;
							detaformapagoAux.setnumero_retencion(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(DetaFormaPagoConstantesFunciones.LABEL_NUMERODIAS)) {
							existe=true;
							detaformapagoAux.setnumero_dias(Integer.parseInt(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetaFormaPagoConstantesFunciones.LABEL_NUMEROCUOTA)) {
							existe=true;
							detaformapagoAux.setnumero_cuota(Integer.parseInt(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetaFormaPagoConstantesFunciones.LABEL_DESCRIPCION)) {
							existe=true;
							detaformapagoAux.setdescripcion(this.sValorCampoGeneral);
						}
				}
			}
								
			if(existe) {
				this.inicializarActualizarBindingTablaDetaFormaPago(false);
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetaFormaPagoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jComboBoxTiposAccionesDetaFormaPagoActionListener(ActionEvent evt,Boolean esParaAccionDesdeFormulario) throws Exception {    				
		Boolean conSplash=true;
		
		try {							
		
			this.inicializarActualizarBindingDetaFormaPago(false,false);
			
			Reporte reporte=new Reporte();
			
			this.esParaAccionDesdeFormularioDetaFormaPago=esParaAccionDesdeFormulario;
			
			if(!esParaAccionDesdeFormulario) {
				
				reporte=(Reporte)this.jComboBoxTiposAccionesDetaFormaPago.getSelectedItem();
				
			} else {
				reporte=(Reporte)this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxTiposAccionesFormularioDetaFormaPago.getSelectedItem();
			}
			String sTipoAccionLocal=this.sTipoAccion;
			
			if(!esParaAccionDesdeFormulario) {
				sTipoAccionLocal=this.sTipoAccion;
			} else {
				sTipoAccionLocal=this.sTipoAccionFormulario;
			}
			
			if(sTipoAccionLocal.equals("GENERAR REPORTE")) {//reporte.getsCodigo().equals("GENERAR REPORTE")) {
				if(this.isPermisoReporteDetaFormaPago) {				
					conSplash=true;//false;										
					
					//this.startProcessDetaFormaPago(conSplash);
				
					this.generarReporteDetaFormaPagosSeleccionados();
				} else {
					JOptionPane.showMessageDialog(this,"NO TIENE PERMISO PARA GENERAR REPORTES","REPORTE",JOptionPane.ERROR_MESSAGE);					
				}
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesDetaFormaPago.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxTiposAccionesFormularioDetaFormaPago.setSelectedIndex(0);					
				}
			} else if(sTipoAccionLocal.equals("GENERAR REPORTE DINAMICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.mostrarReporteDinamicoDetaFormaPagosSeleccionados();
				//this.jComboBoxTiposAccionesDetaFormaPago.setSelectedIndex(0);					
			}  else if(sTipoAccionLocal.equals("GENERAR_REPORTE_GROUP_GENERICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.generarReporteGroupGenericoDetaFormaPagosSeleccionados(false);
				//this.jComboBoxTiposAccionesDetaFormaPago.setSelectedIndex(0);					
			} else if(sTipoAccionLocal.equals("GENERAR_REPORTE_TOTALES_GROUP_GENERICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.generarReporteGroupGenericoDetaFormaPagosSeleccionados(true);
				//this.jComboBoxTiposAccionesDetaFormaPago.setSelectedIndex(0);					
			} else if(sTipoAccionLocal.equals("EXPORTAR_DATOS")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//this.startProcessDetaFormaPago();
				
				this.exportarDetaFormaPagosSeleccionados();
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesDetaFormaPago.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxTiposAccionesFormularioDetaFormaPago.setSelectedIndex(0);					
				}					
			} else if(sTipoAccionLocal.equals("IMPORTAR_DATOS")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				this.mostrarImportacionDetaFormaPagos();
				//this.importarDetaFormaPagos();
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesDetaFormaPago.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxTiposAccionesFormularioDetaFormaPago.setSelectedIndex(0);					
				}					
			} else if(sTipoAccionLocal.equals("EXPORTAR_DATOS_EXCEL")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//this.startProcessDetaFormaPago();
				//SE EXPORTA SEGUN TIPO ARCHIVO SELECCIONADO
				//this.exportarExcelDetaFormaPagosSeleccionados();
				//this.jComboBoxTiposAccionesDetaFormaPago.setSelectedIndex(0);					
			}  else if(sTipoAccionLocal.equals("RECARGAR_FK")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {								
				if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE RECARGAR REFERENCIAS ?", "MANTENIMIENTO DE Deta Forma Pago", JOptionPane.OK_CANCEL_OPTION) == 0) {
				
				//this.startProcessDetaFormaPago();
				
					if(!esParaAccionDesdeFormulario || (esParaAccionDesdeFormulario && this.isEsNuevoDetaFormaPago)) {
						this.esRecargarFks=true;
						this.cargarCombosForeignKeyDetaFormaPago(false,false,false);
						this.esRecargarFks=false;
						
						JOptionPane.showMessageDialog(this,"PROCESO EJECUTADO CORRECTAMENTE","MANTENIMIENTO DE Deta Forma Pago",JOptionPane.INFORMATION_MESSAGE);
					} else {
						JOptionPane.showMessageDialog(this,"ESTE PROCESO SOLO FUNCIONA AL INGRESAR UN NUEVO ELEMENTO","MANTENIMIENTO",JOptionPane.ERROR_MESSAGE);	
					}
					
					
				}
				
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesDetaFormaPago.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxTiposAccionesFormularioDetaFormaPago.setSelectedIndex(0);					
				}	
			} 			
			else if(DetaFormaPagoBeanSwingJInternalFrame.EsProcesoReporte(reporte.getsCodigo())){
				if(this.isPermisoReporteDetaFormaPago) {				
					if(this.tieneElementosSeleccionados()) {
						this.quitarFilaTotales();
						
						conSplash=false;
						
						//this.startProcessDetaFormaPago(conSplash);
					
						//this.actualizarParametrosGeneralDetaFormaPago();
						
						this.generarReporteProcesoAccionDetaFormaPagosSeleccionados(reporte.getsCodigo());
						
						if(!esParaAccionDesdeFormulario) {
							
							this.jComboBoxTiposAccionesDetaFormaPago.setSelectedIndex(0);					
							
						} else {
							this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxTiposAccionesFormularioDetaFormaPago.setSelectedIndex(0);					
						}
					} else {
						JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO TIENE PERMISO PARA GENERAR REPORTES","REPORTE",JOptionPane.ERROR_MESSAGE);					
				}
			} 
			else if(DetaFormaPagoBeanSwingJInternalFrameAdditional.EsProcesoAccionNormal(reporte.getsCodigo())){
				if(this.tieneElementosSeleccionados()) {
					this.quitarFilaTotales();
					
					if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE PROCESAR "+reporte.getsDescripcion()+" EN PROCESO Deta Forma PagoS SELECCIONADOS?", "MANTENIMIENTO DE Deta Forma Pago", JOptionPane.OK_CANCEL_OPTION) == 0) {
						//this.startProcessDetaFormaPago();
				
						this.actualizarParametrosGeneralDetaFormaPago();
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {						
							this.detaformapagoReturnGeneral=detaformapagoLogic.procesarAccionDetaFormaPagosWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,sTipoAccionLocal,this.detaformapagoLogic.getDetaFormaPagos(),this.detaformapagoParameterGeneral);
						
						} else if(Constantes.ISUSAEJBREMOTE) {
						
						} else if(Constantes.ISUSAEJBHOME) {
						}
						//ARCHITECTURE
						
						this.procesarDetaFormaPagoReturnGeneral();
					
					if(!esParaAccionDesdeFormulario) {
						
						this.jComboBoxTiposAccionesDetaFormaPago.setSelectedIndex(0);					
						
					} else {
						this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxTiposAccionesFormularioDetaFormaPago.setSelectedIndex(0);					
					}
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
				}				
			} 
			else {
				if(this.tieneElementosSeleccionados()) {
					this.quitarFilaTotales();
					
					this.actualizarParametrosGeneralDetaFormaPago();
					
					DetaFormaPagoBeanSwingJInternalFrameAdditional.ProcesarAccion(reporte.getsCodigo(),reporte.getsDescripcion(),this);
					
					this.procesarDetaFormaPagoReturnGeneral();
					
					if(!esParaAccionDesdeFormulario) {
						
						this.jComboBoxTiposAccionesDetaFormaPago.setSelectedIndex(0);					
						
					} else {
						this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxTiposAccionesFormularioDetaFormaPago.setSelectedIndex(0);					
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
				}
			}
		} catch(Exception e) {
			this.esRecargarFks=false;
			
			FuncionesSwing.manageException(this, e,logger,DetaFormaPagoConstantesFunciones.CLASSNAME);
		
		}  finally {
      		//this.finishProcessDetaFormaPago(conSplash);
      	}
	}
	
	public void jComboBoxTiposRelacionesDetaFormaPagoActionListener(ActionEvent evt) throws Exception {    				
		Boolean conSplash=true;
		
		try {			
			this.startProcessDetaFormaPago();
			
			if(this.jInternalFrameDetalleFormDetaFormaPago==null) { //if(!this.conCargarFormDetalle) {			
				this.inicializarFormDetalle();
			}
			
			ArrayList<DetaFormaPago> detaformapagosSeleccionados=new ArrayList<DetaFormaPago>();		
			DetaFormaPago detaformapago=new DetaFormaPago();
			
			int rowIndex=-1;//CON ESTO SE DESHABILITA SELECCION POR INDICE
			
			this.inicializarActualizarBindingDetaFormaPago(false,false);
			
			Reporte reporte=new Reporte();
			
			
			reporte=(Reporte)this.jComboBoxTiposRelacionesDetaFormaPago.getSelectedItem();
			
			
			
			
			detaformapagosSeleccionados=this.getDetaFormaPagosSeleccionados(true);
			//this.sTipoAccion;
			
			if(detaformapagosSeleccionados.size()==1) {
				for(DetaFormaPago detaformapagoAux:detaformapagosSeleccionados) {
					detaformapago=detaformapagoAux;
				}
				
				if(this.sTipoAccion.equals("NONE")) {
				
				}
				
				else if(this.sTipoRelacion.equals("Banco Forma Pago")) {
					jButtonBancoFormaPagoActionPerformed(null,rowIndex,true,false,detaformapago);
				}
			} else {
				JOptionPane.showMessageDialog(this,"SELECCIONE SOLO UN REGISTRO","RELACIONES",JOptionPane.ERROR_MESSAGE);
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetaFormaPagoConstantesFunciones.CLASSNAME);
		
		}  finally {
			this.finishProcessDetaFormaPago();
			
      		//this.finishProcessDetaFormaPago(conSplash);
      	}
	}
			
	public static Boolean EsProcesoReporte(String sTipoProceso) throws Exception {
		Boolean esProcesoAccionRepoorte=false;

		if(sTipoProceso.contains("REPORTE_")) {
			 esProcesoAccionRepoorte=true;
		}

		return esProcesoAccionRepoorte;
	}
	
	public void procesarDetaFormaPagoReturnGeneral() throws Exception {
		if(this.detaformapagoReturnGeneral.getConRetornoEstaProcesado()) {
			JOptionPane.showMessageDialog(this,this.detaformapagoReturnGeneral.getsMensajeProceso(),"PROCESO",JOptionPane.INFORMATION_MESSAGE);
		}
		
		if(this.detaformapagoReturnGeneral.getConMostrarMensaje()) {
			JOptionPane.showMessageDialog(this,this.detaformapagoReturnGeneral.getsMensajeProceso(),"PROCESO",FuncionesSwing.getColorSelectedBackground(this.detaformapagoReturnGeneral.getsTipoMensaje()));
		}
		
		if(this.detaformapagoReturnGeneral.getConRecargarInformacion()) {
			this.procesarBusqueda(this.sAccionBusqueda);
			
			this.inicializarActualizarBindingDetaFormaPago(false);
		}
		
		if(this.detaformapagoReturnGeneral.getConRetornoLista() || this.detaformapagoReturnGeneral.getConRetornoObjeto()) {
			if(this.detaformapagoReturnGeneral.getConRetornoLista()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.detaformapagoLogic.setDetaFormaPagos(this.detaformapagoReturnGeneral.getDetaFormaPagos());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
			
			if(this.detaformapagoReturnGeneral.getConRetornoObjeto()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.detaformapagoLogic.setDetaFormaPago(this.detaformapagoReturnGeneral.getDetaFormaPago());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
			
			this.inicializarActualizarBindingDetaFormaPago(false);
		}
	}
	
	public void actualizarParametrosGeneralDetaFormaPago() throws Exception {
		
		
	}
	
	public ArrayList<DetaFormaPago> getDetaFormaPagosSeleccionados(Boolean conSeleccionarTodosAutomatico) throws Exception {
		ArrayList<DetaFormaPago> detaformapagosSeleccionados=new ArrayList<DetaFormaPago>();
		Boolean existe=false;
		
		if(!this.esParaAccionDesdeFormularioDetaFormaPago) {
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				
				for(DetaFormaPago detaformapagoAux:detaformapagoLogic.getDetaFormaPagos()) {
					if(detaformapagoAux.getIsSelected()) {
						detaformapagosSeleccionados.add(detaformapagoAux);				
					}
				}
				
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(DetaFormaPago detaformapagoAux:this.detaformapagos) {
					if(detaformapagoAux.getIsSelected()) {
						detaformapagosSeleccionados.add(detaformapagoAux);				
					}
				}
			}
			
			if(detaformapagosSeleccionados.size()>0) {
				existe=true;
			}
			
			//SI NO ESTA NINGUNO SELECCIONADO SE SELECCIONA TODOS
			if(!existe) {
				if(conSeleccionarTodosAutomatico) {
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						detaformapagosSeleccionados.addAll(this.detaformapagoLogic.getDetaFormaPagos());
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						detaformapagosSeleccionados.addAll(this.detaformapagos);				
					}
				}
			}
		} else {
			detaformapagosSeleccionados.add(this.detaformapago);
		}
		
		return detaformapagosSeleccionados;
	}
	
	public void actualizarVariablesTipoReporte(Boolean esReporteNormal,Boolean esReporteDinamico,Boolean esReporteAccionProceso,String sPath) {
		if(esReporteNormal) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=false;
			this.sPathReporteDinamico="";
			this.esReporteAccionProceso=false;
			
		} else if(esReporteAccionProceso) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=false;
			this.sPathReporteDinamico="";
			this.esReporteAccionProceso=true;
			
		} else if(esReporteDinamico) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=true;
			this.esReporteAccionProceso=false;
			this.sPathReporteDinamico=sPath.replace(".jrxml",".jasper");			
		}
	}
	
	public void generarReporteDetaFormaPagosSeleccionados() throws Exception {
		Boolean existe=false;
		
		if(this.sTipoReporte.equals("NORMAL") || this.sTipoReporte.equals("FORMULARIO")) {
			existe=true;								
			this.generarReporteNormalDetaFormaPagosSeleccionados();
			
		} else if(this.sTipoReporte.equals("DINAMICO")) {
			existe=true;
			this.mostrarReporteDinamicoDetaFormaPagosSeleccionados();
			
		} else if(this.sTipoReporte.equals("GRUPO_GENERICO")) {
			existe=true;
			this.generarReporteGroupGenericoDetaFormaPagosSeleccionados(false);
			
		} else if(this.sTipoReporte.equals("TOTALES_GRUPO_GENERICO")) {
			existe=true;
			this.generarReporteGroupGenericoDetaFormaPagosSeleccionados(true);
		}
		else if(this.sTipoReporte.equals("RELACIONES")) {
			//SI SE GENERA REPORTE RELACIONES
			existe=true;
			this.generarReporteRelacionesDetaFormaPagosSeleccionados();
		}					
		
		if(!existe) {
			JOptionPane.showMessageDialog(this,"SELECCIONE UN TIPO DE REPORTE VALIDO","REPORTE DE Deta Forma Pago",JOptionPane.ERROR_MESSAGE);
		}
	}
	
	public void generarReporteRelacionesDetaFormaPagosSeleccionados() throws Exception {
		ArrayList<DetaFormaPago> detaformapagosSeleccionados=new ArrayList<DetaFormaPago>();		
		
		detaformapagosSeleccionados=this.getDetaFormaPagosSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
					
		//this.sTipoReporteExtra="MasterRelaciones";
		
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		
		this.generarReporteDetaFormaPagos("Todos",detaformapagosSeleccionados);
		
	}	
	
	public void generarReporteNormalDetaFormaPagosSeleccionados() throws Exception {
		ArrayList<DetaFormaPago> detaformapagosSeleccionados=new ArrayList<DetaFormaPago>();		
		
		detaformapagosSeleccionados=this.getDetaFormaPagosSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
								
		if(this.sTipoReporte.equals("FORMULARIO")) {
			this.sTipoReporteExtra="Vertical";					
		}
		
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		this.generarReporteDetaFormaPagos("Todos",detaformapagosSeleccionados);
	}		
	
	public void generarReporteProcesoAccionDetaFormaPagosSeleccionados(String sProcesoReporte) throws Exception {
		ArrayList<DetaFormaPago> detaformapagosSeleccionados=new ArrayList<DetaFormaPago>();
		
		detaformapagosSeleccionados=this.getDetaFormaPagosSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(false,false,true,"");
		
		/*
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		this.sTipoReporteExtra=sProcesoReporte.toLowerCase();
		
		this.esReporteAccionProceso=true;
		this.generarReporteDetaFormaPagos("Todos",detaformapagosSeleccionados);
		this.esReporteAccionProceso=false;
	}
	
	
	public void mostrarReporteDinamicoDetaFormaPagosSeleccionados() throws Exception {
		ArrayList<DetaFormaPago> detaformapagosSeleccionados=new ArrayList<DetaFormaPago>();		
		
		
		this.abrirInicializarFrameReporteDinamicoDetaFormaPago();
		
		
		detaformapagosSeleccionados=this.getDetaFormaPagosSeleccionados(true);
		
		this.sTipoReporteExtra="";
		//this.actualizarVariablesTipoReporte(true,false,false,"");
		
		
		this.abrirFrameReporteDinamicoDetaFormaPago();
		
		
		//this.generarReporteDetaFormaPagos("Todos",detaformapagosSeleccionados ,detaformapagoImplementable,detaformapagoImplementableHome);
	}
	
	public void mostrarImportacionDetaFormaPagos() throws Exception {
		//this.sTipoReporteExtra="";
		//this.actualizarVariablesTipoReporte(true,false,false,"");
		
		
		this.abrirInicializarFrameImportacionDetaFormaPago();
		
		this.abrirFrameImportacionDetaFormaPago();		
		
			
		//this.generarReporteDetaFormaPagos("Todos",detaformapagosSeleccionados ,detaformapagoImplementable,detaformapagoImplementableHome);
	}
	
	public void importarDetaFormaPagos() throws Exception {		
	
	}
	
	public void exportarDetaFormaPagosSeleccionados() throws Exception {
		Boolean existe=false;
		
		if(this.sTipoArchivoReporte.equals("EXCEL")) {
			existe=true;
			this.exportarExcelDetaFormaPagosSeleccionados();
			
		} else if(this.sTipoArchivoReporte.equals("TEXTO")) {
			existe=true;
			this.exportarTextoDetaFormaPagosSeleccionados();
		
		} else if(this.sTipoArchivoReporte.equals("XML")) {
			existe=true;
			this.exportarXmlDetaFormaPagosSeleccionados();
		} 
		
		if(!existe) {
			JOptionPane.showMessageDialog(this,"SELECCIONE UN TIPO DE ARCHIVO VALIDO","EXPORTACION DE Deta Forma Pago",JOptionPane.ERROR_MESSAGE);
		}
	}
	
	public void exportarTextoDetaFormaPagosSeleccionados() throws Exception {
		ArrayList<DetaFormaPago> detaformapagosSeleccionados=new ArrayList<DetaFormaPago>();		
		
		detaformapagosSeleccionados=this.getDetaFormaPagosSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"detaformapago."+"txt";//Funciones2.getTipoExtensionArchivoExportar(this.parametroGeneralUsuario);
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		BufferedWriter bufferedWriter = null;
		FileWriter fileWriter=null;
		
		fileWriter=new FileWriter(sPath);
		
		bufferedWriter = new BufferedWriter(fileWriter);
		
		try {
			if(conCabecera) {
				sFilaCabecera=this.getFilaCabeceraExportarDetaFormaPago(sDelimiter);
				
				bufferedWriter.write(sFilaCabecera);
			}				
			
			for(DetaFormaPago detaformapagoAux:detaformapagosSeleccionados) {
				sFilaDatos=this.getFilaDatosExportarDetaFormaPago(detaformapagoAux,sDelimiter);
				
				bufferedWriter.write(sFilaDatos);
				
				//detaformapagoAux.setsDetalleGeneralEntityReporte(detaformapagoAux.toString());			
			}
			
			bufferedWriter.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.detaformapagoSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Deta Forma Pago",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {
       		if (bufferedWriter != null) {
				bufferedWriter.close();
			}
		}
	}
	
	public String getFilaCabeceraExportarDetaFormaPago(String sDelimiter) {
		String sFilaCabecera="";
		
		
		sFilaCabecera+=DetaFormaPagoConstantesFunciones.LABEL_ID;

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
			sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetaFormaPagoConstantesFunciones.LABEL_VERSIONROW;
		}

		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetaFormaPagoConstantesFunciones.LABEL_IDEMPRESA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetaFormaPagoConstantesFunciones.LABEL_IDSUCURSAL;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetaFormaPagoConstantesFunciones.LABEL_IDEJERCICIO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetaFormaPagoConstantesFunciones.LABEL_IDPERIODO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetaFormaPagoConstantesFunciones.LABEL_IDFACTURA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetaFormaPagoConstantesFunciones.LABEL_IDTIPOFORMAPAGO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetaFormaPagoConstantesFunciones.LABEL_IDTIPODETAFORMAPAGO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetaFormaPagoConstantesFunciones.LABEL_IDDETAFORMAPAGOFACTU;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetaFormaPagoConstantesFunciones.LABEL_IDCUENTACONTABLE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetaFormaPagoConstantesFunciones.LABEL_IDTIPORETENCION;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetaFormaPagoConstantesFunciones.LABEL_VALOR;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetaFormaPagoConstantesFunciones.LABEL_FECHAINICIAL;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetaFormaPagoConstantesFunciones.LABEL_FECHAFINAL;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetaFormaPagoConstantesFunciones.LABEL_PORCENTAJE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetaFormaPagoConstantesFunciones.LABEL_RETENCION;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetaFormaPagoConstantesFunciones.LABEL_PORCENTAJERETENCION;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetaFormaPagoConstantesFunciones.LABEL_BASERETENCION;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetaFormaPagoConstantesFunciones.LABEL_VALORRETENCION;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetaFormaPagoConstantesFunciones.LABEL_NUMERORETENCION;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetaFormaPagoConstantesFunciones.LABEL_NUMERODIAS;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetaFormaPagoConstantesFunciones.LABEL_NUMEROCUOTA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetaFormaPagoConstantesFunciones.LABEL_DESCRIPCION;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetaFormaPagoConstantesFunciones.LABEL_IDANIO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetaFormaPagoConstantesFunciones.LABEL_IDMES;
		
		return sFilaCabecera;
	}
	
	public String getFilaDatosExportarDetaFormaPago(DetaFormaPago detaformapago,String sDelimiter) {
		String sFilaDatos="";
		
		sFilaDatos+="\r\n";
		
		
		sFilaDatos+=detaformapago.getId().toString();

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
			sFilaDatos+=sDelimiter;
		sFilaDatos+=detaformapago.getVersionRow().toString();
		}

		sFilaDatos+=sDelimiter;
		sFilaDatos+=detaformapago.getempresa_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detaformapago.getsucursal_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detaformapago.getejercicio_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detaformapago.getperiodo_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detaformapago.getfactura_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detaformapago.gettipoformapago_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detaformapago.gettipodetaformapago_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detaformapago.getdetaformapagofactu_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detaformapago.getcuentacontable_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detaformapago.gettiporetencion_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detaformapago.getvalor().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detaformapago.getfecha_inicial().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detaformapago.getfecha_final().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detaformapago.getporcentaje().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detaformapago.getretencion().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detaformapago.getporcentaje_retencion().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detaformapago.getbase_retencion().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detaformapago.getvalor_retencion().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detaformapago.getnumero_retencion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detaformapago.getnumero_dias().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detaformapago.getnumero_cuota().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detaformapago.getdescripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detaformapago.getanio_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detaformapago.getmes_descripcion();
		
		return sFilaDatos;
	}
	
	//@SuppressWarnings("deprecation")
	public void exportarExcelDetaFormaPagosSeleccionados() throws Exception {
		ArrayList<DetaFormaPago> detaformapagosSeleccionados=new ArrayList<DetaFormaPago>();		
		
		detaformapagosSeleccionados=this.getDetaFormaPagosSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"detaformapago.xls";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		FileOutputStream fileOutputStream=null;
		
		try {
			HSSFWorkbook workbook = new HSSFWorkbook();
			HSSFSheet sheet = workbook.createSheet("DetaFormaPagos");
						
		    			
			Integer iRow=0;
			Integer iCell=0;
			
			HSSFRow row = sheet.createRow(iRow);
			HSSFCell cell = row.createCell(iCell);
			//cell.setCellValue("Blahblah");

			if(conCabecera) {
				this.getFilaCabeceraExportarExcelDetaFormaPago(row);				
				iRow++;
			}				
			
			for(DetaFormaPago detaformapagoAux:detaformapagosSeleccionados) {
				row = sheet.createRow(iRow);
				
				this.getFilaDatosExportarExcelDetaFormaPago(detaformapagoAux,row);
				
				iRow++;
			}
			
			
			fileOutputStream = new FileOutputStream(new File(sPath));
		    
			workbook.write(fileOutputStream);
			
			//fileOutputStream.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.detaformapagoSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Deta Forma Pago",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			
       		if (fileOutputStream != null) {
				fileOutputStream.close();
			}			
		}
	}		
	
	public void exportarXmlDetaFormaPagosSeleccionados() throws Exception {
		ArrayList<DetaFormaPago> detaformapagosSeleccionados=new ArrayList<DetaFormaPago>();		
		
		detaformapagosSeleccionados=this.getDetaFormaPagosSeleccionados(true);
		
		//String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		//Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		//String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"detaformapago.xml";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		DocumentBuilderFactory documentBuilderFactory=null;
		DocumentBuilder documentBuilder =null;
		
		try {
			documentBuilderFactory = DocumentBuilderFactory.newInstance();
			documentBuilder = documentBuilderFactory.newDocumentBuilder();
	
			Document document = documentBuilder.newDocument();
			Element elementRoot = document.createElement("detaformapagos");
			
			document.appendChild(elementRoot);
		    			
												
			Element element = null;//document.createElement("detaformapago");
			//elementRoot.appendChild(element);
		
			for(DetaFormaPago detaformapagoAux:detaformapagosSeleccionados) {
				element = document.createElement("detaformapago");
				elementRoot.appendChild(element);
			
				this.setFilaDatosExportarXmlDetaFormaPago(detaformapagoAux,document,element);
			}
			
			TransformerFactory transformerFactory = TransformerFactory.newInstance();
			Transformer transformer = transformerFactory.newTransformer();
			DOMSource domSource = new DOMSource(document);
			
			StreamResult streamResult = new StreamResult(new File(sPath));
	
			transformer.transform(domSource, streamResult);
						
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.detaformapagoSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Deta Forma Pago",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			       				
		}
	}	
	
	//@SuppressWarnings("deprecation")
	public void getFilaCabeceraExportarExcelDetaFormaPago(HSSFRow row) {
		Integer iColumn=0;
		
		
		HSSFCell cell =null;
		cell = row.createCell(iColumn++);cell.setCellValue(DetaFormaPagoConstantesFunciones.LABEL_ID);

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
		cell = row.createCell(iColumn++);cell.setCellValue(DetaFormaPagoConstantesFunciones.LABEL_VERSIONROW);
		}

		cell = row.createCell(iColumn++);cell.setCellValue(DetaFormaPagoConstantesFunciones.LABEL_IDEMPRESA);
		cell = row.createCell(iColumn++);cell.setCellValue(DetaFormaPagoConstantesFunciones.LABEL_IDSUCURSAL);
		cell = row.createCell(iColumn++);cell.setCellValue(DetaFormaPagoConstantesFunciones.LABEL_IDEJERCICIO);
		cell = row.createCell(iColumn++);cell.setCellValue(DetaFormaPagoConstantesFunciones.LABEL_IDPERIODO);
		cell = row.createCell(iColumn++);cell.setCellValue(DetaFormaPagoConstantesFunciones.LABEL_IDFACTURA);
		cell = row.createCell(iColumn++);cell.setCellValue(DetaFormaPagoConstantesFunciones.LABEL_IDTIPOFORMAPAGO);
		cell = row.createCell(iColumn++);cell.setCellValue(DetaFormaPagoConstantesFunciones.LABEL_IDTIPODETAFORMAPAGO);
		cell = row.createCell(iColumn++);cell.setCellValue(DetaFormaPagoConstantesFunciones.LABEL_IDDETAFORMAPAGOFACTU);
		cell = row.createCell(iColumn++);cell.setCellValue(DetaFormaPagoConstantesFunciones.LABEL_IDCUENTACONTABLE);
		cell = row.createCell(iColumn++);cell.setCellValue(DetaFormaPagoConstantesFunciones.LABEL_IDTIPORETENCION);
		cell = row.createCell(iColumn++);cell.setCellValue(DetaFormaPagoConstantesFunciones.LABEL_VALOR);
		cell = row.createCell(iColumn++);cell.setCellValue(DetaFormaPagoConstantesFunciones.LABEL_FECHAINICIAL);
		cell = row.createCell(iColumn++);cell.setCellValue(DetaFormaPagoConstantesFunciones.LABEL_FECHAFINAL);
		cell = row.createCell(iColumn++);cell.setCellValue(DetaFormaPagoConstantesFunciones.LABEL_PORCENTAJE);
		cell = row.createCell(iColumn++);cell.setCellValue(DetaFormaPagoConstantesFunciones.LABEL_RETENCION);
		cell = row.createCell(iColumn++);cell.setCellValue(DetaFormaPagoConstantesFunciones.LABEL_PORCENTAJERETENCION);
		cell = row.createCell(iColumn++);cell.setCellValue(DetaFormaPagoConstantesFunciones.LABEL_BASERETENCION);
		cell = row.createCell(iColumn++);cell.setCellValue(DetaFormaPagoConstantesFunciones.LABEL_VALORRETENCION);
		cell = row.createCell(iColumn++);cell.setCellValue(DetaFormaPagoConstantesFunciones.LABEL_NUMERORETENCION);
		cell = row.createCell(iColumn++);cell.setCellValue(DetaFormaPagoConstantesFunciones.LABEL_NUMERODIAS);
		cell = row.createCell(iColumn++);cell.setCellValue(DetaFormaPagoConstantesFunciones.LABEL_NUMEROCUOTA);
		cell = row.createCell(iColumn++);cell.setCellValue(DetaFormaPagoConstantesFunciones.LABEL_DESCRIPCION);
		cell = row.createCell(iColumn++);cell.setCellValue(DetaFormaPagoConstantesFunciones.LABEL_IDANIO);
		cell = row.createCell(iColumn++);cell.setCellValue(DetaFormaPagoConstantesFunciones.LABEL_IDMES);
	}
	
	//@SuppressWarnings("deprecation")
	public void getFilaDatosExportarExcelDetaFormaPago(DetaFormaPago detaformapago,HSSFRow row) {
		Integer iColumn=0;
		
		
		HSSFCell cell =null;
		cell = row.createCell(iColumn++);cell.setCellValue(detaformapago.getId());
		cell = row.createCell(iColumn++);cell.setCellValue(detaformapago.getempresa_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(detaformapago.getsucursal_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(detaformapago.getejercicio_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(detaformapago.getperiodo_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(detaformapago.getfactura_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(detaformapago.gettipoformapago_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(detaformapago.gettipodetaformapago_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(detaformapago.getdetaformapagofactu_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(detaformapago.getcuentacontable_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(detaformapago.gettiporetencion_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(detaformapago.getvalor());
		cell = row.createCell(iColumn++);cell.setCellValue(detaformapago.getfecha_inicial());
		cell = row.createCell(iColumn++);cell.setCellValue(detaformapago.getfecha_final());
		cell = row.createCell(iColumn++);cell.setCellValue(detaformapago.getporcentaje());
		cell = row.createCell(iColumn++);cell.setCellValue(detaformapago.getretencion());
		cell = row.createCell(iColumn++);cell.setCellValue(detaformapago.getporcentaje_retencion());
		cell = row.createCell(iColumn++);cell.setCellValue(detaformapago.getbase_retencion());
		cell = row.createCell(iColumn++);cell.setCellValue(detaformapago.getvalor_retencion());
		cell = row.createCell(iColumn++);cell.setCellValue(detaformapago.getnumero_retencion());
		cell = row.createCell(iColumn++);cell.setCellValue(detaformapago.getnumero_dias());
		cell = row.createCell(iColumn++);cell.setCellValue(detaformapago.getnumero_cuota());
		cell = row.createCell(iColumn++);cell.setCellValue(detaformapago.getdescripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(detaformapago.getanio_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(detaformapago.getmes_descripcion());				
	}
	
	public void setFilaDatosExportarXmlDetaFormaPago(DetaFormaPago detaformapago,Document document,Element element) {
		/*
		Element lastname = document.createElement("lastname");
		lastname.appendChild(document.createTextNode("mook kim"));
		element.appendChild(lastname);
		*/
		

		Element elementId = document.createElement(DetaFormaPagoConstantesFunciones.ID);
		elementId.appendChild(document.createTextNode(detaformapago.getId().toString().trim()));
		element.appendChild(elementId);

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){

		Element elementVersionRow = document.createElement(DetaFormaPagoConstantesFunciones.VERSIONROW);
		elementVersionRow.appendChild(document.createTextNode(detaformapago.getVersionRow().toString().trim()));
		element.appendChild(elementVersionRow);
		}


		Element elementempresa_descripcion = document.createElement(DetaFormaPagoConstantesFunciones.IDEMPRESA);
		elementempresa_descripcion.appendChild(document.createTextNode(detaformapago.getempresa_descripcion()));
		element.appendChild(elementempresa_descripcion);

		Element elementsucursal_descripcion = document.createElement(DetaFormaPagoConstantesFunciones.IDSUCURSAL);
		elementsucursal_descripcion.appendChild(document.createTextNode(detaformapago.getsucursal_descripcion()));
		element.appendChild(elementsucursal_descripcion);

		Element elementejercicio_descripcion = document.createElement(DetaFormaPagoConstantesFunciones.IDEJERCICIO);
		elementejercicio_descripcion.appendChild(document.createTextNode(detaformapago.getejercicio_descripcion()));
		element.appendChild(elementejercicio_descripcion);

		Element elementperiodo_descripcion = document.createElement(DetaFormaPagoConstantesFunciones.IDPERIODO);
		elementperiodo_descripcion.appendChild(document.createTextNode(detaformapago.getperiodo_descripcion()));
		element.appendChild(elementperiodo_descripcion);

		Element elementfactura_descripcion = document.createElement(DetaFormaPagoConstantesFunciones.IDFACTURA);
		elementfactura_descripcion.appendChild(document.createTextNode(detaformapago.getfactura_descripcion()));
		element.appendChild(elementfactura_descripcion);

		Element elementtipoformapago_descripcion = document.createElement(DetaFormaPagoConstantesFunciones.IDTIPOFORMAPAGO);
		elementtipoformapago_descripcion.appendChild(document.createTextNode(detaformapago.gettipoformapago_descripcion()));
		element.appendChild(elementtipoformapago_descripcion);

		Element elementtipodetaformapago_descripcion = document.createElement(DetaFormaPagoConstantesFunciones.IDTIPODETAFORMAPAGO);
		elementtipodetaformapago_descripcion.appendChild(document.createTextNode(detaformapago.gettipodetaformapago_descripcion()));
		element.appendChild(elementtipodetaformapago_descripcion);

		Element elementdetaformapagofactu_descripcion = document.createElement(DetaFormaPagoConstantesFunciones.IDDETAFORMAPAGOFACTU);
		elementdetaformapagofactu_descripcion.appendChild(document.createTextNode(detaformapago.getdetaformapagofactu_descripcion()));
		element.appendChild(elementdetaformapagofactu_descripcion);

		Element elementcuentacontable_descripcion = document.createElement(DetaFormaPagoConstantesFunciones.IDCUENTACONTABLE);
		elementcuentacontable_descripcion.appendChild(document.createTextNode(detaformapago.getcuentacontable_descripcion()));
		element.appendChild(elementcuentacontable_descripcion);

		Element elementtiporetencion_descripcion = document.createElement(DetaFormaPagoConstantesFunciones.IDTIPORETENCION);
		elementtiporetencion_descripcion.appendChild(document.createTextNode(detaformapago.gettiporetencion_descripcion()));
		element.appendChild(elementtiporetencion_descripcion);

		Element elementvalor = document.createElement(DetaFormaPagoConstantesFunciones.VALOR);
		elementvalor.appendChild(document.createTextNode(detaformapago.getvalor().toString().trim()));
		element.appendChild(elementvalor);

		Element elementfecha_inicial = document.createElement(DetaFormaPagoConstantesFunciones.FECHAINICIAL);
		elementfecha_inicial.appendChild(document.createTextNode(detaformapago.getfecha_inicial().toString().trim()));
		element.appendChild(elementfecha_inicial);

		Element elementfecha_final = document.createElement(DetaFormaPagoConstantesFunciones.FECHAFINAL);
		elementfecha_final.appendChild(document.createTextNode(detaformapago.getfecha_final().toString().trim()));
		element.appendChild(elementfecha_final);

		Element elementporcentaje = document.createElement(DetaFormaPagoConstantesFunciones.PORCENTAJE);
		elementporcentaje.appendChild(document.createTextNode(detaformapago.getporcentaje().toString().trim()));
		element.appendChild(elementporcentaje);

		Element elementretencion = document.createElement(DetaFormaPagoConstantesFunciones.RETENCION);
		elementretencion.appendChild(document.createTextNode(detaformapago.getretencion().toString().trim()));
		element.appendChild(elementretencion);

		Element elementporcentaje_retencion = document.createElement(DetaFormaPagoConstantesFunciones.PORCENTAJERETENCION);
		elementporcentaje_retencion.appendChild(document.createTextNode(detaformapago.getporcentaje_retencion().toString().trim()));
		element.appendChild(elementporcentaje_retencion);

		Element elementbase_retencion = document.createElement(DetaFormaPagoConstantesFunciones.BASERETENCION);
		elementbase_retencion.appendChild(document.createTextNode(detaformapago.getbase_retencion().toString().trim()));
		element.appendChild(elementbase_retencion);

		Element elementvalor_retencion = document.createElement(DetaFormaPagoConstantesFunciones.VALORRETENCION);
		elementvalor_retencion.appendChild(document.createTextNode(detaformapago.getvalor_retencion().toString().trim()));
		element.appendChild(elementvalor_retencion);

		Element elementnumero_retencion = document.createElement(DetaFormaPagoConstantesFunciones.NUMERORETENCION);
		elementnumero_retencion.appendChild(document.createTextNode(detaformapago.getnumero_retencion().trim()));
		element.appendChild(elementnumero_retencion);

		Element elementnumero_dias = document.createElement(DetaFormaPagoConstantesFunciones.NUMERODIAS);
		elementnumero_dias.appendChild(document.createTextNode(detaformapago.getnumero_dias().toString().trim()));
		element.appendChild(elementnumero_dias);

		Element elementnumero_cuota = document.createElement(DetaFormaPagoConstantesFunciones.NUMEROCUOTA);
		elementnumero_cuota.appendChild(document.createTextNode(detaformapago.getnumero_cuota().toString().trim()));
		element.appendChild(elementnumero_cuota);

		Element elementdescripcion = document.createElement(DetaFormaPagoConstantesFunciones.DESCRIPCION);
		elementdescripcion.appendChild(document.createTextNode(detaformapago.getdescripcion().trim()));
		element.appendChild(elementdescripcion);

		Element elementanio_descripcion = document.createElement(DetaFormaPagoConstantesFunciones.IDANIO);
		elementanio_descripcion.appendChild(document.createTextNode(detaformapago.getanio_descripcion()));
		element.appendChild(elementanio_descripcion);

		Element elementmes_descripcion = document.createElement(DetaFormaPagoConstantesFunciones.IDMES);
		elementmes_descripcion.appendChild(document.createTextNode(detaformapago.getmes_descripcion()));
		element.appendChild(elementmes_descripcion);
	}
	
	public void generarReporteGroupGenericoDetaFormaPagosSeleccionados(Boolean soloTotales) throws Exception {
		ArrayList<DetaFormaPago> detaformapagosSeleccionados=new ArrayList<DetaFormaPago>();
		
		detaformapagosSeleccionados=this.getDetaFormaPagosSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
		
		/*
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		if(!soloTotales) {
			this.sTipoReporteExtra=Constantes2.S_REPORTE_EXTRA_GROUP_GENERICO;
		} else {
			this.sTipoReporteExtra=Constantes2.S_REPORTE_EXTRA_GROUP_TOTALES_GENERICO;
		}
		
		this.setColumnaDescripcionReporteGroupGenericoDetaFormaPago(detaformapagosSeleccionados);
		
		this.generarReporteDetaFormaPagos("Todos",detaformapagosSeleccionados);
	}
	
	public void setColumnaDescripcionReporteGroupGenericoDetaFormaPago(ArrayList<DetaFormaPago> detaformapagosSeleccionados) throws Exception {    		
		try {
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			
			Boolean existe=false;
			
			for(DetaFormaPago detaformapagoAux:detaformapagosSeleccionados) {
				detaformapagoAux.setsDetalleGeneralEntityReporte(detaformapagoAux.toString());
			
				if(sTipoSeleccionar.equals(DetaFormaPagoConstantesFunciones.LABEL_IDEMPRESA)) {
					existe=true;
					detaformapagoAux.setsDescripcionGeneralEntityReporte1(detaformapagoAux.getempresa_descripcion());
				}
				 else if(sTipoSeleccionar.equals(DetaFormaPagoConstantesFunciones.LABEL_IDSUCURSAL)) {
					existe=true;
					detaformapagoAux.setsDescripcionGeneralEntityReporte1(detaformapagoAux.getsucursal_descripcion());
				}
				 else if(sTipoSeleccionar.equals(DetaFormaPagoConstantesFunciones.LABEL_IDEJERCICIO)) {
					existe=true;
					detaformapagoAux.setsDescripcionGeneralEntityReporte1(detaformapagoAux.getejercicio_descripcion());
				}
				 else if(sTipoSeleccionar.equals(DetaFormaPagoConstantesFunciones.LABEL_IDPERIODO)) {
					existe=true;
					detaformapagoAux.setsDescripcionGeneralEntityReporte1(detaformapagoAux.getperiodo_descripcion());
				}
				 else if(sTipoSeleccionar.equals(DetaFormaPagoConstantesFunciones.LABEL_IDFACTURA)) {
					existe=true;
					detaformapagoAux.setsDescripcionGeneralEntityReporte1(detaformapagoAux.getfactura_descripcion());
				}
				 else if(sTipoSeleccionar.equals(DetaFormaPagoConstantesFunciones.LABEL_IDTIPOFORMAPAGO)) {
					existe=true;
					detaformapagoAux.setsDescripcionGeneralEntityReporte1(detaformapagoAux.gettipoformapago_descripcion());
				}
				 else if(sTipoSeleccionar.equals(DetaFormaPagoConstantesFunciones.LABEL_IDTIPODETAFORMAPAGO)) {
					existe=true;
					detaformapagoAux.setsDescripcionGeneralEntityReporte1(detaformapagoAux.gettipodetaformapago_descripcion());
				}
				 else if(sTipoSeleccionar.equals(DetaFormaPagoConstantesFunciones.LABEL_IDDETAFORMAPAGOFACTU)) {
					existe=true;
					detaformapagoAux.setsDescripcionGeneralEntityReporte1(detaformapagoAux.getdetaformapagofactu_descripcion());
				}
				 else if(sTipoSeleccionar.equals(DetaFormaPagoConstantesFunciones.LABEL_IDCUENTACONTABLE)) {
					existe=true;
					detaformapagoAux.setsDescripcionGeneralEntityReporte1(detaformapagoAux.getcuentacontable_descripcion());
				}
				 else if(sTipoSeleccionar.equals(DetaFormaPagoConstantesFunciones.LABEL_IDTIPORETENCION)) {
					existe=true;
					detaformapagoAux.setsDescripcionGeneralEntityReporte1(detaformapagoAux.gettiporetencion_descripcion());
				}
				 else if(sTipoSeleccionar.equals(DetaFormaPagoConstantesFunciones.LABEL_FECHAINICIAL)) {
					existe=true;
					detaformapagoAux.setsDescripcionGeneralEntityReporte1(Funciones2.getStringPostgresDate(detaformapagoAux.getfecha_inicial()));
				}
				 else if(sTipoSeleccionar.equals(DetaFormaPagoConstantesFunciones.LABEL_FECHAFINAL)) {
					existe=true;
					detaformapagoAux.setsDescripcionGeneralEntityReporte1(Funciones2.getStringPostgresDate(detaformapagoAux.getfecha_final()));
				}
				 else if(sTipoSeleccionar.equals(DetaFormaPagoConstantesFunciones.LABEL_NUMERORETENCION)) {
					existe=true;
					detaformapagoAux.setsDescripcionGeneralEntityReporte1(detaformapagoAux.getnumero_retencion());
				}
				 else if(sTipoSeleccionar.equals(DetaFormaPagoConstantesFunciones.LABEL_NUMERODIAS)) {
					existe=true;
					detaformapagoAux.setsDescripcionGeneralEntityReporte1(detaformapagoAux.getnumero_dias().toString());
				}
				 else if(sTipoSeleccionar.equals(DetaFormaPagoConstantesFunciones.LABEL_NUMEROCUOTA)) {
					existe=true;
					detaformapagoAux.setsDescripcionGeneralEntityReporte1(detaformapagoAux.getnumero_cuota().toString());
				}
				 else if(sTipoSeleccionar.equals(DetaFormaPagoConstantesFunciones.LABEL_DESCRIPCION)) {
					existe=true;
					detaformapagoAux.setsDescripcionGeneralEntityReporte1(detaformapagoAux.getdescripcion());
				}
				 else if(sTipoSeleccionar.equals(DetaFormaPagoConstantesFunciones.LABEL_IDANIO)) {
					existe=true;
					detaformapagoAux.setsDescripcionGeneralEntityReporte1(detaformapagoAux.getanio_descripcion());
				}
				 else if(sTipoSeleccionar.equals(DetaFormaPagoConstantesFunciones.LABEL_IDMES)) {
					existe=true;
					detaformapagoAux.setsDescripcionGeneralEntityReporte1(detaformapagoAux.getmes_descripcion());
				}
			}	
											
			if(!existe) {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}										
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetaFormaPagoConstantesFunciones.CLASSNAME);
		}
	}
	
	
	public void actualizarEstadoCeldasBotonesDetaFormaPago(String sAccion,Boolean isGuardarCambiosEnLote,Boolean isEsMantenimientoRelacionado) throws Exception {
		if(sAccion=="n") {
			if(!this.esParaBusquedaForeignKey) {
				this.isVisibilidadCeldaNuevoDetaFormaPago=true;
				this.isVisibilidadCeldaNuevoRelacionesDetaFormaPago=true;
				this.isVisibilidadCeldaGuardarCambiosDetaFormaPago=true;
			}
			
			this.isVisibilidadCeldaModificarDetaFormaPago=false;
			this.isVisibilidadCeldaActualizarDetaFormaPago=false;
			this.isVisibilidadCeldaEliminarDetaFormaPago=false;
			this.isVisibilidadCeldaCancelarDetaFormaPago=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarDetaFormaPago=true;
				} else {
					this.isVisibilidadCeldaGuardarDetaFormaPago=false;
				}
			}
		} else if(sAccion=="a") {
			this.isVisibilidadCeldaNuevoDetaFormaPago=false;
			this.isVisibilidadCeldaNuevoRelacionesDetaFormaPago=false;
			this.isVisibilidadCeldaGuardarCambiosDetaFormaPago=false;
			this.isVisibilidadCeldaModificarDetaFormaPago=false;
			this.isVisibilidadCeldaActualizarDetaFormaPago=true;
			this.isVisibilidadCeldaEliminarDetaFormaPago=false;
			this.isVisibilidadCeldaCancelarDetaFormaPago=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarDetaFormaPago=true;
				} else {
					this.isVisibilidadCeldaGuardarDetaFormaPago=false;
				}
			}
		} else if(sAccion=="ae") {
			this.isVisibilidadCeldaNuevoDetaFormaPago=false;
			this.isVisibilidadCeldaNuevoRelacionesDetaFormaPago=false;
			this.isVisibilidadCeldaGuardarCambiosDetaFormaPago=false;
			this.isVisibilidadCeldaModificarDetaFormaPago=false;
			this.isVisibilidadCeldaActualizarDetaFormaPago=true;
			this.isVisibilidadCeldaEliminarDetaFormaPago=true;
			this.isVisibilidadCeldaCancelarDetaFormaPago=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarDetaFormaPago=true;
				} else {
					this.isVisibilidadCeldaGuardarDetaFormaPago=false;
				}
			}
		}
		//Para Mantenimientos de tablas relacionados con mas de columnas minimas
		else if(sAccion=="ae2") {
			this.isVisibilidadCeldaNuevoDetaFormaPago=false;
			this.isVisibilidadCeldaNuevoRelacionesDetaFormaPago=false;
			this.isVisibilidadCeldaGuardarCambiosDetaFormaPago=false;
			this.isVisibilidadCeldaModificarDetaFormaPago=false;
			this.isVisibilidadCeldaActualizarDetaFormaPago=true;
			this.isVisibilidadCeldaEliminarDetaFormaPago=false;
			this.isVisibilidadCeldaCancelarDetaFormaPago=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarDetaFormaPago=false;
				} else {
					this.isVisibilidadCeldaGuardarDetaFormaPago=false;
				}
			}
		} else if(sAccion=="c") {
			this.isVisibilidadCeldaNuevoDetaFormaPago=true;
			this.isVisibilidadCeldaNuevoRelacionesDetaFormaPago=true;
			this.isVisibilidadCeldaGuardarCambiosDetaFormaPago=true;
			this.isVisibilidadCeldaModificarDetaFormaPago=false;
			this.isVisibilidadCeldaActualizarDetaFormaPago=false;
			this.isVisibilidadCeldaEliminarDetaFormaPago=false;
			this.isVisibilidadCeldaCancelarDetaFormaPago=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarDetaFormaPago=true;
				} else {
					this.isVisibilidadCeldaGuardarDetaFormaPago=false;
				}
			}
		} else if(sAccion=="t") {
			this.isVisibilidadCeldaNuevoDetaFormaPago=false;
			this.isVisibilidadCeldaNuevoRelacionesDetaFormaPago=false;
			this.isVisibilidadCeldaGuardarCambiosDetaFormaPago=false;
			this.isVisibilidadCeldaActualizarDetaFormaPago=false;
			this.isVisibilidadCeldaEliminarDetaFormaPago=false;
			this.isVisibilidadCeldaCancelarDetaFormaPago=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarDetaFormaPago=false;
				} else {
					this.isVisibilidadCeldaGuardarDetaFormaPago=false;
				}
			}
		}  else if(sAccion=="s"||sAccion=="s2") {
			this.isVisibilidadCeldaNuevoDetaFormaPago=false;
			this.isVisibilidadCeldaNuevoRelacionesDetaFormaPago=false;
			this.isVisibilidadCeldaGuardarCambiosDetaFormaPago=false;
			this.isVisibilidadCeldaModificarDetaFormaPago=true;
			this.isVisibilidadCeldaActualizarDetaFormaPago=false;
			this.isVisibilidadCeldaEliminarDetaFormaPago=false;
			this.isVisibilidadCeldaCancelarDetaFormaPago=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarDetaFormaPago=false;
				} else {
					this.isVisibilidadCeldaGuardarDetaFormaPago=false;
				}
			}
		}
		
		//ACTUALIZA VISIBILIDAD PANELES
		if(DetaFormaPagoJInternalFrame.CON_DATOS_FRAME && !this.esParaBusquedaForeignKey) {
			//SIEMPRE VISIBLE
			this.isVisibilidadCeldaNuevoDetaFormaPago=true;
			this.isVisibilidadCeldaNuevoRelacionesDetaFormaPago=true;
			this.isVisibilidadCeldaGuardarCambiosDetaFormaPago=true;
		} else {
			this.actualizarEstadoPanelsDetaFormaPago(sAccion);						
		}
		
		if(this.esParaBusquedaForeignKey) {
			this.isVisibilidadCeldaCopiarDetaFormaPago=false;
			//this.isVisibilidadCeldaVerFormDetaFormaPago=false;
			this.isVisibilidadCeldaDuplicarDetaFormaPago=false;
		}
		
		//SI ES MANTENIMIENTO RELACIONES
		if(!detaformapagoSessionBean.getConGuardarRelaciones()) {
			this.isVisibilidadCeldaNuevoRelacionesDetaFormaPago=false;
		} else {
			this.isVisibilidadCeldaNuevoDetaFormaPago=false;
			this.isVisibilidadCeldaGuardarCambiosDetaFormaPago=false;
		}
		
		//SI ES MANTENIMIENTO RELACIONADO
		if(detaformapagoSessionBean.getEsGuardarRelacionado()) {
			if(!detaformapagoSessionBean.getConGuardarRelaciones()) {	
				this.isVisibilidadCeldaNuevoRelacionesDetaFormaPago=false;												
			}
			
			this.jButtonCerrarDetaFormaPago.setVisible(false);
		}
		
		//SI NO TIENE MAXIMO DE RELACIONES PERMITIDAS
		if(!this.conMaximoRelaciones) {
			this.isVisibilidadCeldaNuevoRelacionesDetaFormaPago=false;
		}
		
		if(!this.permiteMantenimiento(this.detaformapago)) {
			this.isVisibilidadCeldaActualizarDetaFormaPago=false;
			this.isVisibilidadCeldaEliminarDetaFormaPago=false;
		}
		
		
		
	}
	
	public void actualizarEstadoCeldasBotonesConGuardarRelacionesDetaFormaPago() {
		this.isVisibilidadCeldaNuevoDetaFormaPago=false;
		this.isVisibilidadCeldaGuardarCambiosDetaFormaPago=false;
	}
	
	public void actualizarEstadoPanelsDetaFormaPago(String sAccion) {
		if(sAccion=="n") {
			if(this.jScrollPanelDatosEdicionDetaFormaPago!=null) {
				this.jScrollPanelDatosEdicionDetaFormaPago.setVisible(false);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasDetaFormaPago!=null) {
				this.jTabbedPaneBusquedasDetaFormaPago.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosDetaFormaPago!=null) {
				this.jScrollPanelDatosDetaFormaPago.setVisible(true);
			}
			
			if(this.jPanelPaginacionDetaFormaPago!=null) {
				this.jPanelPaginacionDetaFormaPago.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesDetaFormaPago!=null) {
				this.jPanelParametrosReportesDetaFormaPago.setVisible(true);		    
			}
			
		} else if(sAccion=="a") {				
			if(this.jScrollPanelDatosEdicionDetaFormaPago!=null) {
				this.jScrollPanelDatosEdicionDetaFormaPago.setVisible(true);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasDetaFormaPago!=null) {
				this.jTabbedPaneBusquedasDetaFormaPago.setVisible(false);			
			}
			
			
			
			if(this.jScrollPanelDatosDetaFormaPago!=null) {
				this.jScrollPanelDatosDetaFormaPago.setVisible(false);
			}
			
			if(this.jPanelPaginacionDetaFormaPago!=null) {
				this.jPanelPaginacionDetaFormaPago.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesDetaFormaPago!=null) {
				this.jPanelParametrosReportesDetaFormaPago.setVisible(false);
			}
						
		} else if(sAccion=="ae") {		
			if(this.jScrollPanelDatosEdicionDetaFormaPago!=null) {
				this.jScrollPanelDatosEdicionDetaFormaPago.setVisible(true);		
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasDetaFormaPago!=null) {
				this.jTabbedPaneBusquedasDetaFormaPago.setVisible(false);			
			}
			
			
			if(this.jScrollPanelDatosDetaFormaPago!=null) {
				this.jScrollPanelDatosDetaFormaPago.setVisible(false);
			}
			
			if(this.jPanelPaginacionDetaFormaPago!=null) {
				this.jPanelPaginacionDetaFormaPago.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesDetaFormaPago!=null) {
				this.jPanelParametrosReportesDetaFormaPago.setVisible(false);
			}
						
		}
		//Para Mantenimientos de tablas relacionados con mas de columnas minimas
		else if(sAccion=="ae2") {	
			if(this.jScrollPanelDatosEdicionDetaFormaPago!=null) {
				this.jScrollPanelDatosEdicionDetaFormaPago.setVisible(true);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasDetaFormaPago!=null) {
				this.jTabbedPaneBusquedasDetaFormaPago.setVisible(false);			
			}
			
			
			if(this.jScrollPanelDatosDetaFormaPago!=null) {
				this.jScrollPanelDatosDetaFormaPago.setVisible(false);
			}
			
			if(this.jPanelPaginacionDetaFormaPago!=null) {
				this.jPanelPaginacionDetaFormaPago.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesDetaFormaPago!=null) {
				this.jPanelParametrosReportesDetaFormaPago.setVisible(false);
			}
						
		} else if(sAccion=="c") {	
			if(this.jScrollPanelDatosEdicionDetaFormaPago!=null) {
				this.jScrollPanelDatosEdicionDetaFormaPago.setVisible(false);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasDetaFormaPago!=null) {
				this.jTabbedPaneBusquedasDetaFormaPago.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosDetaFormaPago!=null) {
				this.jScrollPanelDatosDetaFormaPago.setVisible(true);
			}
			
			if(this.jPanelPaginacionDetaFormaPago!=null) {
				this.jPanelPaginacionDetaFormaPago.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesDetaFormaPago!=null) {
				this.jPanelParametrosReportesDetaFormaPago.setVisible(true);
			}
						
		} else if(sAccion=="t") {
			
			if(this.jScrollPanelDatosEdicionDetaFormaPago!=null) {
				this.jScrollPanelDatosEdicionDetaFormaPago.setVisible(false);
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasDetaFormaPago!=null) {
				this.jTabbedPaneBusquedasDetaFormaPago.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosDetaFormaPago!=null) {
				this.jScrollPanelDatosDetaFormaPago.setVisible(true);
			}
			
			if(this.jPanelPaginacionDetaFormaPago!=null) {
				this.jPanelPaginacionDetaFormaPago.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesDetaFormaPago!=null) {
				this.jPanelParametrosReportesDetaFormaPago.setVisible(true);
			}
						
		}  else if(sAccion=="s"||sAccion=="s2") {
			if(this.jScrollPanelDatosEdicionDetaFormaPago!=null) {
				this.jScrollPanelDatosEdicionDetaFormaPago.setVisible(false);
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasDetaFormaPago!=null) {
				this.jTabbedPaneBusquedasDetaFormaPago.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosDetaFormaPago!=null) {
				this.jScrollPanelDatosDetaFormaPago.setVisible(true);
			}
			
			if(this.jPanelPaginacionDetaFormaPago!=null) {
				this.jPanelPaginacionDetaFormaPago.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesDetaFormaPago!=null) {
				this.jPanelParametrosReportesDetaFormaPago.setVisible(true);
			}
			
		} 
		
		if(sAccion.equals("relacionado") || this.detaformapagoSessionBean.getEsGuardarRelacionado()) {
			if(!this.conCargarMinimo) {
				//BYDAN_BUSQUEDAS
				
				if(this.jTabbedPaneBusquedasDetaFormaPago!=null) {
					this.jTabbedPaneBusquedasDetaFormaPago.setVisible(false);				
				}
				
			}
			
			if(this.jPanelParametrosReportesDetaFormaPago!=null) {
				this.jPanelParametrosReportesDetaFormaPago.setVisible(false);
			}
		
		} else if(sAccion.equals("no_relacionado") && !this.detaformapagoSessionBean.getEsGuardarRelacionado()) {
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasDetaFormaPago!=null) {
				this.jTabbedPaneBusquedasDetaFormaPago.setVisible(true);			
			}
			
			if(this.jPanelParametrosReportesDetaFormaPago!=null) {
				this.jPanelParametrosReportesDetaFormaPago.setVisible(true);
			}
		}
	}	
	
	

	public void setVisibilidadBusquedasParaEmpresa(Boolean isParaEmpresa){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaEmpresaNegation=!isParaEmpresa;

			this.isVisibilidadFK_IdCuentaContable=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdCuentaContable) {this.jTabbedPaneBusquedasDetaFormaPago.remove(jPanelFK_IdCuentaContableDetaFormaPago);}

			this.isVisibilidadFK_IdDetaFormaPagoFactu=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdDetaFormaPagoFactu) {this.jTabbedPaneBusquedasDetaFormaPago.remove(jPanelFK_IdDetaFormaPagoFactuDetaFormaPago);}

			this.isVisibilidadFK_IdFactura=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdFactura) {this.jTabbedPaneBusquedasDetaFormaPago.remove(jPanelFK_IdFacturaDetaFormaPago);}

			this.isVisibilidadFK_IdTipoDetaFormaPago=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdTipoDetaFormaPago) {this.jTabbedPaneBusquedasDetaFormaPago.remove(jPanelFK_IdTipoDetaFormaPagoDetaFormaPago);}

			this.isVisibilidadFK_IdTipoFormaPago=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdTipoFormaPago) {this.jTabbedPaneBusquedasDetaFormaPago.remove(jPanelFK_IdTipoFormaPagoDetaFormaPago);}

			this.isVisibilidadFK_IdTipoRetencion=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdTipoRetencion) {this.jTabbedPaneBusquedasDetaFormaPago.remove(jPanelFK_IdTipoRetencionDetaFormaPago);}
		}
		
	}

	public void setVisibilidadBusquedasParaSucursal(Boolean isParaSucursal){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaSucursalNegation=!isParaSucursal;

			this.isVisibilidadFK_IdCuentaContable=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdCuentaContable) {this.jTabbedPaneBusquedasDetaFormaPago.remove(jPanelFK_IdCuentaContableDetaFormaPago);}

			this.isVisibilidadFK_IdDetaFormaPagoFactu=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdDetaFormaPagoFactu) {this.jTabbedPaneBusquedasDetaFormaPago.remove(jPanelFK_IdDetaFormaPagoFactuDetaFormaPago);}

			this.isVisibilidadFK_IdFactura=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdFactura) {this.jTabbedPaneBusquedasDetaFormaPago.remove(jPanelFK_IdFacturaDetaFormaPago);}

			this.isVisibilidadFK_IdTipoDetaFormaPago=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdTipoDetaFormaPago) {this.jTabbedPaneBusquedasDetaFormaPago.remove(jPanelFK_IdTipoDetaFormaPagoDetaFormaPago);}

			this.isVisibilidadFK_IdTipoFormaPago=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdTipoFormaPago) {this.jTabbedPaneBusquedasDetaFormaPago.remove(jPanelFK_IdTipoFormaPagoDetaFormaPago);}

			this.isVisibilidadFK_IdTipoRetencion=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdTipoRetencion) {this.jTabbedPaneBusquedasDetaFormaPago.remove(jPanelFK_IdTipoRetencionDetaFormaPago);}
		}
		
	}

	public void setVisibilidadBusquedasParaEjercicio(Boolean isParaEjercicio){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaEjercicioNegation=!isParaEjercicio;

			this.isVisibilidadFK_IdCuentaContable=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdCuentaContable) {this.jTabbedPaneBusquedasDetaFormaPago.remove(jPanelFK_IdCuentaContableDetaFormaPago);}

			this.isVisibilidadFK_IdDetaFormaPagoFactu=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdDetaFormaPagoFactu) {this.jTabbedPaneBusquedasDetaFormaPago.remove(jPanelFK_IdDetaFormaPagoFactuDetaFormaPago);}

			this.isVisibilidadFK_IdFactura=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdFactura) {this.jTabbedPaneBusquedasDetaFormaPago.remove(jPanelFK_IdFacturaDetaFormaPago);}

			this.isVisibilidadFK_IdTipoDetaFormaPago=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdTipoDetaFormaPago) {this.jTabbedPaneBusquedasDetaFormaPago.remove(jPanelFK_IdTipoDetaFormaPagoDetaFormaPago);}

			this.isVisibilidadFK_IdTipoFormaPago=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdTipoFormaPago) {this.jTabbedPaneBusquedasDetaFormaPago.remove(jPanelFK_IdTipoFormaPagoDetaFormaPago);}

			this.isVisibilidadFK_IdTipoRetencion=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdTipoRetencion) {this.jTabbedPaneBusquedasDetaFormaPago.remove(jPanelFK_IdTipoRetencionDetaFormaPago);}
		}
		
	}

	public void setVisibilidadBusquedasParaPeriodo(Boolean isParaPeriodo){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaPeriodoNegation=!isParaPeriodo;

			this.isVisibilidadFK_IdCuentaContable=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdCuentaContable) {this.jTabbedPaneBusquedasDetaFormaPago.remove(jPanelFK_IdCuentaContableDetaFormaPago);}

			this.isVisibilidadFK_IdDetaFormaPagoFactu=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdDetaFormaPagoFactu) {this.jTabbedPaneBusquedasDetaFormaPago.remove(jPanelFK_IdDetaFormaPagoFactuDetaFormaPago);}

			this.isVisibilidadFK_IdFactura=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdFactura) {this.jTabbedPaneBusquedasDetaFormaPago.remove(jPanelFK_IdFacturaDetaFormaPago);}

			this.isVisibilidadFK_IdTipoDetaFormaPago=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdTipoDetaFormaPago) {this.jTabbedPaneBusquedasDetaFormaPago.remove(jPanelFK_IdTipoDetaFormaPagoDetaFormaPago);}

			this.isVisibilidadFK_IdTipoFormaPago=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdTipoFormaPago) {this.jTabbedPaneBusquedasDetaFormaPago.remove(jPanelFK_IdTipoFormaPagoDetaFormaPago);}

			this.isVisibilidadFK_IdTipoRetencion=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdTipoRetencion) {this.jTabbedPaneBusquedasDetaFormaPago.remove(jPanelFK_IdTipoRetencionDetaFormaPago);}
		}
		
	}

	public void setVisibilidadBusquedasParaFactura(Boolean isParaFactura){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaFacturaNegation=!isParaFactura;

			this.isVisibilidadFK_IdCuentaContable=isParaFacturaNegation;
			if(!this.isVisibilidadFK_IdCuentaContable) {this.jTabbedPaneBusquedasDetaFormaPago.remove(jPanelFK_IdCuentaContableDetaFormaPago);}

			this.isVisibilidadFK_IdDetaFormaPagoFactu=isParaFacturaNegation;
			if(!this.isVisibilidadFK_IdDetaFormaPagoFactu) {this.jTabbedPaneBusquedasDetaFormaPago.remove(jPanelFK_IdDetaFormaPagoFactuDetaFormaPago);}

			this.isVisibilidadFK_IdFactura=isParaFactura;
			if(!this.isVisibilidadFK_IdFactura) {this.jTabbedPaneBusquedasDetaFormaPago.remove(jPanelFK_IdFacturaDetaFormaPago);}

			this.isVisibilidadFK_IdTipoDetaFormaPago=isParaFacturaNegation;
			if(!this.isVisibilidadFK_IdTipoDetaFormaPago) {this.jTabbedPaneBusquedasDetaFormaPago.remove(jPanelFK_IdTipoDetaFormaPagoDetaFormaPago);}

			this.isVisibilidadFK_IdTipoFormaPago=isParaFacturaNegation;
			if(!this.isVisibilidadFK_IdTipoFormaPago) {this.jTabbedPaneBusquedasDetaFormaPago.remove(jPanelFK_IdTipoFormaPagoDetaFormaPago);}

			this.isVisibilidadFK_IdTipoRetencion=isParaFacturaNegation;
			if(!this.isVisibilidadFK_IdTipoRetencion) {this.jTabbedPaneBusquedasDetaFormaPago.remove(jPanelFK_IdTipoRetencionDetaFormaPago);}
		}
		
	}

	public void setVisibilidadBusquedasParaTipoFormaPago(Boolean isParaTipoFormaPago){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaTipoFormaPagoNegation=!isParaTipoFormaPago;

			this.isVisibilidadFK_IdCuentaContable=isParaTipoFormaPagoNegation;
			if(!this.isVisibilidadFK_IdCuentaContable) {this.jTabbedPaneBusquedasDetaFormaPago.remove(jPanelFK_IdCuentaContableDetaFormaPago);}

			this.isVisibilidadFK_IdDetaFormaPagoFactu=isParaTipoFormaPagoNegation;
			if(!this.isVisibilidadFK_IdDetaFormaPagoFactu) {this.jTabbedPaneBusquedasDetaFormaPago.remove(jPanelFK_IdDetaFormaPagoFactuDetaFormaPago);}

			this.isVisibilidadFK_IdFactura=isParaTipoFormaPagoNegation;
			if(!this.isVisibilidadFK_IdFactura) {this.jTabbedPaneBusquedasDetaFormaPago.remove(jPanelFK_IdFacturaDetaFormaPago);}

			this.isVisibilidadFK_IdTipoDetaFormaPago=isParaTipoFormaPagoNegation;
			if(!this.isVisibilidadFK_IdTipoDetaFormaPago) {this.jTabbedPaneBusquedasDetaFormaPago.remove(jPanelFK_IdTipoDetaFormaPagoDetaFormaPago);}

			this.isVisibilidadFK_IdTipoFormaPago=isParaTipoFormaPago;
			if(!this.isVisibilidadFK_IdTipoFormaPago) {this.jTabbedPaneBusquedasDetaFormaPago.remove(jPanelFK_IdTipoFormaPagoDetaFormaPago);}

			this.isVisibilidadFK_IdTipoRetencion=isParaTipoFormaPagoNegation;
			if(!this.isVisibilidadFK_IdTipoRetencion) {this.jTabbedPaneBusquedasDetaFormaPago.remove(jPanelFK_IdTipoRetencionDetaFormaPago);}
		}
		
	}

	public void setVisibilidadBusquedasParaTipoDetaFormaPago(Boolean isParaTipoDetaFormaPago){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaTipoDetaFormaPagoNegation=!isParaTipoDetaFormaPago;

			this.isVisibilidadFK_IdCuentaContable=isParaTipoDetaFormaPagoNegation;
			if(!this.isVisibilidadFK_IdCuentaContable) {this.jTabbedPaneBusquedasDetaFormaPago.remove(jPanelFK_IdCuentaContableDetaFormaPago);}

			this.isVisibilidadFK_IdDetaFormaPagoFactu=isParaTipoDetaFormaPagoNegation;
			if(!this.isVisibilidadFK_IdDetaFormaPagoFactu) {this.jTabbedPaneBusquedasDetaFormaPago.remove(jPanelFK_IdDetaFormaPagoFactuDetaFormaPago);}

			this.isVisibilidadFK_IdFactura=isParaTipoDetaFormaPagoNegation;
			if(!this.isVisibilidadFK_IdFactura) {this.jTabbedPaneBusquedasDetaFormaPago.remove(jPanelFK_IdFacturaDetaFormaPago);}

			this.isVisibilidadFK_IdTipoDetaFormaPago=isParaTipoDetaFormaPago;
			if(!this.isVisibilidadFK_IdTipoDetaFormaPago) {this.jTabbedPaneBusquedasDetaFormaPago.remove(jPanelFK_IdTipoDetaFormaPagoDetaFormaPago);}

			this.isVisibilidadFK_IdTipoFormaPago=isParaTipoDetaFormaPagoNegation;
			if(!this.isVisibilidadFK_IdTipoFormaPago) {this.jTabbedPaneBusquedasDetaFormaPago.remove(jPanelFK_IdTipoFormaPagoDetaFormaPago);}

			this.isVisibilidadFK_IdTipoRetencion=isParaTipoDetaFormaPagoNegation;
			if(!this.isVisibilidadFK_IdTipoRetencion) {this.jTabbedPaneBusquedasDetaFormaPago.remove(jPanelFK_IdTipoRetencionDetaFormaPago);}
		}
		
	}

	public void setVisibilidadBusquedasParaDetaFormaPagoFactu(Boolean isParaDetaFormaPagoFactu){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaDetaFormaPagoFactuNegation=!isParaDetaFormaPagoFactu;

			this.isVisibilidadFK_IdCuentaContable=isParaDetaFormaPagoFactuNegation;
			if(!this.isVisibilidadFK_IdCuentaContable) {this.jTabbedPaneBusquedasDetaFormaPago.remove(jPanelFK_IdCuentaContableDetaFormaPago);}

			this.isVisibilidadFK_IdDetaFormaPagoFactu=isParaDetaFormaPagoFactu;
			if(!this.isVisibilidadFK_IdDetaFormaPagoFactu) {this.jTabbedPaneBusquedasDetaFormaPago.remove(jPanelFK_IdDetaFormaPagoFactuDetaFormaPago);}

			this.isVisibilidadFK_IdFactura=isParaDetaFormaPagoFactuNegation;
			if(!this.isVisibilidadFK_IdFactura) {this.jTabbedPaneBusquedasDetaFormaPago.remove(jPanelFK_IdFacturaDetaFormaPago);}

			this.isVisibilidadFK_IdTipoDetaFormaPago=isParaDetaFormaPagoFactuNegation;
			if(!this.isVisibilidadFK_IdTipoDetaFormaPago) {this.jTabbedPaneBusquedasDetaFormaPago.remove(jPanelFK_IdTipoDetaFormaPagoDetaFormaPago);}

			this.isVisibilidadFK_IdTipoFormaPago=isParaDetaFormaPagoFactuNegation;
			if(!this.isVisibilidadFK_IdTipoFormaPago) {this.jTabbedPaneBusquedasDetaFormaPago.remove(jPanelFK_IdTipoFormaPagoDetaFormaPago);}

			this.isVisibilidadFK_IdTipoRetencion=isParaDetaFormaPagoFactuNegation;
			if(!this.isVisibilidadFK_IdTipoRetencion) {this.jTabbedPaneBusquedasDetaFormaPago.remove(jPanelFK_IdTipoRetencionDetaFormaPago);}
		}
		
	}

	public void setVisibilidadBusquedasParaCuentaContable(Boolean isParaCuentaContable){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaCuentaContableNegation=!isParaCuentaContable;

			this.isVisibilidadFK_IdCuentaContable=isParaCuentaContable;
			if(!this.isVisibilidadFK_IdCuentaContable) {this.jTabbedPaneBusquedasDetaFormaPago.remove(jPanelFK_IdCuentaContableDetaFormaPago);}

			this.isVisibilidadFK_IdDetaFormaPagoFactu=isParaCuentaContableNegation;
			if(!this.isVisibilidadFK_IdDetaFormaPagoFactu) {this.jTabbedPaneBusquedasDetaFormaPago.remove(jPanelFK_IdDetaFormaPagoFactuDetaFormaPago);}

			this.isVisibilidadFK_IdFactura=isParaCuentaContableNegation;
			if(!this.isVisibilidadFK_IdFactura) {this.jTabbedPaneBusquedasDetaFormaPago.remove(jPanelFK_IdFacturaDetaFormaPago);}

			this.isVisibilidadFK_IdTipoDetaFormaPago=isParaCuentaContableNegation;
			if(!this.isVisibilidadFK_IdTipoDetaFormaPago) {this.jTabbedPaneBusquedasDetaFormaPago.remove(jPanelFK_IdTipoDetaFormaPagoDetaFormaPago);}

			this.isVisibilidadFK_IdTipoFormaPago=isParaCuentaContableNegation;
			if(!this.isVisibilidadFK_IdTipoFormaPago) {this.jTabbedPaneBusquedasDetaFormaPago.remove(jPanelFK_IdTipoFormaPagoDetaFormaPago);}

			this.isVisibilidadFK_IdTipoRetencion=isParaCuentaContableNegation;
			if(!this.isVisibilidadFK_IdTipoRetencion) {this.jTabbedPaneBusquedasDetaFormaPago.remove(jPanelFK_IdTipoRetencionDetaFormaPago);}
		}
		
	}

	public void setVisibilidadBusquedasParaTipoRetencion(Boolean isParaTipoRetencion){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaTipoRetencionNegation=!isParaTipoRetencion;

			this.isVisibilidadFK_IdCuentaContable=isParaTipoRetencionNegation;
			if(!this.isVisibilidadFK_IdCuentaContable) {this.jTabbedPaneBusquedasDetaFormaPago.remove(jPanelFK_IdCuentaContableDetaFormaPago);}

			this.isVisibilidadFK_IdDetaFormaPagoFactu=isParaTipoRetencionNegation;
			if(!this.isVisibilidadFK_IdDetaFormaPagoFactu) {this.jTabbedPaneBusquedasDetaFormaPago.remove(jPanelFK_IdDetaFormaPagoFactuDetaFormaPago);}

			this.isVisibilidadFK_IdFactura=isParaTipoRetencionNegation;
			if(!this.isVisibilidadFK_IdFactura) {this.jTabbedPaneBusquedasDetaFormaPago.remove(jPanelFK_IdFacturaDetaFormaPago);}

			this.isVisibilidadFK_IdTipoDetaFormaPago=isParaTipoRetencionNegation;
			if(!this.isVisibilidadFK_IdTipoDetaFormaPago) {this.jTabbedPaneBusquedasDetaFormaPago.remove(jPanelFK_IdTipoDetaFormaPagoDetaFormaPago);}

			this.isVisibilidadFK_IdTipoFormaPago=isParaTipoRetencionNegation;
			if(!this.isVisibilidadFK_IdTipoFormaPago) {this.jTabbedPaneBusquedasDetaFormaPago.remove(jPanelFK_IdTipoFormaPagoDetaFormaPago);}

			this.isVisibilidadFK_IdTipoRetencion=isParaTipoRetencion;
			if(!this.isVisibilidadFK_IdTipoRetencion) {this.jTabbedPaneBusquedasDetaFormaPago.remove(jPanelFK_IdTipoRetencionDetaFormaPago);}
		}
		
	}

	public void setVisibilidadBusquedasParaAnio(Boolean isParaAnio){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaAnioNegation=!isParaAnio;

			this.isVisibilidadFK_IdCuentaContable=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdCuentaContable) {this.jTabbedPaneBusquedasDetaFormaPago.remove(jPanelFK_IdCuentaContableDetaFormaPago);}

			this.isVisibilidadFK_IdDetaFormaPagoFactu=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdDetaFormaPagoFactu) {this.jTabbedPaneBusquedasDetaFormaPago.remove(jPanelFK_IdDetaFormaPagoFactuDetaFormaPago);}

			this.isVisibilidadFK_IdFactura=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdFactura) {this.jTabbedPaneBusquedasDetaFormaPago.remove(jPanelFK_IdFacturaDetaFormaPago);}

			this.isVisibilidadFK_IdTipoDetaFormaPago=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdTipoDetaFormaPago) {this.jTabbedPaneBusquedasDetaFormaPago.remove(jPanelFK_IdTipoDetaFormaPagoDetaFormaPago);}

			this.isVisibilidadFK_IdTipoFormaPago=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdTipoFormaPago) {this.jTabbedPaneBusquedasDetaFormaPago.remove(jPanelFK_IdTipoFormaPagoDetaFormaPago);}

			this.isVisibilidadFK_IdTipoRetencion=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdTipoRetencion) {this.jTabbedPaneBusquedasDetaFormaPago.remove(jPanelFK_IdTipoRetencionDetaFormaPago);}
		}
		
	}

	public void setVisibilidadBusquedasParaMes(Boolean isParaMes){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaMesNegation=!isParaMes;

			this.isVisibilidadFK_IdCuentaContable=isParaMesNegation;
			if(!this.isVisibilidadFK_IdCuentaContable) {this.jTabbedPaneBusquedasDetaFormaPago.remove(jPanelFK_IdCuentaContableDetaFormaPago);}

			this.isVisibilidadFK_IdDetaFormaPagoFactu=isParaMesNegation;
			if(!this.isVisibilidadFK_IdDetaFormaPagoFactu) {this.jTabbedPaneBusquedasDetaFormaPago.remove(jPanelFK_IdDetaFormaPagoFactuDetaFormaPago);}

			this.isVisibilidadFK_IdFactura=isParaMesNegation;
			if(!this.isVisibilidadFK_IdFactura) {this.jTabbedPaneBusquedasDetaFormaPago.remove(jPanelFK_IdFacturaDetaFormaPago);}

			this.isVisibilidadFK_IdTipoDetaFormaPago=isParaMesNegation;
			if(!this.isVisibilidadFK_IdTipoDetaFormaPago) {this.jTabbedPaneBusquedasDetaFormaPago.remove(jPanelFK_IdTipoDetaFormaPagoDetaFormaPago);}

			this.isVisibilidadFK_IdTipoFormaPago=isParaMesNegation;
			if(!this.isVisibilidadFK_IdTipoFormaPago) {this.jTabbedPaneBusquedasDetaFormaPago.remove(jPanelFK_IdTipoFormaPagoDetaFormaPago);}

			this.isVisibilidadFK_IdTipoRetencion=isParaMesNegation;
			if(!this.isVisibilidadFK_IdTipoRetencion) {this.jTabbedPaneBusquedasDetaFormaPago.remove(jPanelFK_IdTipoRetencionDetaFormaPago);}
		}
		
	}
	
	

	public String registrarSesionDetaFormaPagoParaBancoFormaPagos() throws Exception {
		Boolean isPaginaPopupBancoFormaPago=false;

		try {

			if(this.detaformapagoSessionBean==null) {
				this.detaformapagoSessionBean=new DetaFormaPagoSessionBean();
			}

			if(this.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoSessionBean==null) {
				this.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoSessionBean=new BancoFormaPagoSessionBean();
			}

			this.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoSessionBean.setsPathNavegacionActual(detaformapagoSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+BancoFormaPagoConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupBancoFormaPago=this.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeBancoFormaPago(true);
			this.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeBancoFormaPago(DetaFormaPagoConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoSessionBean.setisBusquedaDesdeForeignKeySesionDetaFormaPago(true);
			this.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoSessionBean.setlidDetaFormaPagoActual(this.idDetaFormaPagoActual);

			detaformapagoSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyDetaFormaPago(true);
			detaformapagoSessionBean.setlIdDetaFormaPagoActualForeignKey(this.idDetaFormaPagoActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}
	
	

	public String registrarSesionDetaFormaPagoParaBusquedaFacturas() throws Exception {
		Boolean isPaginaPopupFactura=false;

		try {

			if(detaformapagoSessionBean==null) {
				detaformapagoSessionBean=new DetaFormaPagoSessionBean();
			}

			if(facturaSessionBean==null) {
				facturaSessionBean=new FacturaSessionBean();
			}

			facturaSessionBean.setsPathNavegacionActual(detaformapagoSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+FacturaConstantesFunciones.SCLASSWEBTITULO);
			facturaSessionBean.setisPermiteRecargarInformacion(false);
			facturaSessionBean.setisPaginaPopup(true);
			isPaginaPopupFactura=facturaSessionBean.getisPaginaPopup();
			facturaSessionBean.setisPaginaPopup(false);
			facturaSessionBean.setEstaModoBusqueda(true);
			facturaSessionBean.setsFuncionBusquedaRapida("window.opener.detaformapagoFuncionGeneral.setCombosCodigoDesdeBusquedaid_factura(TO_REPLACE);");
			facturaSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeFactura(true);
			facturaSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeFactura(DetaFormaPagoConstantesFunciones.SNOMBREOPCION);
			//facturaSessionBean.setisBusquedaDesdeForeignKeySesionDetaFormaPago(true);
			//facturaSessionBean.setlidDetaFormaPagoActual(this.idDetaFormaPagoActual);

			detaformapagoSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyDetaFormaPago(true);
			detaformapagoSessionBean.setlIdDetaFormaPagoActualForeignKey(this.idDetaFormaPagoActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
			return "";
	}

	public String registrarSesionDetaFormaPagoParaBusquedaCuentaContables() throws Exception {
		Boolean isPaginaPopupCuentaContable=false;

		try {

			if(detaformapagoSessionBean==null) {
				detaformapagoSessionBean=new DetaFormaPagoSessionBean();
			}

			if(cuentacontableSessionBean==null) {
				cuentacontableSessionBean=new CuentaContableSessionBean();
			}

			cuentacontableSessionBean.setsPathNavegacionActual(detaformapagoSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+CuentaContableConstantesFunciones.SCLASSWEBTITULO);
			cuentacontableSessionBean.setisPermiteRecargarInformacion(false);
			cuentacontableSessionBean.setisPaginaPopup(true);
			isPaginaPopupCuentaContable=cuentacontableSessionBean.getisPaginaPopup();
			cuentacontableSessionBean.setisPaginaPopup(false);
			cuentacontableSessionBean.setEstaModoBusqueda(true);
			cuentacontableSessionBean.setsFuncionBusquedaRapida("window.opener.detaformapagoFuncionGeneral.setCombosCodigoDesdeBusquedaid_cuenta_contable(TO_REPLACE);");
			cuentacontableSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeCuentaContable(true);
			cuentacontableSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeCuentaContable(DetaFormaPagoConstantesFunciones.SNOMBREOPCION);
			//cuentacontableSessionBean.setisBusquedaDesdeForeignKeySesionDetaFormaPago(true);
			//cuentacontableSessionBean.setlidDetaFormaPagoActual(this.idDetaFormaPagoActual);

			detaformapagoSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyDetaFormaPago(true);
			detaformapagoSessionBean.setlIdDetaFormaPagoActualForeignKey(this.idDetaFormaPagoActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
			return "";
	}
	
	
	public void guardarDatosBusquedaSession() throws Exception {
		
		//DetaFormaPagoSessionBean detaformapagoSessionBean=new DetaFormaPagoSessionBean();
		
		if(this.detaformapagoSessionBean==null) {
			this.detaformapagoSessionBean=new DetaFormaPagoSessionBean();
		}
		
		this.detaformapagoSessionBean.setsUltimaBusquedaDetaFormaPago(this.getsAccionBusqueda());
		this.detaformapagoSessionBean.setiNumeroPaginacion(this.getiNumeroPaginacion());
		this.detaformapagoSessionBean.setiNumeroPaginacionPagina(this.getiNumeroPaginacionPagina());
		
		if(this.getsAccionBusqueda().equals("Todos")) {
			;
		}
		

		else if(this.getsAccionBusqueda().equals("FK_IdCuentaContable")) {
			detaformapagoSessionBean.setid_cuenta_contable(this.getid_cuenta_contableFK_IdCuentaContable());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdDetaFormaPagoFactu")) {
			detaformapagoSessionBean.setid_deta_forma_pago_factu(this.getid_deta_forma_pago_factuFK_IdDetaFormaPagoFactu());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdEjercicio")) {
			detaformapagoSessionBean.setid_ejercicio(this.getid_ejercicioFK_IdEjercicio());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdEmpresa")) {
			detaformapagoSessionBean.setid_empresa(this.getid_empresaFK_IdEmpresa());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdFactura")) {
			detaformapagoSessionBean.setid_factura(this.getid_facturaFK_IdFactura());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdPeriodo")) {
			detaformapagoSessionBean.setid_periodo(this.getid_periodoFK_IdPeriodo());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdSucursal")) {
			detaformapagoSessionBean.setid_sucursal(this.getid_sucursalFK_IdSucursal());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdTipoDetaFormaPago")) {
			detaformapagoSessionBean.setid_tipo_deta_forma_pago(this.getid_tipo_deta_forma_pagoFK_IdTipoDetaFormaPago());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdTipoFormaPago")) {
			detaformapagoSessionBean.setid_tipo_forma_pago(this.getid_tipo_forma_pagoFK_IdTipoFormaPago());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdTipoRetencion")) {
			detaformapagoSessionBean.setid_tipo_retencion(this.getid_tipo_retencionFK_IdTipoRetencion());	
		}
		
	}
	
	public void traerDatosBusquedaDesdeSession() throws Exception {
		//DetaFormaPagoSessionBean detaformapagoSessionBean=new DetaFormaPagoSessionBean();
		
		if(this.detaformapagoSessionBean==null) {
			this.detaformapagoSessionBean=new DetaFormaPagoSessionBean();
		}
		
		if(this.detaformapagoSessionBean.getsUltimaBusquedaDetaFormaPago()!=null&&!this.detaformapagoSessionBean.getsUltimaBusquedaDetaFormaPago().equals("")) {
			this.setsAccionBusqueda(detaformapagoSessionBean.getsUltimaBusquedaDetaFormaPago());
			this.setiNumeroPaginacion(detaformapagoSessionBean.getiNumeroPaginacion());
			this.setiNumeroPaginacionPagina(detaformapagoSessionBean.getiNumeroPaginacionPagina());		
				
			if(this.getsAccionBusqueda().equals("Todos")) {
				;
			}
			

			 else if(this.getsAccionBusqueda().equals("FK_IdCuentaContable")) {
				this.setid_cuenta_contableFK_IdCuentaContable(detaformapagoSessionBean.getid_cuenta_contable());
				detaformapagoSessionBean.setid_cuenta_contable(null);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdDetaFormaPagoFactu")) {
				this.setid_deta_forma_pago_factuFK_IdDetaFormaPagoFactu(detaformapagoSessionBean.getid_deta_forma_pago_factu());
				detaformapagoSessionBean.setid_deta_forma_pago_factu(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdEjercicio")) {
				this.setid_ejercicioFK_IdEjercicio(detaformapagoSessionBean.getid_ejercicio());
				detaformapagoSessionBean.setid_ejercicio(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdEmpresa")) {
				this.setid_empresaFK_IdEmpresa(detaformapagoSessionBean.getid_empresa());
				detaformapagoSessionBean.setid_empresa(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdFactura")) {
				this.setid_facturaFK_IdFactura(detaformapagoSessionBean.getid_factura());
				detaformapagoSessionBean.setid_factura(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdPeriodo")) {
				this.setid_periodoFK_IdPeriodo(detaformapagoSessionBean.getid_periodo());
				detaformapagoSessionBean.setid_periodo(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdSucursal")) {
				this.setid_sucursalFK_IdSucursal(detaformapagoSessionBean.getid_sucursal());
				detaformapagoSessionBean.setid_sucursal(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdTipoDetaFormaPago")) {
				this.setid_tipo_deta_forma_pagoFK_IdTipoDetaFormaPago(detaformapagoSessionBean.getid_tipo_deta_forma_pago());
				detaformapagoSessionBean.setid_tipo_deta_forma_pago(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdTipoFormaPago")) {
				this.setid_tipo_forma_pagoFK_IdTipoFormaPago(detaformapagoSessionBean.getid_tipo_forma_pago());
				detaformapagoSessionBean.setid_tipo_forma_pago(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdTipoRetencion")) {
				this.setid_tipo_retencionFK_IdTipoRetencion(detaformapagoSessionBean.getid_tipo_retencion());
				detaformapagoSessionBean.setid_tipo_retencion(-1L);
			}
		}
		
		this.detaformapagoSessionBean.setsUltimaBusquedaDetaFormaPago("");
		this.detaformapagoSessionBean.setiNumeroPaginacion(DetaFormaPagoConstantesFunciones.INUMEROPAGINACION);
		this.detaformapagoSessionBean.setiNumeroPaginacionPagina(0);
		
	}
	
	public void procesoActualizarFilaTotales(Boolean esCampoValor,String sTipo) {
		try {
			this.actualizarFilaTotales();
				
			this.traerValoresTablaTotales();
			
			this.inicializarActualizarBindingTablaDetaFormaPago(false);
			
			
			
			
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	
	
	public void updateBusquedasFormularioDetaFormaPago() {
		this.updateBorderResaltarBusquedasFormularioDetaFormaPago();
		this.updateVisibilidadBusquedasFormularioDetaFormaPago();
		this.updateHabilitarBusquedasFormularioDetaFormaPago();
	}
	
	public void updateBorderResaltarBusquedasFormularioDetaFormaPago() {					
	//BYDAN_BUSQUEDAS
		
	int index=0;
		
	if(this.jTabbedPaneBusquedasDetaFormaPago.getComponents().length>0) {
	

		if(this.detaformapagoConstantesFunciones.resaltarFK_IdCuentaContableDetaFormaPago!=null) {
			index= this.jTabbedPaneBusquedasDetaFormaPago.indexOfComponent(this.jPanelFK_IdCuentaContableDetaFormaPago);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasDetaFormaPago.getComponent(index);
				jPanel.setBorder(this.detaformapagoConstantesFunciones.resaltarFK_IdCuentaContableDetaFormaPago);
			}
		}

		if(this.detaformapagoConstantesFunciones.resaltarFK_IdDetaFormaPagoFactuDetaFormaPago!=null) {
			index= this.jTabbedPaneBusquedasDetaFormaPago.indexOfComponent(this.jPanelFK_IdDetaFormaPagoFactuDetaFormaPago);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasDetaFormaPago.getComponent(index);
				jPanel.setBorder(this.detaformapagoConstantesFunciones.resaltarFK_IdDetaFormaPagoFactuDetaFormaPago);
			}
		}

		if(this.detaformapagoConstantesFunciones.resaltarFK_IdFacturaDetaFormaPago!=null) {
			index= this.jTabbedPaneBusquedasDetaFormaPago.indexOfComponent(this.jPanelFK_IdFacturaDetaFormaPago);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasDetaFormaPago.getComponent(index);
				jPanel.setBorder(this.detaformapagoConstantesFunciones.resaltarFK_IdFacturaDetaFormaPago);
			}
		}

		if(this.detaformapagoConstantesFunciones.resaltarFK_IdTipoDetaFormaPagoDetaFormaPago!=null) {
			index= this.jTabbedPaneBusquedasDetaFormaPago.indexOfComponent(this.jPanelFK_IdTipoDetaFormaPagoDetaFormaPago);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasDetaFormaPago.getComponent(index);
				jPanel.setBorder(this.detaformapagoConstantesFunciones.resaltarFK_IdTipoDetaFormaPagoDetaFormaPago);
			}
		}

		if(this.detaformapagoConstantesFunciones.resaltarFK_IdTipoFormaPagoDetaFormaPago!=null) {
			index= this.jTabbedPaneBusquedasDetaFormaPago.indexOfComponent(this.jPanelFK_IdTipoFormaPagoDetaFormaPago);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasDetaFormaPago.getComponent(index);
				jPanel.setBorder(this.detaformapagoConstantesFunciones.resaltarFK_IdTipoFormaPagoDetaFormaPago);
			}
		}

		if(this.detaformapagoConstantesFunciones.resaltarFK_IdTipoRetencionDetaFormaPago!=null) {
			index= this.jTabbedPaneBusquedasDetaFormaPago.indexOfComponent(this.jPanelFK_IdTipoRetencionDetaFormaPago);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasDetaFormaPago.getComponent(index);
				jPanel.setBorder(this.detaformapagoConstantesFunciones.resaltarFK_IdTipoRetencionDetaFormaPago);
			}
		}
	}	
	
	}
	
	public void updateVisibilidadBusquedasFormularioDetaFormaPago() {
	//BYDAN_BUSQUEDAS
	
	int index=0;
	JPanel jPanel=null;
		
	if(this.jTabbedPaneBusquedasDetaFormaPago.getComponents().length>0) {
	

			index= this.jTabbedPaneBusquedasDetaFormaPago.indexOfComponent(this.jPanelFK_IdCuentaContableDetaFormaPago);
			jPanel=(JPanel)this.jTabbedPaneBusquedasDetaFormaPago.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.detaformapagoConstantesFunciones.mostrarFK_IdCuentaContableDetaFormaPago);
			if(!this.detaformapagoConstantesFunciones.mostrarFK_IdCuentaContableDetaFormaPago && index>-1) {
				this.jTabbedPaneBusquedasDetaFormaPago.remove(index);
			}

			index= this.jTabbedPaneBusquedasDetaFormaPago.indexOfComponent(this.jPanelFK_IdDetaFormaPagoFactuDetaFormaPago);
			jPanel=(JPanel)this.jTabbedPaneBusquedasDetaFormaPago.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.detaformapagoConstantesFunciones.mostrarFK_IdDetaFormaPagoFactuDetaFormaPago);
			if(!this.detaformapagoConstantesFunciones.mostrarFK_IdDetaFormaPagoFactuDetaFormaPago && index>-1) {
				this.jTabbedPaneBusquedasDetaFormaPago.remove(index);
			}

			index= this.jTabbedPaneBusquedasDetaFormaPago.indexOfComponent(this.jPanelFK_IdFacturaDetaFormaPago);
			jPanel=(JPanel)this.jTabbedPaneBusquedasDetaFormaPago.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.detaformapagoConstantesFunciones.mostrarFK_IdFacturaDetaFormaPago);
			if(!this.detaformapagoConstantesFunciones.mostrarFK_IdFacturaDetaFormaPago && index>-1) {
				this.jTabbedPaneBusquedasDetaFormaPago.remove(index);
			}

			index= this.jTabbedPaneBusquedasDetaFormaPago.indexOfComponent(this.jPanelFK_IdTipoDetaFormaPagoDetaFormaPago);
			jPanel=(JPanel)this.jTabbedPaneBusquedasDetaFormaPago.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.detaformapagoConstantesFunciones.mostrarFK_IdTipoDetaFormaPagoDetaFormaPago);
			if(!this.detaformapagoConstantesFunciones.mostrarFK_IdTipoDetaFormaPagoDetaFormaPago && index>-1) {
				this.jTabbedPaneBusquedasDetaFormaPago.remove(index);
			}

			index= this.jTabbedPaneBusquedasDetaFormaPago.indexOfComponent(this.jPanelFK_IdTipoFormaPagoDetaFormaPago);
			jPanel=(JPanel)this.jTabbedPaneBusquedasDetaFormaPago.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.detaformapagoConstantesFunciones.mostrarFK_IdTipoFormaPagoDetaFormaPago);
			if(!this.detaformapagoConstantesFunciones.mostrarFK_IdTipoFormaPagoDetaFormaPago && index>-1) {
				this.jTabbedPaneBusquedasDetaFormaPago.remove(index);
			}

			index= this.jTabbedPaneBusquedasDetaFormaPago.indexOfComponent(this.jPanelFK_IdTipoRetencionDetaFormaPago);
			jPanel=(JPanel)this.jTabbedPaneBusquedasDetaFormaPago.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.detaformapagoConstantesFunciones.mostrarFK_IdTipoRetencionDetaFormaPago);
			if(!this.detaformapagoConstantesFunciones.mostrarFK_IdTipoRetencionDetaFormaPago && index>-1) {
				this.jTabbedPaneBusquedasDetaFormaPago.remove(index);
			}
	}	
	
	}
	
	public void updateHabilitarBusquedasFormularioDetaFormaPago() {
	
	//BYDAN_BUSQUEDAS		
		int index=0;
		JPanel jPanel=null;
			
		if(this.jTabbedPaneBusquedasDetaFormaPago.getComponents().length>0) {
	

			index= this.jTabbedPaneBusquedasDetaFormaPago.indexOfComponent(this.jPanelFK_IdCuentaContableDetaFormaPago);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasDetaFormaPago.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.detaformapagoConstantesFunciones.activarFK_IdCuentaContableDetaFormaPago);
				this.jTabbedPaneBusquedasDetaFormaPago.setEnabledAt(index,this.detaformapagoConstantesFunciones.activarFK_IdCuentaContableDetaFormaPago);
			}

			index= this.jTabbedPaneBusquedasDetaFormaPago.indexOfComponent(this.jPanelFK_IdDetaFormaPagoFactuDetaFormaPago);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasDetaFormaPago.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.detaformapagoConstantesFunciones.activarFK_IdDetaFormaPagoFactuDetaFormaPago);
				this.jTabbedPaneBusquedasDetaFormaPago.setEnabledAt(index,this.detaformapagoConstantesFunciones.activarFK_IdDetaFormaPagoFactuDetaFormaPago);
			}

			index= this.jTabbedPaneBusquedasDetaFormaPago.indexOfComponent(this.jPanelFK_IdFacturaDetaFormaPago);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasDetaFormaPago.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.detaformapagoConstantesFunciones.activarFK_IdFacturaDetaFormaPago);
				this.jTabbedPaneBusquedasDetaFormaPago.setEnabledAt(index,this.detaformapagoConstantesFunciones.activarFK_IdFacturaDetaFormaPago);
			}

			index= this.jTabbedPaneBusquedasDetaFormaPago.indexOfComponent(this.jPanelFK_IdTipoDetaFormaPagoDetaFormaPago);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasDetaFormaPago.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.detaformapagoConstantesFunciones.activarFK_IdTipoDetaFormaPagoDetaFormaPago);
				this.jTabbedPaneBusquedasDetaFormaPago.setEnabledAt(index,this.detaformapagoConstantesFunciones.activarFK_IdTipoDetaFormaPagoDetaFormaPago);
			}

			index= this.jTabbedPaneBusquedasDetaFormaPago.indexOfComponent(this.jPanelFK_IdTipoFormaPagoDetaFormaPago);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasDetaFormaPago.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.detaformapagoConstantesFunciones.activarFK_IdTipoFormaPagoDetaFormaPago);
				this.jTabbedPaneBusquedasDetaFormaPago.setEnabledAt(index,this.detaformapagoConstantesFunciones.activarFK_IdTipoFormaPagoDetaFormaPago);
			}

			index= this.jTabbedPaneBusquedasDetaFormaPago.indexOfComponent(this.jPanelFK_IdTipoRetencionDetaFormaPago);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasDetaFormaPago.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.detaformapagoConstantesFunciones.activarFK_IdTipoRetencionDetaFormaPago);
				this.jTabbedPaneBusquedasDetaFormaPago.setEnabledAt(index,this.detaformapagoConstantesFunciones.activarFK_IdTipoRetencionDetaFormaPago);
			}
		}	
	
	}
	
	
	public void resaltarPanelBusquedaDetaFormaPago(String sTipoBusqueda) {
		Boolean existe=false;
		//BYDAN_BUSQUEDAS
		
		int index=0;
		Border resaltar = Funciones2.getBorderResaltar(this.parametroGeneralUsuario,"TAB");

		if(sTipoBusqueda.equals("FK_IdCuentaContable")) {
			index= this.jTabbedPaneBusquedasDetaFormaPago.indexOfComponent(this.jPanelFK_IdCuentaContableDetaFormaPago);

			this.jTabbedPaneBusquedasDetaFormaPago.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasDetaFormaPago.getComponent(index);

			this.detaformapagoConstantesFunciones.setResaltarFK_IdCuentaContableDetaFormaPago(resaltar);

			jPanel.setBorder(this.detaformapagoConstantesFunciones.resaltarFK_IdCuentaContableDetaFormaPago);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdDetaFormaPagoFactu")) {
			index= this.jTabbedPaneBusquedasDetaFormaPago.indexOfComponent(this.jPanelFK_IdDetaFormaPagoFactuDetaFormaPago);

			this.jTabbedPaneBusquedasDetaFormaPago.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasDetaFormaPago.getComponent(index);

			this.detaformapagoConstantesFunciones.setResaltarFK_IdDetaFormaPagoFactuDetaFormaPago(resaltar);

			jPanel.setBorder(this.detaformapagoConstantesFunciones.resaltarFK_IdDetaFormaPagoFactuDetaFormaPago);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdFactura")) {
			index= this.jTabbedPaneBusquedasDetaFormaPago.indexOfComponent(this.jPanelFK_IdFacturaDetaFormaPago);

			this.jTabbedPaneBusquedasDetaFormaPago.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasDetaFormaPago.getComponent(index);

			this.detaformapagoConstantesFunciones.setResaltarFK_IdFacturaDetaFormaPago(resaltar);

			jPanel.setBorder(this.detaformapagoConstantesFunciones.resaltarFK_IdFacturaDetaFormaPago);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdTipoDetaFormaPago")) {
			index= this.jTabbedPaneBusquedasDetaFormaPago.indexOfComponent(this.jPanelFK_IdTipoDetaFormaPagoDetaFormaPago);

			this.jTabbedPaneBusquedasDetaFormaPago.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasDetaFormaPago.getComponent(index);

			this.detaformapagoConstantesFunciones.setResaltarFK_IdTipoDetaFormaPagoDetaFormaPago(resaltar);

			jPanel.setBorder(this.detaformapagoConstantesFunciones.resaltarFK_IdTipoDetaFormaPagoDetaFormaPago);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdTipoFormaPago")) {
			index= this.jTabbedPaneBusquedasDetaFormaPago.indexOfComponent(this.jPanelFK_IdTipoFormaPagoDetaFormaPago);

			this.jTabbedPaneBusquedasDetaFormaPago.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasDetaFormaPago.getComponent(index);

			this.detaformapagoConstantesFunciones.setResaltarFK_IdTipoFormaPagoDetaFormaPago(resaltar);

			jPanel.setBorder(this.detaformapagoConstantesFunciones.resaltarFK_IdTipoFormaPagoDetaFormaPago);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdTipoRetencion")) {
			index= this.jTabbedPaneBusquedasDetaFormaPago.indexOfComponent(this.jPanelFK_IdTipoRetencionDetaFormaPago);

			this.jTabbedPaneBusquedasDetaFormaPago.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasDetaFormaPago.getComponent(index);

			this.detaformapagoConstantesFunciones.setResaltarFK_IdTipoRetencionDetaFormaPago(resaltar);

			jPanel.setBorder(this.detaformapagoConstantesFunciones.resaltarFK_IdTipoRetencionDetaFormaPago);
			existe=true;
		}
		

		if(existe) {
			
			this.jTtoolBarDetaFormaPago.setBorder(resaltar);
			
		}
	}	
	
	//NO FUNCIONA
	public void windowClosed(WindowEvent e) {	
	}
		
	public void windowClosing(WindowEvent e) {	    	    
	}

	public void windowOpened(WindowEvent e) {	    
	}

	public void windowIconified(WindowEvent e) {	    
	}

	public void windowDeiconified(WindowEvent e) {	    
	}

	public void windowActivated(WindowEvent e) {	    
	}

	public void windowDeactivated(WindowEvent e) {	    
	}

	public void windowGainedFocus(WindowEvent e) {	    
	}

	public void windowLostFocus(WindowEvent e) {	    
	}
	
	public void updateControlesFormularioDetaFormaPago() throws Exception {

		if(this.jInternalFrameDetalleFormDetaFormaPago==null) { //if(!this.conCargarFormDetalle) {			
			this.inicializarFormDetalle();
		}
		
		this.updateBorderResaltarControlesFormularioDetaFormaPago();
		this.updateVisibilidadResaltarControlesFormularioDetaFormaPago();
		this.updateHabilitarResaltarControlesFormularioDetaFormaPago();
		
	}
	
	public void updateBorderResaltarControlesFormularioDetaFormaPago() throws Exception {
		if(this.jInternalFrameDetalleFormDetaFormaPago==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
	
		if(this.detaformapagoConstantesFunciones.resaltaridDetaFormaPago!=null && this.jInternalFrameDetalleFormDetaFormaPago!=null) {this.jInternalFrameDetalleFormDetaFormaPago.jLabelidDetaFormaPago.setBorder(this.detaformapagoConstantesFunciones.resaltaridDetaFormaPago);}
		if(this.detaformapagoConstantesFunciones.resaltarid_empresaDetaFormaPago!=null && this.jInternalFrameDetalleFormDetaFormaPago!=null) {this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_empresaDetaFormaPago.setBorder(this.detaformapagoConstantesFunciones.resaltarid_empresaDetaFormaPago);}
		if(this.detaformapagoConstantesFunciones.resaltarid_sucursalDetaFormaPago!=null && this.jInternalFrameDetalleFormDetaFormaPago!=null) {this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_sucursalDetaFormaPago.setBorder(this.detaformapagoConstantesFunciones.resaltarid_sucursalDetaFormaPago);}
		if(this.detaformapagoConstantesFunciones.resaltarid_ejercicioDetaFormaPago!=null && this.jInternalFrameDetalleFormDetaFormaPago!=null) {this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_ejercicioDetaFormaPago.setBorder(this.detaformapagoConstantesFunciones.resaltarid_ejercicioDetaFormaPago);}
		if(this.detaformapagoConstantesFunciones.resaltarid_periodoDetaFormaPago!=null && this.jInternalFrameDetalleFormDetaFormaPago!=null) {this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_periodoDetaFormaPago.setBorder(this.detaformapagoConstantesFunciones.resaltarid_periodoDetaFormaPago);}
		if(this.detaformapagoConstantesFunciones.resaltarid_facturaDetaFormaPago!=null && this.jInternalFrameDetalleFormDetaFormaPago!=null) {this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_facturaDetaFormaPago.setBorder(this.detaformapagoConstantesFunciones.resaltarid_facturaDetaFormaPago);}
		if(this.detaformapagoConstantesFunciones.resaltarid_tipo_forma_pagoDetaFormaPago!=null && this.jInternalFrameDetalleFormDetaFormaPago!=null) {this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_tipo_forma_pagoDetaFormaPago.setBorder(this.detaformapagoConstantesFunciones.resaltarid_tipo_forma_pagoDetaFormaPago);}
		if(this.detaformapagoConstantesFunciones.resaltarid_tipo_deta_forma_pagoDetaFormaPago!=null && this.jInternalFrameDetalleFormDetaFormaPago!=null) {this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_tipo_deta_forma_pagoDetaFormaPago.setBorder(this.detaformapagoConstantesFunciones.resaltarid_tipo_deta_forma_pagoDetaFormaPago);}
		if(this.detaformapagoConstantesFunciones.resaltarid_deta_forma_pago_factuDetaFormaPago!=null && this.jInternalFrameDetalleFormDetaFormaPago!=null) {this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_deta_forma_pago_factuDetaFormaPago.setBorder(this.detaformapagoConstantesFunciones.resaltarid_deta_forma_pago_factuDetaFormaPago);}
		if(this.detaformapagoConstantesFunciones.resaltarid_cuenta_contableDetaFormaPago!=null && this.jInternalFrameDetalleFormDetaFormaPago!=null) {this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_cuenta_contableDetaFormaPago.setBorder(this.detaformapagoConstantesFunciones.resaltarid_cuenta_contableDetaFormaPago);}
		if(this.detaformapagoConstantesFunciones.resaltarid_tipo_retencionDetaFormaPago!=null && this.jInternalFrameDetalleFormDetaFormaPago!=null) {this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_tipo_retencionDetaFormaPago.setBorder(this.detaformapagoConstantesFunciones.resaltarid_tipo_retencionDetaFormaPago);}
		if(this.detaformapagoConstantesFunciones.resaltarvalorDetaFormaPago!=null && this.jInternalFrameDetalleFormDetaFormaPago!=null) {this.jInternalFrameDetalleFormDetaFormaPago.jTextFieldvalorDetaFormaPago.setBorder(this.detaformapagoConstantesFunciones.resaltarvalorDetaFormaPago);}
		if(this.detaformapagoConstantesFunciones.resaltarfecha_inicialDetaFormaPago!=null && this.jInternalFrameDetalleFormDetaFormaPago!=null) {this.jInternalFrameDetalleFormDetaFormaPago.jDateChooserfecha_inicialDetaFormaPago.setBorder(this.detaformapagoConstantesFunciones.resaltarfecha_inicialDetaFormaPago);}
		if(this.detaformapagoConstantesFunciones.resaltarfecha_finalDetaFormaPago!=null && this.jInternalFrameDetalleFormDetaFormaPago!=null) {this.jInternalFrameDetalleFormDetaFormaPago.jDateChooserfecha_finalDetaFormaPago.setBorder(this.detaformapagoConstantesFunciones.resaltarfecha_finalDetaFormaPago);}
		if(this.detaformapagoConstantesFunciones.resaltarporcentajeDetaFormaPago!=null && this.jInternalFrameDetalleFormDetaFormaPago!=null) {this.jInternalFrameDetalleFormDetaFormaPago.jTextFieldporcentajeDetaFormaPago.setBorder(this.detaformapagoConstantesFunciones.resaltarporcentajeDetaFormaPago);}
		if(this.detaformapagoConstantesFunciones.resaltarretencionDetaFormaPago!=null && this.jInternalFrameDetalleFormDetaFormaPago!=null) {this.jInternalFrameDetalleFormDetaFormaPago.jTextFieldretencionDetaFormaPago.setBorder(this.detaformapagoConstantesFunciones.resaltarretencionDetaFormaPago);}
		if(this.detaformapagoConstantesFunciones.resaltarporcentaje_retencionDetaFormaPago!=null && this.jInternalFrameDetalleFormDetaFormaPago!=null) {this.jInternalFrameDetalleFormDetaFormaPago.jTextFieldporcentaje_retencionDetaFormaPago.setBorder(this.detaformapagoConstantesFunciones.resaltarporcentaje_retencionDetaFormaPago);}
		if(this.detaformapagoConstantesFunciones.resaltarbase_retencionDetaFormaPago!=null && this.jInternalFrameDetalleFormDetaFormaPago!=null) {this.jInternalFrameDetalleFormDetaFormaPago.jTextFieldbase_retencionDetaFormaPago.setBorder(this.detaformapagoConstantesFunciones.resaltarbase_retencionDetaFormaPago);}
		if(this.detaformapagoConstantesFunciones.resaltarvalor_retencionDetaFormaPago!=null && this.jInternalFrameDetalleFormDetaFormaPago!=null) {this.jInternalFrameDetalleFormDetaFormaPago.jTextFieldvalor_retencionDetaFormaPago.setBorder(this.detaformapagoConstantesFunciones.resaltarvalor_retencionDetaFormaPago);}
		if(this.detaformapagoConstantesFunciones.resaltarnumero_retencionDetaFormaPago!=null && this.jInternalFrameDetalleFormDetaFormaPago!=null) {this.jInternalFrameDetalleFormDetaFormaPago.jTextFieldnumero_retencionDetaFormaPago.setBorder(this.detaformapagoConstantesFunciones.resaltarnumero_retencionDetaFormaPago);}
		if(this.detaformapagoConstantesFunciones.resaltarnumero_diasDetaFormaPago!=null && this.jInternalFrameDetalleFormDetaFormaPago!=null) {this.jInternalFrameDetalleFormDetaFormaPago.jTextFieldnumero_diasDetaFormaPago.setBorder(this.detaformapagoConstantesFunciones.resaltarnumero_diasDetaFormaPago);}
		if(this.detaformapagoConstantesFunciones.resaltarnumero_cuotaDetaFormaPago!=null && this.jInternalFrameDetalleFormDetaFormaPago!=null) {this.jInternalFrameDetalleFormDetaFormaPago.jTextFieldnumero_cuotaDetaFormaPago.setBorder(this.detaformapagoConstantesFunciones.resaltarnumero_cuotaDetaFormaPago);}
		if(this.detaformapagoConstantesFunciones.resaltardescripcionDetaFormaPago!=null && this.jInternalFrameDetalleFormDetaFormaPago!=null) {this.jInternalFrameDetalleFormDetaFormaPago.jTextAreadescripcionDetaFormaPago.setBorder(this.detaformapagoConstantesFunciones.resaltardescripcionDetaFormaPago);}
		if(this.detaformapagoConstantesFunciones.resaltarid_anioDetaFormaPago!=null && this.jInternalFrameDetalleFormDetaFormaPago!=null) {this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_anioDetaFormaPago.setBorder(this.detaformapagoConstantesFunciones.resaltarid_anioDetaFormaPago);}
		if(this.detaformapagoConstantesFunciones.resaltarid_mesDetaFormaPago!=null && this.jInternalFrameDetalleFormDetaFormaPago!=null) {this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_mesDetaFormaPago.setBorder(this.detaformapagoConstantesFunciones.resaltarid_mesDetaFormaPago);}
	}
	
	public void updateVisibilidadResaltarControlesFormularioDetaFormaPago() throws Exception {		
		if(this.jInternalFrameDetalleFormDetaFormaPago==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
		if(this.jInternalFrameDetalleFormDetaFormaPago!=null) {
	
		//this.jInternalFrameDetalleFormDetaFormaPago.jLabelidDetaFormaPago.setVisible(this.detaformapagoConstantesFunciones.mostraridDetaFormaPago);
		this.jInternalFrameDetalleFormDetaFormaPago.jPanelidDetaFormaPago.setVisible(this.detaformapagoConstantesFunciones.mostraridDetaFormaPago);
		//this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_empresaDetaFormaPago.setVisible(this.detaformapagoConstantesFunciones.mostrarid_empresaDetaFormaPago);
		this.jInternalFrameDetalleFormDetaFormaPago.jPanelid_empresaDetaFormaPago.setVisible(this.detaformapagoConstantesFunciones.mostrarid_empresaDetaFormaPago);
		//this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_sucursalDetaFormaPago.setVisible(this.detaformapagoConstantesFunciones.mostrarid_sucursalDetaFormaPago);
		this.jInternalFrameDetalleFormDetaFormaPago.jPanelid_sucursalDetaFormaPago.setVisible(this.detaformapagoConstantesFunciones.mostrarid_sucursalDetaFormaPago);
		//this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_ejercicioDetaFormaPago.setVisible(this.detaformapagoConstantesFunciones.mostrarid_ejercicioDetaFormaPago);
		this.jInternalFrameDetalleFormDetaFormaPago.jPanelid_ejercicioDetaFormaPago.setVisible(this.detaformapagoConstantesFunciones.mostrarid_ejercicioDetaFormaPago);
		//this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_periodoDetaFormaPago.setVisible(this.detaformapagoConstantesFunciones.mostrarid_periodoDetaFormaPago);
		this.jInternalFrameDetalleFormDetaFormaPago.jPanelid_periodoDetaFormaPago.setVisible(this.detaformapagoConstantesFunciones.mostrarid_periodoDetaFormaPago);
		//this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_facturaDetaFormaPago.setVisible(this.detaformapagoConstantesFunciones.mostrarid_facturaDetaFormaPago);
		this.jInternalFrameDetalleFormDetaFormaPago.jPanelid_facturaDetaFormaPago.setVisible(this.detaformapagoConstantesFunciones.mostrarid_facturaDetaFormaPago);
			this.jInternalFrameDetalleFormDetaFormaPago.jButtonid_facturaDetaFormaPago.setVisible(this.detaformapagoConstantesFunciones.mostrarid_facturaDetaFormaPago);
		//this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_tipo_forma_pagoDetaFormaPago.setVisible(this.detaformapagoConstantesFunciones.mostrarid_tipo_forma_pagoDetaFormaPago);
		this.jInternalFrameDetalleFormDetaFormaPago.jPanelid_tipo_forma_pagoDetaFormaPago.setVisible(this.detaformapagoConstantesFunciones.mostrarid_tipo_forma_pagoDetaFormaPago);
		//this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_tipo_deta_forma_pagoDetaFormaPago.setVisible(this.detaformapagoConstantesFunciones.mostrarid_tipo_deta_forma_pagoDetaFormaPago);
		this.jInternalFrameDetalleFormDetaFormaPago.jPanelid_tipo_deta_forma_pagoDetaFormaPago.setVisible(this.detaformapagoConstantesFunciones.mostrarid_tipo_deta_forma_pagoDetaFormaPago);
		//this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_deta_forma_pago_factuDetaFormaPago.setVisible(this.detaformapagoConstantesFunciones.mostrarid_deta_forma_pago_factuDetaFormaPago);
		this.jInternalFrameDetalleFormDetaFormaPago.jPanelid_deta_forma_pago_factuDetaFormaPago.setVisible(this.detaformapagoConstantesFunciones.mostrarid_deta_forma_pago_factuDetaFormaPago);
		//this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_cuenta_contableDetaFormaPago.setVisible(this.detaformapagoConstantesFunciones.mostrarid_cuenta_contableDetaFormaPago);
		this.jInternalFrameDetalleFormDetaFormaPago.jPanelid_cuenta_contableDetaFormaPago.setVisible(this.detaformapagoConstantesFunciones.mostrarid_cuenta_contableDetaFormaPago);
			this.jInternalFrameDetalleFormDetaFormaPago.jButtonid_cuenta_contableDetaFormaPago.setVisible(this.detaformapagoConstantesFunciones.mostrarid_cuenta_contableDetaFormaPago);
		//this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_tipo_retencionDetaFormaPago.setVisible(this.detaformapagoConstantesFunciones.mostrarid_tipo_retencionDetaFormaPago);
		this.jInternalFrameDetalleFormDetaFormaPago.jPanelid_tipo_retencionDetaFormaPago.setVisible(this.detaformapagoConstantesFunciones.mostrarid_tipo_retencionDetaFormaPago);
		//this.jInternalFrameDetalleFormDetaFormaPago.jTextFieldvalorDetaFormaPago.setVisible(this.detaformapagoConstantesFunciones.mostrarvalorDetaFormaPago);
		this.jInternalFrameDetalleFormDetaFormaPago.jPanelvalorDetaFormaPago.setVisible(this.detaformapagoConstantesFunciones.mostrarvalorDetaFormaPago);
		//this.jInternalFrameDetalleFormDetaFormaPago.jDateChooserfecha_inicialDetaFormaPago.setVisible(this.detaformapagoConstantesFunciones.mostrarfecha_inicialDetaFormaPago);
		this.jInternalFrameDetalleFormDetaFormaPago.jPanelfecha_inicialDetaFormaPago.setVisible(this.detaformapagoConstantesFunciones.mostrarfecha_inicialDetaFormaPago);
		//this.jInternalFrameDetalleFormDetaFormaPago.jDateChooserfecha_finalDetaFormaPago.setVisible(this.detaformapagoConstantesFunciones.mostrarfecha_finalDetaFormaPago);
		this.jInternalFrameDetalleFormDetaFormaPago.jPanelfecha_finalDetaFormaPago.setVisible(this.detaformapagoConstantesFunciones.mostrarfecha_finalDetaFormaPago);
		//this.jInternalFrameDetalleFormDetaFormaPago.jTextFieldporcentajeDetaFormaPago.setVisible(this.detaformapagoConstantesFunciones.mostrarporcentajeDetaFormaPago);
		this.jInternalFrameDetalleFormDetaFormaPago.jPanelporcentajeDetaFormaPago.setVisible(this.detaformapagoConstantesFunciones.mostrarporcentajeDetaFormaPago);
		//this.jInternalFrameDetalleFormDetaFormaPago.jTextFieldretencionDetaFormaPago.setVisible(this.detaformapagoConstantesFunciones.mostrarretencionDetaFormaPago);
		this.jInternalFrameDetalleFormDetaFormaPago.jPanelretencionDetaFormaPago.setVisible(this.detaformapagoConstantesFunciones.mostrarretencionDetaFormaPago);
		//this.jInternalFrameDetalleFormDetaFormaPago.jTextFieldporcentaje_retencionDetaFormaPago.setVisible(this.detaformapagoConstantesFunciones.mostrarporcentaje_retencionDetaFormaPago);
		this.jInternalFrameDetalleFormDetaFormaPago.jPanelporcentaje_retencionDetaFormaPago.setVisible(this.detaformapagoConstantesFunciones.mostrarporcentaje_retencionDetaFormaPago);
		//this.jInternalFrameDetalleFormDetaFormaPago.jTextFieldbase_retencionDetaFormaPago.setVisible(this.detaformapagoConstantesFunciones.mostrarbase_retencionDetaFormaPago);
		this.jInternalFrameDetalleFormDetaFormaPago.jPanelbase_retencionDetaFormaPago.setVisible(this.detaformapagoConstantesFunciones.mostrarbase_retencionDetaFormaPago);
		//this.jInternalFrameDetalleFormDetaFormaPago.jTextFieldvalor_retencionDetaFormaPago.setVisible(this.detaformapagoConstantesFunciones.mostrarvalor_retencionDetaFormaPago);
		this.jInternalFrameDetalleFormDetaFormaPago.jPanelvalor_retencionDetaFormaPago.setVisible(this.detaformapagoConstantesFunciones.mostrarvalor_retencionDetaFormaPago);
		//this.jInternalFrameDetalleFormDetaFormaPago.jTextFieldnumero_retencionDetaFormaPago.setVisible(this.detaformapagoConstantesFunciones.mostrarnumero_retencionDetaFormaPago);
		this.jInternalFrameDetalleFormDetaFormaPago.jPanelnumero_retencionDetaFormaPago.setVisible(this.detaformapagoConstantesFunciones.mostrarnumero_retencionDetaFormaPago);
		//this.jInternalFrameDetalleFormDetaFormaPago.jTextFieldnumero_diasDetaFormaPago.setVisible(this.detaformapagoConstantesFunciones.mostrarnumero_diasDetaFormaPago);
		this.jInternalFrameDetalleFormDetaFormaPago.jPanelnumero_diasDetaFormaPago.setVisible(this.detaformapagoConstantesFunciones.mostrarnumero_diasDetaFormaPago);
		//this.jInternalFrameDetalleFormDetaFormaPago.jTextFieldnumero_cuotaDetaFormaPago.setVisible(this.detaformapagoConstantesFunciones.mostrarnumero_cuotaDetaFormaPago);
		this.jInternalFrameDetalleFormDetaFormaPago.jPanelnumero_cuotaDetaFormaPago.setVisible(this.detaformapagoConstantesFunciones.mostrarnumero_cuotaDetaFormaPago);
		//this.jInternalFrameDetalleFormDetaFormaPago.jTextAreadescripcionDetaFormaPago.setVisible(this.detaformapagoConstantesFunciones.mostrardescripcionDetaFormaPago);
		this.jInternalFrameDetalleFormDetaFormaPago.jPaneldescripcionDetaFormaPago.setVisible(this.detaformapagoConstantesFunciones.mostrardescripcionDetaFormaPago);
		//this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_anioDetaFormaPago.setVisible(this.detaformapagoConstantesFunciones.mostrarid_anioDetaFormaPago);
		this.jInternalFrameDetalleFormDetaFormaPago.jPanelid_anioDetaFormaPago.setVisible(this.detaformapagoConstantesFunciones.mostrarid_anioDetaFormaPago);
		//this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_mesDetaFormaPago.setVisible(this.detaformapagoConstantesFunciones.mostrarid_mesDetaFormaPago);
		this.jInternalFrameDetalleFormDetaFormaPago.jPanelid_mesDetaFormaPago.setVisible(this.detaformapagoConstantesFunciones.mostrarid_mesDetaFormaPago);
		}
	}
	
	public void updateHabilitarResaltarControlesFormularioDetaFormaPago() throws Exception {
		if(this.jInternalFrameDetalleFormDetaFormaPago==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
		if(this.jInternalFrameDetalleFormDetaFormaPago!=null) {
	
		this.jInternalFrameDetalleFormDetaFormaPago.jLabelidDetaFormaPago.setEnabled(this.detaformapagoConstantesFunciones.activaridDetaFormaPago);
		this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_empresaDetaFormaPago.setEnabled(this.detaformapagoConstantesFunciones.activarid_empresaDetaFormaPago);
		this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_sucursalDetaFormaPago.setEnabled(this.detaformapagoConstantesFunciones.activarid_sucursalDetaFormaPago);
		this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_ejercicioDetaFormaPago.setEnabled(this.detaformapagoConstantesFunciones.activarid_ejercicioDetaFormaPago);
		this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_periodoDetaFormaPago.setEnabled(this.detaformapagoConstantesFunciones.activarid_periodoDetaFormaPago);
		this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_facturaDetaFormaPago.setEnabled(this.detaformapagoConstantesFunciones.activarid_facturaDetaFormaPago);
			this.jInternalFrameDetalleFormDetaFormaPago.jButtonid_facturaDetaFormaPago.setEnabled(this.detaformapagoConstantesFunciones.activarid_facturaDetaFormaPago);
		this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_tipo_forma_pagoDetaFormaPago.setEnabled(this.detaformapagoConstantesFunciones.activarid_tipo_forma_pagoDetaFormaPago);
		this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_tipo_deta_forma_pagoDetaFormaPago.setEnabled(this.detaformapagoConstantesFunciones.activarid_tipo_deta_forma_pagoDetaFormaPago);
		this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_deta_forma_pago_factuDetaFormaPago.setEnabled(this.detaformapagoConstantesFunciones.activarid_deta_forma_pago_factuDetaFormaPago);
		this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_cuenta_contableDetaFormaPago.setEnabled(this.detaformapagoConstantesFunciones.activarid_cuenta_contableDetaFormaPago);
			this.jInternalFrameDetalleFormDetaFormaPago.jButtonid_cuenta_contableDetaFormaPago.setEnabled(this.detaformapagoConstantesFunciones.activarid_cuenta_contableDetaFormaPago);
		this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_tipo_retencionDetaFormaPago.setEnabled(this.detaformapagoConstantesFunciones.activarid_tipo_retencionDetaFormaPago);
		this.jInternalFrameDetalleFormDetaFormaPago.jTextFieldvalorDetaFormaPago.setEnabled(this.detaformapagoConstantesFunciones.activarvalorDetaFormaPago);
		this.jInternalFrameDetalleFormDetaFormaPago.jDateChooserfecha_inicialDetaFormaPago.setEnabled(this.detaformapagoConstantesFunciones.activarfecha_inicialDetaFormaPago);
		this.jInternalFrameDetalleFormDetaFormaPago.jDateChooserfecha_finalDetaFormaPago.setEnabled(this.detaformapagoConstantesFunciones.activarfecha_finalDetaFormaPago);
		this.jInternalFrameDetalleFormDetaFormaPago.jTextFieldporcentajeDetaFormaPago.setEnabled(this.detaformapagoConstantesFunciones.activarporcentajeDetaFormaPago);
		this.jInternalFrameDetalleFormDetaFormaPago.jTextFieldretencionDetaFormaPago.setEnabled(this.detaformapagoConstantesFunciones.activarretencionDetaFormaPago);
		this.jInternalFrameDetalleFormDetaFormaPago.jTextFieldporcentaje_retencionDetaFormaPago.setEnabled(this.detaformapagoConstantesFunciones.activarporcentaje_retencionDetaFormaPago);
		this.jInternalFrameDetalleFormDetaFormaPago.jTextFieldbase_retencionDetaFormaPago.setEnabled(this.detaformapagoConstantesFunciones.activarbase_retencionDetaFormaPago);
		this.jInternalFrameDetalleFormDetaFormaPago.jTextFieldvalor_retencionDetaFormaPago.setEnabled(this.detaformapagoConstantesFunciones.activarvalor_retencionDetaFormaPago);
		this.jInternalFrameDetalleFormDetaFormaPago.jTextFieldnumero_retencionDetaFormaPago.setEnabled(this.detaformapagoConstantesFunciones.activarnumero_retencionDetaFormaPago);
		this.jInternalFrameDetalleFormDetaFormaPago.jTextFieldnumero_diasDetaFormaPago.setEnabled(this.detaformapagoConstantesFunciones.activarnumero_diasDetaFormaPago);
		this.jInternalFrameDetalleFormDetaFormaPago.jTextFieldnumero_cuotaDetaFormaPago.setEnabled(this.detaformapagoConstantesFunciones.activarnumero_cuotaDetaFormaPago);
		this.jInternalFrameDetalleFormDetaFormaPago.jTextAreadescripcionDetaFormaPago.setEnabled(this.detaformapagoConstantesFunciones.activardescripcionDetaFormaPago);
		this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_anioDetaFormaPago.setEnabled(this.detaformapagoConstantesFunciones.activarid_anioDetaFormaPago);
		this.jInternalFrameDetalleFormDetaFormaPago.jComboBoxid_mesDetaFormaPago.setEnabled(this.detaformapagoConstantesFunciones.activarid_mesDetaFormaPago);
		}
	}
	
		
}